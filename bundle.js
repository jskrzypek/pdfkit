(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){

},{}],2:[function(require,module,exports){
// http://wiki.commonjs.org/wiki/Unit_Testing/1.0
//
// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!
//
// Originally from narwhal.js (http://narwhaljs.org)
// Copyright (c) 2009 Thomas Robinson <280north.com>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the 'Software'), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

// when used in node, this will actually load the util module we depend on
// versus loading the builtin util module as happens otherwise
// this is a bug in node module loading as far as I am concerned
var util = require('util/');

var pSlice = Array.prototype.slice;
var hasOwn = Object.prototype.hasOwnProperty;

// 1. The assert module provides functions that throw
// AssertionError's when particular conditions are not met. The
// assert module must conform to the following interface.

var assert = module.exports = ok;

// 2. The AssertionError is defined in assert.
// new assert.AssertionError({ message: message,
//                             actual: actual,
//                             expected: expected })

assert.AssertionError = function AssertionError(options) {
  this.name = 'AssertionError';
  this.actual = options.actual;
  this.expected = options.expected;
  this.operator = options.operator;
  if (options.message) {
    this.message = options.message;
    this.generatedMessage = false;
  } else {
    this.message = getMessage(this);
    this.generatedMessage = true;
  }
  var stackStartFunction = options.stackStartFunction || fail;

  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, stackStartFunction);
  }
  else {
    // non v8 browsers so we can have a stacktrace
    var err = new Error();
    if (err.stack) {
      var out = err.stack;

      // try to strip useless frames
      var fn_name = stackStartFunction.name;
      var idx = out.indexOf('\n' + fn_name);
      if (idx >= 0) {
        // once we have located the function frame
        // we need to strip out everything before it (and its line)
        var next_line = out.indexOf('\n', idx + 1);
        out = out.substring(next_line + 1);
      }

      this.stack = out;
    }
  }
};

// assert.AssertionError instanceof Error
util.inherits(assert.AssertionError, Error);

function replacer(key, value) {
  if (util.isUndefined(value)) {
    return '' + value;
  }
  if (util.isNumber(value) && !isFinite(value)) {
    return value.toString();
  }
  if (util.isFunction(value) || util.isRegExp(value)) {
    return value.toString();
  }
  return value;
}

function truncate(s, n) {
  if (util.isString(s)) {
    return s.length < n ? s : s.slice(0, n);
  } else {
    return s;
  }
}

function getMessage(self) {
  return truncate(JSON.stringify(self.actual, replacer), 128) + ' ' +
         self.operator + ' ' +
         truncate(JSON.stringify(self.expected, replacer), 128);
}

// At present only the three keys mentioned above are used and
// understood by the spec. Implementations or sub modules can pass
// other keys to the AssertionError's constructor - they will be
// ignored.

// 3. All of the following functions must throw an AssertionError
// when a corresponding condition is not met, with a message that
// may be undefined if not provided.  All assertion methods provide
// both the actual and expected values to the assertion error for
// display purposes.

function fail(actual, expected, message, operator, stackStartFunction) {
  throw new assert.AssertionError({
    message: message,
    actual: actual,
    expected: expected,
    operator: operator,
    stackStartFunction: stackStartFunction
  });
}

// EXTENSION! allows for well behaved errors defined elsewhere.
assert.fail = fail;

// 4. Pure assertion tests whether a value is truthy, as determined
// by !!guard.
// assert.ok(guard, message_opt);
// This statement is equivalent to assert.equal(true, !!guard,
// message_opt);. To test strictly for the value true, use
// assert.strictEqual(true, guard, message_opt);.

function ok(value, message) {
  if (!value) fail(value, true, message, '==', assert.ok);
}
assert.ok = ok;

// 5. The equality assertion tests shallow, coercive equality with
// ==.
// assert.equal(actual, expected, message_opt);

assert.equal = function equal(actual, expected, message) {
  if (actual != expected) fail(actual, expected, message, '==', assert.equal);
};

// 6. The non-equality assertion tests for whether two objects are not equal
// with != assert.notEqual(actual, expected, message_opt);

assert.notEqual = function notEqual(actual, expected, message) {
  if (actual == expected) {
    fail(actual, expected, message, '!=', assert.notEqual);
  }
};

// 7. The equivalence assertion tests a deep equality relation.
// assert.deepEqual(actual, expected, message_opt);

assert.deepEqual = function deepEqual(actual, expected, message) {
  if (!_deepEqual(actual, expected)) {
    fail(actual, expected, message, 'deepEqual', assert.deepEqual);
  }
};

function _deepEqual(actual, expected) {
  // 7.1. All identical values are equivalent, as determined by ===.
  if (actual === expected) {
    return true;

  } else if (util.isBuffer(actual) && util.isBuffer(expected)) {
    if (actual.length != expected.length) return false;

    for (var i = 0; i < actual.length; i++) {
      if (actual[i] !== expected[i]) return false;
    }

    return true;

  // 7.2. If the expected value is a Date object, the actual value is
  // equivalent if it is also a Date object that refers to the same time.
  } else if (util.isDate(actual) && util.isDate(expected)) {
    return actual.getTime() === expected.getTime();

  // 7.3 If the expected value is a RegExp object, the actual value is
  // equivalent if it is also a RegExp object with the same source and
  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).
  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {
    return actual.source === expected.source &&
           actual.global === expected.global &&
           actual.multiline === expected.multiline &&
           actual.lastIndex === expected.lastIndex &&
           actual.ignoreCase === expected.ignoreCase;

  // 7.4. Other pairs that do not both pass typeof value == 'object',
  // equivalence is determined by ==.
  } else if (!util.isObject(actual) && !util.isObject(expected)) {
    return actual == expected;

  // 7.5 For all other Object pairs, including Array objects, equivalence is
  // determined by having the same number of owned properties (as verified
  // with Object.prototype.hasOwnProperty.call), the same set of keys
  // (although not necessarily the same order), equivalent values for every
  // corresponding key, and an identical 'prototype' property. Note: this
  // accounts for both named and indexed properties on Arrays.
  } else {
    return objEquiv(actual, expected);
  }
}

function isArguments(object) {
  return Object.prototype.toString.call(object) == '[object Arguments]';
}

function objEquiv(a, b) {
  if (util.isNullOrUndefined(a) || util.isNullOrUndefined(b))
    return false;
  // an identical 'prototype' property.
  if (a.prototype !== b.prototype) return false;
  // if one is a primitive, the other must be same
  if (util.isPrimitive(a) || util.isPrimitive(b)) {
    return a === b;
  }
  var aIsArgs = isArguments(a),
      bIsArgs = isArguments(b);
  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))
    return false;
  if (aIsArgs) {
    a = pSlice.call(a);
    b = pSlice.call(b);
    return _deepEqual(a, b);
  }
  var ka = objectKeys(a),
      kb = objectKeys(b),
      key, i;
  // having the same number of owned properties (keys incorporates
  // hasOwnProperty)
  if (ka.length != kb.length)
    return false;
  //the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  //~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] != kb[i])
      return false;
  }
  //equivalent values for every corresponding key, and
  //~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!_deepEqual(a[key], b[key])) return false;
  }
  return true;
}

// 8. The non-equivalence assertion tests for any deep inequality.
// assert.notDeepEqual(actual, expected, message_opt);

assert.notDeepEqual = function notDeepEqual(actual, expected, message) {
  if (_deepEqual(actual, expected)) {
    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);
  }
};

// 9. The strict equality assertion tests strict equality, as determined by ===.
// assert.strictEqual(actual, expected, message_opt);

assert.strictEqual = function strictEqual(actual, expected, message) {
  if (actual !== expected) {
    fail(actual, expected, message, '===', assert.strictEqual);
  }
};

// 10. The strict non-equality assertion tests for strict inequality, as
// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);

assert.notStrictEqual = function notStrictEqual(actual, expected, message) {
  if (actual === expected) {
    fail(actual, expected, message, '!==', assert.notStrictEqual);
  }
};

function expectedException(actual, expected) {
  if (!actual || !expected) {
    return false;
  }

  if (Object.prototype.toString.call(expected) == '[object RegExp]') {
    return expected.test(actual);
  } else if (actual instanceof expected) {
    return true;
  } else if (expected.call({}, actual) === true) {
    return true;
  }

  return false;
}

function _throws(shouldThrow, block, expected, message) {
  var actual;

  if (util.isString(expected)) {
    message = expected;
    expected = null;
  }

  try {
    block();
  } catch (e) {
    actual = e;
  }

  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +
            (message ? ' ' + message : '.');

  if (shouldThrow && !actual) {
    fail(actual, expected, 'Missing expected exception' + message);
  }

  if (!shouldThrow && expectedException(actual, expected)) {
    fail(actual, expected, 'Got unwanted exception' + message);
  }

  if ((shouldThrow && actual && expected &&
      !expectedException(actual, expected)) || (!shouldThrow && actual)) {
    throw actual;
  }
}

// 11. Expected to throw an error:
// assert.throws(block, Error_opt, message_opt);

assert.throws = function(block, /*optional*/error, /*optional*/message) {
  _throws.apply(this, [true].concat(pSlice.call(arguments)));
};

// EXTENSION! This is annoying to write outside this module.
assert.doesNotThrow = function(block, /*optional*/message) {
  _throws.apply(this, [false].concat(pSlice.call(arguments)));
};

assert.ifError = function(err) { if (err) {throw err;}};

var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    if (hasOwn.call(obj, key)) keys.push(key);
  }
  return keys;
};

},{"util/":40}],3:[function(require,module,exports){
arguments[4][1][0].apply(exports,arguments)
},{"dup":1}],4:[function(require,module,exports){
'use strict';


var TYPED_OK =  (typeof Uint8Array !== 'undefined') &&
                (typeof Uint16Array !== 'undefined') &&
                (typeof Int32Array !== 'undefined');


exports.assign = function (obj /*from1, from2, from3, ...*/) {
  var sources = Array.prototype.slice.call(arguments, 1);
  while (sources.length) {
    var source = sources.shift();
    if (!source) { continue; }

    if (typeof source !== 'object') {
      throw new TypeError(source + 'must be non-object');
    }

    for (var p in source) {
      if (source.hasOwnProperty(p)) {
        obj[p] = source[p];
      }
    }
  }

  return obj;
};


// reduce buffer size, avoiding mem copy
exports.shrinkBuf = function (buf, size) {
  if (buf.length === size) { return buf; }
  if (buf.subarray) { return buf.subarray(0, size); }
  buf.length = size;
  return buf;
};


var fnTyped = {
  arraySet: function (dest, src, src_offs, len, dest_offs) {
    if (src.subarray && dest.subarray) {
      dest.set(src.subarray(src_offs, src_offs+len), dest_offs);
      return;
    }
    // Fallback to ordinary array
    for (var i=0; i<len; i++) {
      dest[dest_offs + i] = src[src_offs + i];
    }
  },
  // Join array of chunks to single array.
  flattenChunks: function(chunks) {
    var i, l, len, pos, chunk, result;

    // calculate data length
    len = 0;
    for (i=0, l=chunks.length; i<l; i++) {
      len += chunks[i].length;
    }

    // join chunks
    result = new Uint8Array(len);
    pos = 0;
    for (i=0, l=chunks.length; i<l; i++) {
      chunk = chunks[i];
      result.set(chunk, pos);
      pos += chunk.length;
    }

    return result;
  }
};

var fnUntyped = {
  arraySet: function (dest, src, src_offs, len, dest_offs) {
    for (var i=0; i<len; i++) {
      dest[dest_offs + i] = src[src_offs + i];
    }
  },
  // Join array of chunks to single array.
  flattenChunks: function(chunks) {
    return [].concat.apply([], chunks);
  }
};


// Enable/Disable typed arrays use, for testing
//
exports.setTyped = function (on) {
  if (on) {
    exports.Buf8  = Uint8Array;
    exports.Buf16 = Uint16Array;
    exports.Buf32 = Int32Array;
    exports.assign(exports, fnTyped);
  } else {
    exports.Buf8  = Array;
    exports.Buf16 = Array;
    exports.Buf32 = Array;
    exports.assign(exports, fnUntyped);
  }
};

exports.setTyped(TYPED_OK);

},{}],5:[function(require,module,exports){
'use strict';

// Note: adler32 takes 12% for level 0 and 2% for level 6.
// It doesn't worth to make additional optimizationa as in original.
// Small size is preferable.

function adler32(adler, buf, len, pos) {
  var s1 = (adler & 0xffff) |0,
      s2 = ((adler >>> 16) & 0xffff) |0,
      n = 0;

  while (len !== 0) {
    // Set limit ~ twice less than 5552, to keep
    // s2 in 31-bits, because we force signed ints.
    // in other case %= will fail.
    n = len > 2000 ? 2000 : len;
    len -= n;

    do {
      s1 = (s1 + buf[pos++]) |0;
      s2 = (s2 + s1) |0;
    } while (--n);

    s1 %= 65521;
    s2 %= 65521;
  }

  return (s1 | (s2 << 16)) |0;
}


module.exports = adler32;

},{}],6:[function(require,module,exports){
module.exports = {

  /* Allowed flush values; see deflate() and inflate() below for details */
  Z_NO_FLUSH:         0,
  Z_PARTIAL_FLUSH:    1,
  Z_SYNC_FLUSH:       2,
  Z_FULL_FLUSH:       3,
  Z_FINISH:           4,
  Z_BLOCK:            5,
  Z_TREES:            6,

  /* Return codes for the compression/decompression functions. Negative values
  * are errors, positive values are used for special but normal events.
  */
  Z_OK:               0,
  Z_STREAM_END:       1,
  Z_NEED_DICT:        2,
  Z_ERRNO:           -1,
  Z_STREAM_ERROR:    -2,
  Z_DATA_ERROR:      -3,
  //Z_MEM_ERROR:     -4,
  Z_BUF_ERROR:       -5,
  //Z_VERSION_ERROR: -6,

  /* compression levels */
  Z_NO_COMPRESSION:         0,
  Z_BEST_SPEED:             1,
  Z_BEST_COMPRESSION:       9,
  Z_DEFAULT_COMPRESSION:   -1,


  Z_FILTERED:               1,
  Z_HUFFMAN_ONLY:           2,
  Z_RLE:                    3,
  Z_FIXED:                  4,
  Z_DEFAULT_STRATEGY:       0,

  /* Possible values of the data_type field (though see inflate()) */
  Z_BINARY:                 0,
  Z_TEXT:                   1,
  //Z_ASCII:                1, // = Z_TEXT (deprecated)
  Z_UNKNOWN:                2,

  /* The deflate compression method */
  Z_DEFLATED:               8
  //Z_NULL:                 null // Use -1 or null inline, depending on var type
};

},{}],7:[function(require,module,exports){
'use strict';

// Note: we can't get significant speed boost here.
// So write code to minimize size - no pregenerated tables
// and array tools dependencies.


// Use ordinary array, since untyped makes no boost here
function makeTable() {
  var c, table = [];

  for (var n =0; n < 256; n++) {
    c = n;
    for (var k =0; k < 8; k++) {
      c = ((c&1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));
    }
    table[n] = c;
  }

  return table;
}

// Create table on load. Just 255 signed longs. Not a problem.
var crcTable = makeTable();


function crc32(crc, buf, len, pos) {
  var t = crcTable,
      end = pos + len;

  crc = crc ^ (-1);

  for (var i = pos; i < end; i++) {
    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];
  }

  return (crc ^ (-1)); // >>> 0;
}


module.exports = crc32;

},{}],8:[function(require,module,exports){
'use strict';

var utils   = require('../utils/common');
var trees   = require('./trees');
var adler32 = require('./adler32');
var crc32   = require('./crc32');
var msg   = require('./messages');

/* Public constants ==========================================================*/
/* ===========================================================================*/


/* Allowed flush values; see deflate() and inflate() below for details */
var Z_NO_FLUSH      = 0;
var Z_PARTIAL_FLUSH = 1;
//var Z_SYNC_FLUSH    = 2;
var Z_FULL_FLUSH    = 3;
var Z_FINISH        = 4;
var Z_BLOCK         = 5;
//var Z_TREES         = 6;


/* Return codes for the compression/decompression functions. Negative values
 * are errors, positive values are used for special but normal events.
 */
var Z_OK            = 0;
var Z_STREAM_END    = 1;
//var Z_NEED_DICT     = 2;
//var Z_ERRNO         = -1;
var Z_STREAM_ERROR  = -2;
var Z_DATA_ERROR    = -3;
//var Z_MEM_ERROR     = -4;
var Z_BUF_ERROR     = -5;
//var Z_VERSION_ERROR = -6;


/* compression levels */
//var Z_NO_COMPRESSION      = 0;
//var Z_BEST_SPEED          = 1;
//var Z_BEST_COMPRESSION    = 9;
var Z_DEFAULT_COMPRESSION = -1;


var Z_FILTERED            = 1;
var Z_HUFFMAN_ONLY        = 2;
var Z_RLE                 = 3;
var Z_FIXED               = 4;
var Z_DEFAULT_STRATEGY    = 0;

/* Possible values of the data_type field (though see inflate()) */
//var Z_BINARY              = 0;
//var Z_TEXT                = 1;
//var Z_ASCII               = 1; // = Z_TEXT
var Z_UNKNOWN             = 2;


/* The deflate compression method */
var Z_DEFLATED  = 8;

/*============================================================================*/


var MAX_MEM_LEVEL = 9;
/* Maximum value for memLevel in deflateInit2 */
var MAX_WBITS = 15;
/* 32K LZ77 window */
var DEF_MEM_LEVEL = 8;


var LENGTH_CODES  = 29;
/* number of length codes, not counting the special END_BLOCK code */
var LITERALS      = 256;
/* number of literal bytes 0..255 */
var L_CODES       = LITERALS + 1 + LENGTH_CODES;
/* number of Literal or Length codes, including the END_BLOCK code */
var D_CODES       = 30;
/* number of distance codes */
var BL_CODES      = 19;
/* number of codes used to transfer the bit lengths */
var HEAP_SIZE     = 2*L_CODES + 1;
/* maximum heap size */
var MAX_BITS  = 15;
/* All codes must not exceed MAX_BITS bits */

var MIN_MATCH = 3;
var MAX_MATCH = 258;
var MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);

var PRESET_DICT = 0x20;

var INIT_STATE = 42;
var EXTRA_STATE = 69;
var NAME_STATE = 73;
var COMMENT_STATE = 91;
var HCRC_STATE = 103;
var BUSY_STATE = 113;
var FINISH_STATE = 666;

var BS_NEED_MORE      = 1; /* block not completed, need more input or more output */
var BS_BLOCK_DONE     = 2; /* block flush performed */
var BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */
var BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */

var OS_CODE = 0x03; // Unix :) . Don't detect, use this default.

function err(strm, errorCode) {
  strm.msg = msg[errorCode];
  return errorCode;
}

function rank(f) {
  return ((f) << 1) - ((f) > 4 ? 9 : 0);
}

function zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }


/* =========================================================================
 * Flush as much pending output as possible. All deflate() output goes
 * through this function so some applications may wish to modify it
 * to avoid allocating a large strm->output buffer and copying into it.
 * (See also read_buf()).
 */
function flush_pending(strm) {
  var s = strm.state;

  //_tr_flush_bits(s);
  var len = s.pending;
  if (len > strm.avail_out) {
    len = strm.avail_out;
  }
  if (len === 0) { return; }

  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);
  strm.next_out += len;
  s.pending_out += len;
  strm.total_out += len;
  strm.avail_out -= len;
  s.pending -= len;
  if (s.pending === 0) {
    s.pending_out = 0;
  }
}


function flush_block_only (s, last) {
  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);
  s.block_start = s.strstart;
  flush_pending(s.strm);
}


function put_byte(s, b) {
  s.pending_buf[s.pending++] = b;
}


/* =========================================================================
 * Put a short in the pending buffer. The 16-bit value is put in MSB order.
 * IN assertion: the stream state is correct and there is enough room in
 * pending_buf.
 */
function putShortMSB(s, b) {
//  put_byte(s, (Byte)(b >> 8));
//  put_byte(s, (Byte)(b & 0xff));
  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;
  s.pending_buf[s.pending++] = b & 0xff;
}


/* ===========================================================================
 * Read a new buffer from the current input stream, update the adler32
 * and total number of bytes read.  All deflate() input goes through
 * this function so some applications may wish to modify it to avoid
 * allocating a large strm->input buffer and copying from it.
 * (See also flush_pending()).
 */
function read_buf(strm, buf, start, size) {
  var len = strm.avail_in;

  if (len > size) { len = size; }
  if (len === 0) { return 0; }

  strm.avail_in -= len;

  utils.arraySet(buf, strm.input, strm.next_in, len, start);
  if (strm.state.wrap === 1) {
    strm.adler = adler32(strm.adler, buf, len, start);
  }

  else if (strm.state.wrap === 2) {
    strm.adler = crc32(strm.adler, buf, len, start);
  }

  strm.next_in += len;
  strm.total_in += len;

  return len;
}


/* ===========================================================================
 * Set match_start to the longest match starting at the given string and
 * return its length. Matches shorter or equal to prev_length are discarded,
 * in which case the result is equal to prev_length and match_start is
 * garbage.
 * IN assertions: cur_match is the head of the hash chain for the current
 *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1
 * OUT assertion: the match length is not greater than s->lookahead.
 */
function longest_match(s, cur_match) {
  var chain_length = s.max_chain_length;      /* max hash chain length */
  var scan = s.strstart; /* current string */
  var match;                       /* matched string */
  var len;                           /* length of current match */
  var best_len = s.prev_length;              /* best match length so far */
  var nice_match = s.nice_match;             /* stop if match long enough */
  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?
      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;

  var _win = s.window; // shortcut

  var wmask = s.w_mask;
  var prev  = s.prev;

  /* Stop when cur_match becomes <= limit. To simplify the code,
   * we prevent matches with the string of window index 0.
   */

  var strend = s.strstart + MAX_MATCH;
  var scan_end1  = _win[scan + best_len - 1];
  var scan_end   = _win[scan + best_len];

  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.
   * It is easy to get rid of this optimization if necessary.
   */
  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");

  /* Do not waste too much time if we already have a good match: */
  if (s.prev_length >= s.good_match) {
    chain_length >>= 2;
  }
  /* Do not look for matches beyond the end of the input. This is necessary
   * to make deflate deterministic.
   */
  if (nice_match > s.lookahead) { nice_match = s.lookahead; }

  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");

  do {
    // Assert(cur_match < s->strstart, "no future");
    match = cur_match;

    /* Skip to next match if the match length cannot increase
     * or if the match length is less than 2.  Note that the checks below
     * for insufficient lookahead only occur occasionally for performance
     * reasons.  Therefore uninitialized memory will be accessed, and
     * conditional jumps will be made that depend on those values.
     * However the length of the match is limited to the lookahead, so
     * the output of deflate is not affected by the uninitialized values.
     */

    if (_win[match + best_len]     !== scan_end  ||
        _win[match + best_len - 1] !== scan_end1 ||
        _win[match]                !== _win[scan] ||
        _win[++match]              !== _win[scan + 1]) {
      continue;
    }

    /* The check at best_len-1 can be removed because it will be made
     * again later. (This heuristic is not always a win.)
     * It is not necessary to compare scan[2] and match[2] since they
     * are always equal when the other bytes match, given that
     * the hash keys are equal and that HASH_BITS >= 8.
     */
    scan += 2;
    match++;
    // Assert(*scan == *match, "match[2]?");

    /* We check for insufficient lookahead only every 8th comparison;
     * the 256th check will be made at strstart+258.
     */
    do {
      /*jshint noempty:false*/
    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             scan < strend);

    // Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");

    len = MAX_MATCH - (strend - scan);
    scan = strend - MAX_MATCH;

    if (len > best_len) {
      s.match_start = cur_match;
      best_len = len;
      if (len >= nice_match) {
        break;
      }
      scan_end1  = _win[scan + best_len - 1];
      scan_end   = _win[scan + best_len];
    }
  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);

  if (best_len <= s.lookahead) {
    return best_len;
  }
  return s.lookahead;
}


/* ===========================================================================
 * Fill the window when the lookahead becomes insufficient.
 * Updates strstart and lookahead.
 *
 * IN assertion: lookahead < MIN_LOOKAHEAD
 * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD
 *    At least one byte has been read, or avail_in == 0; reads are
 *    performed for at least two bytes (required for the zip translate_eol
 *    option -- not supported here).
 */
function fill_window(s) {
  var _w_size = s.w_size;
  var p, n, m, more, str;

  //Assert(s->lookahead < MIN_LOOKAHEAD, "already enough lookahead");

  do {
    more = s.window_size - s.lookahead - s.strstart;

    // JS ints have 32 bit, block below not needed
    /* Deal with !@#$% 64K limit: */
    //if (sizeof(int) <= 2) {
    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {
    //        more = wsize;
    //
    //  } else if (more == (unsigned)(-1)) {
    //        /* Very unlikely, but possible on 16 bit machine if
    //         * strstart == 0 && lookahead == 1 (input done a byte at time)
    //         */
    //        more--;
    //    }
    //}


    /* If the window is almost full and there is insufficient lookahead,
     * move the upper half to the lower one to make room in the upper half.
     */
    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {

      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);
      s.match_start -= _w_size;
      s.strstart -= _w_size;
      /* we now have strstart >= MAX_DIST */
      s.block_start -= _w_size;

      /* Slide the hash table (could be avoided with 32 bit values
       at the expense of memory usage). We slide even when level == 0
       to keep the hash table consistent if we switch back to level > 0
       later. (Using level 0 permanently is not an optimal usage of
       zlib, so we don't care about this pathological case.)
       */

      n = s.hash_size;
      p = n;
      do {
        m = s.head[--p];
        s.head[p] = (m >= _w_size ? m - _w_size : 0);
      } while (--n);

      n = _w_size;
      p = n;
      do {
        m = s.prev[--p];
        s.prev[p] = (m >= _w_size ? m - _w_size : 0);
        /* If n is not on any hash chain, prev[n] is garbage but
         * its value will never be used.
         */
      } while (--n);

      more += _w_size;
    }
    if (s.strm.avail_in === 0) {
      break;
    }

    /* If there was no sliding:
     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&
     *    more == window_size - lookahead - strstart
     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)
     * => more >= window_size - 2*WSIZE + 2
     * In the BIG_MEM or MMAP case (not yet supported),
     *   window_size == input_size + MIN_LOOKAHEAD  &&
     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.
     * Otherwise, window_size == 2*WSIZE so more >= 2.
     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.
     */
    //Assert(more >= 2, "more < 2");
    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);
    s.lookahead += n;

    /* Initialize the hash value now that we have some input: */
    if (s.lookahead + s.insert >= MIN_MATCH) {
      str = s.strstart - s.insert;
      s.ins_h = s.window[str];

      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;
//#if MIN_MATCH != 3
//        Call update_hash() MIN_MATCH-3 more times
//#endif
      while (s.insert) {
        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */
        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH-1]) & s.hash_mask;

        s.prev[str & s.w_mask] = s.head[s.ins_h];
        s.head[s.ins_h] = str;
        str++;
        s.insert--;
        if (s.lookahead + s.insert < MIN_MATCH) {
          break;
        }
      }
    }
    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,
     * but this is not important since only literal bytes will be emitted.
     */

  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);

  /* If the WIN_INIT bytes after the end of the current data have never been
   * written, then zero those bytes in order to avoid memory check reports of
   * the use of uninitialized (or uninitialised as Julian writes) bytes by
   * the longest match routines.  Update the high water mark for the next
   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match
   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.
   */
//  if (s.high_water < s.window_size) {
//    var curr = s.strstart + s.lookahead;
//    var init = 0;
//
//    if (s.high_water < curr) {
//      /* Previous high water mark below current data -- zero WIN_INIT
//       * bytes or up to end of window, whichever is less.
//       */
//      init = s.window_size - curr;
//      if (init > WIN_INIT)
//        init = WIN_INIT;
//      zmemzero(s->window + curr, (unsigned)init);
//      s->high_water = curr + init;
//    }
//    else if (s->high_water < (ulg)curr + WIN_INIT) {
//      /* High water mark at or above current data, but below current data
//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up
//       * to end of window, whichever is less.
//       */
//      init = (ulg)curr + WIN_INIT - s->high_water;
//      if (init > s->window_size - s->high_water)
//        init = s->window_size - s->high_water;
//      zmemzero(s->window + s->high_water, (unsigned)init);
//      s->high_water += init;
//    }
//  }
//
//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,
//    "not enough room for search");
}

/* ===========================================================================
 * Copy without compression as much as possible from the input stream, return
 * the current block state.
 * This function does not insert new strings in the dictionary since
 * uncompressible data is probably not useful. This function is used
 * only for the level=0 compression option.
 * NOTE: this function should be optimized to avoid extra copying from
 * window to pending_buf.
 */
function deflate_stored(s, flush) {
  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited
   * to pending_buf_size, and each stored block has a 5 byte header:
   */
  var max_block_size = 0xffff;

  if (max_block_size > s.pending_buf_size - 5) {
    max_block_size = s.pending_buf_size - 5;
  }

  /* Copy as much as possible from input to output: */
  for (;;) {
    /* Fill the window as much as possible: */
    if (s.lookahead <= 1) {

      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||
      //  s->block_start >= (long)s->w_size, "slide too late");
//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||
//        s.block_start >= s.w_size)) {
//        throw  new Error("slide too late");
//      }

      fill_window(s);
      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }

      if (s.lookahead === 0) {
        break;
      }
      /* flush the current block */
    }
    //Assert(s->block_start >= 0L, "block gone");
//    if (s.block_start < 0) throw new Error("block gone");

    s.strstart += s.lookahead;
    s.lookahead = 0;

    /* Emit a stored block if pending_buf will be full: */
    var max_start = s.block_start + max_block_size;

    if (s.strstart === 0 || s.strstart >= max_start) {
      /* strstart == 0 is possible when wraparound on 16-bit machine */
      s.lookahead = s.strstart - max_start;
      s.strstart = max_start;
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/


    }
    /* Flush if we may have to slide, otherwise block_start may become
     * negative and the data will be gone:
     */
    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }

  s.insert = 0;

  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }

  if (s.strstart > s.block_start) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }

  return BS_NEED_MORE;
}

/* ===========================================================================
 * Compress as much as possible from the input stream, return the current
 * block state.
 * This function does not perform lazy evaluation of matches and inserts
 * new strings in the dictionary only for unmatched strings or for short
 * matches. It is used only for the fast compression options.
 */
function deflate_fast(s, flush) {
  var hash_head;        /* head of the hash chain */
  var bflush;           /* set if current block must be flushed */

  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the next match, plus MIN_MATCH bytes to insert the
     * string following the next match.
     */
    if (s.lookahead < MIN_LOOKAHEAD) {
      fill_window(s);
      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) {
        break; /* flush the current block */
      }
    }

    /* Insert the string window[strstart .. strstart+2] in the
     * dictionary, and set hash_head to the head of the hash chain:
     */
    hash_head = 0/*NIL*/;
    if (s.lookahead >= MIN_MATCH) {
      /*** INSERT_STRING(s, s.strstart, hash_head); ***/
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
      s.head[s.ins_h] = s.strstart;
      /***/
    }

    /* Find the longest match, discarding those <= prev_length.
     * At this point we have always match_length < MIN_MATCH
     */
    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {
      /* To simplify the code, we prevent matches with the string
       * of window index 0 (in particular we have to avoid a match
       * of the string with itself at the start of the input file).
       */
      s.match_length = longest_match(s, hash_head);
      /* longest_match() sets match_start */
    }
    if (s.match_length >= MIN_MATCH) {
      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only

      /*** _tr_tally_dist(s, s.strstart - s.match_start,
                     s.match_length - MIN_MATCH, bflush); ***/
      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);

      s.lookahead -= s.match_length;

      /* Insert new strings in the hash table only if the match length
       * is not too large. This saves time but degrades compression.
       */
      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {
        s.match_length--; /* string at strstart already in table */
        do {
          s.strstart++;
          /*** INSERT_STRING(s, s.strstart, hash_head); ***/
          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = s.strstart;
          /***/
          /* strstart never exceeds WSIZE-MAX_MATCH, so there are
           * always MIN_MATCH bytes ahead.
           */
        } while (--s.match_length !== 0);
        s.strstart++;
      } else
      {
        s.strstart += s.match_length;
        s.match_length = 0;
        s.ins_h = s.window[s.strstart];
        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */
        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;

//#if MIN_MATCH != 3
//                Call UPDATE_HASH() MIN_MATCH-3 more times
//#endif
        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not
         * matter since it will be recomputed at next deflate call.
         */
      }
    } else {
      /* No match, output a literal byte */
      //Tracevv((stderr,"%c", s.window[s.strstart]));
      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);

      s.lookahead--;
      s.strstart++;
    }
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = ((s.strstart < (MIN_MATCH-1)) ? s.strstart : MIN_MATCH-1);
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
}

/* ===========================================================================
 * Same as above, but achieves better compression. We use a lazy
 * evaluation for matches: a match is finally adopted only if there is
 * no better match at the next window position.
 */
function deflate_slow(s, flush) {
  var hash_head;          /* head of hash chain */
  var bflush;              /* set if current block must be flushed */

  var max_insert;

  /* Process the input block. */
  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the next match, plus MIN_MATCH bytes to insert the
     * string following the next match.
     */
    if (s.lookahead < MIN_LOOKAHEAD) {
      fill_window(s);
      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) { break; } /* flush the current block */
    }

    /* Insert the string window[strstart .. strstart+2] in the
     * dictionary, and set hash_head to the head of the hash chain:
     */
    hash_head = 0/*NIL*/;
    if (s.lookahead >= MIN_MATCH) {
      /*** INSERT_STRING(s, s.strstart, hash_head); ***/
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
      s.head[s.ins_h] = s.strstart;
      /***/
    }

    /* Find the longest match, discarding those <= prev_length.
     */
    s.prev_length = s.match_length;
    s.prev_match = s.match_start;
    s.match_length = MIN_MATCH-1;

    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&
        s.strstart - hash_head <= (s.w_size-MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {
      /* To simplify the code, we prevent matches with the string
       * of window index 0 (in particular we have to avoid a match
       * of the string with itself at the start of the input file).
       */
      s.match_length = longest_match(s, hash_head);
      /* longest_match() sets match_start */

      if (s.match_length <= 5 &&
         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {

        /* If prev_match is also MIN_MATCH, match_start is garbage
         * but we will ignore the current match anyway.
         */
        s.match_length = MIN_MATCH-1;
      }
    }
    /* If there was a match at the previous step and the current
     * match is not better, output the previous match:
     */
    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {
      max_insert = s.strstart + s.lookahead - MIN_MATCH;
      /* Do not insert strings in hash table beyond this. */

      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);

      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,
                     s.prev_length - MIN_MATCH, bflush);***/
      bflush = trees._tr_tally(s, s.strstart - 1- s.prev_match, s.prev_length - MIN_MATCH);
      /* Insert in hash table all strings up to the end of the match.
       * strstart-1 and strstart are already inserted. If there is not
       * enough lookahead, the last two strings are not inserted in
       * the hash table.
       */
      s.lookahead -= s.prev_length-1;
      s.prev_length -= 2;
      do {
        if (++s.strstart <= max_insert) {
          /*** INSERT_STRING(s, s.strstart, hash_head); ***/
          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = s.strstart;
          /***/
        }
      } while (--s.prev_length !== 0);
      s.match_available = 0;
      s.match_length = MIN_MATCH-1;
      s.strstart++;

      if (bflush) {
        /*** FLUSH_BLOCK(s, 0); ***/
        flush_block_only(s, false);
        if (s.strm.avail_out === 0) {
          return BS_NEED_MORE;
        }
        /***/
      }

    } else if (s.match_available) {
      /* If there was no match at the previous position, output a
       * single literal. If there was a match but the current match
       * is longer, truncate the previous match to a single literal.
       */
      //Tracevv((stderr,"%c", s->window[s->strstart-1]));
      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/
      bflush = trees._tr_tally(s, 0, s.window[s.strstart-1]);

      if (bflush) {
        /*** FLUSH_BLOCK_ONLY(s, 0) ***/
        flush_block_only(s, false);
        /***/
      }
      s.strstart++;
      s.lookahead--;
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
    } else {
      /* There is no previous match to compare with, wait for
       * the next step to decide.
       */
      s.match_available = 1;
      s.strstart++;
      s.lookahead--;
    }
  }
  //Assert (flush != Z_NO_FLUSH, "no flush?");
  if (s.match_available) {
    //Tracevv((stderr,"%c", s->window[s->strstart-1]));
    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/
    bflush = trees._tr_tally(s, 0, s.window[s.strstart-1]);

    s.match_available = 0;
  }
  s.insert = s.strstart < MIN_MATCH-1 ? s.strstart : MIN_MATCH-1;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }

  return BS_BLOCK_DONE;
}


/* ===========================================================================
 * For Z_RLE, simply look for runs of bytes, generate matches only of distance
 * one.  Do not maintain a hash table.  (It will be regenerated if this run of
 * deflate switches away from Z_RLE.)
 */
function deflate_rle(s, flush) {
  var bflush;            /* set if current block must be flushed */
  var prev;              /* byte at distance one to match */
  var scan, strend;      /* scan goes up to strend for length of run */

  var _win = s.window;

  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the longest run, plus one for the unrolled loop.
     */
    if (s.lookahead <= MAX_MATCH) {
      fill_window(s);
      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) { break; } /* flush the current block */
    }

    /* See how many times the previous byte repeats */
    s.match_length = 0;
    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {
      scan = s.strstart - 1;
      prev = _win[scan];
      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {
        strend = s.strstart + MAX_MATCH;
        do {
          /*jshint noempty:false*/
        } while (prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 scan < strend);
        s.match_length = MAX_MATCH - (strend - scan);
        if (s.match_length > s.lookahead) {
          s.match_length = s.lookahead;
        }
      }
      //Assert(scan <= s->window+(uInt)(s->window_size-1), "wild scan");
    }

    /* Emit match if have run of MIN_MATCH or longer, else emit literal */
    if (s.match_length >= MIN_MATCH) {
      //check_match(s, s.strstart, s.strstart - 1, s.match_length);

      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/
      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);

      s.lookahead -= s.match_length;
      s.strstart += s.match_length;
      s.match_length = 0;
    } else {
      /* No match, output a literal byte */
      //Tracevv((stderr,"%c", s->window[s->strstart]));
      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);

      s.lookahead--;
      s.strstart++;
    }
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = 0;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
}

/* ===========================================================================
 * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.
 * (It will be regenerated if this run of deflate switches away from Huffman.)
 */
function deflate_huff(s, flush) {
  var bflush;             /* set if current block must be flushed */

  for (;;) {
    /* Make sure that we have a literal to write. */
    if (s.lookahead === 0) {
      fill_window(s);
      if (s.lookahead === 0) {
        if (flush === Z_NO_FLUSH) {
          return BS_NEED_MORE;
        }
        break;      /* flush the current block */
      }
    }

    /* Output a literal byte */
    s.match_length = 0;
    //Tracevv((stderr,"%c", s->window[s->strstart]));
    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);
    s.lookahead--;
    s.strstart++;
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = 0;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
}

/* Values for max_lazy_match, good_match and max_chain_length, depending on
 * the desired pack level (0..9). The values given below have been tuned to
 * exclude worst case performance for pathological files. Better values may be
 * found for specific files.
 */
var Config = function (good_length, max_lazy, nice_length, max_chain, func) {
  this.good_length = good_length;
  this.max_lazy = max_lazy;
  this.nice_length = nice_length;
  this.max_chain = max_chain;
  this.func = func;
};

var configuration_table;

configuration_table = [
  /*      good lazy nice chain */
  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */
  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */
  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */
  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */

  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */
  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */
  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */
  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */
  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */
  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */
];


/* ===========================================================================
 * Initialize the "longest match" routines for a new zlib stream
 */
function lm_init(s) {
  s.window_size = 2 * s.w_size;

  /*** CLEAR_HASH(s); ***/
  zero(s.head); // Fill with NIL (= 0);

  /* Set the default configuration parameters:
   */
  s.max_lazy_match = configuration_table[s.level].max_lazy;
  s.good_match = configuration_table[s.level].good_length;
  s.nice_match = configuration_table[s.level].nice_length;
  s.max_chain_length = configuration_table[s.level].max_chain;

  s.strstart = 0;
  s.block_start = 0;
  s.lookahead = 0;
  s.insert = 0;
  s.match_length = s.prev_length = MIN_MATCH - 1;
  s.match_available = 0;
  s.ins_h = 0;
}


function DeflateState() {
  this.strm = null;            /* pointer back to this zlib stream */
  this.status = 0;            /* as the name implies */
  this.pending_buf = null;      /* output still pending */
  this.pending_buf_size = 0;  /* size of pending_buf */
  this.pending_out = 0;       /* next pending byte to output to the stream */
  this.pending = 0;           /* nb of bytes in the pending buffer */
  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */
  this.gzhead = null;         /* gzip header information to write */
  this.gzindex = 0;           /* where in extra, name, or comment */
  this.method = Z_DEFLATED; /* can only be DEFLATED */
  this.last_flush = -1;   /* value of flush param for previous deflate call */

  this.w_size = 0;  /* LZ77 window size (32K by default) */
  this.w_bits = 0;  /* log2(w_size)  (8..16) */
  this.w_mask = 0;  /* w_size - 1 */

  this.window = null;
  /* Sliding window. Input bytes are read into the second half of the window,
   * and move to the first half later to keep a dictionary of at least wSize
   * bytes. With this organization, matches are limited to a distance of
   * wSize-MAX_MATCH bytes, but this ensures that IO is always
   * performed with a length multiple of the block size.
   */

  this.window_size = 0;
  /* Actual size of window: 2*wSize, except when the user input buffer
   * is directly used as sliding window.
   */

  this.prev = null;
  /* Link to older string with same hash index. To limit the size of this
   * array to 64K, this link is maintained only for the last 32K strings.
   * An index in this array is thus a window index modulo 32K.
   */

  this.head = null;   /* Heads of the hash chains or NIL. */

  this.ins_h = 0;       /* hash index of string to be inserted */
  this.hash_size = 0;   /* number of elements in hash table */
  this.hash_bits = 0;   /* log2(hash_size) */
  this.hash_mask = 0;   /* hash_size-1 */

  this.hash_shift = 0;
  /* Number of bits by which ins_h must be shifted at each input
   * step. It must be such that after MIN_MATCH steps, the oldest
   * byte no longer takes part in the hash key, that is:
   *   hash_shift * MIN_MATCH >= hash_bits
   */

  this.block_start = 0;
  /* Window position at the beginning of the current output block. Gets
   * negative when the window is moved backwards.
   */

  this.match_length = 0;      /* length of best match */
  this.prev_match = 0;        /* previous match */
  this.match_available = 0;   /* set if previous match exists */
  this.strstart = 0;          /* start of string to insert */
  this.match_start = 0;       /* start of matching string */
  this.lookahead = 0;         /* number of valid bytes ahead in window */

  this.prev_length = 0;
  /* Length of the best match at previous step. Matches not greater than this
   * are discarded. This is used in the lazy match evaluation.
   */

  this.max_chain_length = 0;
  /* To speed up deflation, hash chains are never searched beyond this
   * length.  A higher limit improves compression ratio but degrades the
   * speed.
   */

  this.max_lazy_match = 0;
  /* Attempt to find a better match only when the current match is strictly
   * smaller than this value. This mechanism is used only for compression
   * levels >= 4.
   */
  // That's alias to max_lazy_match, don't use directly
  //this.max_insert_length = 0;
  /* Insert new strings in the hash table only if the match length is not
   * greater than this length. This saves time but degrades compression.
   * max_insert_length is used only for compression levels <= 3.
   */

  this.level = 0;     /* compression level (1..9) */
  this.strategy = 0;  /* favor or force Huffman coding*/

  this.good_match = 0;
  /* Use a faster search when the previous match is longer than this */

  this.nice_match = 0; /* Stop searching when current match exceeds this */

              /* used by trees.c: */

  /* Didn't use ct_data typedef below to suppress compiler warning */

  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */
  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */
  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */

  // Use flat array of DOUBLE size, with interleaved fata,
  // because JS does not support effective
  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);
  this.dyn_dtree  = new utils.Buf16((2*D_CODES+1) * 2);
  this.bl_tree    = new utils.Buf16((2*BL_CODES+1) * 2);
  zero(this.dyn_ltree);
  zero(this.dyn_dtree);
  zero(this.bl_tree);

  this.l_desc   = null;         /* desc. for literal tree */
  this.d_desc   = null;         /* desc. for distance tree */
  this.bl_desc  = null;         /* desc. for bit length tree */

  //ush bl_count[MAX_BITS+1];
  this.bl_count = new utils.Buf16(MAX_BITS+1);
  /* number of codes at each bit length for an optimal tree */

  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */
  this.heap = new utils.Buf16(2*L_CODES+1);  /* heap used to build the Huffman trees */
  zero(this.heap);

  this.heap_len = 0;               /* number of elements in the heap */
  this.heap_max = 0;               /* element of largest frequency */
  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.
   * The same heap array is used to build all trees.
   */

  this.depth = new utils.Buf16(2*L_CODES+1); //uch depth[2*L_CODES+1];
  zero(this.depth);
  /* Depth of each subtree used as tie breaker for trees of equal frequency
   */

  this.l_buf = 0;          /* buffer index for literals or lengths */

  this.lit_bufsize = 0;
  /* Size of match buffer for literals/lengths.  There are 4 reasons for
   * limiting lit_bufsize to 64K:
   *   - frequencies can be kept in 16 bit counters
   *   - if compression is not successful for the first block, all input
   *     data is still in the window so we can still emit a stored block even
   *     when input comes from standard input.  (This can also be done for
   *     all blocks if lit_bufsize is not greater than 32K.)
   *   - if compression is not successful for a file smaller than 64K, we can
   *     even emit a stored file instead of a stored block (saving 5 bytes).
   *     This is applicable only for zip (not gzip or zlib).
   *   - creating new Huffman trees less frequently may not provide fast
   *     adaptation to changes in the input data statistics. (Take for
   *     example a binary file with poorly compressible code followed by
   *     a highly compressible string table.) Smaller buffer sizes give
   *     fast adaptation but have of course the overhead of transmitting
   *     trees more frequently.
   *   - I can't count above 4
   */

  this.last_lit = 0;      /* running index in l_buf */

  this.d_buf = 0;
  /* Buffer index for distances. To simplify the code, d_buf and l_buf have
   * the same number of elements. To use different lengths, an extra flag
   * array would be necessary.
   */

  this.opt_len = 0;       /* bit length of current block with optimal trees */
  this.static_len = 0;    /* bit length of current block with static trees */
  this.matches = 0;       /* number of string matches in current block */
  this.insert = 0;        /* bytes at end of window left to insert */


  this.bi_buf = 0;
  /* Output buffer. bits are inserted starting at the bottom (least
   * significant bits).
   */
  this.bi_valid = 0;
  /* Number of valid bits in bi_buf.  All bits above the last valid bit
   * are always zero.
   */

  // Used for window memory init. We safely ignore it for JS. That makes
  // sense only for pointers and memory check tools.
  //this.high_water = 0;
  /* High water mark offset in window for initialized bytes -- bytes above
   * this are set to zero in order to avoid memory check warnings when
   * longest match routines access bytes past the input.  This is then
   * updated to the new high water mark.
   */
}


function deflateResetKeep(strm) {
  var s;

  if (!strm || !strm.state) {
    return err(strm, Z_STREAM_ERROR);
  }

  strm.total_in = strm.total_out = 0;
  strm.data_type = Z_UNKNOWN;

  s = strm.state;
  s.pending = 0;
  s.pending_out = 0;

  if (s.wrap < 0) {
    s.wrap = -s.wrap;
    /* was made negative by deflate(..., Z_FINISH); */
  }
  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);
  strm.adler = (s.wrap === 2) ?
    0  // crc32(0, Z_NULL, 0)
  :
    1; // adler32(0, Z_NULL, 0)
  s.last_flush = Z_NO_FLUSH;
  trees._tr_init(s);
  return Z_OK;
}


function deflateReset(strm) {
  var ret = deflateResetKeep(strm);
  if (ret === Z_OK) {
    lm_init(strm.state);
  }
  return ret;
}


function deflateSetHeader(strm, head) {
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }
  strm.state.gzhead = head;
  return Z_OK;
}


function deflateInit2(strm, level, method, windowBits, memLevel, strategy) {
  if (!strm) { // === Z_NULL
    return Z_STREAM_ERROR;
  }
  var wrap = 1;

  if (level === Z_DEFAULT_COMPRESSION) {
    level = 6;
  }

  if (windowBits < 0) { /* suppress zlib wrapper */
    wrap = 0;
    windowBits = -windowBits;
  }

  else if (windowBits > 15) {
    wrap = 2;           /* write gzip wrapper instead */
    windowBits -= 16;
  }


  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||
    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||
    strategy < 0 || strategy > Z_FIXED) {
    return err(strm, Z_STREAM_ERROR);
  }


  if (windowBits === 8) {
    windowBits = 9;
  }
  /* until 256-byte window bug fixed */

  var s = new DeflateState();

  strm.state = s;
  s.strm = strm;

  s.wrap = wrap;
  s.gzhead = null;
  s.w_bits = windowBits;
  s.w_size = 1 << s.w_bits;
  s.w_mask = s.w_size - 1;

  s.hash_bits = memLevel + 7;
  s.hash_size = 1 << s.hash_bits;
  s.hash_mask = s.hash_size - 1;
  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);

  s.window = new utils.Buf8(s.w_size * 2);
  s.head = new utils.Buf16(s.hash_size);
  s.prev = new utils.Buf16(s.w_size);

  // Don't need mem init magic for JS.
  //s.high_water = 0;  /* nothing written to s->window yet */

  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */

  s.pending_buf_size = s.lit_bufsize * 4;
  s.pending_buf = new utils.Buf8(s.pending_buf_size);

  s.d_buf = s.lit_bufsize >> 1;
  s.l_buf = (1 + 2) * s.lit_bufsize;

  s.level = level;
  s.strategy = strategy;
  s.method = method;

  return deflateReset(strm);
}

function deflateInit(strm, level) {
  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);
}


function deflate(strm, flush) {
  var old_flush, s;
  var beg, val; // for gzip header write only

  if (!strm || !strm.state ||
    flush > Z_BLOCK || flush < 0) {
    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;
  }

  s = strm.state;

  if (!strm.output ||
      (!strm.input && strm.avail_in !== 0) ||
      (s.status === FINISH_STATE && flush !== Z_FINISH)) {
    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);
  }

  s.strm = strm; /* just in case */
  old_flush = s.last_flush;
  s.last_flush = flush;

  /* Write the header */
  if (s.status === INIT_STATE) {

    if (s.wrap === 2) { // GZIP header
      strm.adler = 0;  //crc32(0L, Z_NULL, 0);
      put_byte(s, 31);
      put_byte(s, 139);
      put_byte(s, 8);
      if (!s.gzhead) { // s->gzhead == Z_NULL
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, s.level === 9 ? 2 :
                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?
                     4 : 0));
        put_byte(s, OS_CODE);
        s.status = BUSY_STATE;
      }
      else {
        put_byte(s, (s.gzhead.text ? 1 : 0) +
                    (s.gzhead.hcrc ? 2 : 0) +
                    (!s.gzhead.extra ? 0 : 4) +
                    (!s.gzhead.name ? 0 : 8) +
                    (!s.gzhead.comment ? 0 : 16)
                );
        put_byte(s, s.gzhead.time & 0xff);
        put_byte(s, (s.gzhead.time >> 8) & 0xff);
        put_byte(s, (s.gzhead.time >> 16) & 0xff);
        put_byte(s, (s.gzhead.time >> 24) & 0xff);
        put_byte(s, s.level === 9 ? 2 :
                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?
                     4 : 0));
        put_byte(s, s.gzhead.os & 0xff);
        if (s.gzhead.extra && s.gzhead.extra.length) {
          put_byte(s, s.gzhead.extra.length & 0xff);
          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);
        }
        if (s.gzhead.hcrc) {
          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);
        }
        s.gzindex = 0;
        s.status = EXTRA_STATE;
      }
    }
    else // DEFLATE header
    {
      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;
      var level_flags = -1;

      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {
        level_flags = 0;
      } else if (s.level < 6) {
        level_flags = 1;
      } else if (s.level === 6) {
        level_flags = 2;
      } else {
        level_flags = 3;
      }
      header |= (level_flags << 6);
      if (s.strstart !== 0) { header |= PRESET_DICT; }
      header += 31 - (header % 31);

      s.status = BUSY_STATE;
      putShortMSB(s, header);

      /* Save the adler32 of the preset dictionary: */
      if (s.strstart !== 0) {
        putShortMSB(s, strm.adler >>> 16);
        putShortMSB(s, strm.adler & 0xffff);
      }
      strm.adler = 1; // adler32(0L, Z_NULL, 0);
    }
  }

//#ifdef GZIP
  if (s.status === EXTRA_STATE) {
    if (s.gzhead.extra/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */

      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            break;
          }
        }
        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);
        s.gzindex++;
      }
      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (s.gzindex === s.gzhead.extra.length) {
        s.gzindex = 0;
        s.status = NAME_STATE;
      }
    }
    else {
      s.status = NAME_STATE;
    }
  }
  if (s.status === NAME_STATE) {
    if (s.gzhead.name/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */
      //int val;

      do {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            val = 1;
            break;
          }
        }
        // JS specific: little magic to add zero terminator to end of string
        if (s.gzindex < s.gzhead.name.length) {
          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;
        } else {
          val = 0;
        }
        put_byte(s, val);
      } while (val !== 0);

      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (val === 0) {
        s.gzindex = 0;
        s.status = COMMENT_STATE;
      }
    }
    else {
      s.status = COMMENT_STATE;
    }
  }
  if (s.status === COMMENT_STATE) {
    if (s.gzhead.comment/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */
      //int val;

      do {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            val = 1;
            break;
          }
        }
        // JS specific: little magic to add zero terminator to end of string
        if (s.gzindex < s.gzhead.comment.length) {
          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;
        } else {
          val = 0;
        }
        put_byte(s, val);
      } while (val !== 0);

      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (val === 0) {
        s.status = HCRC_STATE;
      }
    }
    else {
      s.status = HCRC_STATE;
    }
  }
  if (s.status === HCRC_STATE) {
    if (s.gzhead.hcrc) {
      if (s.pending + 2 > s.pending_buf_size) {
        flush_pending(strm);
      }
      if (s.pending + 2 <= s.pending_buf_size) {
        put_byte(s, strm.adler & 0xff);
        put_byte(s, (strm.adler >> 8) & 0xff);
        strm.adler = 0; //crc32(0L, Z_NULL, 0);
        s.status = BUSY_STATE;
      }
    }
    else {
      s.status = BUSY_STATE;
    }
  }
//#endif

  /* Flush as much pending output as possible */
  if (s.pending !== 0) {
    flush_pending(strm);
    if (strm.avail_out === 0) {
      /* Since avail_out is 0, deflate will be called again with
       * more output space, but possibly with both pending and
       * avail_in equal to zero. There won't be anything to do,
       * but this is not an error situation so make sure we
       * return OK instead of BUF_ERROR at next call of deflate:
       */
      s.last_flush = -1;
      return Z_OK;
    }

    /* Make sure there is something to do and avoid duplicate consecutive
     * flushes. For repeated and useless calls with Z_FINISH, we keep
     * returning Z_STREAM_END instead of Z_BUF_ERROR.
     */
  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&
    flush !== Z_FINISH) {
    return err(strm, Z_BUF_ERROR);
  }

  /* User must not provide more input after the first FINISH: */
  if (s.status === FINISH_STATE && strm.avail_in !== 0) {
    return err(strm, Z_BUF_ERROR);
  }

  /* Start a new block or continue the current one.
   */
  if (strm.avail_in !== 0 || s.lookahead !== 0 ||
    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {
    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :
      (s.strategy === Z_RLE ? deflate_rle(s, flush) :
        configuration_table[s.level].func(s, flush));

    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {
      s.status = FINISH_STATE;
    }
    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {
      if (strm.avail_out === 0) {
        s.last_flush = -1;
        /* avoid BUF_ERROR next call, see above */
      }
      return Z_OK;
      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call
       * of deflate should use the same flush parameter to make sure
       * that the flush is complete. So we don't have to output an
       * empty block here, this will be done at next call. This also
       * ensures that for a very small output buffer, we emit at most
       * one empty block.
       */
    }
    if (bstate === BS_BLOCK_DONE) {
      if (flush === Z_PARTIAL_FLUSH) {
        trees._tr_align(s);
      }
      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */

        trees._tr_stored_block(s, 0, 0, false);
        /* For a full flush, this empty block will be recognized
         * as a special marker by inflate_sync().
         */
        if (flush === Z_FULL_FLUSH) {
          /*** CLEAR_HASH(s); ***/             /* forget history */
          zero(s.head); // Fill with NIL (= 0);

          if (s.lookahead === 0) {
            s.strstart = 0;
            s.block_start = 0;
            s.insert = 0;
          }
        }
      }
      flush_pending(strm);
      if (strm.avail_out === 0) {
        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */
        return Z_OK;
      }
    }
  }
  //Assert(strm->avail_out > 0, "bug2");
  //if (strm.avail_out <= 0) { throw new Error("bug2");}

  if (flush !== Z_FINISH) { return Z_OK; }
  if (s.wrap <= 0) { return Z_STREAM_END; }

  /* Write the trailer */
  if (s.wrap === 2) {
    put_byte(s, strm.adler & 0xff);
    put_byte(s, (strm.adler >> 8) & 0xff);
    put_byte(s, (strm.adler >> 16) & 0xff);
    put_byte(s, (strm.adler >> 24) & 0xff);
    put_byte(s, strm.total_in & 0xff);
    put_byte(s, (strm.total_in >> 8) & 0xff);
    put_byte(s, (strm.total_in >> 16) & 0xff);
    put_byte(s, (strm.total_in >> 24) & 0xff);
  }
  else
  {
    putShortMSB(s, strm.adler >>> 16);
    putShortMSB(s, strm.adler & 0xffff);
  }

  flush_pending(strm);
  /* If avail_out is zero, the application will call deflate again
   * to flush the rest.
   */
  if (s.wrap > 0) { s.wrap = -s.wrap; }
  /* write the trailer only once! */
  return s.pending !== 0 ? Z_OK : Z_STREAM_END;
}

function deflateEnd(strm) {
  var status;

  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {
    return Z_STREAM_ERROR;
  }

  status = strm.state.status;
  if (status !== INIT_STATE &&
    status !== EXTRA_STATE &&
    status !== NAME_STATE &&
    status !== COMMENT_STATE &&
    status !== HCRC_STATE &&
    status !== BUSY_STATE &&
    status !== FINISH_STATE
  ) {
    return err(strm, Z_STREAM_ERROR);
  }

  strm.state = null;

  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;
}

/* =========================================================================
 * Copy the source state to the destination state
 */
//function deflateCopy(dest, source) {
//
//}

exports.deflateInit = deflateInit;
exports.deflateInit2 = deflateInit2;
exports.deflateReset = deflateReset;
exports.deflateResetKeep = deflateResetKeep;
exports.deflateSetHeader = deflateSetHeader;
exports.deflate = deflate;
exports.deflateEnd = deflateEnd;
exports.deflateInfo = 'pako deflate (from Nodeca project)';

/* Not implemented
exports.deflateBound = deflateBound;
exports.deflateCopy = deflateCopy;
exports.deflateSetDictionary = deflateSetDictionary;
exports.deflateParams = deflateParams;
exports.deflatePending = deflatePending;
exports.deflatePrime = deflatePrime;
exports.deflateTune = deflateTune;
*/

},{"../utils/common":4,"./adler32":5,"./crc32":7,"./messages":12,"./trees":13}],9:[function(require,module,exports){
'use strict';

// See state defs from inflate.js
var BAD = 30;       /* got a data error -- remain here until reset */
var TYPE = 12;      /* i: waiting for type bits, including last-flag bit */

/*
   Decode literal, length, and distance codes and write out the resulting
   literal and match bytes until either not enough input or output is
   available, an end-of-block is encountered, or a data error is encountered.
   When large enough input and output buffers are supplied to inflate(), for
   example, a 16K input buffer and a 64K output buffer, more than 95% of the
   inflate execution time is spent in this routine.

   Entry assumptions:

        state.mode === LEN
        strm.avail_in >= 6
        strm.avail_out >= 258
        start >= strm.avail_out
        state.bits < 8

   On return, state.mode is one of:

        LEN -- ran out of enough output space or enough available input
        TYPE -- reached end of block code, inflate() to interpret next block
        BAD -- error in block data

   Notes:

    - The maximum input bits used by a length/distance pair is 15 bits for the
      length code, 5 bits for the length extra, 15 bits for the distance code,
      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.
      Therefore if strm.avail_in >= 6, then there is enough input to avoid
      checking for available input while decoding.

    - The maximum bytes that a single length/distance pair can output is 258
      bytes, which is the maximum length that can be coded.  inflate_fast()
      requires strm.avail_out >= 258 for each loop to avoid checking for
      output space.
 */
module.exports = function inflate_fast(strm, start) {
  var state;
  var _in;                    /* local strm.input */
  var last;                   /* have enough input while in < last */
  var _out;                   /* local strm.output */
  var beg;                    /* inflate()'s initial strm.output */
  var end;                    /* while out < end, enough space available */
//#ifdef INFLATE_STRICT
  var dmax;                   /* maximum distance from zlib header */
//#endif
  var wsize;                  /* window size or zero if not using window */
  var whave;                  /* valid bytes in the window */
  var wnext;                  /* window write index */
  var window;                 /* allocated sliding window, if wsize != 0 */
  var hold;                   /* local strm.hold */
  var bits;                   /* local strm.bits */
  var lcode;                  /* local strm.lencode */
  var dcode;                  /* local strm.distcode */
  var lmask;                  /* mask for first level of length codes */
  var dmask;                  /* mask for first level of distance codes */
  var here;                   /* retrieved table entry */
  var op;                     /* code bits, operation, extra bits, or */
                              /*  window position, window bytes to copy */
  var len;                    /* match length, unused bytes */
  var dist;                   /* match distance */
  var from;                   /* where to copy match from */
  var from_source;


  var input, output; // JS specific, because we have no pointers

  /* copy state to local variables */
  state = strm.state;
  //here = state.here;
  _in = strm.next_in;
  input = strm.input;
  last = _in + (strm.avail_in - 5);
  _out = strm.next_out;
  output = strm.output;
  beg = _out - (start - strm.avail_out);
  end = _out + (strm.avail_out - 257);
//#ifdef INFLATE_STRICT
  dmax = state.dmax;
//#endif
  wsize = state.wsize;
  whave = state.whave;
  wnext = state.wnext;
  window = state.window;
  hold = state.hold;
  bits = state.bits;
  lcode = state.lencode;
  dcode = state.distcode;
  lmask = (1 << state.lenbits) - 1;
  dmask = (1 << state.distbits) - 1;


  /* decode literals and length/distances until end-of-block or not enough
     input data or output space */

  top:
  do {
    if (bits < 15) {
      hold += input[_in++] << bits;
      bits += 8;
      hold += input[_in++] << bits;
      bits += 8;
    }

    here = lcode[hold & lmask];

    dolen:
    for (;;) { // Goto emulation
      op = here >>> 24/*here.bits*/;
      hold >>>= op;
      bits -= op;
      op = (here >>> 16) & 0xff/*here.op*/;
      if (op === 0) {                          /* literal */
        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
        //        "inflate:         literal '%c'\n" :
        //        "inflate:         literal 0x%02x\n", here.val));
        output[_out++] = here & 0xffff/*here.val*/;
      }
      else if (op & 16) {                     /* length base */
        len = here & 0xffff/*here.val*/;
        op &= 15;                           /* number of extra bits */
        if (op) {
          if (bits < op) {
            hold += input[_in++] << bits;
            bits += 8;
          }
          len += hold & ((1 << op) - 1);
          hold >>>= op;
          bits -= op;
        }
        //Tracevv((stderr, "inflate:         length %u\n", len));
        if (bits < 15) {
          hold += input[_in++] << bits;
          bits += 8;
          hold += input[_in++] << bits;
          bits += 8;
        }
        here = dcode[hold & dmask];

        dodist:
        for (;;) { // goto emulation
          op = here >>> 24/*here.bits*/;
          hold >>>= op;
          bits -= op;
          op = (here >>> 16) & 0xff/*here.op*/;

          if (op & 16) {                      /* distance base */
            dist = here & 0xffff/*here.val*/;
            op &= 15;                       /* number of extra bits */
            if (bits < op) {
              hold += input[_in++] << bits;
              bits += 8;
              if (bits < op) {
                hold += input[_in++] << bits;
                bits += 8;
              }
            }
            dist += hold & ((1 << op) - 1);
//#ifdef INFLATE_STRICT
            if (dist > dmax) {
              strm.msg = 'invalid distance too far back';
              state.mode = BAD;
              break top;
            }
//#endif
            hold >>>= op;
            bits -= op;
            //Tracevv((stderr, "inflate:         distance %u\n", dist));
            op = _out - beg;                /* max distance in output */
            if (dist > op) {                /* see if copy from window */
              op = dist - op;               /* distance back in window */
              if (op > whave) {
                if (state.sane) {
                  strm.msg = 'invalid distance too far back';
                  state.mode = BAD;
                  break top;
                }

// (!) This block is disabled in zlib defailts,
// don't enable it for binary compatibility
//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
//                if (len <= op - whave) {
//                  do {
//                    output[_out++] = 0;
//                  } while (--len);
//                  continue top;
//                }
//                len -= op - whave;
//                do {
//                  output[_out++] = 0;
//                } while (--op > whave);
//                if (op === 0) {
//                  from = _out - dist;
//                  do {
//                    output[_out++] = output[from++];
//                  } while (--len);
//                  continue top;
//                }
//#endif
              }
              from = 0; // window index
              from_source = window;
              if (wnext === 0) {           /* very common case */
                from += wsize - op;
                if (op < len) {         /* some from window */
                  len -= op;
                  do {
                    output[_out++] = window[from++];
                  } while (--op);
                  from = _out - dist;  /* rest from output */
                  from_source = output;
                }
              }
              else if (wnext < op) {      /* wrap around window */
                from += wsize + wnext - op;
                op -= wnext;
                if (op < len) {         /* some from end of window */
                  len -= op;
                  do {
                    output[_out++] = window[from++];
                  } while (--op);
                  from = 0;
                  if (wnext < len) {  /* some from start of window */
                    op = wnext;
                    len -= op;
                    do {
                      output[_out++] = window[from++];
                    } while (--op);
                    from = _out - dist;      /* rest from output */
                    from_source = output;
                  }
                }
              }
              else {                      /* contiguous in window */
                from += wnext - op;
                if (op < len) {         /* some from window */
                  len -= op;
                  do {
                    output[_out++] = window[from++];
                  } while (--op);
                  from = _out - dist;  /* rest from output */
                  from_source = output;
                }
              }
              while (len > 2) {
                output[_out++] = from_source[from++];
                output[_out++] = from_source[from++];
                output[_out++] = from_source[from++];
                len -= 3;
              }
              if (len) {
                output[_out++] = from_source[from++];
                if (len > 1) {
                  output[_out++] = from_source[from++];
                }
              }
            }
            else {
              from = _out - dist;          /* copy direct from output */
              do {                        /* minimum length is three */
                output[_out++] = output[from++];
                output[_out++] = output[from++];
                output[_out++] = output[from++];
                len -= 3;
              } while (len > 2);
              if (len) {
                output[_out++] = output[from++];
                if (len > 1) {
                  output[_out++] = output[from++];
                }
              }
            }
          }
          else if ((op & 64) === 0) {          /* 2nd level distance code */
            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];
            continue dodist;
          }
          else {
            strm.msg = 'invalid distance code';
            state.mode = BAD;
            break top;
          }

          break; // need to emulate goto via "continue"
        }
      }
      else if ((op & 64) === 0) {              /* 2nd level length code */
        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];
        continue dolen;
      }
      else if (op & 32) {                     /* end-of-block */
        //Tracevv((stderr, "inflate:         end of block\n"));
        state.mode = TYPE;
        break top;
      }
      else {
        strm.msg = 'invalid literal/length code';
        state.mode = BAD;
        break top;
      }

      break; // need to emulate goto via "continue"
    }
  } while (_in < last && _out < end);

  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */
  len = bits >> 3;
  _in -= len;
  bits -= len << 3;
  hold &= (1 << bits) - 1;

  /* update state and return */
  strm.next_in = _in;
  strm.next_out = _out;
  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));
  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));
  state.hold = hold;
  state.bits = bits;
  return;
};

},{}],10:[function(require,module,exports){
'use strict';


var utils = require('../utils/common');
var adler32 = require('./adler32');
var crc32   = require('./crc32');
var inflate_fast = require('./inffast');
var inflate_table = require('./inftrees');

var CODES = 0;
var LENS = 1;
var DISTS = 2;

/* Public constants ==========================================================*/
/* ===========================================================================*/


/* Allowed flush values; see deflate() and inflate() below for details */
//var Z_NO_FLUSH      = 0;
//var Z_PARTIAL_FLUSH = 1;
//var Z_SYNC_FLUSH    = 2;
//var Z_FULL_FLUSH    = 3;
var Z_FINISH        = 4;
var Z_BLOCK         = 5;
var Z_TREES         = 6;


/* Return codes for the compression/decompression functions. Negative values
 * are errors, positive values are used for special but normal events.
 */
var Z_OK            = 0;
var Z_STREAM_END    = 1;
var Z_NEED_DICT     = 2;
//var Z_ERRNO         = -1;
var Z_STREAM_ERROR  = -2;
var Z_DATA_ERROR    = -3;
var Z_MEM_ERROR     = -4;
var Z_BUF_ERROR     = -5;
//var Z_VERSION_ERROR = -6;

/* The deflate compression method */
var Z_DEFLATED  = 8;


/* STATES ====================================================================*/
/* ===========================================================================*/


var    HEAD = 1;       /* i: waiting for magic header */
var    FLAGS = 2;      /* i: waiting for method and flags (gzip) */
var    TIME = 3;       /* i: waiting for modification time (gzip) */
var    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */
var    EXLEN = 5;      /* i: waiting for extra length (gzip) */
var    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */
var    NAME = 7;       /* i: waiting for end of file name (gzip) */
var    COMMENT = 8;    /* i: waiting for end of comment (gzip) */
var    HCRC = 9;       /* i: waiting for header crc (gzip) */
var    DICTID = 10;    /* i: waiting for dictionary check value */
var    DICT = 11;      /* waiting for inflateSetDictionary() call */
var        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */
var        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */
var        STORED = 14;    /* i: waiting for stored size (length and complement) */
var        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */
var        COPY = 16;      /* i/o: waiting for input or output to copy stored block */
var        TABLE = 17;     /* i: waiting for dynamic block table lengths */
var        LENLENS = 18;   /* i: waiting for code length code lengths */
var        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */
var            LEN_ = 20;      /* i: same as LEN below, but only first time in */
var            LEN = 21;       /* i: waiting for length/lit/eob code */
var            LENEXT = 22;    /* i: waiting for length extra bits */
var            DIST = 23;      /* i: waiting for distance code */
var            DISTEXT = 24;   /* i: waiting for distance extra bits */
var            MATCH = 25;     /* o: waiting for output space to copy string */
var            LIT = 26;       /* o: waiting for output space to write literal */
var    CHECK = 27;     /* i: waiting for 32-bit check value */
var    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */
var    DONE = 29;      /* finished check, done -- remain here until reset */
var    BAD = 30;       /* got a data error -- remain here until reset */
var    MEM = 31;       /* got an inflate() memory error -- remain here until reset */
var    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */

/* ===========================================================================*/



var ENOUGH_LENS = 852;
var ENOUGH_DISTS = 592;
//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);

var MAX_WBITS = 15;
/* 32K LZ77 window */
var DEF_WBITS = MAX_WBITS;


function ZSWAP32(q) {
  return  (((q >>> 24) & 0xff) +
          ((q >>> 8) & 0xff00) +
          ((q & 0xff00) << 8) +
          ((q & 0xff) << 24));
}


function InflateState() {
  this.mode = 0;             /* current inflate mode */
  this.last = false;          /* true if processing last block */
  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */
  this.havedict = false;      /* true if dictionary provided */
  this.flags = 0;             /* gzip header method and flags (0 if zlib) */
  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */
  this.check = 0;             /* protected copy of check value */
  this.total = 0;             /* protected copy of output count */
  // TODO: may be {}
  this.head = null;           /* where to save gzip header information */

  /* sliding window */
  this.wbits = 0;             /* log base 2 of requested window size */
  this.wsize = 0;             /* window size or zero if not using window */
  this.whave = 0;             /* valid bytes in the window */
  this.wnext = 0;             /* window write index */
  this.window = null;         /* allocated sliding window, if needed */

  /* bit accumulator */
  this.hold = 0;              /* input bit accumulator */
  this.bits = 0;              /* number of bits in "in" */

  /* for string and stored block copying */
  this.length = 0;            /* literal or length of data to copy */
  this.offset = 0;            /* distance back to copy string from */

  /* for table and code decoding */
  this.extra = 0;             /* extra bits needed */

  /* fixed and dynamic code tables */
  this.lencode = null;          /* starting table for length/literal codes */
  this.distcode = null;         /* starting table for distance codes */
  this.lenbits = 0;           /* index bits for lencode */
  this.distbits = 0;          /* index bits for distcode */

  /* dynamic table building */
  this.ncode = 0;             /* number of code length code lengths */
  this.nlen = 0;              /* number of length code lengths */
  this.ndist = 0;             /* number of distance code lengths */
  this.have = 0;              /* number of code lengths in lens[] */
  this.next = null;              /* next available space in codes[] */

  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */
  this.work = new utils.Buf16(288); /* work area for code table building */

  /*
   because we don't have pointers in js, we use lencode and distcode directly
   as buffers so we don't need codes
  */
  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */
  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */
  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */
  this.sane = 0;                   /* if false, allow invalid distance too far */
  this.back = 0;                   /* bits back of last unprocessed length/lit */
  this.was = 0;                    /* initial length of match */
}

function inflateResetKeep(strm) {
  var state;

  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;
  strm.total_in = strm.total_out = state.total = 0;
  strm.msg = ''; /*Z_NULL*/
  if (state.wrap) {       /* to support ill-conceived Java test suite */
    strm.adler = state.wrap & 1;
  }
  state.mode = HEAD;
  state.last = 0;
  state.havedict = 0;
  state.dmax = 32768;
  state.head = null/*Z_NULL*/;
  state.hold = 0;
  state.bits = 0;
  //state.lencode = state.distcode = state.next = state.codes;
  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);
  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);

  state.sane = 1;
  state.back = -1;
  //Tracev((stderr, "inflate: reset\n"));
  return Z_OK;
}

function inflateReset(strm) {
  var state;

  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;
  state.wsize = 0;
  state.whave = 0;
  state.wnext = 0;
  return inflateResetKeep(strm);

}

function inflateReset2(strm, windowBits) {
  var wrap;
  var state;

  /* get the state */
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;

  /* extract wrap request from windowBits parameter */
  if (windowBits < 0) {
    wrap = 0;
    windowBits = -windowBits;
  }
  else {
    wrap = (windowBits >> 4) + 1;
    if (windowBits < 48) {
      windowBits &= 15;
    }
  }

  /* set number of window bits, free window if different */
  if (windowBits && (windowBits < 8 || windowBits > 15)) {
    return Z_STREAM_ERROR;
  }
  if (state.window !== null && state.wbits !== windowBits) {
    state.window = null;
  }

  /* update state and reset the rest of it */
  state.wrap = wrap;
  state.wbits = windowBits;
  return inflateReset(strm);
}

function inflateInit2(strm, windowBits) {
  var ret;
  var state;

  if (!strm) { return Z_STREAM_ERROR; }
  //strm.msg = Z_NULL;                 /* in case we return an error */

  state = new InflateState();

  //if (state === Z_NULL) return Z_MEM_ERROR;
  //Tracev((stderr, "inflate: allocated\n"));
  strm.state = state;
  state.window = null/*Z_NULL*/;
  ret = inflateReset2(strm, windowBits);
  if (ret !== Z_OK) {
    strm.state = null/*Z_NULL*/;
  }
  return ret;
}

function inflateInit(strm) {
  return inflateInit2(strm, DEF_WBITS);
}


/*
 Return state with length and distance decoding tables and index sizes set to
 fixed code decoding.  Normally this returns fixed tables from inffixed.h.
 If BUILDFIXED is defined, then instead this routine builds the tables the
 first time it's called, and returns those tables the first time and
 thereafter.  This reduces the size of the code by about 2K bytes, in
 exchange for a little execution time.  However, BUILDFIXED should not be
 used for threaded applications, since the rewriting of the tables and virgin
 may not be thread-safe.
 */
var virgin = true;

var lenfix, distfix; // We have no pointers in JS, so keep tables separate

function fixedtables(state) {
  /* build fixed huffman tables if first call (may not be thread safe) */
  if (virgin) {
    var sym;

    lenfix = new utils.Buf32(512);
    distfix = new utils.Buf32(32);

    /* literal/length table */
    sym = 0;
    while (sym < 144) { state.lens[sym++] = 8; }
    while (sym < 256) { state.lens[sym++] = 9; }
    while (sym < 280) { state.lens[sym++] = 7; }
    while (sym < 288) { state.lens[sym++] = 8; }

    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, {bits: 9});

    /* distance table */
    sym = 0;
    while (sym < 32) { state.lens[sym++] = 5; }

    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, {bits: 5});

    /* do this just once */
    virgin = false;
  }

  state.lencode = lenfix;
  state.lenbits = 9;
  state.distcode = distfix;
  state.distbits = 5;
}


/*
 Update the window with the last wsize (normally 32K) bytes written before
 returning.  If window does not exist yet, create it.  This is only called
 when a window is already in use, or when output has been written during this
 inflate call, but the end of the deflate stream has not been reached yet.
 It is also called to create a window for dictionary data when a dictionary
 is loaded.

 Providing output buffers larger than 32K to inflate() should provide a speed
 advantage, since only the last 32K of output is copied to the sliding window
 upon return from inflate(), and since all distances after the first 32K of
 output will fall in the output data, making match copies simpler and faster.
 The advantage may be dependent on the size of the processor's data caches.
 */
function updatewindow(strm, src, end, copy) {
  var dist;
  var state = strm.state;

  /* if it hasn't been done already, allocate space for the window */
  if (state.window === null) {
    state.wsize = 1 << state.wbits;
    state.wnext = 0;
    state.whave = 0;

    state.window = new utils.Buf8(state.wsize);
  }

  /* copy state->wsize or less output bytes into the circular window */
  if (copy >= state.wsize) {
    utils.arraySet(state.window,src, end - state.wsize, state.wsize, 0);
    state.wnext = 0;
    state.whave = state.wsize;
  }
  else {
    dist = state.wsize - state.wnext;
    if (dist > copy) {
      dist = copy;
    }
    //zmemcpy(state->window + state->wnext, end - copy, dist);
    utils.arraySet(state.window,src, end - copy, dist, state.wnext);
    copy -= dist;
    if (copy) {
      //zmemcpy(state->window, end - copy, copy);
      utils.arraySet(state.window,src, end - copy, copy, 0);
      state.wnext = copy;
      state.whave = state.wsize;
    }
    else {
      state.wnext += dist;
      if (state.wnext === state.wsize) { state.wnext = 0; }
      if (state.whave < state.wsize) { state.whave += dist; }
    }
  }
  return 0;
}

function inflate(strm, flush) {
  var state;
  var input, output;          // input/output buffers
  var next;                   /* next input INDEX */
  var put;                    /* next output INDEX */
  var have, left;             /* available input and output */
  var hold;                   /* bit buffer */
  var bits;                   /* bits in bit buffer */
  var _in, _out;              /* save starting available input and output */
  var copy;                   /* number of stored or match bytes to copy */
  var from;                   /* where to copy match bytes from */
  var from_source;
  var here = 0;               /* current decoding table entry */
  var here_bits, here_op, here_val; // paked "here" denormalized (JS specific)
  //var last;                   /* parent table entry */
  var last_bits, last_op, last_val; // paked "last" denormalized (JS specific)
  var len;                    /* length to copy for repeats, bits to drop */
  var ret;                    /* return code */
  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */
  var opts;

  var n; // temporary var for NEED_BITS

  var order = /* permutation of code lengths */
    [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];


  if (!strm || !strm.state || !strm.output ||
      (!strm.input && strm.avail_in !== 0)) {
    return Z_STREAM_ERROR;
  }

  state = strm.state;
  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */


  //--- LOAD() ---
  put = strm.next_out;
  output = strm.output;
  left = strm.avail_out;
  next = strm.next_in;
  input = strm.input;
  have = strm.avail_in;
  hold = state.hold;
  bits = state.bits;
  //---

  _in = have;
  _out = left;
  ret = Z_OK;

  inf_leave: // goto emulation
  for (;;) {
    switch (state.mode) {
    case HEAD:
      if (state.wrap === 0) {
        state.mode = TYPEDO;
        break;
      }
      //=== NEEDBITS(16);
      while (bits < 16) {
        if (have === 0) { break inf_leave; }
        have--;
        hold += input[next++] << bits;
        bits += 8;
      }
      //===//
      if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */
        state.check = 0/*crc32(0L, Z_NULL, 0)*/;
        //=== CRC2(state.check, hold);
        hbuf[0] = hold & 0xff;
        hbuf[1] = (hold >>> 8) & 0xff;
        state.check = crc32(state.check, hbuf, 2, 0);
        //===//

        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = FLAGS;
        break;
      }
      state.flags = 0;           /* expect zlib header */
      if (state.head) {
        state.head.done = false;
      }
      if (!(state.wrap & 1) ||   /* check if zlib header allowed */
        (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {
        strm.msg = 'incorrect header check';
        state.mode = BAD;
        break;
      }
      if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {
        strm.msg = 'unknown compression method';
        state.mode = BAD;
        break;
      }
      //--- DROPBITS(4) ---//
      hold >>>= 4;
      bits -= 4;
      //---//
      len = (hold & 0x0f)/*BITS(4)*/ + 8;
      if (state.wbits === 0) {
        state.wbits = len;
      }
      else if (len > state.wbits) {
        strm.msg = 'invalid window size';
        state.mode = BAD;
        break;
      }
      state.dmax = 1 << len;
      //Tracev((stderr, "inflate:   zlib header ok\n"));
      strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;
      state.mode = hold & 0x200 ? DICTID : TYPE;
      //=== INITBITS();
      hold = 0;
      bits = 0;
      //===//
      break;
    case FLAGS:
      //=== NEEDBITS(16); */
      while (bits < 16) {
        if (have === 0) { break inf_leave; }
        have--;
        hold += input[next++] << bits;
        bits += 8;
      }
      //===//
      state.flags = hold;
      if ((state.flags & 0xff) !== Z_DEFLATED) {
        strm.msg = 'unknown compression method';
        state.mode = BAD;
        break;
      }
      if (state.flags & 0xe000) {
        strm.msg = 'unknown header flags set';
        state.mode = BAD;
        break;
      }
      if (state.head) {
        state.head.text = ((hold >> 8) & 1);
      }
      if (state.flags & 0x0200) {
        //=== CRC2(state.check, hold);
        hbuf[0] = hold & 0xff;
        hbuf[1] = (hold >>> 8) & 0xff;
        state.check = crc32(state.check, hbuf, 2, 0);
        //===//
      }
      //=== INITBITS();
      hold = 0;
      bits = 0;
      //===//
      state.mode = TIME;
      /* falls through */
    case TIME:
      //=== NEEDBITS(32); */
      while (bits < 32) {
        if (have === 0) { break inf_leave; }
        have--;
        hold += input[next++] << bits;
        bits += 8;
      }
      //===//
      if (state.head) {
        state.head.time = hold;
      }
      if (state.flags & 0x0200) {
        //=== CRC4(state.check, hold)
        hbuf[0] = hold & 0xff;
        hbuf[1] = (hold >>> 8) & 0xff;
        hbuf[2] = (hold >>> 16) & 0xff;
        hbuf[3] = (hold >>> 24) & 0xff;
        state.check = crc32(state.check, hbuf, 4, 0);
        //===
      }
      //=== INITBITS();
      hold = 0;
      bits = 0;
      //===//
      state.mode = OS;
      /* falls through */
    case OS:
      //=== NEEDBITS(16); */
      while (bits < 16) {
        if (have === 0) { break inf_leave; }
        have--;
        hold += input[next++] << bits;
        bits += 8;
      }
      //===//
      if (state.head) {
        state.head.xflags = (hold & 0xff);
        state.head.os = (hold >> 8);
      }
      if (state.flags & 0x0200) {
        //=== CRC2(state.check, hold);
        hbuf[0] = hold & 0xff;
        hbuf[1] = (hold >>> 8) & 0xff;
        state.check = crc32(state.check, hbuf, 2, 0);
        //===//
      }
      //=== INITBITS();
      hold = 0;
      bits = 0;
      //===//
      state.mode = EXLEN;
      /* falls through */
    case EXLEN:
      if (state.flags & 0x0400) {
        //=== NEEDBITS(16); */
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.length = hold;
        if (state.head) {
          state.head.extra_len = hold;
        }
        if (state.flags & 0x0200) {
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32(state.check, hbuf, 2, 0);
          //===//
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
      }
      else if (state.head) {
        state.head.extra = null/*Z_NULL*/;
      }
      state.mode = EXTRA;
      /* falls through */
    case EXTRA:
      if (state.flags & 0x0400) {
        copy = state.length;
        if (copy > have) { copy = have; }
        if (copy) {
          if (state.head) {
            len = state.head.extra_len - state.length;
            if (!state.head.extra) {
              // Use untyped array for more conveniend processing later
              state.head.extra = new Array(state.head.extra_len);
            }
            utils.arraySet(
              state.head.extra,
              input,
              next,
              // extra field is limited to 65536 bytes
              // - no need for additional size check
              copy,
              /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/
              len
            );
            //zmemcpy(state.head.extra + len, next,
            //        len + copy > state.head.extra_max ?
            //        state.head.extra_max - len : copy);
          }
          if (state.flags & 0x0200) {
            state.check = crc32(state.check, input, copy, next);
          }
          have -= copy;
          next += copy;
          state.length -= copy;
        }
        if (state.length) { break inf_leave; }
      }
      state.length = 0;
      state.mode = NAME;
      /* falls through */
    case NAME:
      if (state.flags & 0x0800) {
        if (have === 0) { break inf_leave; }
        copy = 0;
        do {
          // TODO: 2 or 1 bytes?
          len = input[next + copy++];
          /* use constant limit because in js we should not preallocate memory */
          if (state.head && len &&
              (state.length < 65536 /*state.head.name_max*/)) {
            state.head.name += String.fromCharCode(len);
          }
        } while (len && copy < have);

        if (state.flags & 0x0200) {
          state.check = crc32(state.check, input, copy, next);
        }
        have -= copy;
        next += copy;
        if (len) { break inf_leave; }
      }
      else if (state.head) {
        state.head.name = null;
      }
      state.length = 0;
      state.mode = COMMENT;
      /* falls through */
    case COMMENT:
      if (state.flags & 0x1000) {
        if (have === 0) { break inf_leave; }
        copy = 0;
        do {
          len = input[next + copy++];
          /* use constant limit because in js we should not preallocate memory */
          if (state.head && len &&
              (state.length < 65536 /*state.head.comm_max*/)) {
            state.head.comment += String.fromCharCode(len);
          }
        } while (len && copy < have);
        if (state.flags & 0x0200) {
          state.check = crc32(state.check, input, copy, next);
        }
        have -= copy;
        next += copy;
        if (len) { break inf_leave; }
      }
      else if (state.head) {
        state.head.comment = null;
      }
      state.mode = HCRC;
      /* falls through */
    case HCRC:
      if (state.flags & 0x0200) {
        //=== NEEDBITS(16); */
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if (hold !== (state.check & 0xffff)) {
          strm.msg = 'header crc mismatch';
          state.mode = BAD;
          break;
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
      }
      if (state.head) {
        state.head.hcrc = ((state.flags >> 9) & 1);
        state.head.done = true;
      }
      strm.adler = state.check = 0 /*crc32(0L, Z_NULL, 0)*/;
      state.mode = TYPE;
      break;
    case DICTID:
      //=== NEEDBITS(32); */
      while (bits < 32) {
        if (have === 0) { break inf_leave; }
        have--;
        hold += input[next++] << bits;
        bits += 8;
      }
      //===//
      strm.adler = state.check = ZSWAP32(hold);
      //=== INITBITS();
      hold = 0;
      bits = 0;
      //===//
      state.mode = DICT;
      /* falls through */
    case DICT:
      if (state.havedict === 0) {
        //--- RESTORE() ---
        strm.next_out = put;
        strm.avail_out = left;
        strm.next_in = next;
        strm.avail_in = have;
        state.hold = hold;
        state.bits = bits;
        //---
        return Z_NEED_DICT;
      }
      strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;
      state.mode = TYPE;
      /* falls through */
    case TYPE:
      if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }
      /* falls through */
    case TYPEDO:
      if (state.last) {
        //--- BYTEBITS() ---//
        hold >>>= bits & 7;
        bits -= bits & 7;
        //---//
        state.mode = CHECK;
        break;
      }
      //=== NEEDBITS(3); */
      while (bits < 3) {
        if (have === 0) { break inf_leave; }
        have--;
        hold += input[next++] << bits;
        bits += 8;
      }
      //===//
      state.last = (hold & 0x01)/*BITS(1)*/;
      //--- DROPBITS(1) ---//
      hold >>>= 1;
      bits -= 1;
      //---//

      switch ((hold & 0x03)/*BITS(2)*/) {
      case 0:                             /* stored block */
        //Tracev((stderr, "inflate:     stored block%s\n",
        //        state.last ? " (last)" : ""));
        state.mode = STORED;
        break;
      case 1:                             /* fixed block */
        fixedtables(state);
        //Tracev((stderr, "inflate:     fixed codes block%s\n",
        //        state.last ? " (last)" : ""));
        state.mode = LEN_;             /* decode codes */
        if (flush === Z_TREES) {
          //--- DROPBITS(2) ---//
          hold >>>= 2;
          bits -= 2;
          //---//
          break inf_leave;
        }
        break;
      case 2:                             /* dynamic block */
        //Tracev((stderr, "inflate:     dynamic codes block%s\n",
        //        state.last ? " (last)" : ""));
        state.mode = TABLE;
        break;
      case 3:
        strm.msg = 'invalid block type';
        state.mode = BAD;
      }
      //--- DROPBITS(2) ---//
      hold >>>= 2;
      bits -= 2;
      //---//
      break;
    case STORED:
      //--- BYTEBITS() ---// /* go to byte boundary */
      hold >>>= bits & 7;
      bits -= bits & 7;
      //---//
      //=== NEEDBITS(32); */
      while (bits < 32) {
        if (have === 0) { break inf_leave; }
        have--;
        hold += input[next++] << bits;
        bits += 8;
      }
      //===//
      if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {
        strm.msg = 'invalid stored block lengths';
        state.mode = BAD;
        break;
      }
      state.length = hold & 0xffff;
      //Tracev((stderr, "inflate:       stored length %u\n",
      //        state.length));
      //=== INITBITS();
      hold = 0;
      bits = 0;
      //===//
      state.mode = COPY_;
      if (flush === Z_TREES) { break inf_leave; }
      /* falls through */
    case COPY_:
      state.mode = COPY;
      /* falls through */
    case COPY:
      copy = state.length;
      if (copy) {
        if (copy > have) { copy = have; }
        if (copy > left) { copy = left; }
        if (copy === 0) { break inf_leave; }
        //--- zmemcpy(put, next, copy); ---
        utils.arraySet(output, input, next, copy, put);
        //---//
        have -= copy;
        next += copy;
        left -= copy;
        put += copy;
        state.length -= copy;
        break;
      }
      //Tracev((stderr, "inflate:       stored end\n"));
      state.mode = TYPE;
      break;
    case TABLE:
      //=== NEEDBITS(14); */
      while (bits < 14) {
        if (have === 0) { break inf_leave; }
        have--;
        hold += input[next++] << bits;
        bits += 8;
      }
      //===//
      state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;
      //--- DROPBITS(5) ---//
      hold >>>= 5;
      bits -= 5;
      //---//
      state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;
      //--- DROPBITS(5) ---//
      hold >>>= 5;
      bits -= 5;
      //---//
      state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;
      //--- DROPBITS(4) ---//
      hold >>>= 4;
      bits -= 4;
      //---//
//#ifndef PKZIP_BUG_WORKAROUND
      if (state.nlen > 286 || state.ndist > 30) {
        strm.msg = 'too many length or distance symbols';
        state.mode = BAD;
        break;
      }
//#endif
      //Tracev((stderr, "inflate:       table sizes ok\n"));
      state.have = 0;
      state.mode = LENLENS;
      /* falls through */
    case LENLENS:
      while (state.have < state.ncode) {
        //=== NEEDBITS(3);
        while (bits < 3) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);
        //--- DROPBITS(3) ---//
        hold >>>= 3;
        bits -= 3;
        //---//
      }
      while (state.have < 19) {
        state.lens[order[state.have++]] = 0;
      }
      // We have separate tables & no pointers. 2 commented lines below not needed.
      //state.next = state.codes;
      //state.lencode = state.next;
      // Switch to use dynamic table
      state.lencode = state.lendyn;
      state.lenbits = 7;

      opts = {bits: state.lenbits};
      ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);
      state.lenbits = opts.bits;

      if (ret) {
        strm.msg = 'invalid code lengths set';
        state.mode = BAD;
        break;
      }
      //Tracev((stderr, "inflate:       code lengths ok\n"));
      state.have = 0;
      state.mode = CODELENS;
      /* falls through */
    case CODELENS:
      while (state.have < state.nlen + state.ndist) {
        for (;;) {
          here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/
          here_bits = here >>> 24;
          here_op = (here >>> 16) & 0xff;
          here_val = here & 0xffff;

          if ((here_bits) <= bits) { break; }
          //--- PULLBYTE() ---//
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
          //---//
        }
        if (here_val < 16) {
          //--- DROPBITS(here.bits) ---//
          hold >>>= here_bits;
          bits -= here_bits;
          //---//
          state.lens[state.have++] = here_val;
        }
        else {
          if (here_val === 16) {
            //=== NEEDBITS(here.bits + 2);
            n = here_bits + 2;
            while (bits < n) {
              if (have === 0) { break inf_leave; }
              have--;
              hold += input[next++] << bits;
              bits += 8;
            }
            //===//
            //--- DROPBITS(here.bits) ---//
            hold >>>= here_bits;
            bits -= here_bits;
            //---//
            if (state.have === 0) {
              strm.msg = 'invalid bit length repeat';
              state.mode = BAD;
              break;
            }
            len = state.lens[state.have - 1];
            copy = 3 + (hold & 0x03);//BITS(2);
            //--- DROPBITS(2) ---//
            hold >>>= 2;
            bits -= 2;
            //---//
          }
          else if (here_val === 17) {
            //=== NEEDBITS(here.bits + 3);
            n = here_bits + 3;
            while (bits < n) {
              if (have === 0) { break inf_leave; }
              have--;
              hold += input[next++] << bits;
              bits += 8;
            }
            //===//
            //--- DROPBITS(here.bits) ---//
            hold >>>= here_bits;
            bits -= here_bits;
            //---//
            len = 0;
            copy = 3 + (hold & 0x07);//BITS(3);
            //--- DROPBITS(3) ---//
            hold >>>= 3;
            bits -= 3;
            //---//
          }
          else {
            //=== NEEDBITS(here.bits + 7);
            n = here_bits + 7;
            while (bits < n) {
              if (have === 0) { break inf_leave; }
              have--;
              hold += input[next++] << bits;
              bits += 8;
            }
            //===//
            //--- DROPBITS(here.bits) ---//
            hold >>>= here_bits;
            bits -= here_bits;
            //---//
            len = 0;
            copy = 11 + (hold & 0x7f);//BITS(7);
            //--- DROPBITS(7) ---//
            hold >>>= 7;
            bits -= 7;
            //---//
          }
          if (state.have + copy > state.nlen + state.ndist) {
            strm.msg = 'invalid bit length repeat';
            state.mode = BAD;
            break;
          }
          while (copy--) {
            state.lens[state.have++] = len;
          }
        }
      }

      /* handle error breaks in while */
      if (state.mode === BAD) { break; }

      /* check for end-of-block code (better have one) */
      if (state.lens[256] === 0) {
        strm.msg = 'invalid code -- missing end-of-block';
        state.mode = BAD;
        break;
      }

      /* build code tables -- note: do not change the lenbits or distbits
         values here (9 and 6) without reading the comments in inftrees.h
         concerning the ENOUGH constants, which depend on those values */
      state.lenbits = 9;

      opts = {bits: state.lenbits};
      ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);
      // We have separate tables & no pointers. 2 commented lines below not needed.
      // state.next_index = opts.table_index;
      state.lenbits = opts.bits;
      // state.lencode = state.next;

      if (ret) {
        strm.msg = 'invalid literal/lengths set';
        state.mode = BAD;
        break;
      }

      state.distbits = 6;
      //state.distcode.copy(state.codes);
      // Switch to use dynamic table
      state.distcode = state.distdyn;
      opts = {bits: state.distbits};
      ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);
      // We have separate tables & no pointers. 2 commented lines below not needed.
      // state.next_index = opts.table_index;
      state.distbits = opts.bits;
      // state.distcode = state.next;

      if (ret) {
        strm.msg = 'invalid distances set';
        state.mode = BAD;
        break;
      }
      //Tracev((stderr, 'inflate:       codes ok\n'));
      state.mode = LEN_;
      if (flush === Z_TREES) { break inf_leave; }
      /* falls through */
    case LEN_:
      state.mode = LEN;
      /* falls through */
    case LEN:
      if (have >= 6 && left >= 258) {
        //--- RESTORE() ---
        strm.next_out = put;
        strm.avail_out = left;
        strm.next_in = next;
        strm.avail_in = have;
        state.hold = hold;
        state.bits = bits;
        //---
        inflate_fast(strm, _out);
        //--- LOAD() ---
        put = strm.next_out;
        output = strm.output;
        left = strm.avail_out;
        next = strm.next_in;
        input = strm.input;
        have = strm.avail_in;
        hold = state.hold;
        bits = state.bits;
        //---

        if (state.mode === TYPE) {
          state.back = -1;
        }
        break;
      }
      state.back = 0;
      for (;;) {
        here = state.lencode[hold & ((1 << state.lenbits) -1)];  /*BITS(state.lenbits)*/
        here_bits = here >>> 24;
        here_op = (here >>> 16) & 0xff;
        here_val = here & 0xffff;

        if (here_bits <= bits) { break; }
        //--- PULLBYTE() ---//
        if (have === 0) { break inf_leave; }
        have--;
        hold += input[next++] << bits;
        bits += 8;
        //---//
      }
      if (here_op && (here_op & 0xf0) === 0) {
        last_bits = here_bits;
        last_op = here_op;
        last_val = here_val;
        for (;;) {
          here = state.lencode[last_val +
                  ((hold & ((1 << (last_bits + last_op)) -1))/*BITS(last.bits + last.op)*/ >> last_bits)];
          here_bits = here >>> 24;
          here_op = (here >>> 16) & 0xff;
          here_val = here & 0xffff;

          if ((last_bits + here_bits) <= bits) { break; }
          //--- PULLBYTE() ---//
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
          //---//
        }
        //--- DROPBITS(last.bits) ---//
        hold >>>= last_bits;
        bits -= last_bits;
        //---//
        state.back += last_bits;
      }
      //--- DROPBITS(here.bits) ---//
      hold >>>= here_bits;
      bits -= here_bits;
      //---//
      state.back += here_bits;
      state.length = here_val;
      if (here_op === 0) {
        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
        //        "inflate:         literal '%c'\n" :
        //        "inflate:         literal 0x%02x\n", here.val));
        state.mode = LIT;
        break;
      }
      if (here_op & 32) {
        //Tracevv((stderr, "inflate:         end of block\n"));
        state.back = -1;
        state.mode = TYPE;
        break;
      }
      if (here_op & 64) {
        strm.msg = 'invalid literal/length code';
        state.mode = BAD;
        break;
      }
      state.extra = here_op & 15;
      state.mode = LENEXT;
      /* falls through */
    case LENEXT:
      if (state.extra) {
        //=== NEEDBITS(state.extra);
        n = state.extra;
        while (bits < n) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.length += hold & ((1 << state.extra) -1)/*BITS(state.extra)*/;
        //--- DROPBITS(state.extra) ---//
        hold >>>= state.extra;
        bits -= state.extra;
        //---//
        state.back += state.extra;
      }
      //Tracevv((stderr, "inflate:         length %u\n", state.length));
      state.was = state.length;
      state.mode = DIST;
      /* falls through */
    case DIST:
      for (;;) {
        here = state.distcode[hold & ((1 << state.distbits) -1)];/*BITS(state.distbits)*/
        here_bits = here >>> 24;
        here_op = (here >>> 16) & 0xff;
        here_val = here & 0xffff;

        if ((here_bits) <= bits) { break; }
        //--- PULLBYTE() ---//
        if (have === 0) { break inf_leave; }
        have--;
        hold += input[next++] << bits;
        bits += 8;
        //---//
      }
      if ((here_op & 0xf0) === 0) {
        last_bits = here_bits;
        last_op = here_op;
        last_val = here_val;
        for (;;) {
          here = state.distcode[last_val +
                  ((hold & ((1 << (last_bits + last_op)) -1))/*BITS(last.bits + last.op)*/ >> last_bits)];
          here_bits = here >>> 24;
          here_op = (here >>> 16) & 0xff;
          here_val = here & 0xffff;

          if ((last_bits + here_bits) <= bits) { break; }
          //--- PULLBYTE() ---//
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
          //---//
        }
        //--- DROPBITS(last.bits) ---//
        hold >>>= last_bits;
        bits -= last_bits;
        //---//
        state.back += last_bits;
      }
      //--- DROPBITS(here.bits) ---//
      hold >>>= here_bits;
      bits -= here_bits;
      //---//
      state.back += here_bits;
      if (here_op & 64) {
        strm.msg = 'invalid distance code';
        state.mode = BAD;
        break;
      }
      state.offset = here_val;
      state.extra = (here_op) & 15;
      state.mode = DISTEXT;
      /* falls through */
    case DISTEXT:
      if (state.extra) {
        //=== NEEDBITS(state.extra);
        n = state.extra;
        while (bits < n) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.offset += hold & ((1 << state.extra) -1)/*BITS(state.extra)*/;
        //--- DROPBITS(state.extra) ---//
        hold >>>= state.extra;
        bits -= state.extra;
        //---//
        state.back += state.extra;
      }
//#ifdef INFLATE_STRICT
      if (state.offset > state.dmax) {
        strm.msg = 'invalid distance too far back';
        state.mode = BAD;
        break;
      }
//#endif
      //Tracevv((stderr, "inflate:         distance %u\n", state.offset));
      state.mode = MATCH;
      /* falls through */
    case MATCH:
      if (left === 0) { break inf_leave; }
      copy = _out - left;
      if (state.offset > copy) {         /* copy from window */
        copy = state.offset - copy;
        if (copy > state.whave) {
          if (state.sane) {
            strm.msg = 'invalid distance too far back';
            state.mode = BAD;
            break;
          }
// (!) This block is disabled in zlib defailts,
// don't enable it for binary compatibility
//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
//          Trace((stderr, "inflate.c too far\n"));
//          copy -= state.whave;
//          if (copy > state.length) { copy = state.length; }
//          if (copy > left) { copy = left; }
//          left -= copy;
//          state.length -= copy;
//          do {
//            output[put++] = 0;
//          } while (--copy);
//          if (state.length === 0) { state.mode = LEN; }
//          break;
//#endif
        }
        if (copy > state.wnext) {
          copy -= state.wnext;
          from = state.wsize - copy;
        }
        else {
          from = state.wnext - copy;
        }
        if (copy > state.length) { copy = state.length; }
        from_source = state.window;
      }
      else {                              /* copy from output */
        from_source = output;
        from = put - state.offset;
        copy = state.length;
      }
      if (copy > left) { copy = left; }
      left -= copy;
      state.length -= copy;
      do {
        output[put++] = from_source[from++];
      } while (--copy);
      if (state.length === 0) { state.mode = LEN; }
      break;
    case LIT:
      if (left === 0) { break inf_leave; }
      output[put++] = state.length;
      left--;
      state.mode = LEN;
      break;
    case CHECK:
      if (state.wrap) {
        //=== NEEDBITS(32);
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          // Use '|' insdead of '+' to make sure that result is signed
          hold |= input[next++] << bits;
          bits += 8;
        }
        //===//
        _out -= left;
        strm.total_out += _out;
        state.total += _out;
        if (_out) {
          strm.adler = state.check =
              /*UPDATE(state.check, put - _out, _out);*/
              (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));

        }
        _out = left;
        // NB: crc32 stored as signed 32-bit int, ZSWAP32 returns signed too
        if ((state.flags ? hold : ZSWAP32(hold)) !== state.check) {
          strm.msg = 'incorrect data check';
          state.mode = BAD;
          break;
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        //Tracev((stderr, "inflate:   check matches trailer\n"));
      }
      state.mode = LENGTH;
      /* falls through */
    case LENGTH:
      if (state.wrap && state.flags) {
        //=== NEEDBITS(32);
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if (hold !== (state.total & 0xffffffff)) {
          strm.msg = 'incorrect length check';
          state.mode = BAD;
          break;
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        //Tracev((stderr, "inflate:   length matches trailer\n"));
      }
      state.mode = DONE;
      /* falls through */
    case DONE:
      ret = Z_STREAM_END;
      break inf_leave;
    case BAD:
      ret = Z_DATA_ERROR;
      break inf_leave;
    case MEM:
      return Z_MEM_ERROR;
    case SYNC:
      /* falls through */
    default:
      return Z_STREAM_ERROR;
    }
  }

  // inf_leave <- here is real place for "goto inf_leave", emulated via "break inf_leave"

  /*
     Return from inflate(), updating the total counts and the check value.
     If there was no progress during the inflate() call, return a buffer
     error.  Call updatewindow() to create and/or update the window state.
     Note: a memory error from inflate() is non-recoverable.
   */

  //--- RESTORE() ---
  strm.next_out = put;
  strm.avail_out = left;
  strm.next_in = next;
  strm.avail_in = have;
  state.hold = hold;
  state.bits = bits;
  //---

  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&
                      (state.mode < CHECK || flush !== Z_FINISH))) {
    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {
      state.mode = MEM;
      return Z_MEM_ERROR;
    }
  }
  _in -= strm.avail_in;
  _out -= strm.avail_out;
  strm.total_in += _in;
  strm.total_out += _out;
  state.total += _out;
  if (state.wrap && _out) {
    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/
      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));
  }
  strm.data_type = state.bits + (state.last ? 64 : 0) +
                    (state.mode === TYPE ? 128 : 0) +
                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);
  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {
    ret = Z_BUF_ERROR;
  }
  return ret;
}

function inflateEnd(strm) {

  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {
    return Z_STREAM_ERROR;
  }

  var state = strm.state;
  if (state.window) {
    state.window = null;
  }
  strm.state = null;
  return Z_OK;
}

function inflateGetHeader(strm, head) {
  var state;

  /* check state */
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;
  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }

  /* save header structure */
  state.head = head;
  head.done = false;
  return Z_OK;
}


exports.inflateReset = inflateReset;
exports.inflateReset2 = inflateReset2;
exports.inflateResetKeep = inflateResetKeep;
exports.inflateInit = inflateInit;
exports.inflateInit2 = inflateInit2;
exports.inflate = inflate;
exports.inflateEnd = inflateEnd;
exports.inflateGetHeader = inflateGetHeader;
exports.inflateInfo = 'pako inflate (from Nodeca project)';

/* Not implemented
exports.inflateCopy = inflateCopy;
exports.inflateGetDictionary = inflateGetDictionary;
exports.inflateMark = inflateMark;
exports.inflatePrime = inflatePrime;
exports.inflateSetDictionary = inflateSetDictionary;
exports.inflateSync = inflateSync;
exports.inflateSyncPoint = inflateSyncPoint;
exports.inflateUndermine = inflateUndermine;
*/

},{"../utils/common":4,"./adler32":5,"./crc32":7,"./inffast":9,"./inftrees":11}],11:[function(require,module,exports){
'use strict';


var utils = require('../utils/common');

var MAXBITS = 15;
var ENOUGH_LENS = 852;
var ENOUGH_DISTS = 592;
//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);

var CODES = 0;
var LENS = 1;
var DISTS = 2;

var lbase = [ /* Length codes 257..285 base */
  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,
  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0
];

var lext = [ /* Length codes 257..285 extra */
  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,
  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78
];

var dbase = [ /* Distance codes 0..29 base */
  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,
  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,
  8193, 12289, 16385, 24577, 0, 0
];

var dext = [ /* Distance codes 0..29 extra */
  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,
  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,
  28, 28, 29, 29, 64, 64
];

module.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)
{
  var bits = opts.bits;
      //here = opts.here; /* table entry for duplication */

  var len = 0;               /* a code's length in bits */
  var sym = 0;               /* index of code symbols */
  var min = 0, max = 0;          /* minimum and maximum code lengths */
  var root = 0;              /* number of index bits for root table */
  var curr = 0;              /* number of index bits for current table */
  var drop = 0;              /* code bits to drop for sub-table */
  var left = 0;                   /* number of prefix codes available */
  var used = 0;              /* code entries in table used */
  var huff = 0;              /* Huffman code */
  var incr;              /* for incrementing code, index */
  var fill;              /* index for replicating entries */
  var low;               /* low bits for current root entry */
  var mask;              /* mask for low root bits */
  var next;             /* next available space in table */
  var base = null;     /* base value table to use */
  var base_index = 0;
//  var shoextra;    /* extra bits table to use */
  var end;                    /* use base and extra for symbol > end */
  var count = new utils.Buf16(MAXBITS+1); //[MAXBITS+1];    /* number of codes of each length */
  var offs = new utils.Buf16(MAXBITS+1); //[MAXBITS+1];     /* offsets in table for each length */
  var extra = null;
  var extra_index = 0;

  var here_bits, here_op, here_val;

  /*
   Process a set of code lengths to create a canonical Huffman code.  The
   code lengths are lens[0..codes-1].  Each length corresponds to the
   symbols 0..codes-1.  The Huffman code is generated by first sorting the
   symbols by length from short to long, and retaining the symbol order
   for codes with equal lengths.  Then the code starts with all zero bits
   for the first code of the shortest length, and the codes are integer
   increments for the same length, and zeros are appended as the length
   increases.  For the deflate format, these bits are stored backwards
   from their more natural integer increment ordering, and so when the
   decoding tables are built in the large loop below, the integer codes
   are incremented backwards.

   This routine assumes, but does not check, that all of the entries in
   lens[] are in the range 0..MAXBITS.  The caller must assure this.
   1..MAXBITS is interpreted as that code length.  zero means that that
   symbol does not occur in this code.

   The codes are sorted by computing a count of codes for each length,
   creating from that a table of starting indices for each length in the
   sorted table, and then entering the symbols in order in the sorted
   table.  The sorted table is work[], with that space being provided by
   the caller.

   The length counts are used for other purposes as well, i.e. finding
   the minimum and maximum length codes, determining if there are any
   codes at all, checking for a valid set of lengths, and looking ahead
   at length counts to determine sub-table sizes when building the
   decoding tables.
   */

  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */
  for (len = 0; len <= MAXBITS; len++) {
    count[len] = 0;
  }
  for (sym = 0; sym < codes; sym++) {
    count[lens[lens_index + sym]]++;
  }

  /* bound code lengths, force root to be within code lengths */
  root = bits;
  for (max = MAXBITS; max >= 1; max--) {
    if (count[max] !== 0) { break; }
  }
  if (root > max) {
    root = max;
  }
  if (max === 0) {                     /* no symbols to code at all */
    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */
    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;
    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;
    table[table_index++] = (1 << 24) | (64 << 16) | 0;


    //table.op[opts.table_index] = 64;
    //table.bits[opts.table_index] = 1;
    //table.val[opts.table_index++] = 0;
    table[table_index++] = (1 << 24) | (64 << 16) | 0;

    opts.bits = 1;
    return 0;     /* no symbols, but wait for decoding to report error */
  }
  for (min = 1; min < max; min++) {
    if (count[min] !== 0) { break; }
  }
  if (root < min) {
    root = min;
  }

  /* check for an over-subscribed or incomplete set of lengths */
  left = 1;
  for (len = 1; len <= MAXBITS; len++) {
    left <<= 1;
    left -= count[len];
    if (left < 0) {
      return -1;
    }        /* over-subscribed */
  }
  if (left > 0 && (type === CODES || max !== 1)) {
    return -1;                      /* incomplete set */
  }

  /* generate offsets into symbol table for each length for sorting */
  offs[1] = 0;
  for (len = 1; len < MAXBITS; len++) {
    offs[len + 1] = offs[len] + count[len];
  }

  /* sort symbols by length, by symbol order within each length */
  for (sym = 0; sym < codes; sym++) {
    if (lens[lens_index + sym] !== 0) {
      work[offs[lens[lens_index + sym]]++] = sym;
    }
  }

  /*
   Create and fill in decoding tables.  In this loop, the table being
   filled is at next and has curr index bits.  The code being used is huff
   with length len.  That code is converted to an index by dropping drop
   bits off of the bottom.  For codes where len is less than drop + curr,
   those top drop + curr - len bits are incremented through all values to
   fill the table with replicated entries.

   root is the number of index bits for the root table.  When len exceeds
   root, sub-tables are created pointed to by the root entry with an index
   of the low root bits of huff.  This is saved in low to check for when a
   new sub-table should be started.  drop is zero when the root table is
   being filled, and drop is root when sub-tables are being filled.

   When a new sub-table is needed, it is necessary to look ahead in the
   code lengths to determine what size sub-table is needed.  The length
   counts are used for this, and so count[] is decremented as codes are
   entered in the tables.

   used keeps track of how many table entries have been allocated from the
   provided *table space.  It is checked for LENS and DIST tables against
   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in
   the initial root table size constants.  See the comments in inftrees.h
   for more information.

   sym increments through all symbols, and the loop terminates when
   all codes of length max, i.e. all codes, have been processed.  This
   routine permits incomplete codes, so another loop after this one fills
   in the rest of the decoding tables with invalid code markers.
   */

  /* set up for code type */
  // poor man optimization - use if-else instead of switch,
  // to avoid deopts in old v8
  if (type === CODES) {
    base = extra = work;    /* dummy value--not used */
    end = 19;

  } else if (type === LENS) {
    base = lbase;
    base_index -= 257;
    extra = lext;
    extra_index -= 257;
    end = 256;

  } else {                    /* DISTS */
    base = dbase;
    extra = dext;
    end = -1;
  }

  /* initialize opts for loop */
  huff = 0;                   /* starting code */
  sym = 0;                    /* starting code symbol */
  len = min;                  /* starting code length */
  next = table_index;              /* current table to fill in */
  curr = root;                /* current table index bits */
  drop = 0;                   /* current bits to drop from code for index */
  low = -1;                   /* trigger new sub-table when len > root */
  used = 1 << root;          /* use root table entries */
  mask = used - 1;            /* mask for comparing low */

  /* check available table space */
  if ((type === LENS && used > ENOUGH_LENS) ||
    (type === DISTS && used > ENOUGH_DISTS)) {
    return 1;
  }

  var i=0;
  /* process all codes and make table entries */
  for (;;) {
    i++;
    /* create table entry */
    here_bits = len - drop;
    if (work[sym] < end) {
      here_op = 0;
      here_val = work[sym];
    }
    else if (work[sym] > end) {
      here_op = extra[extra_index + work[sym]];
      here_val = base[base_index + work[sym]];
    }
    else {
      here_op = 32 + 64;         /* end of block */
      here_val = 0;
    }

    /* replicate for those indices with low len bits equal to huff */
    incr = 1 << (len - drop);
    fill = 1 << curr;
    min = fill;                 /* save offset to next table */
    do {
      fill -= incr;
      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;
    } while (fill !== 0);

    /* backwards increment the len-bit code huff */
    incr = 1 << (len - 1);
    while (huff & incr) {
      incr >>= 1;
    }
    if (incr !== 0) {
      huff &= incr - 1;
      huff += incr;
    } else {
      huff = 0;
    }

    /* go to next symbol, update count, len */
    sym++;
    if (--count[len] === 0) {
      if (len === max) { break; }
      len = lens[lens_index + work[sym]];
    }

    /* create new sub-table if needed */
    if (len > root && (huff & mask) !== low) {
      /* if first time, transition to sub-tables */
      if (drop === 0) {
        drop = root;
      }

      /* increment past last table */
      next += min;            /* here min is 1 << curr */

      /* determine length of next table */
      curr = len - drop;
      left = 1 << curr;
      while (curr + drop < max) {
        left -= count[curr + drop];
        if (left <= 0) { break; }
        curr++;
        left <<= 1;
      }

      /* check for enough space */
      used += 1 << curr;
      if ((type === LENS && used > ENOUGH_LENS) ||
        (type === DISTS && used > ENOUGH_DISTS)) {
        return 1;
      }

      /* point entry in root table to sub-table */
      low = huff & mask;
      /*table.op[low] = curr;
      table.bits[low] = root;
      table.val[low] = next - opts.table_index;*/
      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;
    }
  }

  /* fill in remaining table entry if code is incomplete (guaranteed to have
   at most one remaining entry, since if the code is incomplete, the
   maximum code length that was allowed to get this far is one bit) */
  if (huff !== 0) {
    //table.op[next + huff] = 64;            /* invalid code marker */
    //table.bits[next + huff] = len - drop;
    //table.val[next + huff] = 0;
    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;
  }

  /* set return parameters */
  //opts.table_index += used;
  opts.bits = root;
  return 0;
};

},{"../utils/common":4}],12:[function(require,module,exports){
'use strict';

module.exports = {
  '2':    'need dictionary',     /* Z_NEED_DICT       2  */
  '1':    'stream end',          /* Z_STREAM_END      1  */
  '0':    '',                    /* Z_OK              0  */
  '-1':   'file error',          /* Z_ERRNO         (-1) */
  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */
  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */
  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */
  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */
  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */
};

},{}],13:[function(require,module,exports){
'use strict';


var utils = require('../utils/common');

/* Public constants ==========================================================*/
/* ===========================================================================*/


//var Z_FILTERED          = 1;
//var Z_HUFFMAN_ONLY      = 2;
//var Z_RLE               = 3;
var Z_FIXED               = 4;
//var Z_DEFAULT_STRATEGY  = 0;

/* Possible values of the data_type field (though see inflate()) */
var Z_BINARY              = 0;
var Z_TEXT                = 1;
//var Z_ASCII             = 1; // = Z_TEXT
var Z_UNKNOWN             = 2;

/*============================================================================*/


function zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }

// From zutil.h

var STORED_BLOCK = 0;
var STATIC_TREES = 1;
var DYN_TREES    = 2;
/* The three kinds of block type */

var MIN_MATCH    = 3;
var MAX_MATCH    = 258;
/* The minimum and maximum match lengths */

// From deflate.h
/* ===========================================================================
 * Internal compression state.
 */

var LENGTH_CODES  = 29;
/* number of length codes, not counting the special END_BLOCK code */

var LITERALS      = 256;
/* number of literal bytes 0..255 */

var L_CODES       = LITERALS + 1 + LENGTH_CODES;
/* number of Literal or Length codes, including the END_BLOCK code */

var D_CODES       = 30;
/* number of distance codes */

var BL_CODES      = 19;
/* number of codes used to transfer the bit lengths */

var HEAP_SIZE     = 2*L_CODES + 1;
/* maximum heap size */

var MAX_BITS      = 15;
/* All codes must not exceed MAX_BITS bits */

var Buf_size      = 16;
/* size of bit buffer in bi_buf */


/* ===========================================================================
 * Constants
 */

var MAX_BL_BITS = 7;
/* Bit length codes must not exceed MAX_BL_BITS bits */

var END_BLOCK   = 256;
/* end of block literal code */

var REP_3_6     = 16;
/* repeat previous bit length 3-6 times (2 bits of repeat count) */

var REPZ_3_10   = 17;
/* repeat a zero length 3-10 times  (3 bits of repeat count) */

var REPZ_11_138 = 18;
/* repeat a zero length 11-138 times  (7 bits of repeat count) */

var extra_lbits =   /* extra bits for each length code */
  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];

var extra_dbits =   /* extra bits for each distance code */
  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];

var extra_blbits =  /* extra bits for each bit length code */
  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];

var bl_order =
  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];
/* The lengths of the bit length codes are sent in order of decreasing
 * probability, to avoid transmitting the lengths for unused bit length codes.
 */

/* ===========================================================================
 * Local data. These are initialized only once.
 */

// We pre-fill arrays with 0 to avoid uninitialized gaps

var DIST_CODE_LEN = 512; /* see definition of array dist_code below */

// !!!! Use flat array insdead of structure, Freq = i*2, Len = i*2+1
var static_ltree  = new Array((L_CODES+2) * 2);
zero(static_ltree);
/* The static literal tree. Since the bit lengths are imposed, there is no
 * need for the L_CODES extra codes used during heap construction. However
 * The codes 286 and 287 are needed to build a canonical tree (see _tr_init
 * below).
 */

var static_dtree  = new Array(D_CODES * 2);
zero(static_dtree);
/* The static distance tree. (Actually a trivial tree since all codes use
 * 5 bits.)
 */

var _dist_code    = new Array(DIST_CODE_LEN);
zero(_dist_code);
/* Distance codes. The first 256 values correspond to the distances
 * 3 .. 258, the last 256 values correspond to the top 8 bits of
 * the 15 bit distances.
 */

var _length_code  = new Array(MAX_MATCH-MIN_MATCH+1);
zero(_length_code);
/* length code for each normalized match length (0 == MIN_MATCH) */

var base_length   = new Array(LENGTH_CODES);
zero(base_length);
/* First normalized length for each code (0 = MIN_MATCH) */

var base_dist     = new Array(D_CODES);
zero(base_dist);
/* First normalized distance for each code (0 = distance of 1) */


var StaticTreeDesc = function (static_tree, extra_bits, extra_base, elems, max_length) {

  this.static_tree  = static_tree;  /* static tree or NULL */
  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */
  this.extra_base   = extra_base;   /* base index for extra_bits */
  this.elems        = elems;        /* max number of elements in the tree */
  this.max_length   = max_length;   /* max bit length for the codes */

  // show if `static_tree` has data or dummy - needed for monomorphic objects
  this.has_stree    = static_tree && static_tree.length;
};


var static_l_desc;
var static_d_desc;
var static_bl_desc;


var TreeDesc = function(dyn_tree, stat_desc) {
  this.dyn_tree = dyn_tree;     /* the dynamic tree */
  this.max_code = 0;            /* largest code with non zero frequency */
  this.stat_desc = stat_desc;   /* the corresponding static tree */
};



function d_code(dist) {
  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];
}


/* ===========================================================================
 * Output a short LSB first on the stream.
 * IN assertion: there is enough room in pendingBuf.
 */
function put_short (s, w) {
//    put_byte(s, (uch)((w) & 0xff));
//    put_byte(s, (uch)((ush)(w) >> 8));
  s.pending_buf[s.pending++] = (w) & 0xff;
  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;
}


/* ===========================================================================
 * Send a value on a given number of bits.
 * IN assertion: length <= 16 and value fits in length bits.
 */
function send_bits(s, value, length) {
  if (s.bi_valid > (Buf_size - length)) {
    s.bi_buf |= (value << s.bi_valid) & 0xffff;
    put_short(s, s.bi_buf);
    s.bi_buf = value >> (Buf_size - s.bi_valid);
    s.bi_valid += length - Buf_size;
  } else {
    s.bi_buf |= (value << s.bi_valid) & 0xffff;
    s.bi_valid += length;
  }
}


function send_code(s, c, tree) {
  send_bits(s, tree[c*2]/*.Code*/, tree[c*2 + 1]/*.Len*/);
}


/* ===========================================================================
 * Reverse the first len bits of a code, using straightforward code (a faster
 * method would use a table)
 * IN assertion: 1 <= len <= 15
 */
function bi_reverse(code, len) {
  var res = 0;
  do {
    res |= code & 1;
    code >>>= 1;
    res <<= 1;
  } while (--len > 0);
  return res >>> 1;
}


/* ===========================================================================
 * Flush the bit buffer, keeping at most 7 bits in it.
 */
function bi_flush(s) {
  if (s.bi_valid === 16) {
    put_short(s, s.bi_buf);
    s.bi_buf = 0;
    s.bi_valid = 0;

  } else if (s.bi_valid >= 8) {
    s.pending_buf[s.pending++] = s.bi_buf & 0xff;
    s.bi_buf >>= 8;
    s.bi_valid -= 8;
  }
}


/* ===========================================================================
 * Compute the optimal bit lengths for a tree and update the total bit length
 * for the current block.
 * IN assertion: the fields freq and dad are set, heap[heap_max] and
 *    above are the tree nodes sorted by increasing frequency.
 * OUT assertions: the field len is set to the optimal bit length, the
 *     array bl_count contains the frequencies for each bit length.
 *     The length opt_len is updated; static_len is also updated if stree is
 *     not null.
 */
function gen_bitlen(s, desc)
//    deflate_state *s;
//    tree_desc *desc;    /* the tree descriptor */
{
  var tree            = desc.dyn_tree;
  var max_code        = desc.max_code;
  var stree           = desc.stat_desc.static_tree;
  var has_stree       = desc.stat_desc.has_stree;
  var extra           = desc.stat_desc.extra_bits;
  var base            = desc.stat_desc.extra_base;
  var max_length      = desc.stat_desc.max_length;
  var h;              /* heap index */
  var n, m;           /* iterate over the tree elements */
  var bits;           /* bit length */
  var xbits;          /* extra bits */
  var f;              /* frequency */
  var overflow = 0;   /* number of elements with bit length too large */

  for (bits = 0; bits <= MAX_BITS; bits++) {
    s.bl_count[bits] = 0;
  }

  /* In a first pass, compute the optimal bit lengths (which may
   * overflow in the case of the bit length tree).
   */
  tree[s.heap[s.heap_max]*2 + 1]/*.Len*/ = 0; /* root of the heap */

  for (h = s.heap_max+1; h < HEAP_SIZE; h++) {
    n = s.heap[h];
    bits = tree[tree[n*2 +1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;
    if (bits > max_length) {
      bits = max_length;
      overflow++;
    }
    tree[n*2 + 1]/*.Len*/ = bits;
    /* We overwrite tree[n].Dad which is no longer needed */

    if (n > max_code) { continue; } /* not a leaf node */

    s.bl_count[bits]++;
    xbits = 0;
    if (n >= base) {
      xbits = extra[n-base];
    }
    f = tree[n * 2]/*.Freq*/;
    s.opt_len += f * (bits + xbits);
    if (has_stree) {
      s.static_len += f * (stree[n*2 + 1]/*.Len*/ + xbits);
    }
  }
  if (overflow === 0) { return; }

  // Trace((stderr,"\nbit length overflow\n"));
  /* This happens for example on obj2 and pic of the Calgary corpus */

  /* Find the first bit length which could increase: */
  do {
    bits = max_length-1;
    while (s.bl_count[bits] === 0) { bits--; }
    s.bl_count[bits]--;      /* move one leaf down the tree */
    s.bl_count[bits+1] += 2; /* move one overflow item as its brother */
    s.bl_count[max_length]--;
    /* The brother of the overflow item also moves one step up,
     * but this does not affect bl_count[max_length]
     */
    overflow -= 2;
  } while (overflow > 0);

  /* Now recompute all bit lengths, scanning in increasing frequency.
   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all
   * lengths instead of fixing only the wrong ones. This idea is taken
   * from 'ar' written by Haruhiko Okumura.)
   */
  for (bits = max_length; bits !== 0; bits--) {
    n = s.bl_count[bits];
    while (n !== 0) {
      m = s.heap[--h];
      if (m > max_code) { continue; }
      if (tree[m*2 + 1]/*.Len*/ !== bits) {
        // Trace((stderr,"code %d bits %d->%d\n", m, tree[m].Len, bits));
        s.opt_len += (bits - tree[m*2 + 1]/*.Len*/)*tree[m*2]/*.Freq*/;
        tree[m*2 + 1]/*.Len*/ = bits;
      }
      n--;
    }
  }
}


/* ===========================================================================
 * Generate the codes for a given tree and bit counts (which need not be
 * optimal).
 * IN assertion: the array bl_count contains the bit length statistics for
 * the given tree and the field len is set for all tree elements.
 * OUT assertion: the field code is set for all tree elements of non
 *     zero code length.
 */
function gen_codes(tree, max_code, bl_count)
//    ct_data *tree;             /* the tree to decorate */
//    int max_code;              /* largest code with non zero frequency */
//    ushf *bl_count;            /* number of codes at each bit length */
{
  var next_code = new Array(MAX_BITS+1); /* next code value for each bit length */
  var code = 0;              /* running code value */
  var bits;                  /* bit index */
  var n;                     /* code index */

  /* The distribution counts are first used to generate the code values
   * without bit reversal.
   */
  for (bits = 1; bits <= MAX_BITS; bits++) {
    next_code[bits] = code = (code + bl_count[bits-1]) << 1;
  }
  /* Check that the bit counts in bl_count are consistent. The last code
   * must be all ones.
   */
  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,
  //        "inconsistent bit counts");
  //Tracev((stderr,"\ngen_codes: max_code %d ", max_code));

  for (n = 0;  n <= max_code; n++) {
    var len = tree[n*2 + 1]/*.Len*/;
    if (len === 0) { continue; }
    /* Now reverse the bits */
    tree[n*2]/*.Code*/ = bi_reverse(next_code[len]++, len);

    //Tracecv(tree != static_ltree, (stderr,"\nn %3d %c l %2d c %4x (%x) ",
    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));
  }
}


/* ===========================================================================
 * Initialize the various 'constant' tables.
 */
function tr_static_init() {
  var n;        /* iterates over tree elements */
  var bits;     /* bit counter */
  var length;   /* length value */
  var code;     /* code value */
  var dist;     /* distance index */
  var bl_count = new Array(MAX_BITS+1);
  /* number of codes at each bit length for an optimal tree */

  // do check in _tr_init()
  //if (static_init_done) return;

  /* For some embedded targets, global variables are not initialized: */
/*#ifdef NO_INIT_GLOBAL_POINTERS
  static_l_desc.static_tree = static_ltree;
  static_l_desc.extra_bits = extra_lbits;
  static_d_desc.static_tree = static_dtree;
  static_d_desc.extra_bits = extra_dbits;
  static_bl_desc.extra_bits = extra_blbits;
#endif*/

  /* Initialize the mapping length (0..255) -> length code (0..28) */
  length = 0;
  for (code = 0; code < LENGTH_CODES-1; code++) {
    base_length[code] = length;
    for (n = 0; n < (1<<extra_lbits[code]); n++) {
      _length_code[length++] = code;
    }
  }
  //Assert (length == 256, "tr_static_init: length != 256");
  /* Note that the length 255 (match length 258) can be represented
   * in two different ways: code 284 + 5 bits or code 285, so we
   * overwrite length_code[255] to use the best encoding:
   */
  _length_code[length-1] = code;

  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */
  dist = 0;
  for (code = 0 ; code < 16; code++) {
    base_dist[code] = dist;
    for (n = 0; n < (1<<extra_dbits[code]); n++) {
      _dist_code[dist++] = code;
    }
  }
  //Assert (dist == 256, "tr_static_init: dist != 256");
  dist >>= 7; /* from now on, all distances are divided by 128 */
  for (; code < D_CODES; code++) {
    base_dist[code] = dist << 7;
    for (n = 0; n < (1<<(extra_dbits[code]-7)); n++) {
      _dist_code[256 + dist++] = code;
    }
  }
  //Assert (dist == 256, "tr_static_init: 256+dist != 512");

  /* Construct the codes of the static literal tree */
  for (bits = 0; bits <= MAX_BITS; bits++) {
    bl_count[bits] = 0;
  }

  n = 0;
  while (n <= 143) {
    static_ltree[n*2 + 1]/*.Len*/ = 8;
    n++;
    bl_count[8]++;
  }
  while (n <= 255) {
    static_ltree[n*2 + 1]/*.Len*/ = 9;
    n++;
    bl_count[9]++;
  }
  while (n <= 279) {
    static_ltree[n*2 + 1]/*.Len*/ = 7;
    n++;
    bl_count[7]++;
  }
  while (n <= 287) {
    static_ltree[n*2 + 1]/*.Len*/ = 8;
    n++;
    bl_count[8]++;
  }
  /* Codes 286 and 287 do not exist, but we must include them in the
   * tree construction to get a canonical Huffman tree (longest code
   * all ones)
   */
  gen_codes(static_ltree, L_CODES+1, bl_count);

  /* The static distance tree is trivial: */
  for (n = 0; n < D_CODES; n++) {
    static_dtree[n*2 + 1]/*.Len*/ = 5;
    static_dtree[n*2]/*.Code*/ = bi_reverse(n, 5);
  }

  // Now data ready and we can init static trees
  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS+1, L_CODES, MAX_BITS);
  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);
  static_bl_desc =new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);

  //static_init_done = true;
}


/* ===========================================================================
 * Initialize a new block.
 */
function init_block(s) {
  var n; /* iterates over tree elements */

  /* Initialize the trees. */
  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n*2]/*.Freq*/ = 0; }
  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n*2]/*.Freq*/ = 0; }
  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n*2]/*.Freq*/ = 0; }

  s.dyn_ltree[END_BLOCK*2]/*.Freq*/ = 1;
  s.opt_len = s.static_len = 0;
  s.last_lit = s.matches = 0;
}


/* ===========================================================================
 * Flush the bit buffer and align the output on a byte boundary
 */
function bi_windup(s)
{
  if (s.bi_valid > 8) {
    put_short(s, s.bi_buf);
  } else if (s.bi_valid > 0) {
    //put_byte(s, (Byte)s->bi_buf);
    s.pending_buf[s.pending++] = s.bi_buf;
  }
  s.bi_buf = 0;
  s.bi_valid = 0;
}

/* ===========================================================================
 * Copy a stored block, storing first the length and its
 * one's complement if requested.
 */
function copy_block(s, buf, len, header)
//DeflateState *s;
//charf    *buf;    /* the input data */
//unsigned len;     /* its length */
//int      header;  /* true if block header must be written */
{
  bi_windup(s);        /* align on byte boundary */

  if (header) {
    put_short(s, len);
    put_short(s, ~len);
  }
//  while (len--) {
//    put_byte(s, *buf++);
//  }
  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);
  s.pending += len;
}

/* ===========================================================================
 * Compares to subtrees, using the tree depth as tie breaker when
 * the subtrees have equal frequency. This minimizes the worst case length.
 */
function smaller(tree, n, m, depth) {
  var _n2 = n*2;
  var _m2 = m*2;
  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||
         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));
}

/* ===========================================================================
 * Restore the heap property by moving down the tree starting at node k,
 * exchanging a node with the smallest of its two sons if necessary, stopping
 * when the heap property is re-established (each father smaller than its
 * two sons).
 */
function pqdownheap(s, tree, k)
//    deflate_state *s;
//    ct_data *tree;  /* the tree to restore */
//    int k;               /* node to move down */
{
  var v = s.heap[k];
  var j = k << 1;  /* left son of k */
  while (j <= s.heap_len) {
    /* Set j to the smallest of the two sons: */
    if (j < s.heap_len &&
      smaller(tree, s.heap[j+1], s.heap[j], s.depth)) {
      j++;
    }
    /* Exit if v is smaller than both sons */
    if (smaller(tree, v, s.heap[j], s.depth)) { break; }

    /* Exchange v with the smallest son */
    s.heap[k] = s.heap[j];
    k = j;

    /* And continue down the tree, setting j to the left son of k */
    j <<= 1;
  }
  s.heap[k] = v;
}


// inlined manually
// var SMALLEST = 1;

/* ===========================================================================
 * Send the block data compressed using the given Huffman trees
 */
function compress_block(s, ltree, dtree)
//    deflate_state *s;
//    const ct_data *ltree; /* literal tree */
//    const ct_data *dtree; /* distance tree */
{
  var dist;           /* distance of matched string */
  var lc;             /* match length or unmatched char (if dist == 0) */
  var lx = 0;         /* running index in l_buf */
  var code;           /* the code to send */
  var extra;          /* number of extra bits to send */

  if (s.last_lit !== 0) {
    do {
      dist = (s.pending_buf[s.d_buf + lx*2] << 8) | (s.pending_buf[s.d_buf + lx*2 + 1]);
      lc = s.pending_buf[s.l_buf + lx];
      lx++;

      if (dist === 0) {
        send_code(s, lc, ltree); /* send a literal byte */
        //Tracecv(isgraph(lc), (stderr," '%c' ", lc));
      } else {
        /* Here, lc is the match length - MIN_MATCH */
        code = _length_code[lc];
        send_code(s, code+LITERALS+1, ltree); /* send the length code */
        extra = extra_lbits[code];
        if (extra !== 0) {
          lc -= base_length[code];
          send_bits(s, lc, extra);       /* send the extra length bits */
        }
        dist--; /* dist is now the match distance - 1 */
        code = d_code(dist);
        //Assert (code < D_CODES, "bad d_code");

        send_code(s, code, dtree);       /* send the distance code */
        extra = extra_dbits[code];
        if (extra !== 0) {
          dist -= base_dist[code];
          send_bits(s, dist, extra);   /* send the extra distance bits */
        }
      } /* literal or match pair ? */

      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */
      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,
      //       "pendingBuf overflow");

    } while (lx < s.last_lit);
  }

  send_code(s, END_BLOCK, ltree);
}


/* ===========================================================================
 * Construct one Huffman tree and assigns the code bit strings and lengths.
 * Update the total bit length for the current block.
 * IN assertion: the field freq is set for all tree elements.
 * OUT assertions: the fields len and code are set to the optimal bit length
 *     and corresponding code. The length opt_len is updated; static_len is
 *     also updated if stree is not null. The field max_code is set.
 */
function build_tree(s, desc)
//    deflate_state *s;
//    tree_desc *desc; /* the tree descriptor */
{
  var tree     = desc.dyn_tree;
  var stree    = desc.stat_desc.static_tree;
  var has_stree = desc.stat_desc.has_stree;
  var elems    = desc.stat_desc.elems;
  var n, m;          /* iterate over heap elements */
  var max_code = -1; /* largest code with non zero frequency */
  var node;          /* new node being created */

  /* Construct the initial heap, with least frequent element in
   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].
   * heap[0] is not used.
   */
  s.heap_len = 0;
  s.heap_max = HEAP_SIZE;

  for (n = 0; n < elems; n++) {
    if (tree[n * 2]/*.Freq*/ !== 0) {
      s.heap[++s.heap_len] = max_code = n;
      s.depth[n] = 0;

    } else {
      tree[n*2 + 1]/*.Len*/ = 0;
    }
  }

  /* The pkzip format requires that at least one distance code exists,
   * and that at least one bit should be sent even if there is only one
   * possible code. So to avoid special checks later on we force at least
   * two codes of non zero frequency.
   */
  while (s.heap_len < 2) {
    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);
    tree[node * 2]/*.Freq*/ = 1;
    s.depth[node] = 0;
    s.opt_len--;

    if (has_stree) {
      s.static_len -= stree[node*2 + 1]/*.Len*/;
    }
    /* node is 0 or 1 so it does not have extra bits */
  }
  desc.max_code = max_code;

  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,
   * establish sub-heaps of increasing lengths:
   */
  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }

  /* Construct the Huffman tree by repeatedly combining the least two
   * frequent nodes.
   */
  node = elems;              /* next internal node of the tree */
  do {
    //pqremove(s, tree, n);  /* n = node of least frequency */
    /*** pqremove ***/
    n = s.heap[1/*SMALLEST*/];
    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];
    pqdownheap(s, tree, 1/*SMALLEST*/);
    /***/

    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */

    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */
    s.heap[--s.heap_max] = m;

    /* Create a new node father of n and m */
    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;
    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;
    tree[n*2 + 1]/*.Dad*/ = tree[m*2 + 1]/*.Dad*/ = node;

    /* and insert the new node in the heap */
    s.heap[1/*SMALLEST*/] = node++;
    pqdownheap(s, tree, 1/*SMALLEST*/);

  } while (s.heap_len >= 2);

  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];

  /* At this point, the fields freq and dad are set. We can now
   * generate the bit lengths.
   */
  gen_bitlen(s, desc);

  /* The field len is now set, we can generate the bit codes */
  gen_codes(tree, max_code, s.bl_count);
}


/* ===========================================================================
 * Scan a literal or distance tree to determine the frequencies of the codes
 * in the bit length tree.
 */
function scan_tree(s, tree, max_code)
//    deflate_state *s;
//    ct_data *tree;   /* the tree to be scanned */
//    int max_code;    /* and its largest code of non zero frequency */
{
  var n;                     /* iterates over all tree elements */
  var prevlen = -1;          /* last emitted length */
  var curlen;                /* length of current code */

  var nextlen = tree[0*2 + 1]/*.Len*/; /* length of next code */

  var count = 0;             /* repeat count of the current code */
  var max_count = 7;         /* max repeat count */
  var min_count = 4;         /* min repeat count */

  if (nextlen === 0) {
    max_count = 138;
    min_count = 3;
  }
  tree[(max_code+1)*2 + 1]/*.Len*/ = 0xffff; /* guard */

  for (n = 0; n <= max_code; n++) {
    curlen = nextlen;
    nextlen = tree[(n+1)*2 + 1]/*.Len*/;

    if (++count < max_count && curlen === nextlen) {
      continue;

    } else if (count < min_count) {
      s.bl_tree[curlen * 2]/*.Freq*/ += count;

    } else if (curlen !== 0) {

      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }
      s.bl_tree[REP_3_6*2]/*.Freq*/++;

    } else if (count <= 10) {
      s.bl_tree[REPZ_3_10*2]/*.Freq*/++;

    } else {
      s.bl_tree[REPZ_11_138*2]/*.Freq*/++;
    }

    count = 0;
    prevlen = curlen;

    if (nextlen === 0) {
      max_count = 138;
      min_count = 3;

    } else if (curlen === nextlen) {
      max_count = 6;
      min_count = 3;

    } else {
      max_count = 7;
      min_count = 4;
    }
  }
}


/* ===========================================================================
 * Send a literal or distance tree in compressed form, using the codes in
 * bl_tree.
 */
function send_tree(s, tree, max_code)
//    deflate_state *s;
//    ct_data *tree; /* the tree to be scanned */
//    int max_code;       /* and its largest code of non zero frequency */
{
  var n;                     /* iterates over all tree elements */
  var prevlen = -1;          /* last emitted length */
  var curlen;                /* length of current code */

  var nextlen = tree[0*2 + 1]/*.Len*/; /* length of next code */

  var count = 0;             /* repeat count of the current code */
  var max_count = 7;         /* max repeat count */
  var min_count = 4;         /* min repeat count */

  /* tree[max_code+1].Len = -1; */  /* guard already set */
  if (nextlen === 0) {
    max_count = 138;
    min_count = 3;
  }

  for (n = 0; n <= max_code; n++) {
    curlen = nextlen;
    nextlen = tree[(n+1)*2 + 1]/*.Len*/;

    if (++count < max_count && curlen === nextlen) {
      continue;

    } else if (count < min_count) {
      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);

    } else if (curlen !== 0) {
      if (curlen !== prevlen) {
        send_code(s, curlen, s.bl_tree);
        count--;
      }
      //Assert(count >= 3 && count <= 6, " 3_6?");
      send_code(s, REP_3_6, s.bl_tree);
      send_bits(s, count-3, 2);

    } else if (count <= 10) {
      send_code(s, REPZ_3_10, s.bl_tree);
      send_bits(s, count-3, 3);

    } else {
      send_code(s, REPZ_11_138, s.bl_tree);
      send_bits(s, count-11, 7);
    }

    count = 0;
    prevlen = curlen;
    if (nextlen === 0) {
      max_count = 138;
      min_count = 3;

    } else if (curlen === nextlen) {
      max_count = 6;
      min_count = 3;

    } else {
      max_count = 7;
      min_count = 4;
    }
  }
}


/* ===========================================================================
 * Construct the Huffman tree for the bit lengths and return the index in
 * bl_order of the last bit length code to send.
 */
function build_bl_tree(s) {
  var max_blindex;  /* index of last bit length code of non zero freq */

  /* Determine the bit length frequencies for literal and distance trees */
  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);
  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);

  /* Build the bit length tree: */
  build_tree(s, s.bl_desc);
  /* opt_len now includes the length of the tree representations, except
   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.
   */

  /* Determine the number of bit length codes to send. The pkzip format
   * requires that at least 4 bit length codes be sent. (appnote.txt says
   * 3 but the actual value used is 4.)
   */
  for (max_blindex = BL_CODES-1; max_blindex >= 3; max_blindex--) {
    if (s.bl_tree[bl_order[max_blindex]*2 + 1]/*.Len*/ !== 0) {
      break;
    }
  }
  /* Update opt_len to include the bit length tree and counts */
  s.opt_len += 3*(max_blindex+1) + 5+5+4;
  //Tracev((stderr, "\ndyn trees: dyn %ld, stat %ld",
  //        s->opt_len, s->static_len));

  return max_blindex;
}


/* ===========================================================================
 * Send the header for a block using dynamic Huffman trees: the counts, the
 * lengths of the bit length codes, the literal tree and the distance tree.
 * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.
 */
function send_all_trees(s, lcodes, dcodes, blcodes)
//    deflate_state *s;
//    int lcodes, dcodes, blcodes; /* number of codes for each tree */
{
  var rank;                    /* index in bl_order */

  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, "not enough codes");
  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,
  //        "too many codes");
  //Tracev((stderr, "\nbl counts: "));
  send_bits(s, lcodes-257, 5); /* not +255 as stated in appnote.txt */
  send_bits(s, dcodes-1,   5);
  send_bits(s, blcodes-4,  4); /* not -3 as stated in appnote.txt */
  for (rank = 0; rank < blcodes; rank++) {
    //Tracev((stderr, "\nbl code %2d ", bl_order[rank]));
    send_bits(s, s.bl_tree[bl_order[rank]*2 + 1]/*.Len*/, 3);
  }
  //Tracev((stderr, "\nbl tree: sent %ld", s->bits_sent));

  send_tree(s, s.dyn_ltree, lcodes-1); /* literal tree */
  //Tracev((stderr, "\nlit tree: sent %ld", s->bits_sent));

  send_tree(s, s.dyn_dtree, dcodes-1); /* distance tree */
  //Tracev((stderr, "\ndist tree: sent %ld", s->bits_sent));
}


/* ===========================================================================
 * Check if the data type is TEXT or BINARY, using the following algorithm:
 * - TEXT if the two conditions below are satisfied:
 *    a) There are no non-portable control characters belonging to the
 *       "black list" (0..6, 14..25, 28..31).
 *    b) There is at least one printable character belonging to the
 *       "white list" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).
 * - BINARY otherwise.
 * - The following partially-portable control characters form a
 *   "gray list" that is ignored in this detection algorithm:
 *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).
 * IN assertion: the fields Freq of dyn_ltree are set.
 */
function detect_data_type(s) {
  /* black_mask is the bit mask of black-listed bytes
   * set bits 0..6, 14..25, and 28..31
   * 0xf3ffc07f = binary 11110011111111111100000001111111
   */
  var black_mask = 0xf3ffc07f;
  var n;

  /* Check for non-textual ("black-listed") bytes. */
  for (n = 0; n <= 31; n++, black_mask >>>= 1) {
    if ((black_mask & 1) && (s.dyn_ltree[n*2]/*.Freq*/ !== 0)) {
      return Z_BINARY;
    }
  }

  /* Check for textual ("white-listed") bytes. */
  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||
      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {
    return Z_TEXT;
  }
  for (n = 32; n < LITERALS; n++) {
    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {
      return Z_TEXT;
    }
  }

  /* There are no "black-listed" or "white-listed" bytes:
   * this stream either is empty or has tolerated ("gray-listed") bytes only.
   */
  return Z_BINARY;
}


var static_init_done = false;

/* ===========================================================================
 * Initialize the tree data structures for a new zlib stream.
 */
function _tr_init(s)
{

  if (!static_init_done) {
    tr_static_init();
    static_init_done = true;
  }

  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);
  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);
  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);

  s.bi_buf = 0;
  s.bi_valid = 0;

  /* Initialize the first block of the first file: */
  init_block(s);
}


/* ===========================================================================
 * Send a stored block
 */
function _tr_stored_block(s, buf, stored_len, last)
//DeflateState *s;
//charf *buf;       /* input block */
//ulg stored_len;   /* length of input block */
//int last;         /* one if this is the last block for a file */
{
  send_bits(s, (STORED_BLOCK<<1)+(last ? 1 : 0), 3);    /* send block type */
  copy_block(s, buf, stored_len, true); /* with header */
}


/* ===========================================================================
 * Send one empty static block to give enough lookahead for inflate.
 * This takes 10 bits, of which 7 may remain in the bit buffer.
 */
function _tr_align(s) {
  send_bits(s, STATIC_TREES<<1, 3);
  send_code(s, END_BLOCK, static_ltree);
  bi_flush(s);
}


/* ===========================================================================
 * Determine the best encoding for the current block: dynamic trees, static
 * trees or store, and output the encoded block to the zip file.
 */
function _tr_flush_block(s, buf, stored_len, last)
//DeflateState *s;
//charf *buf;       /* input block, or NULL if too old */
//ulg stored_len;   /* length of input block */
//int last;         /* one if this is the last block for a file */
{
  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */
  var max_blindex = 0;        /* index of last bit length code of non zero freq */

  /* Build the Huffman trees unless a stored block is forced */
  if (s.level > 0) {

    /* Check if the file is binary or text */
    if (s.strm.data_type === Z_UNKNOWN) {
      s.strm.data_type = detect_data_type(s);
    }

    /* Construct the literal and distance trees */
    build_tree(s, s.l_desc);
    // Tracev((stderr, "\nlit data: dyn %ld, stat %ld", s->opt_len,
    //        s->static_len));

    build_tree(s, s.d_desc);
    // Tracev((stderr, "\ndist data: dyn %ld, stat %ld", s->opt_len,
    //        s->static_len));
    /* At this point, opt_len and static_len are the total bit lengths of
     * the compressed block data, excluding the tree representations.
     */

    /* Build the bit length tree for the above two trees, and get the index
     * in bl_order of the last bit length code to send.
     */
    max_blindex = build_bl_tree(s);

    /* Determine the best encoding. Compute the block lengths in bytes. */
    opt_lenb = (s.opt_len+3+7) >>> 3;
    static_lenb = (s.static_len+3+7) >>> 3;

    // Tracev((stderr, "\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u ",
    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,
    //        s->last_lit));

    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }

  } else {
    // Assert(buf != (char*)0, "lost buf");
    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */
  }

  if ((stored_len+4 <= opt_lenb) && (buf !== -1)) {
    /* 4: two words for the lengths */

    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.
     * Otherwise we can't have processed more than WSIZE input bytes since
     * the last block flush, because compression would have been
     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to
     * transform a block into a stored block.
     */
    _tr_stored_block(s, buf, stored_len, last);

  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {

    send_bits(s, (STATIC_TREES<<1) + (last ? 1 : 0), 3);
    compress_block(s, static_ltree, static_dtree);

  } else {
    send_bits(s, (DYN_TREES<<1) + (last ? 1 : 0), 3);
    send_all_trees(s, s.l_desc.max_code+1, s.d_desc.max_code+1, max_blindex+1);
    compress_block(s, s.dyn_ltree, s.dyn_dtree);
  }
  // Assert (s->compressed_len == s->bits_sent, "bad compressed size");
  /* The above check is made mod 2^32, for files larger than 512 MB
   * and uLong implemented on 32 bits.
   */
  init_block(s);

  if (last) {
    bi_windup(s);
  }
  // Tracev((stderr,"\ncomprlen %lu(%lu) ", s->compressed_len>>3,
  //       s->compressed_len-7*last));
}

/* ===========================================================================
 * Save the match info and tally the frequency counts. Return true if
 * the current block must be flushed.
 */
function _tr_tally(s, dist, lc)
//    deflate_state *s;
//    unsigned dist;  /* distance of matched string */
//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */
{
  //var out_length, in_length, dcode;

  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;
  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;

  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;
  s.last_lit++;

  if (dist === 0) {
    /* lc is the unmatched char */
    s.dyn_ltree[lc*2]/*.Freq*/++;
  } else {
    s.matches++;
    /* Here, lc is the match length - MIN_MATCH */
    dist--;             /* dist = match distance - 1 */
    //Assert((ush)dist < (ush)MAX_DIST(s) &&
    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&
    //       (ush)d_code(dist) < (ush)D_CODES,  "_tr_tally: bad match");

    s.dyn_ltree[(_length_code[lc]+LITERALS+1) * 2]/*.Freq*/++;
    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;
  }

// (!) This block is disabled in zlib defailts,
// don't enable it for binary compatibility

//#ifdef TRUNCATE_BLOCK
//  /* Try to guess if it is profitable to stop the current block here */
//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {
//    /* Compute an upper bound for the compressed length */
//    out_length = s.last_lit*8;
//    in_length = s.strstart - s.block_start;
//
//    for (dcode = 0; dcode < D_CODES; dcode++) {
//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);
//    }
//    out_length >>>= 3;
//    //Tracev((stderr,"\nlast_lit %u, in %ld, out ~%ld(%ld%%) ",
//    //       s->last_lit, in_length, out_length,
//    //       100L - out_length*100L/in_length));
//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {
//      return true;
//    }
//  }
//#endif

  return (s.last_lit === s.lit_bufsize-1);
  /* We avoid equality with lit_bufsize because of wraparound at 64K
   * on 16 bit machines and because stored blocks are restricted to
   * 64K-1 bytes.
   */
}

exports._tr_init  = _tr_init;
exports._tr_stored_block = _tr_stored_block;
exports._tr_flush_block  = _tr_flush_block;
exports._tr_tally = _tr_tally;
exports._tr_align = _tr_align;

},{"../utils/common":4}],14:[function(require,module,exports){
'use strict';


function ZStream() {
  /* next input byte */
  this.input = null; // JS specific, because we have no pointers
  this.next_in = 0;
  /* number of bytes available at input */
  this.avail_in = 0;
  /* total number of input bytes read so far */
  this.total_in = 0;
  /* next output byte should be put there */
  this.output = null; // JS specific, because we have no pointers
  this.next_out = 0;
  /* remaining free space at output */
  this.avail_out = 0;
  /* total number of bytes output so far */
  this.total_out = 0;
  /* last error message, NULL if no error */
  this.msg = ''/*Z_NULL*/;
  /* not visible by applications */
  this.state = null;
  /* best guess about the data type: binary or text */
  this.data_type = 2/*Z_UNKNOWN*/;
  /* adler32 value of the uncompressed data */
  this.adler = 0;
}

module.exports = ZStream;

},{}],15:[function(require,module,exports){
(function (process,Buffer){
var msg = require('pako/lib/zlib/messages');
var zstream = require('pako/lib/zlib/zstream');
var zlib_deflate = require('pako/lib/zlib/deflate.js');
var zlib_inflate = require('pako/lib/zlib/inflate.js');
var constants = require('pako/lib/zlib/constants');

for (var key in constants) {
  exports[key] = constants[key];
}

// zlib modes
exports.NONE = 0;
exports.DEFLATE = 1;
exports.INFLATE = 2;
exports.GZIP = 3;
exports.GUNZIP = 4;
exports.DEFLATERAW = 5;
exports.INFLATERAW = 6;
exports.UNZIP = 7;

/**
 * Emulate Node's zlib C++ layer for use by the JS layer in index.js
 */
function Zlib(mode) {
  if (mode < exports.DEFLATE || mode > exports.UNZIP)
    throw new TypeError("Bad argument");
    
  this.mode = mode;
  this.init_done = false;
  this.write_in_progress = false;
  this.pending_close = false;
  this.windowBits = 0;
  this.level = 0;
  this.memLevel = 0;
  this.strategy = 0;
  this.dictionary = null;
}

Zlib.prototype.init = function(windowBits, level, memLevel, strategy, dictionary) {
  this.windowBits = windowBits;
  this.level = level;
  this.memLevel = memLevel;
  this.strategy = strategy;
  // dictionary not supported.
  
  if (this.mode === exports.GZIP || this.mode === exports.GUNZIP)
    this.windowBits += 16;
    
  if (this.mode === exports.UNZIP)
    this.windowBits += 32;
    
  if (this.mode === exports.DEFLATERAW || this.mode === exports.INFLATERAW)
    this.windowBits = -this.windowBits;
    
  this.strm = new zstream();
  
  switch (this.mode) {
    case exports.DEFLATE:
    case exports.GZIP:
    case exports.DEFLATERAW:
      var status = zlib_deflate.deflateInit2(
        this.strm,
        this.level,
        exports.Z_DEFLATED,
        this.windowBits,
        this.memLevel,
        this.strategy
      );
      break;
    case exports.INFLATE:
    case exports.GUNZIP:
    case exports.INFLATERAW:
    case exports.UNZIP:
      var status  = zlib_inflate.inflateInit2(
        this.strm,
        this.windowBits
      );
      break;
    default:
      throw new Error("Unknown mode " + this.mode);
  }
  
  if (status !== exports.Z_OK) {
    this._error(status);
    return;
  }
  
  this.write_in_progress = false;
  this.init_done = true;
};

Zlib.prototype.params = function() {
  throw new Error("deflateParams Not supported");
};

Zlib.prototype._writeCheck = function() {
  if (!this.init_done)
    throw new Error("write before init");
    
  if (this.mode === exports.NONE)
    throw new Error("already finalized");
    
  if (this.write_in_progress)
    throw new Error("write already in progress");
    
  if (this.pending_close)
    throw new Error("close is pending");
};

Zlib.prototype.write = function(flush, input, in_off, in_len, out, out_off, out_len) {    
  this._writeCheck();
  this.write_in_progress = true;
  
  var self = this;
  process.nextTick(function() {
    self.write_in_progress = false;
    var res = self._write(flush, input, in_off, in_len, out, out_off, out_len);
    self.callback(res[0], res[1]);
    
    if (self.pending_close)
      self.close();
  });
  
  return this;
};

// set method for Node buffers, used by pako
function bufferSet(data, offset) {
  for (var i = 0; i < data.length; i++) {
    this[offset + i] = data[i];
  }
}

Zlib.prototype.writeSync = function(flush, input, in_off, in_len, out, out_off, out_len) {
  this._writeCheck();
  return this._write(flush, input, in_off, in_len, out, out_off, out_len);
};

Zlib.prototype._write = function(flush, input, in_off, in_len, out, out_off, out_len) {
  this.write_in_progress = true;
  
  if (flush !== exports.Z_NO_FLUSH &&
      flush !== exports.Z_PARTIAL_FLUSH &&
      flush !== exports.Z_SYNC_FLUSH &&
      flush !== exports.Z_FULL_FLUSH &&
      flush !== exports.Z_FINISH &&
      flush !== exports.Z_BLOCK) {
    throw new Error("Invalid flush value");
  }
  
  if (input == null) {
    input = new Buffer(0);
    in_len = 0;
    in_off = 0;
  }
  
  if (out._set)
    out.set = out._set;
  else
    out.set = bufferSet;
  
  var strm = this.strm;
  strm.avail_in = in_len;
  strm.input = input;
  strm.next_in = in_off;
  strm.avail_out = out_len;
  strm.output = out;
  strm.next_out = out_off;
  
  switch (this.mode) {
    case exports.DEFLATE:
    case exports.GZIP:
    case exports.DEFLATERAW:
      var status = zlib_deflate.deflate(strm, flush);
      break;
    case exports.UNZIP:
    case exports.INFLATE:
    case exports.GUNZIP:
    case exports.INFLATERAW:
      var status = zlib_inflate.inflate(strm, flush);
      break;
    default:
      throw new Error("Unknown mode " + this.mode);
  }
  
  if (status !== exports.Z_STREAM_END && status !== exports.Z_OK) {
    this._error(status);
  }
  
  this.write_in_progress = false;
  return [strm.avail_in, strm.avail_out];
};

Zlib.prototype.close = function() {
  if (this.write_in_progress) {
    this.pending_close = true;
    return;
  }
  
  this.pending_close = false;
  
  if (this.mode === exports.DEFLATE || this.mode === exports.GZIP || this.mode === exports.DEFLATERAW) {
    zlib_deflate.deflateEnd(this.strm);
  } else {
    zlib_inflate.inflateEnd(this.strm);
  }
  
  this.mode = exports.NONE;
};

Zlib.prototype.reset = function() {
  switch (this.mode) {
    case exports.DEFLATE:
    case exports.DEFLATERAW:
      var status = zlib_deflate.deflateReset(this.strm);
      break;
    case exports.INFLATE:
    case exports.INFLATERAW:
      var status = zlib_inflate.inflateReset(this.strm);
      break;
  }
  
  if (status !== exports.Z_OK) {
    this._error(status);
  }
};

Zlib.prototype._error = function(status) {
  this.onerror(msg[status] + ': ' + this.strm.msg, status);
  
  this.write_in_progress = false;
  if (this.pending_close)
    this.close();
};

exports.Zlib = Zlib;

}).call(this,require('_process'),require("buffer").Buffer)
},{"_process":25,"buffer":17,"pako/lib/zlib/constants":6,"pako/lib/zlib/deflate.js":8,"pako/lib/zlib/inflate.js":10,"pako/lib/zlib/messages":12,"pako/lib/zlib/zstream":14}],16:[function(require,module,exports){
(function (process,Buffer){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var Transform = require('_stream_transform');

var binding = require('./binding');
var util = require('util');
var assert = require('assert').ok;

// zlib doesn't provide these, so kludge them in following the same
// const naming scheme zlib uses.
binding.Z_MIN_WINDOWBITS = 8;
binding.Z_MAX_WINDOWBITS = 15;
binding.Z_DEFAULT_WINDOWBITS = 15;

// fewer than 64 bytes per chunk is stupid.
// technically it could work with as few as 8, but even 64 bytes
// is absurdly low.  Usually a MB or more is best.
binding.Z_MIN_CHUNK = 64;
binding.Z_MAX_CHUNK = Infinity;
binding.Z_DEFAULT_CHUNK = (16 * 1024);

binding.Z_MIN_MEMLEVEL = 1;
binding.Z_MAX_MEMLEVEL = 9;
binding.Z_DEFAULT_MEMLEVEL = 8;

binding.Z_MIN_LEVEL = -1;
binding.Z_MAX_LEVEL = 9;
binding.Z_DEFAULT_LEVEL = binding.Z_DEFAULT_COMPRESSION;

// expose all the zlib constants
Object.keys(binding).forEach(function(k) {
  if (k.match(/^Z/)) exports[k] = binding[k];
});

// translation table for return codes.
exports.codes = {
  Z_OK: binding.Z_OK,
  Z_STREAM_END: binding.Z_STREAM_END,
  Z_NEED_DICT: binding.Z_NEED_DICT,
  Z_ERRNO: binding.Z_ERRNO,
  Z_STREAM_ERROR: binding.Z_STREAM_ERROR,
  Z_DATA_ERROR: binding.Z_DATA_ERROR,
  Z_MEM_ERROR: binding.Z_MEM_ERROR,
  Z_BUF_ERROR: binding.Z_BUF_ERROR,
  Z_VERSION_ERROR: binding.Z_VERSION_ERROR
};

Object.keys(exports.codes).forEach(function(k) {
  exports.codes[exports.codes[k]] = k;
});

exports.Deflate = Deflate;
exports.Inflate = Inflate;
exports.Gzip = Gzip;
exports.Gunzip = Gunzip;
exports.DeflateRaw = DeflateRaw;
exports.InflateRaw = InflateRaw;
exports.Unzip = Unzip;

exports.createDeflate = function(o) {
  return new Deflate(o);
};

exports.createInflate = function(o) {
  return new Inflate(o);
};

exports.createDeflateRaw = function(o) {
  return new DeflateRaw(o);
};

exports.createInflateRaw = function(o) {
  return new InflateRaw(o);
};

exports.createGzip = function(o) {
  return new Gzip(o);
};

exports.createGunzip = function(o) {
  return new Gunzip(o);
};

exports.createUnzip = function(o) {
  return new Unzip(o);
};


// Convenience methods.
// compress/decompress a string or buffer in one step.
exports.deflate = function(buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new Deflate(opts), buffer, callback);
};

exports.deflateSync = function(buffer, opts) {
  return zlibBufferSync(new Deflate(opts), buffer);
};

exports.gzip = function(buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new Gzip(opts), buffer, callback);
};

exports.gzipSync = function(buffer, opts) {
  return zlibBufferSync(new Gzip(opts), buffer);
};

exports.deflateRaw = function(buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new DeflateRaw(opts), buffer, callback);
};

exports.deflateRawSync = function(buffer, opts) {
  return zlibBufferSync(new DeflateRaw(opts), buffer);
};

exports.unzip = function(buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new Unzip(opts), buffer, callback);
};

exports.unzipSync = function(buffer, opts) {
  return zlibBufferSync(new Unzip(opts), buffer);
};

exports.inflate = function(buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new Inflate(opts), buffer, callback);
};

exports.inflateSync = function(buffer, opts) {
  return zlibBufferSync(new Inflate(opts), buffer);
};

exports.gunzip = function(buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new Gunzip(opts), buffer, callback);
};

exports.gunzipSync = function(buffer, opts) {
  return zlibBufferSync(new Gunzip(opts), buffer);
};

exports.inflateRaw = function(buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new InflateRaw(opts), buffer, callback);
};

exports.inflateRawSync = function(buffer, opts) {
  return zlibBufferSync(new InflateRaw(opts), buffer);
};

function zlibBuffer(engine, buffer, callback) {
  var buffers = [];
  var nread = 0;

  engine.on('error', onError);
  engine.on('end', onEnd);

  engine.end(buffer);
  flow();

  function flow() {
    var chunk;
    while (null !== (chunk = engine.read())) {
      buffers.push(chunk);
      nread += chunk.length;
    }
    engine.once('readable', flow);
  }

  function onError(err) {
    engine.removeListener('end', onEnd);
    engine.removeListener('readable', flow);
    callback(err);
  }

  function onEnd() {
    var buf = Buffer.concat(buffers, nread);
    buffers = [];
    callback(null, buf);
    engine.close();
  }
}

function zlibBufferSync(engine, buffer) {
  if (typeof buffer === 'string')
    buffer = new Buffer(buffer);
  if (!Buffer.isBuffer(buffer))
    throw new TypeError('Not a string or buffer');

  var flushFlag = binding.Z_FINISH;

  return engine._processChunk(buffer, flushFlag);
}

// generic zlib
// minimal 2-byte header
function Deflate(opts) {
  if (!(this instanceof Deflate)) return new Deflate(opts);
  Zlib.call(this, opts, binding.DEFLATE);
}

function Inflate(opts) {
  if (!(this instanceof Inflate)) return new Inflate(opts);
  Zlib.call(this, opts, binding.INFLATE);
}



// gzip - bigger header, same deflate compression
function Gzip(opts) {
  if (!(this instanceof Gzip)) return new Gzip(opts);
  Zlib.call(this, opts, binding.GZIP);
}

function Gunzip(opts) {
  if (!(this instanceof Gunzip)) return new Gunzip(opts);
  Zlib.call(this, opts, binding.GUNZIP);
}



// raw - no header
function DeflateRaw(opts) {
  if (!(this instanceof DeflateRaw)) return new DeflateRaw(opts);
  Zlib.call(this, opts, binding.DEFLATERAW);
}

function InflateRaw(opts) {
  if (!(this instanceof InflateRaw)) return new InflateRaw(opts);
  Zlib.call(this, opts, binding.INFLATERAW);
}


// auto-detect header.
function Unzip(opts) {
  if (!(this instanceof Unzip)) return new Unzip(opts);
  Zlib.call(this, opts, binding.UNZIP);
}


// the Zlib class they all inherit from
// This thing manages the queue of requests, and returns
// true or false if there is anything in the queue when
// you call the .write() method.

function Zlib(opts, mode) {
  this._opts = opts = opts || {};
  this._chunkSize = opts.chunkSize || exports.Z_DEFAULT_CHUNK;

  Transform.call(this, opts);

  if (opts.flush) {
    if (opts.flush !== binding.Z_NO_FLUSH &&
        opts.flush !== binding.Z_PARTIAL_FLUSH &&
        opts.flush !== binding.Z_SYNC_FLUSH &&
        opts.flush !== binding.Z_FULL_FLUSH &&
        opts.flush !== binding.Z_FINISH &&
        opts.flush !== binding.Z_BLOCK) {
      throw new Error('Invalid flush flag: ' + opts.flush);
    }
  }
  this._flushFlag = opts.flush || binding.Z_NO_FLUSH;

  if (opts.chunkSize) {
    if (opts.chunkSize < exports.Z_MIN_CHUNK ||
        opts.chunkSize > exports.Z_MAX_CHUNK) {
      throw new Error('Invalid chunk size: ' + opts.chunkSize);
    }
  }

  if (opts.windowBits) {
    if (opts.windowBits < exports.Z_MIN_WINDOWBITS ||
        opts.windowBits > exports.Z_MAX_WINDOWBITS) {
      throw new Error('Invalid windowBits: ' + opts.windowBits);
    }
  }

  if (opts.level) {
    if (opts.level < exports.Z_MIN_LEVEL ||
        opts.level > exports.Z_MAX_LEVEL) {
      throw new Error('Invalid compression level: ' + opts.level);
    }
  }

  if (opts.memLevel) {
    if (opts.memLevel < exports.Z_MIN_MEMLEVEL ||
        opts.memLevel > exports.Z_MAX_MEMLEVEL) {
      throw new Error('Invalid memLevel: ' + opts.memLevel);
    }
  }

  if (opts.strategy) {
    if (opts.strategy != exports.Z_FILTERED &&
        opts.strategy != exports.Z_HUFFMAN_ONLY &&
        opts.strategy != exports.Z_RLE &&
        opts.strategy != exports.Z_FIXED &&
        opts.strategy != exports.Z_DEFAULT_STRATEGY) {
      throw new Error('Invalid strategy: ' + opts.strategy);
    }
  }

  if (opts.dictionary) {
    if (!Buffer.isBuffer(opts.dictionary)) {
      throw new Error('Invalid dictionary: it should be a Buffer instance');
    }
  }

  this._binding = new binding.Zlib(mode);

  var self = this;
  this._hadError = false;
  this._binding.onerror = function(message, errno) {
    // there is no way to cleanly recover.
    // continuing only obscures problems.
    self._binding = null;
    self._hadError = true;

    var error = new Error(message);
    error.errno = errno;
    error.code = exports.codes[errno];
    self.emit('error', error);
  };

  var level = exports.Z_DEFAULT_COMPRESSION;
  if (typeof opts.level === 'number') level = opts.level;

  var strategy = exports.Z_DEFAULT_STRATEGY;
  if (typeof opts.strategy === 'number') strategy = opts.strategy;

  this._binding.init(opts.windowBits || exports.Z_DEFAULT_WINDOWBITS,
                     level,
                     opts.memLevel || exports.Z_DEFAULT_MEMLEVEL,
                     strategy,
                     opts.dictionary);

  this._buffer = new Buffer(this._chunkSize);
  this._offset = 0;
  this._closed = false;
  this._level = level;
  this._strategy = strategy;

  this.once('end', this.close);
}

util.inherits(Zlib, Transform);

Zlib.prototype.params = function(level, strategy, callback) {
  if (level < exports.Z_MIN_LEVEL ||
      level > exports.Z_MAX_LEVEL) {
    throw new RangeError('Invalid compression level: ' + level);
  }
  if (strategy != exports.Z_FILTERED &&
      strategy != exports.Z_HUFFMAN_ONLY &&
      strategy != exports.Z_RLE &&
      strategy != exports.Z_FIXED &&
      strategy != exports.Z_DEFAULT_STRATEGY) {
    throw new TypeError('Invalid strategy: ' + strategy);
  }

  if (this._level !== level || this._strategy !== strategy) {
    var self = this;
    this.flush(binding.Z_SYNC_FLUSH, function() {
      self._binding.params(level, strategy);
      if (!self._hadError) {
        self._level = level;
        self._strategy = strategy;
        if (callback) callback();
      }
    });
  } else {
    process.nextTick(callback);
  }
};

Zlib.prototype.reset = function() {
  return this._binding.reset();
};

// This is the _flush function called by the transform class,
// internally, when the last chunk has been written.
Zlib.prototype._flush = function(callback) {
  this._transform(new Buffer(0), '', callback);
};

Zlib.prototype.flush = function(kind, callback) {
  var ws = this._writableState;

  if (typeof kind === 'function' || (kind === void 0 && !callback)) {
    callback = kind;
    kind = binding.Z_FULL_FLUSH;
  }

  if (ws.ended) {
    if (callback)
      process.nextTick(callback);
  } else if (ws.ending) {
    if (callback)
      this.once('end', callback);
  } else if (ws.needDrain) {
    var self = this;
    this.once('drain', function() {
      self.flush(callback);
    });
  } else {
    this._flushFlag = kind;
    this.write(new Buffer(0), '', callback);
  }
};

Zlib.prototype.close = function(callback) {
  if (callback)
    process.nextTick(callback);

  if (this._closed)
    return;

  this._closed = true;

  this._binding.close();

  var self = this;
  process.nextTick(function() {
    self.emit('close');
  });
};

Zlib.prototype._transform = function(chunk, encoding, cb) {
  var flushFlag;
  var ws = this._writableState;
  var ending = ws.ending || ws.ended;
  var last = ending && (!chunk || ws.length === chunk.length);

  if (!chunk === null && !Buffer.isBuffer(chunk))
    return cb(new Error('invalid input'));

  // If it's the last chunk, or a final flush, we use the Z_FINISH flush flag.
  // If it's explicitly flushing at some other time, then we use
  // Z_FULL_FLUSH. Otherwise, use Z_NO_FLUSH for maximum compression
  // goodness.
  if (last)
    flushFlag = binding.Z_FINISH;
  else {
    flushFlag = this._flushFlag;
    // once we've flushed the last of the queue, stop flushing and
    // go back to the normal behavior.
    if (chunk.length >= ws.length) {
      this._flushFlag = this._opts.flush || binding.Z_NO_FLUSH;
    }
  }

  var self = this;
  this._processChunk(chunk, flushFlag, cb);
};

Zlib.prototype._processChunk = function(chunk, flushFlag, cb) {
  var availInBefore = chunk && chunk.length;
  var availOutBefore = this._chunkSize - this._offset;
  var inOff = 0;

  var self = this;

  var async = typeof cb === 'function';

  if (!async) {
    var buffers = [];
    var nread = 0;

    var error;
    this.on('error', function(er) {
      error = er;
    });

    do {
      var res = this._binding.writeSync(flushFlag,
                                        chunk, // in
                                        inOff, // in_off
                                        availInBefore, // in_len
                                        this._buffer, // out
                                        this._offset, //out_off
                                        availOutBefore); // out_len
    } while (!this._hadError && callback(res[0], res[1]));

    if (this._hadError) {
      throw error;
    }

    var buf = Buffer.concat(buffers, nread);
    this.close();

    return buf;
  }

  var req = this._binding.write(flushFlag,
                                chunk, // in
                                inOff, // in_off
                                availInBefore, // in_len
                                this._buffer, // out
                                this._offset, //out_off
                                availOutBefore); // out_len

  req.buffer = chunk;
  req.callback = callback;

  function callback(availInAfter, availOutAfter) {
    if (self._hadError)
      return;

    var have = availOutBefore - availOutAfter;
    assert(have >= 0, 'have should not go down');

    if (have > 0) {
      var out = self._buffer.slice(self._offset, self._offset + have);
      self._offset += have;
      // serve some output to the consumer.
      if (async) {
        self.push(out);
      } else {
        buffers.push(out);
        nread += out.length;
      }
    }

    // exhausted the output buffer, or used all the input create a new one.
    if (availOutAfter === 0 || self._offset >= self._chunkSize) {
      availOutBefore = self._chunkSize;
      self._offset = 0;
      self._buffer = new Buffer(self._chunkSize);
    }

    if (availOutAfter === 0) {
      // Not actually done.  Need to reprocess.
      // Also, update the availInBefore to the availInAfter value,
      // so that if we have to hit it a third (fourth, etc.) time,
      // it'll have the correct byte counts.
      inOff += (availInBefore - availInAfter);
      availInBefore = availInAfter;

      if (!async)
        return true;

      var newReq = self._binding.write(flushFlag,
                                       chunk,
                                       inOff,
                                       availInBefore,
                                       self._buffer,
                                       self._offset,
                                       self._chunkSize);
      newReq.callback = callback; // this same function
      newReq.buffer = chunk;
      return;
    }

    if (!async)
      return false;

    // finished with the chunk.
    cb();
  }
};

util.inherits(Deflate, Zlib);
util.inherits(Inflate, Zlib);
util.inherits(Gzip, Zlib);
util.inherits(Gunzip, Zlib);
util.inherits(DeflateRaw, Zlib);
util.inherits(InflateRaw, Zlib);
util.inherits(Unzip, Zlib);

}).call(this,require('_process'),require("buffer").Buffer)
},{"./binding":15,"_process":25,"_stream_transform":35,"assert":2,"buffer":17,"util":40}],17:[function(require,module,exports){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */

var base64 = require('base64-js')
var ieee754 = require('ieee754')
var isArray = require('is-array')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50
Buffer.poolSize = 8192 // not used by this implementation

var kMaxLength = 0x3fffffff
var rootParent = {}

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Note:
 *
 * - Implementation must support adding new properties to `Uint8Array` instances.
 *   Firefox 4-29 lacked support, fixed in Firefox 30+.
 *   See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *  - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *  - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *    incorrect length in some situations.
 *
 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they will
 * get the Object implementation, which is slower but will work correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = (function () {
  try {
    var buf = new ArrayBuffer(0)
    var arr = new Uint8Array(buf)
    arr.foo = function () { return 42 }
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        new Uint8Array(1).subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
})()

/**
 * Class: Buffer
 * =============
 *
 * The Buffer constructor returns instances of `Uint8Array` that are augmented
 * with function properties for all the node `Buffer` API functions. We use
 * `Uint8Array` so that square bracket notation works as expected -- it returns
 * a single octet.
 *
 * By augmenting the instances, we can avoid modifying the `Uint8Array`
 * prototype.
 */
function Buffer (arg) {
  if (!(this instanceof Buffer)) {
    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.
    if (arguments.length > 1) return new Buffer(arg, arguments[1])
    return new Buffer(arg)
  }

  this.length = 0
  this.parent = undefined

  // Common case.
  if (typeof arg === 'number') {
    return fromNumber(this, arg)
  }

  // Slightly less common case.
  if (typeof arg === 'string') {
    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')
  }

  // Unusual.
  return fromObject(this, arg)
}

function fromNumber (that, length) {
  that = allocate(that, length < 0 ? 0 : checked(length) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < length; i++) {
      that[i] = 0
    }
  }
  return that
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'

  // Assumption: byteLength() return value is always < kMaxLength.
  var length = byteLength(string, encoding) | 0
  that = allocate(that, length)

  that.write(string, encoding)
  return that
}

function fromObject (that, object) {
  if (Buffer.isBuffer(object)) return fromBuffer(that, object)

  if (isArray(object)) return fromArray(that, object)

  if (object == null) {
    throw new TypeError('must start with number, buffer, array or string')
  }

  if (typeof ArrayBuffer !== 'undefined' && object.buffer instanceof ArrayBuffer) {
    return fromTypedArray(that, object)
  }

  if (object.length) return fromArrayLike(that, object)

  return fromJsonObject(that, object)
}

function fromBuffer (that, buffer) {
  var length = checked(buffer.length) | 0
  that = allocate(that, length)
  buffer.copy(that, 0, 0, length)
  return that
}

function fromArray (that, array) {
  var length = checked(array.length) | 0
  that = allocate(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

// Duplicate of fromArray() to keep fromArray() monomorphic.
function fromTypedArray (that, array) {
  var length = checked(array.length) | 0
  that = allocate(that, length)
  // Truncating the elements is probably not what people expect from typed
  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior
  // of the old Buffer constructor.
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayLike (that, array) {
  var length = checked(array.length) | 0
  that = allocate(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.
// Returns a zero-length buffer for inputs that don't conform to the spec.
function fromJsonObject (that, object) {
  var array
  var length = 0

  if (object.type === 'Buffer' && isArray(object.data)) {
    array = object.data
    length = checked(array.length) | 0
  }
  that = allocate(that, length)

  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function allocate (that, length) {
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = Buffer._augment(new Uint8Array(length))
  } else {
    // Fallback: Return an object instance of the Buffer class
    that.length = length
    that._isBuffer = true
  }

  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1
  if (fromPool) that.parent = rootParent

  return that
}

function checked (length) {
  // Note: cannot use `length < kMaxLength` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (subject, encoding) {
  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)

  var buf = new Buffer(subject, encoding)
  delete buf.parent
  return buf
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  var i = 0
  var len = Math.min(x, y)
  while (i < len) {
    if (a[i] !== b[i]) break

    ++i
  }

  if (i !== len) {
    x = a[i]
    y = b[i]
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'binary':
    case 'base64':
    case 'raw':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')

  if (list.length === 0) {
    return new Buffer(0)
  } else if (list.length === 1) {
    return list[0]
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; i++) {
      length += list[i].length
    }
  }

  var buf = new Buffer(length)
  var pos = 0
  for (i = 0; i < list.length; i++) {
    var item = list[i]
    item.copy(buf, pos)
    pos += item.length
  }
  return buf
}

function byteLength (string, encoding) {
  if (typeof string !== 'string') string = String(string)

  if (string.length === 0) return 0

  switch (encoding || 'utf8') {
    case 'ascii':
    case 'binary':
    case 'raw':
      return string.length
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return string.length * 2
    case 'hex':
      return string.length >>> 1
    case 'utf8':
    case 'utf-8':
      return utf8ToBytes(string).length
    case 'base64':
      return base64ToBytes(string).length
    default:
      return string.length
  }
}
Buffer.byteLength = byteLength

// pre-set for values that may exist in the future
Buffer.prototype.length = undefined
Buffer.prototype.parent = undefined

// toString(encoding, start=0, end=buffer.length)
Buffer.prototype.toString = function toString (encoding, start, end) {
  var loweredCase = false

  start = start | 0
  end = end === undefined || end === Infinity ? this.length : end | 0

  if (!encoding) encoding = 'utf8'
  if (start < 0) start = 0
  if (end > this.length) end = this.length
  if (end <= start) return ''

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'binary':
        return binarySlice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return 0
  return Buffer.compare(this, b)
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset) {
  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff
  else if (byteOffset < -0x80000000) byteOffset = -0x80000000
  byteOffset >>= 0

  if (this.length === 0) return -1
  if (byteOffset >= this.length) return -1

  // Negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)

  if (typeof val === 'string') {
    if (val.length === 0) return -1 // special case: looking for empty string always fails
    return String.prototype.indexOf.call(this, val, byteOffset)
  }
  if (Buffer.isBuffer(val)) {
    return arrayIndexOf(this, val, byteOffset)
  }
  if (typeof val === 'number') {
    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {
      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)
    }
    return arrayIndexOf(this, [ val ], byteOffset)
  }

  function arrayIndexOf (arr, val, byteOffset) {
    var foundIndex = -1
    for (var i = 0; byteOffset + i < arr.length; i++) {
      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex
      } else {
        foundIndex = -1
      }
    }
    return -1
  }

  throw new TypeError('val must be string, number or Buffer')
}

// `get` will be removed in Node 0.13+
Buffer.prototype.get = function get (offset) {
  console.log('.get() is deprecated. Access using array indexes instead.')
  return this.readUInt8(offset)
}

// `set` will be removed in Node 0.13+
Buffer.prototype.set = function set (v, offset) {
  console.log('.set() is deprecated. Access using array indexes instead.')
  return this.writeUInt8(v, offset)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new Error('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; i++) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) throw new Error('Invalid hex string')
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function binaryWrite (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    var swap = encoding
    encoding = offset
    offset = length | 0
    length = swap
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'binary':
        return binaryWrite(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  var res = ''
  var tmp = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++) {
    if (buf[i] <= 0x7F) {
      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])
      tmp = ''
    } else {
      tmp += '%' + buf[i].toString(16)
    }
  }

  return res + decodeUtf8Char(tmp)
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function binarySlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; i++) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = Buffer._augment(this.subarray(start, end))
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; i++) {
      newBuf[i] = this[i + start]
    }
  }

  if (newBuf.length) newBuf.parent = this.parent || this

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('value is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = value
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = value
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = value
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = value
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = value
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = value < 0 ? 1 : 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = value < 0 ? 1 : 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = value
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = value
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = value
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = value
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = value
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (value > max || value < min) throw new RangeError('value is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('index out of range')
  if (offset < 0) throw new RangeError('index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start

  if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < len; i++) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    target._set(this.subarray(start, start + len), targetStart)
  }

  return len
}

// fill(value, start=0, end=buffer.length)
Buffer.prototype.fill = function fill (value, start, end) {
  if (!value) value = 0
  if (!start) start = 0
  if (!end) end = this.length

  if (end < start) throw new RangeError('end < start')

  // Fill 0 bytes; we're done
  if (end === start) return
  if (this.length === 0) return

  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')
  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')

  var i
  if (typeof value === 'number') {
    for (i = start; i < end; i++) {
      this[i] = value
    }
  } else {
    var bytes = utf8ToBytes(value.toString())
    var len = bytes.length
    for (i = start; i < end; i++) {
      this[i] = bytes[i % len]
    }
  }

  return this
}

/**
 * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.
 * Added in Node 0.12. Only available in browsers that support ArrayBuffer.
 */
Buffer.prototype.toArrayBuffer = function toArrayBuffer () {
  if (typeof Uint8Array !== 'undefined') {
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      return (new Buffer(this)).buffer
    } else {
      var buf = new Uint8Array(this.length)
      for (var i = 0, len = buf.length; i < len; i += 1) {
        buf[i] = this[i]
      }
      return buf.buffer
    }
  } else {
    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')
  }
}

// HELPER FUNCTIONS
// ================

var BP = Buffer.prototype

/**
 * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods
 */
Buffer._augment = function _augment (arr) {
  arr.constructor = Buffer
  arr._isBuffer = true

  // save reference to original Uint8Array set method before overwriting
  arr._set = arr.set

  // deprecated, will be removed in node 0.13+
  arr.get = BP.get
  arr.set = BP.set

  arr.write = BP.write
  arr.toString = BP.toString
  arr.toLocaleString = BP.toString
  arr.toJSON = BP.toJSON
  arr.equals = BP.equals
  arr.compare = BP.compare
  arr.indexOf = BP.indexOf
  arr.copy = BP.copy
  arr.slice = BP.slice
  arr.readUIntLE = BP.readUIntLE
  arr.readUIntBE = BP.readUIntBE
  arr.readUInt8 = BP.readUInt8
  arr.readUInt16LE = BP.readUInt16LE
  arr.readUInt16BE = BP.readUInt16BE
  arr.readUInt32LE = BP.readUInt32LE
  arr.readUInt32BE = BP.readUInt32BE
  arr.readIntLE = BP.readIntLE
  arr.readIntBE = BP.readIntBE
  arr.readInt8 = BP.readInt8
  arr.readInt16LE = BP.readInt16LE
  arr.readInt16BE = BP.readInt16BE
  arr.readInt32LE = BP.readInt32LE
  arr.readInt32BE = BP.readInt32BE
  arr.readFloatLE = BP.readFloatLE
  arr.readFloatBE = BP.readFloatBE
  arr.readDoubleLE = BP.readDoubleLE
  arr.readDoubleBE = BP.readDoubleBE
  arr.writeUInt8 = BP.writeUInt8
  arr.writeUIntLE = BP.writeUIntLE
  arr.writeUIntBE = BP.writeUIntBE
  arr.writeUInt16LE = BP.writeUInt16LE
  arr.writeUInt16BE = BP.writeUInt16BE
  arr.writeUInt32LE = BP.writeUInt32LE
  arr.writeUInt32BE = BP.writeUInt32BE
  arr.writeIntLE = BP.writeIntLE
  arr.writeIntBE = BP.writeIntBE
  arr.writeInt8 = BP.writeInt8
  arr.writeInt16LE = BP.writeInt16LE
  arr.writeInt16BE = BP.writeInt16BE
  arr.writeInt32LE = BP.writeInt32LE
  arr.writeInt32BE = BP.writeInt32BE
  arr.writeFloatLE = BP.writeFloatLE
  arr.writeFloatBE = BP.writeFloatBE
  arr.writeDoubleLE = BP.writeDoubleLE
  arr.writeDoubleBE = BP.writeDoubleBE
  arr.fill = BP.fill
  arr.inspect = BP.inspect
  arr.toArrayBuffer = BP.toArrayBuffer

  return arr
}

var INVALID_BASE64_RE = /[^+\/0-9A-z\-]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []
  var i = 0

  for (; i < length; i++) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (leadSurrogate) {
        // 2 leads in a row
        if (codePoint < 0xDC00) {
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          leadSurrogate = codePoint
          continue
        } else {
          // valid surrogate pair
          codePoint = leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00 | 0x10000
          leadSurrogate = null
        }
      } else {
        // no lead yet

        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else {
          // valid lead
          leadSurrogate = codePoint
          continue
        }
      }
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
      leadSurrogate = null
    }

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x200000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; i++) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function decodeUtf8Char (str) {
  try {
    return decodeURIComponent(str)
  } catch (err) {
    return String.fromCharCode(0xFFFD) // UTF 8 invalid char
  }
}

},{"base64-js":18,"ieee754":19,"is-array":20}],18:[function(require,module,exports){
var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

;(function (exports) {
	'use strict';

  var Arr = (typeof Uint8Array !== 'undefined')
    ? Uint8Array
    : Array

	var PLUS   = '+'.charCodeAt(0)
	var SLASH  = '/'.charCodeAt(0)
	var NUMBER = '0'.charCodeAt(0)
	var LOWER  = 'a'.charCodeAt(0)
	var UPPER  = 'A'.charCodeAt(0)
	var PLUS_URL_SAFE = '-'.charCodeAt(0)
	var SLASH_URL_SAFE = '_'.charCodeAt(0)

	function decode (elt) {
		var code = elt.charCodeAt(0)
		if (code === PLUS ||
		    code === PLUS_URL_SAFE)
			return 62 // '+'
		if (code === SLASH ||
		    code === SLASH_URL_SAFE)
			return 63 // '/'
		if (code < NUMBER)
			return -1 //no match
		if (code < NUMBER + 10)
			return code - NUMBER + 26 + 26
		if (code < UPPER + 26)
			return code - UPPER
		if (code < LOWER + 26)
			return code - LOWER + 26
	}

	function b64ToByteArray (b64) {
		var i, j, l, tmp, placeHolders, arr

		if (b64.length % 4 > 0) {
			throw new Error('Invalid string. Length must be a multiple of 4')
		}

		// the number of equal signs (place holders)
		// if there are two placeholders, than the two characters before it
		// represent one byte
		// if there is only one, then the three characters before it represent 2 bytes
		// this is just a cheap hack to not do indexOf twice
		var len = b64.length
		placeHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0

		// base64 is 4/3 + up to two characters of the original data
		arr = new Arr(b64.length * 3 / 4 - placeHolders)

		// if there are placeholders, only get up to the last complete 4 chars
		l = placeHolders > 0 ? b64.length - 4 : b64.length

		var L = 0

		function push (v) {
			arr[L++] = v
		}

		for (i = 0, j = 0; i < l; i += 4, j += 3) {
			tmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))
			push((tmp & 0xFF0000) >> 16)
			push((tmp & 0xFF00) >> 8)
			push(tmp & 0xFF)
		}

		if (placeHolders === 2) {
			tmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)
			push(tmp & 0xFF)
		} else if (placeHolders === 1) {
			tmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)
			push((tmp >> 8) & 0xFF)
			push(tmp & 0xFF)
		}

		return arr
	}

	function uint8ToBase64 (uint8) {
		var i,
			extraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes
			output = "",
			temp, length

		function encode (num) {
			return lookup.charAt(num)
		}

		function tripletToBase64 (num) {
			return encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)
		}

		// go through the array every three bytes, we'll deal with trailing stuff later
		for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {
			temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
			output += tripletToBase64(temp)
		}

		// pad the end with zeros, but make sure to not forget the extra bytes
		switch (extraBytes) {
			case 1:
				temp = uint8[uint8.length - 1]
				output += encode(temp >> 2)
				output += encode((temp << 4) & 0x3F)
				output += '=='
				break
			case 2:
				temp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])
				output += encode(temp >> 10)
				output += encode((temp >> 4) & 0x3F)
				output += encode((temp << 2) & 0x3F)
				output += '='
				break
		}

		return output
	}

	exports.toByteArray = b64ToByteArray
	exports.fromByteArray = uint8ToBase64
}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))

},{}],19:[function(require,module,exports){
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],20:[function(require,module,exports){

/**
 * isArray
 */

var isArray = Array.isArray;

/**
 * toString
 */

var str = Object.prototype.toString;

/**
 * Whether or not the given `val`
 * is an array.
 *
 * example:
 *
 *        isArray([]);
 *        // > true
 *        isArray(arguments);
 *        // > false
 *        isArray('');
 *        // > false
 *
 * @param {mixed} val
 * @return {bool}
 */

module.exports = isArray || function (val) {
  return !! val && '[object Array]' == str.call(val);
};

},{}],21:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  // If there is no 'error' event listener then throw.
  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      }
      throw TypeError('Uncaught, unspecified "error" event.');
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      // fast cases
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      // slower
      default:
        len = arguments.length;
        args = new Array(len - 1);
        for (i = 1; i < len; i++)
          args[i - 1] = arguments[i];
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    len = arguments.length;
    args = new Array(len - 1);
    for (i = 1; i < len; i++)
      args[i - 1] = arguments[i];

    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  // To avoid recursion in the case that type === "newListener"! Before
  // adding it to the listeners, first emit "newListener".
  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    // Optimize the case of one listener. Don't need the extra array object.
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    // If we've already got an array, just append.
    this._events[type].push(listener);
  else
    // Adding the second element, need to change to array.
    this._events[type] = [this._events[type], listener];

  // Check for listener leak
  if (isObject(this._events[type]) && !this._events[type].warned) {
    var m;
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      if (typeof console.trace === 'function') {
        // not supported in IE 10
        console.trace();
      }
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

// emits a 'removeListener' event iff the listener was removed
EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  // not listening for removeListener, no need to emit
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else {
    // LIFO order
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.listenerCount = function(emitter, type) {
  var ret;
  if (!emitter._events || !emitter._events[type])
    ret = 0;
  else if (isFunction(emitter._events[type]))
    ret = 1;
  else
    ret = emitter._events[type].length;
  return ret;
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}

},{}],22:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],23:[function(require,module,exports){
module.exports = Array.isArray || function (arr) {
  return Object.prototype.toString.call(arr) == '[object Array]';
};

},{}],24:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var splitPathRe =
    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var splitPath = function(filename) {
  return splitPathRe.exec(filename).slice(1);
};

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function(path) {
  var result = splitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


exports.basename = function(path, ext) {
  var f = splitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


exports.extname = function(path) {
  return splitPath(path)[3];
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

}).call(this,require('_process'))
},{"_process":25}],25:[function(require,module,exports){
// shim for using process in browser

var process = module.exports = {};
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = setTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            currentQueue[queueIndex].run();
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    clearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        setTimeout(drainQueue, 0);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

// TODO(shtylman)
process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],26:[function(require,module,exports){
module.exports = require("./lib/_stream_duplex.js")

},{"./lib/_stream_duplex.js":27}],27:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.

module.exports = Duplex;

/*<replacement>*/
var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) keys.push(key);
  return keys;
}
/*</replacement>*/


/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var Readable = require('./_stream_readable');
var Writable = require('./_stream_writable');

util.inherits(Duplex, Readable);

forEach(objectKeys(Writable.prototype), function(method) {
  if (!Duplex.prototype[method])
    Duplex.prototype[method] = Writable.prototype[method];
});

function Duplex(options) {
  if (!(this instanceof Duplex))
    return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false)
    this.readable = false;

  if (options && options.writable === false)
    this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false)
    this.allowHalfOpen = false;

  this.once('end', onend);
}

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended)
    return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  process.nextTick(this.end.bind(this));
}

function forEach (xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

}).call(this,require('_process'))
},{"./_stream_readable":29,"./_stream_writable":31,"_process":25,"core-util-is":32,"inherits":22}],28:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.

module.exports = PassThrough;

var Transform = require('./_stream_transform');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough))
    return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function(chunk, encoding, cb) {
  cb(null, chunk);
};

},{"./_stream_transform":30,"core-util-is":32,"inherits":22}],29:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Readable;

/*<replacement>*/
var isArray = require('isarray');
/*</replacement>*/


/*<replacement>*/
var Buffer = require('buffer').Buffer;
/*</replacement>*/

Readable.ReadableState = ReadableState;

var EE = require('events').EventEmitter;

/*<replacement>*/
if (!EE.listenerCount) EE.listenerCount = function(emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

var Stream = require('stream');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var StringDecoder;


/*<replacement>*/
var debug = require('util');
if (debug && debug.debuglog) {
  debug = debug.debuglog('stream');
} else {
  debug = function () {};
}
/*</replacement>*/


util.inherits(Readable, Stream);

function ReadableState(options, stream) {
  var Duplex = require('./_stream_duplex');

  options = options || {};

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  var defaultHwm = options.objectMode ? 16 : 16 * 1024;
  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;

  // cast to ints.
  this.highWaterMark = ~~this.highWaterMark;

  this.buffer = [];
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;


  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  if (stream instanceof Duplex)
    this.objectMode = this.objectMode || !!options.readableObjectMode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // when piping, we only care about 'readable' events that happen
  // after read()ing all the bytes and not getting any pushback.
  this.ranOut = false;

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder)
      StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  var Duplex = require('./_stream_duplex');

  if (!(this instanceof Readable))
    return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  Stream.call(this);
}

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function(chunk, encoding) {
  var state = this._readableState;

  if (util.isString(chunk) && !state.objectMode) {
    encoding = encoding || state.defaultEncoding;
    if (encoding !== state.encoding) {
      chunk = new Buffer(chunk, encoding);
      encoding = '';
    }
  }

  return readableAddChunk(this, state, chunk, encoding, false);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function(chunk) {
  var state = this._readableState;
  return readableAddChunk(this, state, chunk, '', true);
};

function readableAddChunk(stream, state, chunk, encoding, addToFront) {
  var er = chunkInvalid(state, chunk);
  if (er) {
    stream.emit('error', er);
  } else if (util.isNullOrUndefined(chunk)) {
    state.reading = false;
    if (!state.ended)
      onEofChunk(stream, state);
  } else if (state.objectMode || chunk && chunk.length > 0) {
    if (state.ended && !addToFront) {
      var e = new Error('stream.push() after EOF');
      stream.emit('error', e);
    } else if (state.endEmitted && addToFront) {
      var e = new Error('stream.unshift() after end event');
      stream.emit('error', e);
    } else {
      if (state.decoder && !addToFront && !encoding)
        chunk = state.decoder.write(chunk);

      if (!addToFront)
        state.reading = false;

      // if we want the data now, just emit it.
      if (state.flowing && state.length === 0 && !state.sync) {
        stream.emit('data', chunk);
        stream.read(0);
      } else {
        // update the buffer info.
        state.length += state.objectMode ? 1 : chunk.length;
        if (addToFront)
          state.buffer.unshift(chunk);
        else
          state.buffer.push(chunk);

        if (state.needReadable)
          emitReadable(stream);
      }

      maybeReadMore(stream, state);
    }
  } else if (!addToFront) {
    state.reading = false;
  }

  return needMoreData(state);
}



// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended &&
         (state.needReadable ||
          state.length < state.highWaterMark ||
          state.length === 0);
}

// backwards compatibility.
Readable.prototype.setEncoding = function(enc) {
  if (!StringDecoder)
    StringDecoder = require('string_decoder/').StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
  return this;
};

// Don't raise the hwm > 128MB
var MAX_HWM = 0x800000;
function roundUpToNextPowerOf2(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2
    n--;
    for (var p = 1; p < 32; p <<= 1) n |= n >> p;
    n++;
  }
  return n;
}

function howMuchToRead(n, state) {
  if (state.length === 0 && state.ended)
    return 0;

  if (state.objectMode)
    return n === 0 ? 0 : 1;

  if (isNaN(n) || util.isNull(n)) {
    // only flow one buffer at a time
    if (state.flowing && state.buffer.length)
      return state.buffer[0].length;
    else
      return state.length;
  }

  if (n <= 0)
    return 0;

  // If we're asking for more than the target buffer level,
  // then raise the water mark.  Bump up to the next highest
  // power of 2, to prevent increasing it excessively in tiny
  // amounts.
  if (n > state.highWaterMark)
    state.highWaterMark = roundUpToNextPowerOf2(n);

  // don't have that much.  return null, unless we've ended.
  if (n > state.length) {
    if (!state.ended) {
      state.needReadable = true;
      return 0;
    } else
      return state.length;
  }

  return n;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function(n) {
  debug('read', n);
  var state = this._readableState;
  var nOrig = n;

  if (!util.isNumber(n) || n > 0)
    state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 &&
      state.needReadable &&
      (state.length >= state.highWaterMark || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended)
      endReadable(this);
    else
      emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0)
      endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  }

  if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0)
      state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
  }

  // If _read pushed data synchronously, then `reading` will be false,
  // and we need to re-evaluate how much data we can return to the user.
  if (doRead && !state.reading)
    n = howMuchToRead(nOrig, state);

  var ret;
  if (n > 0)
    ret = fromList(n, state);
  else
    ret = null;

  if (util.isNull(ret)) {
    state.needReadable = true;
    n = 0;
  }

  state.length -= n;

  // If we have nothing in the buffer, then we want to know
  // as soon as we *do* get something into the buffer.
  if (state.length === 0 && !state.ended)
    state.needReadable = true;

  // If we tried to read() past the EOF, then emit end on the next tick.
  if (nOrig !== n && state.ended && state.length === 0)
    endReadable(this);

  if (!util.isNull(ret))
    this.emit('data', ret);

  return ret;
};

function chunkInvalid(state, chunk) {
  var er = null;
  if (!util.isBuffer(chunk) &&
      !util.isString(chunk) &&
      !util.isNullOrUndefined(chunk) &&
      !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}


function onEofChunk(stream, state) {
  if (state.decoder && !state.ended) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // emit 'readable' now to make sure it gets picked up.
  emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    if (state.sync)
      process.nextTick(function() {
        emitReadable_(stream);
      });
    else
      emitReadable_(stream);
  }
}

function emitReadable_(stream) {
  debug('emit readable');
  stream.emit('readable');
  flow(stream);
}


// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    process.nextTick(function() {
      maybeReadMore_(stream, state);
    });
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended &&
         state.length < state.highWaterMark) {
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;
    else
      len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function(n) {
  this.emit('error', new Error('not implemented'));
};

Readable.prototype.pipe = function(dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&
              dest !== process.stdout &&
              dest !== process.stderr;

  var endFn = doEnd ? onend : cleanup;
  if (state.endEmitted)
    process.nextTick(endFn);
  else
    src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable) {
    debug('onunpipe');
    if (readable === src) {
      cleanup();
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', cleanup);
    src.removeListener('data', ondata);

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain &&
        (!dest._writableState || dest._writableState.needDrain))
      ondrain();
  }

  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    var ret = dest.write(chunk);
    if (false === ret) {
      debug('false write response, pause',
            src._readableState.awaitDrain);
      src._readableState.awaitDrain++;
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EE.listenerCount(dest, 'error') === 0)
      dest.emit('error', er);
  }
  // This is a brutally ugly hack to make sure that our error handler
  // is attached before any userland ones.  NEVER DO THIS.
  if (!dest._events || !dest._events.error)
    dest.on('error', onerror);
  else if (isArray(dest._events.error))
    dest._events.error.unshift(onerror);
  else
    dest._events.error = [onerror, dest._events.error];



  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function() {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain)
      state.awaitDrain--;
    if (state.awaitDrain === 0 && EE.listenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}


Readable.prototype.unpipe = function(dest) {
  var state = this._readableState;

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0)
    return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes)
      return this;

    if (!dest)
      dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest)
      dest.emit('unpipe', this);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++)
      dests[i].emit('unpipe', this);
    return this;
  }

  // try to find the right one.
  var i = indexOf(state.pipes, dest);
  if (i === -1)
    return this;

  state.pipes.splice(i, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1)
    state.pipes = state.pipes[0];

  dest.emit('unpipe', this);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function(ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  // If listening to data, and it has not explicitly been paused,
  // then call resume to start the flow of data on the next tick.
  if (ev === 'data' && false !== this._readableState.flowing) {
    this.resume();
  }

  if (ev === 'readable' && this.readable) {
    var state = this._readableState;
    if (!state.readableListening) {
      state.readableListening = true;
      state.emittedReadable = false;
      state.needReadable = true;
      if (!state.reading) {
        var self = this;
        process.nextTick(function() {
          debug('readable nexttick read 0');
          self.read(0);
        });
      } else if (state.length) {
        emitReadable(this, state);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function() {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    state.flowing = true;
    if (!state.reading) {
      debug('resume read 0');
      this.read(0);
    }
    resume(this, state);
  }
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    process.nextTick(function() {
      resume_(stream, state);
    });
  }
}

function resume_(stream, state) {
  state.resumeScheduled = false;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading)
    stream.read(0);
}

Readable.prototype.pause = function() {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (false !== this._readableState.flowing) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  if (state.flowing) {
    do {
      var chunk = stream.read();
    } while (null !== chunk && state.flowing);
  }
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function(stream) {
  var state = this._readableState;
  var paused = false;

  var self = this;
  stream.on('end', function() {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length)
        self.push(chunk);
    }

    self.push(null);
  });

  stream.on('data', function(chunk) {
    debug('wrapped data');
    if (state.decoder)
      chunk = state.decoder.write(chunk);
    if (!chunk || !state.objectMode && !chunk.length)
      return;

    var ret = self.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (util.isFunction(stream[i]) && util.isUndefined(this[i])) {
      this[i] = function(method) { return function() {
        return stream[method].apply(stream, arguments);
      }}(i);
    }
  }

  // proxy certain important events.
  var events = ['error', 'close', 'destroy', 'pause', 'resume'];
  forEach(events, function(ev) {
    stream.on(ev, self.emit.bind(self, ev));
  });

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  self._read = function(n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return self;
};



// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
function fromList(n, state) {
  var list = state.buffer;
  var length = state.length;
  var stringMode = !!state.decoder;
  var objectMode = !!state.objectMode;
  var ret;

  // nothing in the list, definitely empty.
  if (list.length === 0)
    return null;

  if (length === 0)
    ret = null;
  else if (objectMode)
    ret = list.shift();
  else if (!n || n >= length) {
    // read it all, truncate the array.
    if (stringMode)
      ret = list.join('');
    else
      ret = Buffer.concat(list, length);
    list.length = 0;
  } else {
    // read just some of it.
    if (n < list[0].length) {
      // just take a part of the first list item.
      // slice is the same for buffers and strings.
      var buf = list[0];
      ret = buf.slice(0, n);
      list[0] = buf.slice(n);
    } else if (n === list[0].length) {
      // first list is a perfect match
      ret = list.shift();
    } else {
      // complex case.
      // we have enough to cover it, but it spans past the first buffer.
      if (stringMode)
        ret = '';
      else
        ret = new Buffer(n);

      var c = 0;
      for (var i = 0, l = list.length; i < l && c < n; i++) {
        var buf = list[0];
        var cpy = Math.min(n - c, buf.length);

        if (stringMode)
          ret += buf.slice(0, cpy);
        else
          buf.copy(ret, c, 0, cpy);

        if (cpy < buf.length)
          list[0] = buf.slice(cpy);
        else
          list.shift();

        c += cpy;
      }
    }
  }

  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0)
    throw new Error('endReadable called on non-empty stream');

  if (!state.endEmitted) {
    state.ended = true;
    process.nextTick(function() {
      // Check that we didn't get one last unshift.
      if (!state.endEmitted && state.length === 0) {
        state.endEmitted = true;
        stream.readable = false;
        stream.emit('end');
      }
    });
  }
}

function forEach (xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

function indexOf (xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}

}).call(this,require('_process'))
},{"./_stream_duplex":27,"_process":25,"buffer":17,"core-util-is":32,"events":21,"inherits":22,"isarray":23,"stream":37,"string_decoder/":38,"util":3}],30:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.

module.exports = Transform;

var Duplex = require('./_stream_duplex');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(Transform, Duplex);


function TransformState(options, stream) {
  this.afterTransform = function(er, data) {
    return afterTransform(stream, er, data);
  };

  this.needTransform = false;
  this.transforming = false;
  this.writecb = null;
  this.writechunk = null;
}

function afterTransform(stream, er, data) {
  var ts = stream._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb)
    return stream.emit('error', new Error('no writecb in Transform class'));

  ts.writechunk = null;
  ts.writecb = null;

  if (!util.isNullOrUndefined(data))
    stream.push(data);

  if (cb)
    cb(er);

  var rs = stream._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    stream._read(rs.highWaterMark);
  }
}


function Transform(options) {
  if (!(this instanceof Transform))
    return new Transform(options);

  Duplex.call(this, options);

  this._transformState = new TransformState(options, this);

  // when the writable side finishes, then flush out anything remaining.
  var stream = this;

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  this.once('prefinish', function() {
    if (util.isFunction(this._flush))
      this._flush(function(er) {
        done(stream, er);
      });
    else
      done(stream);
  });
}

Transform.prototype.push = function(chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function(chunk, encoding, cb) {
  throw new Error('not implemented');
};

Transform.prototype._write = function(chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform ||
        rs.needReadable ||
        rs.length < rs.highWaterMark)
      this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function(n) {
  var ts = this._transformState;

  if (!util.isNull(ts.writechunk) && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};


function done(stream, er) {
  if (er)
    return stream.emit('error', er);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  var ws = stream._writableState;
  var ts = stream._transformState;

  if (ws.length)
    throw new Error('calling transform done when ws.length != 0');

  if (ts.transforming)
    throw new Error('calling transform done when still transforming');

  return stream.push(null);
}

},{"./_stream_duplex":27,"core-util-is":32,"inherits":22}],31:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, cb), and it'll handle all
// the drain event emission and buffering.

module.exports = Writable;

/*<replacement>*/
var Buffer = require('buffer').Buffer;
/*</replacement>*/

Writable.WritableState = WritableState;


/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var Stream = require('stream');

util.inherits(Writable, Stream);

function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
}

function WritableState(options, stream) {
  var Duplex = require('./_stream_duplex');

  options = options || {};

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  var defaultHwm = options.objectMode ? 16 : 16 * 1024;
  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  if (stream instanceof Duplex)
    this.objectMode = this.objectMode || !!options.writableObjectMode;

  // cast to ints.
  this.highWaterMark = ~~this.highWaterMark;

  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function(er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.buffer = [];

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;
}

function Writable(options) {
  var Duplex = require('./_stream_duplex');

  // Writable ctor is applied to Duplexes, though they're not
  // instanceof Writable, they're instanceof Readable.
  if (!(this instanceof Writable) && !(this instanceof Duplex))
    return new Writable(options);

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function() {
  this.emit('error', new Error('Cannot pipe. Not readable.'));
};


function writeAfterEnd(stream, state, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  process.nextTick(function() {
    cb(er);
  });
}

// If we get something that is not a buffer, string, null, or undefined,
// and we're not in objectMode, then that's an error.
// Otherwise stream chunks are all considered to be of length=1, and the
// watermarks determine how many objects to keep in the buffer, rather than
// how many bytes or characters.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  if (!util.isBuffer(chunk) &&
      !util.isString(chunk) &&
      !util.isNullOrUndefined(chunk) &&
      !state.objectMode) {
    var er = new TypeError('Invalid non-string/buffer chunk');
    stream.emit('error', er);
    process.nextTick(function() {
      cb(er);
    });
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function(chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;

  if (util.isFunction(encoding)) {
    cb = encoding;
    encoding = null;
  }

  if (util.isBuffer(chunk))
    encoding = 'buffer';
  else if (!encoding)
    encoding = state.defaultEncoding;

  if (!util.isFunction(cb))
    cb = function() {};

  if (state.ended)
    writeAfterEnd(this, state, cb);
  else if (validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, chunk, encoding, cb);
  }

  return ret;
};

Writable.prototype.cork = function() {
  var state = this._writableState;

  state.corked++;
};

Writable.prototype.uncork = function() {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;

    if (!state.writing &&
        !state.corked &&
        !state.finished &&
        !state.bufferProcessing &&
        state.buffer.length)
      clearBuffer(this, state);
  }
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode &&
      state.decodeStrings !== false &&
      util.isString(chunk)) {
    chunk = new Buffer(chunk, encoding);
  }
  return chunk;
}

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, chunk, encoding, cb) {
  chunk = decodeChunk(state, chunk, encoding);
  if (util.isBuffer(chunk))
    encoding = 'buffer';
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret)
    state.needDrain = true;

  if (state.writing || state.corked)
    state.buffer.push(new WriteReq(chunk, encoding, cb));
  else
    doWrite(stream, state, false, len, chunk, encoding, cb);

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (writev)
    stream._writev(chunk, state.onwrite);
  else
    stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  if (sync)
    process.nextTick(function() {
      state.pendingcb--;
      cb(er);
    });
  else {
    state.pendingcb--;
    cb(er);
  }

  stream._writableState.errorEmitted = true;
  stream.emit('error', er);
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er)
    onwriteError(stream, state, sync, er, cb);
  else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(stream, state);

    if (!finished &&
        !state.corked &&
        !state.bufferProcessing &&
        state.buffer.length) {
      clearBuffer(stream, state);
    }

    if (sync) {
      process.nextTick(function() {
        afterWrite(stream, state, finished, cb);
      });
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished)
    onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}


// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;

  if (stream._writev && state.buffer.length > 1) {
    // Fast case, write everything using _writev()
    var cbs = [];
    for (var c = 0; c < state.buffer.length; c++)
      cbs.push(state.buffer[c].callback);

    // count the one we are adding, as well.
    // TODO(isaacs) clean this up
    state.pendingcb++;
    doWrite(stream, state, true, state.length, state.buffer, '', function(err) {
      for (var i = 0; i < cbs.length; i++) {
        state.pendingcb--;
        cbs[i](err);
      }
    });

    // Clear buffer
    state.buffer = [];
  } else {
    // Slow case, write chunks one-by-one
    for (var c = 0; c < state.buffer.length; c++) {
      var entry = state.buffer[c];
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;

      doWrite(stream, state, false, len, chunk, encoding, cb);

      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        c++;
        break;
      }
    }

    if (c < state.buffer.length)
      state.buffer = state.buffer.slice(c);
    else
      state.buffer.length = 0;
  }

  state.bufferProcessing = false;
}

Writable.prototype._write = function(chunk, encoding, cb) {
  cb(new Error('not implemented'));

};

Writable.prototype._writev = null;

Writable.prototype.end = function(chunk, encoding, cb) {
  var state = this._writableState;

  if (util.isFunction(chunk)) {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (util.isFunction(encoding)) {
    cb = encoding;
    encoding = null;
  }

  if (!util.isNullOrUndefined(chunk))
    this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished)
    endWritable(this, state, cb);
};


function needFinish(stream, state) {
  return (state.ending &&
          state.length === 0 &&
          !state.finished &&
          !state.writing);
}

function prefinish(stream, state) {
  if (!state.prefinished) {
    state.prefinished = true;
    stream.emit('prefinish');
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(stream, state);
  if (need) {
    if (state.pendingcb === 0) {
      prefinish(stream, state);
      state.finished = true;
      stream.emit('finish');
    } else
      prefinish(stream, state);
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished)
      process.nextTick(cb);
    else
      stream.once('finish', cb);
  }
  state.ended = true;
}

}).call(this,require('_process'))
},{"./_stream_duplex":27,"_process":25,"buffer":17,"core-util-is":32,"inherits":22,"stream":37}],32:[function(require,module,exports){
(function (Buffer){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

function isBuffer(arg) {
  return Buffer.isBuffer(arg);
}
exports.isBuffer = isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}
}).call(this,require("buffer").Buffer)
},{"buffer":17}],33:[function(require,module,exports){
module.exports = require("./lib/_stream_passthrough.js")

},{"./lib/_stream_passthrough.js":28}],34:[function(require,module,exports){
exports = module.exports = require('./lib/_stream_readable.js');
exports.Stream = require('stream');
exports.Readable = exports;
exports.Writable = require('./lib/_stream_writable.js');
exports.Duplex = require('./lib/_stream_duplex.js');
exports.Transform = require('./lib/_stream_transform.js');
exports.PassThrough = require('./lib/_stream_passthrough.js');

},{"./lib/_stream_duplex.js":27,"./lib/_stream_passthrough.js":28,"./lib/_stream_readable.js":29,"./lib/_stream_transform.js":30,"./lib/_stream_writable.js":31,"stream":37}],35:[function(require,module,exports){
module.exports = require("./lib/_stream_transform.js")

},{"./lib/_stream_transform.js":30}],36:[function(require,module,exports){
module.exports = require("./lib/_stream_writable.js")

},{"./lib/_stream_writable.js":31}],37:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = require('events').EventEmitter;
var inherits = require('inherits');

inherits(Stream, EE);
Stream.Readable = require('readable-stream/readable.js');
Stream.Writable = require('readable-stream/writable.js');
Stream.Duplex = require('readable-stream/duplex.js');
Stream.Transform = require('readable-stream/transform.js');
Stream.PassThrough = require('readable-stream/passthrough.js');

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};

},{"events":21,"inherits":22,"readable-stream/duplex.js":26,"readable-stream/passthrough.js":33,"readable-stream/readable.js":34,"readable-stream/transform.js":35,"readable-stream/writable.js":36}],38:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var Buffer = require('buffer').Buffer;

var isBufferEncoding = Buffer.isEncoding
  || function(encoding) {
       switch (encoding && encoding.toLowerCase()) {
         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;
         default: return false;
       }
     }


function assertEncoding(encoding) {
  if (encoding && !isBufferEncoding(encoding)) {
    throw new Error('Unknown encoding: ' + encoding);
  }
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters. CESU-8 is handled as part of the UTF-8 encoding.
//
// @TODO Handling all encodings inside a single object makes it very difficult
// to reason about this code, so it should be split up in the future.
// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code
// points as used by CESU-8.
var StringDecoder = exports.StringDecoder = function(encoding) {
  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');
  assertEncoding(encoding);
  switch (this.encoding) {
    case 'utf8':
      // CESU-8 represents each of Surrogate Pair by 3-bytes
      this.surrogateSize = 3;
      break;
    case 'ucs2':
    case 'utf16le':
      // UTF-16 represents each of Surrogate Pair by 2-bytes
      this.surrogateSize = 2;
      this.detectIncompleteChar = utf16DetectIncompleteChar;
      break;
    case 'base64':
      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.
      this.surrogateSize = 3;
      this.detectIncompleteChar = base64DetectIncompleteChar;
      break;
    default:
      this.write = passThroughWrite;
      return;
  }

  // Enough space to store all bytes of a single character. UTF-8 needs 4
  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).
  this.charBuffer = new Buffer(6);
  // Number of bytes received for the current incomplete multi-byte character.
  this.charReceived = 0;
  // Number of bytes expected for the current incomplete multi-byte character.
  this.charLength = 0;
};


// write decodes the given buffer and returns it as JS string that is
// guaranteed to not contain any partial multi-byte characters. Any partial
// character found at the end of the buffer is buffered up, and will be
// returned when calling write again with the remaining bytes.
//
// Note: Converting a Buffer containing an orphan surrogate to a String
// currently works, but converting a String to a Buffer (via `new Buffer`, or
// Buffer#write) will replace incomplete surrogates with the unicode
// replacement character. See https://codereview.chromium.org/121173009/ .
StringDecoder.prototype.write = function(buffer) {
  var charStr = '';
  // if our last write ended with an incomplete multibyte character
  while (this.charLength) {
    // determine how many remaining bytes this buffer has to offer for this char
    var available = (buffer.length >= this.charLength - this.charReceived) ?
        this.charLength - this.charReceived :
        buffer.length;

    // add the new bytes to the char buffer
    buffer.copy(this.charBuffer, this.charReceived, 0, available);
    this.charReceived += available;

    if (this.charReceived < this.charLength) {
      // still not enough chars in this buffer? wait for more ...
      return '';
    }

    // remove bytes belonging to the current character from the buffer
    buffer = buffer.slice(available, buffer.length);

    // get the character that was split
    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);

    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
    var charCode = charStr.charCodeAt(charStr.length - 1);
    if (charCode >= 0xD800 && charCode <= 0xDBFF) {
      this.charLength += this.surrogateSize;
      charStr = '';
      continue;
    }
    this.charReceived = this.charLength = 0;

    // if there are no more bytes in this buffer, just emit our char
    if (buffer.length === 0) {
      return charStr;
    }
    break;
  }

  // determine and set charLength / charReceived
  this.detectIncompleteChar(buffer);

  var end = buffer.length;
  if (this.charLength) {
    // buffer the incomplete character bytes we got
    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);
    end -= this.charReceived;
  }

  charStr += buffer.toString(this.encoding, 0, end);

  var end = charStr.length - 1;
  var charCode = charStr.charCodeAt(end);
  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
  if (charCode >= 0xD800 && charCode <= 0xDBFF) {
    var size = this.surrogateSize;
    this.charLength += size;
    this.charReceived += size;
    this.charBuffer.copy(this.charBuffer, size, 0, size);
    buffer.copy(this.charBuffer, 0, 0, size);
    return charStr.substring(0, end);
  }

  // or just emit the charStr
  return charStr;
};

// detectIncompleteChar determines if there is an incomplete UTF-8 character at
// the end of the given buffer. If so, it sets this.charLength to the byte
// length that character, and sets this.charReceived to the number of bytes
// that are available for this character.
StringDecoder.prototype.detectIncompleteChar = function(buffer) {
  // determine how many bytes we have to check at the end of this buffer
  var i = (buffer.length >= 3) ? 3 : buffer.length;

  // Figure out if one of the last i bytes of our buffer announces an
  // incomplete char.
  for (; i > 0; i--) {
    var c = buffer[buffer.length - i];

    // See http://en.wikipedia.org/wiki/UTF-8#Description

    // 110XXXXX
    if (i == 1 && c >> 5 == 0x06) {
      this.charLength = 2;
      break;
    }

    // 1110XXXX
    if (i <= 2 && c >> 4 == 0x0E) {
      this.charLength = 3;
      break;
    }

    // 11110XXX
    if (i <= 3 && c >> 3 == 0x1E) {
      this.charLength = 4;
      break;
    }
  }
  this.charReceived = i;
};

StringDecoder.prototype.end = function(buffer) {
  var res = '';
  if (buffer && buffer.length)
    res = this.write(buffer);

  if (this.charReceived) {
    var cr = this.charReceived;
    var buf = this.charBuffer;
    var enc = this.encoding;
    res += buf.slice(0, cr).toString(enc);
  }

  return res;
};

function passThroughWrite(buffer) {
  return buffer.toString(this.encoding);
}

function utf16DetectIncompleteChar(buffer) {
  this.charReceived = buffer.length % 2;
  this.charLength = this.charReceived ? 2 : 0;
}

function base64DetectIncompleteChar(buffer) {
  this.charReceived = buffer.length % 3;
  this.charLength = this.charReceived ? 3 : 0;
}

},{"buffer":17}],39:[function(require,module,exports){
module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}
},{}],40:[function(require,module,exports){
(function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  // Allow for deprecating things in the process of starting up.
  if (isUndefined(global.process)) {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  if (process.noDeprecation === true) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnviron;
exports.debuglog = function(set) {
  if (isUndefined(debugEnviron))
    debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = require('./support/isBuffer');

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = require('inherits');

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./support/isBuffer":39,"_process":25,"inherits":22}],41:[function(require,module,exports){
var Data;

Data = (function() {
  function Data(data) {
    this.data = data != null ? data : [];
    this.pos = 0;
    this.length = this.data.length;
  }

  Data.prototype.readByte = function() {
    return this.data[this.pos++];
  };

  Data.prototype.writeByte = function(byte) {
    return this.data[this.pos++] = byte;
  };

  Data.prototype.byteAt = function(index) {
    return this.data[index];
  };

  Data.prototype.readBool = function() {
    return !!this.readByte();
  };

  Data.prototype.writeBool = function(val) {
    return this.writeByte(val ? 1 : 0);
  };

  Data.prototype.readUInt32 = function() {
    var b1, b2, b3, b4;
    b1 = this.readByte() * 0x1000000;
    b2 = this.readByte() << 16;
    b3 = this.readByte() << 8;
    b4 = this.readByte();
    return b1 + b2 + b3 + b4;
  };

  Data.prototype.writeUInt32 = function(val) {
    this.writeByte((val >>> 24) & 0xff);
    this.writeByte((val >> 16) & 0xff);
    this.writeByte((val >> 8) & 0xff);
    return this.writeByte(val & 0xff);
  };

  Data.prototype.readInt32 = function() {
    var int;
    int = this.readUInt32();
    if (int >= 0x80000000) {
      return int - 0x100000000;
    } else {
      return int;
    }
  };

  Data.prototype.writeInt32 = function(val) {
    if (val < 0) {
      val += 0x100000000;
    }
    return this.writeUInt32(val);
  };

  Data.prototype.readUInt16 = function() {
    var b1, b2;
    b1 = this.readByte() << 8;
    b2 = this.readByte();
    return b1 | b2;
  };

  Data.prototype.writeUInt16 = function(val) {
    this.writeByte((val >> 8) & 0xff);
    return this.writeByte(val & 0xff);
  };

  Data.prototype.readInt16 = function() {
    var int;
    int = this.readUInt16();
    if (int >= 0x8000) {
      return int - 0x10000;
    } else {
      return int;
    }
  };

  Data.prototype.writeInt16 = function(val) {
    if (val < 0) {
      val += 0x10000;
    }
    return this.writeUInt16(val);
  };

  Data.prototype.readString = function(length) {
    var i, j, ref, ret;
    ret = [];
    for (i = j = 0, ref = length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      ret[i] = String.fromCharCode(this.readByte());
    }
    return ret.join('');
  };

  Data.prototype.writeString = function(val) {
    var i, j, ref, results;
    results = [];
    for (i = j = 0, ref = val.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      results.push(this.writeByte(val.charCodeAt(i)));
    }
    return results;
  };

  Data.prototype.stringAt = function(pos, length) {
    this.pos = pos;
    return this.readString(length);
  };

  Data.prototype.readShort = function() {
    return this.readInt16();
  };

  Data.prototype.writeShort = function(val) {
    return this.writeInt16(val);
  };

  Data.prototype.readLongLong = function() {
    var b1, b2, b3, b4, b5, b6, b7, b8;
    b1 = this.readByte();
    b2 = this.readByte();
    b3 = this.readByte();
    b4 = this.readByte();
    b5 = this.readByte();
    b6 = this.readByte();
    b7 = this.readByte();
    b8 = this.readByte();
    if (b1 & 0x80) {
      return ((b1 ^ 0xff) * 0x100000000000000 + (b2 ^ 0xff) * 0x1000000000000 + (b3 ^ 0xff) * 0x10000000000 + (b4 ^ 0xff) * 0x100000000 + (b5 ^ 0xff) * 0x1000000 + (b6 ^ 0xff) * 0x10000 + (b7 ^ 0xff) * 0x100 + (b8 ^ 0xff) + 1) * -1;
    }
    return b1 * 0x100000000000000 + b2 * 0x1000000000000 + b3 * 0x10000000000 + b4 * 0x100000000 + b5 * 0x1000000 + b6 * 0x10000 + b7 * 0x100 + b8;
  };

  Data.prototype.writeLongLong = function(val) {
    var high, low;
    high = Math.floor(val / 0x100000000);
    low = val & 0xffffffff;
    this.writeByte((high >> 24) & 0xff);
    this.writeByte((high >> 16) & 0xff);
    this.writeByte((high >> 8) & 0xff);
    this.writeByte(high & 0xff);
    this.writeByte((low >> 24) & 0xff);
    this.writeByte((low >> 16) & 0xff);
    this.writeByte((low >> 8) & 0xff);
    return this.writeByte(low & 0xff);
  };

  Data.prototype.readInt = function() {
    return this.readInt32();
  };

  Data.prototype.writeInt = function(val) {
    return this.writeInt32(val);
  };

  Data.prototype.slice = function(start, end) {
    return this.data.slice(start, end);
  };

  Data.prototype.read = function(bytes) {
    var buf, i, j, ref;
    buf = [];
    for (i = j = 0, ref = bytes; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      buf.push(this.readByte());
    }
    return buf;
  };

  Data.prototype.write = function(bytes) {
    var byte, j, len, results;
    results = [];
    for (j = 0, len = bytes.length; j < len; j++) {
      byte = bytes[j];
      results.push(this.writeByte(byte));
    }
    return results;
  };

  return Data;

})();

module.exports = Data;


},{}],42:[function(require,module,exports){
(function (Buffer){

/*
PDFDocument - represents an entire PDF document
By Devon Govett
 */
var PDFDocument, PDFObject, PDFPage, PDFReference, fs, stream,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

stream = require('stream');

fs = require('fs');

PDFObject = require('./object');

PDFReference = require('./reference');

PDFPage = require('./page');

PDFDocument = (function(superClass) {
  var mixin;

  extend(PDFDocument, superClass);

  function PDFDocument(options1) {
    var key, ref1, ref2, val;
    this.options = options1 != null ? options1 : {};
    PDFDocument.__super__.constructor.apply(this, arguments);
    this.version = 1.3;
    this.compress = (ref1 = this.options.compress) != null ? ref1 : true;
    this._pageBuffer = [];
    this._pageBufferStart = 0;
    this._offsets = [];
    this._waiting = 0;
    this._ended = false;
    this._offset = 0;
    this._root = this.ref({
      Type: 'Catalog',
      Pages: this.ref({
        Type: 'Pages',
        Count: 0,
        Kids: []
      })
    });
    this.page = null;
    this.initColor();
    this.initVector();
    this.initFonts();
    this.initText();
    this.initImages();
    this.info = {
      Producer: 'PDFKit',
      Creator: 'PDFKit',
      CreationDate: new Date()
    };
    if (this.options.info) {
      ref2 = this.options.info;
      for (key in ref2) {
        val = ref2[key];
        this.info[key] = val;
      }
    }
    this._write("%PDF-" + this.version);
    this._write("%\xFF\xFF\xFF\xFF");
    if (this.options.autoFirstPage !== false) {
      this.addPage();
    }
  }

  mixin = function(methods) {
    var method, name, results;
    results = [];
    for (name in methods) {
      method = methods[name];
      results.push(PDFDocument.prototype[name] = method);
    }
    return results;
  };

  mixin(require('./mixins/color'));

  mixin(require('./mixins/vector'));

  mixin(require('./mixins/fonts'));

  mixin(require('./mixins/text'));

  mixin(require('./mixins/images'));

  mixin(require('./mixins/annotations'));

  PDFDocument.prototype.addPage = function(options) {
    var pages;
    if (options == null) {
      options = this.options;
    }
    if (!this.options.bufferPages) {
      this.flushPages();
    }
    this.page = new PDFPage(this, options);
    this._pageBuffer.push(this.page);
    pages = this._root.data.Pages.data;
    pages.Kids.push(this.page.dictionary);
    pages.Count++;
    this.x = this.page.margins.left;
    this.y = this.page.margins.top;
    this._ctm = [1, 0, 0, 1, 0, 0];
    this.transform(1, 0, 0, -1, 0, this.page.height);
    return this;
  };

  PDFDocument.prototype.bufferedPageRange = function() {
    return {
      start: this._pageBufferStart,
      count: this._pageBuffer.length
    };
  };

  PDFDocument.prototype.switchToPage = function(n) {
    var page;
    if (!(page = this._pageBuffer[n - this._pageBufferStart])) {
      throw new Error("switchToPage(" + n + ") out of bounds, current buffer covers pages " + this._pageBufferStart + " to " + (this._pageBufferStart + this._pageBuffer.length - 1));
    }
    return this.page = page;
  };

  PDFDocument.prototype.flushPages = function() {
    var i, len, page, pages;
    pages = this._pageBuffer;
    this._pageBuffer = [];
    this._pageBufferStart += pages.length;
    for (i = 0, len = pages.length; i < len; i++) {
      page = pages[i];
      page.end();
    }
  };

  PDFDocument.prototype.ref = function(data) {
    var ref;
    ref = new PDFReference(this, this._offsets.length + 1, data);
    this._offsets.push(null);
    this._waiting++;
    return ref;
  };

  PDFDocument.prototype._read = function() {};

  PDFDocument.prototype._write = function(data) {
    if (!Buffer.isBuffer(data)) {
      data = new Buffer(data + '\n', 'binary');
    }
    this.push(data);
    return this._offset += data.length;
  };

  PDFDocument.prototype.addContent = function(data) {
    this.page.write(data);
    return this;
  };

  PDFDocument.prototype._refEnd = function(ref) {
    this._offsets[ref.id - 1] = ref.offset;
    if (--this._waiting === 0 && this._ended) {
      this._finalize();
      return this._ended = false;
    }
  };

  PDFDocument.prototype.write = function(filename, fn) {
    var err;
    err = new Error('PDFDocument#write is deprecated, and will be removed in a future version of PDFKit. Please pipe the document into a Node stream.');
    console.warn(err.stack);
    this.pipe(fs.createWriteStream(filename));
    this.end();
    return this.once('end', fn);
  };

  PDFDocument.prototype.output = function(fn) {
    throw new Error('PDFDocument#output is deprecated, and has been removed from PDFKit. Please pipe the document into a Node stream.');
  };

  PDFDocument.prototype.end = function() {
    var font, key, name, ref1, ref2, val;
    this.flushPages();
    this._info = this.ref();
    ref1 = this.info;
    for (key in ref1) {
      val = ref1[key];
      if (typeof val === 'string') {
        val = new String(val);
      }
      this._info.data[key] = val;
    }
    this._info.end();
    ref2 = this._fontFamilies;
    for (name in ref2) {
      font = ref2[name];
      font.finalize();
    }
    this._root.end();
    this._root.data.Pages.end();
    if (this._waiting === 0) {
      return this._finalize();
    } else {
      return this._ended = true;
    }
  };

  PDFDocument.prototype._finalize = function(fn) {
    var i, len, offset, ref1, xRefOffset;
    xRefOffset = this._offset;
    this._write("xref");
    this._write("0 " + (this._offsets.length + 1));
    this._write("0000000000 65535 f ");
    ref1 = this._offsets;
    for (i = 0, len = ref1.length; i < len; i++) {
      offset = ref1[i];
      offset = ('0000000000' + offset).slice(-10);
      this._write(offset + ' 00000 n ');
    }
    this._write('trailer');
    this._write(PDFObject.convert({
      Size: this._offsets.length + 1,
      Root: this._root,
      Info: this._info
    }));
    this._write('startxref');
    this._write("" + xRefOffset);
    this._write('%%EOF');
    return this.push(null);
  };

  PDFDocument.prototype.toString = function() {
    return "[object PDFDocument]";
  };

  return PDFDocument;

})(stream.Readable);

module.exports = PDFDocument;


}).call(this,require("buffer").Buffer)
},{"./mixins/annotations":52,"./mixins/color":53,"./mixins/fonts":54,"./mixins/images":55,"./mixins/text":56,"./mixins/vector":57,"./object":58,"./page":59,"./reference":61,"buffer":17,"fs":1,"stream":37}],43:[function(require,module,exports){
(function (Buffer){
var EmbeddedFont, PDFFont, StandardFont, fontkit;

fontkit = require('fontkit');

PDFFont = (function() {
  PDFFont.open = function(document, src, family, id) {
    var font;
    if (typeof src === 'string') {
      if (StandardFont.isStandardFont(src)) {
        return new StandardFont(document, src, id);
      }
      font = fontkit.openSync(src, family);
    } else if (Buffer.isBuffer(src)) {
      font = fontkit.create(src, family);
    } else if (src instanceof Uint8Array) {
      font = fontkit.create(new Buffer(src), family);
    } else if (src instanceof ArrayBuffer) {
      font = fontkit.create(new Buffer(new Uint8Array(src)), family);
    }
    if (font == null) {
      throw new Error('Not a supported font format or standard PDF font.');
    }
    return new EmbeddedFont(document, font, id);
  };

  function PDFFont() {
    throw new Error('Cannot construct a PDFFont directly.');
  }

  PDFFont.prototype.encode = function(text) {
    throw new Error('Must be implemented by subclasses');
  };

  PDFFont.prototype.widthOfString = function(text) {
    throw new Error('Must be implemented by subclasses');
  };

  PDFFont.prototype.ref = function() {
    return this.dictionary != null ? this.dictionary : this.dictionary = this.document.ref();
  };

  PDFFont.prototype.finalize = function() {
    if (this.embedded || (this.dictionary == null)) {
      return;
    }
    this.embed();
    return this.embedded = true;
  };

  PDFFont.prototype.embed = function() {
    throw new Error('Must be implemented by subclasses');
  };

  PDFFont.prototype.lineHeight = function(size, includeGap) {
    var gap;
    if (includeGap == null) {
      includeGap = false;
    }
    gap = includeGap ? this.lineGap : 0;
    return (this.ascender + gap - this.decender) / 1000 * size;
  };

  return PDFFont;

})();

module.exports = PDFFont;

StandardFont = require('./font/standard');

EmbeddedFont = require('./font/embedded');


}).call(this,require("buffer").Buffer)
},{"./font/embedded":45,"./font/standard":46,"buffer":17,"fontkit":62}],44:[function(require,module,exports){
var AFMFont, fs;

fs = require('fs');

AFMFont = (function() {
  var WIN_ANSI_MAP, characters;

  AFMFont.open = function(filename) {
    return new AFMFont(fs.readFileSync(filename, 'utf8'));
  };

  function AFMFont(contents) {
    var e, i;
    this.contents = contents;
    this.attributes = {};
    this.glyphWidths = {};
    this.boundingBoxes = {};
    this.kernPairs = {};
    this.parse();
    this.charWidths = (function() {
      var j, results;
      results = [];
      for (i = j = 0; j <= 255; i = ++j) {
        results.push(this.glyphWidths[characters[i]]);
      }
      return results;
    }).call(this);
    this.bbox = (function() {
      var j, len, ref, results;
      ref = this.attributes['FontBBox'].split(/\s+/);
      results = [];
      for (j = 0, len = ref.length; j < len; j++) {
        e = ref[j];
        results.push(+e);
      }
      return results;
    }).call(this);
    this.ascender = +(this.attributes['Ascender'] || 0);
    this.decender = +(this.attributes['Descender'] || 0);
    this.lineGap = (this.bbox[3] - this.bbox[1]) - (this.ascender - this.decender);
  }

  AFMFont.prototype.parse = function() {
    var a, j, key, len, line, match, name, ref, section, value;
    section = '';
    ref = this.contents.split('\n');
    for (j = 0, len = ref.length; j < len; j++) {
      line = ref[j];
      if (match = line.match(/^Start(\w+)/)) {
        section = match[1];
        continue;
      } else if (match = line.match(/^End(\w+)/)) {
        section = '';
        continue;
      }
      switch (section) {
        case 'FontMetrics':
          match = line.match(/(^\w+)\s+(.*)/);
          key = match[1];
          value = match[2];
          if (a = this.attributes[key]) {
            if (!Array.isArray(a)) {
              a = this.attributes[key] = [a];
            }
            a.push(value);
          } else {
            this.attributes[key] = value;
          }
          break;
        case 'CharMetrics':
          if (!/^CH?\s/.test(line)) {
            continue;
          }
          name = line.match(/\bN\s+(\.?\w+)\s*;/)[1];
          this.glyphWidths[name] = +line.match(/\bWX\s+(\d+)\s*;/)[1];
          break;
        case 'KernPairs':
          match = line.match(/^KPX\s+(\.?\w+)\s+(\.?\w+)\s+(-?\d+)/);
          if (match) {
            this.kernPairs[match[1] + '\0' + match[2]] = parseInt(match[3]);
          }
      }
    }
  };

  WIN_ANSI_MAP = {
    402: 131,
    8211: 150,
    8212: 151,
    8216: 145,
    8217: 146,
    8218: 130,
    8220: 147,
    8221: 148,
    8222: 132,
    8224: 134,
    8225: 135,
    8226: 149,
    8230: 133,
    8364: 128,
    8240: 137,
    8249: 139,
    8250: 155,
    710: 136,
    8482: 153,
    338: 140,
    339: 156,
    732: 152,
    352: 138,
    353: 154,
    376: 159,
    381: 142,
    382: 158
  };

  AFMFont.prototype.encodeText = function(text) {
    var char, i, j, ref, res;
    res = [];
    for (i = j = 0, ref = text.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      char = text.charCodeAt(i);
      char = WIN_ANSI_MAP[char] || char;
      res.push(char.toString(16));
    }
    return res;
  };

  AFMFont.prototype.glyphsForString = function(string) {
    var charCode, glyphs, i, j, ref;
    glyphs = [];
    for (i = j = 0, ref = string.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      charCode = string.charCodeAt(i);
      glyphs.push(this.characterToGlyph(charCode));
    }
    return glyphs;
  };

  AFMFont.prototype.characterToGlyph = function(character) {
    return characters[WIN_ANSI_MAP[character] || character] || '.notdef';
  };

  AFMFont.prototype.widthOfGlyph = function(glyph) {
    return this.glyphWidths[glyph];
  };

  AFMFont.prototype.getKernPair = function(left, right) {
    return this.kernPairs[left + '\0' + right] || 0;
  };

  AFMFont.prototype.advancesForGlyphs = function(glyphs) {
    var advances, index, j, left, len, right;
    advances = [];
    for (index = j = 0, len = glyphs.length; j < len; index = ++j) {
      left = glyphs[index];
      right = glyphs[index + 1];
      advances.push(this.widthOfGlyph(left) + this.getKernPair(left, right));
    }
    return advances;
  };

  characters = '.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n\nspace         exclam         quotedbl       numbersign\ndollar        percent        ampersand      quotesingle\nparenleft     parenright     asterisk       plus\ncomma         hyphen         period         slash\nzero          one            two            three\nfour          five           six            seven\neight         nine           colon          semicolon\nless          equal          greater        question\n\nat            A              B              C\nD             E              F              G\nH             I              J              K\nL             M              N              O\nP             Q              R              S\nT             U              V              W\nX             Y              Z              bracketleft\nbackslash     bracketright   asciicircum    underscore\n\ngrave         a              b              c\nd             e              f              g\nh             i              j              k\nl             m              n              o\np             q              r              s\nt             u              v              w\nx             y              z              braceleft\nbar           braceright     asciitilde     .notdef\n\nEuro          .notdef        quotesinglbase florin\nquotedblbase  ellipsis       dagger         daggerdbl\ncircumflex    perthousand    Scaron         guilsinglleft\nOE            .notdef        Zcaron         .notdef\n.notdef       quoteleft      quoteright     quotedblleft\nquotedblright bullet         endash         emdash\ntilde         trademark      scaron         guilsinglright\noe            .notdef        zcaron         ydieresis\n\nspace         exclamdown     cent           sterling\ncurrency      yen            brokenbar      section\ndieresis      copyright      ordfeminine    guillemotleft\nlogicalnot    hyphen         registered     macron\ndegree        plusminus      twosuperior    threesuperior\nacute         mu             paragraph      periodcentered\ncedilla       onesuperior    ordmasculine   guillemotright\nonequarter    onehalf        threequarters  questiondown\n\nAgrave        Aacute         Acircumflex    Atilde\nAdieresis     Aring          AE             Ccedilla\nEgrave        Eacute         Ecircumflex    Edieresis\nIgrave        Iacute         Icircumflex    Idieresis\nEth           Ntilde         Ograve         Oacute\nOcircumflex   Otilde         Odieresis      multiply\nOslash        Ugrave         Uacute         Ucircumflex\nUdieresis     Yacute         Thorn          germandbls\n\nagrave        aacute         acircumflex    atilde\nadieresis     aring          ae             ccedilla\negrave        eacute         ecircumflex    edieresis\nigrave        iacute         icircumflex    idieresis\neth           ntilde         ograve         oacute\nocircumflex   otilde         odieresis      divide\noslash        ugrave         uacute         ucircumflex\nudieresis     yacute         thorn          ydieresis'.split(/\s+/);

  return AFMFont;

})();

module.exports = AFMFont;


},{"fs":1}],45:[function(require,module,exports){
var EmbeddedFont, PDFFont, PDFObject,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty,
  slice = [].slice;

PDFFont = require('../font');

PDFObject = require('../object');

EmbeddedFont = (function(superClass) {
  var toHex;

  extend(EmbeddedFont, superClass);

  function EmbeddedFont(document, font, id) {
    this.document = document;
    this.font = font;
    this.id = id;
    this.subset = this.font.createSubset();
    this.unicode = [[0]];
    this.widths = [this.font.widthOfGlyph(0)];
    this.name = this.font.postscriptName;
    this.ascender = this.font.ascent;
    this.decender = this.font.descent;
    this.lineGap = this.font.lineGap;
    this.bbox = this.font.bbox;
  }

  EmbeddedFont.prototype.includeGlyph = function(gid) {
    return this.subset.includeGlyph(gid);
  };

  EmbeddedFont.prototype.encode = function(text, features) {
    var advances, base, base1, gid, glyph, glyphs, i, j, len, res;
    glyphs = this.font.glyphsForString(text, features);
    advances = this.font.advancesForGlyphs(glyphs, features);
    res = [];
    for (i = j = 0, len = glyphs.length; j < len; i = ++j) {
      glyph = glyphs[i];
      gid = this.includeGlyph(glyph.id);
      res.push(('0000' + gid.toString(16)).slice(-4));
      if ((base = this.widths)[gid] == null) {
        base[gid] = this.font.widthOfGlyph(glyph.id);
      }
      if ((base1 = this.unicode)[gid] == null) {
        base1[gid] = glyph.codePoints;
      }
      advances[i] -= this.widths[gid];
    }
    return [res, advances];
  };

  EmbeddedFont.prototype.widthOfString = function(string, size, features) {
    var advance, advances, glyphs, j, len, scale, width;
    glyphs = this.font.glyphsForString('' + string, features);
    advances = this.font.advancesForGlyphs(glyphs, features);
    width = 0;
    for (j = 0, len = advances.length; j < len; j++) {
      advance = advances[j];
      width += advance;
    }
    scale = size / 1000;
    return width * scale;
  };

  EmbeddedFont.prototype.embed = function() {
    var descendantFont, descriptor, familyClass, flags, fontFile, i, isCFF, name, ref, tag;
    isCFF = this.subset.cff != null;
    fontFile = this.document.ref();
    if (isCFF) {
      fontFile.data.Subtype = 'CIDFontType0C';
    }
    this.subset.encodeStream().pipe(fontFile);
    familyClass = (((ref = this.font['OS/2']) != null ? ref.sFamilyClass : void 0) || 0) >> 8;
    flags = 0;
    if (this.font.post.isFixedPitch) {
      flags |= 1 << 0;
    }
    if ((1 <= familyClass && familyClass <= 7)) {
      flags |= 1 << 1;
    }
    flags |= 1 << 2;
    if (familyClass === 10) {
      flags |= 1 << 3;
    }
    if (this.font.head.macStyle.italic) {
      flags |= 1 << 6;
    }
    tag = ((function() {
      var j, results;
      results = [];
      for (i = j = 0; j < 6; i = ++j) {
        results.push(String.fromCharCode(Math.random() * 26 + 65));
      }
      return results;
    })()).join('');
    name = tag + '+' + this.font.postscriptName;
    descriptor = this.document.ref({
      Type: 'FontDescriptor',
      FontName: name,
      Flags: flags,
      FontBBox: this.font.bbox,
      ItalicAngle: this.font.italicAngle,
      Ascent: this.font.ascent,
      Descent: this.font.descent,
      CapHeight: this.font.capHeight || this.font.ascent,
      XHeight: this.font.xHeight || 0,
      StemV: 0
    });
    if (isCFF) {
      descriptor.data.FontFile3 = fontFile;
    } else {
      descriptor.data.FontFile2 = fontFile;
    }
    descriptor.end();
    descendantFont = this.document.ref({
      Type: 'Font',
      Subtype: isCFF ? 'CIDFontType0' : 'CIDFontType2',
      BaseFont: name,
      CIDSystemInfo: {
        Registry: PDFObject.s('Adobe'),
        Ordering: PDFObject.s('Identity'),
        Supplement: 0
      },
      FontDescriptor: descriptor,
      W: [0, this.widths]
    });
    descendantFont.end();
    this.dictionary.data = {
      Type: 'Font',
      Subtype: 'Type0',
      BaseFont: name,
      Encoding: 'Identity-H',
      DescendantFonts: [descendantFont],
      ToUnicode: this.toUnicodeCmap()
    };
    return this.dictionary.end();
  };

  toHex = function() {
    var code, codePoints, codes;
    codePoints = 1 <= arguments.length ? slice.call(arguments, 0) : [];
    codes = (function() {
      var j, len, results;
      results = [];
      for (j = 0, len = codePoints.length; j < len; j++) {
        code = codePoints[j];
        results.push(('0000' + code.toString(16)).slice(-4));
      }
      return results;
    })();
    return codes.join('');
  };

  EmbeddedFont.prototype.toUnicodeCmap = function() {
    var cmap, codePoints, encoded, entries, j, k, len, len1, ref, value;
    cmap = this.document.ref();
    entries = [];
    ref = this.unicode;
    for (j = 0, len = ref.length; j < len; j++) {
      codePoints = ref[j];
      encoded = [];
      for (k = 0, len1 = codePoints.length; k < len1; k++) {
        value = codePoints[k];
        if (value > 0xffff) {
          value -= 0x10000;
          encoded.push(toHex(value >>> 10 & 0x3ff | 0xd800));
          value = 0xdc00 | value & 0x3ff;
        }
        encoded.push(toHex(value));
      }
      entries.push("<" + (encoded.join(' ')) + ">");
    }
    cmap.end("/CIDInit /ProcSet findresource begin\n12 dict begin\nbegincmap\n/CIDSystemInfo <<\n  /Registry (Adobe)\n  /Ordering (UCS)\n  /Supplement 0\n>> def\n/CMapName /Adobe-Identity-UCS def\n/CMapType 2 def\n1 begincodespacerange\n<0000><ffff>\nendcodespacerange\n1 beginbfrange\n<0000> <" + (toHex(entries.length - 1)) + "> [" + (entries.join(' ')) + "]\nendbfrange\nendcmap\nCMapName currentdict /CMap defineresource pop\nend\nend");
    return cmap;
  };

  return EmbeddedFont;

})(PDFFont);

module.exports = EmbeddedFont;


},{"../font":43,"../object":58}],46:[function(require,module,exports){
(function (__dirname){
var AFMFont, PDFFont, StandardFont, fs,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

AFMFont = require('./afm');

PDFFont = require('../font');

fs = require('fs');

StandardFont = (function(superClass) {
  var STANDARD_FONTS;

  extend(StandardFont, superClass);

  function StandardFont(document, name1, id) {
    var ref;
    this.document = document;
    this.name = name1;
    this.id = id;
    this.font = new AFMFont(STANDARD_FONTS[this.name]());
    ref = this.font, this.ascender = ref.ascender, this.decender = ref.decender, this.bbox = ref.bbox, this.lineGap = ref.lineGap;
  }

  StandardFont.prototype.embed = function() {
    this.dictionary.data = {
      Type: 'Font',
      BaseFont: this.name,
      Subtype: 'Type1',
      Encoding: 'WinAnsiEncoding'
    };
    return this.dictionary.end();
  };

  StandardFont.prototype.encode = function(text) {
    var advances, encoded, glyph, glyphs, i, j, len;
    encoded = this.font.encodeText(text);
    glyphs = this.font.glyphsForString('' + text);
    advances = this.font.advancesForGlyphs(glyphs);
    for (i = j = 0, len = glyphs.length; j < len; i = ++j) {
      glyph = glyphs[i];
      advances[i] -= this.font.widthOfGlyph(glyph);
    }
    return [encoded, advances];
  };

  StandardFont.prototype.widthOfString = function(string, size) {
    var advance, advances, glyphs, j, len, scale, width;
    glyphs = this.font.glyphsForString('' + string);
    advances = this.font.advancesForGlyphs(glyphs);
    width = 0;
    for (j = 0, len = advances.length; j < len; j++) {
      advance = advances[j];
      width += advance;
    }
    scale = size / 1000;
    return width * scale;
  };

  StandardFont.isStandardFont = function(name) {
    return name in STANDARD_FONTS;
  };

  STANDARD_FONTS = {
    "Courier": function() {
      return fs.readFileSync(__dirname + "/../font/data/Courier.afm", 'utf8');
    },
    "Courier-Bold": function() {
      return fs.readFileSync(__dirname + "/../font/data/Courier-Bold.afm", 'utf8');
    },
    "Courier-Oblique": function() {
      return fs.readFileSync(__dirname + "/../font/data/Courier-Oblique.afm", 'utf8');
    },
    "Courier-BoldOblique": function() {
      return fs.readFileSync(__dirname + "/../font/data/Courier-BoldOblique.afm", 'utf8');
    },
    "Helvetica": function() {
      return fs.readFileSync(__dirname + "/../font/data/Helvetica.afm", 'utf8');
    },
    "Helvetica-Bold": function() {
      return fs.readFileSync(__dirname + "/../font/data/Helvetica-Bold.afm", 'utf8');
    },
    "Helvetica-Oblique": function() {
      return fs.readFileSync(__dirname + "/../font/data/Helvetica-Oblique.afm", 'utf8');
    },
    "Helvetica-BoldOblique": function() {
      return fs.readFileSync(__dirname + "/../font/data/Helvetica-BoldOblique.afm", 'utf8');
    },
    "Times-Roman": function() {
      return fs.readFileSync(__dirname + "/../font/data/Times-Roman.afm", 'utf8');
    },
    "Times-Bold": function() {
      return fs.readFileSync(__dirname + "/../font/data/Times-Bold.afm", 'utf8');
    },
    "Times-Italic": function() {
      return fs.readFileSync(__dirname + "/../font/data/Times-Italic.afm", 'utf8');
    },
    "Times-BoldItalic": function() {
      return fs.readFileSync(__dirname + "/../font/data/Times-BoldItalic.afm", 'utf8');
    },
    "Symbol": function() {
      return fs.readFileSync(__dirname + "/../font/data/Symbol.afm", 'utf8');
    },
    "ZapfDingbats": function() {
      return fs.readFileSync(__dirname + "/../font/data/ZapfDingbats.afm", 'utf8');
    }
  };

  return StandardFont;

})(PDFFont);

module.exports = StandardFont;


}).call(this,"/lib/font")
},{"../font":43,"./afm":44,"fs":1}],47:[function(require,module,exports){
var PDFGradient, PDFLinearGradient, PDFRadialGradient,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

PDFGradient = (function() {
  function PDFGradient(doc) {
    this.doc = doc;
    this.stops = [];
    this.embedded = false;
    this.transform = [1, 0, 0, 1, 0, 0];
    this._colorSpace = 'DeviceRGB';
  }

  PDFGradient.prototype.stop = function(pos, color, opacity) {
    if (opacity == null) {
      opacity = 1;
    }
    opacity = Math.max(0, Math.min(1, opacity));
    this.stops.push([pos, this.doc._normalizeColor(color), opacity]);
    return this;
  };

  PDFGradient.prototype.embed = function() {
    var bounds, dx, dy, encode, fn, form, grad, group, gstate, i, j, k, last, len, m, m0, m1, m11, m12, m2, m21, m22, m3, m4, m5, name, pattern, ref, ref1, ref2, resources, sMask, shader, stop, stops, v;
    if (this.embedded || this.stops.length === 0) {
      return;
    }
    this.embedded = true;
    last = this.stops[this.stops.length - 1];
    if (last[0] < 1) {
      this.stops.push([1, last[1], last[2]]);
    }
    bounds = [];
    encode = [];
    stops = [];
    for (i = j = 0, ref = this.stops.length - 1; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      encode.push(0, 1);
      if (i + 2 !== this.stops.length) {
        bounds.push(this.stops[i + 1][0]);
      }
      fn = this.doc.ref({
        FunctionType: 2,
        Domain: [0, 1],
        C0: this.stops[i + 0][1],
        C1: this.stops[i + 1][1],
        N: 1
      });
      stops.push(fn);
      fn.end();
    }
    if (stops.length === 1) {
      fn = stops[0];
    } else {
      fn = this.doc.ref({
        FunctionType: 3,
        Domain: [0, 1],
        Functions: stops,
        Bounds: bounds,
        Encode: encode
      });
      fn.end();
    }
    this.id = 'Sh' + (++this.doc._gradCount);
    m = this.doc._ctm.slice();
    m0 = m[0], m1 = m[1], m2 = m[2], m3 = m[3], m4 = m[4], m5 = m[5];
    ref1 = this.transform, m11 = ref1[0], m12 = ref1[1], m21 = ref1[2], m22 = ref1[3], dx = ref1[4], dy = ref1[5];
    m[0] = m0 * m11 + m2 * m12;
    m[1] = m1 * m11 + m3 * m12;
    m[2] = m0 * m21 + m2 * m22;
    m[3] = m1 * m21 + m3 * m22;
    m[4] = m0 * dx + m2 * dy + m4;
    m[5] = m1 * dx + m3 * dy + m5;
    shader = this.shader(fn);
    shader.end();
    pattern = this.doc.ref({
      Type: 'Pattern',
      PatternType: 2,
      Shading: shader,
      Matrix: (function() {
        var k, len, results;
        results = [];
        for (k = 0, len = m.length; k < len; k++) {
          v = m[k];
          results.push(+v.toFixed(5));
        }
        return results;
      })()
    });
    this.doc.page.patterns[this.id] = pattern;
    pattern.end();
    if (this.stops.some(function(stop) {
      return stop[2] < 1;
    })) {
      grad = this.opacityGradient();
      grad._colorSpace = 'DeviceGray';
      ref2 = this.stops;
      for (k = 0, len = ref2.length; k < len; k++) {
        stop = ref2[k];
        grad.stop(stop[0], [stop[2]]);
      }
      grad = grad.embed();
      group = this.doc.ref({
        Type: 'Group',
        S: 'Transparency',
        CS: 'DeviceGray'
      });
      group.end();
      resources = this.doc.ref({
        ProcSet: ['PDF', 'Text', 'ImageB', 'ImageC', 'ImageI'],
        Shading: {
          Sh1: grad.data.Shading
        }
      });
      resources.end();
      form = this.doc.ref({
        Type: 'XObject',
        Subtype: 'Form',
        FormType: 1,
        BBox: [0, 0, this.doc.page.width, this.doc.page.height],
        Group: group,
        Resources: resources
      });
      form.end("/Sh1 sh");
      sMask = this.doc.ref({
        Type: 'Mask',
        S: 'Luminosity',
        G: form
      });
      sMask.end();
      gstate = this.doc.ref({
        Type: 'ExtGState',
        SMask: sMask
      });
      this.opacity_id = ++this.doc._opacityCount;
      name = "Gs" + this.opacity_id;
      this.doc.page.ext_gstates[name] = gstate;
      gstate.end();
    }
    return pattern;
  };

  PDFGradient.prototype.apply = function(op) {
    if (!this.embedded) {
      this.embed();
    }
    this.doc.addContent("/" + this.id + " " + op);
    if (this.opacity_id) {
      this.doc.addContent("/Gs" + this.opacity_id + " gs");
      return this.doc._sMasked = true;
    }
  };

  return PDFGradient;

})();

PDFLinearGradient = (function(superClass) {
  extend(PDFLinearGradient, superClass);

  function PDFLinearGradient(doc, x1, y1, x2, y2) {
    this.doc = doc;
    this.x1 = x1;
    this.y1 = y1;
    this.x2 = x2;
    this.y2 = y2;
    PDFLinearGradient.__super__.constructor.apply(this, arguments);
  }

  PDFLinearGradient.prototype.shader = function(fn) {
    return this.doc.ref({
      ShadingType: 2,
      ColorSpace: this._colorSpace,
      Coords: [this.x1, this.y1, this.x2, this.y2],
      Function: fn,
      Extend: [true, true]
    });
  };

  PDFLinearGradient.prototype.opacityGradient = function() {
    return new PDFLinearGradient(this.doc, this.x1, this.y1, this.x2, this.y2);
  };

  return PDFLinearGradient;

})(PDFGradient);

PDFRadialGradient = (function(superClass) {
  extend(PDFRadialGradient, superClass);

  function PDFRadialGradient(doc, x1, y1, r1, x2, y2, r2) {
    this.doc = doc;
    this.x1 = x1;
    this.y1 = y1;
    this.r1 = r1;
    this.x2 = x2;
    this.y2 = y2;
    this.r2 = r2;
    PDFRadialGradient.__super__.constructor.apply(this, arguments);
  }

  PDFRadialGradient.prototype.shader = function(fn) {
    return this.doc.ref({
      ShadingType: 3,
      ColorSpace: this._colorSpace,
      Coords: [this.x1, this.y1, this.r1, this.x2, this.y2, this.r2],
      Function: fn,
      Extend: [true, true]
    });
  };

  PDFRadialGradient.prototype.opacityGradient = function() {
    return new PDFRadialGradient(this.doc, this.x1, this.y1, this.r1, this.x2, this.y2, this.r2);
  };

  return PDFRadialGradient;

})(PDFGradient);

module.exports = {
  PDFGradient: PDFGradient,
  PDFLinearGradient: PDFLinearGradient,
  PDFRadialGradient: PDFRadialGradient
};


},{}],48:[function(require,module,exports){
(function (Buffer){

/*
PDFImage - embeds images in PDF documents
By Devon Govett
 */
var Data, JPEG, PDFImage, PNG, fs;

fs = require('fs');

Data = require('./data');

JPEG = require('./image/jpeg');

PNG = require('./image/png');

PDFImage = (function() {
  function PDFImage() {}

  PDFImage.open = function(src, label) {
    var data, match;
    if (Buffer.isBuffer(src)) {
      data = src;
    } else {
      if (match = /^data:.+;base64,(.*)$/.exec(src)) {
        data = new Buffer(match[1], 'base64');
      } else {
        data = fs.readFileSync(src);
        if (!data) {
          return;
        }
      }
    }
    if (data[0] === 0xff && data[1] === 0xd8) {
      return new JPEG(data, label);
    } else if (data[0] === 0x89 && data.toString('ascii', 1, 4) === 'PNG') {
      return new PNG(data, label);
    } else {
      throw new Error('Unknown image format.');
    }
  };

  return PDFImage;

})();

module.exports = PDFImage;


}).call(this,require("buffer").Buffer)
},{"./data":41,"./image/jpeg":49,"./image/png":50,"buffer":17,"fs":1}],49:[function(require,module,exports){
var JPEG, fs,
  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

fs = require('fs');

JPEG = (function() {
  var MARKERS;

  MARKERS = [0xFFC0, 0xFFC1, 0xFFC2, 0xFFC3, 0xFFC5, 0xFFC6, 0xFFC7, 0xFFC8, 0xFFC9, 0xFFCA, 0xFFCB, 0xFFCC, 0xFFCD, 0xFFCE, 0xFFCF];

  function JPEG(data, label) {
    var channels, marker, pos;
    this.data = data;
    this.label = label;
    if (this.data.readUInt16BE(0) !== 0xFFD8) {
      throw "SOI not found in JPEG";
    }
    pos = 2;
    while (pos < this.data.length) {
      marker = this.data.readUInt16BE(pos);
      pos += 2;
      if (indexOf.call(MARKERS, marker) >= 0) {
        break;
      }
      pos += this.data.readUInt16BE(pos);
    }
    if (indexOf.call(MARKERS, marker) < 0) {
      throw "Invalid JPEG.";
    }
    pos += 2;
    this.bits = this.data[pos++];
    this.height = this.data.readUInt16BE(pos);
    pos += 2;
    this.width = this.data.readUInt16BE(pos);
    pos += 2;
    channels = this.data[pos++];
    this.colorSpace = (function() {
      switch (channels) {
        case 1:
          return 'DeviceGray';
        case 3:
          return 'DeviceRGB';
        case 4:
          return 'DeviceCMYK';
      }
    })();
    this.obj = null;
  }

  JPEG.prototype.embed = function(document) {
    if (this.obj) {
      return;
    }
    this.obj = document.ref({
      Type: 'XObject',
      Subtype: 'Image',
      BitsPerComponent: this.bits,
      Width: this.width,
      Height: this.height,
      ColorSpace: this.colorSpace,
      Filter: 'DCTDecode'
    });
    if (this.colorSpace === 'DeviceCMYK') {
      this.obj.data['Decode'] = [1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0];
    }
    this.obj.end(this.data);
    return this.data = null;
  };

  return JPEG;

})();

module.exports = JPEG;


},{"fs":1}],50:[function(require,module,exports){
(function (Buffer){
var PNG, PNGImage, zlib;

zlib = require('zlib');

PNG = require('png-js');

PNGImage = (function() {
  function PNGImage(data, label) {
    this.label = label;
    this.image = new PNG(data);
    this.width = this.image.width;
    this.height = this.image.height;
    this.imgData = this.image.imgData;
    this.obj = null;
  }

  PNGImage.prototype.embed = function(document1) {
    var k, len1, mask, palette, params, rgb, val, x;
    this.document = document1;
    if (this.obj) {
      return;
    }
    this.obj = document.ref({
      Type: 'XObject',
      Subtype: 'Image',
      BitsPerComponent: this.image.bits,
      Width: this.width,
      Height: this.height,
      Filter: 'FlateDecode'
    });
    if (!this.image.hasAlphaChannel) {
      params = document.ref({
        Predictor: 15,
        Colors: this.image.colors,
        BitsPerComponent: this.image.bits,
        Columns: this.width
      });
      this.obj.data['DecodeParms'] = params;
      params.end();
    }
    if (this.image.palette.length === 0) {
      this.obj.data['ColorSpace'] = this.image.colorSpace;
    } else {
      palette = document.ref();
      palette.end(new Buffer(this.image.palette));
      this.obj.data['ColorSpace'] = ['Indexed', 'DeviceRGB', (this.image.palette.length / 3) - 1, palette];
    }
    if (this.image.transparency.grayscale) {
      val = this.image.transparency.greyscale;
      return this.obj.data['Mask'] = [val, val];
    } else if (this.image.transparency.rgb) {
      rgb = this.image.transparency.rgb;
      mask = [];
      for (k = 0, len1 = rgb.length; k < len1; k++) {
        x = rgb[k];
        mask.push(x, x);
      }
      return this.obj.data['Mask'] = mask;
    } else if (this.image.transparency.indexed) {
      return this.loadIndexedAlphaChannel();
    } else if (this.image.hasAlphaChannel) {
      return this.splitAlphaChannel();
    } else {
      return this.finalize();
    }
  };

  PNGImage.prototype.finalize = function() {
    var sMask;
    if (this.alphaChannel) {
      sMask = this.document.ref({
        Type: 'XObject',
        Subtype: 'Image',
        Height: this.height,
        Width: this.width,
        BitsPerComponent: 8,
        Filter: 'FlateDecode',
        ColorSpace: 'DeviceGray',
        Decode: [0, 1]
      });
      sMask.end(this.alphaChannel);
      this.obj.data['SMask'] = sMask;
    }
    this.obj.end(this.imgData);
    this.image = null;
    return this.imgData = null;
  };

  PNGImage.prototype.splitAlphaChannel = function() {
    return this.image.decodePixels((function(_this) {
      return function(pixels) {
        var a, alphaChannel, colorByteSize, done, i, imgData, len, p, pixelCount;
        colorByteSize = _this.image.colors * _this.image.bits / 8;
        pixelCount = _this.width * _this.height;
        imgData = new Buffer(pixelCount * colorByteSize);
        alphaChannel = new Buffer(pixelCount);
        i = p = a = 0;
        len = pixels.length;
        while (i < len) {
          imgData[p++] = pixels[i++];
          imgData[p++] = pixels[i++];
          imgData[p++] = pixels[i++];
          alphaChannel[a++] = pixels[i++];
        }
        done = 0;
        zlib.deflate(imgData, function(err, imgData1) {
          _this.imgData = imgData1;
          if (err) {
            throw err;
          }
          if (++done === 2) {
            return _this.finalize();
          }
        });
        return zlib.deflate(alphaChannel, function(err, alphaChannel1) {
          _this.alphaChannel = alphaChannel1;
          if (err) {
            throw err;
          }
          if (++done === 2) {
            return _this.finalize();
          }
        });
      };
    })(this));
  };

  PNGImage.prototype.loadIndexedAlphaChannel = function(fn) {
    var transparency;
    transparency = this.image.transparency.indexed;
    return this.image.decodePixels((function(_this) {
      return function(pixels) {
        var alphaChannel, i, j, k, ref;
        alphaChannel = new Buffer(_this.width * _this.height);
        i = 0;
        for (j = k = 0, ref = pixels.length; k < ref; j = k += 1) {
          alphaChannel[i++] = transparency[pixels[j]];
        }
        return zlib.deflate(alphaChannel, function(err, alphaChannel1) {
          _this.alphaChannel = alphaChannel1;
          if (err) {
            throw err;
          }
          return _this.finalize();
        });
      };
    })(this));
  };

  return PNGImage;

})();

module.exports = PNGImage;


}).call(this,require("buffer").Buffer)
},{"buffer":17,"png-js":206,"zlib":16}],51:[function(require,module,exports){
var EventEmitter, LineBreaker, LineWrapper,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

EventEmitter = require('events').EventEmitter;

LineBreaker = require('linebreak');

LineWrapper = (function(superClass) {
  extend(LineWrapper, superClass);

  function LineWrapper(document, options) {
    var ref;
    this.document = document;
    this.indent = options.indent || 0;
    this.characterSpacing = options.characterSpacing || 0;
    this.wordSpacing = options.wordSpacing === 0;
    this.columns = options.columns || 1;
    this.columnGap = (ref = options.columnGap) != null ? ref : 18;
    this.lineWidth = (options.width - (this.columnGap * (this.columns - 1))) / this.columns;
    this.spaceLeft = this.lineWidth;
    this.startX = this.document.x;
    this.startY = this.document.y;
    this.column = 1;
    this.ellipsis = options.ellipsis;
    this.continuedX = 0;
    this.features = options.features;
    if (options.height != null) {
      this.height = options.height;
      this.maxY = this.startY + options.height;
    } else {
      this.maxY = this.document.page.maxY();
    }
    this.on('firstLine', (function(_this) {
      return function(options) {
        var indent;
        indent = _this.continuedX || _this.indent;
        _this.document.x += indent;
        _this.lineWidth -= indent;
        return _this.once('line', function() {
          _this.document.x -= indent;
          _this.lineWidth += indent;
          if (options.continued && !_this.continuedX) {
            _this.continuedX = _this.indent;
          }
          if (!options.continued) {
            return _this.continuedX = 0;
          }
        });
      };
    })(this));
    this.on('lastLine', (function(_this) {
      return function(options) {
        var align;
        align = options.align;
        if (align === 'justify') {
          options.align = 'left';
        }
        _this.lastLine = true;
        return _this.once('line', function() {
          _this.document.y += options.paragraphGap || 0;
          options.align = align;
          return _this.lastLine = false;
        });
      };
    })(this));
  }

  LineWrapper.prototype.wordWidth = function(word) {
    return this.document.widthOfString(word, this) + this.characterSpacing + this.wordSpacing;
  };

  LineWrapper.prototype.eachWord = function(text, fn) {
    var bk, breaker, fbk, l, last, lbk, shouldContinue, w, word, wordWidths;
    breaker = new LineBreaker(text);
    last = null;
    wordWidths = {};
    while (bk = breaker.nextBreak()) {
      word = text.slice((last != null ? last.position : void 0) || 0, bk.position);
      w = wordWidths[word] != null ? wordWidths[word] : wordWidths[word] = this.wordWidth(word);
      if (w > this.lineWidth + this.continuedX) {
        lbk = last;
        fbk = {};
        while (word.length) {
          l = word.length;
          while (w > this.spaceLeft) {
            w = this.wordWidth(word.slice(0, --l));
          }
          fbk.required = l < word.length;
          shouldContinue = fn(word.slice(0, l), w, fbk, lbk);
          lbk = {
            required: false
          };
          word = word.slice(l);
          w = this.wordWidth(word);
          if (shouldContinue === false) {
            break;
          }
        }
      } else {
        shouldContinue = fn(word, w, bk, last);
      }
      if (shouldContinue === false) {
        break;
      }
      last = bk;
    }
  };

  LineWrapper.prototype.wrap = function(text, options) {
    var buffer, emitLine, lc, nextY, textWidth, wc, y;
    if (options.indent != null) {
      this.indent = options.indent;
    }
    if (options.characterSpacing != null) {
      this.characterSpacing = options.characterSpacing;
    }
    if (options.wordSpacing != null) {
      this.wordSpacing = options.wordSpacing;
    }
    if (options.ellipsis != null) {
      this.ellipsis = options.ellipsis;
    }
    nextY = this.document.y + this.document.currentLineHeight(true);
    if (this.document.y > this.maxY || nextY > this.maxY) {
      this.nextSection();
    }
    buffer = '';
    textWidth = 0;
    wc = 0;
    lc = 0;
    y = this.document.y;
    emitLine = (function(_this) {
      return function() {
        options.textWidth = textWidth + _this.wordSpacing * (wc - 1);
        options.wordCount = wc;
        options.lineWidth = _this.lineWidth;
        y = _this.document.y;
        _this.emit('line', buffer, options, _this);
        return lc++;
      };
    })(this);
    this.emit('sectionStart', options, this);
    this.eachWord(text, (function(_this) {
      return function(word, w, bk, last) {
        var lh, shouldContinue;
        if ((last == null) || last.required) {
          _this.emit('firstLine', options, _this);
          _this.spaceLeft = _this.lineWidth;
        }
        if (w <= _this.spaceLeft) {
          buffer += word;
          textWidth += w;
          wc++;
        }
        if (bk.required || w > _this.spaceLeft) {
          if (bk.required) {
            _this.emit('lastLine', options, _this);
          }
          lh = _this.document.currentLineHeight(true);
          if ((_this.height != null) && _this.ellipsis && _this.document.y + lh * 2 > _this.maxY && _this.column >= _this.columns) {
            if (_this.ellipsis === true) {
              _this.ellipsis = '…';
            }
            buffer = buffer.replace(/\s+$/, '');
            textWidth = _this.wordWidth(buffer + _this.ellipsis);
            while (textWidth > _this.lineWidth) {
              buffer = buffer.slice(0, -1).replace(/\s+$/, '');
              textWidth = _this.wordWidth(buffer + _this.ellipsis);
            }
            buffer = buffer + _this.ellipsis;
          }
          emitLine();
          if (_this.document.y + lh > _this.maxY) {
            shouldContinue = _this.nextSection();
            if (!shouldContinue) {
              wc = 0;
              buffer = '';
              return false;
            }
          }
          if (bk.required) {
            if (w > _this.spaceLeft) {
              buffer = word;
              textWidth = w;
              wc = 1;
              emitLine();
            }
            _this.spaceLeft = _this.lineWidth;
            buffer = '';
            textWidth = 0;
            return wc = 0;
          } else {
            _this.spaceLeft = _this.lineWidth - w;
            buffer = word;
            textWidth = w;
            return wc = 1;
          }
        } else {
          return _this.spaceLeft -= w;
        }
      };
    })(this));
    if (wc > 0) {
      this.emit('lastLine', options, this);
      emitLine();
    }
    this.emit('sectionEnd', options, this);
    if (options.continued === true) {
      if (lc > 1) {
        this.continuedX = 0;
      }
      this.continuedX += options.textWidth;
      return this.document.y = y;
    } else {
      return this.document.x = this.startX;
    }
  };

  LineWrapper.prototype.nextSection = function(options) {
    var ref;
    this.emit('sectionEnd', options, this);
    if (++this.column > this.columns) {
      if (this.height != null) {
        return false;
      }
      this.document.addPage();
      this.column = 1;
      this.startY = this.document.page.margins.top;
      this.maxY = this.document.page.maxY();
      this.document.x = this.startX;
      if (this.document._fillColor) {
        (ref = this.document).fillColor.apply(ref, this.document._fillColor);
      }
      this.emit('pageBreak', options, this);
    } else {
      this.document.x += this.lineWidth + this.columnGap;
      this.document.y = this.startY;
      this.emit('columnBreak', options, this);
    }
    this.emit('sectionStart', options, this);
    return true;
  };

  return LineWrapper;

})(EventEmitter);

module.exports = LineWrapper;


},{"events":21,"linebreak":204}],52:[function(require,module,exports){
module.exports = {
  annotate: function(x, y, w, h, options) {
    var key, ref, val;
    options.Type = 'Annot';
    options.Rect = this._convertRect(x, y, w, h);
    options.Border = [0, 0, 0];
    if (options.Subtype !== 'Link') {
      if (options.C == null) {
        options.C = this._normalizeColor(options.color || [0, 0, 0]);
      }
    }
    delete options.color;
    if (typeof options.Dest === 'string') {
      options.Dest = new String(options.Dest);
    }
    for (key in options) {
      val = options[key];
      options[key[0].toUpperCase() + key.slice(1)] = val;
    }
    ref = this.ref(options);
    this.page.annotations.push(ref);
    ref.end();
    return this;
  },
  note: function(x, y, w, h, contents, options) {
    if (options == null) {
      options = {};
    }
    options.Subtype = 'Text';
    options.Contents = new String(contents);
    options.Name = 'Comment';
    if (options.color == null) {
      options.color = [243, 223, 92];
    }
    return this.annotate(x, y, w, h, options);
  },
  link: function(x, y, w, h, url, options) {
    if (options == null) {
      options = {};
    }
    options.Subtype = 'Link';
    options.A = this.ref({
      S: 'URI',
      URI: new String(url)
    });
    options.A.end();
    return this.annotate(x, y, w, h, options);
  },
  _markup: function(x, y, w, h, options) {
    var ref1, x1, x2, y1, y2;
    if (options == null) {
      options = {};
    }
    ref1 = this._convertRect(x, y, w, h), x1 = ref1[0], y1 = ref1[1], x2 = ref1[2], y2 = ref1[3];
    options.QuadPoints = [x1, y2, x2, y2, x1, y1, x2, y1];
    options.Contents = new String;
    return this.annotate(x, y, w, h, options);
  },
  highlight: function(x, y, w, h, options) {
    if (options == null) {
      options = {};
    }
    options.Subtype = 'Highlight';
    if (options.color == null) {
      options.color = [241, 238, 148];
    }
    return this._markup(x, y, w, h, options);
  },
  underline: function(x, y, w, h, options) {
    if (options == null) {
      options = {};
    }
    options.Subtype = 'Underline';
    return this._markup(x, y, w, h, options);
  },
  strike: function(x, y, w, h, options) {
    if (options == null) {
      options = {};
    }
    options.Subtype = 'StrikeOut';
    return this._markup(x, y, w, h, options);
  },
  lineAnnotation: function(x1, y1, x2, y2, options) {
    if (options == null) {
      options = {};
    }
    options.Subtype = 'Line';
    options.Contents = new String;
    options.L = [x1, this.page.height - y1, x2, this.page.height - y2];
    return this.annotate(x1, y1, x2, y2, options);
  },
  rectAnnotation: function(x, y, w, h, options) {
    if (options == null) {
      options = {};
    }
    options.Subtype = 'Square';
    options.Contents = new String;
    return this.annotate(x, y, w, h, options);
  },
  ellipseAnnotation: function(x, y, w, h, options) {
    if (options == null) {
      options = {};
    }
    options.Subtype = 'Circle';
    options.Contents = new String;
    return this.annotate(x, y, w, h, options);
  },
  textAnnotation: function(x, y, w, h, text, options) {
    if (options == null) {
      options = {};
    }
    options.Subtype = 'FreeText';
    options.Contents = new String(text);
    options.DA = new String;
    return this.annotate(x, y, w, h, options);
  },
  _convertRect: function(x1, y1, w, h) {
    var m0, m1, m2, m3, m4, m5, ref1, x2, y2;
    y2 = y1;
    y1 += h;
    x2 = x1 + w;
    ref1 = this._ctm, m0 = ref1[0], m1 = ref1[1], m2 = ref1[2], m3 = ref1[3], m4 = ref1[4], m5 = ref1[5];
    x1 = m0 * x1 + m2 * y1 + m4;
    y1 = m1 * x1 + m3 * y1 + m5;
    x2 = m0 * x2 + m2 * y2 + m4;
    y2 = m1 * x2 + m3 * y2 + m5;
    return [x1, y1, x2, y2];
  }
};


},{}],53:[function(require,module,exports){
var PDFGradient, PDFLinearGradient, PDFRadialGradient, namedColors, ref;

ref = require('../gradient'), PDFGradient = ref.PDFGradient, PDFLinearGradient = ref.PDFLinearGradient, PDFRadialGradient = ref.PDFRadialGradient;

module.exports = {
  initColor: function() {
    this._opacityRegistry = {};
    this._opacityCount = 0;
    return this._gradCount = 0;
  },
  _normalizeColor: function(color) {
    var hex, part;
    if (color instanceof PDFGradient) {
      return color;
    }
    if (typeof color === 'string') {
      if (color.charAt(0) === '#') {
        if (color.length === 4) {
          color = color.replace(/#([0-9A-F])([0-9A-F])([0-9A-F])/i, "#$1$1$2$2$3$3");
        }
        hex = parseInt(color.slice(1), 16);
        color = [hex >> 16, hex >> 8 & 0xff, hex & 0xff];
      } else if (namedColors[color]) {
        color = namedColors[color];
      }
    }
    if (Array.isArray(color)) {
      if (color.length === 3) {
        color = (function() {
          var i, len, results;
          results = [];
          for (i = 0, len = color.length; i < len; i++) {
            part = color[i];
            results.push(part / 255);
          }
          return results;
        })();
      } else if (color.length === 4) {
        color = (function() {
          var i, len, results;
          results = [];
          for (i = 0, len = color.length; i < len; i++) {
            part = color[i];
            results.push(part / 100);
          }
          return results;
        })();
      }
      return color;
    }
    return null;
  },
  _setColor: function(color, stroke) {
    var gstate, name, op, space;
    color = this._normalizeColor(color);
    if (!color) {
      return false;
    }
    if (this._sMasked) {
      gstate = this.ref({
        Type: 'ExtGState',
        SMask: 'None'
      });
      gstate.end();
      name = "Gs" + (++this._opacityCount);
      this.page.ext_gstates[name] = gstate;
      this.addContent("/" + name + " gs");
      this._sMasked = false;
    }
    op = stroke ? 'SCN' : 'scn';
    if (color instanceof PDFGradient) {
      this._setColorSpace('Pattern', stroke);
      color.apply(op);
    } else {
      space = color.length === 4 ? 'DeviceCMYK' : 'DeviceRGB';
      this._setColorSpace(space, stroke);
      color = color.join(' ');
      this.addContent(color + " " + op);
    }
    return true;
  },
  _setColorSpace: function(space, stroke) {
    var op;
    op = stroke ? 'CS' : 'cs';
    return this.addContent("/" + space + " " + op);
  },
  fillColor: function(color, opacity) {
    var set;
    if (opacity == null) {
      opacity = 1;
    }
    set = this._setColor(color, false);
    if (set) {
      this.fillOpacity(opacity);
    }
    this._fillColor = [color, opacity];
    return this;
  },
  strokeColor: function(color, opacity) {
    var set;
    if (opacity == null) {
      opacity = 1;
    }
    set = this._setColor(color, true);
    if (set) {
      this.strokeOpacity(opacity);
    }
    return this;
  },
  opacity: function(opacity) {
    this._doOpacity(opacity, opacity);
    return this;
  },
  fillOpacity: function(opacity) {
    this._doOpacity(opacity, null);
    return this;
  },
  strokeOpacity: function(opacity) {
    this._doOpacity(null, opacity);
    return this;
  },
  _doOpacity: function(fillOpacity, strokeOpacity) {
    var dictionary, id, key, name, ref1;
    if (!((fillOpacity != null) || (strokeOpacity != null))) {
      return;
    }
    if (fillOpacity != null) {
      fillOpacity = Math.max(0, Math.min(1, fillOpacity));
    }
    if (strokeOpacity != null) {
      strokeOpacity = Math.max(0, Math.min(1, strokeOpacity));
    }
    key = fillOpacity + "_" + strokeOpacity;
    if (this._opacityRegistry[key]) {
      ref1 = this._opacityRegistry[key], dictionary = ref1[0], name = ref1[1];
    } else {
      dictionary = {
        Type: 'ExtGState'
      };
      if (fillOpacity != null) {
        dictionary.ca = fillOpacity;
      }
      if (strokeOpacity != null) {
        dictionary.CA = strokeOpacity;
      }
      dictionary = this.ref(dictionary);
      dictionary.end();
      id = ++this._opacityCount;
      name = "Gs" + id;
      this._opacityRegistry[key] = [dictionary, name];
    }
    this.page.ext_gstates[name] = dictionary;
    return this.addContent("/" + name + " gs");
  },
  linearGradient: function(x1, y1, x2, y2) {
    return new PDFLinearGradient(this, x1, y1, x2, y2);
  },
  radialGradient: function(x1, y1, r1, x2, y2, r2) {
    return new PDFRadialGradient(this, x1, y1, r1, x2, y2, r2);
  }
};

namedColors = {
  aliceblue: [240, 248, 255],
  antiquewhite: [250, 235, 215],
  aqua: [0, 255, 255],
  aquamarine: [127, 255, 212],
  azure: [240, 255, 255],
  beige: [245, 245, 220],
  bisque: [255, 228, 196],
  black: [0, 0, 0],
  blanchedalmond: [255, 235, 205],
  blue: [0, 0, 255],
  blueviolet: [138, 43, 226],
  brown: [165, 42, 42],
  burlywood: [222, 184, 135],
  cadetblue: [95, 158, 160],
  chartreuse: [127, 255, 0],
  chocolate: [210, 105, 30],
  coral: [255, 127, 80],
  cornflowerblue: [100, 149, 237],
  cornsilk: [255, 248, 220],
  crimson: [220, 20, 60],
  cyan: [0, 255, 255],
  darkblue: [0, 0, 139],
  darkcyan: [0, 139, 139],
  darkgoldenrod: [184, 134, 11],
  darkgray: [169, 169, 169],
  darkgreen: [0, 100, 0],
  darkgrey: [169, 169, 169],
  darkkhaki: [189, 183, 107],
  darkmagenta: [139, 0, 139],
  darkolivegreen: [85, 107, 47],
  darkorange: [255, 140, 0],
  darkorchid: [153, 50, 204],
  darkred: [139, 0, 0],
  darksalmon: [233, 150, 122],
  darkseagreen: [143, 188, 143],
  darkslateblue: [72, 61, 139],
  darkslategray: [47, 79, 79],
  darkslategrey: [47, 79, 79],
  darkturquoise: [0, 206, 209],
  darkviolet: [148, 0, 211],
  deeppink: [255, 20, 147],
  deepskyblue: [0, 191, 255],
  dimgray: [105, 105, 105],
  dimgrey: [105, 105, 105],
  dodgerblue: [30, 144, 255],
  firebrick: [178, 34, 34],
  floralwhite: [255, 250, 240],
  forestgreen: [34, 139, 34],
  fuchsia: [255, 0, 255],
  gainsboro: [220, 220, 220],
  ghostwhite: [248, 248, 255],
  gold: [255, 215, 0],
  goldenrod: [218, 165, 32],
  gray: [128, 128, 128],
  grey: [128, 128, 128],
  green: [0, 128, 0],
  greenyellow: [173, 255, 47],
  honeydew: [240, 255, 240],
  hotpink: [255, 105, 180],
  indianred: [205, 92, 92],
  indigo: [75, 0, 130],
  ivory: [255, 255, 240],
  khaki: [240, 230, 140],
  lavender: [230, 230, 250],
  lavenderblush: [255, 240, 245],
  lawngreen: [124, 252, 0],
  lemonchiffon: [255, 250, 205],
  lightblue: [173, 216, 230],
  lightcoral: [240, 128, 128],
  lightcyan: [224, 255, 255],
  lightgoldenrodyellow: [250, 250, 210],
  lightgray: [211, 211, 211],
  lightgreen: [144, 238, 144],
  lightgrey: [211, 211, 211],
  lightpink: [255, 182, 193],
  lightsalmon: [255, 160, 122],
  lightseagreen: [32, 178, 170],
  lightskyblue: [135, 206, 250],
  lightslategray: [119, 136, 153],
  lightslategrey: [119, 136, 153],
  lightsteelblue: [176, 196, 222],
  lightyellow: [255, 255, 224],
  lime: [0, 255, 0],
  limegreen: [50, 205, 50],
  linen: [250, 240, 230],
  magenta: [255, 0, 255],
  maroon: [128, 0, 0],
  mediumaquamarine: [102, 205, 170],
  mediumblue: [0, 0, 205],
  mediumorchid: [186, 85, 211],
  mediumpurple: [147, 112, 219],
  mediumseagreen: [60, 179, 113],
  mediumslateblue: [123, 104, 238],
  mediumspringgreen: [0, 250, 154],
  mediumturquoise: [72, 209, 204],
  mediumvioletred: [199, 21, 133],
  midnightblue: [25, 25, 112],
  mintcream: [245, 255, 250],
  mistyrose: [255, 228, 225],
  moccasin: [255, 228, 181],
  navajowhite: [255, 222, 173],
  navy: [0, 0, 128],
  oldlace: [253, 245, 230],
  olive: [128, 128, 0],
  olivedrab: [107, 142, 35],
  orange: [255, 165, 0],
  orangered: [255, 69, 0],
  orchid: [218, 112, 214],
  palegoldenrod: [238, 232, 170],
  palegreen: [152, 251, 152],
  paleturquoise: [175, 238, 238],
  palevioletred: [219, 112, 147],
  papayawhip: [255, 239, 213],
  peachpuff: [255, 218, 185],
  peru: [205, 133, 63],
  pink: [255, 192, 203],
  plum: [221, 160, 221],
  powderblue: [176, 224, 230],
  purple: [128, 0, 128],
  red: [255, 0, 0],
  rosybrown: [188, 143, 143],
  royalblue: [65, 105, 225],
  saddlebrown: [139, 69, 19],
  salmon: [250, 128, 114],
  sandybrown: [244, 164, 96],
  seagreen: [46, 139, 87],
  seashell: [255, 245, 238],
  sienna: [160, 82, 45],
  silver: [192, 192, 192],
  skyblue: [135, 206, 235],
  slateblue: [106, 90, 205],
  slategray: [112, 128, 144],
  slategrey: [112, 128, 144],
  snow: [255, 250, 250],
  springgreen: [0, 255, 127],
  steelblue: [70, 130, 180],
  tan: [210, 180, 140],
  teal: [0, 128, 128],
  thistle: [216, 191, 216],
  tomato: [255, 99, 71],
  turquoise: [64, 224, 208],
  violet: [238, 130, 238],
  wheat: [245, 222, 179],
  white: [255, 255, 255],
  whitesmoke: [245, 245, 245],
  yellow: [255, 255, 0],
  yellowgreen: [154, 205, 50]
};


},{"../gradient":47}],54:[function(require,module,exports){
var PDFFont;

PDFFont = require('../font');

module.exports = {
  initFonts: function() {
    this._fontFamilies = {};
    this._fontCount = 0;
    this._fontSize = 12;
    this._font = null;
    this._registeredFonts = {};
    return this.font('Helvetica');
  },
  font: function(src, family, size) {
    var cacheKey, font, id, ref;
    if (typeof family === 'number') {
      size = family;
      family = null;
    }
    if (typeof src === 'string' && this._registeredFonts[src]) {
      cacheKey = src;
      ref = this._registeredFonts[src], src = ref.src, family = ref.family;
    } else {
      cacheKey = family || src;
      if (typeof cacheKey !== 'string') {
        cacheKey = null;
      }
    }
    if (size != null) {
      this.fontSize(size);
    }
    if (font = this._fontFamilies[cacheKey]) {
      this._font = font;
      return this;
    }
    id = 'F' + (++this._fontCount);
    this._font = PDFFont.open(this, src, family, id);
    if (font = this._fontFamilies[this._font.name]) {
      this._font = font;
      return this;
    }
    if (cacheKey) {
      this._fontFamilies[cacheKey] = this._font;
    }
    this._fontFamilies[this._font.name] = this._font;
    return this;
  },
  fontSize: function(_fontSize) {
    this._fontSize = _fontSize;
    return this;
  },
  currentLineHeight: function(includeGap) {
    if (includeGap == null) {
      includeGap = false;
    }
    return this._font.lineHeight(this._fontSize, includeGap);
  },
  registerFont: function(name, src, family) {
    this._registeredFonts[name] = {
      src: src,
      family: family
    };
    return this;
  }
};


},{"../font":43}],55:[function(require,module,exports){
(function (Buffer){
var PDFImage;

PDFImage = require('../image');

module.exports = {
  initImages: function() {
    this._imageRegistry = {};
    return this._imageCount = 0;
  },
  image: function(src, x, y, options) {
    var base, bh, bp, bw, h, hp, image, ip, name, ref, ref1, ref2, w, wp;
    if (options == null) {
      options = {};
    }
    if (typeof x === 'object') {
      options = x;
      x = null;
    }
    x = (ref = x != null ? x : options.x) != null ? ref : this.x;
    y = (ref1 = y != null ? y : options.y) != null ? ref1 : this.y;
    if (!Buffer.isBuffer(src)) {
      image = this._imageRegistry[src];
    }
    if (!image) {
      image = PDFImage.open(src, 'I' + (++this._imageCount));
      image.embed(this);
      if (!Buffer.isBuffer(src)) {
        this._imageRegistry[src] = image;
      }
    }
    if ((base = this.page.xobjects)[name = image.label] == null) {
      base[name] = image.obj;
    }
    w = options.width || image.width;
    h = options.height || image.height;
    if (options.width && !options.height) {
      wp = w / image.width;
      w = image.width * wp;
      h = image.height * wp;
    } else if (options.height && !options.width) {
      hp = h / image.height;
      w = image.width * hp;
      h = image.height * hp;
    } else if (options.scale) {
      w = image.width * options.scale;
      h = image.height * options.scale;
    } else if (options.fit) {
      ref2 = options.fit, bw = ref2[0], bh = ref2[1];
      bp = bw / bh;
      ip = image.width / image.height;
      if (ip > bp) {
        w = bw;
        h = bw / ip;
      } else {
        h = bh;
        w = bh * ip;
      }
      if (options.align === 'center') {
        x = x + bw / 2 - w / 2;
      } else if (options.align === 'right') {
        x = x + bw - w;
      }
      if (options.valign === 'center') {
        y = y + bh / 2 - h / 2;
      } else if (options.valign === 'bottom') {
        y = y + bh - h;
      }
    }
    if (this.y === y) {
      this.y += h;
    }
    this.save();
    this.transform(w, 0, 0, -h, x, y + h);
    this.addContent("/" + image.label + " Do");
    this.restore();
    return this;
  }
};


}).call(this,require("buffer").Buffer)
},{"../image":48,"buffer":17}],56:[function(require,module,exports){
var LineWrapper;

LineWrapper = require('../line_wrapper');

module.exports = {
  initText: function() {
    this.x = 0;
    this.y = 0;
    return this._lineGap = 0;
  },
  lineGap: function(_lineGap) {
    this._lineGap = _lineGap;
    return this;
  },
  moveDown: function(lines) {
    if (lines == null) {
      lines = 1;
    }
    this.y += this.currentLineHeight(true) * lines + this._lineGap;
    return this;
  },
  moveUp: function(lines) {
    if (lines == null) {
      lines = 1;
    }
    this.y -= this.currentLineHeight(true) * lines + this._lineGap;
    return this;
  },
  _text: function(text, x, y, options, lineCallback) {
    var j, len, line, ref, wrapper;
    options = this._initOptions(x, y, options);
    text = '' + text;
    if (options.wordSpacing) {
      text = text.replace(/\s{2,}/g, ' ');
    }
    if (options.width) {
      wrapper = this._wrapper;
      if (!wrapper) {
        wrapper = new LineWrapper(this, options);
        wrapper.on('line', lineCallback);
      }
      this._wrapper = options.continued ? wrapper : null;
      this._textOptions = options.continued ? options : null;
      wrapper.wrap(text, options);
    } else {
      ref = text.split('\n');
      for (j = 0, len = ref.length; j < len; j++) {
        line = ref[j];
        lineCallback(line, options);
      }
    }
    return this;
  },
  text: function(text, x, y, options) {
    return this._text(text, x, y, options, this._line.bind(this));
  },
  widthOfString: function(string, options) {
    if (options == null) {
      options = {};
    }
    return this._font.widthOfString(string, this._fontSize, options.features) + (options.characterSpacing || 0) * (string.length - 1);
  },
  heightOfString: function(text, options) {
    var height, lineGap, x, y;
    if (options == null) {
      options = {};
    }
    x = this.x, y = this.y;
    options = this._initOptions(options);
    options.height = Infinity;
    lineGap = options.lineGap || this._lineGap || 0;
    this._text(text, this.x, this.y, options, (function(_this) {
      return function(line, options) {
        return _this.y += _this.currentLineHeight(true) + lineGap;
      };
    })(this));
    height = this.y - y;
    this.x = x;
    this.y = y;
    return height;
  },
  list: function(list, x, y, options, wrapper) {
    var flatten, i, indent, itemIndent, items, level, levels, r;
    options = this._initOptions(x, y, options);
    r = Math.round((this._font.ascender / 1000 * this._fontSize) / 3);
    indent = options.textIndent || r * 5;
    itemIndent = options.bulletIndent || r * 8;
    level = 1;
    items = [];
    levels = [];
    flatten = function(list) {
      var i, item, j, len, results;
      results = [];
      for (i = j = 0, len = list.length; j < len; i = ++j) {
        item = list[i];
        if (Array.isArray(item)) {
          level++;
          flatten(item);
          results.push(level--);
        } else {
          items.push(item);
          results.push(levels.push(level));
        }
      }
      return results;
    };
    flatten(list);
    wrapper = new LineWrapper(this, options);
    wrapper.on('line', this._line.bind(this));
    level = 1;
    i = 0;
    wrapper.on('firstLine', (function(_this) {
      return function() {
        var diff, l;
        if ((l = levels[i++]) !== level) {
          diff = itemIndent * (l - level);
          _this.x += diff;
          wrapper.lineWidth -= diff;
          level = l;
        }
        _this.circle(_this.x - indent + r, _this.y + r + (r / 2), r);
        return _this.fill();
      };
    })(this));
    wrapper.on('sectionStart', (function(_this) {
      return function() {
        var pos;
        pos = indent + itemIndent * (level - 1);
        _this.x += pos;
        return wrapper.lineWidth -= pos;
      };
    })(this));
    wrapper.on('sectionEnd', (function(_this) {
      return function() {
        var pos;
        pos = indent + itemIndent * (level - 1);
        _this.x -= pos;
        return wrapper.lineWidth += pos;
      };
    })(this));
    wrapper.wrap(items.join('\n'), options);
    return this;
  },
  _initOptions: function(x, y, options) {
    var key, margins, ref, val;
    if (x == null) {
      x = {};
    }
    if (options == null) {
      options = {};
    }
    if (typeof x === 'object') {
      options = x;
      x = null;
    }
    options = (function() {
      var k, opts, v;
      opts = {};
      for (k in options) {
        v = options[k];
        opts[k] = v;
      }
      return opts;
    })();
    if (this._textOptions) {
      ref = this._textOptions;
      for (key in ref) {
        val = ref[key];
        if (key !== 'continued') {
          if (options[key] == null) {
            options[key] = val;
          }
        }
      }
    }
    if (x != null) {
      this.x = x;
    }
    if (y != null) {
      this.y = y;
    }
    if (options.lineBreak !== false) {
      margins = this.page.margins;
      if (options.width == null) {
        options.width = this.page.width - this.x - margins.right;
      }
    }
    options.columns || (options.columns = 0);
    if (options.columnGap == null) {
      options.columnGap = 18;
    }
    return options;
  },
  _line: function(text, options, wrapper) {
    var lineGap;
    if (options == null) {
      options = {};
    }
    this._fragment(text, this.x, this.y, options);
    lineGap = options.lineGap || this._lineGap || 0;
    if (!wrapper) {
      return this.x += this.widthOfString(text);
    } else {
      return this.y += this.currentLineHeight(true) + lineGap;
    }
  },
  _fragment: function(text, x, y, options) {
    var a, advances, advancesWord, align, base, characterSpacing, commands, d, encoded, encodedWord, h, i, j, last, len, len1, lineWidth, lineY, m, mode, name, ref, ref1, renderedWidth, spaceWidth, textWidth, word, wordSpacing, words;
    text = ('' + text).replace(/\n/g, '');
    if (text.length === 0) {
      return;
    }
    align = options.align || 'left';
    wordSpacing = options.wordSpacing || 0;
    characterSpacing = options.characterSpacing || 0;
    if (options.width) {
      switch (align) {
        case 'right':
          textWidth = this.widthOfString(text.replace(/\s+$/, ''), options);
          x += options.lineWidth - textWidth;
          break;
        case 'center':
          x += options.lineWidth / 2 - options.textWidth / 2;
          break;
        case 'justify':
          words = text.trim().split(/\s+/);
          textWidth = this.widthOfString(text.replace(/\s+/g, ''), options);
          spaceWidth = this.widthOfString(' ') + characterSpacing;
          wordSpacing = Math.max(0, (options.lineWidth - textWidth) / Math.max(1, words.length - 1) - spaceWidth);
      }
    }
    renderedWidth = options.textWidth + (wordSpacing * (options.wordCount - 1)) + (characterSpacing * (text.length - 1));
    if (options.link) {
      this.link(x, y, renderedWidth, this.currentLineHeight(), options.link);
    }
    if (options.underline || options.strike) {
      this.save();
      if (!options.stroke) {
        this.strokeColor.apply(this, this._fillColor);
      }
      lineWidth = this._fontSize < 10 ? 0.5 : Math.floor(this._fontSize / 10);
      this.lineWidth(lineWidth);
      d = options.underline ? 1 : 2;
      lineY = y + this.currentLineHeight() / d;
      if (options.underline) {
        lineY -= lineWidth;
      }
      this.moveTo(x, lineY);
      this.lineTo(x + renderedWidth, lineY);
      this.stroke();
      this.restore();
    }
    this.save();
    this.transform(1, 0, 0, -1, 0, this.page.height);
    y = this.page.height - y - (this._font.ascender / 1000 * this._fontSize);
    if ((base = this.page.fonts)[name = this._font.id] == null) {
      base[name] = this._font.ref();
    }
    this.addContent("BT");
    this.addContent(x + " " + y + " Td");
    this.addContent("/" + this._font.id + " " + this._fontSize + " Tf");
    mode = options.fill && options.stroke ? 2 : options.stroke ? 1 : 0;
    if (mode) {
      this.addContent(mode + " Tr");
    }
    if (characterSpacing) {
      this.addContent(characterSpacing + " Tc");
    }
    if (wordSpacing) {
      words = text.trim().split(/\s+/);
      wordSpacing += this.widthOfString(' ') + characterSpacing;
      wordSpacing *= 1000 / this._fontSize;
      encoded = [];
      advances = [];
      for (j = 0, len = words.length; j < len; j++) {
        word = words[j];
        ref = this._font.encode(word, options.features), encodedWord = ref[0], advancesWord = ref[1];
        if (!advancesWord) {
          advancesWord = (function() {
            var m, ref1, results;
            results = [];
            for (i = m = 0, ref1 = encodedWord.length; 0 <= ref1 ? m < ref1 : m > ref1; i = 0 <= ref1 ? ++m : --m) {
              results.push(0);
            }
            return results;
          })();
        }
        encoded.push.apply(encoded, encodedWord);
        advances.push.apply(advances, advancesWord);
        advances[advances.length - 1] += wordSpacing;
      }
    } else {
      ref1 = this._font.encode(text, options.features), encoded = ref1[0], advances = ref1[1];
    }
    if (advances) {
      commands = [];
      last = 0;
      for (i = m = 0, len1 = advances.length; m < len1; i = ++m) {
        a = advances[i];
        if (a === 0 && i < advances.length - 1) {
          continue;
        }
        h = encoded.slice(last, i + 1).join('');
        commands.push("<" + h + "> " + (-a));
        last = i + 1;
      }
      this.addContent("[" + (commands.join(' ')) + "] TJ");
    } else {
      this.addContent("<" + (encoded.join('')) + "> Tj");
    }
    this.addContent("ET");
    return this.restore();
  }
};


},{"../line_wrapper":51}],57:[function(require,module,exports){
var KAPPA, SVGPath,
  slice = [].slice;

SVGPath = require('../path');

KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);

module.exports = {
  initVector: function() {
    this._ctm = [1, 0, 0, 1, 0, 0];
    return this._ctmStack = [];
  },
  save: function() {
    this._ctmStack.push(this._ctm.slice());
    return this.addContent('q');
  },
  restore: function() {
    this._ctm = this._ctmStack.pop() || [1, 0, 0, 1, 0, 0];
    return this.addContent('Q');
  },
  closePath: function() {
    return this.addContent('h');
  },
  lineWidth: function(w) {
    return this.addContent(w + " w");
  },
  _CAP_STYLES: {
    BUTT: 0,
    ROUND: 1,
    SQUARE: 2
  },
  lineCap: function(c) {
    if (typeof c === 'string') {
      c = this._CAP_STYLES[c.toUpperCase()];
    }
    return this.addContent(c + " J");
  },
  _JOIN_STYLES: {
    MITER: 0,
    ROUND: 1,
    BEVEL: 2
  },
  lineJoin: function(j) {
    if (typeof j === 'string') {
      j = this._JOIN_STYLES[j.toUpperCase()];
    }
    return this.addContent(j + " j");
  },
  miterLimit: function(m) {
    return this.addContent(m + " M");
  },
  dash: function(length, options) {
    var phase, ref, space;
    if (options == null) {
      options = {};
    }
    if (length == null) {
      return this;
    }
    space = (ref = options.space) != null ? ref : length;
    phase = options.phase || 0;
    return this.addContent("[" + length + " " + space + "] " + phase + " d");
  },
  undash: function() {
    return this.addContent("[] 0 d");
  },
  moveTo: function(x, y) {
    return this.addContent(x + " " + y + " m");
  },
  lineTo: function(x, y) {
    return this.addContent(x + " " + y + " l");
  },
  bezierCurveTo: function(cp1x, cp1y, cp2x, cp2y, x, y) {
    return this.addContent(cp1x + " " + cp1y + " " + cp2x + " " + cp2y + " " + x + " " + y + " c");
  },
  quadraticCurveTo: function(cpx, cpy, x, y) {
    return this.addContent(cpx + " " + cpy + " " + x + " " + y + " v");
  },
  rect: function(x, y, w, h) {
    return this.addContent(x + " " + y + " " + w + " " + h + " re");
  },
  roundedRect: function(x, y, w, h, r) {
    if (r == null) {
      r = 0;
    }
    this.moveTo(x + r, y);
    this.lineTo(x + w - r, y);
    this.quadraticCurveTo(x + w, y, x + w, y + r);
    this.lineTo(x + w, y + h - r);
    this.quadraticCurveTo(x + w, y + h, x + w - r, y + h);
    this.lineTo(x + r, y + h);
    this.quadraticCurveTo(x, y + h, x, y + h - r);
    this.lineTo(x, y + r);
    return this.quadraticCurveTo(x, y, x + r, y);
  },
  ellipse: function(x, y, r1, r2) {
    var ox, oy, xe, xm, ye, ym;
    if (r2 == null) {
      r2 = r1;
    }
    x -= r1;
    y -= r2;
    ox = r1 * KAPPA;
    oy = r2 * KAPPA;
    xe = x + r1 * 2;
    ye = y + r2 * 2;
    xm = x + r1;
    ym = y + r2;
    this.moveTo(x, ym);
    this.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);
    this.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);
    this.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);
    this.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);
    return this.closePath();
  },
  circle: function(x, y, radius) {
    return this.ellipse(x, y, radius);
  },
  polygon: function() {
    var i, len, point, points;
    points = 1 <= arguments.length ? slice.call(arguments, 0) : [];
    this.moveTo.apply(this, points.shift());
    for (i = 0, len = points.length; i < len; i++) {
      point = points[i];
      this.lineTo.apply(this, point);
    }
    return this.closePath();
  },
  path: function(path) {
    SVGPath.apply(this, path);
    return this;
  },
  _windingRule: function(rule) {
    if (/even-?odd/.test(rule)) {
      return '*';
    }
    return '';
  },
  fill: function(color, rule) {
    if (/(even-?odd)|(non-?zero)/.test(color)) {
      rule = color;
      color = null;
    }
    if (color) {
      this.fillColor(color);
    }
    return this.addContent('f' + this._windingRule(rule));
  },
  stroke: function(color) {
    if (color) {
      this.strokeColor(color);
    }
    return this.addContent('S');
  },
  fillAndStroke: function(fillColor, strokeColor, rule) {
    var isFillRule;
    if (strokeColor == null) {
      strokeColor = fillColor;
    }
    isFillRule = /(even-?odd)|(non-?zero)/;
    if (isFillRule.test(fillColor)) {
      rule = fillColor;
      fillColor = null;
    }
    if (isFillRule.test(strokeColor)) {
      rule = strokeColor;
      strokeColor = fillColor;
    }
    if (fillColor) {
      this.fillColor(fillColor);
      this.strokeColor(strokeColor);
    }
    return this.addContent('B' + this._windingRule(rule));
  },
  clip: function(rule) {
    return this.addContent('W' + this._windingRule(rule) + ' n');
  },
  transform: function(m11, m12, m21, m22, dx, dy) {
    var m, m0, m1, m2, m3, m4, m5, v, values;
    m = this._ctm;
    m0 = m[0], m1 = m[1], m2 = m[2], m3 = m[3], m4 = m[4], m5 = m[5];
    m[0] = m0 * m11 + m2 * m12;
    m[1] = m1 * m11 + m3 * m12;
    m[2] = m0 * m21 + m2 * m22;
    m[3] = m1 * m21 + m3 * m22;
    m[4] = m0 * dx + m2 * dy + m4;
    m[5] = m1 * dx + m3 * dy + m5;
    values = ((function() {
      var i, len, ref, results;
      ref = [m11, m12, m21, m22, dx, dy];
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        v = ref[i];
        results.push(+v.toFixed(5));
      }
      return results;
    })()).join(' ');
    return this.addContent(values + " cm");
  },
  translate: function(x, y) {
    return this.transform(1, 0, 0, 1, x, y);
  },
  rotate: function(angle, options) {
    var cos, rad, ref, sin, x, x1, y, y1;
    if (options == null) {
      options = {};
    }
    rad = angle * Math.PI / 180;
    cos = Math.cos(rad);
    sin = Math.sin(rad);
    x = y = 0;
    if (options.origin != null) {
      ref = options.origin, x = ref[0], y = ref[1];
      x1 = x * cos - y * sin;
      y1 = x * sin + y * cos;
      x -= x1;
      y -= y1;
    }
    return this.transform(cos, sin, -sin, cos, x, y);
  },
  scale: function(xFactor, yFactor, options) {
    var ref, x, y;
    if (yFactor == null) {
      yFactor = xFactor;
    }
    if (options == null) {
      options = {};
    }
    if (arguments.length === 2) {
      yFactor = xFactor;
      options = yFactor;
    }
    x = y = 0;
    if (options.origin != null) {
      ref = options.origin, x = ref[0], y = ref[1];
      x -= xFactor * x;
      y -= yFactor * y;
    }
    return this.transform(xFactor, 0, 0, yFactor, x, y);
  }
};


},{"../path":60}],58:[function(require,module,exports){
(function (Buffer){

/*
PDFObject - converts JavaScript types into their corrisponding PDF types.
By Devon Govett
 */
var PDFObject, PDFReference;

PDFObject = (function() {
  var escapable, escapableRe, pad, swapBytes;

  function PDFObject() {}

  pad = function(str, length) {
    return (Array(length + 1).join('0') + str).slice(-length);
  };

  escapableRe = /[\n\r\t\b\f\(\)\\]/g;

  escapable = {
    '\n': '\\n',
    '\r': '\\r',
    '\t': '\\t',
    '\b': '\\b',
    '\f': '\\f',
    '\\': '\\\\',
    '(': '\\(',
    ')': '\\)'
  };

  swapBytes = function(buff) {
    var a, i, j, l, ref;
    l = buff.length;
    if (l & 0x01) {
      throw new Error("Buffer length must be even");
    } else {
      for (i = j = 0, ref = l - 1; j < ref; i = j += 2) {
        a = buff[i];
        buff[i] = buff[i + 1];
        buff[i + 1] = a;
      }
    }
    return buff;
  };

  PDFObject.convert = function(object) {
    var e, i, isUnicode, items, j, key, out, ref, string, val;
    if (typeof object === 'string') {
      return '/' + object;
    } else if (object instanceof String) {
      string = object.replace(escapableRe, function(c) {
        return escapable[c];
      });
      isUnicode = false;
      for (i = j = 0, ref = string.length; j < ref; i = j += 1) {
        if (string.charCodeAt(i) > 0x7f) {
          isUnicode = true;
          break;
        }
      }
      if (isUnicode) {
        string = swapBytes(new Buffer('\ufeff' + string, 'utf16le')).toString('binary');
      }
      return '(' + string + ')';
    } else if (Buffer.isBuffer(object)) {
      return '<' + object.toString('hex') + '>';
    } else if (object instanceof PDFReference) {
      return object.toString();
    } else if (object instanceof Date) {
      return '(D:' + pad(object.getUTCFullYear(), 4) + pad(object.getUTCMonth(), 2) + pad(object.getUTCDate(), 2) + pad(object.getUTCHours(), 2) + pad(object.getUTCMinutes(), 2) + pad(object.getUTCSeconds(), 2) + 'Z)';
    } else if (Array.isArray(object)) {
      items = ((function() {
        var k, len, results;
        results = [];
        for (k = 0, len = object.length; k < len; k++) {
          e = object[k];
          results.push(PDFObject.convert(e));
        }
        return results;
      })()).join(' ');
      return '[' + items + ']';
    } else if ({}.toString.call(object) === '[object Object]') {
      out = ['<<'];
      for (key in object) {
        val = object[key];
        out.push('/' + key + ' ' + PDFObject.convert(val));
      }
      out.push('>>');
      return out.join('\n');
    } else {
      return '' + object;
    }
  };

  return PDFObject;

})();

module.exports = PDFObject;

PDFReference = require('./reference');


}).call(this,require("buffer").Buffer)
},{"./reference":61,"buffer":17}],59:[function(require,module,exports){

/*
PDFPage - represents a single page in the PDF document
By Devon Govett
 */
var PDFPage;

PDFPage = (function() {
  var DEFAULT_MARGINS, SIZES;

  function PDFPage(document, options) {
    var dimensions;
    this.document = document;
    if (options == null) {
      options = {};
    }
    this.size = options.size || 'letter';
    this.layout = options.layout || 'portrait';
    if (typeof options.margin === 'number') {
      this.margins = {
        top: options.margin,
        left: options.margin,
        bottom: options.margin,
        right: options.margin
      };
    } else {
      this.margins = options.margins || DEFAULT_MARGINS;
    }
    dimensions = Array.isArray(this.size) ? this.size : SIZES[this.size.toUpperCase()];
    this.width = dimensions[this.layout === 'portrait' ? 0 : 1];
    this.height = dimensions[this.layout === 'portrait' ? 1 : 0];
    this.content = this.document.ref();
    this.resources = this.document.ref({
      ProcSet: ['PDF', 'Text', 'ImageB', 'ImageC', 'ImageI']
    });
    Object.defineProperties(this, {
      fonts: {
        get: (function(_this) {
          return function() {
            var base;
            return (base = _this.resources.data).Font != null ? base.Font : base.Font = {};
          };
        })(this)
      },
      xobjects: {
        get: (function(_this) {
          return function() {
            var base;
            return (base = _this.resources.data).XObject != null ? base.XObject : base.XObject = {};
          };
        })(this)
      },
      ext_gstates: {
        get: (function(_this) {
          return function() {
            var base;
            return (base = _this.resources.data).ExtGState != null ? base.ExtGState : base.ExtGState = {};
          };
        })(this)
      },
      patterns: {
        get: (function(_this) {
          return function() {
            var base;
            return (base = _this.resources.data).Pattern != null ? base.Pattern : base.Pattern = {};
          };
        })(this)
      },
      annotations: {
        get: (function(_this) {
          return function() {
            var base;
            return (base = _this.dictionary.data).Annots != null ? base.Annots : base.Annots = [];
          };
        })(this)
      }
    });
    this.dictionary = this.document.ref({
      Type: 'Page',
      Parent: this.document._root.data.Pages,
      MediaBox: [0, 0, this.width, this.height],
      Contents: this.content,
      Resources: this.resources
    });
  }

  PDFPage.prototype.maxY = function() {
    return this.height - this.margins.bottom;
  };

  PDFPage.prototype.write = function(chunk) {
    return this.content.write(chunk);
  };

  PDFPage.prototype.end = function() {
    this.dictionary.end();
    this.resources.end();
    return this.content.end();
  };

  DEFAULT_MARGINS = {
    top: 72,
    left: 72,
    bottom: 72,
    right: 72
  };

  SIZES = {
    '4A0': [4767.87, 6740.79],
    '2A0': [3370.39, 4767.87],
    A0: [2383.94, 3370.39],
    A1: [1683.78, 2383.94],
    A2: [1190.55, 1683.78],
    A3: [841.89, 1190.55],
    A4: [595.28, 841.89],
    A5: [419.53, 595.28],
    A6: [297.64, 419.53],
    A7: [209.76, 297.64],
    A8: [147.40, 209.76],
    A9: [104.88, 147.40],
    A10: [73.70, 104.88],
    B0: [2834.65, 4008.19],
    B1: [2004.09, 2834.65],
    B2: [1417.32, 2004.09],
    B3: [1000.63, 1417.32],
    B4: [708.66, 1000.63],
    B5: [498.90, 708.66],
    B6: [354.33, 498.90],
    B7: [249.45, 354.33],
    B8: [175.75, 249.45],
    B9: [124.72, 175.75],
    B10: [87.87, 124.72],
    C0: [2599.37, 3676.54],
    C1: [1836.85, 2599.37],
    C2: [1298.27, 1836.85],
    C3: [918.43, 1298.27],
    C4: [649.13, 918.43],
    C5: [459.21, 649.13],
    C6: [323.15, 459.21],
    C7: [229.61, 323.15],
    C8: [161.57, 229.61],
    C9: [113.39, 161.57],
    C10: [79.37, 113.39],
    RA0: [2437.80, 3458.27],
    RA1: [1729.13, 2437.80],
    RA2: [1218.90, 1729.13],
    RA3: [864.57, 1218.90],
    RA4: [609.45, 864.57],
    SRA0: [2551.18, 3628.35],
    SRA1: [1814.17, 2551.18],
    SRA2: [1275.59, 1814.17],
    SRA3: [907.09, 1275.59],
    SRA4: [637.80, 907.09],
    EXECUTIVE: [521.86, 756.00],
    FOLIO: [612.00, 936.00],
    LEGAL: [612.00, 1008.00],
    LETTER: [612.00, 792.00],
    TABLOID: [792.00, 1224.00]
  };

  return PDFPage;

})();

module.exports = PDFPage;


},{}],60:[function(require,module,exports){
var SVGPath;

SVGPath = (function() {
  var apply, arcToSegments, cx, cy, parameters, parse, px, py, runners, segmentToBezier, solveArc, sx, sy;

  function SVGPath() {}

  SVGPath.apply = function(doc, path) {
    var commands;
    commands = parse(path);
    return apply(commands, doc);
  };

  parameters = {
    A: 7,
    a: 7,
    C: 6,
    c: 6,
    H: 1,
    h: 1,
    L: 2,
    l: 2,
    M: 2,
    m: 2,
    Q: 4,
    q: 4,
    S: 4,
    s: 4,
    T: 2,
    t: 2,
    V: 1,
    v: 1,
    Z: 0,
    z: 0
  };

  parse = function(path) {
    var args, c, cmd, curArg, foundDecimal, j, len, params, ret;
    ret = [];
    args = [];
    curArg = "";
    foundDecimal = false;
    params = 0;
    for (j = 0, len = path.length; j < len; j++) {
      c = path[j];
      if (parameters[c] != null) {
        params = parameters[c];
        if (cmd) {
          if (curArg.length > 0) {
            args[args.length] = +curArg;
          }
          ret[ret.length] = {
            cmd: cmd,
            args: args
          };
          args = [];
          curArg = "";
          foundDecimal = false;
        }
        cmd = c;
      } else if ((c === " " || c === ",") || (c === "-" && curArg.length > 0 && curArg[curArg.length - 1] !== 'e') || (c === "." && foundDecimal)) {
        if (curArg.length === 0) {
          continue;
        }
        if (args.length === params) {
          ret[ret.length] = {
            cmd: cmd,
            args: args
          };
          args = [+curArg];
          if (cmd === "M") {
            cmd = "L";
          }
          if (cmd === "m") {
            cmd = "l";
          }
        } else {
          args[args.length] = +curArg;
        }
        foundDecimal = c === ".";
        curArg = c === '-' || c === '.' ? c : '';
      } else {
        curArg += c;
        if (c === '.') {
          foundDecimal = true;
        }
      }
    }
    if (curArg.length > 0) {
      if (args.length === params) {
        ret[ret.length] = {
          cmd: cmd,
          args: args
        };
        args = [+curArg];
        if (cmd === "M") {
          cmd = "L";
        }
        if (cmd === "m") {
          cmd = "l";
        }
      } else {
        args[args.length] = +curArg;
      }
    }
    ret[ret.length] = {
      cmd: cmd,
      args: args
    };
    return ret;
  };

  cx = cy = px = py = sx = sy = 0;

  apply = function(commands, doc) {
    var c, i, j, len, name;
    cx = cy = px = py = sx = sy = 0;
    for (i = j = 0, len = commands.length; j < len; i = ++j) {
      c = commands[i];
      if (typeof runners[name = c.cmd] === "function") {
        runners[name](doc, c.args);
      }
    }
    return cx = cy = px = py = 0;
  };

  runners = {
    M: function(doc, a) {
      cx = a[0];
      cy = a[1];
      px = py = null;
      sx = cx;
      sy = cy;
      return doc.moveTo(cx, cy);
    },
    m: function(doc, a) {
      cx += a[0];
      cy += a[1];
      px = py = null;
      sx = cx;
      sy = cy;
      return doc.moveTo(cx, cy);
    },
    C: function(doc, a) {
      cx = a[4];
      cy = a[5];
      px = a[2];
      py = a[3];
      return doc.bezierCurveTo.apply(doc, a);
    },
    c: function(doc, a) {
      doc.bezierCurveTo(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy, a[4] + cx, a[5] + cy);
      px = cx + a[2];
      py = cy + a[3];
      cx += a[4];
      return cy += a[5];
    },
    S: function(doc, a) {
      if (px === null) {
        px = cx;
        py = cy;
      }
      doc.bezierCurveTo(cx - (px - cx), cy - (py - cy), a[0], a[1], a[2], a[3]);
      px = a[0];
      py = a[1];
      cx = a[2];
      return cy = a[3];
    },
    s: function(doc, a) {
      if (px === null) {
        px = cx;
        py = cy;
      }
      doc.bezierCurveTo(cx - (px - cx), cy - (py - cy), cx + a[0], cy + a[1], cx + a[2], cy + a[3]);
      px = cx + a[0];
      py = cy + a[1];
      cx += a[2];
      return cy += a[3];
    },
    Q: function(doc, a) {
      px = a[0];
      py = a[1];
      cx = a[2];
      cy = a[3];
      return doc.quadraticCurveTo(a[0], a[1], cx, cy);
    },
    q: function(doc, a) {
      doc.quadraticCurveTo(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy);
      px = cx + a[0];
      py = cy + a[1];
      cx += a[2];
      return cy += a[3];
    },
    T: function(doc, a) {
      if (px === null) {
        px = cx;
        py = cy;
      } else {
        px = cx - (px - cx);
        py = cy - (py - cy);
      }
      doc.quadraticCurveTo(px, py, a[0], a[1]);
      px = cx - (px - cx);
      py = cy - (py - cy);
      cx = a[0];
      return cy = a[1];
    },
    t: function(doc, a) {
      if (px === null) {
        px = cx;
        py = cy;
      } else {
        px = cx - (px - cx);
        py = cy - (py - cy);
      }
      doc.quadraticCurveTo(px, py, cx + a[0], cy + a[1]);
      cx += a[0];
      return cy += a[1];
    },
    A: function(doc, a) {
      solveArc(doc, cx, cy, a);
      cx = a[5];
      return cy = a[6];
    },
    a: function(doc, a) {
      a[5] += cx;
      a[6] += cy;
      solveArc(doc, cx, cy, a);
      cx = a[5];
      return cy = a[6];
    },
    L: function(doc, a) {
      cx = a[0];
      cy = a[1];
      px = py = null;
      return doc.lineTo(cx, cy);
    },
    l: function(doc, a) {
      cx += a[0];
      cy += a[1];
      px = py = null;
      return doc.lineTo(cx, cy);
    },
    H: function(doc, a) {
      cx = a[0];
      px = py = null;
      return doc.lineTo(cx, cy);
    },
    h: function(doc, a) {
      cx += a[0];
      px = py = null;
      return doc.lineTo(cx, cy);
    },
    V: function(doc, a) {
      cy = a[0];
      px = py = null;
      return doc.lineTo(cx, cy);
    },
    v: function(doc, a) {
      cy += a[0];
      px = py = null;
      return doc.lineTo(cx, cy);
    },
    Z: function(doc) {
      doc.closePath();
      cx = sx;
      return cy = sy;
    },
    z: function(doc) {
      doc.closePath();
      cx = sx;
      return cy = sy;
    }
  };

  solveArc = function(doc, x, y, coords) {
    var bez, ex, ey, j, large, len, results, rot, rx, ry, seg, segs, sweep;
    rx = coords[0], ry = coords[1], rot = coords[2], large = coords[3], sweep = coords[4], ex = coords[5], ey = coords[6];
    segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);
    results = [];
    for (j = 0, len = segs.length; j < len; j++) {
      seg = segs[j];
      bez = segmentToBezier.apply(null, seg);
      results.push(doc.bezierCurveTo.apply(doc, bez));
    }
    return results;
  };

  arcToSegments = function(x, y, rx, ry, large, sweep, rotateX, ox, oy) {
    var a00, a01, a10, a11, cos_th, d, i, j, pl, ref, result, segments, sfactor, sfactor_sq, sin_th, th, th0, th1, th2, th3, th_arc, x0, x1, xc, y0, y1, yc;
    th = rotateX * (Math.PI / 180);
    sin_th = Math.sin(th);
    cos_th = Math.cos(th);
    rx = Math.abs(rx);
    ry = Math.abs(ry);
    px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;
    py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;
    pl = (px * px) / (rx * rx) + (py * py) / (ry * ry);
    if (pl > 1) {
      pl = Math.sqrt(pl);
      rx *= pl;
      ry *= pl;
    }
    a00 = cos_th / rx;
    a01 = sin_th / rx;
    a10 = (-sin_th) / ry;
    a11 = cos_th / ry;
    x0 = a00 * ox + a01 * oy;
    y0 = a10 * ox + a11 * oy;
    x1 = a00 * x + a01 * y;
    y1 = a10 * x + a11 * y;
    d = (x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0);
    sfactor_sq = 1 / d - 0.25;
    if (sfactor_sq < 0) {
      sfactor_sq = 0;
    }
    sfactor = Math.sqrt(sfactor_sq);
    if (sweep === large) {
      sfactor = -sfactor;
    }
    xc = 0.5 * (x0 + x1) - sfactor * (y1 - y0);
    yc = 0.5 * (y0 + y1) + sfactor * (x1 - x0);
    th0 = Math.atan2(y0 - yc, x0 - xc);
    th1 = Math.atan2(y1 - yc, x1 - xc);
    th_arc = th1 - th0;
    if (th_arc < 0 && sweep === 1) {
      th_arc += 2 * Math.PI;
    } else if (th_arc > 0 && sweep === 0) {
      th_arc -= 2 * Math.PI;
    }
    segments = Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));
    result = [];
    for (i = j = 0, ref = segments; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      th2 = th0 + i * th_arc / segments;
      th3 = th0 + (i + 1) * th_arc / segments;
      result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];
    }
    return result;
  };

  segmentToBezier = function(cx, cy, th0, th1, rx, ry, sin_th, cos_th) {
    var a00, a01, a10, a11, t, th_half, x1, x2, x3, y1, y2, y3;
    a00 = cos_th * rx;
    a01 = -sin_th * ry;
    a10 = sin_th * rx;
    a11 = cos_th * ry;
    th_half = 0.5 * (th1 - th0);
    t = (8 / 3) * Math.sin(th_half * 0.5) * Math.sin(th_half * 0.5) / Math.sin(th_half);
    x1 = cx + Math.cos(th0) - t * Math.sin(th0);
    y1 = cy + Math.sin(th0) + t * Math.cos(th0);
    x3 = cx + Math.cos(th1);
    y3 = cy + Math.sin(th1);
    x2 = x3 + t * Math.sin(th1);
    y2 = y3 - t * Math.cos(th1);
    return [a00 * x1 + a01 * y1, a10 * x1 + a11 * y1, a00 * x2 + a01 * y2, a10 * x2 + a11 * y2, a00 * x3 + a01 * y3, a10 * x3 + a11 * y3];
  };

  return SVGPath;

})();

module.exports = SVGPath;


},{}],61:[function(require,module,exports){
(function (Buffer){

/*
PDFReference - represents a reference to another object in the PDF object heirarchy
By Devon Govett
 */
var PDFObject, PDFReference, stream, zlib,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

zlib = require('zlib');

stream = require('stream');

PDFReference = (function(superClass) {
  extend(PDFReference, superClass);

  function PDFReference(document, id, data) {
    this.document = document;
    this.id = id;
    this.data = data != null ? data : {};
    this.finalize = bind(this.finalize, this);
    PDFReference.__super__.constructor.call(this, {
      decodeStrings: false
    });
    this.gen = 0;
    this.deflate = null;
    this.compress = this.document.compress && !this.data.Filter;
    this.uncompressedLength = 0;
    this.chunks = [];
  }

  PDFReference.prototype.initDeflate = function() {
    this.data.Filter = 'FlateDecode';
    this.deflate = zlib.createDeflate();
    this.deflate.on('data', (function(_this) {
      return function(chunk) {
        _this.chunks.push(chunk);
        return _this.data.Length += chunk.length;
      };
    })(this));
    return this.deflate.on('end', this.finalize);
  };

  PDFReference.prototype._write = function(chunk, encoding, callback) {
    var base;
    if (!Buffer.isBuffer(chunk)) {
      chunk = new Buffer(chunk + '\n', 'binary');
    }
    this.uncompressedLength += chunk.length;
    if ((base = this.data).Length == null) {
      base.Length = 0;
    }
    if (this.compress) {
      if (!this.deflate) {
        this.initDeflate();
      }
      this.deflate.write(chunk);
    } else {
      this.chunks.push(chunk);
      this.data.Length += chunk.length;
    }
    return callback();
  };

  PDFReference.prototype.end = function(chunk) {
    PDFReference.__super__.end.apply(this, arguments);
    if (this.deflate) {
      return this.deflate.end();
    } else {
      return this.finalize();
    }
  };

  PDFReference.prototype.finalize = function() {
    var chunk, i, len, ref;
    this.offset = this.document._offset;
    this.document._write(this.id + " " + this.gen + " obj");
    this.document._write(PDFObject.convert(this.data));
    if (this.chunks.length) {
      this.document._write('stream');
      ref = this.chunks;
      for (i = 0, len = ref.length; i < len; i++) {
        chunk = ref[i];
        this.document._write(chunk);
      }
      this.chunks.length = 0;
      this.document._write('\nendstream');
    }
    this.document._write('endobj');
    return this.document._refEnd(this);
  };

  PDFReference.prototype.toString = function() {
    return this.id + " " + this.gen + " R";
  };

  return PDFReference;

})(stream.Writable);

module.exports = PDFReference;

PDFObject = require('./object');


}).call(this,require("buffer").Buffer)
},{"./object":58,"buffer":17,"stream":37,"zlib":16}],62:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var DFont, TTFFont, TrueTypeCollection, WOFF2Font, WOFFFont, fs, r;

  r = require('restructure');

  fs = require('fs');

  TTFFont = require('./src/TTFFont');

  WOFFFont = require('./src/WOFFFont');

  WOFF2Font = require('./src/WOFF2Font');

  TrueTypeCollection = require('./src/TrueTypeCollection');

  DFont = require('./src/DFont');

  exports.TTFFont = TTFFont;

  exports.WOFFFont = WOFFFont;

  exports.WOFF2Font = WOFF2Font;

  exports.TrueTypeCollection = TrueTypeCollection;

  exports.DFont = DFont;

  exports.openSync = function(filename, postscriptName) {
    var buffer;
    buffer = fs.readFileSync(filename);
    return exports.create(buffer, postscriptName);
  };

  exports.open = function(filename, postscriptName, callback) {
    if (typeof postscriptName === 'function') {
      callback = postscriptName;
      postscriptName = null;
    }
    fs.readFile(filename, function(err, buffer) {
      var e, font;
      if (err) {
        return callback(err);
      }
      try {
        font = exports.create(buffer, postscriptName);
      } catch (_error) {
        e = _error;
        return callback(e);
      }
      return callback(null, font);
    });
  };

  exports.create = function(buffer, postscriptName) {
    var dfont, sig, stream, ttc;
    stream = new r.DecodeStream(buffer);
    sig = stream.readString(4);
    stream.pos = 0;
    switch (sig) {
      case 'ttcf':
        ttc = new TrueTypeCollection(stream);
        if (postscriptName) {
          return ttc.getFont(postscriptName);
        }
        return ttc;
      case 'wOFF':
        return new WOFFFont(stream);
      case 'wOF2':
        return new WOFF2Font(stream);
      case 'true':
      case 'OTTO':
      case String.fromCharCode(0, 1, 0, 0):
        return new TTFFont(stream);
      default:
        if (DFont.isDFont(stream)) {
          dfont = new DFont(stream);
          if (postscriptName) {
            return dfont.getFont(postscriptName);
          }
          return dfont;
        }
        throw new Error('Unknown font format');
    }
  };

}).call(this);

},{"./src/DFont":127,"./src/TTFFont":129,"./src/TrueTypeCollection":130,"./src/WOFF2Font":131,"./src/WOFFFont":132,"fs":1,"restructure":89}],63:[function(require,module,exports){
(function (process,__dirname){
function e(a){throw a;}var j=void 0,n=!0,p=null,r=!1;function aa(){return function(){}}function ca(a){return function(){return a}}var t,u={};u.readBinary=require("../src/read_memory");u||(u=eval("(function() { try { return Module || {} } catch(e) { return {} } })()"));var da={},w;for(w in u)u.hasOwnProperty(w)&&(da[w]=u[w]);var ea="object"===typeof process&&"function"===typeof require,fa="object"===typeof window,ga="function"===typeof importScripts,ha=!fa&&!ea&&!ga;
if(ea){u.print||(u.print=function(a){process.stdout.write(a+"\n")});u.printErr||(u.printErr=function(a){process.stderr.write(a+"\n")});var ia=require("fs"),ja=require("path");u.read=function(a,b){var a=ja.normalize(a),c=ia.readFileSync(a);!c&&a!=ja.resolve(a)&&(a=path.join(__dirname,"..","src",a),c=ia.readFileSync(a));c&&!b&&(c=c.toString());return c};u.readBinary=function(a){return u.read(a,n)};u.load=function(a){ka(read(a))};u.thisProgram=process.argv[1].replace(/\\/g,"/");u.arguments=process.argv.slice(2);
"undefined"!==typeof module&&(module.exports=u);process.on("uncaughtException",function(a){a instanceof la||e(a)})}else ha?(u.print||(u.print=print),"undefined"!=typeof printErr&&(u.printErr=printErr),u.read="undefined"!=typeof read?read:function(){e("no read() available (jsc?)")},u.readBinary=function(a){if("function"===typeof readbuffer)return new Uint8Array(readbuffer(a));a=read(a,"binary");x("object"===typeof a);return a},"undefined"!=typeof scriptArgs?u.arguments=scriptArgs:"undefined"!=typeof arguments&&
(u.arguments=arguments),this.Module=u,eval("if (typeof gc === 'function' && gc.toString().indexOf('[native code]') > 0) var gc = undefined")):fa||ga?(u.read=function(a){var b=new XMLHttpRequest;b.open("GET",a,r);b.send(p);return b.responseText},"undefined"!=typeof arguments&&(u.arguments=arguments),"undefined"!==typeof console?(u.print||(u.print=function(a){console.log(a)}),u.printErr||(u.printErr=function(a){console.log(a)})):u.print||(u.print=aa()),fa?window.Module=u:u.load=importScripts):e("Unknown runtime environment. Where are we?");
function ka(a){eval.call(p,a)}!u.load&&u.read&&(u.load=function(a){ka(u.read(a))});u.print||(u.print=aa());u.printErr||(u.printErr=u.print);u.arguments||(u.arguments=[]);u.thisProgram||(u.thisProgram="./this.program");u.print=u.print;u.N=u.printErr;u.preRun=[];u.postRun=[];for(w in da)da.hasOwnProperty(w)&&(u[w]=da[w]);
var A={rb:function(a){ma=a},gb:function(){return ma},ba:function(){return z},ra:function(a){z=a},Ka:function(a){switch(a){case "i1":case "i8":return 1;case "i16":return 2;case "i32":return 4;case "i64":return 8;case "float":return 4;case "double":return 8;default:return"*"===a[a.length-1]?A.ea:"i"===a[0]?(a=parseInt(a.substr(1)),x(0===a%8),a/8):0}},Ja:function(a){return Math.max(A.Ka(a),A.ea)},zb:16,Mb:function(a,b,c){return!c&&("i64"==a||"double"==a)?8:!a?Math.min(b,8):Math.min(b||(a?A.Ja(a):0),
A.ea)},R:function(a,b,c){return c&&c.length?(c.splice||(c=Array.prototype.slice.call(c)),c.splice(0,0,b),u["dynCall_"+a].apply(p,c)):u["dynCall_"+a].call(p,b)},$:[],Xa:function(a){for(var b=0;b<A.$.length;b++)if(!A.$[b])return A.$[b]=a,2*(1+b);e("Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.")},qb:function(a){A.$[(a-2)/2]=p},Nb:function(a,b){A.ia||(A.ia={});var c=A.ia[a];if(c)return c;for(var c=[],d=0;d<b;d++)c.push(String.fromCharCode(36)+d);d=B(a);
'"'===d[0]&&(d.indexOf('"',1)===d.length-1?d=d.substr(1,d.length-2):D("invalid EM_ASM input |"+d+"|. Please use EM_ASM(..code..) (no quotes) or EM_ASM({ ..code($0).. }, input) (to input values)"));try{var f=eval("(function(Module, FS) { return function("+c.join(",")+"){ "+d+" } })")(u,"undefined"!==typeof G?G:p)}catch(g){u.N("error in executing inline EM_ASM code: "+g+" on: \n\n"+d+"\n\nwith args |"+c+"| (make sure to use the right one out of EM_ASM, EM_ASM_ARGS, etc.)"),e(g)}return A.ia[a]=f},W:function(a){A.W.pa||
(A.W.pa={});A.W.pa[a]||(A.W.pa[a]=1,u.N(a))},la:{},Pb:function(a,b){x(b);A.la[b]||(A.la[b]={});var c=A.la[b];c[a]||(c[a]=function(){return A.R(b,a,arguments)});return c[a]},za:function(){var a=[],b=0;this.mb=function(c){c&=255;if(0==a.length){if(0==(c&128))return String.fromCharCode(c);a.push(c);b=192==(c&224)?1:224==(c&240)?2:3;return""}if(b&&(a.push(c),b--,0<b))return"";var c=a[0],d=a[1],f=a[2],g=a[3];2==a.length?c=String.fromCharCode((c&31)<<6|d&63):3==a.length?c=String.fromCharCode((c&15)<<12|
(d&63)<<6|f&63):(c=(c&7)<<18|(d&63)<<12|(f&63)<<6|g&63,c=String.fromCharCode(((c-65536)/1024|0)+55296,(c-65536)%1024+56320));a.length=0;return c};this.nb=function(a){for(var a=unescape(encodeURIComponent(a)),b=[],f=0;f<a.length;f++)b.push(a.charCodeAt(f));return b}},Ob:function(){e("You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work")},aa:function(a){var b=z;z=z+a|0;z=z+15&-16;return b},Qa:function(a){var b=na;na=na+a|0;na=na+
15&-16;return b},S:function(a){var b=H;H=H+a|0;H=H+15&-16;H>=oa&&D("Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value "+oa+", (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.");return b},X:function(a,b){return Math.ceil(a/(b?b:16))*(b?b:16)},jb:function(a,b,c){return c?+(a>>>0)+4294967296*+(b>>>0):+(a>>>0)+4294967296*+(b|0)},yb:8,
ea:4,Db:0};u.Runtime=A;A.addFunction=A.Xa;A.removeFunction=A.qb;var pa=r,qa,ra,ma;function x(a,b){a||D("Assertion failed: "+b)}function sa(a){var b=u["_"+a];if(!b)try{b=eval("_"+a)}catch(c){}x(b,"Cannot call unknown function "+a+" (perhaps LLVM optimizations or closure removed it?)");return b}var ta,ua;
(function(){function a(a){a=a.toString().match(f).slice(1);return{arguments:a[0],body:a[1],returnValue:a[2]}}var b=0,c={stackSave:function(){b=A.ba()},stackRestore:function(){A.ra(b)},arrayToC:function(a){var c=A.aa(a.length);va(a,c);return c},stringToC:function(a){var c=0;a!==p&&(a!==j&&0!==a)&&(c=A.aa((a.length<<2)+1),wa(a,c));return c}},d={string:c.stringToC,array:c.arrayToC};ua=function(a,f,g,h){var a=sa(a),q=[];if(h)for(var y=0;y<h.length;y++){var E=d[g[y]];E?(0===b&&(b=A.ba()),q[y]=E(h[y])):
q[y]=h[y]}g=a.apply(p,q);"string"===f&&(g=B(g));0!==b&&c.stackRestore();return g};var f=/^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/,g={},h;for(h in c)c.hasOwnProperty(h)&&(g[h]=a(c[h]));ta=function(c,b,d){var d=d||[],f=sa(c),c=d.every(function(a){return"number"===a}),h="string"!==b;if(h&&c)return f;var y=d.map(function(a,c){return"$"+c}),b="(function("+y.join(",")+") {",E=d.length;if(!c)for(var b=b+(g.stackSave.body+";"),F=0;F<E;F++){var R=y[F],C=d[F];"number"!==C&&(C=
g[C+"ToC"],b+="var "+C.arguments+" = "+R+";",b+=C.body+";",b+=R+"="+C.returnValue+";")}d=a(function(){return f}).returnValue;b+="var ret = "+d+"("+y.join(",")+");";h||(d=a(function(){return B}).returnValue,b+="ret = "+d+"(ret);");c||(b+=g.stackRestore.body+";");return eval(b+"return ret})")}})();u.cwrap=ta;u.ccall=ua;
function xa(a,b,c){c=c||"i8";"*"===c.charAt(c.length-1)&&(c="i32");switch(c){case "i1":I[a>>0]=b;break;case "i8":I[a>>0]=b;break;case "i16":ya[a>>1]=b;break;case "i32":J[a>>2]=b;break;case "i64":ra=[b>>>0,(qa=b,1<=+za(qa)?0<qa?(Aa(+Ba(qa/4294967296),4294967295)|0)>>>0:~~+Ca((qa-+(~~qa>>>0))/4294967296)>>>0:0)];J[a>>2]=ra[0];J[a+4>>2]=ra[1];break;case "float":Da[a>>2]=b;break;case "double":Ea[a>>3]=b;break;default:D("invalid type for setValue: "+c)}}u.setValue=xa;
function Fa(a,b){b=b||"i8";"*"===b.charAt(b.length-1)&&(b="i32");switch(b){case "i1":return I[a>>0];case "i8":return I[a>>0];case "i16":return ya[a>>1];case "i32":return J[a>>2];case "i64":return J[a>>2];case "float":return Da[a>>2];case "double":return Ea[a>>3];default:D("invalid type for setValue: "+b)}return p}u.getValue=Fa;var Ga=0,Ha=1,K=2,Ia=4;u.ALLOC_NORMAL=Ga;u.ALLOC_STACK=Ha;u.ALLOC_STATIC=K;u.ALLOC_DYNAMIC=3;u.ALLOC_NONE=Ia;
function L(a,b,c,d){var f,g;"number"===typeof a?(f=n,g=a):(f=r,g=a.length);var h="string"===typeof b?b:p,c=c==Ia?d:[M,A.aa,A.Qa,A.S][c===j?K:c](Math.max(g,h?1:b.length));if(f){d=c;x(0==(c&3));for(a=c+(g&-4);d<a;d+=4)J[d>>2]=0;for(a=c+g;d<a;)I[d++>>0]=0;return c}if("i8"===h)return a.subarray||a.slice?N.set(a,c):N.set(new Uint8Array(a),c),c;for(var d=0,i,k;d<g;){var m=a[d];"function"===typeof m&&(m=A.Qb(m));f=h||b[d];0===f?d++:("i64"==f&&(f="i32"),xa(c+d,m,f),k!==f&&(i=A.Ka(f),k=f),d+=i)}return c}
u.allocate=L;function B(a,b){for(var c=r,d,f=0;;){d=N[a+f>>0];if(128<=d)c=n;else if(0==d&&!b)break;f++;if(b&&f==b)break}b||(b=f);var g="";if(!c){for(;0<b;)d=String.fromCharCode.apply(String,N.subarray(a,a+Math.min(b,1024))),g=g?g+d:d,a+=1024,b-=1024;return g}c=new A.za;for(f=0;f<b;f++)d=N[a+f>>0],g+=c.mb(d);return g}u.Pointer_stringify=B;u.UTF16ToString=function(a){for(var b=0,c="";;){var d=ya[a+2*b>>1];if(0==d)return c;++b;c+=String.fromCharCode(d)}};
u.stringToUTF16=function(a,b){for(var c=0;c<a.length;++c)ya[b+2*c>>1]=a.charCodeAt(c);ya[b+2*a.length>>1]=0};u.UTF32ToString=function(a){for(var b=0,c="";;){var d=J[a+4*b>>2];if(0==d)return c;++b;65536<=d?(d-=65536,c+=String.fromCharCode(55296|d>>10,56320|d&1023)):c+=String.fromCharCode(d)}};u.stringToUTF32=function(a,b){for(var c=0,d=0;d<a.length;++d){var f=a.charCodeAt(d);if(55296<=f&&57343>=f)var g=a.charCodeAt(++d),f=65536+((f&1023)<<10)|g&1023;J[b+4*c>>2]=f;++c}J[b+4*c>>2]=0};
function Ja(a){function b(c,d,g){var d=d||Infinity,f="",h=[],s;if("N"===a[i]){i++;"K"===a[i]&&i++;for(s=[];"E"!==a[i];)if("S"===a[i]){i++;var q=a.indexOf("_",i);s.push(m[a.substring(i,q)||0]||"?");i=q+1}else if("C"===a[i])s.push(s[s.length-1]),i+=2;else{var q=parseInt(a.substr(i)),l=q.toString().length;if(!q||!l){i--;break}var ba=a.substr(i+l,q);s.push(ba);m.push(ba);i+=l+q}i++;s=s.join("::");d--;if(0===d)return c?[s]:s}else if(("K"===a[i]||v&&"L"===a[i])&&i++,q=parseInt(a.substr(i)))l=q.toString().length,
s=a.substr(i+l,q),i+=l+q;v=r;"I"===a[i]?(i++,q=b(n),l=b(n,1,n),f+=l[0]+" "+s+"<"+q.join(", ")+">"):f=s;a:for(;i<a.length&&0<d--;)if(s=a[i++],s in k)h.push(k[s]);else switch(s){case "P":h.push(b(n,1,n)[0]+"*");break;case "R":h.push(b(n,1,n)[0]+"&");break;case "L":i++;q=a.indexOf("E",i)-i;h.push(a.substr(i,q));i+=q+2;break;case "A":q=parseInt(a.substr(i));i+=q.toString().length;"_"!==a[i]&&e("?");i++;h.push(b(n,1,n)[0]+" ["+q+"]");break;case "E":break a;default:f+="?"+s;break a}!g&&(1===h.length&&"void"===
h[0])&&(h=[]);return c?(f&&h.push(f+"?"),h):f+("("+h.join(", ")+")")}var c=!!u.___cxa_demangle;if(c)try{var d=M(a.length);wa(a.substr(1),d);var f=M(4),g=u.___cxa_demangle(d,0,0,f);if(0===Fa(f,"i32")&&g)return B(g)}catch(h){}finally{d&&Ka(d),f&&Ka(f),g&&Ka(g)}var i=3,k={v:"void",b:"bool",c:"char",s:"short",i:"int",l:"long",f:"float",d:"double",w:"wchar_t",a:"signed char",h:"unsigned char",t:"unsigned short",j:"unsigned int",m:"unsigned long",x:"long long",y:"unsigned long long",z:"..."},m=[],v=n,d=
a;try{if("Object._main"==a||"_main"==a)return"main()";"number"===typeof a&&(a=B(a));if("_"!==a[0]||"_"!==a[1]||"Z"!==a[2])return a;switch(a[3]){case "n":return"operator new()";case "d":return"operator delete()"}d=b()}catch(q){d+="?"}0<=d.indexOf("?")&&!c&&A.W("warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");return d}
function La(){var a;a:{a=Error();if(!a.stack){try{e(Error(0))}catch(b){a=b}if(!a.stack){a="(no stack trace available)";break a}}a=a.stack.toString()}return a.replace(/__Z[\w\d_]+/g,function(a){var b=Ja(a);return a===b?a:a+" ["+b+"]"})}u.stackTrace=function(){return La()};for(var I,N,ya,Ma,J,Na,Da,Ea,Oa=0,na=0,Pa=0,z=0,Qa=0,Ra=0,H=0,Sa=u.TOTAL_STACK||5242880,oa=u.TOTAL_MEMORY||318767104,O=65536;O<oa||O<2*Sa;)O=16777216>O?2*O:O+16777216;
O!==oa&&(u.N("increasing TOTAL_MEMORY to "+O+" to be more reasonable"),oa=O);x("undefined"!==typeof Int32Array&&"undefined"!==typeof Float64Array&&!!(new Int32Array(1)).subarray&&!!(new Int32Array(1)).set,"JS engine does not provide full typed array support");var Q=new ArrayBuffer(oa);I=new Int8Array(Q);ya=new Int16Array(Q);J=new Int32Array(Q);N=new Uint8Array(Q);Ma=new Uint16Array(Q);Na=new Uint32Array(Q);Da=new Float32Array(Q);Ea=new Float64Array(Q);J[0]=255;x(255===N[0]&&0===N[3],"Typed arrays 2 must be run on a little-endian system");
u.HEAP=j;u.HEAP8=I;u.HEAP16=ya;u.HEAP32=J;u.HEAPU8=N;u.HEAPU16=Ma;u.HEAPU32=Na;u.HEAPF32=Da;u.HEAPF64=Ea;function Ta(a){for(;0<a.length;){var b=a.shift();if("function"==typeof b)b();else{var c=b.Ia;"number"===typeof c?b.Y===j?A.R("v",c):A.R("vi",c,[b.Y]):c(b.Y===j?p:b.Y)}}}var Ua=[],Va=[],Wa=[],Xa=[],Ya=[],Za=r;function $a(a){Ua.unshift(a)}u.addOnPreRun=u.Ib=$a;u.addOnInit=u.Fb=function(a){Va.unshift(a)};u.addOnPreMain=u.Hb=function(a){Wa.unshift(a)};u.addOnExit=u.Eb=function(a){Xa.unshift(a)};
function ab(a){Ya.unshift(a)}u.addOnPostRun=u.Gb=ab;function bb(a,b,c){a=(new A.za).nb(a);c&&(a.length=c);b||a.push(0);return a}u.intArrayFromString=bb;function cb(a){for(var b=[],c=0;c<a.length;c++){var d=a[c];255<d&&(d&=255);b.push(String.fromCharCode(d))}return b.join("")}u.intArrayToString=cb;function wa(a,b,c){a=bb(a,c);for(c=0;c<a.length;)I[b+c>>0]=a[c],c+=1}u.writeStringToMemory=wa;function va(a,b){for(var c=0;c<a.length;c++)I[b+c>>0]=a[c]}u.writeArrayToMemory=va;
function db(a,b,c){for(var d=0;d<a.length;d++)I[b+d>>0]=a.charCodeAt(d);c||(I[b+a.length>>0]=0)}u.writeAsciiToMemory=db;function eb(a,b){return 0<=a?a:32>=b?2*Math.abs(1<<b-1)+a:Math.pow(2,b)+a}function fb(a,b){if(0>=a)return a;var c=32>=b?Math.abs(1<<b-1):Math.pow(2,b-1);if(a>=c&&(32>=b||a>c))a=-2*c+a;return a}if(!Math.imul||-5!==Math.imul(4294967295,5))Math.imul=function(a,b){var c=a&65535,d=b&65535;return c*d+((a>>>16)*d+c*(b>>>16)<<16)|0};Math.Rb=Math.imul;
var za=Math.abs,Ca=Math.ceil,Ba=Math.floor,Aa=Math.min,gb=0,hb=p,ib=p;function jb(){gb++;u.monitorRunDependencies&&u.monitorRunDependencies(gb)}u.addRunDependency=jb;function kb(){gb--;u.monitorRunDependencies&&u.monitorRunDependencies(gb);if(0==gb&&(hb!==p&&(clearInterval(hb),hb=p),ib)){var a=ib;ib=p;a()}}u.removeRunDependency=kb;u.preloadedImages={};u.preloadedAudios={};var S=p,Oa=8,na=Oa+A.X(274267);Va.push({Ia:function(){lb()}});var S="all.js.mem",T=A.X(L(12,"i8",K),8);x(0==T%8);
function mb(a,b){Xa.unshift({Ia:a,Y:b})}u._i64Subtract=nb;function ob(){return!!ob.ta}var pb=0,qb=[],U={};function rb(a){if(!a||U[a])return a;for(var b in U)if(U[b].Aa===a)return b;return a}
function sb(){var a=pb;if(!a)return(V.setTempRet0(0),0)|0;var b=U[a],c=b.type;if(!c)return(V.setTempRet0(0),a)|0;var d=Array.prototype.slice.call(arguments);u.___cxa_is_pointer_type(c);sb.buffer||(sb.buffer=M(4));J[sb.buffer>>2]=a;for(var a=sb.buffer,f=0;f<d.length;f++)if(d[f]&&u.___cxa_can_catch(d[f],c,a))return a=J[a>>2],b.Aa=a,(V.setTempRet0(d[f]),a)|0;a=J[a>>2];return(V.setTempRet0(c),a)|0}u._memset=tb;
var ub=Ca,vb=9,wb=22,xb=34,yb={"0":"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",
22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",
42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",
63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",
80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",
98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",
115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"},zb=0;function W(a){return J[zb>>2]=a}function Ab(a,b,c){if(a in yb){if(yb[a].length>c-1)return W(xb);db(yb[a],b);return 0}return W(wb)}function Bb(a){Bb.buffer||(Bb.buffer=M(256));Ab(a,Bb.buffer,256);return Bb.buffer}function Cb(a){return 0===a%4&&(0!==a%100||0===a%400)}
function Db(a,b){for(var c=0,d=0;d<=b;c+=a[d++]);return c}var Eb=[31,29,31,30,31,30,31,31,30,31,30,31],Fb=[31,28,31,30,31,30,31,31,30,31,30,31];function Gb(a,b){for(var c=new Date(a.getTime());0<b;){var d=c.getMonth(),f=(Cb(c.getFullYear())?Eb:Fb)[d];if(b>f-c.getDate())b-=f-c.getDate()+1,c.setDate(1),11>d?c.setMonth(d+1):(c.setMonth(0),c.setFullYear(c.getFullYear()+1));else{c.setDate(c.getDate()+b);break}}return c}
function Hb(a,b,c,d){function f(a,b,c){for(a="number"===typeof a?a.toString():a||"";a.length<b;)a=c[0]+a;return a}function g(a,b){return f(a,b,"0")}function h(a,b){var c;if(0===(c=0>a.getFullYear()-b.getFullYear()?-1:0<a.getFullYear()-b.getFullYear()?1:0))if(0===(c=0>a.getMonth()-b.getMonth()?-1:0<a.getMonth()-b.getMonth()?1:0))c=0>a.getDate()-b.getDate()?-1:0<a.getDate()-b.getDate()?1:0;return c}function i(a){switch(a.getDay()){case 0:return new Date(a.getFullYear()-1,11,29);case 1:return a;case 2:return new Date(a.getFullYear(),
0,3);case 3:return new Date(a.getFullYear(),0,2);case 4:return new Date(a.getFullYear(),0,1);case 5:return new Date(a.getFullYear()-1,11,31);case 6:return new Date(a.getFullYear()-1,11,30)}}function k(a){var a=Gb(new Date(a.q+1900,0,1),a.ca),b=i(new Date(a.getFullYear()+1,0,4));return 0>=h(i(new Date(a.getFullYear(),0,4)),a)?0>=h(b,a)?a.getFullYear()+1:a.getFullYear():a.getFullYear()-1}var m=J[d+40>>2],d={vb:J[d>>2],ub:J[d+4>>2],P:J[d+8>>2],O:J[d+12>>2],K:J[d+16>>2],q:J[d+20>>2],Ra:J[d+24>>2],ca:J[d+
28>>2],Xb:J[d+32>>2],tb:J[d+36>>2],wb:m?B(m):""},c=B(c),m={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S"},v;for(v in m)c=c.replace(RegExp(v,"g"),m[v]);var q="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),y="January February March April May June July August September October November December".split(" "),m={"%a":function(a){return q[a.Ra].substring(0,3)},"%A":function(a){return q[a.Ra]},
"%b":function(a){return y[a.K].substring(0,3)},"%B":function(a){return y[a.K]},"%C":function(a){return g((a.q+1900)/100|0,2)},"%d":function(a){return g(a.O,2)},"%e":function(a){return f(a.O,2," ")},"%g":function(a){return k(a).toString().substring(2)},"%G":function(a){return k(a)},"%H":function(a){return g(a.P,2)},"%I":function(a){return g(13>a.P?a.P:a.P-12,2)},"%j":function(a){return g(a.O+Db(Cb(a.q+1900)?Eb:Fb,a.K-1),3)},"%m":function(a){return g(a.K+1,2)},"%M":function(a){return g(a.ub,2)},"%n":ca("\n"),
"%p":function(a){return 0<a.P&&13>a.P?"AM":"PM"},"%S":function(a){return g(a.vb,2)},"%t":ca("\t"),"%u":function(a){return(new Date(a.q+1900,a.K+1,a.O,0,0,0,0)).getDay()||7},"%U":function(a){var b=new Date(a.q+1900,0,1),c=0===b.getDay()?b:Gb(b,7-b.getDay()),a=new Date(a.q+1900,a.K,a.O);return 0>h(c,a)?g(Math.ceil((31-c.getDate()+(Db(Cb(a.getFullYear())?Eb:Fb,a.getMonth()-1)-31)+a.getDate())/7),2):0===h(c,b)?"01":"00"},"%V":function(a){var b=i(new Date(a.q+1900,0,4)),c=i(new Date(a.q+1901,0,4)),d=Gb(new Date(a.q+
1900,0,1),a.ca);return 0>h(d,b)?"53":0>=h(c,d)?"01":g(Math.ceil((b.getFullYear()<a.q+1900?a.ca+32-b.getDate():a.ca+1-b.getDate())/7),2)},"%w":function(a){return(new Date(a.q+1900,a.K+1,a.O,0,0,0,0)).getDay()},"%W":function(a){var b=new Date(a.q,0,1),c=1===b.getDay()?b:Gb(b,0===b.getDay()?1:7-b.getDay()+1),a=new Date(a.q+1900,a.K,a.O);return 0>h(c,a)?g(Math.ceil((31-c.getDate()+(Db(Cb(a.getFullYear())?Eb:Fb,a.getMonth()-1)-31)+a.getDate())/7),2):0===h(c,b)?"01":"00"},"%y":function(a){return(a.q+1900).toString().substring(2)},
"%Y":function(a){return a.q+1900},"%z":function(a){var a=a.tb,b=0<=a,a=Math.abs(a)/60;return(b?"+":"-")+String("0000"+(100*(a/60)+a%60)).slice(-4)},"%Z":function(a){return a.wb},"%%":ca("%")};for(v in m)0<=c.indexOf(v)&&(c=c.replace(RegExp(v,"g"),m[v](d)));v=bb(c,r);if(v.length>b)return 0;va(v,a);return v.length-1}var G=j;function Ib(a,b,c){a=G.ma(a);if(!a)return W(vb),-1;try{return G.write(a,I,b,c)}catch(d){return G.na(d),-1}}function Jb(a){a=G.T(a);return!a?-1:a.bb}
function Kb(a,b,c,d){c*=b;if(0==c)return 0;var f=Jb(d),a=Ib(f,a,c);if(-1==a){if(b=G.T(d))b.error=n;return 0}return a/b|0}u._strlen=Lb;function Mb(a){return 0>a||0===a&&-Infinity===1/a}
function Nb(a,b){function c(a){var c;"double"===a?c=(J[T>>2]=J[b+f>>2],J[T+4>>2]=J[b+(f+4)>>2],+Ea[T>>3]):"i64"==a?c=[J[b+f>>2],J[b+(f+4)>>2]]:(a="i32",c=J[b+f>>2]);f+=A.Ja(a);return c}for(var d=a,f=0,g=[],h,i;;){var k=d;h=I[d>>0];if(0===h)break;i=I[d+1>>0];if(37==h){var m=r,v=r,q=r,y=r,E=r;a:for(;;){switch(i){case 43:m=n;break;case 45:v=n;break;case 35:q=n;break;case 48:if(y)break a;else{y=n;break}case 32:E=n;break;default:break a}d++;i=I[d+1>>0]}var F=0;if(42==i)F=c("i32"),d++,i=I[d+1>>0];else for(;48<=
i&&57>=i;)F=10*F+(i-48),d++,i=I[d+1>>0];var R=r,C=-1;if(46==i){C=0;R=n;d++;i=I[d+1>>0];if(42==i)C=c("i32"),d++;else for(;;){i=I[d+1>>0];if(48>i||57<i)break;C=10*C+(i-48);d++}i=I[d+1>>0]}0>C&&(C=6,R=r);var s;switch(String.fromCharCode(i)){case "h":i=I[d+2>>0];104==i?(d++,s=1):s=2;break;case "l":i=I[d+2>>0];108==i?(d++,s=8):s=4;break;case "L":case "q":case "j":s=8;break;case "z":case "t":case "I":s=4;break;default:s=p}s&&d++;i=I[d+1>>0];switch(String.fromCharCode(i)){case "d":case "i":case "u":case "o":case "x":case "X":case "p":k=
100==i||105==i;s=s||4;var P=h=c("i"+8*s),l;8==s&&(h=A.jb(h[0],h[1],117==i));4>=s&&(h=(k?fb:eb)(h&Math.pow(256,s)-1,8*s));var ba=Math.abs(h),k="";if(100==i||105==i)l=8==s&&Ob?Ob.stringify(P[0],P[1],p):fb(h,8*s).toString(10);else if(117==i)l=8==s&&Ob?Ob.stringify(P[0],P[1],n):eb(h,8*s).toString(10),h=Math.abs(h);else if(111==i)l=(q?"0":"")+ba.toString(8);else if(120==i||88==i){k=q&&0!=h?"0x":"";if(8==s&&Ob)if(P[1]){l=(P[1]>>>0).toString(16);for(q=(P[0]>>>0).toString(16);8>q.length;)q="0"+q;l+=q}else l=
(P[0]>>>0).toString(16);else if(0>h){h=-h;l=(ba-1).toString(16);P=[];for(q=0;q<l.length;q++)P.push((15-parseInt(l[q],16)).toString(16));for(l=P.join("");l.length<2*s;)l="f"+l}else l=ba.toString(16);88==i&&(k=k.toUpperCase(),l=l.toUpperCase())}else 112==i&&(0===ba?l="(nil)":(k="0x",l=ba.toString(16)));if(R)for(;l.length<C;)l="0"+l;0<=h&&(m?k="+"+k:E&&(k=" "+k));"-"==l.charAt(0)&&(k="-"+k,l=l.substr(1));for(;k.length+l.length<F;)v?l+=" ":y?l="0"+l:k=" "+k;l=k+l;l.split("").forEach(function(a){g.push(a.charCodeAt(0))});
break;case "f":case "F":case "e":case "E":case "g":case "G":h=c("double");if(isNaN(h))l="nan",y=r;else if(isFinite(h)){R=r;s=Math.min(C,20);if(103==i||71==i)R=n,C=C||1,s=parseInt(h.toExponential(s).split("e")[1],10),C>s&&-4<=s?(i=(103==i?"f":"F").charCodeAt(0),C-=s+1):(i=(103==i?"e":"E").charCodeAt(0),C--),s=Math.min(C,20);if(101==i||69==i)l=h.toExponential(s),/[eE][-+]\d$/.test(l)&&(l=l.slice(0,-1)+"0"+l.slice(-1));else if(102==i||70==i)l=h.toFixed(s),0===h&&Mb(h)&&(l="-"+l);k=l.split("e");if(R&&
!q)for(;1<k[0].length&&-1!=k[0].indexOf(".")&&("0"==k[0].slice(-1)||"."==k[0].slice(-1));)k[0]=k[0].slice(0,-1);else for(q&&-1==l.indexOf(".")&&(k[0]+=".");C>s++;)k[0]+="0";l=k[0]+(1<k.length?"e"+k[1]:"");69==i&&(l=l.toUpperCase());0<=h&&(m?l="+"+l:E&&(l=" "+l))}else l=(0>h?"-":"")+"inf",y=r;for(;l.length<F;)l=v?l+" ":y&&("-"==l[0]||"+"==l[0])?l[0]+"0"+l.slice(1):(y?"0":" ")+l;97>i&&(l=l.toUpperCase());l.split("").forEach(function(a){g.push(a.charCodeAt(0))});break;case "s":y=(m=c("i8*"))?Lb(m):6;
R&&(y=Math.min(y,C));if(!v)for(;y<F--;)g.push(32);if(m)for(q=0;q<y;q++)g.push(N[m++>>0]);else g=g.concat(bb("(null)".substr(0,y),n));if(v)for(;y<F--;)g.push(32);break;case "c":for(v&&g.push(c("i8"));0<--F;)g.push(32);v||g.push(c("i8"));break;case "n":v=c("i32*");J[v>>2]=g.length;break;case "%":g.push(h);break;default:for(q=k;q<d+2;q++)g.push(I[q>>0])}d+=2}else g.push(h),d+=1}return g}function Pb(a,b,c){c=Nb(b,c);b=A.ba();a=Kb(L(c,"i8",Ha),1,c.length,a);A.ra(b);return a}
function Qb(a,b){Qb.oa||(Qb.oa={});a in Qb.oa||(A.R("v",b),Qb.oa[a]=1)}function Rb(a,b){var c=eb(a&255);I[Rb.u>>0]=c;var d=Jb(b);if(-1==Ib(d,Rb.u,1)){if(c=G.T(b))c.error=n;return-1}return c}var Sb={},Tb=za;function Ub(a,b,c){a=G.ma(a);if(!a)return W(vb),-1;try{return G.pb(a,I,b,c)}catch(d){return G.na(d),-1}}
function Vb(a,b,c,d){c*=b;if(0==c)return 0;var f=0,d=G.T(d);if(!d)return W(vb),0;for(;d.Ta.length&&0<c;)I[a++>>0]=d.Ta.pop(),c--,f++;a=Ub(d.bb,a,c);if(-1==a)return d&&(d.error=n),0;f+=a;f<c&&(d.Ha=n);return f/b|0}function Wb(a){var b=G.T(a);if(!b||b.Ha||b.error)return-1;a=Vb(Wb.u,1,1,a);return 0==a?-1:-1==a?(b.error=n,-1):N[Wb.u>>0]}var Xb=za;
function Yb(){if(!Yb.u){for(var a=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,
55304,55304,55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],b=M(2*a.length),c=0;c<a.length;c++)ya[b+2*c>>1]=a[c];Yb.u=L([b+256],"i16*",Ga)}return Yb.u}var Zb=0;function Ka(){}u._free=Ka;function M(a){return A.S(a+8)+8&4294967288}u._malloc=M;function $b(a,b){return a%b}u._i64Add=ac;u._bitshift64Lshr=bc;
var cc=L([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0],"i8",K);u._llvm_ctlz_i32=dc;
function ec(){if(!ec.u){for(var a=[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,
245,246,247,248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,
148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],b=M(4*a.length),c=0;c<a.length;c++)J[b+4*c>>2]=a[c];ec.u=L([b+512],"i32*",
Ga)}return ec.u}
function fc(){if(!fc.u){for(var a=[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,
245,246,247,248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,
137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],b=M(4*a.length),c=0;c<a.length;c++)J[b+
4*c>>2]=a[c];fc.u=L([b+512],"i32*",Ga)}return fc.u}u._memcpy=gc;var hc=1;function ic(a){ic.Za||(H=H+4095&-4096,ic.Za=n,x(A.S),ic.Ya=A.S,A.S=function(){D("cannot dynamically allocate, sbrk now has control")});var b=H;0!=a&&ic.Ya(a);return b}u._bitshift64Shl=jc;function kc(a,b){var c=M(a*b);tb(c,0,a*b);return c}u._calloc=kc;u._memmove=lc;function mc(a){try{return Ka(a)}catch(b){}}
function nc(){if(nc.Pa)nc.Pa=r;else{V.setThrew(0);var a=qb.pop();if(a){if(a=rb(a)){var b=U[a];x(0<b.U);b.U--;0===b.U&&(b.Ea&&A.R("vi",b.Ea,[a]),delete U[a],mc(a))}pb=0}}}function oc(a,b){return Mb(a)===Mb(b)?a:-a}var pc=L(1,"i32*",K),qc=L(1,"i32*",K),rc=L(1,"i32*",K),sc=L(1,"i32*",K),zb=A.Qa(4);J[zb>>2]=0;Rb.u=L([0],"i8",K);Wb.u=L([0],"i8",K);Pa=z=A.X(na);Qa=Pa+Sa;Ra=H=A.X(Qa);x(Ra<oa,"TOTAL_MEMORY not big enough for stack");
var tc=L([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,
1,0,3,0,1,0,2,0,1,0],"i8",3),Aa=Math.min;
var V=(function(global,env,buffer) {
// EMSCRIPTEN_START_ASM
"use asm";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.STACKTOP|0;var j=env.STACK_MAX|0;var k=env.tempDoublePtr|0;var l=env.ABORT|0;var m=env.cttz_i8|0;var n=env.ctlz_i8|0;var o=env.___dso_handle|0;var p=env._stderr|0;var q=env._stdin|0;var r=env._stdout|0;var s=0;var t=0;var u=0;var v=0;var w=+env.NaN,x=+env.Infinity;var y=0,z=0,A=0,B=0,C=0.0,D=0,E=0,F=0,G=0.0;var H=0;var I=0;var J=0;var K=0;var L=0;var M=0;var N=0;var O=0;var P=0;var Q=0;var R=global.Math.floor;var S=global.Math.abs;var T=global.Math.sqrt;var U=global.Math.pow;var V=global.Math.cos;var W=global.Math.sin;var X=global.Math.tan;var Y=global.Math.acos;var Z=global.Math.asin;var _=global.Math.atan;var $=global.Math.atan2;var aa=global.Math.exp;var ba=global.Math.log;var ca=global.Math.ceil;var da=global.Math.imul;var ea=env.abort;var fa=env.assert;var ga=env.min;var ha=env.invoke_iiii;var ia=env.invoke_viiiiiii;var ja=env.invoke_viiiii;var ka=env.invoke_vi;var la=env.invoke_vii;var ma=env.invoke_viiiiiiiii;var na=env.invoke_ii;var oa=env.invoke_viiiiiid;var pa=env.invoke_viii;var qa=env.invoke_viiiiid;var ra=env.invoke_v;var sa=env.invoke_iiiiiiiii;var ta=env.invoke_iiiii;var ua=env.invoke_viiiiiiii;var va=env.invoke_viiiiii;var wa=env.invoke_iii;var xa=env.invoke_iiiiii;var ya=env.invoke_viiii;var za=env._fabs;var Aa=env._strftime;var Ba=env._pthread_cond_wait;var Ca=env._copysignl;var Da=env._send;var Ea=env._fread;var Fa=env._log2;var Ga=env._fmod;var Ha=env.___cxa_guard_acquire;var Ia=env._fmodl;var Ja=env._vfprintf;var Ka=env._ungetc;var La=env.___assert_fail;var Ma=env.___cxa_free_exception;var Na=env.___cxa_allocate_exception;var Oa=env.___cxa_find_matching_catch;var Pa=env._ceilf;var Qa=env.___ctype_toupper_loc;var Ra=env._fflush;var Sa=env.___cxa_guard_release;var Ta=env.__addDays;var Ua=env._pwrite;var Va=env._strerror_r;var Wa=env._strftime_l;var Xa=env._fprintf;var Ya=env.__reallyNegative;var Za=env._sbrk;var _a=env._uselocale;var $a=env._catgets;var ab=env._newlocale;var bb=env.___cxa_begin_catch;var cb=env._emscripten_memcpy_big;var db=env.___cxa_end_catch;var eb=env.___resumeException;var fb=env.__ZSt18uncaught_exceptionv;var gb=env._sysconf;var hb=env.___setErrNo;var ib=env._pthread_getspecific;var jb=env.__arraySum;var kb=env.___ctype_tolower_loc;var lb=env._fileno;var mb=env._pthread_mutex_unlock;var nb=env._pthread_once;var ob=env._pread;var pb=env._printf;var qb=env.___ctype_b_loc;var rb=env._pthread_key_create;var sb=env._getc;var tb=env._write;var ub=env.__isLeapYear;var vb=env.___errno_location;var wb=env._recv;var xb=env._pthread_setspecific;var yb=env._copysign;var zb=env._fgetc;var Ab=env._fputc;var Bb=env.___cxa_throw;var Cb=env._freelocale;var Db=env._pthread_cond_broadcast;var Eb=env.___cxa_rethrow;var Fb=env._abort;var Gb=env._catclose;var Hb=env._fwrite;var Ib=env._time;var Jb=env._pthread_mutex_lock;var Kb=env._strerror;var Lb=env.___cxa_atexit;var Mb=env._abs;var Nb=env.__formatString;var Ob=env._atexit;var Pb=env._catopen;var Qb=env._read;var Rb=0.0;
// EMSCRIPTEN_START_FUNCS
function kf(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0,Uc=0,Vc=0,Wc=0,Xc=0,Yc=0,Zc=0,_c=0,$c=0,ad=0,bd=0,cd=0,dd=0,ed=0,fd=0,gd=0,hd=0,id=0,jd=0,kd=0,ld=0,md=0,nd=0,od=0,pd=0,qd=0,rd=0,sd=0,td=0,ud=0,vd=0,wd=0,xd=0,yd=0,zd=0,Ad=0,Bd=0,Cd=0,Dd=0,Ed=0;n=i;i=i+1120|0;Mc=n+588|0;Nc=n+696|0;Oc=n+568|0;mc=n+564|0;lc=n+560|0;jc=n+676|0;ic=n+1068|0;hc=n+1076|0;kc=n+1084|0;nc=n+1092|0;qc=n+1100|0;pc=n+1060|0;oc=n+224|0;rc=n+208|0;Ac=n+180|0;Gc=n+1040|0;Fc=n+816|0;Dc=n+648|0;Ec=n+620|0;Cc=n+80|0;zc=n+352|0;xc=n+336|0;yc=n+252|0;Bc=n+232|0;wc=n+48|0;uc=n+220|0;vc=n+216|0;tc=n+144|0;gc=n+200|0;ob=n+184|0;sc=n+192|0;ec=n+176|0;dc=n+968|0;cc=n+88|0;ib=n+664|0;hb=n+644|0;jb=n+632|0;kb=n+616|0;Ya=n+376|0;Za=n+364|0;Xa=n+24|0;Ua=n+348|0;Va=n+344|0;Wa=n+1116|0;Qa=n+328|0;Ra=n+256|0;Sa=n+260|0;Na=n+264|0;Oa=n+268|0;Pa=n+228|0;Ta=n+276|0;gb=n+280|0;Ma=n+284|0;lb=n+288|0;mb=n+292|0;Jc=n+204|0;nb=n+300|0;fb=n+304|0;Ic=n+308|0;Hc=n+312|0;ac=n+316|0;bc=n+320|0;_b=n+324|0;$b=n+1036|0;Yb=n+1016|0;Db=n+964|0;Cb=n+880|0;Ab=n+812|0;zb=n+764|0;yb=n+660|0;Bb=n+656|0;Eb=n+640|0;Hb=n+636|0;Gb=n+628|0;Fb=n+624|0;Ib=n+612|0;Rb=n+604|0;Xb=n+380|0;Wb=n+384|0;Ub=n+360|0;Vb=n+392|0;Tb=n+72|0;Qb=n+400|0;Ob=n+404|0;Pb=n+408|0;Sb=n+416|0;Nb=n+152|0;Lb=n+428|0;Mb=n+432|0;Kb=n+32|0;xb=n+440|0;wb=n+444|0;Jb=n+448|0;vb=n+64|0;ub=n+460|0;sb=n+128|0;qb=n+468|0;rb=n+472|0;pb=n+476|0;fc=n+272|0;Lc=n+484|0;Zb=n+488|0;tb=n+492|0;Kc=n+504|0;_a=n+508|0;$a=n+512|0;Ka=n+516|0;La=n+520|0;Ia=n+524|0;ja=n+528|0;ia=n+532|0;ga=n+296|0;eb=n+540|0;fa=n+1064|0;ha=n+556|0;ka=n+1080|0;na=n+1088|0;ma=n+1096|0;la=n+572|0;oa=n+1108|0;xa=n+584|0;Da=n+1112|0;Ca=n+592|0;Aa=n+596|0;Ba=n+600|0;za=n+104|0;wa=n+608|0;ua=n+1032|0;va=n+1028|0;ya=n+1008|0;ta=n+16|0;ra=n+960|0;sa=n+932|0;qa=n+136|0;ea=n+876|0;db=n+808|0;pa=n+800|0;cb=n+40|0;bb=n+760|0;ab=n+120|0;Rc=n+668|0;Qc=n+672|0;Pc=n+1072|0;ca=n+680|0;da=n+684|0;_=n+688|0;Z=n+692|0;H=n+1104|0;I=n+700|0;W=n+8|0;U=n+704|0;E=n+708|0;F=n+1117|0;O=n+724|0;P=n+728|0;Q=n+732|0;N=n+736|0;J=n+740|0;K=n+744|0;R=n+388|0;aa=n+748|0;G=n+752|0;Y=n+756|0;X=n+356|0;Ga=n+396|0;$=n+768|0;ba=n+772|0;Fa=n+776|0;Ea=n+780|0;Uc=n+784|0;w=n+788|0;D=n+792|0;v=n+796|0;z=n+424|0;p=n+820|0;o=n+824|0;q=n+96|0;t=n+828|0;s=n+832|0;r=n+1118|0;h=n+836|0;g=n+840|0;f=n+844|0;m=n+848|0;l=n+852|0;j=n+856|0;u=n+860|0;y=n+456|0;k=n+864|0;A=n+868|0;B=n+872|0;S=n+464|0;C=n+884|0;x=n+888|0;T=n+892|0;V=n+896|0;Vc=n+900|0;Wc=n+904|0;Xc=n+908|0;ld=n+480|0;cd=n+912|0;Yc=n+916|0;_c=n+920|0;ad=n+924|0;$c=n+928|0;Zc=n+56|0;ed=n+936|0;gd=n+940|0;fd=n+944|0;bd=n+952|0;dd=n+160|0;jd=n+972|0;id=n+976|0;hd=n;nd=n+980|0;pd=n+984|0;od=n+988|0;kd=n+992|0;md=n+112|0;sd=n+1e3|0;rd=n+1004|0;qd=n+168|0;vd=n+1020|0;ud=n+536|0;wd=n+1024|0;xd=n+240|0;yd=n+248|0;zd=n+1048|0;Ad=n+368|0;Bd=n+1052|0;Cd=n+212|0;Dd=n+372|0;Ed=n+340|0;Tc=n+1056|0;Sc=n+244|0;M=n+544|0;td=n+576|0;Ja=n+436|0;Ha=n+712|0;L=n+332|0;c[Ed>>2]=d;c[Tc>>2]=e;c[Dd>>2]=c[Ed>>2];c[Cd>>2]=(c[Dd>>2]|0)+4;c[Bd>>2]=c[Cd>>2];c[Sc>>2]=c[Bd>>2];c[zd>>2]=c[Sc>>2];c[Ad>>2]=1;d=c[Ad>>2]|0;c[n+652>>2]=c[zd>>2];c[yd>>2]=d;c[n+1044>>2]=0;d=Gx((c[yd>>2]|0)*20|0)|0;e=c[Sc>>2]|0;c[wd>>2]=td;c[xd>>2]=e;e=c[xd>>2]|0;c[vd>>2]=c[wd>>2];c[ud>>2]=e;e=c[vd>>2]|0;c[e>>2]=c[ud>>2];a[e+4>>0]=0;a[qd+0>>0]=a[td+0>>0]|0;a[qd+1>>0]=a[td+1>>0]|0;a[qd+2>>0]=a[td+2>>0]|0;a[qd+3>>0]=a[td+3>>0]|0;a[qd+4>>0]=a[td+4>>0]|0;a[qd+5>>0]=a[td+5>>0]|0;a[qd+6>>0]=a[td+6>>0]|0;a[qd+7>>0]=a[td+7>>0]|0;c[sd>>2]=M;c[rd>>2]=d;d=c[sd>>2]|0;e=c[rd>>2]|0;a[md+0>>0]=a[qd+0>>0]|0;a[md+1>>0]=a[qd+1>>0]|0;a[md+2>>0]=a[qd+2>>0]|0;a[md+3>>0]=a[qd+3>>0]|0;a[md+4>>0]=a[qd+4>>0]|0;a[md+5>>0]=a[qd+5>>0]|0;a[md+6>>0]=a[qd+6>>0]|0;a[md+7>>0]=a[qd+7>>0]|0;c[pd>>2]=d;c[od>>2]=e;e=c[pd>>2]|0;c[nd>>2]=od;d=c[c[nd>>2]>>2]|0;c[ld>>2]=md;ld=c[ld>>2]|0;c[kd+0>>2]=c[ld+0>>2];c[kd+4>>2]=c[ld+4>>2];a[hd+0>>0]=a[kd+0>>0]|0;a[hd+1>>0]=a[kd+1>>0]|0;a[hd+2>>0]=a[kd+2>>0]|0;a[hd+3>>0]=a[kd+3>>0]|0;a[hd+4>>0]=a[kd+4>>0]|0;a[hd+5>>0]=a[kd+5>>0]|0;a[hd+6>>0]=a[kd+6>>0]|0;a[hd+7>>0]=a[kd+7>>0]|0;c[jd>>2]=e;c[id>>2]=d;d=c[jd>>2]|0;e=c[id>>2]|0;a[dd+0>>0]=a[hd+0>>0]|0;a[dd+1>>0]=a[hd+1>>0]|0;a[dd+2>>0]=a[hd+2>>0]|0;a[dd+3>>0]=a[hd+3>>0]|0;a[dd+4>>0]=a[hd+4>>0]|0;a[dd+5>>0]=a[hd+5>>0]|0;a[dd+6>>0]=a[hd+6>>0]|0;a[dd+7>>0]=a[hd+7>>0]|0;c[gd>>2]=d;c[fd>>2]=e;e=c[gd>>2]|0;c[ed>>2]=fd;d=c[c[ed>>2]>>2]|0;c[cd>>2]=dd;cd=c[cd>>2]|0;c[bd+0>>2]=c[cd+0>>2];c[bd+4>>2]=c[cd+4>>2];a[Zc+0>>0]=a[bd+0>>0]|0;a[Zc+1>>0]=a[bd+1>>0]|0;a[Zc+2>>0]=a[bd+2>>0]|0;a[Zc+3>>0]=a[bd+3>>0]|0;a[Zc+4>>0]=a[bd+4>>0]|0;a[Zc+5>>0]=a[bd+5>>0]|0;a[Zc+6>>0]=a[bd+6>>0]|0;a[Zc+7>>0]=a[bd+7>>0]|0;c[ad>>2]=e;c[$c>>2]=d;d=c[ad>>2]|0;c[_c>>2]=$c;c[d>>2]=c[c[_c>>2]>>2];d=d+4|0;c[Yc>>2]=Zc;e=c[Yc>>2]|0;c[d+0>>2]=c[e+0>>2];c[d+4>>2]=c[e+4>>2];Sc=c[Sc>>2]|0;c[Xc>>2]=M;c[Wc>>2]=c[Xc>>2];c[Vc>>2]=c[Wc>>2];c[Uc>>2]=(c[c[Vc>>2]>>2]|0)+16;d=c[Uc>>2]|0;e=c[Tc>>2]|0;c[Rc>>2]=Sc;c[Qc>>2]=d;c[Pc>>2]=e;e=c[Qc>>2]|0;if((e|0)!=0)c[e>>2]=c[c[Pc>>2]>>2];c[Oc>>2]=M;c[Nc>>2]=c[Oc>>2];c[Mc>>2]=c[Nc>>2];a[(c[Mc>>2]|0)+8>>0]=1;c[Lc>>2]=M;Dd=c[Lc>>2]|0;c[pb>>2]=Kc;c[fc>>2]=Dd;Dd=c[fc>>2]|0;c[qb>>2]=c[pb>>2];c[rb>>2]=Dd;c[c[qb>>2]>>2]=c[rb>>2];a[sb+0>>0]=a[Kc+0>>0]|0;a[sb+1>>0]=a[Kc+1>>0]|0;a[sb+2>>0]=a[Kc+2>>0]|0;a[sb+3>>0]=a[Kc+3>>0]|0;c[ub>>2]=tb;Dd=c[ub>>2]|0;a[vb+0>>0]=a[sb+0>>0]|0;a[vb+1>>0]=a[sb+1>>0]|0;a[vb+2>>0]=a[sb+2>>0]|0;a[vb+3>>0]=a[sb+3>>0]|0;c[wb>>2]=Dd;Dd=c[wb>>2]|0;c[xb>>2]=vb;c[yb>>2]=c[c[xb>>2]>>2];Ed=c[yb>>2]|0;c[zb>>2]=Ed;c[Ab>>2]=c[zb>>2];c[Bb>>2]=c[c[Ab>>2]>>2];c[Cb>>2]=Ed;c[Db>>2]=c[Cb>>2];c[c[Db>>2]>>2]=0;Ed=c[Bb>>2]|0;c[Eb>>2]=vb;c[Fb>>2]=c[c[Eb>>2]>>2];c[Gb>>2]=c[Fb>>2];c[Hb>>2]=c[Gb>>2];c[Ib>>2]=(c[Hb>>2]|0)+4;Cd=c[Ib>>2]|0;c[Jb+0>>2]=c[Cd+0>>2];c[Jb+4>>2]=c[Cd+4>>2];a[Kb+0>>0]=a[Jb+0>>0]|0;a[Kb+1>>0]=a[Jb+1>>0]|0;a[Kb+2>>0]=a[Jb+2>>0]|0;a[Kb+3>>0]=a[Jb+3>>0]|0;a[Kb+4>>0]=a[Jb+4>>0]|0;a[Kb+5>>0]=a[Jb+5>>0]|0;a[Kb+6>>0]=a[Jb+6>>0]|0;a[Kb+7>>0]=a[Jb+7>>0]|0;c[Lb>>2]=Dd;c[Mb>>2]=Ed;Ed=c[Lb>>2]|0;Dd=c[Mb>>2]|0;a[Nb+0>>0]=a[Kb+0>>0]|0;a[Nb+1>>0]=a[Kb+1>>0]|0;a[Nb+2>>0]=a[Kb+2>>0]|0;a[Nb+3>>0]=a[Kb+3>>0]|0;a[Nb+4>>0]=a[Kb+4>>0]|0;a[Nb+5>>0]=a[Kb+5>>0]|0;a[Nb+6>>0]=a[Kb+6>>0]|0;a[Nb+7>>0]=a[Kb+7>>0]|0;c[Ob>>2]=Ed;c[Pb>>2]=Dd;Dd=c[Ob>>2]|0;c[Qb>>2]=Pb;Ed=c[c[Qb>>2]>>2]|0;c[Rb>>2]=Nb;Cd=c[Rb>>2]|0;c[Sb+0>>2]=c[Cd+0>>2];c[Sb+4>>2]=c[Cd+4>>2];a[Tb+0>>0]=a[Sb+0>>0]|0;a[Tb+1>>0]=a[Sb+1>>0]|0;a[Tb+2>>0]=a[Sb+2>>0]|0;a[Tb+3>>0]=a[Sb+3>>0]|0;a[Tb+4>>0]=a[Sb+4>>0]|0;a[Tb+5>>0]=a[Sb+5>>0]|0;a[Tb+6>>0]=a[Sb+6>>0]|0;a[Tb+7>>0]=a[Sb+7>>0]|0;c[Ub>>2]=Dd;c[Vb>>2]=Ed;Ed=c[Ub>>2]|0;c[Wb>>2]=Vb;c[Ed>>2]=c[c[Wb>>2]>>2];Ed=Ed+4|0;c[Xb>>2]=Tb;Dd=c[Xb>>2]|0;c[Ed+0>>2]=c[Dd+0>>2];c[Ed+4>>2]=c[Dd+4>>2];c[Yb>>2]=tb;Ed=c[Yb>>2]|0;c[_b>>2]=Zb;c[$b>>2]=Ed;Ed=c[$b>>2]|0;c[ac>>2]=c[_b>>2];c[bc>>2]=Ed;c[c[ac>>2]>>2]=c[bc>>2];a[cc+0>>0]=a[Zb+0>>0]|0;a[cc+1>>0]=a[Zb+1>>0]|0;a[cc+2>>0]=a[Zb+2>>0]|0;a[cc+3>>0]=a[Zb+3>>0]|0;c[dc>>2]=Ha;Ed=c[dc>>2]|0;a[ec+0>>0]=a[cc+0>>0]|0;a[ec+1>>0]=a[cc+1>>0]|0;a[ec+2>>0]=a[cc+2>>0]|0;a[ec+3>>0]=a[cc+3>>0]|0;c[ob>>2]=Ed;Ed=c[ob>>2]|0;c[gc>>2]=ec;c[hc>>2]=c[c[gc>>2]>>2];ob=c[hc>>2]|0;c[ic>>2]=ob;c[jc>>2]=c[ic>>2];c[kc>>2]=c[c[jc>>2]>>2];c[lc>>2]=ob;c[mc>>2]=c[lc>>2];c[c[mc>>2]>>2]=0;ob=c[kc>>2]|0;c[nc>>2]=ec;c[oc>>2]=c[c[nc>>2]>>2];c[pc>>2]=c[oc>>2];c[qc>>2]=c[pc>>2];c[rc>>2]=(c[qc>>2]|0)+4;Dd=c[rc>>2]|0;c[sc+0>>2]=c[Dd+0>>2];c[sc+4>>2]=c[Dd+4>>2];a[tc+0>>0]=a[sc+0>>0]|0;a[tc+1>>0]=a[sc+1>>0]|0;a[tc+2>>0]=a[sc+2>>0]|0;a[tc+3>>0]=a[sc+3>>0]|0;a[tc+4>>0]=a[sc+4>>0]|0;a[tc+5>>0]=a[sc+5>>0]|0;a[tc+6>>0]=a[sc+6>>0]|0;a[tc+7>>0]=a[sc+7>>0]|0;c[uc>>2]=Ed;c[vc>>2]=ob;ob=c[uc>>2]|0;Ed=c[vc>>2]|0;a[wc+0>>0]=a[tc+0>>0]|0;a[wc+1>>0]=a[tc+1>>0]|0;a[wc+2>>0]=a[tc+2>>0]|0;a[wc+3>>0]=a[tc+3>>0]|0;a[wc+4>>0]=a[tc+4>>0]|0;a[wc+5>>0]=a[tc+5>>0]|0;a[wc+6>>0]=a[tc+6>>0]|0;a[wc+7>>0]=a[tc+7>>0]|0;c[xc>>2]=ob;c[yc>>2]=Ed;Ed=c[xc>>2]|0;c[zc>>2]=yc;ob=c[c[zc>>2]>>2]|0;c[Ac>>2]=wc;Dd=c[Ac>>2]|0;c[Bc+0>>2]=c[Dd+0>>2];c[Bc+4>>2]=c[Dd+4>>2];a[Cc+0>>0]=a[Bc+0>>0]|0;a[Cc+1>>0]=a[Bc+1>>0]|0;a[Cc+2>>0]=a[Bc+2>>0]|0;a[Cc+3>>0]=a[Bc+3>>0]|0;a[Cc+4>>0]=a[Bc+4>>0]|0;a[Cc+5>>0]=a[Bc+5>>0]|0;a[Cc+6>>0]=a[Bc+6>>0]|0;a[Cc+7>>0]=a[Bc+7>>0]|0;c[Dc>>2]=Ed;c[Ec>>2]=ob;ob=c[Dc>>2]|0;c[Fc>>2]=Ec;c[ob>>2]=c[c[Fc>>2]>>2];ob=ob+4|0;c[Gc>>2]=Cc;Ed=c[Gc>>2]|0;c[ob+0>>2]=c[Ed+0>>2];c[ob+4>>2]=c[Ed+4>>2];c[Hc>>2]=tb;c[Ic>>2]=c[Hc>>2];c[Jc>>2]=c[Ic>>2];c[nb>>2]=0;ob=c[Jc>>2]|0;c[mb>>2]=ob;c[lb>>2]=c[mb>>2];c[fb>>2]=c[c[lb>>2]>>2];Ed=c[nb>>2]|0;c[kb>>2]=ob;c[jb>>2]=c[kb>>2];c[c[jb>>2]>>2]=Ed;if((c[fb>>2]|0)!=0){c[hb>>2]=ob;c[ib>>2]=c[hb>>2];fb=c[fb>>2]|0;c[gb>>2]=(c[ib>>2]|0)+4;c[Ma>>2]=fb;fb=c[gb>>2]|0;if(a[fb+4>>0]&1){Ed=c[fb>>2]|0;c[Ta>>2]=(c[Ma>>2]|0)+16;Dd=c[Ta>>2]|0;c[Ua>>2]=Ed;c[Va>>2]=Dd;Dd=c[Ua>>2]|0;Ed=c[Va>>2]|0;a[Xa+0>>0]=a[Wa+0>>0]|0;c[Ya>>2]=Dd;c[Za>>2]=Ed}if((c[Ma>>2]|0)!=0){Dd=c[Ma>>2]|0;c[Na>>2]=c[fb>>2];c[Oa>>2]=Dd;c[Pa>>2]=1;Dd=c[Oa>>2]|0;Ed=c[Pa>>2]|0;c[Qa>>2]=c[Na>>2];c[Ra>>2]=Dd;c[Sa>>2]=Ed;Ix(c[Ra>>2]|0)}}c[Ia>>2]=Ha;Ed=c[Ia>>2]|0;c[Ka>>2]=Ja;c[La>>2]=Ed;Ed=c[La>>2]|0;c[_a>>2]=c[Ka>>2];c[$a>>2]=Ed;c[c[_a>>2]>>2]=c[$a>>2];a[ab+0>>0]=a[Ja+0>>0]|0;a[ab+1>>0]=a[Ja+1>>0]|0;a[ab+2>>0]=a[Ja+2>>0]|0;a[ab+3>>0]=a[Ja+3>>0]|0;c[bb>>2]=b;Ed=c[bb>>2]|0;a[cb+0>>0]=a[ab+0>>0]|0;a[cb+1>>0]=a[ab+1>>0]|0;a[cb+2>>0]=a[ab+2>>0]|0;a[cb+3>>0]=a[ab+3>>0]|0;c[db>>2]=Ed;Ed=c[db>>2]|0;c[ea>>2]=cb;c[fa>>2]=c[c[ea>>2]>>2];ea=c[fa>>2]|0;c[eb>>2]=ea;c[ga>>2]=c[eb>>2];c[ha>>2]=c[c[ga>>2]>>2];c[ia>>2]=ea;c[ja>>2]=c[ia>>2];c[c[ja>>2]>>2]=0;ea=c[ha>>2]|0;c[ka>>2]=cb;c[la>>2]=c[c[ka>>2]>>2];c[ma>>2]=c[la>>2];c[na>>2]=c[ma>>2];c[oa>>2]=(c[na>>2]|0)+4;Dd=c[oa>>2]|0;c[pa+0>>2]=c[Dd+0>>2];c[pa+4>>2]=c[Dd+4>>2];a[qa+0>>0]=a[pa+0>>0]|0;a[qa+1>>0]=a[pa+1>>0]|0;a[qa+2>>0]=a[pa+2>>0]|0;a[qa+3>>0]=a[pa+3>>0]|0;a[qa+4>>0]=a[pa+4>>0]|0;a[qa+5>>0]=a[pa+5>>0]|0;a[qa+6>>0]=a[pa+6>>0]|0;a[qa+7>>0]=a[pa+7>>0]|0;c[ra>>2]=Ed;c[sa>>2]=ea;ea=c[ra>>2]|0;Ed=c[sa>>2]|0;a[ta+0>>0]=a[qa+0>>0]|0;a[ta+1>>0]=a[qa+1>>0]|0;a[ta+2>>0]=a[qa+2>>0]|0;a[ta+3>>0]=a[qa+3>>0]|0;a[ta+4>>0]=a[qa+4>>0]|0;a[ta+5>>0]=a[qa+5>>0]|0;a[ta+6>>0]=a[qa+6>>0]|0;a[ta+7>>0]=a[qa+7>>0]|0;c[ua>>2]=ea;c[va>>2]=Ed;Ed=c[ua>>2]|0;c[wa>>2]=va;ea=c[c[wa>>2]>>2]|0;c[xa>>2]=ta;Dd=c[xa>>2]|0;c[ya+0>>2]=c[Dd+0>>2];c[ya+4>>2]=c[Dd+4>>2];a[za+0>>0]=a[ya+0>>0]|0;a[za+1>>0]=a[ya+1>>0]|0;a[za+2>>0]=a[ya+2>>0]|0;a[za+3>>0]=a[ya+3>>0]|0;a[za+4>>0]=a[ya+4>>0]|0;a[za+5>>0]=a[ya+5>>0]|0;a[za+6>>0]=a[ya+6>>0]|0;a[za+7>>0]=a[ya+7>>0]|0;c[Aa>>2]=Ed;c[Ba>>2]=ea;ea=c[Aa>>2]|0;c[Ca>>2]=Ba;c[ea>>2]=c[c[Ca>>2]>>2];ea=ea+4|0;c[Da>>2]=za;Ed=c[Da>>2]|0;c[ea+0>>2]=c[Ed+0>>2];c[ea+4>>2]=c[Ed+4>>2];c[Ea>>2]=Ha;c[Fa>>2]=c[Ea>>2];c[Ga>>2]=c[Fa>>2];c[$>>2]=0;ea=c[Ga>>2]|0;c[X>>2]=ea;c[Y>>2]=c[X>>2];c[ba>>2]=c[c[Y>>2]>>2];Ed=c[$>>2]|0;c[Z>>2]=ea;c[_>>2]=c[Z>>2];c[c[_>>2]>>2]=Ed;if((c[ba>>2]|0)!=0){c[da>>2]=ea;c[ca>>2]=c[da>>2];X=c[ba>>2]|0;c[aa>>2]=(c[ca>>2]|0)+4;c[G>>2]=X;X=c[aa>>2]|0;if(a[X+4>>0]&1){Ed=c[X>>2]|0;c[R>>2]=(c[G>>2]|0)+16;Dd=c[R>>2]|0;c[U>>2]=Ed;c[E>>2]=Dd;Dd=c[U>>2]|0;Ed=c[E>>2]|0;a[W+0>>0]=a[F+0>>0]|0;c[H>>2]=Dd;c[I>>2]=Ed}if((c[G>>2]|0)!=0){Dd=c[G>>2]|0;c[N>>2]=c[X>>2];c[J>>2]=Dd;c[K>>2]=1;Dd=c[J>>2]|0;Ed=c[K>>2]|0;c[O>>2]=c[N>>2];c[P>>2]=Dd;c[Q>>2]=Ed;Ix(c[P>>2]|0)}}c[L>>2]=1;c[V>>2]=M;c[T>>2]=c[V>>2];c[S>>2]=c[T>>2];c[C>>2]=0;E=c[S>>2]|0;c[B>>2]=E;c[A>>2]=c[B>>2];c[x>>2]=c[c[A>>2]>>2];Ed=c[C>>2]|0;c[z>>2]=E;c[v>>2]=c[z>>2];c[c[v>>2]>>2]=Ed;if((c[x>>2]|0)==0){i=n;return}c[D>>2]=E;c[w>>2]=c[D>>2];v=c[x>>2]|0;c[y>>2]=(c[w>>2]|0)+4;c[k>>2]=v;v=c[y>>2]|0;if(a[v+4>>0]&1){Ed=c[v>>2]|0;c[u>>2]=(c[k>>2]|0)+16;Dd=c[u>>2]|0;c[t>>2]=Ed;c[s>>2]=Dd;Dd=c[t>>2]|0;Ed=c[s>>2]|0;a[q+0>>0]=a[r+0>>0]|0;c[p>>2]=Dd;c[o>>2]=Ed}if((c[k>>2]|0)==0){i=n;return}Dd=c[k>>2]|0;c[m>>2]=c[v>>2];c[l>>2]=Dd;c[j>>2]=1;Dd=c[l>>2]|0;Ed=c[j>>2]|0;c[h>>2]=c[m>>2];c[g>>2]=Dd;c[f>>2]=Ed;Ix(c[g>>2]|0);i=n;return}function lf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;n=i;i=i+144|0;C=n+52|0;D=n+96|0;E=n+108|0;B=n+132|0;x=n+12|0;u=n+88|0;v=n+20|0;w=n+24|0;t=n+28|0;r=n+104|0;q=n+112|0;l=n+120|0;f=n+128|0;g=n+136|0;o=n+140|0;p=n+56|0;m=n+64|0;h=n+68|0;j=n+72|0;H=n+76|0;I=n+4|0;J=n;G=n+92|0;K=n+100|0;z=n+36|0;k=n+40|0;y=n+116|0;F=n+44|0;A=n+124|0;s=n+8|0;c[K>>2]=a;c[z>>2]=b;c[k>>2]=d;c[y>>2]=e;e=c[K>>2]|0;c[I>>2]=G;c[J>>2]=-1;a=c[J>>2]|0;c[H>>2]=c[I>>2];c[n+80>>2]=a;c[c[H>>2]>>2]=0;c[F>>2]=c[G>>2];c[n+60>>2]=F;c[c[y>>2]>>2]=0;c[D>>2]=B;c[E>>2]=-1;a=c[E>>2]|0;c[C>>2]=c[D>>2];c[n+84>>2]=a;c[c[C>>2]>>2]=0;c[A>>2]=c[B>>2];c[n+48>>2]=A;c[(c[y>>2]|0)+4>>2]=0;c[(c[y>>2]|0)+8>>2]=c[z>>2];c[c[k>>2]>>2]=c[y>>2];c[x>>2]=e;a=c[c[c[x>>2]>>2]>>2]|0;c[v>>2]=t;c[w>>2]=-1;b=c[w>>2]|0;c[u>>2]=c[v>>2];c[n+16>>2]=b;c[c[u>>2]>>2]=0;c[s>>2]=c[t>>2];c[n+32>>2]=s;if((a|0)!=0){c[r>>2]=e;K=c[c[c[r>>2]>>2]>>2]|0;c[q>>2]=e;c[c[q>>2]>>2]=K}c[p>>2]=e;c[o>>2]=(c[p>>2]|0)+4;c[g>>2]=c[o>>2];c[f>>2]=c[g>>2];c[l>>2]=c[f>>2];Qe(c[c[l>>2]>>2]|0,c[c[k>>2]>>2]|0);c[j>>2]=e;c[h>>2]=(c[j>>2]|0)+8;c[m>>2]=c[h>>2];K=c[m>>2]|0;c[K>>2]=(c[K>>2]|0)+1;i=n;return}function mf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;nf(c[f>>2]|0,c[e>>2]|0);i=d;return}function nf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;e=i;i=i+128|0;t=e+112|0;m=e+40|0;o=e+92|0;q=e+100|0;n=e+24|0;p=e;v=e+20|0;r=e+68|0;w=e+44|0;s=e+117|0;u=e+8|0;x=e+96|0;z=e+104|0;y=e+16|0;g=e+48|0;h=e+64|0;j=e+52|0;k=e+56|0;l=e+60|0;f=e+84|0;B=e+88|0;C=e+80|0;D=e+72|0;E=e+28|0;F=e+108|0;G=e+76|0;A=e+116|0;c[G>>2]=b;c[e+32>>2]=d;d=c[G>>2]|0;c[F>>2]=d+4;c[E>>2]=c[F>>2];c[D>>2]=c[E>>2];b=c[D>>2]|0;c[e+36>>2]=b;c[C>>2]=b;c[B>>2]=c[C>>2];c[c[B>>2]>>2]=0;b=d+8|0;a[y+0>>0]=a[A+0>>0]|0;c[x>>2]=b;c[z>>2]=0;x=c[x>>2]|0;b=c[z>>2]|0;a[u+0>>0]=a[y+0>>0]|0;c[r>>2]=x;c[w>>2]=b;r=c[r>>2]|0;c[v>>2]=w;b=c[c[v>>2]>>2]|0;c[t>>2]=u;a[p+0>>0]=a[s+0>>0]|0;c[q>>2]=r;c[n>>2]=b;b=c[q>>2]|0;c[o>>2]=p;c[m>>2]=n;c[b>>2]=c[c[m>>2]>>2];c[l>>2]=d;c[k>>2]=(c[l>>2]|0)+4;c[j>>2]=c[k>>2];c[h>>2]=c[j>>2];c[g>>2]=c[h>>2];b=c[g>>2]|0;c[f>>2]=d;c[c[f>>2]>>2]=b;i=e;return}function of(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0.0;M=i;i=i+2400|0;k=M+2324|0;l=M+2364|0;ra=M+2272|0;ga=M+2356|0;qa=M+2264|0;na=M+2332|0;oa=M+2328|0;ma=M+2136|0;ja=M+2388|0;ka=M+2380|0;fa=M+2393|0;R=M+2348|0;T=M+2268|0;U=M+2280|0;r=M+2276|0;Q=M+2204|0;P=M+2208|0;O=M+2212|0;X=M+2216|0;W=M+2220|0;V=M+2224|0;_=M+2228|0;S=M+2232|0;H=M+2236|0;G=M+2240|0;J=M+2244|0;I=M+2248|0;j=M+2252|0;L=M+2256|0;N=M+2260|0;z=M+2352|0;y=M+2360|0;B=M+2368|0;A=M+2376|0;E=M+2384|0;D=M+2284|0;F=M+2288|0;ha=M+2292|0;ia=M+2296|0;m=M+2300|0;n=M+2304|0;p=M+2308|0;o=M+2312|0;s=M+2316|0;q=M+2320|0;u=M+8|0;w=M+24|0;x=M;pa=M+2336|0;ea=M+2340|0;sa=M+2200|0;da=M+2192|0;$=M+2184|0;t=M+2188|0;ta=M+2196|0;ca=M+2394|0;Z=M+2144|0;ba=M+2128|0;la=M+16|0;aa=M+32|0;Y=M+2176|0;K=M+2344|0;C=M+2372|0;v=M+2392|0;c[ea>>2]=b;c[sa>>2]=d;c[da>>2]=e;c[$>>2]=f;c[t>>2]=g;if((c[da>>2]|0)==(c[$>>2]|0)){i=M;return}if((c[$>>2]|0)<(c[da>>2]|0)){c[ta>>2]=c[$>>2];c[$>>2]=c[da>>2];c[da>>2]=c[ta>>2]}a[ca>>0]=0;c[Z+0>>2]=0;c[Z+4>>2]=0;c[Z+8>>2]=0;c[Z+12>>2]=0;c[Z+16>>2]=0;c[Z+20>>2]=0;c[Z+24>>2]=0;c[Z+28>>2]=0;c[Z>>2]=c[da>>2];c[Z+4>>2]=c[$>>2];a[Z+8>>0]=1;h[Z+24>>3]=+uf(c[(c[sa>>2]|0)+(c[da>>2]<<2)>>2]|0,c[(c[sa>>2]|0)+(c[$>>2]<<2)>>2]|0)*.5;g=Z+24|0;h[g>>3]=+h[g>>3]- +h[(c[ea>>2]|0)+((c[da>>2]|0)*2096|0)+2088>>3];g=Z+24|0;h[g>>3]=+h[g>>3]- +h[(c[ea>>2]|0)+((c[$>>2]|0)*2096|0)+2088>>3];g=(c[ea>>2]|0)+((c[$>>2]|0)*2096|0)|0;do if((c[(c[ea>>2]|0)+((c[da>>2]|0)*2096|0)+2080>>2]|0)!=0){if((c[g+2080>>2]|0)==0){h[Z+16>>3]=+h[(c[ea>>2]|0)+((c[da>>2]|0)*2096|0)+2088>>3];a[ca>>0]=1;break}c[pa>>2]=c[t>>2];b=c[pa>>2]|0;if((c[b>>2]|0)==(c[b+4>>2]|0))ua=1.0e+99;else{h[la>>3]=0.0;c[ha>>2]=c[t>>2];c[ia>>2]=0;b=(c[c[ha>>2]>>2]|0)+(c[ia>>2]<<5)+24|0;c[ja>>2]=la;c[ka>>2]=b;b=c[ja>>2]|0;d=c[ka>>2]|0;a[ma+0>>0]=a[fa+0>>0]|0;c[na>>2]=b;c[oa>>2]=d;d=c[na>>2]|0;b=c[oa>>2]|0;c[ra>>2]=ma;c[ga>>2]=d;c[qa>>2]=b;ua=+h[(+h[c[ga>>2]>>3]<+h[c[qa>>2]>>3]?c[oa>>2]|0:c[na>>2]|0)>>3]}h[ba>>3]=ua;qz(aa|0,(c[ea>>2]|0)+((c[da>>2]|0)*2096|0)|0,2096)|0;af(aa,(c[ea>>2]|0)+((c[$>>2]|0)*2096|0)|0);h[Y>>3]=+Ce(aa);if(+h[Y>>3]<+h[ba>>3]- +h[Z+24>>3]){h[Z+16>>3]=+h[Y>>3];a[ca>>0]=1}}else{h[Z+16>>3]=+h[g+2088>>3];a[ca>>0]=1}while(0);if(!(a[ca>>0]&1)){i=M;return}Y=Z+24|0;h[Y>>3]=+h[Y>>3]+ +h[Z+16>>3];c[_>>2]=c[t>>2];c[S>>2]=Z;Y=c[_>>2]|0;b=c[Y+4>>2]|0;c[V>>2]=Y;c[W>>2]=(c[V>>2]|0)+8;c[X>>2]=c[W>>2];if((b|0)!=(c[c[X>>2]>>2]|0)){c[O>>2]=Y;c[P>>2]=(c[O>>2]|0)+8;c[Q>>2]=c[P>>2];d=c[Q>>2]|0;c[R>>2]=c[Y+4>>2];b=c[R>>2]|0;O=c[S>>2]|0;c[T>>2]=d;c[U>>2]=b;c[r>>2]=O;O=c[U>>2]|0;if((O|0)!=0){b=c[r>>2]|0;c[O+0>>2]=c[b+0>>2];c[O+4>>2]=c[b+4>>2];c[O+8>>2]=c[b+8>>2];c[O+12>>2]=c[b+12>>2];c[O+16>>2]=c[b+16>>2];c[O+20>>2]=c[b+20>>2];c[O+24>>2]=c[b+24>>2];c[O+28>>2]=c[b+28>>2]}b=Y+4|0;c[b>>2]=(c[b>>2]|0)+32}else wf(Y,c[S>>2]|0);c[N>>2]=c[t>>2];b=c[N>>2]|0;d=c[b>>2]|0;c[j>>2]=b;c[L>>2]=d;d=c[L>>2]|0;c[J>>2]=K;c[I>>2]=d;d=c[I>>2]|0;c[H>>2]=c[J>>2];c[G>>2]=d;c[c[H>>2]>>2]=c[G>>2];c[F>>2]=c[t>>2];d=c[F>>2]|0;b=c[d+4>>2]|0;c[E>>2]=d;c[D>>2]=b;b=c[D>>2]|0;c[B>>2]=C;c[A>>2]=b;b=c[A>>2]|0;c[z>>2]=c[B>>2];c[y>>2]=b;c[c[z>>2]>>2]=c[y>>2];a[x+0>>0]=a[K+0>>0]|0;a[x+1>>0]=a[K+1>>0]|0;a[x+2>>0]=a[K+2>>0]|0;a[x+3>>0]=a[K+3>>0]|0;a[w+0>>0]=a[C+0>>0]|0;a[w+1>>0]=a[C+1>>0]|0;a[w+2>>0]=a[C+2>>0]|0;a[w+3>>0]=a[C+3>>0]|0;a[u+0>>0]=a[v+0>>0]|0;c[s+0>>2]=c[x+0>>2];c[q+0>>2]=c[w+0>>2];c[p>>2]=w;c[o>>2]=x;c[n>>2]=c[p>>2];b=c[c[n>>2]>>2]|0;c[m>>2]=c[o>>2];b=(b-(c[c[m>>2]>>2]|0)|0)/32|0;c[l+0>>2]=c[s+0>>2];c[k+0>>2]=c[q+0>>2];vf(l,k,u,b);i=M;return}function pf(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;qf(c[d>>2]|0);i=b;return}function qf(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;rf(c[d>>2]|0);i=b;return}function rf(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=i;i=i+144|0;w=d+48|0;B=d+8|0;C=d+84|0;A=d;x=d+16|0;y=d+4|0;z=d+132|0;v=d+80|0;u=d+44|0;t=d+20|0;E=d+24|0;e=d+28|0;D=d+32|0;g=d+36|0;f=d+40|0;s=d+76|0;l=d+124|0;k=d+128|0;j=d+52|0;h=d+56|0;p=d+64|0;q=d+68|0;r=d+92|0;m=d+96|0;n=d+100|0;o=d+104|0;I=d+108|0;K=d+116|0;J=d+120|0;H=d+88|0;F=d+72|0;G=d+12|0;c[F>>2]=b;b=c[F>>2]|0;F=c[b>>2]|0;c[K>>2]=H;c[J>>2]=-1;J=c[J>>2]|0;c[I>>2]=c[K>>2];c[d+112>>2]=J;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[d+60>>2]=G;if((F|0)==0){i=d;return}c[D>>2]=b;K=c[D>>2]|0;D=c[K>>2]|0;c[E>>2]=K;c[e>>2]=D;D=c[E>>2]|0;while(1){if((c[e>>2]|0)==(c[D+4>>2]|0))break;c[t>>2]=D;c[u>>2]=(c[t>>2]|0)+8;c[v>>2]=c[u>>2];K=c[v>>2]|0;I=D+4|0;J=(c[I>>2]|0)+ -32|0;c[I>>2]=J;c[w>>2]=J;J=c[w>>2]|0;c[x>>2]=K;c[y>>2]=J;J=c[x>>2]|0;K=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=J;c[C>>2]=K}c[s>>2]=b;c[f>>2]=(c[s>>2]|0)+8;c[g>>2]=c[f>>2];I=c[g>>2]|0;K=c[b>>2]|0;c[h>>2]=b;J=c[h>>2]|0;c[j>>2]=J;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];J=((c[c[l>>2]>>2]|0)-(c[J>>2]|0)|0)/32|0;c[m>>2]=I;c[n>>2]=K;c[o>>2]=J;J=c[n>>2]|0;K=c[o>>2]|0;c[p>>2]=c[m>>2];c[q>>2]=J;c[r>>2]=K;Ix(c[q>>2]|0);i=d;return}function sf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;C=i;i=i+224|0;K=C+100|0;I=C+96|0;J=C+40|0;T=C+32|0;G=C+200|0;H=C+112|0;B=C+88|0;Y=C+156|0;D=C+72|0;y=C+48|0;z=C+52|0;v=C+56|0;w=C+60|0;l=C+64|0;r=C+68|0;s=C+152|0;o=C+92|0;p=C+76|0;m=C+172|0;n=C+180|0;t=C+188|0;R=C+196|0;S=C+204|0;O=C+208|0;P=C+104|0;M=C+108|0;N=C+192|0;F=C+116|0;k=C+120|0;L=C+124|0;_=C+128|0;g=C+148|0;W=C+132|0;X=C+136|0;U=C+140|0;V=C+144|0;h=C+36|0;A=C+44|0;E=C+168|0;Z=C+80|0;u=C+164|0;j=C+160|0;Q=C+84|0;b=C;x=C+184|0;q=C+176|0;c[h>>2]=d;c[A>>2]=e;if((c[A>>2]|0)<=1){i=C;return}c[E>>2]=0;c[Z+0>>2]=c[a+0>>2];c[u>>2]=2;d=c[u>>2]|0;c[U>>2]=a;c[V>>2]=d;U=c[U>>2]|0;c[j+0>>2]=c[U+0>>2];V=c[V>>2]|0;c[W>>2]=j;c[X>>2]=V;W=c[W>>2]|0;c[W>>2]=(c[W>>2]|0)+(c[X>>2]<<5);if((c[u>>2]|0)!=(c[A>>2]|0)){W=c[h>>2]|0;c[L>>2]=j;X=c[c[L>>2]>>2]|0;c[M>>2]=j;c[N>>2]=1;V=0-(c[N>>2]|0)|0;c[O>>2]=c[M>>2];c[P>>2]=V;V=c[O>>2]|0;c[Q+0>>2]=c[V+0>>2];V=c[P>>2]|0;c[R>>2]=Q;c[S>>2]=V;V=c[R>>2]|0;c[V>>2]=(c[V>>2]|0)+(c[S>>2]<<5);c[T>>2]=Q;if(tf(W,X,c[c[T>>2]>>2]|0)|0)f=4}else f=4;if((f|0)==4){c[u>>2]=(c[u>>2]|0)+ -1;c[K>>2]=j;X=c[K>>2]|0;c[X>>2]=(c[X>>2]|0)+ -32}W=c[h>>2]|0;c[I>>2]=Z;X=c[c[I>>2]>>2]|0;c[J>>2]=j;if(!(tf(W,X,c[c[J>>2]>>2]|0)|0)){i=C;return}c[G>>2]=Z;c[H>>2]=c[c[G>>2]>>2];X=c[H>>2]|0;c[b+0>>2]=c[X+0>>2];c[b+4>>2]=c[X+4>>2];c[b+8>>2]=c[X+8>>2];c[b+12>>2]=c[X+12>>2];c[b+16>>2]=c[X+16>>2];c[b+20>>2]=c[X+20>>2];c[b+24>>2]=c[X+24>>2];c[b+28>>2]=c[X+28>>2];do{c[B>>2]=Z;X=c[c[B>>2]>>2]|0;c[Y>>2]=j;c[D>>2]=c[c[Y>>2]>>2];W=c[D>>2]|0;c[X+0>>2]=c[W+0>>2];c[X+4>>2]=c[W+4>>2];c[X+8>>2]=c[W+8>>2];c[X+12>>2]=c[W+12>>2];c[X+16>>2]=c[W+16>>2];c[X+20>>2]=c[W+20>>2];c[X+24>>2]=c[W+24>>2];c[X+28>>2]=c[W+28>>2];c[Z+0>>2]=c[j+0>>2];c[E>>2]=c[u>>2];c[u>>2]=(c[E>>2]|0)+1<<1;if((c[u>>2]|0)>(c[A>>2]|0))break;X=c[u>>2]|0;c[v>>2]=a;c[w>>2]=X;X=c[v>>2]|0;c[x+0>>2]=c[X+0>>2];X=c[w>>2]|0;c[y>>2]=x;c[z>>2]=X;X=c[y>>2]|0;c[X>>2]=(c[X>>2]|0)+(c[z>>2]<<5);c[j+0>>2]=c[x+0>>2];if((c[u>>2]|0)!=(c[A>>2]|0)){W=c[h>>2]|0;c[l>>2]=j;X=c[c[l>>2]>>2]|0;c[m>>2]=j;c[n>>2]=1;V=0-(c[n>>2]|0)|0;c[o>>2]=c[m>>2];c[p>>2]=V;V=c[o>>2]|0;c[q+0>>2]=c[V+0>>2];V=c[p>>2]|0;c[r>>2]=q;c[s>>2]=V;V=c[r>>2]|0;c[V>>2]=(c[V>>2]|0)+(c[s>>2]<<5);c[t>>2]=q;if(tf(W,X,c[c[t>>2]>>2]|0)|0)f=10}else f=10;if((f|0)==10){f=0;c[u>>2]=(c[u>>2]|0)+ -1;c[F>>2]=j;X=c[F>>2]|0;c[X>>2]=(c[X>>2]|0)+ -32}X=c[h>>2]|0;c[k>>2]=j}while(tf(X,b,c[c[k>>2]>>2]|0)|0);c[_>>2]=Z;_=c[c[_>>2]>>2]|0;c[g>>2]=b;Z=c[g>>2]|0;c[_+0>>2]=c[Z+0>>2];c[_+4>>2]=c[Z+4>>2];c[_+8>>2]=c[Z+8>>2];c[_+12>>2]=c[Z+12>>2];c[_+16>>2]=c[Z+16>>2];c[_+20>>2]=c[Z+20>>2];c[_+24>>2]=c[Z+24>>2];c[_+28>>2]=c[Z+28>>2];i=C;return}function tf(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,j=0,k=0;f=i;i=i+16|0;g=f+12|0;k=f+4|0;j=f;c[f+8>>2]=b;c[k>>2]=d;c[j>>2]=e;e=c[k>>2]|0;if(+h[(c[k>>2]|0)+24>>3]!=+h[(c[j>>2]|0)+24>>3]){a[g>>0]=+h[e+24>>3]>+h[(c[j>>2]|0)+24>>3]&1;b=a[g>>0]|0;b=b&1;i=f;return b|0}else{b=S((c[e>>2]|0)-(c[(c[k>>2]|0)+4>>2]|0)|0)|0;a[g>>0]=(b|0)>(S((c[c[j>>2]>>2]|0)-(c[(c[j>>2]|0)+4>>2]|0)|0)|0)&1;b=a[g>>0]|0;b=b&1;i=f;return b|0}return 0}function uf(a,b){a=a|0;b=b|0;var d=0.0,e=0,f=0,g=0.0,h=0,j=0;e=i;i=i+16|0;j=e+8|0;h=e+4|0;f=e;c[j>>2]=a;c[h>>2]=b;c[f>>2]=(c[j>>2]|0)+(c[h>>2]|0);d=+(c[j>>2]|0);d=d*+Df(c[j>>2]|0);g=+(c[h>>2]|0);g=d+g*+Df(c[h>>2]|0);d=+(c[f>>2]|0);d=g-d*+Df(c[f>>2]|0);i=e;return+d}function vf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;t=i;i=i+128|0;E=t+60|0;D=t+32|0;w=t+36|0;x=t+56|0;f=t+84|0;u=t+88|0;v=t+40|0;o=t+80|0;p=t+72|0;l=t+48|0;m=t+52|0;s=t+116|0;C=t+120|0;g=t+64|0;j=t+68|0;A=t+76|0;B=t+92|0;y=t+96|0;z=t+100|0;r=t+104|0;k=t+108|0;q=t+112|0;h=t;n=t+44|0;c[r>>2]=d;c[k>>2]=e;if((c[k>>2]|0)<=1){i=t;return}c[k>>2]=((c[k>>2]|0)-2|0)/2|0;e=c[k>>2]|0;c[y>>2]=a;c[z>>2]=e;e=c[y>>2]|0;c[q+0>>2]=c[e+0>>2];e=c[z>>2]|0;c[A>>2]=q;c[B>>2]=e;e=c[A>>2]|0;c[e>>2]=(c[e>>2]|0)+(c[B>>2]<<5);e=c[r>>2]|0;c[C>>2]=q;d=c[c[C>>2]>>2]|0;c[D>>2]=b;D=c[D>>2]|0;c[D>>2]=(c[D>>2]|0)+ -32;c[E>>2]=D;if(!(tf(e,d,c[c[E>>2]>>2]|0)|0)){i=t;return}c[w>>2]=b;c[x>>2]=c[c[w>>2]>>2];d=c[x>>2]|0;c[h+0>>2]=c[d+0>>2];c[h+4>>2]=c[d+4>>2];c[h+8>>2]=c[d+8>>2];c[h+12>>2]=c[d+12>>2];c[h+16>>2]=c[d+16>>2];c[h+20>>2]=c[d+20>>2];c[h+24>>2]=c[d+24>>2];c[h+28>>2]=c[d+28>>2];do{c[f>>2]=b;d=c[c[f>>2]>>2]|0;c[u>>2]=q;c[v>>2]=c[c[u>>2]>>2];e=c[v>>2]|0;c[d+0>>2]=c[e+0>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];c[d+16>>2]=c[e+16>>2];c[d+20>>2]=c[e+20>>2];c[d+24>>2]=c[e+24>>2];c[d+28>>2]=c[e+28>>2];c[b+0>>2]=c[q+0>>2];if((c[k>>2]|0)==0)break;c[k>>2]=((c[k>>2]|0)-1|0)/2|0;d=c[k>>2]|0;c[l>>2]=a;c[m>>2]=d;d=c[l>>2]|0;c[n+0>>2]=c[d+0>>2];d=c[m>>2]|0;c[o>>2]=n;c[p>>2]=d;d=c[o>>2]|0;c[d>>2]=(c[d>>2]|0)+(c[p>>2]<<5);c[q+0>>2]=c[n+0>>2];d=c[r>>2]|0;c[s>>2]=q}while(tf(d,c[c[s>>2]>>2]|0,h)|0);c[g>>2]=b;d=c[c[g>>2]>>2]|0;c[j>>2]=h;e=c[j>>2]|0;c[d+0>>2]=c[e+0>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];c[d+16>>2]=c[e+16>>2];c[d+20>>2]=c[e+20>>2];c[d+24>>2]=c[e+24>>2];c[d+28>>2]=c[e+28>>2];i=t;return}function wf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;f=i;i=i+160|0;n=f+72|0;g=f+32|0;l=f+108|0;j=f+132|0;s=f+8|0;y=f+76|0;z=f+28|0;w=f+20|0;x=f+24|0;v=f;h=f+96|0;u=f+104|0;E=f+136|0;D=f+140|0;C=f+144|0;B=f+52|0;A=f+56|0;t=f+60|0;F=f+64|0;m=f+68|0;p=f+16|0;q=f+4|0;r=f+84|0;G=f+80|0;H=f+88|0;I=f+92|0;J=f+36|0;K=f+100|0;k=f+40|0;o=f+44|0;e=f+112|0;c[K>>2]=b;c[k>>2]=d;b=c[K>>2]|0;c[J>>2]=b;c[I>>2]=(c[J>>2]|0)+8;c[H>>2]=c[I>>2];c[o>>2]=c[H>>2];c[G>>2]=b;d=c[G>>2]|0;d=(((c[d+4>>2]|0)-(c[d>>2]|0)|0)/32|0)+1|0;c[F>>2]=b;c[m>>2]=d;d=c[F>>2]|0;c[p>>2]=Bf(d)|0;if((c[m>>2]|0)>>>0>(c[p>>2]|0)>>>0)Zt(d);c[A>>2]=d;c[B>>2]=c[A>>2];K=c[B>>2]|0;c[C>>2]=K;c[D>>2]=(c[C>>2]|0)+8;c[E>>2]=c[D>>2];c[q>>2]=((c[c[E>>2]>>2]|0)-(c[K>>2]|0)|0)/32|0;if((c[q>>2]|0)>>>0>=(((c[p>>2]|0)>>>0)/2|0)>>>0)c[t>>2]=c[p>>2];else{c[r>>2]=c[q>>2]<<1;c[h>>2]=r;c[u>>2]=m;K=c[h>>2]|0;J=c[u>>2]|0;a[v+0>>0]=a[f+148>>0]|0;c[w>>2]=K;c[x>>2]=J;J=c[w>>2]|0;K=c[x>>2]|0;c[f+12>>2]=v;c[y>>2]=J;c[z>>2]=K;c[t>>2]=c[((c[c[y>>2]>>2]|0)>>>0<(c[c[z>>2]>>2]|0)>>>0?c[x>>2]|0:c[w>>2]|0)>>2]}K=c[t>>2]|0;c[s>>2]=b;J=c[s>>2]|0;xf(e,K,((c[J+4>>2]|0)-(c[J>>2]|0)|0)/32|0,c[o>>2]|0);J=c[o>>2]|0;c[j>>2]=c[e+8>>2];K=c[j>>2]|0;c[l>>2]=c[k>>2];h=c[l>>2]|0;c[f+48>>2]=J;c[n>>2]=K;c[g>>2]=h;h=c[n>>2]|0;if((h|0)==0){K=e+8|0;J=c[K>>2]|0;J=J+32|0;c[K>>2]=J;yf(b,e);zf(e);i=f;return}K=c[g>>2]|0;c[h+0>>2]=c[K+0>>2];c[h+4>>2]=c[K+4>>2];c[h+8>>2]=c[K+8>>2];c[h+12>>2]=c[K+12>>2];c[h+16>>2]=c[K+16>>2];c[h+20>>2]=c[K+20>>2];c[h+24>>2]=c[K+24>>2];c[h+28>>2]=c[K+28>>2];K=e+8|0;J=c[K>>2]|0;J=J+32|0;c[K>>2]=J;yf(b,e);zf(e);i=f;return}function xf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;k=f+12|0;j=f+8|0;h=f+4|0;g=f;c[k>>2]=a;c[j>>2]=b;c[h>>2]=d;c[g>>2]=e;Cf(c[k>>2]|0,c[j>>2]|0,c[h>>2]|0,c[g>>2]|0);i=f;return}function yf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=i;i=i+144|0;F=d+108|0;H=d+88|0;G=d+80|0;E=d+48|0;C=d+8|0;z=d+12|0;D=d+84|0;B=d+16|0;y=d+20|0;A=d+24|0;w=d+28|0;t=d+32|0;x=d+104|0;v=d+112|0;s=d+120|0;u=d+128|0;m=d+136|0;q=d+52|0;r=d+56|0;n=d+60|0;o=d+64|0;p=d+68|0;k=d+72|0;g=d+76|0;l=d+4|0;j=d;f=d+92|0;h=d+96|0;K=d+100|0;J=d+40|0;I=d+116|0;L=d+44|0;e=d+124|0;c[L>>2]=a;c[e>>2]=b;a=c[L>>2]|0;c[I>>2]=a;c[J>>2]=(c[I>>2]|0)+8;c[K>>2]=c[J>>2];J=c[a>>2]|0;I=c[a+4>>2]|0;b=(c[e>>2]|0)+4|0;c[d+132>>2]=c[K>>2];c[F>>2]=J;c[H>>2]=I;c[G>>2]=b;c[E>>2]=((c[H>>2]|0)-(c[F>>2]|0)|0)/32|0;b=c[G>>2]|0;c[b>>2]=(c[b>>2]|0)+(0-(c[E>>2]|0)<<5);qz(c[c[G>>2]>>2]|0,c[F>>2]|0,c[E>>2]<<5|0)|0;b=(c[e>>2]|0)+4|0;c[B>>2]=a;c[y>>2]=b;c[D>>2]=c[B>>2];c[A>>2]=c[c[D>>2]>>2];c[C>>2]=c[y>>2];c[c[B>>2]>>2]=c[c[C>>2]>>2];c[z>>2]=A;c[c[y>>2]>>2]=c[c[z>>2]>>2];b=(c[e>>2]|0)+8|0;c[v>>2]=a+4;c[s>>2]=b;c[x>>2]=c[v>>2];c[u>>2]=c[c[x>>2]>>2];c[w>>2]=c[s>>2];c[c[v>>2]>>2]=c[c[w>>2]>>2];c[t>>2]=u;c[c[s>>2]>>2]=c[c[t>>2]>>2];c[r>>2]=a;c[q>>2]=(c[r>>2]|0)+8;c[m>>2]=c[q>>2];m=c[m>>2]|0;c[p>>2]=c[e>>2];c[o>>2]=(c[p>>2]|0)+12;c[n>>2]=c[o>>2];b=c[n>>2]|0;c[j>>2]=m;c[f>>2]=b;c[l>>2]=c[j>>2];c[h>>2]=c[c[l>>2]>>2];c[k>>2]=c[f>>2];c[c[j>>2]>>2]=c[c[k>>2]>>2];c[g>>2]=h;c[c[f>>2]>>2]=c[c[g>>2]>>2];c[c[e>>2]>>2]=c[(c[e>>2]|0)+4>>2];c[d+36>>2]=a;i=d;return}function zf(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Af(c[d>>2]|0);i=b;return}function Af(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;r=i;i=i+128|0;l=r+72|0;k=r+44|0;j=r+12|0;h=r+104|0;g=r+24|0;f=r+16|0;q=r+20|0;p=r+76|0;d=r+52|0;e=r+28|0;m=r+32|0;n=r+36|0;o=r+40|0;w=r+108|0;B=r+112|0;C=r+116|0;A=r;x=r+56|0;y=r+60|0;z=r+120|0;v=r+68|0;u=r+88|0;t=r+92|0;E=r+96|0;s=r+100|0;G=r+8|0;F=r+80|0;I=r+84|0;H=r+121|0;J=r+48|0;D=r+64|0;c[D>>2]=b;D=c[D>>2]|0;c[J>>2]=D;J=c[J>>2]|0;b=c[J+4>>2]|0;c[F>>2]=J;c[I>>2]=b;F=c[F>>2]|0;b=c[I>>2]|0;a[G+0>>0]=a[H+0>>0]|0;c[E>>2]=F;c[s>>2]=b;b=c[E>>2]|0;while(1){if((c[s>>2]|0)==(c[b+8>>2]|0))break;c[t>>2]=b;c[u>>2]=(c[t>>2]|0)+12;c[v>>2]=c[u>>2];J=c[(c[v>>2]|0)+4>>2]|0;H=b+8|0;I=(c[H>>2]|0)+ -32|0;c[H>>2]=I;c[w>>2]=I;I=c[w>>2]|0;c[x>>2]=J;c[y>>2]=I;I=c[x>>2]|0;J=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=I;c[C>>2]=J}if((c[D>>2]|0)==0){i=r;return}c[q>>2]=D;c[f>>2]=(c[q>>2]|0)+12;c[g>>2]=c[f>>2];H=c[(c[g>>2]|0)+4>>2]|0;J=c[D>>2]|0;c[h>>2]=D;I=c[h>>2]|0;c[j>>2]=I;c[k>>2]=(c[j>>2]|0)+12;c[l>>2]=c[k>>2];I=((c[c[l>>2]>>2]|0)-(c[I>>2]|0)|0)/32|0;c[m>>2]=H;c[n>>2]=J;c[o>>2]=I;I=c[n>>2]|0;J=c[o>>2]|0;c[p>>2]=c[m>>2];c[d>>2]=I;c[e>>2]=J;Ix(c[d>>2]|0);i=r;return}function Bf(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+80|0;q=h+44|0;r=h+40|0;s=h+8|0;u=h+12|0;t=h+76|0;k=h+36|0;g=h+16|0;f=h+20|0;d=h+68|0;e=h+32|0;l=h;n=h+48|0;j=h+52|0;m=h+77|0;v=h+60|0;w=h+64|0;x=h+28|0;y=h+24|0;p=h+56|0;o=h+72|0;c[y>>2]=b;c[x>>2]=c[y>>2];c[w>>2]=(c[x>>2]|0)+8;c[v>>2]=c[w>>2];c[u>>2]=c[v>>2];b=c[u>>2]|0;a[s+0>>0]=a[t+0>>0]|0;c[r>>2]=b;c[q>>2]=c[r>>2];c[p>>2]=134217727;c[o>>2]=4294967295/2|0;c[n>>2]=p;c[j>>2]=o;b=c[n>>2]|0;j=c[j>>2]|0;a[l+0>>0]=a[m+0>>0]|0;c[d>>2]=b;c[e>>2]=j;j=c[e>>2]|0;b=c[d>>2]|0;c[k>>2]=l;c[g>>2]=j;c[f>>2]=b;i=h;return c[((c[c[g>>2]>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0?c[e>>2]|0:c[d>>2]|0)>>2]|0}function Cf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;q=i;i=i+176|0;C=q+64|0;x=q+60|0;z=q;B=q+148|0;A=q+156|0;y=q+56|0;E=q+12|0;G=q+112|0;F=q+16|0;D=q+20|0;H=q+24|0;J=q+28|0;I=q+32|0;p=q+36|0;g=q+40|0;r=q+108|0;m=q+144|0;n=q+160|0;f=q+164|0;u=q+68|0;v=q+76|0;w=q+80|0;t=q+84|0;o=q+92|0;h=q+96|0;j=q+100|0;N=q+104|0;O=q+124|0;P=q+44|0;M=q+8|0;Q=q+48|0;k=q+132|0;l=q+52|0;K=q+140|0;L=q+120|0;s=q+116|0;c[Q>>2]=a;c[k>>2]=b;c[l>>2]=d;c[K>>2]=e;e=c[Q>>2]|0;c[O>>2]=M;c[P>>2]=-1;b=c[P>>2]|0;c[N>>2]=c[O>>2];c[q+4>>2]=b;c[c[N>>2]>>2]=0;c[L>>2]=c[M>>2];c[q+128>>2]=L;b=c[K>>2]|0;c[H>>2]=e+12;c[J>>2]=0;c[I>>2]=b;b=c[J>>2]|0;d=c[I>>2]|0;c[G>>2]=c[H>>2];c[F>>2]=b;c[D>>2]=d;d=c[G>>2]|0;c[E>>2]=F;b=c[c[E>>2]>>2]|0;c[C>>2]=c[D>>2];a=c[C>>2]|0;c[B>>2]=d;c[A>>2]=b;c[y>>2]=a;a=c[B>>2]|0;c[z>>2]=A;c[a>>2]=c[c[z>>2]>>2];c[x>>2]=c[y>>2];c[a+4>>2]=c[x>>2];if((c[k>>2]|0)!=0){c[r>>2]=e;c[g>>2]=(c[r>>2]|0)+12;c[p>>2]=c[g>>2];Q=c[k>>2]|0;c[n>>2]=c[(c[p>>2]|0)+4>>2];c[f>>2]=Q;Q=c[f>>2]|0;c[q+136>>2]=c[n>>2];c[m>>2]=Q;c[q+152>>2]=0;Q=Gx(c[m>>2]<<5)|0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P<<5)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P<<5)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}else{c[v>>2]=t;c[w>>2]=-1;Q=c[w>>2]|0;c[u>>2]=c[v>>2];c[q+72>>2]=Q;c[c[u>>2]>>2]=0;c[s>>2]=c[t>>2];c[q+88>>2]=s;Q=0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P<<5)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P<<5)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}}function Df(a){a=a|0;var b=0,d=0,e=0,f=0.0;b=i;i=i+16|0;d=b;e=b+8|0;c[e>>2]=a;a=c[e>>2]|0;if((c[e>>2]|0)<256){h[d>>3]=+g[128536+(a<<2)>>2];f=+h[d>>3];i=b;return+f}else{h[d>>3]=+Fa(+(+(a|0)));f=+h[d>>3];i=b;return+f}return 0.0}function Ef(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;f=i;i=i+192|0;N=f+72|0;P=f+68|0;Q=f+64|0;R=f+164|0;S=f+172|0;D=f+156|0;E=f+12|0;F=f+128|0;G=f+16|0;H=f+20|0;I=f+24|0;J=f+28|0;K=f+32|0;L=f+36|0;M=f+40|0;z=f+124|0;y=f+44|0;A=f+48|0;B=f+144|0;w=f+152|0;x=f+160|0;g=f+168|0;u=f+176|0;t=f+76|0;s=f+80|0;q=f+84|0;r=f+88|0;o=f+92|0;e=f+96|0;n=f+100|0;m=f+120|0;l=f+104|0;k=f+108|0;j=f+112|0;h=f+116|0;T=f+8|0;U=f+4|0;V=f+140|0;W=f+52|0;X=f+136|0;Y=f+132|0;O=f+56|0;v=f+148|0;p=f;C=f+60|0;c[O>>2]=b;c[v>>2]=d;d=c[O>>2]|0;O=c[v>>2]|0;c[Y>>2]=d;c[X>>2]=c[Y>>2];c[W>>2]=(c[X>>2]|0)+4;c[V>>2]=c[W>>2];c[U>>2]=c[V>>2];c[T>>2]=c[U>>2];b=c[c[T>>2]>>2]|0;c[S>>2]=d;c[R>>2]=(c[S>>2]|0)+4;c[Q>>2]=c[R>>2];c[P>>2]=c[Q>>2];c[N>>2]=c[P>>2];Ff(p,d,O,b,c[N>>2]|0);c[M>>2]=d;c[L>>2]=c[M>>2];c[K>>2]=(c[L>>2]|0)+4;c[J>>2]=c[K>>2];c[I>>2]=c[J>>2];c[H>>2]=c[I>>2];b=c[H>>2]|0;c[F>>2]=C;c[G>>2]=b;b=c[G>>2]|0;c[D>>2]=c[F>>2];c[E>>2]=b;c[c[D>>2]>>2]=c[E>>2];c[A>>2]=p;c[B>>2]=C;b=c[B>>2]|0;c[z>>2]=c[A>>2];c[y>>2]=b;if((c[c[z>>2]>>2]|0)==(c[c[y>>2]>>2]|0)^1?(c[g>>2]=d,c[x>>2]=(c[g>>2]|0)+8,c[w>>2]=c[x>>2],W=c[w>>2]|0,X=c[v>>2]|0,c[u>>2]=p,Y=(c[c[u>>2]>>2]|0)+16|0,c[f+180>>2]=W,c[t>>2]=X,c[s>>2]=Y,(c[c[t>>2]>>2]|0)>=(c[c[s>>2]>>2]|0)):0){c[a+0>>2]=c[p+0>>2];i=f;return}c[h>>2]=d;c[j>>2]=c[h>>2];c[k>>2]=(c[j>>2]|0)+4;c[l>>2]=c[k>>2];c[m>>2]=c[l>>2];c[n>>2]=c[m>>2];Y=c[n>>2]|0;c[o>>2]=a;c[e>>2]=Y;Y=c[e>>2]|0;c[q>>2]=c[o>>2];c[r>>2]=Y;c[c[q>>2]>>2]=c[r>>2];i=f;return}function Ff(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;m=i;i=i+96|0;n=m+76|0;q=m+48|0;p=m+36|0;o=m+24|0;t=m+68|0;g=m+8|0;v=m+12|0;k=m+56|0;l=m+64|0;h=m+72|0;j=m+80|0;z=m+28|0;A=m+32|0;x=m+40|0;y=m+44|0;w=m;C=m+52|0;s=m+16|0;r=m+60|0;u=m+4|0;B=m+20|0;c[C>>2]=b;c[s>>2]=d;c[r>>2]=e;c[u>>2]=f;f=c[C>>2]|0;while(1){C=c[r>>2]|0;c[x>>2]=w;c[y>>2]=-1;b=c[y>>2]|0;c[z>>2]=c[x>>2];c[A>>2]=b;c[c[z>>2]>>2]=0;c[B>>2]=c[w>>2];c[n>>2]=B;if((C|0)==0)break;c[o>>2]=f;c[p>>2]=(c[o>>2]|0)+8;c[q>>2]=c[p>>2];C=(c[r>>2]|0)+16|0;e=c[s>>2]|0;c[t>>2]=c[q>>2];c[g>>2]=C;c[v>>2]=e;e=c[r>>2]|0;if((c[c[g>>2]>>2]|0)<(c[c[v>>2]>>2]|0)){c[r>>2]=c[e+4>>2];continue}else{c[u>>2]=e;c[r>>2]=c[c[r>>2]>>2];continue}}C=c[u>>2]|0;c[h>>2]=a;c[j>>2]=C;C=c[j>>2]|0;c[k>>2]=c[h>>2];c[l>>2]=C;c[c[k>>2]>>2]=c[l>>2];i=m;return}function Gf(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;u=i;i=i+144|0;l=u+16|0;j=u+8|0;f=u+108|0;g=u+24|0;q=u+104|0;n=u+112|0;h=u+116|0;m=u+120|0;o=u;p=u+96|0;k=u+124|0;r=u+100|0;s=u+12|0;t=u+4|0;c[l>>2]=b;c[j>>2]=e;c[f>>2]=1;b=g+0|0;e=b+72|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(e|0));c[q>>2]=0;c[n>>2]=8;c[h>>2]=0;a:while(1){if((c[h>>2]|0)>=(c[j>>2]|0))break;c[m>>2]=d[(c[l>>2]|0)+(c[h>>2]|0)>>0];if((c[m>>2]|0)>(c[f>>2]|0))c[f>>2]=c[m>>2];c[o>>2]=1;c[p>>2]=(c[h>>2]|0)+1;while(1){if((c[p>>2]|0)<(c[j>>2]|0))b=(d[(c[l>>2]|0)+(c[p>>2]|0)>>0]|0|0)==(c[m>>2]|0);else b=0;e=c[o>>2]|0;if(!b)break;c[o>>2]=e+1;c[p>>2]=(c[p>>2]|0)+1}c[h>>2]=(c[h>>2]|0)+e;if((c[h>>2]|0)==(c[j>>2]|0)?(c[m>>2]|0)==0:0)break;if((c[m>>2]|0)==0){e=c[o>>2]|0;if((c[o>>2]|0)<3){c[g>>2]=(c[g>>2]|0)+e;continue}c[o>>2]=e-2;while(1){if((c[o>>2]|0)<=0)continue a;b=g+68|0;c[b>>2]=(c[b>>2]|0)+1;c[o>>2]=c[o>>2]>>3}}c[q>>2]=c[h>>2];if((c[m>>2]|0)!=(c[n>>2]|0)){b=g+(c[m>>2]<<2)|0;c[b>>2]=(c[b>>2]|0)+1;c[o>>2]=(c[o>>2]|0)+ -1}c[n>>2]=c[m>>2];e=c[o>>2]|0;if((c[o>>2]|0)<3){b=g+(c[m>>2]<<2)|0;c[b>>2]=(c[b>>2]|0)+e;continue}c[o>>2]=e-2;while(1){if((c[o>>2]|0)<=0)continue a;b=g+64|0;c[b>>2]=(c[b>>2]|0)+1;c[o>>2]=c[o>>2]>>2}}b=k+0|0;e=b+18|0;do{a[b>>0]=0;b=b+1|0}while((b|0)<(e|0));Ml(g,18,7,k);b=k+16|0;a[b>>0]=(d[b>>0]|0)+2;b=k+17|0;a[b>>0]=(d[b>>0]|0)+3;c[r>>2]=0;c[s>>2]=18+(c[f>>2]<<1);c[t>>2]=0;while(1){if((c[t>>2]|0)>=18)break;b=da(c[g+(c[t>>2]<<2)>>2]|0,d[k+(c[t>>2]|0)>>0]|0)|0;c[s>>2]=(c[s>>2]|0)+b;c[r>>2]=(c[r>>2]|0)+(c[g+(c[t>>2]<<2)>>2]|0);c[t>>2]=(c[t>>2]|0)+1}i=u;return c[s>>2]|0}function Hf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;t=i;i=i+144|0;h=t+60|0;u=t+48|0;v=t+124|0;e=t+116|0;f=t+8|0;r=t;o=t+84|0;q=t+52|0;A=t+40|0;z=t+104|0;y=t+112|0;x=t+120|0;w=t+128|0;g=t+132|0;F=t+136|0;p=t+64|0;l=t+68|0;m=t+72|0;n=t+76|0;E=t+16|0;D=t+88|0;C=t+96|0;B=t+4|0;G=t+92|0;H=t+44|0;I=t+100|0;J=t+108|0;s=t+12|0;k=t+80|0;j=t+20|0;c[J>>2]=b;c[s>>2]=d;d=c[J>>2]|0;c[I>>2]=d;c[H>>2]=(c[I>>2]|0)+8;c[G>>2]=c[H>>2];if((((c[c[G>>2]>>2]|0)-(c[d+4>>2]|0)|0)/4|0)>>>0>=(c[s>>2]|0)>>>0){If(d,c[s>>2]|0);i=t;return}c[B>>2]=d;c[C>>2]=(c[B>>2]|0)+8;c[D>>2]=c[C>>2];c[k>>2]=c[D>>2];c[E>>2]=d;B=c[E>>2]|0;B=(((c[B+4>>2]|0)-(c[B>>2]|0)|0)/4|0)+(c[s>>2]|0)|0;c[F>>2]=d;c[p>>2]=B;B=c[F>>2]|0;c[l>>2]=Of(B)|0;if((c[p>>2]|0)>>>0>(c[l>>2]|0)>>>0)Zt(B);c[w>>2]=B;c[x>>2]=c[w>>2];J=c[x>>2]|0;c[y>>2]=J;c[z>>2]=(c[y>>2]|0)+8;c[A>>2]=c[z>>2];c[m>>2]=((c[c[A>>2]>>2]|0)-(c[J>>2]|0)|0)/4|0;if((c[m>>2]|0)>>>0>=(((c[l>>2]|0)>>>0)/2|0)>>>0)c[g>>2]=c[l>>2];else{c[n>>2]=c[m>>2]<<1;c[o>>2]=n;c[q>>2]=p;J=c[o>>2]|0;I=c[q>>2]|0;a[r+0>>0]=a[t+140>>0]|0;c[e>>2]=J;c[f>>2]=I;I=c[e>>2]|0;J=c[f>>2]|0;c[t+56>>2]=r;c[u>>2]=I;c[v>>2]=J;c[g>>2]=c[((c[c[u>>2]>>2]|0)>>>0<(c[c[v>>2]>>2]|0)>>>0?c[f>>2]|0:c[e>>2]|0)>>2]}I=c[g>>2]|0;c[h>>2]=d;J=c[h>>2]|0;Jf(j,I,((c[J+4>>2]|0)-(c[J>>2]|0)|0)/4|0,c[k>>2]|0);Kf(j,c[s>>2]|0);Lf(d,j);Mf(j);i=t;return}function If(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;g=d+28|0;h=d+16|0;j=d+4|0;k=d+8|0;l=d+32|0;m=d;n=d+12|0;e=d+24|0;f=d+20|0;c[n>>2]=a;c[e>>2]=b;a=c[n>>2]|0;c[m>>2]=a;c[l>>2]=(c[m>>2]|0)+8;c[k>>2]=c[l>>2];c[f>>2]=c[k>>2];do{n=c[f>>2]|0;c[g>>2]=c[a+4>>2];b=c[g>>2]|0;c[h>>2]=n;c[j>>2]=b;b=c[j>>2]|0;if((b|0)!=0)c[b>>2]=0;n=a+4|0;c[n>>2]=(c[n>>2]|0)+4;c[e>>2]=(c[e>>2]|0)+ -1}while((c[e>>2]|0)>>>0>0);i=d;return}function Jf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;k=f+12|0;j=f+8|0;h=f+4|0;g=f;c[k>>2]=a;c[j>>2]=b;c[h>>2]=d;c[g>>2]=e;Pf(c[k>>2]|0,c[j>>2]|0,c[h>>2]|0,c[g>>2]|0);i=f;return}function Kf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;g=d+28|0;h=d+16|0;j=d+4|0;k=d+8|0;l=d+32|0;m=d;n=d+12|0;e=d+24|0;f=d+20|0;c[n>>2]=a;c[e>>2]=b;a=c[n>>2]|0;c[m>>2]=a;c[l>>2]=(c[m>>2]|0)+12;c[k>>2]=c[l>>2];c[f>>2]=c[(c[k>>2]|0)+4>>2];do{n=c[f>>2]|0;c[g>>2]=c[a+8>>2];b=c[g>>2]|0;c[h>>2]=n;c[j>>2]=b;b=c[j>>2]|0;if((b|0)!=0)c[b>>2]=0;n=a+8|0;c[n>>2]=(c[n>>2]|0)+4;c[e>>2]=(c[e>>2]|0)+ -1}while((c[e>>2]|0)>>>0>0);i=d;return}function Lf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=i;i=i+144|0;F=d+108|0;H=d+88|0;G=d+80|0;E=d+48|0;C=d+8|0;z=d+12|0;D=d+84|0;B=d+16|0;y=d+20|0;A=d+24|0;w=d+28|0;t=d+32|0;x=d+104|0;v=d+112|0;s=d+120|0;u=d+128|0;m=d+136|0;q=d+52|0;r=d+56|0;n=d+60|0;o=d+64|0;p=d+68|0;k=d+72|0;g=d+76|0;l=d+4|0;j=d;f=d+92|0;h=d+96|0;K=d+100|0;J=d+40|0;I=d+116|0;L=d+44|0;e=d+124|0;c[L>>2]=a;c[e>>2]=b;a=c[L>>2]|0;c[I>>2]=a;c[J>>2]=(c[I>>2]|0)+8;c[K>>2]=c[J>>2];J=c[a>>2]|0;I=c[a+4>>2]|0;b=(c[e>>2]|0)+4|0;c[d+132>>2]=c[K>>2];c[F>>2]=J;c[H>>2]=I;c[G>>2]=b;c[E>>2]=((c[H>>2]|0)-(c[F>>2]|0)|0)/4|0;b=c[G>>2]|0;c[b>>2]=(c[b>>2]|0)+(0-(c[E>>2]|0)<<2);qz(c[c[G>>2]>>2]|0,c[F>>2]|0,c[E>>2]<<2|0)|0;b=(c[e>>2]|0)+4|0;c[B>>2]=a;c[y>>2]=b;c[D>>2]=c[B>>2];c[A>>2]=c[c[D>>2]>>2];c[C>>2]=c[y>>2];c[c[B>>2]>>2]=c[c[C>>2]>>2];c[z>>2]=A;c[c[y>>2]>>2]=c[c[z>>2]>>2];b=(c[e>>2]|0)+8|0;c[v>>2]=a+4;c[s>>2]=b;c[x>>2]=c[v>>2];c[u>>2]=c[c[x>>2]>>2];c[w>>2]=c[s>>2];c[c[v>>2]>>2]=c[c[w>>2]>>2];c[t>>2]=u;c[c[s>>2]>>2]=c[c[t>>2]>>2];c[r>>2]=a;c[q>>2]=(c[r>>2]|0)+8;c[m>>2]=c[q>>2];m=c[m>>2]|0;c[p>>2]=c[e>>2];c[o>>2]=(c[p>>2]|0)+12;c[n>>2]=c[o>>2];b=c[n>>2]|0;c[j>>2]=m;c[f>>2]=b;c[l>>2]=c[j>>2];c[h>>2]=c[c[l>>2]>>2];c[k>>2]=c[f>>2];c[c[j>>2]>>2]=c[c[k>>2]>>2];c[g>>2]=h;c[c[f>>2]>>2]=c[c[g>>2]>>2];c[c[e>>2]>>2]=c[(c[e>>2]|0)+4>>2];c[d+36>>2]=a;i=d;return}function Mf(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Nf(c[d>>2]|0);i=b;return}function Nf(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;r=i;i=i+128|0;l=r+72|0;k=r+44|0;j=r+12|0;h=r+104|0;g=r+24|0;f=r+16|0;q=r+20|0;p=r+76|0;d=r+52|0;e=r+28|0;m=r+32|0;n=r+36|0;o=r+40|0;w=r+108|0;B=r+112|0;C=r+116|0;A=r;x=r+56|0;y=r+60|0;z=r+120|0;v=r+68|0;u=r+88|0;t=r+92|0;E=r+96|0;s=r+100|0;G=r+8|0;F=r+80|0;I=r+84|0;H=r+121|0;J=r+48|0;D=r+64|0;c[D>>2]=b;D=c[D>>2]|0;c[J>>2]=D;J=c[J>>2]|0;b=c[J+4>>2]|0;c[F>>2]=J;c[I>>2]=b;F=c[F>>2]|0;b=c[I>>2]|0;a[G+0>>0]=a[H+0>>0]|0;c[E>>2]=F;c[s>>2]=b;b=c[E>>2]|0;while(1){if((c[s>>2]|0)==(c[b+8>>2]|0))break;c[t>>2]=b;c[u>>2]=(c[t>>2]|0)+12;c[v>>2]=c[u>>2];J=c[(c[v>>2]|0)+4>>2]|0;H=b+8|0;I=(c[H>>2]|0)+ -4|0;c[H>>2]=I;c[w>>2]=I;I=c[w>>2]|0;c[x>>2]=J;c[y>>2]=I;I=c[x>>2]|0;J=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=I;c[C>>2]=J}if((c[D>>2]|0)==0){i=r;return}c[q>>2]=D;c[f>>2]=(c[q>>2]|0)+12;c[g>>2]=c[f>>2];H=c[(c[g>>2]|0)+4>>2]|0;J=c[D>>2]|0;c[h>>2]=D;I=c[h>>2]|0;c[j>>2]=I;c[k>>2]=(c[j>>2]|0)+12;c[l>>2]=c[k>>2];I=((c[c[l>>2]>>2]|0)-(c[I>>2]|0)|0)/4|0;c[m>>2]=H;c[n>>2]=J;c[o>>2]=I;I=c[n>>2]|0;J=c[o>>2]|0;c[p>>2]=c[m>>2];c[d>>2]=I;c[e>>2]=J;Ix(c[d>>2]|0);i=r;return}function Of(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+80|0;q=h+44|0;r=h+40|0;s=h+8|0;u=h+12|0;t=h+76|0;k=h+36|0;g=h+16|0;f=h+20|0;d=h+68|0;e=h+32|0;l=h;n=h+48|0;j=h+52|0;m=h+77|0;v=h+60|0;w=h+64|0;x=h+28|0;y=h+24|0;p=h+56|0;o=h+72|0;c[y>>2]=b;c[x>>2]=c[y>>2];c[w>>2]=(c[x>>2]|0)+8;c[v>>2]=c[w>>2];c[u>>2]=c[v>>2];b=c[u>>2]|0;a[s+0>>0]=a[t+0>>0]|0;c[r>>2]=b;c[q>>2]=c[r>>2];c[p>>2]=1073741823;c[o>>2]=4294967295/2|0;c[n>>2]=p;c[j>>2]=o;b=c[n>>2]|0;j=c[j>>2]|0;a[l+0>>0]=a[m+0>>0]|0;c[d>>2]=b;c[e>>2]=j;j=c[e>>2]|0;b=c[d>>2]|0;c[k>>2]=l;c[g>>2]=j;c[f>>2]=b;i=h;return c[((c[c[g>>2]>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0?c[e>>2]|0:c[d>>2]|0)>>2]|0}function Pf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;q=i;i=i+176|0;C=q+64|0;x=q+60|0;z=q;B=q+148|0;A=q+156|0;y=q+56|0;E=q+12|0;G=q+112|0;F=q+16|0;D=q+20|0;H=q+24|0;J=q+28|0;I=q+32|0;p=q+36|0;g=q+40|0;r=q+108|0;m=q+144|0;n=q+160|0;f=q+164|0;u=q+68|0;v=q+76|0;w=q+80|0;t=q+84|0;o=q+92|0;h=q+96|0;j=q+100|0;N=q+104|0;O=q+124|0;P=q+44|0;M=q+8|0;Q=q+48|0;k=q+132|0;l=q+52|0;K=q+140|0;L=q+120|0;s=q+116|0;c[Q>>2]=a;c[k>>2]=b;c[l>>2]=d;c[K>>2]=e;e=c[Q>>2]|0;c[O>>2]=M;c[P>>2]=-1;b=c[P>>2]|0;c[N>>2]=c[O>>2];c[q+4>>2]=b;c[c[N>>2]>>2]=0;c[L>>2]=c[M>>2];c[q+128>>2]=L;b=c[K>>2]|0;c[H>>2]=e+12;c[J>>2]=0;c[I>>2]=b;b=c[J>>2]|0;d=c[I>>2]|0;c[G>>2]=c[H>>2];c[F>>2]=b;c[D>>2]=d;d=c[G>>2]|0;c[E>>2]=F;b=c[c[E>>2]>>2]|0;c[C>>2]=c[D>>2];a=c[C>>2]|0;c[B>>2]=d;c[A>>2]=b;c[y>>2]=a;a=c[B>>2]|0;c[z>>2]=A;c[a>>2]=c[c[z>>2]>>2];c[x>>2]=c[y>>2];c[a+4>>2]=c[x>>2];if((c[k>>2]|0)!=0){c[r>>2]=e;c[g>>2]=(c[r>>2]|0)+12;c[p>>2]=c[g>>2];Q=c[k>>2]|0;c[n>>2]=c[(c[p>>2]|0)+4>>2];c[f>>2]=Q;Q=c[f>>2]|0;c[q+136>>2]=c[n>>2];c[m>>2]=Q;c[q+152>>2]=0;Q=Gx(c[m>>2]<<2)|0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P<<2)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P<<2)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}else{c[v>>2]=t;c[w>>2]=-1;Q=c[w>>2]|0;c[u>>2]=c[v>>2];c[q+72>>2]=Q;c[c[u>>2]>>2]=0;c[s>>2]=c[t>>2];c[q+88>>2]=s;Q=0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P<<2)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P<<2)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}}function Qf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;t=i;i=i+144|0;h=t+60|0;u=t+48|0;v=t+124|0;e=t+116|0;f=t+8|0;r=t;o=t+84|0;q=t+52|0;A=t+40|0;z=t+104|0;y=t+112|0;x=t+120|0;w=t+128|0;g=t+132|0;F=t+136|0;p=t+64|0;l=t+68|0;m=t+72|0;n=t+76|0;E=t+16|0;D=t+88|0;C=t+96|0;B=t+4|0;G=t+92|0;H=t+44|0;I=t+100|0;J=t+108|0;s=t+12|0;k=t+80|0;j=t+20|0;c[J>>2]=b;c[s>>2]=d;d=c[J>>2]|0;c[I>>2]=d;c[H>>2]=(c[I>>2]|0)+8;c[G>>2]=c[H>>2];if((((c[c[G>>2]>>2]|0)-(c[d+4>>2]|0)|0)/2096|0)>>>0>=(c[s>>2]|0)>>>0){Rf(d,c[s>>2]|0);i=t;return}c[B>>2]=d;c[C>>2]=(c[B>>2]|0)+8;c[D>>2]=c[C>>2];c[k>>2]=c[D>>2];c[E>>2]=d;B=c[E>>2]|0;B=(((c[B+4>>2]|0)-(c[B>>2]|0)|0)/2096|0)+(c[s>>2]|0)|0;c[F>>2]=d;c[p>>2]=B;B=c[F>>2]|0;c[l>>2]=_e(B)|0;if((c[p>>2]|0)>>>0>(c[l>>2]|0)>>>0)Zt(B);c[w>>2]=B;c[x>>2]=c[w>>2];J=c[x>>2]|0;c[y>>2]=J;c[z>>2]=(c[y>>2]|0)+8;c[A>>2]=c[z>>2];c[m>>2]=((c[c[A>>2]>>2]|0)-(c[J>>2]|0)|0)/2096|0;if((c[m>>2]|0)>>>0>=(((c[l>>2]|0)>>>0)/2|0)>>>0)c[g>>2]=c[l>>2];else{c[n>>2]=c[m>>2]<<1;c[o>>2]=n;c[q>>2]=p;J=c[o>>2]|0;I=c[q>>2]|0;a[r+0>>0]=a[t+140>>0]|0;c[e>>2]=J;c[f>>2]=I;I=c[e>>2]|0;J=c[f>>2]|0;c[t+56>>2]=r;c[u>>2]=I;c[v>>2]=J;c[g>>2]=c[((c[c[u>>2]>>2]|0)>>>0<(c[c[v>>2]>>2]|0)>>>0?c[f>>2]|0:c[e>>2]|0)>>2]}I=c[g>>2]|0;c[h>>2]=d;J=c[h>>2]|0;Sf(j,I,((c[J+4>>2]|0)-(c[J>>2]|0)|0)/2096|0,c[k>>2]|0);Tf(j,c[s>>2]|0);Uf(d,j);Vf(j);i=t;return}function Rf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;g=d+28|0;h=d+16|0;j=d+4|0;k=d+8|0;l=d+32|0;m=d;n=d+12|0;e=d+24|0;f=d+20|0;c[n>>2]=a;c[e>>2]=b;a=c[n>>2]|0;c[m>>2]=a;c[l>>2]=(c[m>>2]|0)+8;c[k>>2]=c[l>>2];c[f>>2]=c[k>>2];do{n=c[f>>2]|0;c[g>>2]=c[a+4>>2];b=c[g>>2]|0;c[h>>2]=n;c[j>>2]=b;b=c[j>>2]|0;if((b|0)!=0)se(b);n=a+4|0;c[n>>2]=(c[n>>2]|0)+2096;c[e>>2]=(c[e>>2]|0)+ -1}while((c[e>>2]|0)>>>0>0);i=d;return}function Sf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;k=f+12|0;j=f+8|0;h=f+4|0;g=f;c[k>>2]=a;c[j>>2]=b;c[h>>2]=d;c[g>>2]=e;Xf(c[k>>2]|0,c[j>>2]|0,c[h>>2]|0,c[g>>2]|0);i=f;return}function Tf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;g=d+28|0;h=d+16|0;j=d+4|0;k=d+8|0;l=d+32|0;m=d;n=d+12|0;e=d+24|0;f=d+20|0;c[n>>2]=a;c[e>>2]=b;a=c[n>>2]|0;c[m>>2]=a;c[l>>2]=(c[m>>2]|0)+12;c[k>>2]=c[l>>2];c[f>>2]=c[(c[k>>2]|0)+4>>2];do{n=c[f>>2]|0;c[g>>2]=c[a+8>>2];b=c[g>>2]|0;c[h>>2]=n;c[j>>2]=b;b=c[j>>2]|0;if((b|0)!=0)se(b);n=a+8|0;c[n>>2]=(c[n>>2]|0)+2096;c[e>>2]=(c[e>>2]|0)+ -1}while((c[e>>2]|0)>>>0>0);i=d;return}function Uf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=i;i=i+144|0;F=d+108|0;H=d+88|0;G=d+80|0;E=d+48|0;C=d+8|0;z=d+12|0;D=d+84|0;B=d+16|0;y=d+20|0;A=d+24|0;w=d+28|0;t=d+32|0;x=d+104|0;v=d+112|0;s=d+120|0;u=d+128|0;m=d+136|0;q=d+52|0;r=d+56|0;n=d+60|0;o=d+64|0;p=d+68|0;k=d+72|0;g=d+76|0;l=d+4|0;j=d;f=d+92|0;h=d+96|0;K=d+100|0;J=d+40|0;I=d+116|0;L=d+44|0;e=d+124|0;c[L>>2]=a;c[e>>2]=b;a=c[L>>2]|0;c[I>>2]=a;c[J>>2]=(c[I>>2]|0)+8;c[K>>2]=c[J>>2];J=c[a>>2]|0;I=c[a+4>>2]|0;b=(c[e>>2]|0)+4|0;c[d+132>>2]=c[K>>2];c[F>>2]=J;c[H>>2]=I;c[G>>2]=b;c[E>>2]=((c[H>>2]|0)-(c[F>>2]|0)|0)/2096|0;b=c[G>>2]|0;c[b>>2]=(c[b>>2]|0)+((0-(c[E>>2]|0)|0)*2096|0);qz(c[c[G>>2]>>2]|0,c[F>>2]|0,(c[E>>2]|0)*2096|0)|0;b=(c[e>>2]|0)+4|0;c[B>>2]=a;c[y>>2]=b;c[D>>2]=c[B>>2];c[A>>2]=c[c[D>>2]>>2];c[C>>2]=c[y>>2];c[c[B>>2]>>2]=c[c[C>>2]>>2];c[z>>2]=A;c[c[y>>2]>>2]=c[c[z>>2]>>2];b=(c[e>>2]|0)+8|0;c[v>>2]=a+4;c[s>>2]=b;c[x>>2]=c[v>>2];c[u>>2]=c[c[x>>2]>>2];c[w>>2]=c[s>>2];c[c[v>>2]>>2]=c[c[w>>2]>>2];c[t>>2]=u;c[c[s>>2]>>2]=c[c[t>>2]>>2];c[r>>2]=a;c[q>>2]=(c[r>>2]|0)+8;c[m>>2]=c[q>>2];m=c[m>>2]|0;c[p>>2]=c[e>>2];c[o>>2]=(c[p>>2]|0)+12;c[n>>2]=c[o>>2];b=c[n>>2]|0;c[j>>2]=m;c[f>>2]=b;c[l>>2]=c[j>>2];c[h>>2]=c[c[l>>2]>>2];c[k>>2]=c[f>>2];c[c[j>>2]>>2]=c[c[k>>2]>>2];c[g>>2]=h;c[c[f>>2]>>2]=c[c[g>>2]>>2];c[c[e>>2]>>2]=c[(c[e>>2]|0)+4>>2];c[d+36>>2]=a;i=d;return}function Vf(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Wf(c[d>>2]|0);i=b;return}function Wf(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;r=i;i=i+128|0;l=r+72|0;k=r+44|0;j=r+12|0;h=r+104|0;g=r+24|0;f=r+16|0;q=r+20|0;p=r+76|0;d=r+52|0;e=r+28|0;m=r+32|0;n=r+36|0;o=r+40|0;w=r+108|0;B=r+112|0;C=r+116|0;A=r;x=r+56|0;y=r+60|0;z=r+120|0;v=r+68|0;u=r+88|0;t=r+92|0;E=r+96|0;s=r+100|0;G=r+8|0;F=r+80|0;I=r+84|0;H=r+121|0;J=r+48|0;D=r+64|0;c[D>>2]=b;D=c[D>>2]|0;c[J>>2]=D;J=c[J>>2]|0;b=c[J+4>>2]|0;c[F>>2]=J;c[I>>2]=b;F=c[F>>2]|0;b=c[I>>2]|0;a[G+0>>0]=a[H+0>>0]|0;c[E>>2]=F;c[s>>2]=b;b=c[E>>2]|0;while(1){if((c[s>>2]|0)==(c[b+8>>2]|0))break;c[t>>2]=b;c[u>>2]=(c[t>>2]|0)+12;c[v>>2]=c[u>>2];J=c[(c[v>>2]|0)+4>>2]|0;H=b+8|0;I=(c[H>>2]|0)+ -2096|0;c[H>>2]=I;c[w>>2]=I;I=c[w>>2]|0;c[x>>2]=J;c[y>>2]=I;I=c[x>>2]|0;J=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=I;c[C>>2]=J}if((c[D>>2]|0)==0){i=r;return}c[q>>2]=D;c[f>>2]=(c[q>>2]|0)+12;c[g>>2]=c[f>>2];H=c[(c[g>>2]|0)+4>>2]|0;J=c[D>>2]|0;c[h>>2]=D;I=c[h>>2]|0;c[j>>2]=I;c[k>>2]=(c[j>>2]|0)+12;c[l>>2]=c[k>>2];I=((c[c[l>>2]>>2]|0)-(c[I>>2]|0)|0)/2096|0;c[m>>2]=H;c[n>>2]=J;c[o>>2]=I;I=c[n>>2]|0;J=c[o>>2]|0;c[p>>2]=c[m>>2];c[d>>2]=I;c[e>>2]=J;Ix(c[d>>2]|0);i=r;return}function Xf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;q=i;i=i+176|0;C=q+64|0;x=q+60|0;z=q;B=q+148|0;A=q+156|0;y=q+56|0;E=q+12|0;G=q+112|0;F=q+16|0;D=q+20|0;H=q+24|0;J=q+28|0;I=q+32|0;p=q+36|0;g=q+40|0;r=q+108|0;m=q+144|0;n=q+160|0;f=q+164|0;u=q+68|0;v=q+76|0;w=q+80|0;t=q+84|0;o=q+92|0;h=q+96|0;j=q+100|0;N=q+104|0;O=q+124|0;P=q+44|0;M=q+8|0;Q=q+48|0;k=q+132|0;l=q+52|0;K=q+140|0;L=q+120|0;s=q+116|0;c[Q>>2]=a;c[k>>2]=b;c[l>>2]=d;c[K>>2]=e;e=c[Q>>2]|0;c[O>>2]=M;c[P>>2]=-1;b=c[P>>2]|0;c[N>>2]=c[O>>2];c[q+4>>2]=b;c[c[N>>2]>>2]=0;c[L>>2]=c[M>>2];c[q+128>>2]=L;b=c[K>>2]|0;c[H>>2]=e+12;c[J>>2]=0;c[I>>2]=b;b=c[J>>2]|0;d=c[I>>2]|0;c[G>>2]=c[H>>2];c[F>>2]=b;c[D>>2]=d;d=c[G>>2]|0;c[E>>2]=F;b=c[c[E>>2]>>2]|0;c[C>>2]=c[D>>2];a=c[C>>2]|0;c[B>>2]=d;c[A>>2]=b;c[y>>2]=a;a=c[B>>2]|0;c[z>>2]=A;c[a>>2]=c[c[z>>2]>>2];c[x>>2]=c[y>>2];c[a+4>>2]=c[x>>2];if((c[k>>2]|0)!=0){c[r>>2]=e;c[g>>2]=(c[r>>2]|0)+12;c[p>>2]=c[g>>2];Q=c[k>>2]|0;c[n>>2]=c[(c[p>>2]|0)+4>>2];c[f>>2]=Q;Q=c[f>>2]|0;c[q+136>>2]=c[n>>2];c[m>>2]=Q;c[q+152>>2]=0;Q=Gx((c[m>>2]|0)*2096|0)|0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P*2096|0)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P*2096|0)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}else{c[v>>2]=t;c[w>>2]=-1;Q=c[w>>2]|0;c[u>>2]=c[v>>2];c[q+72>>2]=Q;c[c[u>>2]>>2]=0;c[s>>2]=c[t>>2];c[q+88>>2]=s;Q=0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P*2096|0)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P*2096|0)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}}function Yf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;m=i;i=i+192|0;h=m+72|0;k=m+68|0;e=m+64|0;f=m+164|0;o=m+172|0;n=m+156|0;p=m+12|0;q=m+128|0;l=m+16|0;j=m+20|0;g=m+24|0;N=m+28|0;O=m+36|0;P=m+40|0;M=m+124|0;I=m+48|0;J=m+152|0;K=m+160|0;H=m+168|0;D=m+180|0;E=m+80|0;F=m+84|0;C=m+88|0;t=m+96|0;v=m+120|0;u=m+104|0;w=m+108|0;y=m+112|0;x=m+116|0;z=m+8|0;A=m+4|0;Q=m+52|0;L=m+136|0;G=m+132|0;B=m+56|0;R=m+148|0;r=m;s=m+60|0;c[R>>2]=a;c[r>>2]=b;c[s>>2]=d;d=c[R>>2]|0;c[Q>>2]=d;b=c[Q>>2]|0;c[m+140>>2]=b;c[O>>2]=M;c[P>>2]=-1;a=c[P>>2]|0;c[N>>2]=c[O>>2];c[m+32>>2]=a;c[c[N>>2]>>2]=0;c[L>>2]=c[M>>2];c[m+44>>2]=L;c[b>>2]=0;c[J>>2]=H;c[K>>2]=-1;a=c[K>>2]|0;c[I>>2]=c[J>>2];c[m+144>>2]=a;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[m+176>>2]=G;c[b+4>>2]=0;c[E>>2]=C;c[F>>2]=-1;a=c[F>>2]|0;c[D>>2]=c[E>>2];c[m+76>>2]=a;c[c[D>>2]>>2]=0;c[B>>2]=c[C>>2];c[m+92>>2]=B;c[z>>2]=b+8;c[A>>2]=0;b=c[A>>2]|0;c[y>>2]=c[z>>2];c[x>>2]=b;b=c[y>>2]|0;c[w>>2]=x;a=c[c[w>>2]>>2]|0;c[v>>2]=b;c[u>>2]=a;a=c[v>>2]|0;c[m+100>>2]=a;c[t>>2]=u;c[a>>2]=c[c[t>>2]>>2];if(!((c[r>>2]|0)>>>0>0)){i=m;return}Zf(d,c[r>>2]|0);Q=c[r>>2]|0;R=c[s>>2]|0;c[q>>2]=d;c[l>>2]=Q;c[j>>2]=R;q=c[q>>2]|0;c[p>>2]=q;c[n>>2]=(c[p>>2]|0)+8;c[o>>2]=c[n>>2];c[g>>2]=c[o>>2];do{Q=c[g>>2]|0;c[h>>2]=c[q+4>>2];R=c[h>>2]|0;n=c[j>>2]|0;c[k>>2]=Q;c[e>>2]=R;c[f>>2]=n;n=c[e>>2]|0;if((n|0)!=0)c[n>>2]=c[c[f>>2]>>2];R=q+4|0;c[R>>2]=(c[R>>2]|0)+4;c[l>>2]=(c[l>>2]|0)+ -1}while((c[l>>2]|0)>>>0>0);i=m;return}function Zf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;k=i;i=i+64|0;d=k+36|0;e=k+8|0;l=k+32|0;j=k+40|0;f=k+48|0;g=k+16|0;m=k;n=k+24|0;o=k+4|0;p=k+28|0;h=k+20|0;c[p>>2]=a;c[h>>2]=b;b=c[p>>2]|0;a=c[h>>2]|0;if(a>>>0>(Of(b)|0)>>>0)Zt(b);else{c[o>>2]=b;c[n>>2]=(c[o>>2]|0)+8;c[m>>2]=c[n>>2];p=c[h>>2]|0;c[e>>2]=c[m>>2];c[l>>2]=p;p=c[l>>2]|0;c[k+44>>2]=c[e>>2];c[d>>2]=p;c[k+12>>2]=0;p=Gx(c[d>>2]<<2)|0;c[b+4>>2]=p;c[b>>2]=p;p=(c[b>>2]|0)+(c[h>>2]<<2)|0;c[g>>2]=b;c[f>>2]=(c[g>>2]|0)+8;c[j>>2]=c[f>>2];c[c[j>>2]>>2]=p;i=k;return}}function _f(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;f=i;i=i+160|0;n=f+72|0;g=f+32|0;l=f+108|0;j=f+132|0;s=f+8|0;y=f+76|0;z=f+28|0;w=f+20|0;x=f+24|0;v=f;h=f+96|0;u=f+104|0;E=f+136|0;D=f+140|0;C=f+144|0;B=f+52|0;A=f+56|0;t=f+60|0;F=f+64|0;m=f+68|0;p=f+16|0;q=f+4|0;r=f+84|0;G=f+80|0;H=f+88|0;I=f+92|0;J=f+36|0;K=f+100|0;k=f+40|0;o=f+44|0;e=f+112|0;c[K>>2]=b;c[k>>2]=d;b=c[K>>2]|0;c[J>>2]=b;c[I>>2]=(c[J>>2]|0)+8;c[H>>2]=c[I>>2];c[o>>2]=c[H>>2];c[G>>2]=b;d=c[G>>2]|0;d=(((c[d+4>>2]|0)-(c[d>>2]|0)|0)/2096|0)+1|0;c[F>>2]=b;c[m>>2]=d;d=c[F>>2]|0;c[p>>2]=_e(d)|0;if((c[m>>2]|0)>>>0>(c[p>>2]|0)>>>0)Zt(d);c[A>>2]=d;c[B>>2]=c[A>>2];K=c[B>>2]|0;c[C>>2]=K;c[D>>2]=(c[C>>2]|0)+8;c[E>>2]=c[D>>2];c[q>>2]=((c[c[E>>2]>>2]|0)-(c[K>>2]|0)|0)/2096|0;if((c[q>>2]|0)>>>0>=(((c[p>>2]|0)>>>0)/2|0)>>>0)c[t>>2]=c[p>>2];else{c[r>>2]=c[q>>2]<<1;c[h>>2]=r;c[u>>2]=m;K=c[h>>2]|0;J=c[u>>2]|0;a[v+0>>0]=a[f+148>>0]|0;c[w>>2]=K;c[x>>2]=J;J=c[w>>2]|0;K=c[x>>2]|0;c[f+12>>2]=v;c[y>>2]=J;c[z>>2]=K;c[t>>2]=c[((c[c[y>>2]>>2]|0)>>>0<(c[c[z>>2]>>2]|0)>>>0?c[x>>2]|0:c[w>>2]|0)>>2]}K=c[t>>2]|0;c[s>>2]=b;J=c[s>>2]|0;Sf(e,K,((c[J+4>>2]|0)-(c[J>>2]|0)|0)/2096|0,c[o>>2]|0);J=c[o>>2]|0;c[j>>2]=c[e+8>>2];K=c[j>>2]|0;c[l>>2]=c[k>>2];h=c[l>>2]|0;c[f+48>>2]=J;c[n>>2]=K;c[g>>2]=h;h=c[n>>2]|0;if((h|0)==0){K=e+8|0;J=c[K>>2]|0;J=J+2096|0;c[K>>2]=J;Uf(b,e);Vf(e);i=f;return}qz(h|0,c[g>>2]|0,2096)|0;K=e+8|0;J=c[K>>2]|0;J=J+2096|0;c[K>>2]=J;Uf(b,e);Vf(e);i=f;return}function $f(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;ue(c[d>>2]|0);i=b;return}function ag(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;d=i;i=i+144|0;A=d+64|0;C=d+92|0;B=d+108|0;z=d+124|0;v=d+20|0;x=d+28|0;w=d+32|0;u=d+36|0;q=d+96|0;s=d+112|0;r=d+120|0;p=d+128|0;f=d+68|0;h=d+76|0;g=d+80|0;k=d+84|0;j=d+88|0;l=d+12|0;m=d+4|0;n=d;D=d+44|0;y=d+48|0;t=d+100|0;o=d+52|0;E=d+116|0;e=d+60|0;c[E>>2]=a;c[e>>2]=b;b=c[E>>2]|0;c[D>>2]=b;a=c[D>>2]|0;c[d+8>>2]=a;c[C>>2]=z;c[B>>2]=-1;B=c[B>>2]|0;c[A>>2]=c[C>>2];c[d+56>>2]=B;c[c[A>>2]>>2]=0;c[y>>2]=c[z>>2];c[d+16>>2]=y;c[a>>2]=0;c[x>>2]=u;c[w>>2]=-1;w=c[w>>2]|0;c[v>>2]=c[x>>2];c[d+24>>2]=w;c[c[v>>2]>>2]=0;c[t>>2]=c[u>>2];c[d+40>>2]=t;c[a+4>>2]=0;c[s>>2]=p;c[r>>2]=-1;r=c[r>>2]|0;c[q>>2]=c[s>>2];c[d+104>>2]=r;c[c[q>>2]>>2]=0;c[o>>2]=c[p>>2];c[d+132>>2]=o;c[m>>2]=a+8;c[n>>2]=0;a=c[n>>2]|0;c[j>>2]=c[m>>2];c[l>>2]=a;j=c[j>>2]|0;c[k>>2]=l;a=c[c[k>>2]>>2]|0;c[h>>2]=j;c[g>>2]=a;a=c[h>>2]|0;c[d+72>>2]=a;c[f>>2]=g;c[a>>2]=c[c[f>>2]>>2];if(!((c[e>>2]|0)>>>0>0)){i=d;return}Zf(b,c[e>>2]|0);If(b,c[e>>2]|0);i=d;return}function bg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0,g=0;d=i;i=i+16|0;g=d+4|0;e=d;c[g>>2]=a;c[e>>2]=b;a=(c[e>>2]|0)==0;f=+Df(c[g>>2]|0);if(a){f=f+2.0;i=d;return+f}else{f=f- +Df(c[e>>2]|0);i=d;return+f}return 0.0}function cg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;d=i;i=i+144|0;A=d+64|0;C=d+92|0;B=d+108|0;z=d+124|0;v=d+20|0;x=d+28|0;w=d+32|0;u=d+36|0;q=d+96|0;s=d+112|0;r=d+120|0;p=d+128|0;f=d+68|0;h=d+76|0;g=d+80|0;k=d+84|0;j=d+88|0;l=d+12|0;m=d+4|0;n=d;D=d+44|0;y=d+48|0;t=d+100|0;o=d+52|0;E=d+116|0;e=d+60|0;c[E>>2]=a;c[e>>2]=b;b=c[E>>2]|0;c[D>>2]=b;a=c[D>>2]|0;c[d+8>>2]=a;c[C>>2]=z;c[B>>2]=-1;B=c[B>>2]|0;c[A>>2]=c[C>>2];c[d+56>>2]=B;c[c[A>>2]>>2]=0;c[y>>2]=c[z>>2];c[d+16>>2]=y;c[a>>2]=0;c[x>>2]=u;c[w>>2]=-1;w=c[w>>2]|0;c[v>>2]=c[x>>2];c[d+24>>2]=w;c[c[v>>2]>>2]=0;c[t>>2]=c[u>>2];c[d+40>>2]=t;c[a+4>>2]=0;c[s>>2]=p;c[r>>2]=-1;r=c[r>>2]|0;c[q>>2]=c[s>>2];c[d+104>>2]=r;c[c[q>>2]>>2]=0;c[o>>2]=c[p>>2];c[d+132>>2]=o;c[m>>2]=a+8;c[n>>2]=0;a=c[n>>2]|0;c[j>>2]=c[m>>2];c[l>>2]=a;j=c[j>>2]|0;c[k>>2]=l;a=c[c[k>>2]>>2]|0;c[h>>2]=j;c[g>>2]=a;a=c[h>>2]|0;c[d+72>>2]=a;c[f>>2]=g;c[a>>2]=c[c[f>>2]>>2];if(!((c[e>>2]|0)>>>0>0)){i=d;return}dg(b,c[e>>2]|0);eg(b,c[e>>2]|0);i=d;return}function dg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;k=i;i=i+64|0;d=k+36|0;e=k+16|0;l=k+32|0;j=k+40|0;f=k+48|0;g=k+8|0;m=k+4|0;n=k+24|0;o=k+12|0;p=k+28|0;h=k;c[p>>2]=a;c[h>>2]=b;b=c[p>>2]|0;a=c[h>>2]|0;if(a>>>0>(gg(b)|0)>>>0)Zt(b);else{c[o>>2]=b;c[n>>2]=(c[o>>2]|0)+8;c[m>>2]=c[n>>2];p=c[h>>2]|0;c[e>>2]=c[m>>2];c[l>>2]=p;p=c[l>>2]|0;c[k+44>>2]=c[e>>2];c[d>>2]=p;c[k+20>>2]=0;p=Gx(c[d>>2]|0)|0;c[b+4>>2]=p;c[b>>2]=p;p=(c[b>>2]|0)+(c[h>>2]|0)|0;c[g>>2]=b;c[f>>2]=(c[g>>2]|0)+8;c[j>>2]=c[f>>2];c[c[j>>2]>>2]=p;i=k;return}}function eg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+48|0;h=e+28|0;j=e+16|0;k=e+4|0;l=e+8|0;m=e+32|0;n=e;o=e+12|0;f=e+24|0;g=e+20|0;c[o>>2]=b;c[f>>2]=d;b=c[o>>2]|0;c[n>>2]=b;c[m>>2]=(c[n>>2]|0)+8;c[l>>2]=c[m>>2];c[g>>2]=c[l>>2];do{o=c[g>>2]|0;c[h>>2]=c[b+4>>2];d=c[h>>2]|0;c[j>>2]=o;c[k>>2]=d;d=c[k>>2]|0;if((d|0)!=0)a[d>>0]=0;o=b+4|0;c[o>>2]=(c[o>>2]|0)+1;c[f>>2]=(c[f>>2]|0)+ -1}while((c[f>>2]|0)>>>0>0);i=e;return}function fg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=i;i=i+144|0;w=d+64|0;B=d+16|0;C=d+56|0;A=d;x=d+12|0;y=d+4|0;z=d+132|0;v=d+24|0;u=d+28|0;t=d+32|0;E=d+36|0;e=d+40|0;D=d+44|0;g=d+48|0;f=d+52|0;s=d+8|0;l=d+124|0;k=d+128|0;j=d+68|0;h=d+72|0;p=d+80|0;q=d+84|0;r=d+92|0;m=d+96|0;n=d+100|0;o=d+104|0;I=d+108|0;K=d+116|0;J=d+120|0;H=d+88|0;F=d+60|0;G=d+20|0;c[F>>2]=b;b=c[F>>2]|0;F=c[b>>2]|0;c[K>>2]=H;c[J>>2]=-1;J=c[J>>2]|0;c[I>>2]=c[K>>2];c[d+112>>2]=J;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[d+76>>2]=G;if((F|0)==0){i=d;return}c[D>>2]=b;K=c[D>>2]|0;D=c[K>>2]|0;c[E>>2]=K;c[e>>2]=D;D=c[E>>2]|0;while(1){if((c[e>>2]|0)==(c[D+4>>2]|0))break;c[t>>2]=D;c[u>>2]=(c[t>>2]|0)+8;c[v>>2]=c[u>>2];K=c[v>>2]|0;I=D+4|0;J=(c[I>>2]|0)+ -1|0;c[I>>2]=J;c[w>>2]=J;J=c[w>>2]|0;c[x>>2]=K;c[y>>2]=J;J=c[x>>2]|0;K=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=J;c[C>>2]=K}c[s>>2]=b;c[f>>2]=(c[s>>2]|0)+8;c[g>>2]=c[f>>2];I=c[g>>2]|0;K=c[b>>2]|0;c[h>>2]=b;J=c[h>>2]|0;c[j>>2]=J;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];J=(c[c[l>>2]>>2]|0)-(c[J>>2]|0)|0;c[m>>2]=I;c[n>>2]=K;c[o>>2]=J;J=c[n>>2]|0;K=c[o>>2]|0;c[p>>2]=c[m>>2];c[q>>2]=J;c[r>>2]=K;Ix(c[q>>2]|0);i=d;return}function gg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+80|0;q=h+44|0;r=h+12|0;s=h+8|0;u=h+16|0;t=h+76|0;k=h+20|0;g=h+24|0;f=h+28|0;d=h+68|0;e=h+36|0;l=h;n=h+48|0;j=h+52|0;m=h+77|0;v=h+60|0;w=h+64|0;x=h+40|0;y=h+32|0;p=h+56|0;o=h+72|0;c[y>>2]=b;c[x>>2]=c[y>>2];c[w>>2]=(c[x>>2]|0)+8;c[v>>2]=c[w>>2];c[u>>2]=c[v>>2];b=c[u>>2]|0;a[s+0>>0]=a[t+0>>0]|0;c[r>>2]=b;c[q>>2]=c[r>>2];c[p>>2]=-1;c[o>>2]=4294967295/2|0;c[n>>2]=p;c[j>>2]=o;b=c[n>>2]|0;j=c[j>>2]|0;a[l+0>>0]=a[m+0>>0]|0;c[d>>2]=b;c[e>>2]=j;j=c[e>>2]|0;b=c[d>>2]|0;c[k>>2]=l;c[g>>2]=j;c[f>>2]=b;i=h;return c[((c[c[g>>2]>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0?c[e>>2]|0:c[d>>2]|0)>>2]|0}function hg(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;m=i;i=i+32|0;n=m+20|0;k=m+16|0;g=m+12|0;h=m+8|0;l=m+4|0;j=m;c[n>>2]=a;c[k>>2]=b;c[g>>2]=d;c[h>>2]=e;c[l>>2]=f;c[j>>2]=0;if((c[h>>2]|0)>>>0>=(c[g>>2]|0)>>>0){c[j>>2]=0;c[h>>2]=c[g>>2]}else{a=Wy(c[n>>2]|0)|0;c[j>>2]=(a>>>0)%(((c[g>>2]|0)-(c[h>>2]|0)+1|0)>>>0)|0}ig(c[l>>2]|0,(c[k>>2]|0)+(c[j>>2]|0)|0,c[h>>2]|0);i=m;return}function ig(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+16|0;j=f+8|0;h=f+4|0;g=f;c[j>>2]=a;c[h>>2]=b;c[g>>2]=e;e=c[j>>2]|0;a=e+2080|0;c[a>>2]=(c[a>>2]|0)+(c[g>>2]|0);c[g>>2]=(c[g>>2]|0)+1;while(1){j=(c[g>>2]|0)+ -1|0;c[g>>2]=j;if((j|0)==0)break;j=c[h>>2]|0;c[h>>2]=j+1;j=e+((d[j>>0]|0)<<2)|0;c[j>>2]=(c[j>>2]|0)+1}i=f;return}function jg(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;x=i;i=i+2928|0;m=x+2872|0;o=x+2888|0;p=x+2840|0;q=x+2884|0;l=x+2844|0;k=x+2832|0;t=x+2848|0;z=x+2852|0;y=x+2856|0;j=x+2860|0;w=x+2864|0;n=x+2868|0;s=x+2920|0;A=x+2876|0;G=x+2880|0;F=x+2836|0;u=x+2892|0;v=x+2896|0;E=x+2900|0;B=x+2904|0;C=x+2908|0;D=x+2912|0;h=x+2916|0;r=x;c[s>>2]=a;c[A>>2]=b;c[G>>2]=d;c[F>>2]=e;c[u>>2]=f;c[v>>2]=g;c[E>>2]=(((c[A>>2]|0)>>>0)/((c[G>>2]|0)>>>0)|0)+1;if((c[E>>2]|0)>(c[F>>2]|0))c[E>>2]=c[F>>2];c[B>>2]=7;c[C>>2]=((c[A>>2]|0)>>>0)/((c[E>>2]|0)>>>0)|0;c[D>>2]=0;while(1){if((c[D>>2]|0)>=(c[E>>2]|0))break;G=da(c[A>>2]|0,c[D>>2]|0)|0;c[h>>2]=(G>>>0)/((c[E>>2]|0)>>>0)|0;if((c[D>>2]|0)!=0){G=Wy(B)|0;c[h>>2]=(c[h>>2]|0)+((G|0)%(c[C>>2]|0)|0)}if(((c[h>>2]|0)+(c[u>>2]|0)|0)>>>0>=(c[A>>2]|0)>>>0)c[h>>2]=(c[A>>2]|0)-(c[u>>2]|0)-1;rg(r);Tg(r,(c[s>>2]|0)+(c[h>>2]<<1)|0,c[u>>2]|0);c[w>>2]=c[v>>2];c[n>>2]=r;g=c[w>>2]|0;G=c[g+4>>2]|0;c[j>>2]=g;c[y>>2]=(c[j>>2]|0)+8;c[z>>2]=c[y>>2];if((G|0)!=(c[c[z>>2]>>2]|0)){c[t>>2]=g;c[k>>2]=(c[t>>2]|0)+8;c[l>>2]=c[k>>2];a=c[l>>2]|0;c[m>>2]=c[g+4>>2];G=c[m>>2]|0;F=c[n>>2]|0;c[o>>2]=a;c[p>>2]=G;c[q>>2]=F;F=c[p>>2]|0;if((F|0)!=0)qz(F|0,c[q>>2]|0,2832)|0;G=g+4|0;c[G>>2]=(c[G>>2]|0)+2832}else Qg(g,c[n>>2]|0);c[D>>2]=(c[D>>2]|0)+1}i=x;return}function kg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;n=i;i=i+2896|0;t=n+2880|0;p=n+2860|0;r=n+2836|0;s=n+2840|0;u=n+2852|0;v=n+2844|0;l=n+2848|0;m=n+2884|0;f=n+2856|0;o=n+2864|0;h=n+2868|0;k=n+2872|0;g=n+2876|0;j=n;q=n+2832|0;c[l>>2]=a;c[m>>2]=b;c[f>>2]=d;c[o>>2]=e;c[h>>2]=((c[m>>2]<<1>>>0)/((c[f>>2]|0)>>>0)|0)+100;c[k>>2]=7;b=c[h>>2]|0;c[v>>2]=c[o>>2];a=c[v>>2]|0;a=b+(((c[a+4>>2]|0)-(c[a>>2]|0)|0)/2832|0)-1|0;c[u>>2]=c[o>>2];b=c[u>>2]|0;b=(a>>>0)/((((c[b+4>>2]|0)-(c[b>>2]|0)|0)/2832|0)>>>0)|0;c[t>>2]=c[o>>2];a=c[t>>2]|0;c[h>>2]=da(b,((c[a+4>>2]|0)-(c[a>>2]|0)|0)/2832|0)|0;c[g>>2]=0;while(1){if((c[g>>2]|0)>=(c[h>>2]|0))break;rg(j);Sg(k,c[l>>2]|0,c[m>>2]|0,c[f>>2]|0,j);u=c[g>>2]|0;c[p>>2]=c[o>>2];v=c[p>>2]|0;c[q>>2]=(u>>>0)%((((c[v+4>>2]|0)-(c[v>>2]|0)|0)/2832|0)>>>0)|0;v=c[q>>2]|0;c[r>>2]=c[o>>2];c[s>>2]=v;Gg((c[c[r>>2]>>2]|0)+((c[s>>2]|0)*2832|0)|0,j);c[g>>2]=(c[g>>2]|0)+1}i=n;return}function lg(b,f,g,j,k){b=b|0;f=f|0;g=+g;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;l=i;i=i+128|0;I=l+64|0;J=l+60|0;K=l+96|0;L=l+112|0;M=l+104|0;N=l+40|0;E=l+92|0;C=l+36|0;z=l+8|0;H=l+44|0;p=l+48|0;q=l+52|0;v=l+108|0;r=l+116|0;G=l+120|0;F=l+68|0;n=l+72|0;m=l+76|0;y=l+80|0;D=l+84|0;o=l+88|0;B=l;A=l+100|0;x=l+16|0;w=l+24|0;s=l+32|0;u=l+28|0;t=l+56|0;c[E>>2]=b;c[C>>2]=f;h[z>>3]=g;c[H>>2]=j;c[p>>2]=k;c[N>>2]=c[H>>2];b=c[N>>2]|0;if((((c[b+4>>2]|0)-(c[b>>2]|0)|0)/2832|0)>>>0<=1){c[q>>2]=0;while(1){if(!((c[q>>2]|0)>>>0<(c[C>>2]|0)>>>0))break;a[(c[p>>2]|0)+(c[q>>2]|0)>>0]=0;c[q>>2]=(c[q>>2]|0)+1}i=l;return}c[M>>2]=c[H>>2];N=c[M>>2]|0;c[v>>2]=((c[N+4>>2]|0)-(c[N>>2]|0)|0)/2832|0;N=(c[v>>2]|0)*704|0;c[r>>2]=Hx(N>>>0>536870911?-1:N<<3)|0;lz(c[r>>2]|0,0,(c[v>>2]|0)*5632|0)|0;c[G>>2]=0;while(1){if((c[G>>2]|0)>=704)break;c[F>>2]=0;while(1){if((c[F>>2]|0)>=(c[v>>2]|0))break;b=c[F>>2]|0;c[I>>2]=c[H>>2];c[J>>2]=b;b=c[(c[c[I>>2]>>2]|0)+((c[J>>2]|0)*2832|0)+2816>>2]|0;N=c[G>>2]|0;f=c[F>>2]|0;c[K>>2]=c[H>>2];c[L>>2]=f;g=+bg(b,c[(c[c[K>>2]>>2]|0)+((c[L>>2]|0)*2832|0)+(N<<2)>>2]|0);N=da(c[G>>2]|0,c[v>>2]|0)|0;h[(c[r>>2]|0)+(N+(c[F>>2]|0)<<3)>>3]=g;c[F>>2]=(c[F>>2]|0)+1}c[G>>2]=(c[G>>2]|0)+1}N=c[v>>2]|0;c[n>>2]=Hx(N>>>0>536870911?-1:N<<3)|0;lz(c[n>>2]|0,0,c[v>>2]<<3|0)|0;c[m>>2]=Hx(da(c[C>>2]|0,c[v>>2]|0)|0)|0;lz(c[m>>2]|0,0,da(c[C>>2]|0,c[v>>2]|0)|0)|0;c[y>>2]=0;while(1){if(!((c[y>>2]|0)>>>0<(c[C>>2]|0)>>>0))break;c[D>>2]=da(c[y>>2]|0,c[v>>2]|0)|0;c[o>>2]=da(e[(c[E>>2]|0)+(c[y>>2]<<1)>>1]|0,c[v>>2]|0)|0;h[B>>3]=1.0e+99;c[A>>2]=0;while(1){if((c[A>>2]|0)>=(c[v>>2]|0))break;N=(c[n>>2]|0)+(c[A>>2]<<3)|0;h[N>>3]=+h[N>>3]+ +h[(c[r>>2]|0)+((c[o>>2]|0)+(c[A>>2]|0)<<3)>>3];if(+h[(c[n>>2]|0)+(c[A>>2]<<3)>>3]<+h[B>>3]){h[B>>3]=+h[(c[n>>2]|0)+(c[A>>2]<<3)>>3];a[(c[p>>2]|0)+(c[y>>2]|0)>>0]=c[A>>2]}c[A>>2]=(c[A>>2]|0)+1}h[x>>3]=+h[z>>3];if((c[y>>2]|0)>>>0<2e3)h[x>>3]=+h[x>>3]*(+((c[y>>2]|0)>>>0)*.07/2.0e3+.77);c[w>>2]=0;while(1){if((c[w>>2]|0)>=(c[v>>2]|0))break;N=(c[n>>2]|0)+(c[w>>2]<<3)|0;h[N>>3]=+h[N>>3]- +h[B>>3];if(+h[(c[n>>2]|0)+(c[w>>2]<<3)>>3]>=+h[x>>3]){h[(c[n>>2]|0)+(c[w>>2]<<3)>>3]=+h[x>>3];a[(c[m>>2]|0)+((c[D>>2]|0)+(c[w>>2]|0))>>0]=1}c[w>>2]=(c[w>>2]|0)+1}c[y>>2]=(c[y>>2]|0)+1}c[s>>2]=(c[C>>2]|0)-1;c[u>>2]=da(c[s>>2]|0,c[v>>2]|0)|0;c[t>>2]=d[(c[p>>2]|0)+(c[s>>2]|0)>>0];while(1){if((c[s>>2]|0)<=0)break;c[s>>2]=(c[s>>2]|0)+ -1;c[u>>2]=(c[u>>2]|0)-(c[v>>2]|0);if(a[(c[m>>2]|0)+((c[u>>2]|0)+(c[t>>2]|0))>>0]&1)c[t>>2]=d[(c[p>>2]|0)+(c[s>>2]|0)>>0];a[(c[p>>2]|0)+(c[s>>2]|0)>>0]=c[t>>2]}o=c[r>>2]|0;if((o|0)!=0)Jx(o);n=c[n>>2]|0;if((n|0)!=0)Jx(n);m=c[m>>2]|0;if((m|0)==0){i=l;return}Jx(m);i=l;return}function mg(b,f,g,h){b=b|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;v=i;i=i+96|0;o=v+40|0;p=v+4|0;r=v+52|0;x=v+36|0;C=v+68|0;D=v+16|0;B=v;y=v+56|0;z=v+64|0;A=v+88|0;w=v+80|0;k=v+84|0;u=v+44|0;E=v+20|0;j=v+24|0;F=v+48|0;G=v+8|0;q=v+28|0;l=v+60|0;m=v+12|0;n=v+32|0;s=v+76|0;t=v+72|0;c[q>>2]=b;c[l>>2]=f;c[m>>2]=g;c[n>>2]=h;c[s>>2]=Wd(c[m>>2]|0,c[l>>2]|0)|0;c[G>>2]=c[n>>2];h=c[G>>2]|0;c[F>>2]=h;b=c[F>>2]|0;g=c[b>>2]|0;c[E>>2]=b;c[j>>2]=g;g=c[E>>2]|0;while(1){if((c[j>>2]|0)==(c[g+4>>2]|0))break;c[u>>2]=g;c[k>>2]=(c[u>>2]|0)+8;c[w>>2]=c[k>>2];G=c[w>>2]|0;E=g+4|0;F=(c[E>>2]|0)+ -2832|0;c[E>>2]=F;c[x>>2]=F;F=c[x>>2]|0;c[y>>2]=G;c[z>>2]=F;F=c[y>>2]|0;G=c[z>>2]|0;a[B+0>>0]=a[A+0>>0]|0;c[C>>2]=F;c[D>>2]=G}c[r>>2]=h;vg(c[n>>2]|0,c[s>>2]|0);c[t>>2]=0;while(1){if(!((c[t>>2]|0)>>>0<(c[l>>2]|0)>>>0))break;G=d[(c[m>>2]|0)+(c[t>>2]|0)>>0]|0;c[o>>2]=c[n>>2];c[p>>2]=G;sg((c[c[o>>2]>>2]|0)+((c[p>>2]|0)*2832|0)|0,e[(c[q>>2]|0)+(c[t>>2]<<1)>>1]|0);c[t>>2]=(c[t>>2]|0)+1}i=v;return}function ng(b,f,g){b=b|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0;m=i;i=i+3392|0;r=m+3104|0;s=m+3360|0;p=m+3336|0;q=m+3076|0;Ia=m+3080|0;ha=m+3152|0;ia=m+3096|0;fa=m+3100|0;j=m+2860|0;h=m+3328|0;ka=m+2864|0;oa=m+2868|0;pa=m+2872|0;ma=m+2876|0;na=m+2880|0;la=m+2852|0;ra=m+2896|0;va=m+2900|0;wa=m+2904|0;ta=m+2908|0;ua=m+2912|0;sa=m+2916|0;ya=m+2920|0;Ha=m+2924|0;Ga=m+2928|0;Ea=m+2932|0;Fa=m+2936|0;Da=m+2940|0;Ba=m+2944|0;Ca=m+2948|0;za=m+2952|0;Aa=m+2836|0;da=m+2960|0;ca=m+2964|0;ja=m+2968|0;qa=m+2972|0;xa=m+2976|0;ba=m+2980|0;aa=m+2984|0;B=m+2988|0;C=m+2992|0;z=m+2996|0;A=m+3e3|0;y=m+3004|0;E=m+3008|0;I=m+3012|0;J=m+3016|0;G=m+3020|0;H=m+3024|0;F=m+3028|0;L=m+3032|0;P=m+3036|0;Q=m+3040|0;N=m+3044|0;O=m+3048|0;M=m+3052|0;S=m+3056|0;$=m+3060|0;_=m+3064|0;Y=m+3324|0;Z=m+3332|0;X=m+3340|0;V=m+3348|0;W=m+3356|0;T=m+3364|0;U=m+3380|0;x=m+3384|0;w=m+3108|0;D=m+3112|0;K=m+3116|0;R=m+3120|0;v=m+3124|0;u=m+3128|0;Ma=m+3132|0;Oa=m+3136|0;Pa=m+3140|0;Qa=m+3144|0;La=m+3148|0;Ka=m+3352|0;Ja=m+3156|0;Va=m+3160|0;Ua=m+3164|0;Ta=m+3168|0;Ra=m+3172|0;Na=m+3176|0;Za=m+3180|0;_a=m+3184|0;ub=m+3188|0;vb=m+3196|0;wb=m+3200|0;tb=m+3204|0;pb=m+3212|0;qb=m+3220|0;rb=m+3224|0;ob=m+3228|0;kb=m+3236|0;lb=m+3244|0;mb=m+3248|0;jb=m+3252|0;ab=m+3260|0;cb=m+3268|0;bb=m+3272|0;db=m+3276|0;fb=m+3280|0;eb=m+3284|0;gb=m+3288|0;hb=m+3292|0;xb=m+3300|0;sb=m+3304|0;nb=m+3308|0;ib=m+2856|0;yb=m+2844|0;zb=m+2956|0;$a=m+2840|0;o=m+2832|0;t=m+2848|0;l=m+2884|0;k=m+3312|0;Xa=m+3068|0;Sa=m;Ya=m+3344|0;Wa=m+3388|0;ea=m+3084|0;ga=m+3368|0;n=m+3072|0;c[$a>>2]=b;c[o>>2]=f;c[t>>2]=g;c[zb>>2]=l;c[yb>>2]=c[zb>>2];c[xb>>2]=c[yb>>2];f=c[xb>>2]|0;c[m+3296>>2]=f;c[vb>>2]=tb;c[wb>>2]=-1;b=c[wb>>2]|0;c[ub>>2]=c[vb>>2];c[m+3192>>2]=b;c[c[ub>>2]>>2]=0;c[sb>>2]=c[tb>>2];c[m+3208>>2]=sb;c[f>>2]=0;c[qb>>2]=ob;c[rb>>2]=-1;b=c[rb>>2]|0;c[pb>>2]=c[qb>>2];c[m+3216>>2]=b;c[c[pb>>2]>>2]=0;c[nb>>2]=c[ob>>2];c[m+3232>>2]=nb;c[f+4>>2]=0;c[lb>>2]=jb;c[mb>>2]=-1;b=c[mb>>2]|0;c[kb>>2]=c[lb>>2];c[m+3240>>2]=b;c[c[kb>>2]>>2]=0;c[ib>>2]=c[jb>>2];c[m+3256>>2]=ib;c[gb>>2]=f+8;c[hb>>2]=0;f=c[hb>>2]|0;c[fb>>2]=c[gb>>2];c[eb>>2]=f;f=c[fb>>2]|0;c[db>>2]=eb;b=c[c[db>>2]>>2]|0;c[cb>>2]=f;c[bb>>2]=b;b=c[cb>>2]|0;c[m+3264>>2]=b;c[ab>>2]=bb;c[b>>2]=c[c[ab>>2]>>2];re(k,c[o>>2]|0);c[Xa>>2]=0;rg(Sa);c[Ya>>2]=0;while(1){if(!((c[Ya>>2]|0)>>>0<(c[o>>2]|0)>>>0))break;if(((c[Ya>>2]|0)+1|0)==(c[o>>2]|0))g=1;else g=(d[(c[t>>2]|0)+(c[Ya>>2]|0)>>0]|0|0)!=(d[(c[t>>2]|0)+((c[Ya>>2]|0)+1)>>0]|0|0);a[Wa>>0]=g&1;zb=c[Xa>>2]|0;yb=c[Ya>>2]|0;c[Za>>2]=k;c[_a>>2]=yb;c[(c[c[Za>>2]>>2]|0)+(c[_a>>2]<<2)>>2]=zb;sg(Sa,e[(c[$a>>2]|0)+(c[Ya>>2]<<1)>>1]|0);if(a[Wa>>0]&1){c[Ra>>2]=l;c[Na>>2]=Sa;g=c[Ra>>2]|0;zb=c[g+4>>2]|0;c[Ta>>2]=g;c[Ua>>2]=(c[Ta>>2]|0)+8;c[Va>>2]=c[Ua>>2];if((zb|0)!=(c[c[Va>>2]>>2]|0)){c[Ja>>2]=g;c[Ka>>2]=(c[Ja>>2]|0)+8;c[La>>2]=c[Ka>>2];yb=c[La>>2]|0;c[Ma>>2]=c[g+4>>2];zb=c[Ma>>2]|0;f=c[Na>>2]|0;c[Oa>>2]=yb;c[Pa>>2]=zb;c[Qa>>2]=f;f=c[Pa>>2]|0;if((f|0)!=0)qz(f|0,c[Qa>>2]|0,2832)|0;zb=g+4|0;c[zb>>2]=(c[zb>>2]|0)+2832}else Qg(g,c[Na>>2]|0);tg(Sa);c[Xa>>2]=(c[Xa>>2]|0)+1}c[Ya>>2]=(c[Ya>>2]|0)+1}c[u>>2]=ea;c[v>>2]=c[u>>2];c[w>>2]=c[v>>2];zb=c[w>>2]|0;c[x>>2]=zb;c[z>>2]=y;c[A>>2]=-1;yb=c[A>>2]|0;c[B>>2]=c[z>>2];c[C>>2]=yb;c[c[B>>2]>>2]=0;c[D>>2]=c[y>>2];c[E>>2]=D;c[zb>>2]=0;c[G>>2]=F;c[H>>2]=-1;yb=c[H>>2]|0;c[I>>2]=c[G>>2];c[J>>2]=yb;c[c[I>>2]>>2]=0;c[K>>2]=c[F>>2];c[L>>2]=K;c[zb+4>>2]=0;c[N>>2]=M;c[O>>2]=-1;yb=c[O>>2]|0;c[P>>2]=c[N>>2];c[Q>>2]=yb;c[c[P>>2]>>2]=0;c[R>>2]=c[M>>2];c[S>>2]=R;c[T>>2]=zb+8;c[U>>2]=0;zb=c[U>>2]|0;c[V>>2]=c[T>>2];c[W>>2]=zb;zb=c[V>>2]|0;c[X>>2]=W;yb=c[c[X>>2]>>2]|0;c[Y>>2]=zb;c[Z>>2]=yb;yb=c[Y>>2]|0;c[_>>2]=yb;c[$>>2]=Z;c[yb>>2]=c[c[$>>2]>>2];c[aa>>2]=ga;c[ba>>2]=c[aa>>2];c[ca>>2]=c[ba>>2];yb=c[ca>>2]|0;c[da>>2]=yb;c[fa>>2]=h;c[j>>2]=-1;zb=c[j>>2]|0;c[ha>>2]=c[fa>>2];c[ia>>2]=zb;c[c[ha>>2]>>2]=0;c[ja>>2]=c[h>>2];c[ka>>2]=ja;c[yb>>2]=0;c[ma>>2]=la;c[na>>2]=-1;zb=c[na>>2]|0;c[oa>>2]=c[ma>>2];c[pa>>2]=zb;c[c[oa>>2]>>2]=0;c[qa>>2]=c[la>>2];c[ra>>2]=qa;c[yb+4>>2]=0;c[ta>>2]=sa;c[ua>>2]=-1;zb=c[ua>>2]|0;c[va>>2]=c[ta>>2];c[wa>>2]=zb;c[c[va>>2]>>2]=0;c[xa>>2]=c[sa>>2];c[ya>>2]=xa;c[za>>2]=yb+8;c[Aa>>2]=0;yb=c[Aa>>2]|0;c[Ba>>2]=c[za>>2];c[Ca>>2]=yb;yb=c[Ba>>2]|0;c[Da>>2]=Ca;zb=c[c[Da>>2]>>2]|0;c[Ea>>2]=yb;c[Fa>>2]=zb;zb=c[Ea>>2]|0;c[Ga>>2]=zb;c[Ha>>2]=Fa;c[zb>>2]=c[c[Ha>>2]>>2];c[Ia>>2]=l;zb=c[Ia>>2]|0;ug(l,1,((c[zb+4>>2]|0)-(c[zb>>2]|0)|0)/2832|0,256,ea,ga);c[n>>2]=0;while(1){if(!((c[n>>2]|0)>>>0<(c[o>>2]|0)>>>0))break;zb=c[n>>2]|0;c[p>>2]=k;c[q>>2]=zb;zb=c[(c[c[p>>2]>>2]|0)+(c[q>>2]<<2)>>2]|0;c[r>>2]=ga;c[s>>2]=zb;a[(c[t>>2]|0)+(c[n>>2]|0)>>0]=c[(c[c[r>>2]>>2]|0)+(c[s>>2]<<2)>>2];c[n>>2]=(c[n>>2]|0)+1}we(ga);og(ea);we(k);og(l);i=m;return}function og(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;pg(c[d>>2]|0);i=b;return}function pg(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;qg(c[d>>2]|0);i=b;return}function qg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=i;i=i+144|0;w=d+48|0;B=d+8|0;C=d+84|0;A=d;x=d+16|0;y=d+4|0;z=d+132|0;v=d+80|0;u=d+44|0;t=d+20|0;E=d+24|0;e=d+28|0;D=d+32|0;g=d+36|0;f=d+40|0;s=d+76|0;l=d+124|0;k=d+128|0;j=d+52|0;h=d+56|0;p=d+64|0;q=d+68|0;r=d+92|0;m=d+96|0;n=d+100|0;o=d+104|0;I=d+108|0;K=d+116|0;J=d+120|0;H=d+88|0;F=d+72|0;G=d+12|0;c[F>>2]=b;b=c[F>>2]|0;F=c[b>>2]|0;c[K>>2]=H;c[J>>2]=-1;J=c[J>>2]|0;c[I>>2]=c[K>>2];c[d+112>>2]=J;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[d+60>>2]=G;if((F|0)==0){i=d;return}c[D>>2]=b;K=c[D>>2]|0;D=c[K>>2]|0;c[E>>2]=K;c[e>>2]=D;D=c[E>>2]|0;while(1){if((c[e>>2]|0)==(c[D+4>>2]|0))break;c[t>>2]=D;c[u>>2]=(c[t>>2]|0)+8;c[v>>2]=c[u>>2];K=c[v>>2]|0;I=D+4|0;J=(c[I>>2]|0)+ -2832|0;c[I>>2]=J;c[w>>2]=J;J=c[w>>2]|0;c[x>>2]=K;c[y>>2]=J;J=c[x>>2]|0;K=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=J;c[C>>2]=K}c[s>>2]=b;c[f>>2]=(c[s>>2]|0)+8;c[g>>2]=c[f>>2];I=c[g>>2]|0;K=c[b>>2]|0;c[h>>2]=b;J=c[h>>2]|0;c[j>>2]=J;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];J=((c[c[l>>2]>>2]|0)-(c[J>>2]|0)|0)/2832|0;c[m>>2]=I;c[n>>2]=K;c[o>>2]=J;J=c[n>>2]|0;K=c[o>>2]|0;c[p>>2]=c[m>>2];c[q>>2]=J;c[r>>2]=K;Ix(c[q>>2]|0);i=d;return}function rg(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Rg(c[d>>2]|0);i=b;return}function sg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;a=c[f>>2]|0;b=a+(c[e>>2]<<2)|0;c[b>>2]=(c[b>>2]|0)+1;a=a+2816|0;c[a>>2]=(c[a>>2]|0)+1;i=d;return}function tg(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;lz(a|0,0,2816)|0;c[a+2816>>2]=0;i=b;return}function ug(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0.0;B=i;i=i+176|0;J=B+156|0;K=B+120|0;G=B;H=B+104|0;k=B+64|0;l=B+148|0;n=B+20|0;o=B+108|0;q=B+24|0;r=B+28|0;j=B+32|0;F=B+36|0;v=B+40|0;w=B+44|0;x=B+48|0;y=B+128|0;z=B+136|0;A=B+144|0;U=B+152|0;V=B+160|0;S=B+68|0;T=B+72|0;Q=B+76|0;R=B+80|0;O=B+84|0;P=B+88|0;M=B+92|0;N=B+96|0;u=B+100|0;I=B+4|0;D=B+116|0;t=B+112|0;E=B+124|0;p=B+52|0;s=B+132|0;m=B+8|0;W=B+56|0;L=B+140|0;C=B+60|0;c[u>>2]=a;c[I>>2]=b;c[D>>2]=d;c[t>>2]=e;c[E>>2]=f;c[p>>2]=g;c[s>>2]=da(c[I>>2]|0,c[D>>2]|0)|0;a=c[s>>2]|0;c[W>>2]=1;ze(m,a,W);vg(c[E>>2]|0,c[s>>2]|0);Be(c[p>>2]|0,c[s>>2]|0);c[L>>2]=0;while(1){if((c[L>>2]|0)>=(c[s>>2]|0))break;W=c[L>>2]|0;c[M>>2]=c[E>>2];c[N>>2]=W;W=(c[c[M>>2]>>2]|0)+((c[N>>2]|0)*2832|0)|0;a=c[L>>2]|0;c[O>>2]=c[u>>2];c[P>>2]=a;qz(W|0,(c[c[O>>2]>>2]|0)+((c[P>>2]|0)*2832|0)|0,2832)|0;W=c[L>>2]|0;c[Q>>2]=c[u>>2];c[R>>2]=W;X=+wg((c[c[Q>>2]>>2]|0)+((c[R>>2]|0)*2832|0)|0);W=c[L>>2]|0;c[S>>2]=c[E>>2];c[T>>2]=W;h[(c[c[S>>2]>>2]|0)+((c[T>>2]|0)*2832|0)+2824>>3]=X;W=c[L>>2]|0;a=c[L>>2]|0;c[U>>2]=c[p>>2];c[V>>2]=a;c[(c[c[U>>2]>>2]|0)+(c[V>>2]<<2)>>2]=W;c[L>>2]=(c[L>>2]|0)+1}a:do if((c[I>>2]|0)>1){c[C>>2]=0;while(1){if((c[C>>2]|0)>=(c[D>>2]|0))break a;c[j>>2]=c[E>>2];c[F>>2]=0;a=(c[c[j>>2]>>2]|0)+((c[F>>2]|0)*2832|0)|0;c[G>>2]=m;c[H>>2]=0;W=(c[c[G>>2]>>2]|0)+(c[H>>2]<<2)|0;b=da(c[C>>2]|0,c[I>>2]|0)|0;c[J>>2]=c[p>>2];c[K>>2]=b;xg(a,W,(c[c[J>>2]>>2]|0)+(c[K>>2]<<2)|0,c[I>>2]|0,c[t>>2]|0);c[C>>2]=(c[C>>2]|0)+1}}while(0);c[k>>2]=c[E>>2];c[l>>2]=0;a=(c[c[k>>2]>>2]|0)+((c[l>>2]|0)*2832|0)|0;c[n>>2]=m;c[o>>2]=0;b=(c[c[n>>2]>>2]|0)+(c[o>>2]<<2)|0;c[q>>2]=c[p>>2];c[r>>2]=0;xg(a,b,(c[c[q>>2]>>2]|0)+(c[r>>2]<<2)|0,c[s>>2]|0,c[t>>2]|0);c[v>>2]=c[u>>2];c[w>>2]=0;b=(c[c[v>>2]>>2]|0)+((c[w>>2]|0)*2832|0)|0;a=c[s>>2]|0;c[x>>2]=c[E>>2];c[y>>2]=0;W=(c[c[x>>2]>>2]|0)+((c[y>>2]|0)*2832|0)|0;c[z>>2]=c[p>>2];c[A>>2]=0;yg(b,a,W,(c[c[z>>2]>>2]|0)+(c[A>>2]<<2)|0);zg(c[E>>2]|0,c[p>>2]|0);we(m);i=B;return}function vg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;o=i;i=i+80|0;m=o+36|0;n=o+4|0;g=o+28|0;q=o;e=o+32|0;f=o+8|0;p=o+68|0;l=o+24|0;k=o+60|0;j=o+64|0;v=o+40|0;h=o+44|0;t=o+48|0;u=o+52|0;w=o+56|0;x=o+16|0;s=o+20|0;r=o+12|0;c[x>>2]=b;c[s>>2]=d;d=c[x>>2]|0;c[w>>2]=d;b=c[w>>2]|0;c[r>>2]=((c[b+4>>2]|0)-(c[b>>2]|0)|0)/2832|0;if((c[r>>2]|0)>>>0<(c[s>>2]|0)>>>0){Ig(d,(c[s>>2]|0)-(c[r>>2]|0)|0);i=o;return}if(!((c[r>>2]|0)>>>0>(c[s>>2]|0)>>>0)){i=o;return}r=(c[d>>2]|0)+((c[s>>2]|0)*2832|0)|0;c[t>>2]=d;c[u>>2]=r;r=c[u>>2]|0;c[v>>2]=c[t>>2];c[h>>2]=r;r=c[v>>2]|0;while(1){if((c[h>>2]|0)==(c[r+4>>2]|0))break;c[j>>2]=r;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];x=c[l>>2]|0;b=r+4|0;w=(c[b>>2]|0)+ -2832|0;c[b>>2]=w;c[m>>2]=w;w=c[m>>2]|0;c[e>>2]=x;c[f>>2]=w;w=c[e>>2]|0;x=c[f>>2]|0;a[q+0>>0]=a[p+0>>0]|0;c[n>>2]=w;c[g>>2]=x}i=o;return}function wg(a){a=a|0;var b=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0.0;b=i;i=i+736|0;e=b;f=b+16|0;l=b+12|0;m=b+24|0;g=b+32|0;j=b+20|0;k=b+8|0;c[f>>2]=a;if((c[(c[f>>2]|0)+2816>>2]|0)==0){h[e>>3]=12.0;n=+h[e>>3];i=b;return+n}c[l>>2]=0;c[m>>2]=0;while(1){if((c[m>>2]|0)>=704)break;if((c[l>>2]|0)>=5)break;if((c[(c[f>>2]|0)+(c[m>>2]<<2)>>2]|0)>0)c[l>>2]=(c[l>>2]|0)+1;c[m>>2]=(c[m>>2]|0)+1}if((c[l>>2]|0)==1){h[e>>3]=12.0;n=+h[e>>3];i=b;return+n}if((c[l>>2]|0)==2){h[e>>3]=+(20+(c[(c[f>>2]|0)+2816>>2]|0)|0);n=+h[e>>3];i=b;return+n}lz(g|0,0,704)|0;Ml(c[f>>2]|0,704,15,g);c[j>>2]=0;c[k>>2]=0;while(1){if((c[k>>2]|0)>=704)break;m=da(c[(c[f>>2]|0)+(c[k>>2]<<2)>>2]|0,d[g+(c[k>>2]|0)>>0]|0)|0;c[j>>2]=(c[j>>2]|0)+m;c[k>>2]=(c[k>>2]|0)+1}do if((c[l>>2]|0)!=3)if((c[l>>2]|0)==4){c[j>>2]=(c[j>>2]|0)+37;break}else{m=Gf(g,704)|0;c[j>>2]=(c[j>>2]|0)+m;break}else c[j>>2]=(c[j>>2]|0)+28;while(0);h[e>>3]=+(c[j>>2]|0);n=+h[e>>3];i=b;return+n}function xg(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0,Uc=0,Vc=0,Wc=0,Xc=0,Yc=0,Zc=0,_c=0,$c=0,ad=0,bd=0,cd=0,dd=0,ed=0,fd=0,gd=0,hd=0,id=0,jd=0,kd=0,ld=0,md=0,nd=0,od=0,pd=0,qd=0,rd=0,sd=0,td=0,ud=0,vd=0,wd=0,xd=0,yd=0,zd=0,Ad=0,Bd=0,Cd=0,Dd=0,Ed=0,Fd=0,Gd=0,Hd=0;m=i;i=i+1120|0;_a=m+580|0;Za=m+568|0;t=m+564|0;u=m+312|0;w=m+544|0;x=m+228|0;n=m+1040|0;o=m+1056|0;A=m+1072|0;B=m+1080|0;H=m+1088|0;N=m+1064|0;O=m+156|0;P=m+148|0;Q=m+144|0;R=m+1020|0;S=m+616|0;X=m+556|0;aa=m+352|0;ba=m+332|0;$=m+48|0;Y=m+224|0;Z=m+220|0;_=m+1104|0;W=m+160|0;V=m+164|0;U=m+168|0;L=m+172|0;M=m+176|0;J=m+180|0;K=m+184|0;I=m+1016|0;ca=m+728|0;da=m+612|0;ea=m+600|0;ga=m+552|0;ia=m+356|0;ja=m+348|0;qa=m+344|0;ra=m+328|0;oa=m+236|0;pa=m+232|0;la=m+244|0;ma=m+248|0;ka=m+252|0;ya=m+256|0;za=m+260|0;wa=m+264|0;xa=m+268|0;ta=m+272|0;ua=m+276|0;sa=m+280|0;q=m+284|0;Qa=m+288|0;Va=m+292|0;Wa=m+296|0;Ta=m+300|0;Ra=m+304|0;Sa=m+308|0;Ua=m+88|0;Pa=m+316|0;Oa=m+320|0;Ma=m+324|0;Na=m+1012|0;Xa=m+792|0;Ya=m+724|0;La=m+8|0;Ka=m+64|0;Ja=m+604|0;Ia=m+596|0;Ga=m+592|0;Ha=m+548|0;Ea=m+360|0;Fa=m+364|0;Da=m+80|0;Ba=m+72|0;Aa=m+24|0;hb=m+380|0;mb=m+384|0;nb=m+388|0;lb=m+120|0;ib=m+396|0;jb=m+400|0;k=m+1106|0;j=m+408|0;fb=m+412|0;eb=m+416|0;cb=m+420|0;db=m+424|0;ab=m+428|0;bb=m+432|0;$a=m+436|0;ob=m+440|0;pb=m+444|0;qb=m+448|0;xb=m+452|0;yb=m+456|0;vb=m+460|0;wb=m+464|0;kc=m+468|0;ub=m+472|0;Gb=m+476|0;Hb=m+480|0;Eb=m+484|0;Fb=m+488|0;Db=m+492|0;Jb=m+496|0;Nb=m+500|0;Ob=m+504|0;Lb=m+508|0;Mb=m+512|0;Kb=m+516|0;Qb=m+520|0;Ub=m+524|0;Vb=m+528|0;Sb=m+532|0;Tb=m+1052|0;Rb=m+1060|0;Xb=m+1068|0;ec=m+1076|0;dc=m+1084|0;bc=m+1092|0;cc=m+1096|0;ac=m+576|0;_b=m+1100|0;$b=m+584|0;Yb=m+588|0;Zb=m+1008|0;Cb=m+984|0;Bb=m+788|0;Ib=m+744|0;Pb=m+720|0;Wb=m+680|0;Ab=m+672|0;zb=m+668|0;ad=m+608|0;bd=m+620|0;cd=m+624|0;dd=m+628|0;$c=m+632|0;_c=m+636|0;Zc=m+640|0;xc=m+644|0;wc=m+648|0;vc=m+652|0;tc=m+656|0;uc=m+660|0;sc=m+664|0;rc=m+56|0;qc=m+368|0;pc=m+16|0;mc=m+372|0;nc=m+676|0;oc=m+376|0;rb=m+684|0;lc=m+688|0;gc=m+692|0;hc=m+696|0;ic=m+704|0;Xc=m+712|0;Yc=m+716|0;Wc=m+392|0;Vc=m+32|0;Uc=m+732|0;Sc=m;Qc=m+736|0;Rc=m+740|0;Oc=m+404|0;Pc=m+748|0;Mc=m+752|0;Lc=m+756|0;Kc=m+760|0;Jc=m+764|0;Ic=m+768|0;Hc=m+772|0;Gc=m+776|0;Nc=m+780|0;Fc=m+784|0;Ec=m+128|0;Dc=m+796|0;Bc=m+40|0;yc=m+800|0;zc=m+804|0;Ac=m+808|0;yd=m+812|0;zd=m+820|0;Ad=m+824|0;xd=m+828|0;td=m+836|0;ud=m+844|0;vd=m+848|0;sd=m+852|0;od=m+860|0;pd=m+868|0;qd=m+872|0;nd=m+876|0;ed=m+884|0;gd=m+892|0;fd=m+896|0;hd=m+900|0;jd=m+904|0;id=m+908|0;kd=m+912|0;ld=m+916|0;Bd=m+924|0;wd=m+928|0;rd=m+932|0;md=m+936|0;Cd=m+940|0;Dd=m+944|0;Fd=m+948|0;Ed=m+952|0;Gd=m+956|0;Hd=m+960|0;z=m+964|0;C=m+968|0;G=m+972|0;E=m+976|0;s=m+980|0;p=m+136|0;r=m+988|0;l=m+992|0;gb=m+192|0;fc=m+152|0;Cc=m+340|0;Tc=m+1024|0;jc=m+1032|0;kb=m+204|0;tb=m+560|0;sb=m+216|0;v=m+336|0;y=m+1044|0;D=m+536|0;F=m+1048|0;T=m+540|0;fa=m+572|0;na=m+1004|0;va=m+240|0;Ca=m+1105|0;ha=m+188|0;c[z>>2]=b;c[C>>2]=d;c[G>>2]=e;c[E>>2]=f;c[s>>2]=g;h[p>>3]=0.0;c[r>>2]=1;c[Gd>>2]=l;c[Hd>>2]=m+1107;d=c[Hd>>2]|0;c[Fd>>2]=c[Gd>>2];c[Ed>>2]=d;mf(c[Fd>>2]|0,c[Ed>>2]|0);c[Dd>>2]=gb;c[Cd>>2]=c[Dd>>2];c[Bd>>2]=c[Cd>>2];d=c[Bd>>2]|0;c[m+920>>2]=d;c[zd>>2]=xd;c[Ad>>2]=-1;b=c[Ad>>2]|0;c[yd>>2]=c[zd>>2];c[m+816>>2]=b;c[c[yd>>2]>>2]=0;c[wd>>2]=c[xd>>2];c[m+832>>2]=wd;c[d>>2]=0;c[ud>>2]=sd;c[vd>>2]=-1;b=c[vd>>2]|0;c[td>>2]=c[ud>>2];c[m+840>>2]=b;c[c[td>>2]>>2]=0;c[rd>>2]=c[sd>>2];c[m+856>>2]=rd;c[d+4>>2]=0;c[pd>>2]=nd;c[qd>>2]=-1;b=c[qd>>2]|0;c[od>>2]=c[pd>>2];c[m+864>>2]=b;c[c[od>>2]>>2]=0;c[md>>2]=c[nd>>2];c[m+880>>2]=md;c[kd>>2]=d+8;c[ld>>2]=0;d=c[ld>>2]|0;c[jd>>2]=c[kd>>2];c[id>>2]=d;d=c[jd>>2]|0;c[hd>>2]=id;b=c[c[hd>>2]>>2]|0;c[gd>>2]=d;c[fd>>2]=b;b=c[gd>>2]|0;c[m+888>>2]=b;c[ed>>2]=fd;c[b>>2]=c[c[ed>>2]>>2];c[fc>>2]=0;while(1){if((c[fc>>2]|0)>=(c[E>>2]|0))break;Hd=(c[G>>2]|0)+(c[fc>>2]<<2)|0;c[yc>>2]=l;c[zc>>2]=Hd;Ef(Ac,c[yc>>2]|0,c[zc>>2]|0);a[Bc+0>>0]=a[Ac+0>>0]|0;a[Bc+1>>0]=a[Ac+1>>0]|0;a[Bc+2>>0]=a[Ac+2>>0]|0;a[Bc+3>>0]=a[Ac+3>>0]|0;c[Dc>>2]=Cc;Hd=c[Dc>>2]|0;a[Ec+0>>0]=a[Bc+0>>0]|0;a[Ec+1>>0]=a[Bc+1>>0]|0;a[Ec+2>>0]=a[Bc+2>>0]|0;a[Ec+3>>0]=a[Bc+3>>0]|0;c[Fc>>2]=Hd;c[c[Fc>>2]>>2]=c[Ec>>2];c[Gc>>2]=l;c[Hc>>2]=c[Gc>>2];c[Ic>>2]=c[Hc>>2];c[Jc>>2]=(c[Ic>>2]|0)+4;c[Kc>>2]=c[Jc>>2];c[Lc>>2]=c[Kc>>2];c[Mc>>2]=c[Lc>>2];Hd=c[Mc>>2]|0;c[Oc>>2]=Nc;c[Pc>>2]=Hd;Hd=c[Pc>>2]|0;c[Qc>>2]=c[Oc>>2];c[Rc>>2]=Hd;c[c[Qc>>2]>>2]=c[Rc>>2];a[Sc+0>>0]=a[Nc+0>>0]|0;a[Sc+1>>0]=a[Nc+1>>0]|0;a[Sc+2>>0]=a[Nc+2>>0]|0;a[Sc+3>>0]=a[Nc+3>>0]|0;c[Uc>>2]=Tc;Hd=c[Uc>>2]|0;a[Vc+0>>0]=a[Sc+0>>0]|0;a[Vc+1>>0]=a[Sc+1>>0]|0;a[Vc+2>>0]=a[Sc+2>>0]|0;a[Vc+3>>0]=a[Sc+3>>0]|0;c[Wc>>2]=Hd;c[c[Wc>>2]>>2]=c[Vc>>2];c[Xc>>2]=Cc;c[Yc>>2]=Tc;do if((c[c[Xc>>2]>>2]|0)==(c[c[Yc>>2]>>2]|0)){g=(c[G>>2]|0)+(c[fc>>2]<<2)|0;c[gc>>2]=l;c[hc>>2]=g;hf(ic,c[gc>>2]|0,c[hc>>2]|0);c[rb>>2]=jc;c[lc>>2]=ic;g=c[lc>>2]|0;c[mc>>2]=c[rb>>2];c[nc>>2]=g;g=c[mc>>2]|0;Hd=c[nc>>2]|0;c[oc+0>>2]=c[Hd+0>>2];a[pc+0>>0]=a[oc+0>>0]|0;a[pc+1>>0]=a[oc+1>>0]|0;a[pc+2>>0]=a[oc+2>>0]|0;a[pc+3>>0]=a[oc+3>>0]|0;c[qc>>2]=g;Hd=c[qc>>2]|0;a[rc+0>>0]=a[pc+0>>0]|0;a[rc+1>>0]=a[pc+1>>0]|0;a[rc+2>>0]=a[pc+2>>0]|0;a[rc+3>>0]=a[pc+3>>0]|0;c[sc>>2]=Hd;c[c[sc>>2]>>2]=c[rc>>2];a[g+4>>0]=a[(c[nc>>2]|0)+4>>0]&1;g=(c[G>>2]|0)+(c[fc>>2]<<2)|0;c[tc>>2]=gb;c[uc>>2]=g;g=c[tc>>2]|0;Hd=c[g+4>>2]|0;c[vc>>2]=g;c[wc>>2]=(c[vc>>2]|0)+8;c[xc>>2]=c[wc>>2];if((Hd|0)==(c[c[xc>>2]>>2]|0)){Dh(g,c[uc>>2]|0);break}c[Zc>>2]=g;c[_c>>2]=(c[Zc>>2]|0)+8;c[$c>>2]=c[_c>>2];Gd=c[$c>>2]|0;c[ad>>2]=c[g+4>>2];Hd=c[ad>>2]|0;f=c[uc>>2]|0;c[bd>>2]=Gd;c[cd>>2]=Hd;c[dd>>2]=f;f=c[cd>>2]|0;if((f|0)!=0)c[f>>2]=c[c[dd>>2]>>2];Hd=g+4|0;c[Hd>>2]=(c[Hd>>2]|0)+4}while(0);c[fc>>2]=(c[fc>>2]|0)+1}c[zb>>2]=kb;c[Ab>>2]=c[zb>>2];c[Bb>>2]=c[Ab>>2];Gd=c[Bb>>2]|0;c[Cb>>2]=Gd;c[Eb>>2]=Db;c[Fb>>2]=-1;Hd=c[Fb>>2]|0;c[Gb>>2]=c[Eb>>2];c[Hb>>2]=Hd;c[c[Gb>>2]>>2]=0;c[Ib>>2]=c[Db>>2];c[Jb>>2]=Ib;c[Gd>>2]=0;c[Lb>>2]=Kb;c[Mb>>2]=-1;Hd=c[Mb>>2]|0;c[Nb>>2]=c[Lb>>2];c[Ob>>2]=Hd;c[c[Nb>>2]>>2]=0;c[Pb>>2]=c[Kb>>2];c[Qb>>2]=Pb;c[Gd+4>>2]=0;c[Sb>>2]=Rb;c[Tb>>2]=-1;Hd=c[Tb>>2]|0;c[Ub>>2]=c[Sb>>2];c[Vb>>2]=Hd;c[c[Ub>>2]>>2]=0;c[Wb>>2]=c[Rb>>2];c[Xb>>2]=Wb;c[Yb>>2]=Gd+8;c[Zb>>2]=0;Gd=c[Zb>>2]|0;c[_b>>2]=c[Yb>>2];c[$b>>2]=Gd;Gd=c[_b>>2]|0;c[ac>>2]=$b;Hd=c[c[ac>>2]>>2]|0;c[bc>>2]=Gd;c[cc>>2]=Hd;Hd=c[bc>>2]|0;c[dc>>2]=Hd;c[ec>>2]=cc;c[Hd>>2]=c[c[ec>>2]>>2];c[tb>>2]=0;while(1){Gd=c[tb>>2]|0;c[ub>>2]=gb;Hd=c[ub>>2]|0;if(!(Gd>>>0<(((c[Hd+4>>2]|0)-(c[Hd>>2]|0)|0)/4|0)>>>0))break;c[sb>>2]=(c[tb>>2]|0)+1;while(1){Gd=c[sb>>2]|0;c[kc>>2]=gb;Hd=c[kc>>2]|0;if(!(Gd>>>0<(((c[Hd+4>>2]|0)-(c[Hd>>2]|0)|0)/4|0)>>>0))break;Fd=c[z>>2]|0;Gd=c[C>>2]|0;Hd=c[tb>>2]|0;c[vb>>2]=gb;c[wb>>2]=Hd;Hd=c[(c[c[vb>>2]>>2]|0)+(c[wb>>2]<<2)>>2]|0;Ed=c[sb>>2]|0;c[xb>>2]=gb;c[yb>>2]=Ed;Hg(Fd,Gd,Hd,c[(c[c[xb>>2]>>2]|0)+(c[yb>>2]<<2)>>2]|0,kb);c[sb>>2]=(c[sb>>2]|0)+1}c[tb>>2]=(c[tb>>2]|0)+1}a:while(1){c[q>>2]=gb;Hd=c[q>>2]|0;if(!((((c[Hd+4>>2]|0)-(c[Hd>>2]|0)|0)/4|0)>>>0>(c[r>>2]|0)>>>0))break;c[n>>2]=kb;c[o>>2]=0;if(+h[(c[c[n>>2]>>2]|0)+(c[o>>2]<<5)+24>>3]>=+h[p>>3]){h[p>>3]=1.0e+99;c[r>>2]=c[s>>2];continue}c[t>>2]=kb;c[u>>2]=0;c[v>>2]=c[(c[c[t>>2]>>2]|0)+(c[u>>2]<<5)>>2];c[w>>2]=kb;c[x>>2]=0;c[y>>2]=c[(c[c[w>>2]>>2]|0)+(c[x>>2]<<5)+4>>2];Gg((c[z>>2]|0)+((c[v>>2]|0)*2832|0)|0,(c[z>>2]|0)+((c[y>>2]|0)*2832|0)|0);c[A>>2]=kb;c[B>>2]=0;h[(c[z>>2]|0)+((c[v>>2]|0)*2832|0)+2824>>3]=+h[(c[c[A>>2]>>2]|0)+(c[B>>2]<<5)+16>>3];Hd=(c[C>>2]|0)+(c[v>>2]<<2)|0;c[Hd>>2]=(c[Hd>>2]|0)+(c[(c[C>>2]|0)+(c[y>>2]<<2)>>2]|0);c[D>>2]=0;while(1){if((c[D>>2]|0)>=(c[E>>2]|0))break;if((c[(c[G>>2]|0)+(c[D>>2]<<2)>>2]|0)==(c[y>>2]|0))c[(c[G>>2]|0)+(c[D>>2]<<2)>>2]=c[v>>2];c[D>>2]=(c[D>>2]|0)+1}c[F>>2]=0;while(1){Gd=(c[F>>2]|0)+1|0;c[H>>2]=gb;Hd=c[H>>2]|0;if(!(Gd>>>0<(((c[Hd+4>>2]|0)-(c[Hd>>2]|0)|0)/4|0)>>>0))break;Hd=c[F>>2]|0;c[N>>2]=gb;c[O>>2]=Hd;if((c[(c[c[N>>2]>>2]|0)+(c[O>>2]<<2)>>2]|0)>=(c[y>>2]|0)){Hd=(c[F>>2]|0)+1|0;c[P>>2]=gb;c[Q>>2]=Hd;Hd=c[(c[c[P>>2]>>2]|0)+(c[Q>>2]<<2)>>2]|0;Gd=c[F>>2]|0;c[R>>2]=gb;c[S>>2]=Gd;c[(c[c[R>>2]>>2]|0)+(c[S>>2]<<2)>>2]=Hd}c[F>>2]=(c[F>>2]|0)+1}c[I>>2]=gb;Hd=c[I>>2]|0;rb=(c[Hd+4>>2]|0)+ -4|0;c[J>>2]=Hd;c[K>>2]=rb;rb=c[K>>2]|0;c[L>>2]=c[J>>2];c[M>>2]=rb;rb=c[L>>2]|0;while(1){if((c[M>>2]|0)==(c[rb+4>>2]|0))break;c[U>>2]=rb;c[V>>2]=(c[U>>2]|0)+8;c[W>>2]=c[V>>2];Hd=c[W>>2]|0;Fd=rb+4|0;Gd=(c[Fd>>2]|0)+ -4|0;c[Fd>>2]=Gd;c[X>>2]=Gd;Gd=c[X>>2]|0;c[Y>>2]=Hd;c[Z>>2]=Gd;Gd=c[Y>>2]|0;Hd=c[Z>>2]|0;a[$+0>>0]=a[_+0>>0]|0;c[aa>>2]=Gd;c[ba>>2]=Hd}c[T>>2]=0;while(1){Gd=c[T>>2]|0;c[ca>>2]=kb;Hd=c[ca>>2]|0;if(!(Gd>>>0<(((c[Hd+4>>2]|0)-(c[Hd>>2]|0)|0)/32|0)>>>0))break;Hd=c[T>>2]|0;c[da>>2]=kb;c[ea>>2]=Hd;c[fa>>2]=(c[c[da>>2]>>2]|0)+(c[ea>>2]<<5);if(!((((c[c[fa>>2]>>2]|0)!=(c[v>>2]|0)?(c[(c[fa>>2]|0)+4>>2]|0)!=(c[v>>2]|0):0)?(c[c[fa>>2]>>2]|0)!=(c[y>>2]|0):0)?(c[(c[fa>>2]|0)+4>>2]|0)!=(c[y>>2]|0):0))a[(c[fa>>2]|0)+8>>0]=0;c[T>>2]=(c[T>>2]|0)+1}b:while(1){c[ga>>2]=kb;Hd=c[ga>>2]|0;if((c[Hd>>2]|0)==(c[Hd+4>>2]|0))break;c[ia>>2]=kb;c[ja>>2]=0;if(!(a[(c[c[ia>>2]>>2]|0)+(c[ja>>2]<<5)+8>>0]&1^1))break;c[ka>>2]=kb;Hd=c[ka>>2]|0;Gd=c[Hd>>2]|0;c[la>>2]=Hd;c[ma>>2]=Gd;Gd=c[ma>>2]|0;c[oa>>2]=na;c[pa>>2]=Gd;Gd=c[pa>>2]|0;c[qa>>2]=c[oa>>2];c[ra>>2]=Gd;c[c[qa>>2]>>2]=c[ra>>2];c[sa>>2]=kb;Gd=c[sa>>2]|0;Hd=c[Gd+4>>2]|0;c[ta>>2]=Gd;c[ua>>2]=Hd;Hd=c[ua>>2]|0;c[wa>>2]=va;c[xa>>2]=Hd;Hd=c[xa>>2]|0;c[ya>>2]=c[wa>>2];c[za>>2]=Hd;c[c[ya>>2]>>2]=c[za>>2];a[Aa+0>>0]=a[na+0>>0]|0;a[Aa+1>>0]=a[na+1>>0]|0;a[Aa+2>>0]=a[na+2>>0]|0;a[Aa+3>>0]=a[na+3>>0]|0;a[Ba+0>>0]=a[va+0>>0]|0;a[Ba+1>>0]=a[va+1>>0]|0;a[Ba+2>>0]=a[va+2>>0]|0;a[Ba+3>>0]=a[va+3>>0]|0;a[Da+0>>0]=a[Ca+0>>0]|0;c[Ea+0>>2]=c[Aa+0>>2];c[Fa+0>>2]=c[Ba+0>>2];c[Ga>>2]=Ba;c[Ha>>2]=Aa;c[Ia>>2]=c[Ga>>2];Hd=c[c[Ia>>2]>>2]|0;c[Ja>>2]=c[Ha>>2];Hd=(Hd-(c[c[Ja>>2]>>2]|0)|0)/32|0;a[Ka+0>>0]=a[Ea+0>>0]|0;a[Ka+1>>0]=a[Ea+1>>0]|0;a[Ka+2>>0]=a[Ea+2>>0]|0;a[Ka+3>>0]=a[Ea+3>>0]|0;a[La+0>>0]=a[Fa+0>>0]|0;a[La+1>>0]=a[Fa+1>>0]|0;a[La+2>>0]=a[Fa+2>>0]|0;a[La+3>>0]=a[Fa+3>>0]|0;c[Ma>>2]=Da;c[Na>>2]=Hd;if((c[Na>>2]|0)>1){c[Oa>>2]=Ka;Hd=c[c[Oa>>2]>>2]|0;c[Pa>>2]=La;Gd=c[Pa>>2]|0;c[Gd>>2]=(c[Gd>>2]|0)+ -32;c[Qa>>2]=Gd;Gd=c[c[Qa>>2]>>2]|0;c[Ra>>2]=Hd;c[Sa>>2]=Gd;c[Ta>>2]=c[Ra>>2];Gd=c[Ta>>2]|0;c[Ua+0>>2]=c[Gd+0>>2];c[Ua+4>>2]=c[Gd+4>>2];c[Ua+8>>2]=c[Gd+8>>2];c[Ua+12>>2]=c[Gd+12>>2];c[Ua+16>>2]=c[Gd+16>>2];c[Ua+20>>2]=c[Gd+20>>2];c[Ua+24>>2]=c[Gd+24>>2];c[Ua+28>>2]=c[Gd+28>>2];Gd=c[Ra>>2]|0;c[Va>>2]=c[Sa>>2];Hd=c[Va>>2]|0;c[Gd+0>>2]=c[Hd+0>>2];c[Gd+4>>2]=c[Hd+4>>2];c[Gd+8>>2]=c[Hd+8>>2];c[Gd+12>>2]=c[Hd+12>>2];c[Gd+16>>2]=c[Hd+16>>2];c[Gd+20>>2]=c[Hd+20>>2];c[Gd+24>>2]=c[Hd+24>>2];c[Gd+28>>2]=c[Hd+28>>2];Gd=c[Sa>>2]|0;c[Wa>>2]=Ua;Hd=c[Wa>>2]|0;c[Gd+0>>2]=c[Hd+0>>2];c[Gd+4>>2]=c[Hd+4>>2];c[Gd+8>>2]=c[Hd+8>>2];c[Gd+12>>2]=c[Hd+12>>2];c[Gd+16>>2]=c[Hd+16>>2];c[Gd+20>>2]=c[Hd+20>>2];c[Gd+24>>2]=c[Hd+24>>2];c[Gd+28>>2]=c[Hd+28>>2];c[Xa+0>>2]=c[Ka+0>>2];c[Ya+0>>2]=c[La+0>>2];Gd=c[Ma>>2]|0;Hd=(c[Na>>2]|0)-1|0;c[Za+0>>2]=c[Xa+0>>2];c[_a+0>>2]=c[Ya+0>>2];sf(Za,_a,Gd,Hd)}c[$a>>2]=kb;Hd=c[$a>>2]|0;rb=(c[Hd+4>>2]|0)+ -32|0;c[ab>>2]=Hd;c[bb>>2]=rb;rb=c[bb>>2]|0;c[cb>>2]=c[ab>>2];c[db>>2]=rb;rb=c[cb>>2]|0;while(1){if((c[db>>2]|0)==(c[rb+4>>2]|0))continue b;c[eb>>2]=rb;c[fb>>2]=(c[eb>>2]|0)+8;c[j>>2]=c[fb>>2];Hd=c[j>>2]|0;Fd=rb+4|0;Gd=(c[Fd>>2]|0)+ -32|0;c[Fd>>2]=Gd;c[hb>>2]=Gd;Gd=c[hb>>2]|0;c[ib>>2]=Hd;c[jb>>2]=Gd;Gd=c[ib>>2]|0;Hd=c[jb>>2]|0;a[lb+0>>0]=a[k+0>>0]|0;c[mb>>2]=Gd;c[nb>>2]=Hd}}c[ha>>2]=0;while(1){Gd=c[ha>>2]|0;c[ob>>2]=gb;Hd=c[ob>>2]|0;if(!(Gd>>>0<(((c[Hd+4>>2]|0)-(c[Hd>>2]|0)|0)/4|0)>>>0))continue a;Fd=c[z>>2]|0;Gd=c[C>>2]|0;Hd=c[v>>2]|0;Ed=c[ha>>2]|0;c[pb>>2]=gb;c[qb>>2]=Ed;Hg(Fd,Gd,Hd,c[(c[c[pb>>2]>>2]|0)+(c[qb>>2]<<2)>>2]|0,kb);c[ha>>2]=(c[ha>>2]|0)+1}}pf(kb);we(gb);bf(l);i=m;return}function yg(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0;Y=i;i=i+480|0;C=Y+432|0;B=Y+16|0;A=Y+200|0;y=Y+32|0;w=Y+304|0;x=Y+372|0;u=Y+360|0;v=Y+312|0;s=Y+196|0;r=Y+256|0;q=Y+128|0;p=Y+120|0;o=Y+444|0;n=Y+104|0;m=Y+100|0;t=Y+412|0;G=Y+96|0;H=Y+416|0;E=Y+236|0;F=Y+436|0;I=Y+112|0;W=Y+116|0;V=Y+72|0;U=Y+124|0;T=Y+8|0;R=Y+132|0;S=Y+136|0;P=Y+404|0;Q=Y+140|0;N=Y+144|0;M=Y+148|0;L=Y+152|0;O=Y+156|0;La=Y+160|0;Ka=Y+164|0;K=Y+168|0;Ia=Y+172|0;pa=Y+176|0;qa=Y+180|0;na=Y+184|0;oa=Y+188|0;la=Y+192|0;ka=Y+24|0;ja=Y+400|0;ha=Y+40|0;fa=Y+204|0;ga=Y+208|0;da=Y+212|0;j=Y+216|0;ba=Y+220|0;aa=Y+468|0;$=Y+472|0;_=Y+440|0;Z=Y+448|0;g=Y+240|0;X=Y+244|0;ca=Y+248|0;Ga=Y+252|0;Fa=Y+48|0;Ea=Y+260|0;Da=Y;Ba=Y+268|0;Ca=Y+272|0;za=Y+276|0;Aa=Y+280|0;xa=Y+284|0;wa=Y+288|0;va=Y+292|0;ya=Y+296|0;Za=Y+300|0;Ya=Y+80|0;Xa=Y+308|0;Wa=Y+64|0;Ta=Y+316|0;Ua=Y+320|0;Va=Y+396|0;Ra=Y+324|0;Sa=Y+328|0;Na=Y+332|0;Oa=Y+336|0;Pa=Y+344|0;$a=Y+352|0;_a=Y+356|0;ab=Y+452|0;bb=Y+364|0;sa=Y+460|0;l=Y+464|0;J=Y+376|0;Ha=Y+380|0;ea=Y+384|0;Ma=Y+408|0;Qa=Y+424|0;ta=Y+228|0;ra=Y+232|0;ua=Y+88|0;ma=Y+456|0;ia=Y+264|0;Ja=Y+56|0;D=Y+368|0;z=Y+224|0;k=Y+108|0;c[sa>>2]=b;c[l>>2]=d;c[J>>2]=e;c[Ha>>2]=f;c[ab>>2]=ea;c[bb>>2]=Y+476;b=c[bb>>2]|0;c[$a>>2]=c[ab>>2];c[_a>>2]=b;mf(c[$a>>2]|0,c[_a>>2]|0);c[Ma>>2]=0;while(1){if((c[Ma>>2]|0)>=(c[l>>2]|0))break;bb=(c[Ha>>2]|0)+(c[Ma>>2]<<2)|0;c[Na>>2]=ea;c[Oa>>2]=bb;hf(Pa,c[Na>>2]|0,c[Oa>>2]|0);c[Ra>>2]=Qa;c[Sa>>2]=Pa;bb=c[Sa>>2]|0;c[Ta>>2]=c[Ra>>2];c[Ua>>2]=bb;bb=c[Ta>>2]|0;ab=c[Ua>>2]|0;c[Va+0>>2]=c[ab+0>>2];a[Wa+0>>0]=a[Va+0>>0]|0;a[Wa+1>>0]=a[Va+1>>0]|0;a[Wa+2>>0]=a[Va+2>>0]|0;a[Wa+3>>0]=a[Va+3>>0]|0;c[Xa>>2]=bb;ab=c[Xa>>2]|0;a[Ya+0>>0]=a[Wa+0>>0]|0;a[Ya+1>>0]=a[Wa+1>>0]|0;a[Ya+2>>0]=a[Wa+2>>0]|0;a[Ya+3>>0]=a[Wa+3>>0]|0;c[Za>>2]=ab;c[c[Za>>2]>>2]=c[Ya>>2];a[bb+4>>0]=a[(c[Ua>>2]|0)+4>>0]&1;c[Ma>>2]=(c[Ma>>2]|0)+1}c[ta>>2]=0;while(1){if((c[ta>>2]|0)>=(c[l>>2]|0))break;if((c[ta>>2]|0)==0)f=c[c[Ha>>2]>>2]|0;else f=c[(c[Ha>>2]|0)+((c[ta>>2]|0)-1<<2)>>2]|0;c[ra>>2]=f;h[ua>>3]=+Fg((c[sa>>2]|0)+((c[ta>>2]|0)*2832|0)|0,(c[J>>2]|0)+((c[ra>>2]|0)*2832|0)|0);c[va>>2]=ea;c[wa>>2]=c[va>>2];c[xa>>2]=c[wa>>2];bb=c[c[xa>>2]>>2]|0;c[za>>2]=ya;c[Aa>>2]=bb;bb=c[Aa>>2]|0;c[Ba>>2]=c[za>>2];c[Ca>>2]=bb;c[c[Ba>>2]>>2]=c[Ca>>2];a[Da+0>>0]=a[ya+0>>0]|0;a[Da+1>>0]=a[ya+1>>0]|0;a[Da+2>>0]=a[ya+2>>0]|0;a[Da+3>>0]=a[ya+3>>0]|0;c[Ea>>2]=ma;bb=c[Ea>>2]|0;a[Fa+0>>0]=a[Da+0>>0]|0;a[Fa+1>>0]=a[Da+1>>0]|0;a[Fa+2>>0]=a[Da+2>>0]|0;a[Fa+3>>0]=a[Da+3>>0]|0;c[Ga>>2]=bb;c[c[Ga>>2]>>2]=c[Fa>>2];while(1){c[X>>2]=ea;c[g>>2]=c[X>>2];c[Z>>2]=c[g>>2];c[_>>2]=(c[Z>>2]|0)+4;c[$>>2]=c[_>>2];c[aa>>2]=c[$>>2];c[ba>>2]=c[aa>>2];bb=c[ba>>2]|0;c[da>>2]=ca;c[j>>2]=bb;bb=c[j>>2]|0;c[fa>>2]=c[da>>2];c[ga>>2]=bb;c[c[fa>>2]>>2]=c[ga>>2];a[ha+0>>0]=a[ca+0>>0]|0;a[ha+1>>0]=a[ca+1>>0]|0;a[ha+2>>0]=a[ca+2>>0]|0;a[ha+3>>0]=a[ca+3>>0]|0;c[ja>>2]=ia;bb=c[ja>>2]|0;a[ka+0>>0]=a[ha+0>>0]|0;a[ka+1>>0]=a[ha+1>>0]|0;a[ka+2>>0]=a[ha+2>>0]|0;a[ka+3>>0]=a[ha+3>>0]|0;c[la>>2]=bb;c[c[la>>2]>>2]=c[ka>>2];c[na>>2]=ma;c[oa>>2]=ia;bb=c[oa>>2]|0;c[pa>>2]=c[na>>2];c[qa>>2]=bb;if(!((c[c[pa>>2]>>2]|0)==(c[c[qa>>2]>>2]|0)^1))break;bb=(c[sa>>2]|0)+((c[ta>>2]|0)*2832|0)|0;c[Ia>>2]=ma;h[Ja>>3]=+Fg(bb,(c[J>>2]|0)+((c[(c[c[Ia>>2]>>2]|0)+16>>2]|0)*2832|0)|0);if(+h[Ja>>3]<+h[ua>>3]){h[ua>>3]=+h[Ja>>3];c[Ka>>2]=ma;c[ra>>2]=c[(c[c[Ka>>2]>>2]|0)+16>>2]}c[La>>2]=ma;bb=c[La>>2]|0;c[bb>>2]=gf(c[bb>>2]|0)|0}c[(c[Ha>>2]|0)+(c[ta>>2]<<2)>>2]=c[ra>>2];c[ta>>2]=(c[ta>>2]|0)+1}c[L>>2]=ea;c[M>>2]=c[L>>2];c[N>>2]=c[M>>2];bb=c[c[N>>2]>>2]|0;c[P>>2]=O;c[Q>>2]=bb;bb=c[Q>>2]|0;c[R>>2]=c[P>>2];c[S>>2]=bb;c[c[R>>2]>>2]=c[S>>2];a[T+0>>0]=a[O+0>>0]|0;a[T+1>>0]=a[O+1>>0]|0;a[T+2>>0]=a[O+2>>0]|0;a[T+3>>0]=a[O+3>>0]|0;c[U>>2]=D;bb=c[U>>2]|0;a[V+0>>0]=a[T+0>>0]|0;a[V+1>>0]=a[T+1>>0]|0;a[V+2>>0]=a[T+2>>0]|0;a[V+3>>0]=a[T+3>>0]|0;c[W>>2]=bb;c[c[W>>2]>>2]=c[V>>2];while(1){c[m>>2]=ea;c[n>>2]=c[m>>2];c[o>>2]=c[n>>2];c[p>>2]=(c[o>>2]|0)+4;c[q>>2]=c[p>>2];c[r>>2]=c[q>>2];c[s>>2]=c[r>>2];bb=c[s>>2]|0;c[u>>2]=t;c[v>>2]=bb;bb=c[v>>2]|0;c[w>>2]=c[u>>2];c[x>>2]=bb;c[c[w>>2]>>2]=c[x>>2];a[y+0>>0]=a[t+0>>0]|0;a[y+1>>0]=a[t+1>>0]|0;a[y+2>>0]=a[t+2>>0]|0;a[y+3>>0]=a[t+3>>0]|0;c[A>>2]=z;bb=c[A>>2]|0;a[B+0>>0]=a[y+0>>0]|0;a[B+1>>0]=a[y+1>>0]|0;a[B+2>>0]=a[y+2>>0]|0;a[B+3>>0]=a[y+3>>0]|0;c[C>>2]=bb;c[c[C>>2]>>2]=c[B>>2];c[E>>2]=D;c[F>>2]=z;bb=c[F>>2]|0;c[G>>2]=c[E>>2];c[H>>2]=bb;if(!((c[c[G>>2]>>2]|0)==(c[c[H>>2]>>2]|0)^1))break;c[I>>2]=D;tg((c[J>>2]|0)+((c[(c[c[I>>2]>>2]|0)+16>>2]|0)*2832|0)|0);c[K>>2]=D;bb=c[K>>2]|0;c[bb>>2]=gf(c[bb>>2]|0)|0}c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[l>>2]|0))break;Gg((c[J>>2]|0)+((c[(c[Ha>>2]|0)+(c[k>>2]<<2)>>2]|0)*2832|0)|0,(c[sa>>2]|0)+((c[k>>2]|0)*2832|0)|0);c[k>>2]=(c[k>>2]|0)+1}bf(ea);i=Y;return}function zg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0;g=i;i=i+288|0;y=g+212|0;z=g+88|0;w=g+224|0;x=g+60|0;k=g+232|0;l=g+140|0;m=g+256|0;u=g+220|0;v=g+156|0;n=g+84|0;o=g+80|0;s=g+64|0;t=g+68|0;ba=g+72|0;ca=g+76|0;$=g+216|0;aa=g+180|0;_=g+152|0;Z=g+16|0;Y=g+92|0;W=g+32|0;U=g+100|0;V=g+104|0;S=g+108|0;T=g+112|0;Q=g+236|0;P=g+120|0;O=g+252|0;N=g+260|0;M=g+268|0;L=g+144|0;K=g+272|0;R=g+244|0;J=g+176|0;I=g+8|0;H=g+160|0;e=g+24|0;C=g+148|0;D=g+164|0;E=g+168|0;A=g+172|0;B=g+96|0;da=g+184|0;fa=g+188|0;ga=g;ia=g+192|0;ha=g+40|0;ka=g+200|0;ea=g+276|0;ja=g+277|0;la=g+228|0;ma=g+116|0;p=g+196|0;j=g+240|0;f=g+44|0;F=g+124|0;q=g+136|0;r=g+264|0;G=g+248|0;X=g+56|0;h=g+208|0;c[p>>2]=b;c[j>>2]=d;Ag(f,c[p>>2]|0);c[la>>2]=F;c[ma>>2]=g+278;b=c[ma>>2]|0;c[ka>>2]=c[la>>2];c[g+204>>2]=b;b=c[ka>>2]|0;a[ha+0>>0]=a[ja+0>>0]|0;c[ia>>2]=ea;d=c[ia>>2]|0;a[ga+0>>0]=a[ha+0>>0]|0;c[fa>>2]=d;Ve(b,ea);c[q>>2]=0;c[r>>2]=0;while(1){la=c[r>>2]|0;c[da>>2]=c[j>>2];ma=c[da>>2]|0;if(!(la>>>0<(((c[ma+4>>2]|0)-(c[ma>>2]|0)|0)/4|0)>>>0))break;ma=c[r>>2]|0;c[A>>2]=c[j>>2];c[B>>2]=ma;ma=(c[c[A>>2]>>2]|0)+(c[B>>2]<<2)|0;c[C>>2]=F;c[D>>2]=ma;Te(E,c[C>>2]|0,c[D>>2]|0);a[e+0>>0]=a[E+0>>0]|0;a[e+1>>0]=a[E+1>>0]|0;a[e+2>>0]=a[E+2>>0]|0;a[e+3>>0]=a[E+3>>0]|0;c[H>>2]=G;ma=c[H>>2]|0;a[I+0>>0]=a[e+0>>0]|0;a[I+1>>0]=a[e+1>>0]|0;a[I+2>>0]=a[e+2>>0]|0;a[I+3>>0]=a[e+3>>0]|0;c[J>>2]=ma;ma=c[J>>2]|0;c[ma+0>>2]=c[I+0>>2];c[K>>2]=F;c[L>>2]=c[K>>2];c[M>>2]=c[L>>2];c[N>>2]=(c[M>>2]|0)+4;c[O>>2]=c[N>>2];c[P>>2]=c[O>>2];c[Q>>2]=c[P>>2];ma=c[Q>>2]|0;c[S>>2]=R;c[T>>2]=ma;ma=c[T>>2]|0;c[U>>2]=c[S>>2];c[V>>2]=ma;c[c[U>>2]>>2]=c[V>>2];a[W+0>>0]=a[R+0>>0]|0;a[W+1>>0]=a[R+1>>0]|0;a[W+2>>0]=a[R+2>>0]|0;a[W+3>>0]=a[R+3>>0]|0;c[Y>>2]=X;ma=c[Y>>2]|0;a[Z+0>>0]=a[W+0>>0]|0;a[Z+1>>0]=a[W+1>>0]|0;a[Z+2>>0]=a[W+2>>0]|0;a[Z+3>>0]=a[W+3>>0]|0;c[_>>2]=ma;ma=c[_>>2]|0;c[ma+0>>2]=c[Z+0>>2];c[$>>2]=G;c[aa>>2]=X;ma=c[aa>>2]|0;c[ba>>2]=c[$>>2];c[ca>>2]=ma;if((c[c[ba>>2]>>2]|0)==(c[c[ca>>2]>>2]|0)){ma=c[q>>2]|0;la=c[r>>2]|0;c[s>>2]=c[j>>2];c[t>>2]=la;c[(He(F,(c[c[s>>2]>>2]|0)+(c[t>>2]<<2)|0)|0)>>2]=ma;ma=c[q>>2]|0;c[u>>2]=c[p>>2];c[v>>2]=ma;ma=(c[c[u>>2]>>2]|0)+((c[v>>2]|0)*2832|0)|0;la=c[r>>2]|0;c[w>>2]=c[j>>2];c[x>>2]=la;la=c[(c[c[w>>2]>>2]|0)+(c[x>>2]<<2)>>2]|0;c[y>>2]=f;c[z>>2]=la;qz(ma|0,(c[c[y>>2]>>2]|0)+((c[z>>2]|0)*2832|0)|0,2832)|0;c[q>>2]=(c[q>>2]|0)+1}c[r>>2]=(c[r>>2]|0)+1}vg(c[p>>2]|0,c[q>>2]|0);c[h>>2]=0;while(1){la=c[h>>2]|0;c[k>>2]=c[j>>2];ma=c[k>>2]|0;if(!(la>>>0<(((c[ma+4>>2]|0)-(c[ma>>2]|0)|0)/4|0)>>>0))break;ma=c[h>>2]|0;c[l>>2]=c[j>>2];c[m>>2]=ma;ma=c[(He(F,(c[c[l>>2]>>2]|0)+(c[m>>2]<<2)|0)|0)>>2]|0;la=c[h>>2]|0;c[n>>2]=c[j>>2];c[o>>2]=la;c[(c[c[n>>2]>>2]|0)+(c[o>>2]<<2)>>2]=ma;c[h>>2]=(c[h>>2]|0)+1}Ie(F);og(f);i=g;return}function Ag(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;Bg(c[f>>2]|0,c[e>>2]|0);i=d;return}function Bg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;e=i;i=i+208|0;h=e+96|0;P=e+80|0;Q=e+76|0;S=e+176|0;R=e+184|0;O=e+36|0;M=e+156|0;I=e+144|0;J=e+92|0;L=e+60|0;K=e+56|0;H=e+40|0;F=e+44|0;B=e+48|0;C=e+52|0;E=e+140|0;D=e+116|0;A=e+88|0;y=e+72|0;q=e+164|0;j=e+172|0;l=e+180|0;n=e+188|0;k=e+192|0;m=e+16|0;s=e+196|0;o=e+100|0;t=e+104|0;p=e+200|0;r=e+8|0;u=e+112|0;w=e+136|0;v=e+24|0;T=e+120|0;U=e+124|0;V=e+128|0;N=e+132|0;G=e+32|0;z=e+64|0;x=e+202|0;X=e+148|0;Y=e;_=e+160|0;Z=e+203|0;$=e+152|0;aa=e+28|0;ba=e+84|0;ca=e+68|0;g=e+168|0;W=e+201|0;f=e+108|0;c[ca>>2]=b;c[g>>2]=d;d=c[ca>>2]|0;c[ba>>2]=c[g>>2];c[aa>>2]=(c[ba>>2]|0)+8;c[$>>2]=c[aa>>2];c[_>>2]=c[$>>2];b=c[_>>2]|0;a[Y+0>>0]=a[Z+0>>0]|0;c[X>>2]=b;c[U>>2]=d;c[V>>2]=W;b=c[U>>2]|0;c[T>>2]=b;c[S>>2]=O;c[R>>2]=-1;R=c[R>>2]|0;c[P>>2]=c[S>>2];c[Q>>2]=R;c[c[P>>2]>>2]=0;c[N>>2]=c[O>>2];c[M>>2]=N;c[b>>2]=0;c[L>>2]=H;c[K>>2]=-1;K=c[K>>2]|0;c[I>>2]=c[L>>2];c[J>>2]=K;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[F>>2]=G;c[b+4>>2]=0;b=b+8|0;c[E>>2]=A;c[D>>2]=-1;D=c[D>>2]|0;c[B>>2]=c[E>>2];c[C>>2]=D;c[c[B>>2]>>2]=0;c[z>>2]=c[A>>2];c[y>>2]=z;a[v+0>>0]=a[x+0>>0]|0;c[u>>2]=b;c[w>>2]=0;u=c[u>>2]|0;b=c[w>>2]|0;a[r+0>>0]=a[v+0>>0]|0;c[o>>2]=u;c[t>>2]=b;o=c[o>>2]|0;c[s>>2]=t;b=c[c[s>>2]>>2]|0;c[q>>2]=r;a[m+0>>0]=a[p+0>>0]|0;c[n>>2]=o;c[k>>2]=b;b=c[n>>2]|0;c[l>>2]=m;c[j>>2]=k;c[b>>2]=c[c[j>>2]>>2];c[h>>2]=c[g>>2];b=c[h>>2]|0;c[f>>2]=((c[b+4>>2]|0)-(c[b>>2]|0)|0)/2832|0;if(!((c[f>>2]|0)>>>0>0)){i=e;return}Cg(d,c[f>>2]|0);Dg(d,c[c[g>>2]>>2]|0,c[(c[g>>2]|0)+4>>2]|0);i=e;return}function Cg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;k=i;i=i+64|0;d=k+36|0;e=k+8|0;l=k+32|0;j=k+40|0;f=k+48|0;g=k+16|0;m=k;n=k+24|0;o=k+4|0;p=k+28|0;h=k+20|0;c[p>>2]=a;c[h>>2]=b;b=c[p>>2]|0;a=c[h>>2]|0;if(a>>>0>(Eg(b)|0)>>>0)Zt(b);else{c[o>>2]=b;c[n>>2]=(c[o>>2]|0)+8;c[m>>2]=c[n>>2];p=c[h>>2]|0;c[e>>2]=c[m>>2];c[l>>2]=p;p=c[l>>2]|0;c[k+44>>2]=c[e>>2];c[d>>2]=p;c[k+12>>2]=0;p=Gx((c[d>>2]|0)*2832|0)|0;c[b+4>>2]=p;c[b>>2]=p;p=(c[b>>2]|0)+((c[h>>2]|0)*2832|0)|0;c[g>>2]=b;c[f>>2]=(c[g>>2]|0)+8;c[j>>2]=c[f>>2];c[c[j>>2]>>2]=p;i=k;return}}function Dg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;k=i;i=i+48|0;g=k+36|0;j=k+16|0;e=k;l=k+28|0;n=k+32|0;o=k+40|0;p=k+12|0;q=k+24|0;h=k+20|0;m=k+8|0;f=k+4|0;c[q>>2]=a;c[h>>2]=b;c[m>>2]=d;d=c[q>>2]|0;c[p>>2]=d;c[o>>2]=(c[p>>2]|0)+8;c[n>>2]=c[o>>2];c[f>>2]=c[n>>2];while(1){if((c[h>>2]|0)==(c[m>>2]|0))break;p=c[f>>2]|0;c[g>>2]=c[d+4>>2];q=c[g>>2]|0;b=c[h>>2]|0;c[j>>2]=p;c[e>>2]=q;c[l>>2]=b;b=c[e>>2]|0;if((b|0)!=0)qz(b|0,c[l>>2]|0,2832)|0;q=d+4|0;c[q>>2]=(c[q>>2]|0)+2832;c[h>>2]=(c[h>>2]|0)+2832}i=k;return}function Eg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+80|0;q=h+44|0;r=h+40|0;s=h+8|0;u=h+12|0;t=h+76|0;k=h+36|0;g=h+16|0;f=h+20|0;d=h+68|0;e=h+32|0;l=h;n=h+48|0;j=h+52|0;m=h+77|0;v=h+60|0;w=h+64|0;x=h+28|0;y=h+24|0;p=h+56|0;o=h+72|0;c[y>>2]=b;c[x>>2]=c[y>>2];c[w>>2]=(c[x>>2]|0)+8;c[v>>2]=c[w>>2];c[u>>2]=c[v>>2];b=c[u>>2]|0;a[s+0>>0]=a[t+0>>0]|0;c[r>>2]=b;c[q>>2]=c[r>>2];c[p>>2]=1516584;c[o>>2]=4294967295/2|0;c[n>>2]=p;c[j>>2]=o;b=c[n>>2]|0;j=c[j>>2]|0;a[l+0>>0]=a[m+0>>0]|0;c[d>>2]=b;c[e>>2]=j;j=c[e>>2]|0;b=c[d>>2]|0;c[k>>2]=l;c[g>>2]=j;c[f>>2]=b;i=h;return c[((c[c[g>>2]>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0?c[e>>2]|0:c[d>>2]|0)>>2]|0}function Fg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0.0;d=i;i=i+2848|0;e=d+2832|0;j=d+2844|0;f=d+2840|0;g=d;c[j>>2]=a;c[f>>2]=b;if((c[(c[j>>2]|0)+2816>>2]|0)==0){h[e>>3]=0.0;k=+h[e>>3];i=d;return+k}else{qz(g|0,c[j>>2]|0,2832)|0;Gg(g,c[f>>2]|0);k=+wg(g);h[e>>3]=k- +h[(c[f>>2]|0)+2824>>3];k=+h[e>>3];i=d;return+k}return 0.0}function Gg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;g=d+8|0;f=d+4|0;e=d;c[g>>2]=a;c[f>>2]=b;b=c[g>>2]|0;a=b+2816|0;c[a>>2]=(c[a>>2]|0)+(c[(c[f>>2]|0)+2816>>2]|0);c[e>>2]=0;while(1){if((c[e>>2]|0)>=704)break;g=b+(c[e>>2]<<2)|0;c[g>>2]=(c[g>>2]|0)+(c[(c[f>>2]|0)+(c[e>>2]<<2)>>2]|0);c[e>>2]=(c[e>>2]|0)+1}i=d;return}function Hg(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0.0;M=i;i=i+3136|0;k=M+3040|0;l=M+3100|0;ra=M+2992|0;ga=M+3092|0;qa=M+2984|0;na=M+3048|0;oa=M+3044|0;ma=M+2872|0;ja=M+3124|0;ka=M+3116|0;fa=M+3129|0;R=M+3084|0;T=M+2988|0;U=M+3e3|0;r=M+2996|0;Q=M+2932|0;P=M+3068|0;O=M+2936|0;X=M+2940|0;W=M+2944|0;V=M+2948|0;_=M+2952|0;S=M+2956|0;H=M+2960|0;G=M+3064|0;J=M+2964|0;I=M+2968|0;j=M+2972|0;L=M+2976|0;N=M+2980|0;z=M+3088|0;y=M+3096|0;B=M+3104|0;A=M+3112|0;E=M+3120|0;D=M+3004|0;F=M+3008|0;ha=M+3012|0;ia=M+3016|0;m=M+3020|0;n=M+3060|0;p=M+3024|0;o=M+3028|0;s=M+3032|0;q=M+3036|0;u=M+8|0;w=M+24|0;x=M;pa=M+3052|0;ea=M+3056|0;sa=M+2928|0;da=M+3072|0;$=M+3076|0;t=M+2920|0;ta=M+2924|0;ca=M+3130|0;Z=M+2880|0;ba=M+2864|0;la=M+16|0;aa=M+32|0;Y=M+2912|0;K=M+3080|0;C=M+3108|0;v=M+3128|0;c[ea>>2]=b;c[sa>>2]=d;c[da>>2]=e;c[$>>2]=f;c[t>>2]=g;if((c[da>>2]|0)==(c[$>>2]|0)){i=M;return}if((c[$>>2]|0)<(c[da>>2]|0)){c[ta>>2]=c[$>>2];c[$>>2]=c[da>>2];c[da>>2]=c[ta>>2]}a[ca>>0]=0;c[Z+0>>2]=0;c[Z+4>>2]=0;c[Z+8>>2]=0;c[Z+12>>2]=0;c[Z+16>>2]=0;c[Z+20>>2]=0;c[Z+24>>2]=0;c[Z+28>>2]=0;c[Z>>2]=c[da>>2];c[Z+4>>2]=c[$>>2];a[Z+8>>0]=1;h[Z+24>>3]=+uf(c[(c[sa>>2]|0)+(c[da>>2]<<2)>>2]|0,c[(c[sa>>2]|0)+(c[$>>2]<<2)>>2]|0)*.5;g=Z+24|0;h[g>>3]=+h[g>>3]- +h[(c[ea>>2]|0)+((c[da>>2]|0)*2832|0)+2824>>3];g=Z+24|0;h[g>>3]=+h[g>>3]- +h[(c[ea>>2]|0)+((c[$>>2]|0)*2832|0)+2824>>3];g=(c[ea>>2]|0)+((c[$>>2]|0)*2832|0)|0;do if((c[(c[ea>>2]|0)+((c[da>>2]|0)*2832|0)+2816>>2]|0)!=0){if((c[g+2816>>2]|0)==0){h[Z+16>>3]=+h[(c[ea>>2]|0)+((c[da>>2]|0)*2832|0)+2824>>3];a[ca>>0]=1;break}c[pa>>2]=c[t>>2];b=c[pa>>2]|0;if((c[b>>2]|0)==(c[b+4>>2]|0))ua=1.0e+99;else{h[la>>3]=0.0;c[ha>>2]=c[t>>2];c[ia>>2]=0;b=(c[c[ha>>2]>>2]|0)+(c[ia>>2]<<5)+24|0;c[ja>>2]=la;c[ka>>2]=b;b=c[ja>>2]|0;d=c[ka>>2]|0;a[ma+0>>0]=a[fa+0>>0]|0;c[na>>2]=b;c[oa>>2]=d;d=c[na>>2]|0;b=c[oa>>2]|0;c[ra>>2]=ma;c[ga>>2]=d;c[qa>>2]=b;ua=+h[(+h[c[ga>>2]>>3]<+h[c[qa>>2]>>3]?c[oa>>2]|0:c[na>>2]|0)>>3]}h[ba>>3]=ua;qz(aa|0,(c[ea>>2]|0)+((c[da>>2]|0)*2832|0)|0,2832)|0;Gg(aa,(c[ea>>2]|0)+((c[$>>2]|0)*2832|0)|0);h[Y>>3]=+wg(aa);if(+h[Y>>3]<+h[ba>>3]- +h[Z+24>>3]){h[Z+16>>3]=+h[Y>>3];a[ca>>0]=1}}else{h[Z+16>>3]=+h[g+2824>>3];a[ca>>0]=1}while(0);if(!(a[ca>>0]&1)){i=M;return}Y=Z+24|0;h[Y>>3]=+h[Y>>3]+ +h[Z+16>>3];c[_>>2]=c[t>>2];c[S>>2]=Z;Y=c[_>>2]|0;b=c[Y+4>>2]|0;c[V>>2]=Y;c[W>>2]=(c[V>>2]|0)+8;c[X>>2]=c[W>>2];if((b|0)!=(c[c[X>>2]>>2]|0)){c[O>>2]=Y;c[P>>2]=(c[O>>2]|0)+8;c[Q>>2]=c[P>>2];d=c[Q>>2]|0;c[R>>2]=c[Y+4>>2];b=c[R>>2]|0;O=c[S>>2]|0;c[T>>2]=d;c[U>>2]=b;c[r>>2]=O;O=c[U>>2]|0;if((O|0)!=0){b=c[r>>2]|0;c[O+0>>2]=c[b+0>>2];c[O+4>>2]=c[b+4>>2];c[O+8>>2]=c[b+8>>2];c[O+12>>2]=c[b+12>>2];c[O+16>>2]=c[b+16>>2];c[O+20>>2]=c[b+20>>2];c[O+24>>2]=c[b+24>>2];c[O+28>>2]=c[b+28>>2]}b=Y+4|0;c[b>>2]=(c[b>>2]|0)+32}else wf(Y,c[S>>2]|0);c[N>>2]=c[t>>2];b=c[N>>2]|0;d=c[b>>2]|0;c[j>>2]=b;c[L>>2]=d;d=c[L>>2]|0;c[J>>2]=K;c[I>>2]=d;d=c[I>>2]|0;c[H>>2]=c[J>>2];c[G>>2]=d;c[c[H>>2]>>2]=c[G>>2];c[F>>2]=c[t>>2];d=c[F>>2]|0;b=c[d+4>>2]|0;c[E>>2]=d;c[D>>2]=b;b=c[D>>2]|0;c[B>>2]=C;c[A>>2]=b;b=c[A>>2]|0;c[z>>2]=c[B>>2];c[y>>2]=b;c[c[z>>2]>>2]=c[y>>2];a[x+0>>0]=a[K+0>>0]|0;a[x+1>>0]=a[K+1>>0]|0;a[x+2>>0]=a[K+2>>0]|0;a[x+3>>0]=a[K+3>>0]|0;a[w+0>>0]=a[C+0>>0]|0;a[w+1>>0]=a[C+1>>0]|0;a[w+2>>0]=a[C+2>>0]|0;a[w+3>>0]=a[C+3>>0]|0;a[u+0>>0]=a[v+0>>0]|0;c[s+0>>2]=c[x+0>>2];c[q+0>>2]=c[w+0>>2];c[p>>2]=w;c[o>>2]=x;c[n>>2]=c[p>>2];b=c[c[n>>2]>>2]|0;c[m>>2]=c[o>>2];b=(b-(c[c[m>>2]>>2]|0)|0)/32|0;c[l+0>>2]=c[s+0>>2];c[k+0>>2]=c[q+0>>2];vf(l,k,u,b);i=M;return}function Ig(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;t=i;i=i+144|0;h=t+60|0;u=t+48|0;v=t+124|0;e=t+116|0;f=t+8|0;r=t;o=t+84|0;q=t+52|0;A=t+40|0;z=t+104|0;y=t+112|0;x=t+120|0;w=t+128|0;g=t+132|0;F=t+136|0;p=t+64|0;l=t+68|0;m=t+72|0;n=t+76|0;E=t+16|0;D=t+88|0;C=t+96|0;B=t+4|0;G=t+92|0;H=t+44|0;I=t+100|0;J=t+108|0;s=t+12|0;k=t+80|0;j=t+20|0;c[J>>2]=b;c[s>>2]=d;d=c[J>>2]|0;c[I>>2]=d;c[H>>2]=(c[I>>2]|0)+8;c[G>>2]=c[H>>2];if((((c[c[G>>2]>>2]|0)-(c[d+4>>2]|0)|0)/2832|0)>>>0>=(c[s>>2]|0)>>>0){Jg(d,c[s>>2]|0);i=t;return}c[B>>2]=d;c[C>>2]=(c[B>>2]|0)+8;c[D>>2]=c[C>>2];c[k>>2]=c[D>>2];c[E>>2]=d;B=c[E>>2]|0;B=(((c[B+4>>2]|0)-(c[B>>2]|0)|0)/2832|0)+(c[s>>2]|0)|0;c[F>>2]=d;c[p>>2]=B;B=c[F>>2]|0;c[l>>2]=Eg(B)|0;if((c[p>>2]|0)>>>0>(c[l>>2]|0)>>>0)Zt(B);c[w>>2]=B;c[x>>2]=c[w>>2];J=c[x>>2]|0;c[y>>2]=J;c[z>>2]=(c[y>>2]|0)+8;c[A>>2]=c[z>>2];c[m>>2]=((c[c[A>>2]>>2]|0)-(c[J>>2]|0)|0)/2832|0;if((c[m>>2]|0)>>>0>=(((c[l>>2]|0)>>>0)/2|0)>>>0)c[g>>2]=c[l>>2];else{c[n>>2]=c[m>>2]<<1;c[o>>2]=n;c[q>>2]=p;J=c[o>>2]|0;I=c[q>>2]|0;a[r+0>>0]=a[t+140>>0]|0;c[e>>2]=J;c[f>>2]=I;I=c[e>>2]|0;J=c[f>>2]|0;c[t+56>>2]=r;c[u>>2]=I;c[v>>2]=J;c[g>>2]=c[((c[c[u>>2]>>2]|0)>>>0<(c[c[v>>2]>>2]|0)>>>0?c[f>>2]|0:c[e>>2]|0)>>2]}I=c[g>>2]|0;c[h>>2]=d;J=c[h>>2]|0;Kg(j,I,((c[J+4>>2]|0)-(c[J>>2]|0)|0)/2832|0,c[k>>2]|0);Lg(j,c[s>>2]|0);Mg(d,j);Ng(j);i=t;return}function Jg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;g=d+28|0;h=d+16|0;j=d+4|0;k=d+8|0;l=d+32|0;m=d;n=d+12|0;e=d+24|0;f=d+20|0;c[n>>2]=a;c[e>>2]=b;a=c[n>>2]|0;c[m>>2]=a;c[l>>2]=(c[m>>2]|0)+8;c[k>>2]=c[l>>2];c[f>>2]=c[k>>2];do{n=c[f>>2]|0;c[g>>2]=c[a+4>>2];b=c[g>>2]|0;c[h>>2]=n;c[j>>2]=b;b=c[j>>2]|0;if((b|0)!=0)rg(b);n=a+4|0;c[n>>2]=(c[n>>2]|0)+2832;c[e>>2]=(c[e>>2]|0)+ -1}while((c[e>>2]|0)>>>0>0);i=d;return}function Kg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;k=f+12|0;j=f+8|0;h=f+4|0;g=f;c[k>>2]=a;c[j>>2]=b;c[h>>2]=d;c[g>>2]=e;Pg(c[k>>2]|0,c[j>>2]|0,c[h>>2]|0,c[g>>2]|0);i=f;return}function Lg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;g=d+28|0;h=d+16|0;j=d+4|0;k=d+8|0;l=d+32|0;m=d;n=d+12|0;e=d+24|0;f=d+20|0;c[n>>2]=a;c[e>>2]=b;a=c[n>>2]|0;c[m>>2]=a;c[l>>2]=(c[m>>2]|0)+12;c[k>>2]=c[l>>2];c[f>>2]=c[(c[k>>2]|0)+4>>2];do{n=c[f>>2]|0;c[g>>2]=c[a+8>>2];b=c[g>>2]|0;c[h>>2]=n;c[j>>2]=b;b=c[j>>2]|0;if((b|0)!=0)rg(b);n=a+8|0;c[n>>2]=(c[n>>2]|0)+2832;c[e>>2]=(c[e>>2]|0)+ -1}while((c[e>>2]|0)>>>0>0);i=d;return}function Mg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=i;i=i+144|0;F=d+108|0;H=d+88|0;G=d+80|0;E=d+48|0;C=d+8|0;z=d+12|0;D=d+84|0;B=d+16|0;y=d+20|0;A=d+24|0;w=d+28|0;t=d+32|0;x=d+104|0;v=d+112|0;s=d+120|0;u=d+128|0;m=d+136|0;q=d+52|0;r=d+56|0;n=d+60|0;o=d+64|0;p=d+68|0;k=d+72|0;g=d+76|0;l=d+4|0;j=d;f=d+92|0;h=d+96|0;K=d+100|0;J=d+40|0;I=d+116|0;L=d+44|0;e=d+124|0;c[L>>2]=a;c[e>>2]=b;a=c[L>>2]|0;c[I>>2]=a;c[J>>2]=(c[I>>2]|0)+8;c[K>>2]=c[J>>2];J=c[a>>2]|0;I=c[a+4>>2]|0;b=(c[e>>2]|0)+4|0;c[d+132>>2]=c[K>>2];c[F>>2]=J;c[H>>2]=I;c[G>>2]=b;c[E>>2]=((c[H>>2]|0)-(c[F>>2]|0)|0)/2832|0;b=c[G>>2]|0;c[b>>2]=(c[b>>2]|0)+((0-(c[E>>2]|0)|0)*2832|0);qz(c[c[G>>2]>>2]|0,c[F>>2]|0,(c[E>>2]|0)*2832|0)|0;b=(c[e>>2]|0)+4|0;c[B>>2]=a;c[y>>2]=b;c[D>>2]=c[B>>2];c[A>>2]=c[c[D>>2]>>2];c[C>>2]=c[y>>2];c[c[B>>2]>>2]=c[c[C>>2]>>2];c[z>>2]=A;c[c[y>>2]>>2]=c[c[z>>2]>>2];b=(c[e>>2]|0)+8|0;c[v>>2]=a+4;c[s>>2]=b;c[x>>2]=c[v>>2];c[u>>2]=c[c[x>>2]>>2];c[w>>2]=c[s>>2];c[c[v>>2]>>2]=c[c[w>>2]>>2];c[t>>2]=u;c[c[s>>2]>>2]=c[c[t>>2]>>2];c[r>>2]=a;c[q>>2]=(c[r>>2]|0)+8;c[m>>2]=c[q>>2];m=c[m>>2]|0;c[p>>2]=c[e>>2];c[o>>2]=(c[p>>2]|0)+12;c[n>>2]=c[o>>2];b=c[n>>2]|0;c[j>>2]=m;c[f>>2]=b;c[l>>2]=c[j>>2];c[h>>2]=c[c[l>>2]>>2];c[k>>2]=c[f>>2];c[c[j>>2]>>2]=c[c[k>>2]>>2];c[g>>2]=h;c[c[f>>2]>>2]=c[c[g>>2]>>2];c[c[e>>2]>>2]=c[(c[e>>2]|0)+4>>2];c[d+36>>2]=a;i=d;return}function Ng(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Og(c[d>>2]|0);i=b;return}function Og(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;r=i;i=i+128|0;l=r+72|0;k=r+44|0;j=r+12|0;h=r+104|0;g=r+24|0;f=r+16|0;q=r+20|0;p=r+76|0;d=r+52|0;e=r+28|0;m=r+32|0;n=r+36|0;o=r+40|0;w=r+108|0;B=r+112|0;C=r+116|0;A=r;x=r+56|0;y=r+60|0;z=r+120|0;v=r+68|0;u=r+88|0;t=r+92|0;E=r+96|0;s=r+100|0;G=r+8|0;F=r+80|0;I=r+84|0;H=r+121|0;J=r+48|0;D=r+64|0;c[D>>2]=b;D=c[D>>2]|0;c[J>>2]=D;J=c[J>>2]|0;b=c[J+4>>2]|0;c[F>>2]=J;c[I>>2]=b;F=c[F>>2]|0;b=c[I>>2]|0;a[G+0>>0]=a[H+0>>0]|0;c[E>>2]=F;c[s>>2]=b;b=c[E>>2]|0;while(1){if((c[s>>2]|0)==(c[b+8>>2]|0))break;c[t>>2]=b;c[u>>2]=(c[t>>2]|0)+12;c[v>>2]=c[u>>2];J=c[(c[v>>2]|0)+4>>2]|0;H=b+8|0;I=(c[H>>2]|0)+ -2832|0;c[H>>2]=I;c[w>>2]=I;I=c[w>>2]|0;c[x>>2]=J;c[y>>2]=I;I=c[x>>2]|0;J=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=I;c[C>>2]=J}if((c[D>>2]|0)==0){i=r;return}c[q>>2]=D;c[f>>2]=(c[q>>2]|0)+12;c[g>>2]=c[f>>2];H=c[(c[g>>2]|0)+4>>2]|0;J=c[D>>2]|0;c[h>>2]=D;I=c[h>>2]|0;c[j>>2]=I;c[k>>2]=(c[j>>2]|0)+12;c[l>>2]=c[k>>2];I=((c[c[l>>2]>>2]|0)-(c[I>>2]|0)|0)/2832|0;c[m>>2]=H;c[n>>2]=J;c[o>>2]=I;I=c[n>>2]|0;J=c[o>>2]|0;c[p>>2]=c[m>>2];c[d>>2]=I;c[e>>2]=J;Ix(c[d>>2]|0);i=r;return}function Pg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;q=i;i=i+176|0;C=q+64|0;x=q+60|0;z=q;B=q+148|0;A=q+156|0;y=q+56|0;E=q+12|0;G=q+112|0;F=q+16|0;D=q+20|0;H=q+24|0;J=q+28|0;I=q+32|0;p=q+36|0;g=q+40|0;r=q+108|0;m=q+144|0;n=q+160|0;f=q+164|0;u=q+68|0;v=q+76|0;w=q+80|0;t=q+84|0;o=q+92|0;h=q+96|0;j=q+100|0;N=q+104|0;O=q+124|0;P=q+44|0;M=q+8|0;Q=q+48|0;k=q+132|0;l=q+52|0;K=q+140|0;L=q+120|0;s=q+116|0;c[Q>>2]=a;c[k>>2]=b;c[l>>2]=d;c[K>>2]=e;e=c[Q>>2]|0;c[O>>2]=M;c[P>>2]=-1;b=c[P>>2]|0;c[N>>2]=c[O>>2];c[q+4>>2]=b;c[c[N>>2]>>2]=0;c[L>>2]=c[M>>2];c[q+128>>2]=L;b=c[K>>2]|0;c[H>>2]=e+12;c[J>>2]=0;c[I>>2]=b;b=c[J>>2]|0;d=c[I>>2]|0;c[G>>2]=c[H>>2];c[F>>2]=b;c[D>>2]=d;d=c[G>>2]|0;c[E>>2]=F;b=c[c[E>>2]>>2]|0;c[C>>2]=c[D>>2];a=c[C>>2]|0;c[B>>2]=d;c[A>>2]=b;c[y>>2]=a;a=c[B>>2]|0;c[z>>2]=A;c[a>>2]=c[c[z>>2]>>2];c[x>>2]=c[y>>2];c[a+4>>2]=c[x>>2];if((c[k>>2]|0)!=0){c[r>>2]=e;c[g>>2]=(c[r>>2]|0)+12;c[p>>2]=c[g>>2];Q=c[k>>2]|0;c[n>>2]=c[(c[p>>2]|0)+4>>2];c[f>>2]=Q;Q=c[f>>2]|0;c[q+136>>2]=c[n>>2];c[m>>2]=Q;c[q+152>>2]=0;Q=Gx((c[m>>2]|0)*2832|0)|0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P*2832|0)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P*2832|0)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}else{c[v>>2]=t;c[w>>2]=-1;Q=c[w>>2]|0;c[u>>2]=c[v>>2];c[q+72>>2]=Q;c[c[u>>2]>>2]=0;c[s>>2]=c[t>>2];c[q+88>>2]=s;Q=0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P*2832|0)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P*2832|0)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}}function Qg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;f=i;i=i+160|0;n=f+72|0;g=f+32|0;l=f+108|0;j=f+132|0;s=f+8|0;y=f+76|0;z=f+28|0;w=f+20|0;x=f+24|0;v=f;h=f+96|0;u=f+104|0;E=f+136|0;D=f+140|0;C=f+144|0;B=f+52|0;A=f+56|0;t=f+60|0;F=f+64|0;m=f+68|0;p=f+16|0;q=f+4|0;r=f+84|0;G=f+80|0;H=f+88|0;I=f+92|0;J=f+36|0;K=f+100|0;k=f+40|0;o=f+44|0;e=f+112|0;c[K>>2]=b;c[k>>2]=d;b=c[K>>2]|0;c[J>>2]=b;c[I>>2]=(c[J>>2]|0)+8;c[H>>2]=c[I>>2];c[o>>2]=c[H>>2];c[G>>2]=b;d=c[G>>2]|0;d=(((c[d+4>>2]|0)-(c[d>>2]|0)|0)/2832|0)+1|0;c[F>>2]=b;c[m>>2]=d;d=c[F>>2]|0;c[p>>2]=Eg(d)|0;if((c[m>>2]|0)>>>0>(c[p>>2]|0)>>>0)Zt(d);c[A>>2]=d;c[B>>2]=c[A>>2];K=c[B>>2]|0;c[C>>2]=K;c[D>>2]=(c[C>>2]|0)+8;c[E>>2]=c[D>>2];c[q>>2]=((c[c[E>>2]>>2]|0)-(c[K>>2]|0)|0)/2832|0;if((c[q>>2]|0)>>>0>=(((c[p>>2]|0)>>>0)/2|0)>>>0)c[t>>2]=c[p>>2];else{c[r>>2]=c[q>>2]<<1;c[h>>2]=r;c[u>>2]=m;K=c[h>>2]|0;J=c[u>>2]|0;a[v+0>>0]=a[f+148>>0]|0;c[w>>2]=K;c[x>>2]=J;J=c[w>>2]|0;K=c[x>>2]|0;c[f+12>>2]=v;c[y>>2]=J;c[z>>2]=K;c[t>>2]=c[((c[c[y>>2]>>2]|0)>>>0<(c[c[z>>2]>>2]|0)>>>0?c[x>>2]|0:c[w>>2]|0)>>2]}K=c[t>>2]|0;c[s>>2]=b;J=c[s>>2]|0;Kg(e,K,((c[J+4>>2]|0)-(c[J>>2]|0)|0)/2832|0,c[o>>2]|0);J=c[o>>2]|0;c[j>>2]=c[e+8>>2];K=c[j>>2]|0;c[l>>2]=c[k>>2];h=c[l>>2]|0;c[f+48>>2]=J;c[n>>2]=K;c[g>>2]=h;h=c[n>>2]|0;if((h|0)==0){K=e+8|0;J=c[K>>2]|0;J=J+2832|0;c[K>>2]=J;Mg(b,e);Ng(e);i=f;return}qz(h|0,c[g>>2]|0,2832)|0;K=e+8|0;J=c[K>>2]|0;J=J+2832|0;c[K>>2]=J;Mg(b,e);Ng(e);i=f;return}function Rg(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;tg(c[d>>2]|0);i=b;return}function Sg(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;m=i;i=i+32|0;n=m+20|0;k=m+16|0;g=m+12|0;h=m+8|0;l=m+4|0;j=m;c[n>>2]=a;c[k>>2]=b;c[g>>2]=d;c[h>>2]=e;c[l>>2]=f;c[j>>2]=0;if((c[h>>2]|0)>>>0>=(c[g>>2]|0)>>>0){c[j>>2]=0;c[h>>2]=c[g>>2]}else{a=Wy(c[n>>2]|0)|0;c[j>>2]=(a>>>0)%(((c[g>>2]|0)-(c[h>>2]|0)+1|0)>>>0)|0}Tg(c[l>>2]|0,(c[k>>2]|0)+(c[j>>2]<<1)|0,c[h>>2]|0);i=m;return}function Tg(a,b,d){a=a|0;b=b|0;d=d|0;var f=0,g=0,h=0,j=0;f=i;i=i+16|0;j=f+8|0;h=f+4|0;g=f;c[j>>2]=a;c[h>>2]=b;c[g>>2]=d;d=c[j>>2]|0;a=d+2816|0;c[a>>2]=(c[a>>2]|0)+(c[g>>2]|0);c[g>>2]=(c[g>>2]|0)+1;while(1){j=(c[g>>2]|0)+ -1|0;c[g>>2]=j;if((j|0)==0)break;j=c[h>>2]|0;c[h>>2]=j+2;j=d+((e[j>>1]|0)<<2)|0;c[j>>2]=(c[j>>2]|0)+1}i=f;return}



function ic(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+15&-16;return b|0}function jc(){return i|0}function kc(a){a=a|0;i=a}function lc(a,b){a=a|0;b=b|0;if((s|0)==0){s=a;t=b}}function mc(b){b=b|0;a[k>>0]=a[b>>0];a[k+1>>0]=a[b+1>>0];a[k+2>>0]=a[b+2>>0];a[k+3>>0]=a[b+3>>0]}function nc(b){b=b|0;a[k>>0]=a[b>>0];a[k+1>>0]=a[b+1>>0];a[k+2>>0]=a[b+2>>0];a[k+3>>0]=a[b+3>>0];a[k+4>>0]=a[b+4>>0];a[k+5>>0]=a[b+5>>0];a[k+6>>0]=a[b+6>>0];a[k+7>>0]=a[b+7>>0]}function oc(a){a=a|0;H=a}function pc(){return H|0}function qc(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+32|0;g=f+16|0;l=f+12|0;k=f+8|0;h=f+4|0;j=f;c[l>>2]=a;c[k>>2]=b;c[h>>2]=d;c[j>>2]=e;if((Bc(c[l>>2]|0,c[k>>2]|0,h,c[j>>2]|0)|0)!=0){c[g>>2]=c[h>>2];l=c[g>>2]|0;i=f;return l|0}else{c[g>>2]=-1;l=c[g>>2]|0;i=f;return l|0}return 0}function rc(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;e=f+8|0;h=f+4|0;g=f;c[h>>2]=a;if((c[h>>2]|0)==0)La(8,24,29,56);c[(c[h>>2]|0)+8224>>2]=c[h>>2];a=(c[h>>2]|0)+8228|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];a=(c[h>>2]|0)+8240|0;c[a>>2]=0;c[a+4>>2]=0;c[(c[h>>2]|0)+8248>>2]=0;c[(c[h>>2]|0)+8252>>2]=0;c[(c[h>>2]|0)+8256>>2]=0;c[(c[h>>2]|0)+8260>>2]=0;if((sc(c[h>>2]|0)|0)==0){c[e>>2]=0;a=c[e>>2]|0;i=f;return a|0}c[g>>2]=0;while(1){b=c[h>>2]|0;if(!((c[g>>2]|0)>>>0<8))break;j=rz(d[(c[h>>2]|0)+(c[b+8248>>2]|0)>>0]|0|0,0,c[g>>2]<<3|0)|0;a=(c[h>>2]|0)+8240|0;k=a;b=c[k+4>>2]|H;c[a>>2]=c[k>>2]|j;c[a+4>>2]=b;a=(c[h>>2]|0)+8248|0;c[a>>2]=(c[a>>2]|0)+1;c[g>>2]=(c[g>>2]|0)+1}c[e>>2]=(c[b+8256>>2]|0)>>>0>0&1;k=c[e>>2]|0;i=f;return k|0}function sc(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;g=i;i=i+32|0;j=g+16|0;e=g+12|0;f=g+8|0;h=g+4|0;d=g;c[f>>2]=b;if((c[(c[f>>2]|0)+8256>>2]|0)>>>0>256){c[e>>2]=1;b=c[e>>2]|0;i=g;return b|0}b=c[f>>2]|0;if((c[(c[f>>2]|0)+8260>>2]|0)!=0){c[e>>2]=(c[b+8252>>2]|0)>>>0<=(c[(c[f>>2]|0)+8256>>2]|0)>>>0&1;b=c[e>>2]|0;i=g;return b|0}c[h>>2]=c[b+8224>>2];k=(c[f>>2]|0)+8228|0;b=c[h>>2]|0;c[j+0>>2]=c[k+0>>2];c[j+4>>2]=c[k+4>>2];c[d>>2]=tc(j,b,4096)|0;if((c[d>>2]|0)<0){c[e>>2]=0;k=c[e>>2]|0;i=g;return k|0}if((c[d>>2]|0)<4096){c[(c[f>>2]|0)+8260>>2]=1;b=(c[h>>2]|0)+(c[d>>2]|0)+0|0;j=b+32|0;do{a[b>>0]=0;b=b+1|0}while((b|0)<(j|0))}j=c[f>>2]|0;if((c[h>>2]|0)==(c[f>>2]|0)){b=j+8192|0;h=(c[f>>2]|0)+0|0;j=b+32|0;do{a[b>>0]=a[h>>0]|0;b=b+1|0;h=h+1|0}while((b|0)<(j|0));c[(c[f>>2]|0)+8224>>2]=(c[f>>2]|0)+4096}else c[(c[f>>2]|0)+8224>>2]=j;k=(c[f>>2]|0)+8256|0;c[k>>2]=(c[k>>2]|0)+(c[d>>2]<<3);c[e>>2]=1;k=c[e>>2]|0;i=g;return k|0}function tc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;g=e+4|0;f=e;c[g>>2]=b;c[f>>2]=d;b=Sb[c[a>>2]&31](c[a+4>>2]|0,c[g>>2]|0,c[f>>2]|0)|0;i=e;return b|0}function uc(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;s=i;i=i+64|0;q=s+48|0;k=s+36|0;m=s+12|0;x=s+8|0;o=s+32|0;w=s+40|0;r=s+56|0;n=s+16|0;p=s;l=s+24|0;j=s+4|0;t=s+28|0;u=s+20|0;c[m>>2]=d;c[x>>2]=e;c[o>>2]=f;c[w>>2]=g;c[r>>2]=h;c[n>>2]=(c[w>>2]|0)+1;c[p>>2]=(c[o>>2]|0)+(c[n>>2]|0);c[l>>2]=c[x>>2]&c[w>>2];c[j>>2]=c[(c[r>>2]|0)+8248>>2]&8191;if((c[m>>2]|0)>=8?!(((c[(c[r>>2]|0)+8252>>2]|0)+(c[m>>2]<<3)|0)>>>0<(c[(c[r>>2]|0)+8256>>2]|0)>>>0):0){if((c[(c[r>>2]|0)+8256>>2]|0)>>>0<64){c[k>>2]=0;x=c[k>>2]|0;i=s;return x|0}while(1){h=c[r>>2]|0;if(!((c[(c[r>>2]|0)+8252>>2]|0)>>>0<64))break;x=h+8240|0;x=oz(c[x>>2]|0,c[x+4>>2]|0,c[(c[r>>2]|0)+8252>>2]|0)|0;a[(c[o>>2]|0)+(c[l>>2]|0)>>0]=x;x=(c[r>>2]|0)+8252|0;c[x>>2]=(c[x>>2]|0)+8;c[l>>2]=(c[l>>2]|0)+1;c[m>>2]=(c[m>>2]|0)+ -1}c[t>>2]=(c[h+8256>>2]|0)-(c[(c[r>>2]|0)+8252>>2]|0)>>3;if(((c[j>>2]|0)+(c[t>>2]|0)|0)>8191){c[u>>2]=8192-(c[j>>2]|0);qz((c[o>>2]|0)+(c[l>>2]|0)|0,(c[r>>2]|0)+(c[j>>2]|0)|0,c[u>>2]|0)|0;c[t>>2]=(c[t>>2]|0)-(c[u>>2]|0);c[l>>2]=(c[l>>2]|0)+(c[u>>2]|0);c[m>>2]=(c[m>>2]|0)-(c[u>>2]|0);c[j>>2]=0}qz((c[o>>2]|0)+(c[l>>2]|0)|0,(c[r>>2]|0)+(c[j>>2]|0)|0,c[t>>2]|0)|0;c[l>>2]=(c[l>>2]|0)+(c[t>>2]|0);c[m>>2]=(c[m>>2]|0)-(c[t>>2]|0);do if((c[l>>2]|0)>=(c[n>>2]|0)){w=c[o>>2]|0;x=c[n>>2]|0;c[q+0>>2]=c[b+0>>2];c[q+4>>2]=c[b+4>>2];x=xc(q,w,x)|0;if((x|0)>=(c[n>>2]|0)){c[l>>2]=(c[l>>2]|0)-(c[n>>2]|0);qz(c[o>>2]|0,c[p>>2]|0,c[l>>2]|0)|0;break}c[k>>2]=0;x=c[k>>2]|0;i=s;return x|0}while(0);while(1){if(((c[l>>2]|0)+(c[m>>2]|0)|0)<(c[n>>2]|0))break;c[t>>2]=(c[n>>2]|0)-(c[l>>2]|0);d=(c[r>>2]|0)+8228|0;w=(c[o>>2]|0)+(c[l>>2]|0)|0;x=c[t>>2]|0;c[q+0>>2]=c[d+0>>2];c[q+4>>2]=c[d+4>>2];x=yc(q,w,x)|0;if((x|0)<(c[t>>2]|0)){v=24;break}w=c[o>>2]|0;x=c[n>>2]|0;c[q+0>>2]=c[b+0>>2];c[q+4>>2]=c[b+4>>2];x=xc(q,w,x)|0;if((x|0)<(c[t>>2]|0)){v=24;break}c[m>>2]=(c[m>>2]|0)-(c[t>>2]|0);c[l>>2]=0}if((v|0)==24){c[k>>2]=0;x=c[k>>2]|0;i=s;return x|0}d=(c[r>>2]|0)+8228|0;w=(c[o>>2]|0)+(c[l>>2]|0)|0;x=c[m>>2]|0;c[q+0>>2]=c[d+0>>2];c[q+4>>2]=c[d+4>>2];x=yc(q,w,x)|0;if((x|0)<(c[m>>2]|0)){c[k>>2]=0;x=c[k>>2]|0;i=s;return x|0}else{x=c[r>>2]|0;w=(c[r>>2]|0)+8228|0;c[q+0>>2]=c[w+0>>2];c[q+4>>2]=c[w+4>>2];rc(x,q)|0;c[k>>2]=1;x=c[k>>2]|0;i=s;return x|0}}while(1){x=c[m>>2]|0;c[m>>2]=x+ -1;if((x|0)<=0){v=10;break}if((vc(c[r>>2]|0)|0)==0){v=5;break}w=(wc(c[r>>2]|0,8)|0)&255;x=c[l>>2]|0;c[l>>2]=x+1;a[(c[o>>2]|0)+x>>0]=w;if((c[l>>2]|0)!=(c[n>>2]|0))continue;w=c[o>>2]|0;x=c[n>>2]|0;c[q+0>>2]=c[b+0>>2];c[q+4>>2]=c[b+4>>2];x=xc(q,w,x)|0;if((x|0)<(c[n>>2]|0)){v=8;break}c[l>>2]=0}if((v|0)==5){c[k>>2]=0;x=c[k>>2]|0;i=s;return x|0}else if((v|0)==8){c[k>>2]=0;x=c[k>>2]|0;i=s;return x|0}else if((v|0)==10){c[k>>2]=1;x=c[k>>2]|0;i=s;return x|0}return 0}function vc(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;g=i;i=i+32|0;j=g+16|0;e=g+12|0;f=g+8|0;h=g+4|0;d=g;c[f>>2]=b;if((c[(c[f>>2]|0)+8256>>2]|0)>>>0>256){c[e>>2]=1;b=c[e>>2]|0;i=g;return b|0}b=c[f>>2]|0;if((c[(c[f>>2]|0)+8260>>2]|0)!=0){c[e>>2]=(c[b+8252>>2]|0)>>>0<=(c[(c[f>>2]|0)+8256>>2]|0)>>>0&1;b=c[e>>2]|0;i=g;return b|0}c[h>>2]=c[b+8224>>2];k=(c[f>>2]|0)+8228|0;b=c[h>>2]|0;c[j+0>>2]=c[k+0>>2];c[j+4>>2]=c[k+4>>2];c[d>>2]=yc(j,b,4096)|0;if((c[d>>2]|0)<0){c[e>>2]=0;k=c[e>>2]|0;i=g;return k|0}if((c[d>>2]|0)<4096){c[(c[f>>2]|0)+8260>>2]=1;b=(c[h>>2]|0)+(c[d>>2]|0)+0|0;j=b+32|0;do{a[b>>0]=0;b=b+1|0}while((b|0)<(j|0))}j=c[f>>2]|0;if((c[h>>2]|0)==(c[f>>2]|0)){b=j+8192|0;h=(c[f>>2]|0)+0|0;j=b+32|0;do{a[b>>0]=a[h>>0]|0;b=b+1|0;h=h+1|0}while((b|0)<(j|0));c[(c[f>>2]|0)+8224>>2]=(c[f>>2]|0)+4096}else c[(c[f>>2]|0)+8224>>2]=j;k=(c[f>>2]|0)+8256|0;c[k>>2]=(c[k>>2]|0)+(c[d>>2]<<3);c[e>>2]=1;k=c[e>>2]|0;i=g;return k|0}function wc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;e=i;i=i+16|0;g=e+8|0;f=e+4|0;d=e;c[g>>2]=a;c[f>>2]=b;Qc(c[g>>2]|0);a=(c[g>>2]|0)+8240|0;a=oz(c[a>>2]|0,c[a+4>>2]|0,c[(c[g>>2]|0)+8252>>2]|0)|0;c[d>>2]=a&c[128160+(c[f>>2]<<2)>>2];a=(c[g>>2]|0)+8252|0;c[a>>2]=(c[a>>2]|0)+(c[f>>2]|0);i=e;return c[d>>2]|0}function xc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;g=e+4|0;f=e;c[g>>2]=b;c[f>>2]=d;b=Sb[c[a>>2]&31](c[a+4>>2]|0,c[g>>2]|0,c[f>>2]|0)|0;i=e;return b|0}function yc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;g=e+4|0;f=e;c[g>>2]=b;c[f>>2]=d;b=Sb[c[a>>2]&31](c[a+4>>2]|0,c[g>>2]|0,c[f>>2]|0)|0;i=e;return b|0}function zc(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b+4|0;e=b;c[e>>2]=a;if((wc(c[e>>2]|0,1)|0)!=0){c[d>>2]=17+(wc(c[e>>2]|0,3)|0);e=c[d>>2]|0;i=b;return e|0}else{c[d>>2]=16;e=c[d>>2]|0;i=b;return e|0}return 0}function Ac(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;k=i;i=i+32|0;g=k+20|0;j=k+16|0;f=k+12|0;h=k+8|0;m=k+4|0;l=k;c[g>>2]=a;c[j>>2]=b;c[f>>2]=d;c[h>>2]=e;a=wc(c[g>>2]|0,1)|0;c[c[f>>2]>>2]=a;c[c[j>>2]>>2]=0;c[c[h>>2]>>2]=0;if((c[c[f>>2]>>2]|0)!=0?(wc(c[g>>2]|0,1)|0)!=0:0){i=k;return}c[m>>2]=(wc(c[g>>2]|0,2)|0)+4;c[l>>2]=0;while(1){if((c[l>>2]|0)>=(c[m>>2]|0))break;b=wc(c[g>>2]|0,4)|0;a=c[j>>2]|0;c[a>>2]=c[a>>2]|b<<(c[l>>2]<<2);c[l>>2]=(c[l>>2]|0)+1}a=c[j>>2]|0;c[a>>2]=(c[a>>2]|0)+1;if((c[c[f>>2]>>2]|0)!=0){i=k;return}a=wc(c[g>>2]|0,1)|0;c[c[h>>2]>>2]=a;i=k;return}function Bc(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+96|0;k=g+72|0;l=g+32|0;p=g;q=g+64|0;h=g+68|0;o=g+80|0;n=g+56|0;j=g+40|0;m=g+8|0;f=g+4|0;c[p>>2]=a;c[q>>2]=b;c[h>>2]=d;c[o>>2]=e;bd(n,c[q>>2]|0,c[p>>2]|0,g+16|0);dd(m,c[o>>2]|0,c[c[h>>2]>>2]|0,j);c[l+0>>2]=c[n+0>>2];c[l+4>>2]=c[n+4>>2];c[k+0>>2]=c[m+0>>2];c[k+4>>2]=c[m+4>>2];c[f>>2]=Cc(l,k)|0;c[c[h>>2]>>2]=c[j+8>>2];i=g;return c[f>>2]|0}function Cc(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0;S=i;i=i+8656|0;o=S;g=S+8616|0;p=S+8568|0;sa=S+8280|0;m=S+8476|0;xa=S+8556|0;za=S+8608|0;B=S+8564|0;t=S+8332|0;$=S+8296|0;n=S+8300|0;h=S+8304|0;Z=S+8308|0;C=S+8312|0;D=S+8328|0;ba=S+8639|0;ea=S+8636|0;N=S+8336|0;Q=S+8384|0;U=S+8388|0;k=S+16|0;l=S+8396|0;wa=S+8400|0;O=S+8404|0;R=S+8416|0;P=S+8428|0;f=S+8440|0;T=S+8588|0;H=S+8604|0;E=S+8612|0;F=S+8620|0;ua=S+8628|0;ja=S+8580|0;j=S+8484|0;ta=S+8488|0;W=S+8632|0;va=S+8492|0;ia=S+8496|0;ga=S+8500|0;ha=S+8637|0;V=S+8508|0;L=S+8392|0;M=S+8642|0;aa=S+8520|0;ca=S+8524|0;ka=S+8641|0;qa=S+8532|0;na=S+8536|0;ma=S+8540|0;oa=S+8544|0;pa=S+8548|0;_=S+8552|0;q=S+8284|0;z=S+8576|0;s=S+8512|0;fa=S+8640|0;la=S+8464|0;ra=S+8584|0;A=S+8468|0;K=S+8638|0;I=S+8572|0;G=S+8292|0;J=S+8472|0;r=S+8624|0;u=S+8600|0;v=S+8288|0;w=S+8528|0;x=S+8516|0;y=S+8504|0;X=S+8480|0;Y=S+8560|0;c[p>>2]=1;c[m>>2]=0;c[xa>>2]=0;c[za>>2]=0;c[t>>2]=0;c[C+0>>2]=c[20];c[C+4>>2]=c[21];c[C+8>>2]=c[22];c[C+12>>2]=c[23];c[D>>2]=0;a[ba>>0]=0;a[ea>>0]=0;c[Q>>2]=0;c[U>>2]=0;c[o+0>>2]=c[b+0>>2];c[o+4>>2]=c[b+4>>2];if((rc(k,o)|0)==0){c[g>>2]=0;b=c[g>>2]|0;i=S;return b|0}c[za>>2]=zc(k)|0;c[B>>2]=(1<<c[za>>2])-16;c[$>>2]=1<<c[za>>2];c[n>>2]=(c[$>>2]|0)-1;c[h>>2]=Dy((c[$>>2]|0)+4248|0)|0;if((c[h>>2]|0)==0)c[p>>2]=0;c[Z>>2]=(c[h>>2]|0)+(c[$>>2]|0);do if((c[p>>2]|0)!=0){c[Q>>2]=Dy(24576)|0;c[U>>2]=Dy(24576)|0;if((c[Q>>2]|0)!=0?(c[U>>2]|0)!=0:0)break;c[p>>2]=0}while(0);a:while(1){if((c[xa>>2]|0)!=0)break;if((c[p>>2]|0)==0)break;c[l>>2]=0;c[O+0>>2]=c[24];c[O+4>>2]=c[25];c[O+8>>2]=c[26];c[R+0>>2]=0;c[R+4>>2]=0;c[R+8>>2]=0;c[P+0>>2]=c[28];c[P+4>>2]=c[29];c[P+8>>2]=c[30];c[f+0>>2]=c[32];c[f+4>>2]=c[33];c[f+8>>2]=c[34];c[f+12>>2]=c[35];c[f+16>>2]=c[36];c[f+20>>2]=c[37];c[T+0>>2]=0;c[T+4>>2]=0;c[T+8>>2]=0;c[ja>>2]=0;c[j>>2]=0;c[W>>2]=0;c[ia>>2]=0;c[ga>>2]=0;a[ha>>0]=0;c[V>>2]=0;c[L>>2]=0;a[M>>0]=0;c[aa>>2]=0;c[ca>>2]=0;c[sa>>2]=0;while(1){if((c[sa>>2]|0)>=3)break;c[N+(c[sa>>2]<<4)+8>>2]=0;c[N+(c[sa>>2]<<4)+12>>2]=0;c[sa>>2]=(c[sa>>2]|0)+1}b:do if((vc(k)|0)!=0){Ac(k,l,xa,wa);if((c[l>>2]|0)!=0){if((c[wa>>2]|0)!=0){Dc(k,(c[k+8252>>2]|0)+7&-8);Ba=c[l>>2]|0;Aa=c[m>>2]|0;za=c[h>>2]|0;b=c[n>>2]|0;c[o+0>>2]=c[e+0>>2];c[o+4>>2]=c[e+4>>2];c[p>>2]=uc(o,Ba,Aa,za,b,k)|0;c[m>>2]=(c[m>>2]|0)+(c[l>>2]|0);break}c[sa>>2]=0;while(1){if((c[sa>>2]|0)>=3)break;Ba=(Ec(k)|0)+1|0;c[P+(c[sa>>2]<<2)>>2]=Ba;if((c[P+(c[sa>>2]<<2)>>2]|0)>=2){if((Fc((c[P+(c[sa>>2]<<2)>>2]|0)+2|0,(c[Q>>2]|0)+(c[sa>>2]<<11<<2)|0,k)|0)==0){ya=24;break}if((Fc(26,(c[U>>2]|0)+(c[sa>>2]<<11<<2)|0,k)|0)==0){ya=24;break}Ba=Gc((c[U>>2]|0)+(c[sa>>2]<<11<<2)|0,k)|0;c[O+(c[sa>>2]<<2)>>2]=Ba;c[T+(c[sa>>2]<<2)>>2]=1}c[sa>>2]=(c[sa>>2]|0)+1}if((ya|0)==24){ya=0;c[p>>2]=0;break}if((vc(k)|0)==0){pb(152,o|0)|0;c[p>>2]=0;break}c[H>>2]=wc(k,2)|0;Ba=wc(k,4)|0;c[E>>2]=16+(Ba<<c[H>>2]);c[F>>2]=(1<<c[H>>2])-1;c[ua>>2]=(c[E>>2]|0)+(48<<c[H>>2]);c[j>>2]=Dy(c[P>>2]|0)|0;if((c[j>>2]|0)==0){c[p>>2]=0;break}c[sa>>2]=0;while(1){if((c[sa>>2]|0)>=(c[P>>2]|0))break;Ba=(wc(k,2)|0)<<1&255;a[(c[j>>2]|0)+(c[sa>>2]|0)>>0]=Ba;c[sa>>2]=(c[sa>>2]|0)+1}if((Hc(c[P>>2]<<6,ta,ja,k)|0)!=0?(Hc(c[P+8>>2]<<2,va,W,k)|0)!=0:0){Ic(N,256,c[ta>>2]|0);Ic(N+16|0,704,c[P+4>>2]|0);Ic(N+32|0,c[ua>>2]|0,c[va>>2]|0);c[sa>>2]=0;while(1){if((c[sa>>2]|0)>=3)break;if((Jc(N+(c[sa>>2]<<4)|0,k)|0)==0){ya=40;break}c[sa>>2]=(c[sa>>2]|0)+1}if((ya|0)==40){ya=0;c[p>>2]=0;break}c[ga>>2]=c[ja>>2];c[L>>2]=c[W>>2];a[ka>>0]=a[(c[j>>2]|0)+(c[R>>2]|0)>>0]|0;c[aa>>2]=c[200+((d[ka>>0]|0)<<2)>>2];c[ca>>2]=c[200+((d[ka>>0]|0)+1<<2)>>2];c[qa>>2]=c[c[N+28>>2]>>2];c:while(1){if((c[l>>2]|0)<=0){ya=97;break}if((vc(k)|0)==0){ya=45;break}if((c[O+4>>2]|0)==0){Kc(c[P+4>>2]|0,c[Q>>2]|0,1,R,f,T,k);c[O+4>>2]=Gc((c[U>>2]|0)+8192|0,k)|0;c[qa>>2]=c[(c[N+28>>2]|0)+(c[R+4>>2]<<2)>>2]}Ba=O+4|0;c[Ba>>2]=(c[Ba>>2]|0)+ -1;c[na>>2]=Lc(c[qa>>2]|0,k)|0;c[ma>>2]=c[na>>2]>>6;if((c[ma>>2]|0)>=2){c[ma>>2]=(c[ma>>2]|0)-2;c[z>>2]=-1}else c[z>>2]=0;c[oa>>2]=(c[232+(c[ma>>2]<<2)>>2]|0)+(c[na>>2]>>3&7);c[pa>>2]=(c[272+(c[ma>>2]<<2)>>2]|0)+(c[na>>2]&7);Ba=c[312+(c[oa>>2]<<3)>>2]|0;c[_>>2]=Ba+(wc(k,c[316+(c[oa>>2]<<3)>>2]|0)|0);Ba=c[504+(c[pa>>2]<<3)>>2]|0;c[q>>2]=Ba+(wc(k,c[508+(c[pa>>2]<<3)>>2]|0)|0);c[la>>2]=0;while(1){if((c[la>>2]|0)>=(c[_>>2]|0))break;if((vc(k)|0)==0){ya=54;break c}if((c[O>>2]|0)==0){Kc(c[P>>2]|0,c[Q>>2]|0,0,R,f,T,k);c[O>>2]=Gc(c[U>>2]|0,k)|0;c[ia>>2]=c[R>>2]<<6;c[ga>>2]=(c[ja>>2]|0)+(c[ia>>2]|0);a[ka>>0]=a[(c[j>>2]|0)+(c[R>>2]|0)>>0]|0;c[aa>>2]=c[200+((d[ka>>0]|0)<<2)>>2];c[ca>>2]=c[200+((d[ka>>0]|0)+1<<2)>>2]}a[fa>>0]=d[696+((c[aa>>2]|0)+(d[ba>>0]|0))>>0]|0|(d[696+((c[ca>>2]|0)+(d[ea>>0]|0))>>0]|0);a[ha>>0]=a[(c[ga>>2]|0)+(d[fa>>0]|0)>>0]|0;c[O>>2]=(c[O>>2]|0)+ -1;a[ea>>0]=a[ba>>0]|0;a[ba>>0]=Lc(c[(c[N+12>>2]|0)+((d[ha>>0]|0)<<2)>>2]|0,k)|0;a[(c[h>>2]|0)+(c[m>>2]&c[n>>2])>>0]=a[ba>>0]|0;if((c[m>>2]&c[n>>2]|0)==(c[n>>2]|0)){Aa=c[h>>2]|0;Ba=c[$>>2]|0;c[o+0>>2]=c[e+0>>2];c[o+4>>2]=c[e+4>>2];if((xc(o,Aa,Ba)|0)<0){ya=59;break c}}c[m>>2]=(c[m>>2]|0)+1;c[la>>2]=(c[la>>2]|0)+1}c[l>>2]=(c[l>>2]|0)-(c[_>>2]|0);if((c[l>>2]|0)<=0){ya=97;break}do if((c[z>>2]|0)<0){if((vc(k)|0)==0){ya=64;break c}if((c[O+8>>2]|0)==0){Kc(c[P+8>>2]|0,c[Q>>2]|0,2,R,f,T,k);c[O+8>>2]=Gc((c[U>>2]|0)+16384|0,k)|0;a[M>>0]=c[R+8>>2];c[V>>2]=c[R+8>>2]<<2;c[L>>2]=(c[W>>2]|0)+(c[V>>2]|0)}Ba=O+8|0;c[Ba>>2]=(c[Ba>>2]|0)+ -1;if((c[q>>2]|0)>4)za=3;else za=(c[q>>2]|0)-2|0;a[K>>0]=za;a[M>>0]=a[(c[L>>2]|0)+(d[K>>0]|0)>>0]|0;c[z>>2]=Lc(c[(c[N+44>>2]|0)+((d[M>>0]|0)<<2)>>2]|0,k)|0;if((c[z>>2]|0)<(c[E>>2]|0))break;c[z>>2]=(c[z>>2]|0)-(c[E>>2]|0);c[G>>2]=c[z>>2]&c[F>>2];c[z>>2]=c[z>>2]>>c[H>>2];c[I>>2]=(c[z>>2]>>1)+1;c[J>>2]=(2+(c[z>>2]&1)<<c[I>>2])-4;Aa=c[E>>2]|0;Ba=c[J>>2]|0;Ba=Ba+(wc(k,c[I>>2]|0)|0)|0;c[z>>2]=Aa+(Ba<<c[H>>2])+(c[G>>2]|0)}while(0);c[s>>2]=Mc(c[z>>2]|0,C,c[D>>2]|0)|0;if((c[s>>2]|0)<0){ya=72;break}do if((c[m>>2]|0)<(c[B>>2]|0)){if((c[t>>2]|0)==(c[B>>2]|0)){ya=76;break}c[t>>2]=c[m>>2]}else ya=76;while(0);if((ya|0)==76){ya=0;c[t>>2]=c[B>>2]}c[A>>2]=(c[h>>2]|0)+(c[m>>2]&c[n>>2]);d:do if((c[s>>2]|0)>(c[t>>2]|0)){if(!((c[q>>2]|0)>=4&(c[q>>2]|0)<=24)){ya=85;break c}c[r>>2]=c[2488+(c[q>>2]<<2)>>2];c[u>>2]=(c[s>>2]|0)-(c[t>>2]|0)-1;c[v>>2]=c[2592+(c[q>>2]<<2)>>2];c[w>>2]=(1<<c[v>>2])-1;c[x>>2]=c[u>>2]&c[w>>2];c[y>>2]=c[u>>2]>>c[v>>2];Ba=da(c[x>>2]|0,c[q>>2]|0)|0;c[r>>2]=(c[r>>2]|0)+Ba;if((c[y>>2]|0)>=121){ya=84;break c}c[X>>2]=2696+(c[r>>2]|0);c[Y>>2]=Nc(c[A>>2]|0,c[X>>2]|0,c[q>>2]|0,c[y>>2]|0)|0;c[A>>2]=(c[A>>2]|0)+(c[Y>>2]|0);c[m>>2]=(c[m>>2]|0)+(c[Y>>2]|0);c[l>>2]=(c[l>>2]|0)-(c[Y>>2]|0);if(!((c[A>>2]|0)>>>0>=(c[Z>>2]|0)>>>0))break;Aa=c[h>>2]|0;Ba=c[$>>2]|0;c[o+0>>2]=c[e+0>>2];c[o+4>>2]=c[e+4>>2];if((xc(o,Aa,Ba)|0)<0){ya=82;break c}qz(c[h>>2]|0,c[Z>>2]|0,(c[A>>2]|0)-(c[Z>>2]|0)|0)|0}else{if((c[z>>2]|0)>0){c[C+((c[D>>2]&3)<<2)>>2]=c[s>>2];c[D>>2]=(c[D>>2]|0)+1}za=c[m>>2]|0;b=c[s>>2]|0;if((c[q>>2]|0)>(c[l>>2]|0)){ya=89;break c}c[ra>>2]=(c[h>>2]|0)+(za-b&c[n>>2]);c[la>>2]=0;while(1){if((c[la>>2]|0)>=(c[q>>2]|0))break d;a[(c[h>>2]|0)+(c[m>>2]&c[n>>2])>>0]=a[(c[h>>2]|0)+((c[m>>2]|0)-(c[s>>2]|0)&c[n>>2])>>0]|0;if((c[m>>2]&c[n>>2]|0)==(c[n>>2]|0)){Aa=c[h>>2]|0;Ba=c[$>>2]|0;c[o+0>>2]=c[e+0>>2];c[o+4>>2]=c[e+4>>2];if((xc(o,Aa,Ba)|0)<0){ya=94;break c}}c[m>>2]=(c[m>>2]|0)+1;c[l>>2]=(c[l>>2]|0)+ -1;c[la>>2]=(c[la>>2]|0)+1}}while(0);a[ba>>0]=a[(c[h>>2]|0)+((c[m>>2]|0)-1&c[n>>2])>>0]|0;a[ea>>0]=a[(c[h>>2]|0)+((c[m>>2]|0)-2&c[n>>2])>>0]|0}switch(ya|0){case 45:{ya=0;pb(152,o|0)|0;c[p>>2]=0;break b};case 54:{ya=0;pb(152,o|0)|0;c[p>>2]=0;break b};case 59:{ya=0;c[p>>2]=0;break b};case 64:{ya=0;pb(152,o|0)|0;c[p>>2]=0;break b};case 72:{ya=0;c[p>>2]=0;break b};case 82:{ya=0;c[p>>2]=0;break b};case 84:{ya=0;b=c[s>>2]|0;Aa=c[q>>2]|0;Ba=c[l>>2]|0;c[o>>2]=c[m>>2];c[o+4>>2]=b;c[o+8>>2]=Aa;c[o+12>>2]=Ba;pb(125480,o|0)|0;c[p>>2]=0;break b};case 85:{ya=0;b=c[s>>2]|0;Aa=c[q>>2]|0;Ba=c[l>>2]|0;c[o>>2]=c[m>>2];c[o+4>>2]=b;c[o+8>>2]=Aa;c[o+12>>2]=Ba;pb(125480,o|0)|0;c[p>>2]=0;break b};case 89:{ya=0;Aa=c[q>>2]|0;Ba=c[l>>2]|0;c[o>>2]=za;c[o+4>>2]=b;c[o+8>>2]=Aa;c[o+12>>2]=Ba;pb(125480,o|0)|0;c[p>>2]=0;break b};case 94:{ya=0;c[p>>2]=0;break b};case 97:{ya=0;c[m>>2]=c[m>>2]&1073741823;break b}}}c[p>>2]=0}}else{pb(152,o|0)|0;c[p>>2]=0}while(0);if((c[j>>2]|0)!=0)Ey(c[j>>2]|0);if((c[ja>>2]|0)!=0)Ey(c[ja>>2]|0);if((c[W>>2]|0)!=0)Ey(c[W>>2]|0);c[sa>>2]=0;while(1){if((c[sa>>2]|0)>=3)continue a;Oc(N+(c[sa>>2]<<4)|0);c[sa>>2]=(c[sa>>2]|0)+1}}if((c[h>>2]|0)!=0){Aa=c[h>>2]|0;Ba=c[m>>2]&c[n>>2];c[o+0>>2]=c[e+0>>2];c[o+4>>2]=c[e+4>>2];if((xc(o,Aa,Ba)|0)<0)c[p>>2]=0;Ey(c[h>>2]|0)}if((c[Q>>2]|0)!=0)Ey(c[Q>>2]|0);if((c[U>>2]|0)!=0)Ey(c[U>>2]|0);c[g>>2]=c[p>>2];Ba=c[g>>2]|0;i=S;return Ba|0}function Dc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;c[(c[e>>2]|0)+8252>>2]=c[f>>2];i=d;return}function Ec(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;i=i+16|0;d=b+8|0;e=b+4|0;f=b;c[e>>2]=a;if((wc(c[e>>2]|0,1)|0)==0){c[d>>2]=0;f=c[d>>2]|0;i=b;return f|0}c[f>>2]=wc(c[e>>2]|0,3)|0;if((c[f>>2]|0)==0){c[d>>2]=1;f=c[d>>2]|0;i=b;return f|0}else{e=wc(c[e>>2]|0,c[f>>2]|0)|0;c[d>>2]=e+(1<<c[f>>2]);f=c[d>>2]|0;i=b;return f|0}return 0}function Fc(e,f,g){e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;o=i;i=i+112|0;j=o;n=o+8|0;m=o+60|0;p=o+76|0;q=o+12|0;k=o+16|0;h=o+64|0;s=o+72|0;l=o+80|0;A=o+84|0;D=o+88|0;B=o+24|0;r=o+40|0;C=o+4|0;t=o+56|0;x=o+94|0;y=o+68|0;z=o+28|0;u=o+32|0;v=o+20|0;w=o+92|0;c[m>>2]=e;c[p>>2]=f;c[q>>2]=g;c[k>>2]=1;c[h>>2]=0;c[l>>2]=0;e=c[m>>2]|0;c[l>>2]=_c(e,((e|0)<0)<<31>>31,1)|0;if((c[l>>2]|0)==0){c[n>>2]=0;e=c[n>>2]|0;i=o;return e|0}if((vc(c[q>>2]|0)|0)==0){pb(127808,j|0)|0;c[n>>2]=0;e=c[n>>2]|0;i=o;return e|0}c[s>>2]=wc(c[q>>2]|0,2)|0;do if((c[s>>2]|0)==1){c[D>>2]=(c[m>>2]|0)-1;c[B>>2]=0;c[r+0>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;c[r+12>>2]=0;c[C>>2]=(wc(c[q>>2]|0,2)|0)+1;while(1){if((c[D>>2]|0)==0)break;c[D>>2]=c[D>>2]>>1;c[B>>2]=(c[B>>2]|0)+1}lz(c[l>>2]|0,0,c[m>>2]|0)|0;c[A>>2]=0;while(1){if((c[A>>2]|0)>=(c[C>>2]|0))break;e=wc(c[q>>2]|0,c[B>>2]|0)|0;c[r+(c[A>>2]<<2)>>2]=(e|0)%(c[m>>2]|0)|0;a[(c[l>>2]|0)+(c[r+(c[A>>2]<<2)>>2]|0)>>0]=2;c[A>>2]=(c[A>>2]|0)+1}a[(c[l>>2]|0)+(c[r>>2]|0)>>0]=1;s=c[C>>2]|0;if((s|0)==3){if((c[r>>2]|0)!=(c[r+4>>2]|0)?(c[r>>2]|0)!=(c[r+8>>2]|0):0)q=(c[r+4>>2]|0)!=(c[r+8>>2]|0);else q=0;c[k>>2]=q&1;break}else if((s|0)==2){c[k>>2]=(c[r>>2]|0)!=(c[r+4>>2]|0)&1;a[(c[l>>2]|0)+(c[r+4>>2]|0)>>0]=1;break}else if((s|0)==4){if(((((c[r>>2]|0)!=(c[r+4>>2]|0)?(c[r>>2]|0)!=(c[r+8>>2]|0):0)?(c[r>>2]|0)!=(c[r+12>>2]|0):0)?(c[r+4>>2]|0)!=(c[r+8>>2]|0):0)?(c[r+4>>2]|0)!=(c[r+12>>2]|0):0)s=(c[r+8>>2]|0)!=(c[r+12>>2]|0);else s=0;c[k>>2]=s&1;if((wc(c[q>>2]|0,1)|0)!=0){a[(c[l>>2]|0)+(c[r+8>>2]|0)>>0]=3;a[(c[l>>2]|0)+(c[r+12>>2]|0)>>0]=3;break}else{a[(c[l>>2]|0)+(c[r>>2]|0)>>0]=2;break}}else break}else{A=x+0|0;r=A+18|0;do{a[A>>0]=0;A=A+1|0}while((A|0)<(r|0));c[y>>2]=32;c[z>>2]=0;c[t>>2]=c[s>>2];while(1){if((c[t>>2]|0)>=18)break;if((c[y>>2]|0)<=0)break;c[u>>2]=d[127920+(c[t>>2]|0)>>0];c[v>>2]=127856;Qc(c[q>>2]|0);e=(c[q>>2]|0)+8240|0;e=oz(c[e>>2]|0,c[e+4>>2]|0,c[(c[q>>2]|0)+8252>>2]|0)|0;c[v>>2]=(c[v>>2]|0)+((e&15)<<2);e=(c[q>>2]|0)+8252|0;c[e>>2]=(c[e>>2]|0)+(d[c[v>>2]>>0]|0);a[w>>0]=b[(c[v>>2]|0)+2>>1];a[x+(c[u>>2]|0)>>0]=a[w>>0]|0;if((d[w>>0]|0|0)!=0){c[y>>2]=(c[y>>2]|0)-(32>>(d[w>>0]|0));c[z>>2]=(c[z>>2]|0)+1}c[t>>2]=(c[t>>2]|0)+1}if((c[z>>2]|0)!=1?(c[y>>2]|0)!=0:0)q=0;else q=(Uc(x,c[m>>2]|0,c[l>>2]|0,c[q>>2]|0)|0)!=0;c[k>>2]=q&1}while(0);if((c[k>>2]|0)!=0?(c[h>>2]=Wc(c[p>>2]|0,8,c[l>>2]|0,c[m>>2]|0)|0,(c[h>>2]|0)==0):0){pb(127944,j|0)|0;Vc(c[l>>2]|0,c[m>>2]|0)}Ey(c[l>>2]|0);c[n>>2]=c[h>>2];e=c[n>>2]|0;i=o;return e|0}function Gc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;h=d+12|0;f=d+8|0;g=d+4|0;e=d;c[h>>2]=a;c[f>>2]=b;c[g>>2]=Lc(c[h>>2]|0,c[f>>2]|0)|0;c[e>>2]=c[127604+(c[g>>2]<<3)>>2];a=c[127600+(c[g>>2]<<3)>>2]|0;a=a+(wc(c[f>>2]|0,c[e>>2]|0)|0)|0;i=d;return a|0}function Hc(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;n=i;i=i+64|0;h=n;m=n+4|0;k=n+16|0;t=n+20|0;j=n+24|0;o=n+8|0;g=n+12|0;u=n+28|0;r=n+32|0;l=n+36|0;q=n+40|0;p=n+44|0;s=n+48|0;c[k>>2]=b;c[t>>2]=d;c[j>>2]=e;c[o>>2]=f;c[g>>2]=1;c[r>>2]=0;if((vc(c[o>>2]|0)|0)==0){pb(127552,h|0)|0;c[m>>2]=0;b=c[m>>2]|0;i=n;return b|0}b=(Ec(c[o>>2]|0)|0)+1|0;c[c[t>>2]>>2]=b;b=Dy(c[k>>2]|0)|0;c[c[j>>2]>>2]=b;if((c[c[j>>2]>>2]|0)==0){c[m>>2]=0;b=c[m>>2]|0;i=n;return b|0}if((c[c[t>>2]>>2]|0)<=1){lz(c[c[j>>2]>>2]|0,0,c[k>>2]|0)|0;c[m>>2]=1;b=c[m>>2]|0;i=n;return b|0}c[u>>2]=wc(c[o>>2]|0,1)|0;if((c[u>>2]|0)!=0)c[r>>2]=(wc(c[o>>2]|0,4)|0)+1;c[l>>2]=Dy(8192)|0;if((c[l>>2]|0)==0){c[m>>2]=0;b=c[m>>2]|0;i=n;return b|0}do if((Fc((c[c[t>>2]>>2]|0)+(c[r>>2]|0)|0,c[l>>2]|0,c[o>>2]|0)|0)!=0){c[q>>2]=0;a:while(1){f=c[o>>2]|0;if((c[q>>2]|0)>=(c[k>>2]|0)){o=26;break}if((vc(f)|0)==0){o=16;break}c[p>>2]=Lc(c[l>>2]|0,c[o>>2]|0)|0;if((c[p>>2]|0)==0){a[(c[c[j>>2]>>2]|0)+(c[q>>2]|0)>>0]=0;c[q>>2]=(c[q>>2]|0)+1;continue}f=c[p>>2]|0;if((c[p>>2]|0)>(c[r>>2]|0)){a[(c[c[j>>2]>>2]|0)+(c[q>>2]|0)>>0]=f-(c[r>>2]|0);c[q>>2]=(c[q>>2]|0)+1;continue}c[s>>2]=1+(1<<f)+(wc(c[o>>2]|0,c[p>>2]|0)|0);while(1){b=(c[s>>2]|0)+ -1|0;c[s>>2]=b;if((b|0)==0)continue a;if((c[q>>2]|0)>=(c[k>>2]|0)){o=23;break a}a[(c[c[j>>2]>>2]|0)+(c[q>>2]|0)>>0]=0;c[q>>2]=(c[q>>2]|0)+1}}if((o|0)==16){pb(127552,h|0)|0;c[g>>2]=0;break}else if((o|0)==23){c[g>>2]=0;break}else if((o|0)==26){if((wc(f,1)|0)==0)break;Sc(c[c[j>>2]>>2]|0,c[k>>2]|0);break}}else c[g>>2]=0;while(0);Ey(c[l>>2]|0);c[m>>2]=c[g>>2];b=c[m>>2]|0;i=n;return b|0}function Ic(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;h=e+4|0;g=e;c[f>>2]=a;c[h>>2]=b;c[g>>2]=d;c[c[f>>2]>>2]=c[h>>2];c[(c[f>>2]|0)+4>>2]=c[g>>2];a=Dy(c[g>>2]<<11<<2)|0;c[(c[f>>2]|0)+8>>2]=a;a=Dy(c[g>>2]<<2)|0;c[(c[f>>2]|0)+12>>2]=a;i=e;return}function Jc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+32|0;d=e+20|0;g=e+16|0;j=e+12|0;h=e+8|0;k=e+4|0;f=e;c[g>>2]=a;c[j>>2]=b;c[f>>2]=c[(c[g>>2]|0)+8>>2];c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[(c[g>>2]|0)+4>>2]|0)){b=6;break}c[(c[(c[g>>2]|0)+12>>2]|0)+(c[h>>2]<<2)>>2]=c[f>>2];c[k>>2]=Fc(c[c[g>>2]>>2]|0,c[f>>2]|0,c[j>>2]|0)|0;c[f>>2]=(c[f>>2]|0)+(c[k>>2]<<2);if((c[k>>2]|0)==0){b=4;break}c[h>>2]=(c[h>>2]|0)+1}if((b|0)==4){c[d>>2]=0;a=c[d>>2]|0;i=e;return a|0}else if((b|0)==6){c[d>>2]=1;a=c[d>>2]|0;i=e;return a|0}return 0}function Kc(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;o=i;i=i+48|0;j=o+36|0;s=o+16|0;l=o;k=o+28|0;u=o+32|0;t=o+40|0;r=o+12|0;m=o+24|0;n=o+20|0;q=o+8|0;p=o+4|0;c[j>>2]=a;c[s>>2]=b;c[l>>2]=d;c[k>>2]=e;c[u>>2]=f;c[t>>2]=g;c[r>>2]=h;c[m>>2]=(c[u>>2]|0)+(c[l>>2]<<1<<2);c[n>>2]=(c[t>>2]|0)+(c[l>>2]<<2);c[q>>2]=Lc((c[s>>2]|0)+(c[l>>2]<<11<<2)|0,c[r>>2]|0)|0;do if((c[q>>2]|0)!=0)if((c[q>>2]|0)==1){c[p>>2]=(c[(c[m>>2]|0)+(((c[c[n>>2]>>2]|0)-1&1)<<2)>>2]|0)+1;break}else{c[p>>2]=(c[q>>2]|0)-2;break}else c[p>>2]=c[(c[m>>2]|0)+((c[c[n>>2]>>2]&1)<<2)>>2];while(0);if((c[p>>2]|0)>=(c[j>>2]|0))c[p>>2]=(c[p>>2]|0)-(c[j>>2]|0);c[(c[k>>2]|0)+(c[l>>2]<<2)>>2]=c[p>>2];c[(c[m>>2]|0)+((c[c[n>>2]>>2]&1)<<2)>>2]=c[p>>2];u=c[n>>2]|0;c[u>>2]=(c[u>>2]|0)+1;i=o;return}function Lc(f,g){f=f|0;g=g|0;var h=0,j=0,k=0,l=0;h=i;i=i+16|0;j=h+8|0;k=h+4|0;l=h;c[j>>2]=f;c[k>>2]=g;Qc(c[k>>2]|0);f=(c[k>>2]|0)+8240|0;f=oz(c[f>>2]|0,c[f+4>>2]|0,c[(c[k>>2]|0)+8252>>2]|0)|0;c[j>>2]=(c[j>>2]|0)+((f&255)<<2);c[l>>2]=(d[c[j>>2]>>0]|0)-8;if((c[l>>2]|0)<=0){l=c[j>>2]|0;l=a[l>>0]|0;l=l&255;f=c[k>>2]|0;f=f+8252|0;k=c[f>>2]|0;l=k+l|0;c[f>>2]=l;f=c[j>>2]|0;f=f+2|0;f=b[f>>1]|0;f=f&65535;i=h;return f|0}f=(c[k>>2]|0)+8252|0;c[f>>2]=(c[f>>2]|0)+8;c[j>>2]=(c[j>>2]|0)+((e[(c[j>>2]|0)+2>>1]|0)<<2);f=(c[k>>2]|0)+8240|0;f=oz(c[f>>2]|0,c[f+4>>2]|0,c[(c[k>>2]|0)+8252>>2]|0)|0;c[j>>2]=(c[j>>2]|0)+((f&(1<<c[l>>2])-1)<<2);l=c[j>>2]|0;l=a[l>>0]|0;l=l&255;f=c[k>>2]|0;f=f+8252|0;k=c[f>>2]|0;l=k+l|0;c[f>>2]=l;f=c[j>>2]|0;f=f+2|0;f=b[f>>1]|0;f=f&65535;i=h;return f|0}function Mc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;g=e+12|0;j=e+8|0;h=e+4|0;f=e;c[g>>2]=a;c[j>>2]=b;c[h>>2]=d;d=c[g>>2]|0;if((c[g>>2]|0)<16){c[h>>2]=(c[h>>2]|0)+(c[127424+(d<<2)>>2]|0);c[h>>2]=c[h>>2]&3;c[f>>2]=(c[(c[j>>2]|0)+(c[h>>2]<<2)>>2]|0)+(c[127488+(c[g>>2]<<2)>>2]|0);a=c[f>>2]|0;i=e;return a|0}else{c[f>>2]=d-16+1;a=c[f>>2]|0;i=e;return a|0}return 0}function Nc(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;m=i;i=i+48|0;h=m+4|0;q=m+16|0;n=m+36|0;t=m;s=m+32|0;o=m+40|0;l=m+44|0;r=m+24|0;g=m+20|0;p=m+8|0;j=m+12|0;k=m+28|0;c[h>>2]=b;c[q>>2]=d;c[n>>2]=e;c[t>>2]=f;c[s>>2]=c[125560+((c[t>>2]|0)*12|0)>>2];c[o>>2]=c[125568+((c[t>>2]|0)*12|0)>>2];c[l>>2]=c[125564+((c[t>>2]|0)*12|0)>>2];if((c[l>>2]|0)<12)f=0;else f=(c[l>>2]|0)-11|0;c[r>>2]=f;c[g>>2]=0;c[p>>2]=0;if((c[r>>2]|0)>(c[n>>2]|0))c[r>>2]=c[n>>2];while(1){if((a[c[s>>2]>>0]|0)==0)break;b=c[s>>2]|0;c[s>>2]=b+1;b=a[b>>0]|0;t=c[g>>2]|0;c[g>>2]=t+1;a[(c[h>>2]|0)+t>>0]=b}c[q>>2]=(c[q>>2]|0)+(c[r>>2]|0);c[n>>2]=(c[n>>2]|0)-(c[r>>2]|0);if((c[l>>2]|0)<=9)c[n>>2]=(c[n>>2]|0)-(c[l>>2]|0);while(1){if((c[p>>2]|0)>=(c[n>>2]|0))break;b=c[p>>2]|0;c[p>>2]=b+1;b=a[(c[q>>2]|0)+b>>0]|0;t=c[g>>2]|0;c[g>>2]=t+1;a[(c[h>>2]|0)+t>>0]=b}c[j>>2]=(c[h>>2]|0)+((c[g>>2]|0)-(c[n>>2]|0));a:do if((c[l>>2]|0)!=10){if((c[l>>2]|0)==11)while(1){if((c[n>>2]|0)<=0)break a;c[k>>2]=Pc(c[j>>2]|0,c[n>>2]|0)|0;c[j>>2]=(c[j>>2]|0)+(c[k>>2]|0);c[n>>2]=(c[n>>2]|0)-(c[k>>2]|0)}}else Pc(c[j>>2]|0,c[n>>2]|0)|0;while(0);while(1){if((a[c[o>>2]>>0]|0)==0)break;b=c[o>>2]|0;c[o>>2]=b+1;b=a[b>>0]|0;t=c[g>>2]|0;c[g>>2]=t+1;a[(c[h>>2]|0)+t>>0]=b}i=m;return c[g>>2]|0}function Oc(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;if((c[(c[d>>2]|0)+8>>2]|0)!=0)Ey(c[(c[d>>2]|0)+8>>2]|0);if((c[(c[d>>2]|0)+12>>2]|0)==0){i=b;return}Ey(c[(c[d>>2]|0)+12>>2]|0);i=b;return}function Pc(b,e){b=b|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f+8|0;h=f+4|0;c[h>>2]=b;c[f>>2]=e;e=d[c[h>>2]>>0]|0;if((d[c[h>>2]>>0]|0|0)>=192){h=c[h>>2]|0;if((e|0)<224){b=h+1|0;a[b>>0]=(d[b>>0]|0)^32;c[g>>2]=2;b=c[g>>2]|0;i=f;return b|0}else{b=h+2|0;a[b>>0]=(d[b>>0]|0)^5;c[g>>2]=3;b=c[g>>2]|0;i=f;return b|0}}else{if((e|0)>=97?(d[c[h>>2]>>0]|0|0)<=122:0){b=c[h>>2]|0;a[b>>0]=(d[b>>0]|0)^32}c[g>>2]=1;b=c[g>>2]|0;i=f;return b|0}return 0}function Qc(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;if(!((c[(c[d>>2]|0)+8252>>2]|0)>>>0>=40)){i=b;return}Rc(c[d>>2]|0);i=b;return}function Rc(a){a=a|0;var b=0,e=0,f=0,g=0,h=0;b=i;i=i+16|0;e=b;c[e>>2]=a;while(1){if(!((c[(c[e>>2]|0)+8252>>2]|0)>>>0>=8))break;g=(c[e>>2]|0)+8240|0;a=g;a=oz(c[a>>2]|0,c[a+4>>2]|0,8)|0;c[g>>2]=a;c[g+4>>2]=H;g=rz(d[(c[e>>2]|0)+(c[(c[e>>2]|0)+8248>>2]&8191)>>0]|0|0,0,56)|0;a=(c[e>>2]|0)+8240|0;h=a;f=c[h+4>>2]|H;c[a>>2]=c[h>>2]|g;c[a+4>>2]=f;a=(c[e>>2]|0)+8248|0;c[a>>2]=(c[a>>2]|0)+1;a=(c[e>>2]|0)+8252|0;c[a>>2]=(c[a>>2]|0)-8;a=(c[e>>2]|0)+8256|0;c[a>>2]=(c[a>>2]|0)-8}i=b;return}function Sc(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+272|0;g=f+8|0;l=f+4|0;k=f+16|0;h=f;j=f+12|0;c[g>>2]=b;c[l>>2]=e;c[h>>2]=0;while(1){if((c[h>>2]|0)>=256)break;a[k+(c[h>>2]|0)>>0]=c[h>>2];c[h>>2]=(c[h>>2]|0)+1}c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[l>>2]|0))break;a[j>>0]=a[(c[g>>2]|0)+(c[h>>2]|0)>>0]|0;a[(c[g>>2]|0)+(c[h>>2]|0)>>0]=a[k+(d[j>>0]|0)>>0]|0;if((a[j>>0]|0)!=0)Tc(k,a[j>>0]|0);c[h>>2]=(c[h>>2]|0)+1}i=f;return}function Tc(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;h=i;i=i+16|0;g=h;k=h+6|0;f=h+5|0;j=h+4|0;c[g>>2]=b;a[k>>0]=e;a[f>>0]=a[(c[g>>2]|0)+(d[k>>0]|0)>>0]|0;a[j>>0]=a[k>>0]|0;while(1){if((a[j>>0]|0)==0)break;a[(c[g>>2]|0)+(d[j>>0]|0)>>0]=a[(c[g>>2]|0)+((d[j>>0]|0)-1)>>0]|0;a[j>>0]=(a[j>>0]|0)+ -1<<24>>24}a[c[g>>2]>>0]=a[f>>0]|0;i=h;return}function Uc(e,f,g,h){e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;n=i;i=i+192|0;k=n;j=n+32|0;x=n+12|0;p=n+36|0;m=n+16|0;t=n+40|0;l=n+44|0;y=n+184|0;u=n+8|0;z=n+185|0;o=n+24|0;v=n+56|0;q=n+4|0;w=n+186|0;r=n+28|0;A=n+20|0;B=n+48|0;s=n+187|0;c[x>>2]=e;c[p>>2]=f;c[m>>2]=g;c[t>>2]=h;c[l>>2]=0;a[y>>0]=8;c[u>>2]=0;a[z>>0]=0;c[o>>2]=32768;if((Wc(v,5,c[x>>2]|0,18)|0)==0){pb(128e3,k|0)|0;Vc(c[x>>2]|0,18);c[j>>2]=0;e=c[j>>2]|0;i=n;return e|0}while(1){if((c[l>>2]|0)>=(c[p>>2]|0)){q=20;break}if((c[o>>2]|0)<=0){q=20;break}c[q>>2]=v;if((vc(c[t>>2]|0)|0)==0){q=6;break}Qc(c[t>>2]|0);e=(c[t>>2]|0)+8240|0;e=oz(c[e>>2]|0,c[e+4>>2]|0,c[(c[t>>2]|0)+8252>>2]|0)|0;c[q>>2]=(c[q>>2]|0)+((e&31)<<2);e=(c[t>>2]|0)+8252|0;c[e>>2]=(c[e>>2]|0)+(d[c[q>>2]>>0]|0);a[w>>0]=b[(c[q>>2]|0)+2>>1];if((d[w>>0]|0|0)<16){c[u>>2]=0;f=a[w>>0]|0;e=c[l>>2]|0;c[l>>2]=e+1;a[(c[m>>2]|0)+e>>0]=f;if((d[w>>0]|0|0)==0)continue;a[y>>0]=a[w>>0]|0;c[o>>2]=(c[o>>2]|0)-(32768>>(d[w>>0]|0));continue}c[r>>2]=(d[w>>0]|0)-14;a[s>>0]=0;if((d[w>>0]|0|0)==16)a[s>>0]=a[y>>0]|0;if((d[z>>0]|0|0)!=(d[s>>0]|0|0)){c[u>>2]=0;a[z>>0]=a[s>>0]|0}c[A>>2]=c[u>>2];if((c[u>>2]|0)>0){c[u>>2]=(c[u>>2]|0)-2;c[u>>2]=c[u>>2]<<c[r>>2]}e=(wc(c[t>>2]|0,c[r>>2]|0)|0)+3|0;c[u>>2]=(c[u>>2]|0)+e;c[B>>2]=(c[u>>2]|0)-(c[A>>2]|0);if(((c[l>>2]|0)+(c[B>>2]|0)|0)>(c[p>>2]|0)){q=17;break}lz((c[m>>2]|0)+(c[l>>2]|0)|0,(d[z>>0]|0)&255|0,c[B>>2]|0)|0;c[l>>2]=(c[l>>2]|0)+(c[B>>2]|0);if((d[z>>0]|0|0)==0)continue;c[o>>2]=(c[o>>2]|0)-(c[B>>2]<<15-(d[z>>0]|0))}if((q|0)==6){pb(128064,k|0)|0;c[j>>2]=0;e=c[j>>2]|0;i=n;return e|0}else if((q|0)==17){c[j>>2]=0;e=c[j>>2]|0;i=n;return e|0}else if((q|0)==20)if((c[o>>2]|0)!=0){c[k>>2]=c[o>>2];pb(128120,k|0)|0;c[j>>2]=0;e=c[j>>2]|0;i=n;return e|0}else{lz((c[m>>2]|0)+(c[l>>2]|0)|0,0,(c[p>>2]|0)-(c[l>>2]|0)|0)|0;c[j>>2]=1;e=c[j>>2]|0;i=n;return e|0}return 0}function Vc(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0;f=i;i=i+16|0;e=f;h=f+8|0;g=f+4|0;c[h>>2]=a;c[g>>2]=b;while(1){a=c[g>>2]|0;c[g>>2]=a+ -1;if((a|0)<=0)break;a=c[h>>2]|0;c[h>>2]=a+1;c[e>>2]=d[a>>0];pb(127992,e|0)|0}pb(127120,e|0)|0;i=f;return}function Wc(e,f,g,h){e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;m=i;i=i+208|0;A=m+200|0;l=m+108|0;s=m+24|0;u=m+16|0;C=m+4|0;B=m+104|0;y=m+196|0;j=m+180|0;p=m+188|0;n=m+20|0;z=m+192|0;w=m;o=m+96|0;r=m+100|0;v=m+8|0;k=m+12|0;x=m+176|0;t=m+184|0;q=m+32|0;D=m+112|0;c[s>>2]=e;c[u>>2]=f;c[C>>2]=g;c[B>>2]=h;g=q+0|0;h=g+64|0;do{c[g>>2]=0;g=g+4|0}while((g|0)<(h|0));c[t>>2]=Dy(c[B>>2]<<2)|0;if((c[t>>2]|0)==0){c[l>>2]=0;e=c[l>>2]|0;i=m;return e|0}c[n>>2]=0;while(1){if((c[n>>2]|0)>=(c[B>>2]|0))break;e=q+((d[(c[C>>2]|0)+(c[n>>2]|0)>>0]|0)<<2)|0;c[e>>2]=(c[e>>2]|0)+1;c[n>>2]=(c[n>>2]|0)+1}c[D+4>>2]=0;c[p>>2]=1;while(1){if((c[p>>2]|0)>=15)break;c[D+((c[p>>2]|0)+1<<2)>>2]=(c[D+(c[p>>2]<<2)>>2]|0)+(c[q+(c[p>>2]<<2)>>2]|0);c[p>>2]=(c[p>>2]|0)+1}c[n>>2]=0;while(1){if((c[n>>2]|0)>=(c[B>>2]|0))break;if((d[(c[C>>2]|0)+(c[n>>2]|0)>>0]|0|0)!=0){f=c[n>>2]|0;g=D+((d[(c[C>>2]|0)+(c[n>>2]|0)>>0]|0)<<2)|0;e=c[g>>2]|0;c[g>>2]=e+1;c[(c[t>>2]|0)+(e<<2)>>2]=f}c[n>>2]=(c[n>>2]|0)+1}c[j>>2]=c[s>>2];c[v>>2]=c[u>>2];c[k>>2]=1<<c[v>>2];c[x>>2]=c[k>>2];if((c[D+60>>2]|0)==1){a[y>>0]=0;b[y+2>>1]=c[c[t>>2]>>2];c[z>>2]=0;while(1){if((c[z>>2]|0)>=(c[x>>2]|0))break;e=(c[j>>2]|0)+(c[z>>2]<<2)|0;b[e+0>>1]=b[y+0>>1]|0;b[e+2>>1]=b[y+2>>1]|0;c[z>>2]=(c[z>>2]|0)+1}Ey(c[t>>2]|0);c[l>>2]=c[x>>2];e=c[l>>2]|0;i=m;return e|0}c[z>>2]=0;c[n>>2]=0;c[p>>2]=1;c[w>>2]=2;while(1){if((c[p>>2]|0)>(c[u>>2]|0))break;while(1){B=c[p>>2]|0;if((c[q+(c[p>>2]<<2)>>2]|0)<=0)break;a[y>>0]=B;g=c[n>>2]|0;c[n>>2]=g+1;b[y+2>>1]=c[(c[t>>2]|0)+(g<<2)>>2];g=(c[j>>2]|0)+(c[z>>2]<<2)|0;f=c[w>>2]|0;e=c[k>>2]|0;b[A+0>>1]=b[y+0>>1]|0;b[A+2>>1]=b[y+2>>1]|0;Xc(g,f,e,A);c[z>>2]=Yc(c[z>>2]|0,c[p>>2]|0)|0;e=q+(c[p>>2]<<2)|0;c[e>>2]=(c[e>>2]|0)+ -1}c[p>>2]=B+1;c[w>>2]=c[w>>2]<<1}c[r>>2]=(c[x>>2]|0)-1;c[o>>2]=-1;c[p>>2]=(c[u>>2]|0)+1;c[w>>2]=2;while(1){if((c[p>>2]|0)>15)break;while(1){if((c[q+(c[p>>2]<<2)>>2]|0)<=0)break;if((c[z>>2]&c[r>>2]|0)!=(c[o>>2]|0)){c[j>>2]=(c[j>>2]|0)+(c[k>>2]<<2);c[v>>2]=Zc(q,c[p>>2]|0,c[u>>2]|0)|0;c[k>>2]=1<<c[v>>2];c[x>>2]=(c[x>>2]|0)+(c[k>>2]|0);c[o>>2]=c[z>>2]&c[r>>2];a[(c[s>>2]|0)+(c[o>>2]<<2)>>0]=(c[v>>2]|0)+(c[u>>2]|0);b[(c[s>>2]|0)+(c[o>>2]<<2)+2>>1]=(((c[j>>2]|0)-(c[s>>2]|0)|0)/4|0)-(c[o>>2]|0)}a[y>>0]=(c[p>>2]|0)-(c[u>>2]|0);g=c[n>>2]|0;c[n>>2]=g+1;b[y+2>>1]=c[(c[t>>2]|0)+(g<<2)>>2];g=(c[j>>2]|0)+(c[z>>2]>>c[u>>2]<<2)|0;f=c[w>>2]|0;e=c[k>>2]|0;b[A+0>>1]=b[y+0>>1]|0;b[A+2>>1]=b[y+2>>1]|0;Xc(g,f,e,A);c[z>>2]=Yc(c[z>>2]|0,c[p>>2]|0)|0;e=q+(c[p>>2]<<2)|0;c[e>>2]=(c[e>>2]|0)+ -1}c[p>>2]=(c[p>>2]|0)+1;c[w>>2]=c[w>>2]<<1}Ey(c[t>>2]|0);c[l>>2]=c[x>>2];e=c[l>>2]|0;i=m;return e|0}function Xc(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;g=i;i=i+16|0;k=g+8|0;j=g+4|0;h=g;c[k>>2]=a;c[j>>2]=d;c[h>>2]=e;do{c[h>>2]=(c[h>>2]|0)-(c[j>>2]|0);a=(c[k>>2]|0)+(c[h>>2]<<2)|0;b[a+0>>1]=b[f+0>>1]|0;b[a+2>>1]=b[f+2>>1]|0}while((c[h>>2]|0)>0);i=g;return}function Yc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d+8|0;g=d+4|0;f=d;c[e>>2]=a;c[g>>2]=b;c[f>>2]=1<<(c[g>>2]|0)-1;while(1){if((c[e>>2]&c[f>>2]|0)==0)break;c[f>>2]=c[f>>2]>>1}i=d;return(c[e>>2]&(c[f>>2]|0)-1)+(c[f>>2]|0)|0}function Zc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;j=e+12|0;f=e+8|0;g=e+4|0;h=e;c[j>>2]=a;c[f>>2]=b;c[g>>2]=d;c[h>>2]=1<<(c[f>>2]|0)-(c[g>>2]|0);while(1){if((c[f>>2]|0)>=15){d=5;break}c[h>>2]=(c[h>>2]|0)-(c[(c[j>>2]|0)+(c[f>>2]<<2)>>2]|0);if((c[h>>2]|0)<=0){d=5;break}c[f>>2]=(c[f>>2]|0)+1;c[h>>2]=c[h>>2]<<1}if((d|0)==5){i=e;return(c[f>>2]|0)-(c[g>>2]|0)|0}return 0}function _c(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e+12|0;g=e;h=e+8|0;j=g;c[j>>2]=a;c[j+4>>2]=b;c[h>>2]=d;a=g;if(($c(c[a>>2]|0,c[a+4>>2]|0,c[h>>2]|0)|0)==0){c[f>>2]=0;j=c[f>>2]|0;i=e;return j|0}j=g;j=yz(c[j>>2]|0,c[j+4>>2]|0,c[h>>2]|0,0)|0;a=H;if(!(a>>>0>0|(a|0)==0&j>>>0>0))La(128264,128288,36,128320);j=g;j=yz(c[j>>2]|0,c[j+4>>2]|0,c[h>>2]|0,0)|0;c[f>>2]=Dy(j)|0;j=c[f>>2]|0;i=e;return j|0}function $c(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+32|0;f=e+20|0;j=e+8|0;h=e+16|0;g=e;k=j;c[k>>2]=a;c[k+4>>2]=b;c[h>>2]=d;b=j;b=yz(c[b>>2]|0,c[b+4>>2]|0,c[h>>2]|0,0)|0;a=g;c[a>>2]=b;c[a+4>>2]=H;a=j;if((c[a>>2]|0)==0&(c[a+4>>2]|0)==0){c[f>>2]=1;k=c[f>>2]|0;i=e;return k|0}a=c[h>>2]|0;k=j;k=zz(1073741824,0,c[k>>2]|0,c[k+4>>2]|0)|0;b=H;if(0>b>>>0|0==(b|0)&a>>>0>k>>>0){c[f>>2]=0;k=c[f>>2]|0;i=e;return k|0}k=g;if((c[k+4>>2]|0)!=0?1:(c[k>>2]|0)!=(c[g>>2]|0)){c[f>>2]=0;k=c[f>>2]|0;i=e;return k|0}else{c[f>>2]=1;k=c[f>>2]|0;i=e;return k|0}return 0}function ad(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+32|0;f=e+16|0;k=e+12|0;g=e+8|0;j=e+4|0;h=e;c[k>>2]=a;c[g>>2]=b;c[j>>2]=d;c[h>>2]=c[k>>2];if((c[(c[h>>2]|0)+8>>2]|0)>>>0>(c[(c[h>>2]|0)+4>>2]|0)>>>0){c[f>>2]=-1;k=c[f>>2]|0;i=e;return k|0}if(((c[(c[h>>2]|0)+8>>2]|0)+(c[j>>2]|0)|0)>>>0>(c[(c[h>>2]|0)+4>>2]|0)>>>0)c[j>>2]=(c[(c[h>>2]|0)+4>>2]|0)-(c[(c[h>>2]|0)+8>>2]|0);qz(c[g>>2]|0,(c[c[h>>2]>>2]|0)+(c[(c[h>>2]|0)+8>>2]|0)|0,c[j>>2]|0)|0;k=(c[h>>2]|0)+8|0;c[k>>2]=(c[k>>2]|0)+(c[j>>2]|0);c[f>>2]=c[j>>2];k=c[f>>2]|0;i=e;return k|0}function bd(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+32|0;k=f+16|0;j=f+12|0;h=f+8|0;g=f;c[k>>2]=b;c[j>>2]=d;c[h>>2]=e;c[c[h>>2]>>2]=c[k>>2];c[(c[h>>2]|0)+4>>2]=c[j>>2];c[(c[h>>2]|0)+8>>2]=0;c[g>>2]=24;c[g+4>>2]=c[h>>2];c[a+0>>2]=c[g+0>>2];c[a+4>>2]=c[g+4>>2];i=f;return}function cd(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+32|0;f=e+16|0;k=e+12|0;j=e+8|0;g=e+4|0;h=e;c[k>>2]=a;c[j>>2]=b;c[g>>2]=d;c[h>>2]=c[k>>2];if(((c[(c[h>>2]|0)+8>>2]|0)+(c[g>>2]|0)|0)>>>0>(c[(c[h>>2]|0)+4>>2]|0)>>>0){c[f>>2]=-1;k=c[f>>2]|0;i=e;return k|0}else{qz((c[c[h>>2]>>2]|0)+(c[(c[h>>2]|0)+8>>2]|0)|0,c[j>>2]|0,c[g>>2]|0)|0;k=(c[h>>2]|0)+8|0;c[k>>2]=(c[k>>2]|0)+(c[g>>2]|0);c[f>>2]=c[g>>2];k=c[f>>2]|0;i=e;return k|0}return 0}function dd(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+32|0;k=f+16|0;j=f+12|0;h=f+8|0;g=f;c[k>>2]=b;c[j>>2]=d;c[h>>2]=e;c[c[h>>2]>>2]=c[k>>2];c[(c[h>>2]|0)+4>>2]=c[j>>2];c[(c[h>>2]|0)+8>>2]=0;c[g>>2]=25;c[g+4>>2]=c[h>>2];c[a+0>>2]=c[g+0>>2];c[a+4>>2]=c[g+4>>2];i=f;return}function ed(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+48|0;k=g+28|0;h=g+16|0;q=g+4|0;o=g+8|0;n=g+32|0;j=g;m=g+12|0;p=g+24|0;l=g+20|0;c[q>>2]=a;c[o>>2]=b;c[n>>2]=d;c[j>>2]=e;c[m>>2]=f;fd(p);c[p>>2]=c[q>>2];c[l+0>>2]=c[p+0>>2];d=c[o>>2]|0;b=c[n>>2]|0;a=c[m>>2]|0;c[k+0>>2]=c[l+0>>2];if((rj(k,d,b,j,a)|0)!=0){c[h>>2]=c[j>>2];q=c[h>>2]|0;i=g;return q|0}else{c[h>>2]=-1;q=c[h>>2]|0;i=g;return q|0}return 0}function fd(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;gd(c[d>>2]|0);i=b;return}function gd(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;c[c[d>>2]>>2]=0;i=b;return}function hd(a,b,d,e,f,g,h,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;w=i;i=i+64|0;n=w+52|0;o=w+44|0;p=w+20|0;x=w+12|0;y=w+4|0;z=w+40|0;m=w+48|0;v=w+56|0;u=w+16|0;t=w+24|0;l=w;r=w+32|0;q=w+28|0;A=w+8|0;s=w+36|0;c[m>>2]=a;c[v>>2]=b;c[u>>2]=d;c[t>>2]=e;c[l>>2]=f;c[r>>2]=g;c[q>>2]=h;c[A>>2]=j;c[s>>2]=k;k=c[A>>2]|0;if((k|0)==1){f=c[m>>2]|0;e=c[v>>2]|0;d=c[u>>2]|0;b=c[t>>2]|0;a=c[l>>2]|0;A=c[r>>2]|0;c[p>>2]=(c[q>>2]|0)+4;c[o>>2]=c[p>>2];c[n>>2]=c[o>>2];jd(f,e,d,b,a,A,c[c[n>>2]>>2]|0,c[s>>2]|0);i=w;return}else if((k|0)==0){f=c[m>>2]|0;e=c[v>>2]|0;d=c[u>>2]|0;b=c[t>>2]|0;a=c[l>>2]|0;A=c[r>>2]|0;c[z>>2]=c[q>>2];c[y>>2]=c[z>>2];c[x>>2]=c[y>>2];id(f,e,d,b,a,A,c[c[x>>2]>>2]|0,c[s>>2]|0);i=w;return}else{i=w;return}}function id(b,d,e,f,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0;n=i;i=i+768|0;Tb=n+448|0;Ub=n+700|0;Vb=n+676|0;Rb=n+300|0;Sb=n+692|0;Qb=n+72|0;Nb=n+176|0;Ob=n+128|0;Pb=n+754|0;Ib=n+172|0;Jb=n+188|0;Kb=n+168|0;Gb=n+132|0;Hb=n+124|0;Fb=n+16|0;Cb=n+608|0;Db=n+508|0;Eb=n+757|0;xb=n+312|0;yb=n+292|0;zb=n+192|0;Ab=n+184|0;wb=n+180|0;vb=n+164|0;ub=n+136|0;tb=n+140|0;sb=n+144|0;rb=n+148|0;pb=n+152|0;qb=n+120|0;kc=n+160|0;lc=n+604|0;mc=n+552|0;ic=n+504|0;jc=n+416|0;hc=n+88|0;ec=n+316|0;fc=n+308|0;gc=n+758|0;na=n+288|0;oa=n+196|0;pa=n+200|0;la=n+204|0;ma=n+208|0;ka=n;ha=n+216|0;ia=n+220|0;ja=n+755|0;kb=n+228|0;jb=n+232|0;ib=n+236|0;hb=n+240|0;za=n+244|0;Aa=n+248|0;Ba=n+252|0;xa=n+256|0;ya=n+260|0;wa=n+96|0;ta=n+268|0;ua=n+156|0;va=n+761|0;gb=n+280|0;fb=n+8|0;eb=n+600|0;cb=n+104|0;ab=n+548|0;bb=n+544|0;_a=n+500|0;$a=n+472|0;Xa=n+412|0;Ya=n+664|0;z=n+672|0;Va=n+680|0;Za=n+688|0;Ua=n+696|0;Ta=n+340|0;Sa=n+344|0;Ra=n+348|0;Qa=n+352|0;Pa=n+40|0;Oa=n+356|0;Ma=n+32|0;Ka=n+360|0;La=n+364|0;Ia=n+368|0;Ja=n+372|0;Fa=n+376|0;Ga=n+380|0;Ea=n+384|0;Da=n+212|0;Ha=n+400|0;s=n+404|0;v=n+408|0;u=n+704|0;o=n+420|0;r=n+744|0;q=n+424|0;p=n+428|0;y=n+432|0;x=n+436|0;w=n+440|0;A=n+444|0;t=n+748|0;Y=n+452|0;Z=n+456|0;_=n+460|0;W=n+464|0;X=n+468|0;V=n+56|0;R=n+476|0;T=n+480|0;U=n+760|0;nc=n+488|0;oc=n+492|0;I=n+496|0;aa=n+264|0;ba=n+512|0;S=n+516|0;H=n+520|0;Wa=n+272|0;D=n+524|0;F=n+528|0;J=n+532|0;E=n+536|0;K=n+284|0;$b=n+24|0;pc=n+596|0;G=n+753|0;lb=n+556|0;mb=n+560|0;nb=n+564|0;L=n+48|0;N=n+568|0;O=n+572|0;P=n+576|0;M=n+112|0;$=n+584|0;Q=n+588|0;ca=n+759|0;da=n+756|0;ea=n+752|0;Na=n+656|0;db=n+392|0;Yb=n+648|0;ac=n+612|0;bc=n+320|0;cc=n+668|0;Wb=n+80|0;dc=n+336|0;Xb=n+64|0;_b=n+332|0;Zb=n+684|0;ob=n+712|0;Bb=n+328|0;Lb=n+296|0;Mb=n+592|0;qa=n+580|0;fa=n+484|0;ga=n+276|0;Ca=n+224|0;ra=n+304|0;sa=n+324|0;C=n+616|0;c[nc>>2]=b;c[oc>>2]=d;c[I>>2]=e;c[aa>>2]=f;c[ba>>2]=j;c[S>>2]=k;c[H>>2]=l;c[Wa>>2]=m;c[D>>2]=0;c[F>>2]=c[oc>>2]&c[ba>>2];c[J>>2]=(c[oc>>2]|0)-(c[F>>2]|0);c[E>>2]=(c[F>>2]|0)+(c[nc>>2]|0);c[n+540>>2]=512;c[K>>2]=(c[F>>2]|0)+512;h[$b>>3]=0.0;c[pc>>2]=c[oc>>2];while(1){if(!((c[pc>>2]|0)>>>0<((c[oc>>2]|0)+(c[nc>>2]|0)|0)>>>0))break;h[$b>>3]=+h[$b>>3]+ +g[(c[aa>>2]|0)+((c[pc>>2]&c[ba>>2])<<2)>>2];c[pc>>2]=(c[pc>>2]|0)+1}h[$b>>3]=+h[$b>>3]/+((c[nc>>2]|0)>>>0);Md(c[H>>2]|0,+h[$b>>3]);a[G>>0]=0;c[lb>>2]=0;c[mb>>2]=0;c[nb>>2]=0;h[L>>3]=0.0;a:while(1){if(!(((c[F>>2]|0)+2|0)>>>0<(c[E>>2]|0)>>>0))break;c[N>>2]=0;c[O>>2]=0;c[P>>2]=0;h[M>>3]=0.0;c[Q>>2]=(c[F>>2]|0)+(c[J>>2]|0);c[R>>2]=Q;c[T>>2]=S;b=c[R>>2]|0;d=c[T>>2]|0;a[V+0>>0]=a[U+0>>0]|0;c[W>>2]=b;c[X>>2]=d;d=c[X>>2]|0;b=c[W>>2]|0;c[Y>>2]=V;c[Z>>2]=d;c[_>>2]=b;c[$>>2]=c[((c[c[Z>>2]>>2]|0)>>>0<(c[c[_>>2]>>2]|0)>>>0?c[X>>2]|0:c[W>>2]|0)>>2];Nd(c[H>>2]|0,c[D>>2]|0);a[da>>0]=(Od(c[H>>2]|0,c[I>>2]|0,c[aa>>2]|0,c[ba>>2]|0,(c[F>>2]|0)+(c[J>>2]|0)|0,(c[E>>2]|0)-(c[F>>2]|0)|0,c[$>>2]|0,N,O,P,M,ca)|0)&1;a[ea>>0]=a[ca>>0]&1;if(!(a[da>>0]&1)){a[G>>0]=0;c[D>>2]=(c[D>>2]|0)+1;Pd(c[H>>2]|0,(c[I>>2]|0)+(c[F>>2]|0)|0,(c[F>>2]|0)+(c[J>>2]|0)|0);c[F>>2]=(c[F>>2]|0)+1;if(!((c[F>>2]|0)>>>0>(c[K>>2]|0)>>>0))continue;e=c[F>>2]|0;if((c[F>>2]|0)>>>0>((c[K>>2]|0)+2048|0)>>>0){c[fa>>2]=e+16;c[ga>>2]=(c[E>>2]|0)-4;c[ha>>2]=fa;c[ia>>2]=ga;b=c[ha>>2]|0;d=c[ia>>2]|0;a[ka+0>>0]=a[ja+0>>0]|0;c[la>>2]=b;c[ma>>2]=d;d=c[ma>>2]|0;b=c[la>>2]|0;c[na>>2]=ka;c[oa>>2]=d;c[pa>>2]=b;c[qa>>2]=c[((c[c[oa>>2]>>2]|0)>>>0<(c[c[pa>>2]>>2]|0)>>>0?c[ma>>2]|0:c[la>>2]|0)>>2];while(1){if(!((c[F>>2]|0)>>>0<(c[qa>>2]|0)>>>0))continue a;Pd(c[H>>2]|0,(c[I>>2]|0)+(c[F>>2]|0)|0,(c[F>>2]|0)+(c[J>>2]|0)|0);c[D>>2]=(c[D>>2]|0)+4;c[F>>2]=(c[F>>2]|0)+4}}else{c[ra>>2]=e+8;c[sa>>2]=(c[E>>2]|0)-2;c[ta>>2]=ra;c[ua>>2]=sa;b=c[ta>>2]|0;d=c[ua>>2]|0;a[wa+0>>0]=a[va+0>>0]|0;c[xa>>2]=b;c[ya>>2]=d;d=c[ya>>2]|0;b=c[xa>>2]|0;c[za>>2]=wa;c[Aa>>2]=d;c[Ba>>2]=b;c[Ca>>2]=c[((c[c[Aa>>2]>>2]|0)>>>0<(c[c[Ba>>2]>>2]|0)>>>0?c[ya>>2]|0:c[xa>>2]|0)>>2];while(1){if(!((c[F>>2]|0)>>>0<(c[Ca>>2]|0)>>>0))continue a;Pd(c[H>>2]|0,(c[I>>2]|0)+(c[F>>2]|0)|0,(c[F>>2]|0)+(c[J>>2]|0)|0);c[D>>2]=(c[D>>2]|0)+2;c[F>>2]=(c[F>>2]|0)+2}}}if(a[G>>0]&1?+h[L>>3]>+h[M>>3]:0){c[Da>>2]=c[Wa>>2];c[Ea>>2]=c[Da>>2];b=c[Ea>>2]|0;d=c[b+4>>2]|0;c[Fa>>2]=b;c[Ga>>2]=d;d=c[Ga>>2]|0;c[Ia>>2]=Ha;c[Ja>>2]=d;d=c[Ja>>2]|0;c[Ka>>2]=c[Ia>>2];c[La>>2]=d;c[c[Ka>>2]>>2]=c[La>>2];a[Ma+0>>0]=a[Ha+0>>0]|0;a[Ma+1>>0]=a[Ha+1>>0]|0;a[Ma+2>>0]=a[Ha+2>>0]|0;a[Ma+3>>0]=a[Ha+3>>0]|0;c[Oa>>2]=Na;d=c[Oa>>2]|0;a[Pa+0>>0]=a[Ma+0>>0]|0;a[Pa+1>>0]=a[Ma+1>>0]|0;a[Pa+2>>0]=a[Ma+2>>0]|0;a[Pa+3>>0]=a[Ma+3>>0]|0;c[Qa>>2]=d;d=c[Qa>>2]|0;c[d+0>>2]=c[Pa+0>>2];d=d+4|0;c[d+0>>2]=c[Pa+0>>2];c[Ra>>2]=Na;c[Sa>>2]=c[Ra>>2];d=c[Sa>>2]|0;b=d+4|0;c[d+0>>2]=c[b+0>>2];c[Ta>>2]=d;d=c[Ta>>2]|0;c[d>>2]=(c[d>>2]|0)+ -32;c[Ua>>2]=d;d=(c[c[Ua>>2]>>2]|0)+4|0;c[d>>2]=(c[d>>2]|0)-1;c[Va>>2]=c[Wa>>2];c[z>>2]=c[Va>>2];d=c[z>>2]|0;b=c[d+4>>2]|0;c[Xa>>2]=d;c[Ya>>2]=b;b=c[Ya>>2]|0;c[_a>>2]=Za;c[$a>>2]=b;b=c[$a>>2]|0;c[ab>>2]=c[_a>>2];c[bb>>2]=b;c[c[ab>>2]>>2]=c[bb>>2];a[cb+0>>0]=a[Za+0>>0]|0;a[cb+1>>0]=a[Za+1>>0]|0;a[cb+2>>0]=a[Za+2>>0]|0;a[cb+3>>0]=a[Za+3>>0]|0;c[eb>>2]=db;b=c[eb>>2]|0;a[fb+0>>0]=a[cb+0>>0]|0;a[fb+1>>0]=a[cb+1>>0]|0;a[fb+2>>0]=a[cb+2>>0]|0;a[fb+3>>0]=a[cb+3>>0]|0;c[gb>>2]=b;b=c[gb>>2]|0;c[b+0>>2]=c[fb+0>>2];b=b+4|0;c[b+0>>2]=c[fb+0>>2];c[hb>>2]=db;c[ib>>2]=c[hb>>2];b=c[ib>>2]|0;d=b+4|0;c[b+0>>2]=c[d+0>>2];c[jb>>2]=b;b=c[jb>>2]|0;c[b>>2]=(c[b>>2]|0)+ -32;c[kb>>2]=b;b=(c[c[kb>>2]>>2]|0)+8|0;c[b>>2]=(c[b>>2]|0)-1;Pd(c[H>>2]|0,(c[I>>2]|0)+(c[F>>2]|0)|0,(c[F>>2]|0)+(c[J>>2]|0)|0);c[F>>2]=(c[F>>2]|0)+ -1;c[N>>2]=c[lb>>2];c[O>>2]=c[mb>>2];c[P>>2]=c[nb>>2];h[M>>3]=+h[L>>3];a[ea>>0]=1;a[ca>>0]=1}else B=10;b:do if((B|0)==10){B=0;c[Yb>>2]=0;while(1){if(!(((c[F>>2]|0)+4|0)>>>0<(c[E>>2]|0)>>>0))break b;if((c[Yb>>2]|0)>=4)break b;c[ac>>2]=0;c[bc>>2]=0;c[cc>>2]=0;h[Wb>>3]=0.0;c[dc>>2]=(c[F>>2]|0)+(c[J>>2]|0)+1;c[ec>>2]=dc;c[fc>>2]=S;b=c[ec>>2]|0;d=c[fc>>2]|0;a[hc+0>>0]=a[gc+0>>0]|0;c[ic>>2]=b;c[jc>>2]=d;d=c[jc>>2]|0;b=c[ic>>2]|0;c[kc>>2]=hc;c[lc>>2]=d;c[mc>>2]=b;c[$>>2]=c[((c[c[lc>>2]>>2]|0)>>>0<(c[c[mc>>2]>>2]|0)>>>0?c[jc>>2]|0:c[ic>>2]|0)>>2];Pd(c[H>>2]|0,(c[I>>2]|0)+(c[F>>2]|0)|0,(c[F>>2]|0)+(c[J>>2]|0)|0);a[da>>0]=(Od(c[H>>2]|0,c[I>>2]|0,c[aa>>2]|0,c[ba>>2]|0,(c[F>>2]|0)+(c[J>>2]|0)+1|0,(c[E>>2]|0)-(c[F>>2]|0)-1|0,c[$>>2]|0,ac,bc,cc,Wb,ca)|0)&1;h[Xb>>3]=0.0;if((c[N>>2]|0)>>>0>=4)h[Xb>>3]=+h[Xb>>3]+(+g[(c[aa>>2]|0)+(((c[F>>2]|0)+4&c[ba>>2])<<2)>>2]- +h[$b>>3]);c[_b>>2]=(c[ac>>2]|0)-(c[N>>2]|0)+1;c[Zb>>2]=0;while(1){if((c[Zb>>2]|0)>=(c[_b>>2]|0))break;h[Xb>>3]=+h[Xb>>3]-(+g[(c[aa>>2]|0)+(((c[F>>2]|0)+(c[N>>2]|0)+(c[Zb>>2]|0)&c[ba>>2])<<2)>>2]- +h[$b>>3]);c[Zb>>2]=(c[Zb>>2]|0)+1}if((c[D>>2]|0)<1)h[Xb>>3]=+h[Xb>>3]+.97;h[Xb>>3]=+h[Xb>>3]+(+(c[Yb>>2]|0)*.2+2.0);h[Xb>>3]=+h[Xb>>3]+ +g[(c[aa>>2]|0)+((c[F>>2]&c[ba>>2])<<2)>>2]*.04;if(!(a[da>>0]&1))break b;if(!(+h[Wb>>3]>=+h[M>>3]+ +h[Xb>>3]))break b;c[D>>2]=(c[D>>2]|0)+1;c[Yb>>2]=(c[Yb>>2]|0)+1;c[N>>2]=c[ac>>2];c[O>>2]=c[bc>>2];c[P>>2]=c[cc>>2];h[M>>3]=+h[Wb>>3];a[ea>>0]=a[ca>>0]&1;c[F>>2]=(c[F>>2]|0)+1}}while(0);c[K>>2]=(c[F>>2]|0)+(c[N>>2]<<1)+512;od(ob);c[ob>>2]=c[D>>2];c[ob+4>>2]=c[N>>2];c[ob+8>>2]=c[O>>2];c[ob+12>>2]=c[P>>2];c[pb>>2]=c[Wa>>2];c[qb>>2]=ob;e=c[pb>>2]|0;b=c[e+4>>2]|0;c[rb>>2]=e;c[sb>>2]=(c[rb>>2]|0)+8;c[tb>>2]=c[sb>>2];if((b|0)!=(c[c[tb>>2]>>2]|0)){c[ub>>2]=e;c[vb>>2]=(c[ub>>2]|0)+8;c[wb>>2]=c[vb>>2];d=c[wb>>2]|0;c[xb>>2]=c[e+4>>2];b=c[xb>>2]|0;nc=c[qb>>2]|0;c[yb>>2]=d;c[zb>>2]=b;c[Ab>>2]=nc;nc=c[zb>>2]|0;if((nc|0)!=0){b=c[Ab>>2]|0;c[nc+0>>2]=c[b+0>>2];c[nc+4>>2]=c[b+4>>2];c[nc+8>>2]=c[b+8>>2];c[nc+12>>2]=c[b+12>>2];c[nc+16>>2]=c[b+16>>2];c[nc+20>>2]=c[b+20>>2];c[nc+24>>2]=c[b+24>>2];c[nc+28>>2]=c[b+28>>2]}b=e+4|0;c[b>>2]=(c[b>>2]|0)+32}else rd(e,c[qb>>2]|0);c[D>>2]=0;c[F>>2]=(c[F>>2]|0)+1;b=c[P>>2]|0;c[Bb>>2]=(c[F>>2]|0)+(c[J>>2]|0);c[Cb>>2]=Bb;c[Db>>2]=S;d=c[Cb>>2]|0;pc=c[Db>>2]|0;a[Fb+0>>0]=a[Eb+0>>0]|0;c[Gb>>2]=d;c[Hb>>2]=pc;pc=c[Hb>>2]|0;d=c[Gb>>2]|0;c[Ib>>2]=Fb;c[Jb>>2]=pc;c[Kb>>2]=d;if(b>>>0<=(c[((c[c[Jb>>2]>>2]|0)>>>0<(c[c[Kb>>2]>>2]|0)>>>0?c[Hb>>2]|0:c[Gb>>2]|0)>>2]|0)>>>0)Qd(c[H>>2]|0,c[P>>2]|0);c[Lb>>2]=1;while(1){if(!((c[Lb>>2]|0)>>>0<((c[N>>2]|0)-1|0)>>>0))break;if(((c[F>>2]|0)+2|0)>>>0<(c[E>>2]|0)>>>0)Pd(c[H>>2]|0,(c[I>>2]|0)+(c[F>>2]|0)|0,(c[F>>2]|0)+(c[J>>2]|0)|0);c[F>>2]=(c[F>>2]|0)+1;c[Lb>>2]=(c[Lb>>2]|0)+1}if(((Rd(c[H>>2]|0)|0?(c[N>>2]|0)>>>0>=4:0)?((c[F>>2]|0)+20|0)>>>0<(c[E>>2]|0)>>>0:0)?!(a[ea>>0]&1):0){c[Mb>>2]=(c[F>>2]|0)+(c[J>>2]|0);c[Nb>>2]=Mb;c[Ob>>2]=S;b=c[Nb>>2]|0;d=c[Ob>>2]|0;a[Qb+0>>0]=a[Pb+0>>0]|0;c[Rb>>2]=b;c[Sb>>2]=d;d=c[Sb>>2]|0;b=c[Rb>>2]|0;c[Tb>>2]=Qb;c[Ub>>2]=d;c[Vb>>2]=b;c[$>>2]=c[((c[c[Ub>>2]>>2]|0)>>>0<(c[c[Vb>>2]>>2]|0)>>>0?c[Sb>>2]|0:c[Rb>>2]|0)>>2];a[G>>0]=(Od(c[H>>2]|0,c[I>>2]|0,c[aa>>2]|0,c[ba>>2]|0,(c[F>>2]|0)+(c[J>>2]|0)|0,(c[E>>2]|0)-(c[F>>2]|0)|0,c[$>>2]|0,lb,mb,nb,L,ca)|0)&1}else{a[G>>0]=0;a[ca>>0]=0}h[L>>3]=+h[L>>3]- +g[(c[aa>>2]|0)+((c[F>>2]&c[ba>>2])<<2)>>2];h[L>>3]=+h[L>>3]-3.75;if(((c[F>>2]|0)+2|0)>>>0<(c[E>>2]|0)>>>0)Pd(c[H>>2]|0,(c[I>>2]|0)+(c[F>>2]|0)|0,(c[F>>2]|0)+(c[J>>2]|0)|0);c[F>>2]=(c[F>>2]|0)+1}c[D>>2]=(c[D>>2]|0)+((c[E>>2]|0)-(c[F>>2]|0));if((c[D>>2]|0)<=0){i=n;return}od(C);c[C>>2]=c[D>>2];c[C+4>>2]=0;c[C+12>>2]=0;c[A>>2]=c[Wa>>2];c[t>>2]=C;z=c[A>>2]|0;b=c[z+4>>2]|0;c[w>>2]=z;c[x>>2]=(c[w>>2]|0)+8;c[y>>2]=c[x>>2];if((b|0)==(c[c[y>>2]>>2]|0)){rd(z,c[t>>2]|0);i=n;return}c[p>>2]=z;c[q>>2]=(c[p>>2]|0)+8;c[r>>2]=c[q>>2];d=c[r>>2]|0;c[s>>2]=c[z+4>>2];b=c[s>>2]|0;p=c[t>>2]|0;c[v>>2]=d;c[u>>2]=b;c[o>>2]=p;p=c[u>>2]|0;if((p|0)!=0){b=c[o>>2]|0;c[p+0>>2]=c[b+0>>2];c[p+4>>2]=c[b+4>>2];c[p+8>>2]=c[b+8>>2];c[p+12>>2]=c[b+12>>2];c[p+16>>2]=c[b+16>>2];c[p+20>>2]=c[b+20>>2];c[p+24>>2]=c[b+24>>2];c[p+28>>2]=c[b+28>>2]}b=z+4|0;c[b>>2]=(c[b>>2]|0)+32;i=n;return}function jd(b,d,e,f,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0;n=i;i=i+768|0;Tb=n+448|0;Ub=n+700|0;Vb=n+676|0;Rb=n+300|0;Sb=n+692|0;Qb=n+72|0;Nb=n+176|0;Ob=n+128|0;Pb=n+754|0;Ib=n+172|0;Jb=n+188|0;Kb=n+168|0;Gb=n+132|0;Hb=n+124|0;Fb=n+16|0;Cb=n+608|0;Db=n+508|0;Eb=n+757|0;xb=n+312|0;yb=n+292|0;zb=n+192|0;Ab=n+184|0;wb=n+180|0;vb=n+164|0;ub=n+136|0;tb=n+140|0;sb=n+144|0;rb=n+148|0;pb=n+152|0;qb=n+120|0;kc=n+160|0;lc=n+604|0;mc=n+552|0;ic=n+504|0;jc=n+416|0;hc=n+88|0;ec=n+316|0;fc=n+308|0;gc=n+758|0;na=n+288|0;oa=n+196|0;pa=n+200|0;la=n+204|0;ma=n+208|0;ka=n;ha=n+216|0;ia=n+220|0;ja=n+755|0;kb=n+228|0;jb=n+232|0;ib=n+236|0;hb=n+240|0;za=n+244|0;Aa=n+248|0;Ba=n+252|0;xa=n+256|0;ya=n+260|0;wa=n+96|0;ta=n+268|0;ua=n+156|0;va=n+761|0;gb=n+280|0;fb=n+8|0;eb=n+600|0;cb=n+104|0;ab=n+548|0;bb=n+544|0;_a=n+500|0;$a=n+472|0;Xa=n+412|0;Ya=n+664|0;z=n+672|0;Va=n+680|0;Za=n+688|0;Ua=n+696|0;Ta=n+340|0;Sa=n+344|0;Ra=n+348|0;Qa=n+352|0;Pa=n+40|0;Oa=n+356|0;Ma=n+32|0;Ka=n+360|0;La=n+364|0;Ia=n+368|0;Ja=n+372|0;Fa=n+376|0;Ga=n+380|0;Ea=n+384|0;Da=n+212|0;Ha=n+400|0;s=n+404|0;v=n+408|0;u=n+704|0;o=n+420|0;r=n+744|0;q=n+424|0;p=n+428|0;y=n+432|0;x=n+436|0;w=n+440|0;A=n+444|0;t=n+748|0;Y=n+452|0;Z=n+456|0;_=n+460|0;W=n+464|0;X=n+468|0;V=n+56|0;R=n+476|0;T=n+480|0;U=n+760|0;nc=n+488|0;oc=n+492|0;I=n+496|0;aa=n+264|0;ba=n+512|0;S=n+516|0;H=n+520|0;Wa=n+272|0;D=n+524|0;F=n+528|0;J=n+532|0;E=n+536|0;K=n+284|0;$b=n+24|0;pc=n+596|0;G=n+753|0;lb=n+556|0;mb=n+560|0;nb=n+564|0;L=n+48|0;N=n+568|0;O=n+572|0;P=n+576|0;M=n+112|0;$=n+584|0;Q=n+588|0;ca=n+759|0;da=n+756|0;ea=n+752|0;Na=n+656|0;db=n+392|0;Yb=n+648|0;ac=n+612|0;bc=n+320|0;cc=n+668|0;Wb=n+80|0;dc=n+336|0;Xb=n+64|0;_b=n+332|0;Zb=n+684|0;ob=n+712|0;Bb=n+328|0;Lb=n+296|0;Mb=n+592|0;qa=n+580|0;fa=n+484|0;ga=n+276|0;Ca=n+224|0;ra=n+304|0;sa=n+324|0;C=n+616|0;c[nc>>2]=b;c[oc>>2]=d;c[I>>2]=e;c[aa>>2]=f;c[ba>>2]=j;c[S>>2]=k;c[H>>2]=l;c[Wa>>2]=m;c[D>>2]=0;c[F>>2]=c[oc>>2]&c[ba>>2];c[J>>2]=(c[oc>>2]|0)-(c[F>>2]|0);c[E>>2]=(c[F>>2]|0)+(c[nc>>2]|0);c[n+540>>2]=512;c[K>>2]=(c[F>>2]|0)+512;h[$b>>3]=0.0;c[pc>>2]=c[oc>>2];while(1){if(!((c[pc>>2]|0)>>>0<((c[oc>>2]|0)+(c[nc>>2]|0)|0)>>>0))break;h[$b>>3]=+h[$b>>3]+ +g[(c[aa>>2]|0)+((c[pc>>2]&c[ba>>2])<<2)>>2];c[pc>>2]=(c[pc>>2]|0)+1}h[$b>>3]=+h[$b>>3]/+((c[nc>>2]|0)>>>0);kd(c[H>>2]|0,+h[$b>>3]);a[G>>0]=0;c[lb>>2]=0;c[mb>>2]=0;c[nb>>2]=0;h[L>>3]=0.0;a:while(1){if(!(((c[F>>2]|0)+2|0)>>>0<(c[E>>2]|0)>>>0))break;c[N>>2]=0;c[O>>2]=0;c[P>>2]=0;h[M>>3]=0.0;c[Q>>2]=(c[F>>2]|0)+(c[J>>2]|0);c[R>>2]=Q;c[T>>2]=S;b=c[R>>2]|0;d=c[T>>2]|0;a[V+0>>0]=a[U+0>>0]|0;c[W>>2]=b;c[X>>2]=d;d=c[X>>2]|0;b=c[W>>2]|0;c[Y>>2]=V;c[Z>>2]=d;c[_>>2]=b;c[$>>2]=c[((c[c[Z>>2]>>2]|0)>>>0<(c[c[_>>2]>>2]|0)>>>0?c[X>>2]|0:c[W>>2]|0)>>2];ld(c[H>>2]|0,c[D>>2]|0);a[da>>0]=(md(c[H>>2]|0,c[I>>2]|0,c[aa>>2]|0,c[ba>>2]|0,(c[F>>2]|0)+(c[J>>2]|0)|0,(c[E>>2]|0)-(c[F>>2]|0)|0,c[$>>2]|0,N,O,P,M,ca)|0)&1;a[ea>>0]=a[ca>>0]&1;if(!(a[da>>0]&1)){a[G>>0]=0;c[D>>2]=(c[D>>2]|0)+1;nd(c[H>>2]|0,(c[I>>2]|0)+(c[F>>2]|0)|0,(c[F>>2]|0)+(c[J>>2]|0)|0);c[F>>2]=(c[F>>2]|0)+1;if(!((c[F>>2]|0)>>>0>(c[K>>2]|0)>>>0))continue;e=c[F>>2]|0;if((c[F>>2]|0)>>>0>((c[K>>2]|0)+2048|0)>>>0){c[fa>>2]=e+16;c[ga>>2]=(c[E>>2]|0)-4;c[ha>>2]=fa;c[ia>>2]=ga;b=c[ha>>2]|0;d=c[ia>>2]|0;a[ka+0>>0]=a[ja+0>>0]|0;c[la>>2]=b;c[ma>>2]=d;d=c[ma>>2]|0;b=c[la>>2]|0;c[na>>2]=ka;c[oa>>2]=d;c[pa>>2]=b;c[qa>>2]=c[((c[c[oa>>2]>>2]|0)>>>0<(c[c[pa>>2]>>2]|0)>>>0?c[ma>>2]|0:c[la>>2]|0)>>2];while(1){if(!((c[F>>2]|0)>>>0<(c[qa>>2]|0)>>>0))continue a;nd(c[H>>2]|0,(c[I>>2]|0)+(c[F>>2]|0)|0,(c[F>>2]|0)+(c[J>>2]|0)|0);c[D>>2]=(c[D>>2]|0)+4;c[F>>2]=(c[F>>2]|0)+4}}else{c[ra>>2]=e+8;c[sa>>2]=(c[E>>2]|0)-2;c[ta>>2]=ra;c[ua>>2]=sa;b=c[ta>>2]|0;d=c[ua>>2]|0;a[wa+0>>0]=a[va+0>>0]|0;c[xa>>2]=b;c[ya>>2]=d;d=c[ya>>2]|0;b=c[xa>>2]|0;c[za>>2]=wa;c[Aa>>2]=d;c[Ba>>2]=b;c[Ca>>2]=c[((c[c[Aa>>2]>>2]|0)>>>0<(c[c[Ba>>2]>>2]|0)>>>0?c[ya>>2]|0:c[xa>>2]|0)>>2];while(1){if(!((c[F>>2]|0)>>>0<(c[Ca>>2]|0)>>>0))continue a;nd(c[H>>2]|0,(c[I>>2]|0)+(c[F>>2]|0)|0,(c[F>>2]|0)+(c[J>>2]|0)|0);c[D>>2]=(c[D>>2]|0)+2;c[F>>2]=(c[F>>2]|0)+2}}}if(a[G>>0]&1?+h[L>>3]>+h[M>>3]:0){c[Da>>2]=c[Wa>>2];c[Ea>>2]=c[Da>>2];b=c[Ea>>2]|0;d=c[b+4>>2]|0;c[Fa>>2]=b;c[Ga>>2]=d;d=c[Ga>>2]|0;c[Ia>>2]=Ha;c[Ja>>2]=d;d=c[Ja>>2]|0;c[Ka>>2]=c[Ia>>2];c[La>>2]=d;c[c[Ka>>2]>>2]=c[La>>2];a[Ma+0>>0]=a[Ha+0>>0]|0;a[Ma+1>>0]=a[Ha+1>>0]|0;a[Ma+2>>0]=a[Ha+2>>0]|0;a[Ma+3>>0]=a[Ha+3>>0]|0;c[Oa>>2]=Na;d=c[Oa>>2]|0;a[Pa+0>>0]=a[Ma+0>>0]|0;a[Pa+1>>0]=a[Ma+1>>0]|0;a[Pa+2>>0]=a[Ma+2>>0]|0;a[Pa+3>>0]=a[Ma+3>>0]|0;c[Qa>>2]=d;d=c[Qa>>2]|0;c[d+0>>2]=c[Pa+0>>2];d=d+4|0;c[d+0>>2]=c[Pa+0>>2];c[Ra>>2]=Na;c[Sa>>2]=c[Ra>>2];d=c[Sa>>2]|0;b=d+4|0;c[d+0>>2]=c[b+0>>2];c[Ta>>2]=d;d=c[Ta>>2]|0;c[d>>2]=(c[d>>2]|0)+ -32;c[Ua>>2]=d;d=(c[c[Ua>>2]>>2]|0)+4|0;c[d>>2]=(c[d>>2]|0)-1;c[Va>>2]=c[Wa>>2];c[z>>2]=c[Va>>2];d=c[z>>2]|0;b=c[d+4>>2]|0;c[Xa>>2]=d;c[Ya>>2]=b;b=c[Ya>>2]|0;c[_a>>2]=Za;c[$a>>2]=b;b=c[$a>>2]|0;c[ab>>2]=c[_a>>2];c[bb>>2]=b;c[c[ab>>2]>>2]=c[bb>>2];a[cb+0>>0]=a[Za+0>>0]|0;a[cb+1>>0]=a[Za+1>>0]|0;a[cb+2>>0]=a[Za+2>>0]|0;a[cb+3>>0]=a[Za+3>>0]|0;c[eb>>2]=db;b=c[eb>>2]|0;a[fb+0>>0]=a[cb+0>>0]|0;a[fb+1>>0]=a[cb+1>>0]|0;a[fb+2>>0]=a[cb+2>>0]|0;a[fb+3>>0]=a[cb+3>>0]|0;c[gb>>2]=b;b=c[gb>>2]|0;c[b+0>>2]=c[fb+0>>2];b=b+4|0;c[b+0>>2]=c[fb+0>>2];c[hb>>2]=db;c[ib>>2]=c[hb>>2];b=c[ib>>2]|0;d=b+4|0;c[b+0>>2]=c[d+0>>2];c[jb>>2]=b;b=c[jb>>2]|0;c[b>>2]=(c[b>>2]|0)+ -32;c[kb>>2]=b;b=(c[c[kb>>2]>>2]|0)+8|0;c[b>>2]=(c[b>>2]|0)-1;nd(c[H>>2]|0,(c[I>>2]|0)+(c[F>>2]|0)|0,(c[F>>2]|0)+(c[J>>2]|0)|0);c[F>>2]=(c[F>>2]|0)+ -1;c[N>>2]=c[lb>>2];c[O>>2]=c[mb>>2];c[P>>2]=c[nb>>2];h[M>>3]=+h[L>>3];a[ea>>0]=1;a[ca>>0]=1}else B=10;b:do if((B|0)==10){B=0;c[Yb>>2]=0;while(1){if(!(((c[F>>2]|0)+4|0)>>>0<(c[E>>2]|0)>>>0))break b;if((c[Yb>>2]|0)>=4)break b;c[ac>>2]=0;c[bc>>2]=0;c[cc>>2]=0;h[Wb>>3]=0.0;c[dc>>2]=(c[F>>2]|0)+(c[J>>2]|0)+1;c[ec>>2]=dc;c[fc>>2]=S;b=c[ec>>2]|0;d=c[fc>>2]|0;a[hc+0>>0]=a[gc+0>>0]|0;c[ic>>2]=b;c[jc>>2]=d;d=c[jc>>2]|0;b=c[ic>>2]|0;c[kc>>2]=hc;c[lc>>2]=d;c[mc>>2]=b;c[$>>2]=c[((c[c[lc>>2]>>2]|0)>>>0<(c[c[mc>>2]>>2]|0)>>>0?c[jc>>2]|0:c[ic>>2]|0)>>2];nd(c[H>>2]|0,(c[I>>2]|0)+(c[F>>2]|0)|0,(c[F>>2]|0)+(c[J>>2]|0)|0);a[da>>0]=(md(c[H>>2]|0,c[I>>2]|0,c[aa>>2]|0,c[ba>>2]|0,(c[F>>2]|0)+(c[J>>2]|0)+1|0,(c[E>>2]|0)-(c[F>>2]|0)-1|0,c[$>>2]|0,ac,bc,cc,Wb,ca)|0)&1;h[Xb>>3]=0.0;if((c[N>>2]|0)>>>0>=4)h[Xb>>3]=+h[Xb>>3]+(+g[(c[aa>>2]|0)+(((c[F>>2]|0)+4&c[ba>>2])<<2)>>2]- +h[$b>>3]);c[_b>>2]=(c[ac>>2]|0)-(c[N>>2]|0)+1;c[Zb>>2]=0;while(1){if((c[Zb>>2]|0)>=(c[_b>>2]|0))break;h[Xb>>3]=+h[Xb>>3]-(+g[(c[aa>>2]|0)+(((c[F>>2]|0)+(c[N>>2]|0)+(c[Zb>>2]|0)&c[ba>>2])<<2)>>2]- +h[$b>>3]);c[Zb>>2]=(c[Zb>>2]|0)+1}if((c[D>>2]|0)<1)h[Xb>>3]=+h[Xb>>3]+.97;h[Xb>>3]=+h[Xb>>3]+(+(c[Yb>>2]|0)*.2+2.0);h[Xb>>3]=+h[Xb>>3]+ +g[(c[aa>>2]|0)+((c[F>>2]&c[ba>>2])<<2)>>2]*.04;if(!(a[da>>0]&1))break b;if(!(+h[Wb>>3]>=+h[M>>3]+ +h[Xb>>3]))break b;c[D>>2]=(c[D>>2]|0)+1;c[Yb>>2]=(c[Yb>>2]|0)+1;c[N>>2]=c[ac>>2];c[O>>2]=c[bc>>2];c[P>>2]=c[cc>>2];h[M>>3]=+h[Wb>>3];a[ea>>0]=a[ca>>0]&1;c[F>>2]=(c[F>>2]|0)+1}}while(0);c[K>>2]=(c[F>>2]|0)+(c[N>>2]<<1)+512;od(ob);c[ob>>2]=c[D>>2];c[ob+4>>2]=c[N>>2];c[ob+8>>2]=c[O>>2];c[ob+12>>2]=c[P>>2];c[pb>>2]=c[Wa>>2];c[qb>>2]=ob;e=c[pb>>2]|0;b=c[e+4>>2]|0;c[rb>>2]=e;c[sb>>2]=(c[rb>>2]|0)+8;c[tb>>2]=c[sb>>2];if((b|0)!=(c[c[tb>>2]>>2]|0)){c[ub>>2]=e;c[vb>>2]=(c[ub>>2]|0)+8;c[wb>>2]=c[vb>>2];d=c[wb>>2]|0;c[xb>>2]=c[e+4>>2];b=c[xb>>2]|0;nc=c[qb>>2]|0;c[yb>>2]=d;c[zb>>2]=b;c[Ab>>2]=nc;nc=c[zb>>2]|0;if((nc|0)!=0){b=c[Ab>>2]|0;c[nc+0>>2]=c[b+0>>2];c[nc+4>>2]=c[b+4>>2];c[nc+8>>2]=c[b+8>>2];c[nc+12>>2]=c[b+12>>2];c[nc+16>>2]=c[b+16>>2];c[nc+20>>2]=c[b+20>>2];c[nc+24>>2]=c[b+24>>2];c[nc+28>>2]=c[b+28>>2]}b=e+4|0;c[b>>2]=(c[b>>2]|0)+32}else rd(e,c[qb>>2]|0);c[D>>2]=0;c[F>>2]=(c[F>>2]|0)+1;b=c[P>>2]|0;c[Bb>>2]=(c[F>>2]|0)+(c[J>>2]|0);c[Cb>>2]=Bb;c[Db>>2]=S;d=c[Cb>>2]|0;pc=c[Db>>2]|0;a[Fb+0>>0]=a[Eb+0>>0]|0;c[Gb>>2]=d;c[Hb>>2]=pc;pc=c[Hb>>2]|0;d=c[Gb>>2]|0;c[Ib>>2]=Fb;c[Jb>>2]=pc;c[Kb>>2]=d;if(b>>>0<=(c[((c[c[Jb>>2]>>2]|0)>>>0<(c[c[Kb>>2]>>2]|0)>>>0?c[Hb>>2]|0:c[Gb>>2]|0)>>2]|0)>>>0)pd(c[H>>2]|0,c[P>>2]|0);c[Lb>>2]=1;while(1){if(!((c[Lb>>2]|0)>>>0<((c[N>>2]|0)-1|0)>>>0))break;if(((c[F>>2]|0)+2|0)>>>0<(c[E>>2]|0)>>>0)nd(c[H>>2]|0,(c[I>>2]|0)+(c[F>>2]|0)|0,(c[F>>2]|0)+(c[J>>2]|0)|0);c[F>>2]=(c[F>>2]|0)+1;c[Lb>>2]=(c[Lb>>2]|0)+1}if(((qd(c[H>>2]|0)|0?(c[N>>2]|0)>>>0>=4:0)?((c[F>>2]|0)+20|0)>>>0<(c[E>>2]|0)>>>0:0)?!(a[ea>>0]&1):0){c[Mb>>2]=(c[F>>2]|0)+(c[J>>2]|0);c[Nb>>2]=Mb;c[Ob>>2]=S;b=c[Nb>>2]|0;d=c[Ob>>2]|0;a[Qb+0>>0]=a[Pb+0>>0]|0;c[Rb>>2]=b;c[Sb>>2]=d;d=c[Sb>>2]|0;b=c[Rb>>2]|0;c[Tb>>2]=Qb;c[Ub>>2]=d;c[Vb>>2]=b;c[$>>2]=c[((c[c[Ub>>2]>>2]|0)>>>0<(c[c[Vb>>2]>>2]|0)>>>0?c[Sb>>2]|0:c[Rb>>2]|0)>>2];a[G>>0]=(md(c[H>>2]|0,c[I>>2]|0,c[aa>>2]|0,c[ba>>2]|0,(c[F>>2]|0)+(c[J>>2]|0)|0,(c[E>>2]|0)-(c[F>>2]|0)|0,c[$>>2]|0,lb,mb,nb,L,ca)|0)&1}else{a[G>>0]=0;a[ca>>0]=0}h[L>>3]=+h[L>>3]- +g[(c[aa>>2]|0)+((c[F>>2]&c[ba>>2])<<2)>>2];h[L>>3]=+h[L>>3]-3.75;if(((c[F>>2]|0)+2|0)>>>0<(c[E>>2]|0)>>>0)nd(c[H>>2]|0,(c[I>>2]|0)+(c[F>>2]|0)|0,(c[F>>2]|0)+(c[J>>2]|0)|0);c[F>>2]=(c[F>>2]|0)+1}c[D>>2]=(c[D>>2]|0)+((c[E>>2]|0)-(c[F>>2]|0));if((c[D>>2]|0)<=0){i=n;return}od(C);c[C>>2]=c[D>>2];c[C+4>>2]=0;c[C+12>>2]=0;c[A>>2]=c[Wa>>2];c[t>>2]=C;z=c[A>>2]|0;b=c[z+4>>2]|0;c[w>>2]=z;c[x>>2]=(c[w>>2]|0)+8;c[y>>2]=c[x>>2];if((b|0)==(c[c[y>>2]>>2]|0)){rd(z,c[t>>2]|0);i=n;return}c[p>>2]=z;c[q>>2]=(c[p>>2]|0)+8;c[r>>2]=c[q>>2];d=c[r>>2]|0;c[s>>2]=c[z+4>>2];b=c[s>>2]|0;p=c[t>>2]|0;c[v>>2]=d;c[u>>2]=b;c[o>>2]=p;p=c[u>>2]|0;if((p|0)!=0){b=c[o>>2]|0;c[p+0>>2]=c[b+0>>2];c[p+4>>2]=c[b+4>>2];c[p+8>>2]=c[b+8>>2];c[p+12>>2]=c[b+12>>2];c[p+16>>2]=c[b+16>>2];c[p+20>>2]=c[b+20>>2];c[p+24>>2]=c[b+24>>2];c[p+28>>2]=c[b+28>>2]}b=z+4|0;c[b>>2]=(c[b>>2]|0)+32;i=n;return}function kd(a,b){a=a|0;b=+b;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+8|0;f=d;c[e>>2]=a;h[f>>3]=b;h[(c[e>>2]|0)+33619992>>3]=+h[f>>3];i=d;return}function ld(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;c[(c[e>>2]|0)+33619984>>2]=c[f>>2];i=d;return}function md(b,f,j,k,l,m,n,o,p,q,r,s){b=b|0;f=f|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;s=s|0;var t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0.0,cb=0;ka=i;i=i+432|0;Q=ka+248|0;P=ka+396|0;O=ka+380|0;N=ka+140|0;K=ka+204|0;L=ka+232|0;M=ka+236|0;H=ka+264|0;I=ka+224|0;J=ka+200|0;ba=ka+156|0;ca=ka+136|0;da=ka+132|0;$=ka+124|0;aa=ka+120|0;_=ka+88|0;W=ka+276|0;Y=ka+228|0;Z=ka+424|0;wa=ka+196|0;xa=ka+192|0;ya=ka+152|0;ua=ka+148|0;va=ka+160|0;ta=ka+56|0;qa=ka+168|0;ra=ka+172|0;u=ka+425|0;Xa=ka+180|0;Ya=ka+184|0;Za=ka+188|0;Va=ka+324|0;Wa=ka+288|0;Ua=ka+48|0;Fa=ka+268|0;Sa=ka+220|0;Ta=ka+426|0;cb=ka+368|0;E=ka+376|0;ab=ka+384|0;za=ka+392|0;Aa=ka+400|0;X=ka+416|0;v=ka+240|0;ia=ka+244|0;ja=ka+420|0;t=ka+252|0;la=ka+256|0;ma=ka+260|0;F=ka+164|0;y=ka+40|0;z=ka+104|0;A=ka+72|0;sa=ka+427|0;D=ka+32|0;$a=ka;S=ka+292|0;ha=ka+296|0;Ma=ka+300|0;Oa=ka+304|0;_a=ka+308|0;La=ka+312|0;Pa=ka+316|0;Qa=ka+320|0;Na=ka+64|0;Ka=ka+284|0;Ja=ka+332|0;Ia=ka+272|0;Ha=ka+340|0;Ra=ka+344|0;Ga=ka+96|0;Ea=ka+352|0;Ba=ka+356|0;Da=ka+360|0;Ca=ka+128|0;na=ka+348|0;ga=ka+212|0;fa=ka+208|0;oa=ka+372|0;pa=ka+328|0;ea=ka+112|0;T=ka+364|0;U=ka+144|0;B=ka+388|0;V=ka+336|0;G=ka+404|0;R=ka+280|0;w=ka+216|0;x=ka+176|0;C=ka+80|0;c[cb>>2]=b;c[E>>2]=f;c[ab>>2]=j;c[za>>2]=k;c[Aa>>2]=l;c[X>>2]=m;c[v>>2]=n;c[ia>>2]=o;c[ja>>2]=p;c[t>>2]=q;c[la>>2]=r;c[ma>>2]=s;s=c[cb>>2]|0;a[c[ma>>2]>>0]=1;c[c[ja>>2]>>2]=0;c[F>>2]=c[Aa>>2]&c[za>>2];if((c[ab>>2]|0)==0)bb=20.0;else bb=+g[(c[ab>>2]|0)+(c[F>>2]<<2)>>2]+ +g[(c[ab>>2]|0)+(((c[Aa>>2]|0)+1&c[za>>2])<<2)>>2]+ +g[(c[ab>>2]|0)+(((c[Aa>>2]|0)+2&c[za>>2])<<2)>>2]+ +g[(c[ab>>2]|0)+(((c[Aa>>2]|0)+3&c[za>>2])<<2)>>2];h[y>>3]=bb;if((c[ab>>2]|0)==0)bb=15.0;else bb=+g[(c[ab>>2]|0)+(c[F>>2]<<2)>>2]+ +g[(c[ab>>2]|0)+(((c[Aa>>2]|0)+1&c[za>>2])<<2)>>2]+ +g[(c[ab>>2]|0)+(((c[Aa>>2]|0)+2&c[za>>2])<<2)>>2]+.3;h[z>>3]=bb;if((c[ab>>2]|0)==0)bb=10.0;else bb=+g[(c[ab>>2]|0)+(c[F>>2]<<2)>>2]+ +g[(c[ab>>2]|0)+(((c[Aa>>2]|0)+1&c[za>>2])<<2)>>2]+1.2;h[A>>3]=bb;a[sa>>0]=0;h[D>>3]=8.115;if((c[s+33619984>>2]|0)<4){c[$a+0>>2]=c[32086];c[$a+4>>2]=c[32087];c[$a+8>>2]=c[32088];c[$a+12>>2]=c[32089];c[$a+16>>2]=c[32090];c[$a+20>>2]=c[32091];c[$a+24>>2]=c[32092];c[$a+28>>2]=c[32093];h[D>>3]=+h[D>>3]+ +h[$a+(c[s+33619984>>2]<<3)>>3]}c[S>>2]=c[c[ia>>2]>>2];c[c[ia>>2]>>2]=0;c[ha>>2]=1;c[Ma>>2]=0;while(1){$a=c[Aa>>2]|0;if((c[Ma>>2]|0)>=16)break;c[Oa>>2]=$a;do switch(c[Ma>>2]|0){case 8:{c[Oa>>2]=(c[Oa>>2]|0)-((c[s+33619968>>2]|0)-3);break};case 9:{c[Oa>>2]=(c[Oa>>2]|0)-((c[s+33619968>>2]|0)+3);break};case 10:{c[Oa>>2]=(c[Oa>>2]|0)-((c[s+33619972>>2]|0)-1);break};case 11:{c[Oa>>2]=(c[Oa>>2]|0)-((c[s+33619972>>2]|0)+1);break};case 12:{c[Oa>>2]=(c[Oa>>2]|0)-((c[s+33619972>>2]|0)-2);break};case 13:{c[Oa>>2]=(c[Oa>>2]|0)-((c[s+33619972>>2]|0)+2);break};case 0:{c[Oa>>2]=(c[Oa>>2]|0)-(c[s+33619968>>2]|0);break};case 1:{c[Oa>>2]=(c[Oa>>2]|0)-(c[s+33619972>>2]|0);break};case 2:{c[Oa>>2]=(c[Oa>>2]|0)-(c[s+33619976>>2]|0);break};case 3:{c[Oa>>2]=(c[Oa>>2]|0)-(c[s+33619980>>2]|0);break};case 4:{c[Oa>>2]=(c[Oa>>2]|0)-((c[s+33619968>>2]|0)-1);break};case 5:{c[Oa>>2]=(c[Oa>>2]|0)-((c[s+33619968>>2]|0)+1);break};case 6:{c[Oa>>2]=(c[Oa>>2]|0)-((c[s+33619968>>2]|0)-2);break};case 7:{c[Oa>>2]=(c[Oa>>2]|0)-((c[s+33619968>>2]|0)+2);break};case 14:{c[Oa>>2]=(c[Oa>>2]|0)-((c[s+33619972>>2]|0)-3);break};case 15:{c[Oa>>2]=(c[Oa>>2]|0)-((c[s+33619972>>2]|0)+3);break};default:{}}while(0);do if((((!((c[Oa>>2]|0)>>>0>=(c[Aa>>2]|0)>>>0)?(c[_a>>2]=(c[Aa>>2]|0)-(c[Oa>>2]|0),!((c[_a>>2]|0)>>>0>(c[v>>2]|0)>>>0)):0)?(c[Oa>>2]=c[Oa>>2]&c[za>>2],!(((c[F>>2]|0)+(c[S>>2]|0)|0)>>>0>(c[za>>2]|0)>>>0)):0)?!(((c[Oa>>2]|0)+(c[S>>2]|0)|0)>>>0>(c[za>>2]|0)>>>0):0)?(d[(c[E>>2]|0)+((c[F>>2]|0)+(c[S>>2]|0))>>0]|0|0)==(d[(c[E>>2]|0)+((c[Oa>>2]|0)+(c[S>>2]|0))>>0]|0|0):0){c[La>>2]=Cd((c[E>>2]|0)+(c[Oa>>2]|0)|0,(c[E>>2]|0)+(c[F>>2]|0)|0,c[X>>2]|0)|0;cb=c[La>>2]|0;c[Pa>>2]=2;c[Qa>>2]=3;c[Fa>>2]=Pa;c[Sa>>2]=Qa;b=c[Fa>>2]|0;f=c[Sa>>2]|0;a[Ua+0>>0]=a[Ta+0>>0]|0;c[Va>>2]=b;c[Wa>>2]=f;f=c[Va>>2]|0;b=c[Wa>>2]|0;c[Xa>>2]=Ua;c[Ya>>2]=f;c[Za>>2]=b;if(!(cb>>>0>=(c[((c[c[Ya>>2]>>2]|0)<(c[c[Za>>2]>>2]|0)?c[Wa>>2]|0:c[Va>>2]|0)>>2]|0)>>>0)){if((c[La>>2]|0)!=2)break;if((c[Ma>>2]|0)>=2)break}h[Na>>3]=+Dd(+h[s+33619992>>3],+h[y>>3],+h[z>>3],+h[A>>3],c[La>>2]|0,c[Ma>>2]|0);if(+h[D>>3]<+h[Na>>3]){h[D>>3]=+h[Na>>3];c[S>>2]=c[La>>2];c[ha>>2]=c[_a>>2];c[c[ia>>2]>>2]=c[S>>2];c[c[ja>>2]>>2]=c[S>>2];c[c[t>>2]>>2]=c[ha>>2];h[c[la>>2]>>3]=+h[D>>3];a[sa>>0]=1;a[c[ma>>2]>>0]=(c[_a>>2]|0)>>>0>(c[v>>2]|0)>>>0&1}}while(0);c[Ma>>2]=(c[Ma>>2]|0)+1}cb=$a-64|0;c[Ka>>2]=cb;c[Ka>>2]=(c[Ka>>2]|0)<0?0:cb;h[A>>3]=+h[A>>3]-1.0;c[Ja>>2]=(c[Aa>>2]|0)-1;while(1){if((c[Ja>>2]|0)<=(c[Ka>>2]|0))break;c[Ia>>2]=c[Ja>>2];c[Ha>>2]=(c[Aa>>2]|0)-(c[Ia>>2]|0);if((c[Ha>>2]|0)>>>0>(c[v>>2]|0)>>>0)break;c[Ia>>2]=c[Ia>>2]&c[za>>2];if(((d[(c[E>>2]|0)+(c[F>>2]|0)>>0]|0|0)==(d[(c[E>>2]|0)+(c[Ia>>2]|0)>>0]|0|0)?(d[(c[E>>2]|0)+((c[F>>2]|0)+1)>>0]|0|0)==(d[(c[E>>2]|0)+((c[Ia>>2]|0)+1)>>0]|0|0):0)?(c[Ra>>2]=2,bb=+h[A>>3],h[Ga>>3]=bb- +(Ed(c[Ha>>2]|0)|0)*2.3,+h[D>>3]<+h[Ga>>3]):0){h[D>>3]=+h[Ga>>3];c[S>>2]=c[Ra>>2];c[ha>>2]=c[Ha>>2];c[c[ia>>2]>>2]=c[S>>2];c[c[ja>>2]>>2]=c[S>>2];c[c[t>>2]>>2]=c[ha>>2];a[sa>>0]=1}c[Ja>>2]=(c[Ja>>2]|0)+ -1}c[Ea>>2]=Ad((c[E>>2]|0)+(c[F>>2]|0)|0)|0;c[Ba>>2]=s+65536+(c[Ea>>2]<<10);if((e[s+(c[Ea>>2]<<1)>>1]|0)>>>0>256)Fa=(e[s+(c[Ea>>2]<<1)>>1]|0)-256|0;else Fa=0;c[Da>>2]=Fa;c[Ca>>2]=(e[s+(c[Ea>>2]<<1)>>1]|0)-1;while(1){if((c[Ca>>2]|0)<(c[Da>>2]|0))break;c[na>>2]=c[(c[Ba>>2]|0)+((c[Ca>>2]&255)<<2)>>2];if((c[na>>2]|0)>=0){c[ga>>2]=(c[Aa>>2]|0)-(c[na>>2]|0);if((c[ga>>2]|0)>>>0>(c[v>>2]|0)>>>0)break;c[na>>2]=c[na>>2]&c[za>>2];if((!(((c[F>>2]|0)+(c[S>>2]|0)|0)>>>0>(c[za>>2]|0)>>>0)?!(((c[na>>2]|0)+(c[S>>2]|0)|0)>>>0>(c[za>>2]|0)>>>0):0)?(d[(c[E>>2]|0)+((c[F>>2]|0)+(c[S>>2]|0))>>0]|0|0)==(d[(c[E>>2]|0)+((c[na>>2]|0)+(c[S>>2]|0))>>0]|0|0):0){c[fa>>2]=Cd((c[E>>2]|0)+(c[na>>2]|0)|0,(c[E>>2]|0)+(c[F>>2]|0)|0,c[X>>2]|0)|0;cb=c[fa>>2]|0;c[oa>>2]=2;c[pa>>2]=3;c[qa>>2]=oa;c[ra>>2]=pa;b=c[qa>>2]|0;f=c[ra>>2]|0;a[ta+0>>0]=a[u+0>>0]|0;c[ua>>2]=b;c[va>>2]=f;f=c[ua>>2]|0;b=c[va>>2]|0;c[wa>>2]=ta;c[xa>>2]=f;c[ya>>2]=b;if(cb>>>0>=(c[((c[c[xa>>2]>>2]|0)<(c[c[ya>>2]>>2]|0)?c[va>>2]|0:c[ua>>2]|0)>>2]|0)>>>0?(h[ea>>3]=+Fd(+h[s+33619992>>3],+h[y>>3],+h[z>>3],+h[A>>3],c[fa>>2]|0,c[ga>>2]|0),+h[D>>3]<+h[ea>>3]):0){h[D>>3]=+h[ea>>3];c[S>>2]=c[fa>>2];c[ha>>2]=c[ga>>2];c[c[ia>>2]>>2]=c[S>>2];c[c[ja>>2]>>2]=c[S>>2];c[c[t>>2]>>2]=c[ha>>2];h[c[la>>2]>>3]=+h[D>>3];a[sa>>0]=1;a[c[ma>>2]>>0]=0}}}c[Ca>>2]=(c[Ca>>2]|0)+ -1}if((c[s+3362e4>>2]|0)==0){cb=a[sa>>0]|0;cb=cb&1;i=ka;return cb|0}c[T>>2]=Bd((c[E>>2]|0)+(c[F>>2]|0)|0)|0;c[U>>2]=Gd(c[s+3362e4>>2]|0,c[T>>2]|0)|0;c[V>>2]=c[U>>2];c[W>>2]=V;c[Y>>2]=X;cb=c[W>>2]|0;b=c[Y>>2]|0;a[_+0>>0]=a[Z+0>>0]|0;c[$>>2]=cb;c[aa>>2]=b;b=c[aa>>2]|0;cb=c[$>>2]|0;c[ba>>2]=_;c[ca>>2]=b;c[da>>2]=cb;c[B>>2]=c[((c[c[ca>>2]>>2]|0)>>>0<(c[c[da>>2]>>2]|0)>>>0?c[aa>>2]|0:c[$>>2]|0)>>2];while(1){if(!((c[B>>2]|0)>=4?(c[B>>2]|0)>>>0>(c[S>>2]|0)>>>0:0))break;cb=(c[E>>2]|0)+(c[F>>2]|0)|0;b=c[B>>2]|0;c[H>>2]=G;c[I>>2]=cb;c[J>>2]=b;b=c[I>>2]|0;cb=c[J>>2]|0;c[K>>2]=c[H>>2];c[L>>2]=b;c[M>>2]=cb;cb=c[K>>2]|0;c[N>>2]=cb;c[O>>2]=c[N>>2];c[P>>2]=c[O>>2];c[Q>>2]=c[P>>2];Hn(cb,c[L>>2]|0,c[M>>2]|0);if(Hd(c[s+3362e4>>2]|0,G,R,w)|0?(c[x>>2]=(c[v>>2]|0)+(c[w>>2]|0)+1,h[C>>3]=+Fd(+h[s+33619992>>3],+h[y>>3],+h[z>>3],+h[A>>3],c[B>>2]|0,c[x>>2]|0),+h[D>>3]<+h[C>>3]):0){h[D>>3]=+h[C>>3];c[S>>2]=c[B>>2];c[ha>>2]=c[x>>2];c[c[ia>>2]>>2]=c[S>>2];c[c[ja>>2]>>2]=c[R>>2];c[c[t>>2]>>2]=c[ha>>2];h[c[la>>2]>>3]=+h[D>>3];a[sa>>0]=1;a[c[ma>>2]>>0]=1}Kn(G);c[B>>2]=(c[B>>2]|0)+ -1}cb=a[sa>>0]|0;cb=cb&1;i=ka;return cb|0}function nd(a,d,f){a=a|0;d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+32|0;m=g+16|0;l=g+12|0;k=g+8|0;h=g+4|0;j=g;c[m>>2]=a;c[l>>2]=d;c[k>>2]=f;a=c[m>>2]|0;c[h>>2]=Ad(c[l>>2]|0)|0;c[j>>2]=(e[a+(c[h>>2]<<1)>>1]|0)&255;c[a+65536+(c[h>>2]<<10)+(c[j>>2]<<2)>>2]=c[k>>2];a=a+(c[h>>2]<<1)|0;b[a>>1]=(b[a>>1]|0)+1<<16>>16;i=g;return}function od(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;zd(c[d>>2]|0);i=b;return}function pd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;b=c[f>>2]|0;if((c[b+33619968>>2]|0)==(c[e>>2]|0)){i=d;return}c[b+33619980>>2]=c[b+33619976>>2];c[b+33619976>>2]=c[b+33619972>>2];c[b+33619972>>2]=c[b+33619968>>2];c[b+33619968>>2]=c[e>>2];i=d;return}function qd(a){a=a|0;var b=0,d=0;d=i;i=i+16|0;b=d;c[b>>2]=a;i=d;return(c[(c[b>>2]|0)+3362e4>>2]|0)!=0|0}function rd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;f=i;i=i+160|0;n=f+72|0;g=f+32|0;l=f+108|0;j=f+132|0;s=f+8|0;y=f+76|0;z=f+28|0;w=f+20|0;x=f+24|0;v=f;h=f+96|0;u=f+104|0;E=f+136|0;D=f+140|0;C=f+144|0;B=f+52|0;A=f+56|0;t=f+60|0;F=f+64|0;m=f+68|0;p=f+16|0;q=f+4|0;r=f+84|0;G=f+80|0;H=f+88|0;I=f+92|0;J=f+36|0;K=f+100|0;k=f+40|0;o=f+44|0;e=f+112|0;c[K>>2]=b;c[k>>2]=d;b=c[K>>2]|0;c[J>>2]=b;c[I>>2]=(c[J>>2]|0)+8;c[H>>2]=c[I>>2];c[o>>2]=c[H>>2];c[G>>2]=b;d=c[G>>2]|0;d=(((c[d+4>>2]|0)-(c[d>>2]|0)|0)/32|0)+1|0;c[F>>2]=b;c[m>>2]=d;d=c[F>>2]|0;c[p>>2]=xd(d)|0;if((c[m>>2]|0)>>>0>(c[p>>2]|0)>>>0)Zt(d);c[A>>2]=d;c[B>>2]=c[A>>2];K=c[B>>2]|0;c[C>>2]=K;c[D>>2]=(c[C>>2]|0)+8;c[E>>2]=c[D>>2];c[q>>2]=((c[c[E>>2]>>2]|0)-(c[K>>2]|0)|0)/32|0;if((c[q>>2]|0)>>>0>=(((c[p>>2]|0)>>>0)/2|0)>>>0)c[t>>2]=c[p>>2];else{c[r>>2]=c[q>>2]<<1;c[h>>2]=r;c[u>>2]=m;K=c[h>>2]|0;J=c[u>>2]|0;a[v+0>>0]=a[f+148>>0]|0;c[w>>2]=K;c[x>>2]=J;J=c[w>>2]|0;K=c[x>>2]|0;c[f+12>>2]=v;c[y>>2]=J;c[z>>2]=K;c[t>>2]=c[((c[c[y>>2]>>2]|0)>>>0<(c[c[z>>2]>>2]|0)>>>0?c[x>>2]|0:c[w>>2]|0)>>2]}K=c[t>>2]|0;c[s>>2]=b;J=c[s>>2]|0;sd(e,K,((c[J+4>>2]|0)-(c[J>>2]|0)|0)/32|0,c[o>>2]|0);J=c[o>>2]|0;c[j>>2]=c[e+8>>2];K=c[j>>2]|0;c[l>>2]=c[k>>2];h=c[l>>2]|0;c[f+48>>2]=J;c[n>>2]=K;c[g>>2]=h;h=c[n>>2]|0;if((h|0)==0){K=e+8|0;J=c[K>>2]|0;J=J+32|0;c[K>>2]=J;td(b,e);ud(e);i=f;return}K=c[g>>2]|0;c[h+0>>2]=c[K+0>>2];c[h+4>>2]=c[K+4>>2];c[h+8>>2]=c[K+8>>2];c[h+12>>2]=c[K+12>>2];c[h+16>>2]=c[K+16>>2];c[h+20>>2]=c[K+20>>2];c[h+24>>2]=c[K+24>>2];c[h+28>>2]=c[K+28>>2];K=e+8|0;J=c[K>>2]|0;J=J+32|0;c[K>>2]=J;td(b,e);ud(e);i=f;return}function sd(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;k=f+12|0;j=f+8|0;h=f+4|0;g=f;c[k>>2]=a;c[j>>2]=b;c[h>>2]=d;c[g>>2]=e;yd(c[k>>2]|0,c[j>>2]|0,c[h>>2]|0,c[g>>2]|0);i=f;return}function td(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=i;i=i+144|0;F=d+108|0;H=d+8|0;G=d+56|0;E=d+64|0;C=d+16|0;z=d+20|0;D=d+24|0;B=d+28|0;y=d+32|0;A=d+36|0;w=d+40|0;t=d+44|0;x=d+104|0;v=d+112|0;s=d+120|0;u=d+128|0;m=d+136|0;q=d+68|0;r=d+72|0;n=d+76|0;o=d+80|0;p=d+84|0;k=d+88|0;g=d+92|0;l=d+12|0;j=d+4|0;f=d;h=d+96|0;K=d+100|0;J=d+52|0;I=d+116|0;L=d+60|0;e=d+124|0;c[L>>2]=a;c[e>>2]=b;a=c[L>>2]|0;c[I>>2]=a;c[J>>2]=(c[I>>2]|0)+8;c[K>>2]=c[J>>2];J=c[a>>2]|0;I=c[a+4>>2]|0;b=(c[e>>2]|0)+4|0;c[d+132>>2]=c[K>>2];c[F>>2]=J;c[H>>2]=I;c[G>>2]=b;c[E>>2]=((c[H>>2]|0)-(c[F>>2]|0)|0)/32|0;b=c[G>>2]|0;c[b>>2]=(c[b>>2]|0)+(0-(c[E>>2]|0)<<5);qz(c[c[G>>2]>>2]|0,c[F>>2]|0,c[E>>2]<<5|0)|0;b=(c[e>>2]|0)+4|0;c[B>>2]=a;c[y>>2]=b;c[D>>2]=c[B>>2];c[A>>2]=c[c[D>>2]>>2];c[C>>2]=c[y>>2];c[c[B>>2]>>2]=c[c[C>>2]>>2];c[z>>2]=A;c[c[y>>2]>>2]=c[c[z>>2]>>2];b=(c[e>>2]|0)+8|0;c[v>>2]=a+4;c[s>>2]=b;c[x>>2]=c[v>>2];c[u>>2]=c[c[x>>2]>>2];c[w>>2]=c[s>>2];c[c[v>>2]>>2]=c[c[w>>2]>>2];c[t>>2]=u;c[c[s>>2]>>2]=c[c[t>>2]>>2];c[r>>2]=a;c[q>>2]=(c[r>>2]|0)+8;c[m>>2]=c[q>>2];m=c[m>>2]|0;c[p>>2]=c[e>>2];c[o>>2]=(c[p>>2]|0)+12;c[n>>2]=c[o>>2];b=c[n>>2]|0;c[j>>2]=m;c[f>>2]=b;c[l>>2]=c[j>>2];c[h>>2]=c[c[l>>2]>>2];c[k>>2]=c[f>>2];c[c[j>>2]>>2]=c[c[k>>2]>>2];c[g>>2]=h;c[c[f>>2]>>2]=c[c[g>>2]>>2];c[c[e>>2]>>2]=c[(c[e>>2]|0)+4>>2];c[d+48>>2]=a;i=d;return}function ud(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;wd(c[d>>2]|0);i=b;return}function vd(a){a=a|0;bb(a|0)|0;Px()}function wd(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;r=i;i=i+128|0;l=r+32|0;k=r+52|0;j=r+12|0;h=r+104|0;g=r+16|0;f=r+20|0;q=r+24|0;p=r+60|0;d=r+28|0;e=r+36|0;m=r+40|0;n=r+44|0;o=r+48|0;w=r+108|0;B=r+112|0;C=r+116|0;A=r;x=r+68|0;y=r+72|0;z=r+120|0;v=r+80|0;u=r+88|0;t=r+92|0;E=r+96|0;s=r+100|0;G=r+8|0;F=r+64|0;I=r+84|0;H=r+121|0;J=r+56|0;D=r+76|0;c[D>>2]=b;D=c[D>>2]|0;c[J>>2]=D;J=c[J>>2]|0;b=c[J+4>>2]|0;c[F>>2]=J;c[I>>2]=b;F=c[F>>2]|0;b=c[I>>2]|0;a[G+0>>0]=a[H+0>>0]|0;c[E>>2]=F;c[s>>2]=b;b=c[E>>2]|0;while(1){if((c[s>>2]|0)==(c[b+8>>2]|0))break;c[t>>2]=b;c[u>>2]=(c[t>>2]|0)+12;c[v>>2]=c[u>>2];J=c[(c[v>>2]|0)+4>>2]|0;H=b+8|0;I=(c[H>>2]|0)+ -32|0;c[H>>2]=I;c[w>>2]=I;I=c[w>>2]|0;c[x>>2]=J;c[y>>2]=I;I=c[x>>2]|0;J=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=I;c[C>>2]=J}if((c[D>>2]|0)==0){i=r;return}c[q>>2]=D;c[f>>2]=(c[q>>2]|0)+12;c[g>>2]=c[f>>2];H=c[(c[g>>2]|0)+4>>2]|0;J=c[D>>2]|0;c[h>>2]=D;I=c[h>>2]|0;c[j>>2]=I;c[k>>2]=(c[j>>2]|0)+12;c[l>>2]=c[k>>2];I=((c[c[l>>2]>>2]|0)-(c[I>>2]|0)|0)/32|0;c[m>>2]=H;c[n>>2]=J;c[o>>2]=I;I=c[n>>2]|0;J=c[o>>2]|0;c[p>>2]=c[m>>2];c[d>>2]=I;c[e>>2]=J;Ix(c[d>>2]|0);i=r;return}function xd(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+80|0;q=h+44|0;r=h+12|0;s=h+8|0;u=h+16|0;t=h+76|0;k=h+20|0;g=h+24|0;f=h+28|0;d=h+68|0;e=h+36|0;l=h;n=h+48|0;j=h+52|0;m=h+77|0;v=h+60|0;w=h+64|0;x=h+40|0;y=h+32|0;p=h+56|0;o=h+72|0;c[y>>2]=b;c[x>>2]=c[y>>2];c[w>>2]=(c[x>>2]|0)+8;c[v>>2]=c[w>>2];c[u>>2]=c[v>>2];b=c[u>>2]|0;a[s+0>>0]=a[t+0>>0]|0;c[r>>2]=b;c[q>>2]=c[r>>2];c[p>>2]=134217727;c[o>>2]=4294967295/2|0;c[n>>2]=p;c[j>>2]=o;b=c[n>>2]|0;j=c[j>>2]|0;a[l+0>>0]=a[m+0>>0]|0;c[d>>2]=b;c[e>>2]=j;j=c[e>>2]|0;b=c[d>>2]|0;c[k>>2]=l;c[g>>2]=j;c[f>>2]=b;i=h;return c[((c[c[g>>2]>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0?c[e>>2]|0:c[d>>2]|0)>>2]|0}function yd(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;q=i;i=i+176|0;C=q+80|0;x=q+76|0;z=q+4|0;B=q+148|0;A=q+156|0;y=q+72|0;E=q+20|0;G=q+24|0;F=q+28|0;D=q+32|0;H=q+36|0;J=q+40|0;I=q+44|0;p=q+48|0;g=q+52|0;r=q+56|0;m=q+144|0;n=q+160|0;f=q+164|0;u=q+84|0;v=q+92|0;w=q+96|0;t=q+100|0;o=q+108|0;h=q+112|0;j=q+116|0;N=q+120|0;O=q+124|0;P=q+60|0;M=q+16|0;Q=q+64|0;k=q+132|0;l=q+68|0;K=q+140|0;L=q;s=q+8|0;c[Q>>2]=a;c[k>>2]=b;c[l>>2]=d;c[K>>2]=e;e=c[Q>>2]|0;c[O>>2]=M;c[P>>2]=-1;b=c[P>>2]|0;c[N>>2]=c[O>>2];c[q+12>>2]=b;c[c[N>>2]>>2]=0;c[L>>2]=c[M>>2];c[q+128>>2]=L;b=c[K>>2]|0;c[H>>2]=e+12;c[J>>2]=0;c[I>>2]=b;b=c[J>>2]|0;d=c[I>>2]|0;c[G>>2]=c[H>>2];c[F>>2]=b;c[D>>2]=d;d=c[G>>2]|0;c[E>>2]=F;b=c[c[E>>2]>>2]|0;c[C>>2]=c[D>>2];a=c[C>>2]|0;c[B>>2]=d;c[A>>2]=b;c[y>>2]=a;a=c[B>>2]|0;c[z>>2]=A;c[a>>2]=c[c[z>>2]>>2];c[x>>2]=c[y>>2];c[a+4>>2]=c[x>>2];if((c[k>>2]|0)!=0){c[r>>2]=e;c[g>>2]=(c[r>>2]|0)+12;c[p>>2]=c[g>>2];Q=c[k>>2]|0;c[n>>2]=c[(c[p>>2]|0)+4>>2];c[f>>2]=Q;Q=c[f>>2]|0;c[q+136>>2]=c[n>>2];c[m>>2]=Q;c[q+152>>2]=0;Q=Gx(c[m>>2]<<5)|0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P<<5)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P<<5)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}else{c[v>>2]=t;c[w>>2]=-1;Q=c[w>>2]|0;c[u>>2]=c[v>>2];c[q+88>>2]=Q;c[c[u>>2]>>2]=0;c[s>>2]=c[t>>2];c[q+104>>2]=s;Q=0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P<<5)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P<<5)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}}function zd(a){a=a|0;var d=0,e=0;d=i;i=i+16|0;e=d;c[e>>2]=a;a=c[e>>2]|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[a+16>>2]=17;b[a+20>>1]=16;b[a+22>>1]=0;c[a+24>>2]=0;c[a+28>>2]=0;i=d;return}function Ad(a){a=a|0;var b=0,d=0,e=0;d=i;i=i+16|0;e=d+4|0;b=d;c[e>>2]=a;c[b>>2]=da((Bd(c[e>>2]|0)|0)&16777215,506832829)|0;i=d;return(c[b>>2]|0)>>>17|0}function Bd(b){b=b|0;var d=0,e=0,f=0;e=i;i=i+16|0;f=e+4|0;d=e;c[f>>2]=b;b=c[f>>2]|0;a[d+0>>0]=a[b+0>>0]|0;a[d+1>>0]=a[b+1>>0]|0;a[d+2>>0]=a[b+2>>0]|0;a[d+3>>0]=a[b+3>>0]|0;i=e;return c[d>>2]|0}function Cd(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+32|0;h=f+20|0;l=f+16|0;m=f+12|0;g=f+8|0;k=f+4|0;j=f;c[h>>2]=a;c[l>>2]=b;c[m>>2]=e;c[g>>2]=0;c[k>>2]=(c[l>>2]|0)+(c[m>>2]|0);c[j>>2]=c[l>>2];while(1){if(!((c[j>>2]|0)>>>0<=((c[k>>2]|0)+ -4|0)>>>0))break;m=Bd(c[j>>2]|0)|0;if((m|0)!=(Bd((c[h>>2]|0)+(c[g>>2]|0)|0)|0))break;c[j>>2]=(c[j>>2]|0)+4;c[g>>2]=(c[g>>2]|0)+4}while(1){if(!((c[j>>2]|0)>>>0<(c[k>>2]|0)>>>0)){e=8;break}if((d[(c[h>>2]|0)+(c[g>>2]|0)>>0]|0|0)!=(d[c[j>>2]>>0]|0|0)){e=8;break}c[j>>2]=(c[j>>2]|0)+1;c[g>>2]=(c[g>>2]|0)+1}if((e|0)==8){i=f;return c[g>>2]|0}return 0}function Dd(a,b,d,e,f,g){a=+a;b=+b;d=+d;e=+e;f=f|0;g=g|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;k=i;i=i+48|0;q=k;o=k+16|0;n=k+8|0;m=k+32|0;j=k+40|0;l=k+44|0;p=k+24|0;h[q>>3]=a;h[o>>3]=b;h[n>>3]=d;h[m>>3]=e;c[j>>2]=f;c[l>>2]=g;h[p>>3]=0.0;g=c[j>>2]|0;if((g|0)==2)h[p>>3]=+h[m>>3];else if((g|0)==3)h[p>>3]=+h[n>>3];else h[p>>3]=+h[o>>3]+ +((c[j>>2]|0)-4|0)*+h[q>>3];h[p>>3]=+h[p>>3]- +h[128376+(c[l>>2]<<3)>>3];i=k;return+(+h[p>>3])}function Ed(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;if((c[d>>2]|0)==0){d=-1;i=b;return d|0}d=31^(pz(c[d>>2]|0)|0);i=b;return d|0}function Fd(a,b,d,e,f,g){a=+a;b=+b;d=+d;e=+e;f=f|0;g=g|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;k=i;i=i+48|0;q=k;o=k+16|0;m=k+8|0;n=k+32|0;j=k+40|0;l=k+44|0;p=k+24|0;h[q>>3]=a;h[o>>3]=b;h[m>>3]=d;h[n>>3]=e;c[j>>2]=f;c[l>>2]=g;h[p>>3]=0.0;g=c[j>>2]|0;if((g|0)==3)h[p>>3]=+h[m>>3];else if((g|0)==2)h[p>>3]=+h[n>>3];else h[p>>3]=+h[o>>3]+ +((c[j>>2]|0)-4|0)*+h[q>>3];a=+(Ed(c[l>>2]|0)|0)*1.2;h[p>>3]=+h[p>>3]-a;i=k;return+(+h[p>>3])}function Gd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;j=i;i=i+176|0;p=j+88|0;o=j+84|0;q=j+128|0;r=j+124|0;g=j+160|0;h=j+36|0;e=j+32|0;k=j+116|0;l=j+72|0;m=j+40|0;u=j+48|0;t=j;w=j+56|0;v=j+8|0;C=j+64|0;y=j+100|0;z=j+140|0;A=j+148|0;B=j+156|0;F=j+164|0;G=j+168|0;H=j+92|0;I=j+96|0;E=j+52|0;J=j+104|0;D=j+108|0;K=j+112|0;x=j+60|0;M=j+120|0;L=j+16|0;O=j+132|0;N=j+24|0;R=j+44|0;Q=j+76|0;P=j+136|0;f=j+28|0;T=j+68|0;S=j+144|0;n=j+80|0;s=j+152|0;c[T>>2]=b;c[S>>2]=d;b=c[T>>2]|0;c[R>>2]=b+20;c[Q>>2]=S;Ld(P,c[R>>2]|0,c[Q>>2]|0);a[N+0>>0]=a[P+0>>0]|0;a[N+1>>0]=a[P+1>>0]|0;a[N+2>>0]=a[P+2>>0]|0;a[N+3>>0]=a[P+3>>0]|0;c[O>>2]=n;d=c[O>>2]|0;a[L+0>>0]=a[N+0>>0]|0;a[L+1>>0]=a[N+1>>0]|0;a[L+2>>0]=a[N+2>>0]|0;a[L+3>>0]=a[N+3>>0]|0;c[M>>2]=d;d=c[M>>2]|0;c[d+0>>2]=c[L+0>>2];c[K>>2]=b+20;c[J>>2]=c[K>>2];c[H>>2]=E;c[I>>2]=-1;b=c[I>>2]|0;c[F>>2]=c[H>>2];c[G>>2]=b;c[c[F>>2]>>2]=0;c[D>>2]=c[E>>2];c[C>>2]=D;c[A>>2]=x;c[B>>2]=0;b=c[B>>2]|0;c[y>>2]=c[A>>2];c[z>>2]=b;c[c[y>>2]>>2]=c[z>>2];a[v+0>>0]=a[x+0>>0]|0;a[v+1>>0]=a[x+1>>0]|0;a[v+2>>0]=a[x+2>>0]|0;a[v+3>>0]=a[x+3>>0]|0;c[w>>2]=s;b=c[w>>2]|0;a[t+0>>0]=a[v+0>>0]|0;a[t+1>>0]=a[v+1>>0]|0;a[t+2>>0]=a[v+2>>0]|0;a[t+3>>0]=a[v+3>>0]|0;c[u>>2]=b;b=c[u>>2]|0;c[b+0>>2]=c[t+0>>2];c[q>>2]=n;c[r>>2]=s;b=c[r>>2]|0;c[p>>2]=c[q>>2];c[o>>2]=b;if((c[c[p>>2]>>2]|0)==(c[c[o>>2]>>2]|0)){c[f>>2]=0;T=c[f>>2]|0;i=j;return T|0}else{c[m>>2]=n;c[l>>2]=c[m>>2];c[k>>2]=(c[c[l>>2]>>2]|0)+8;c[e>>2]=c[k>>2];c[h>>2]=c[e>>2];c[g>>2]=c[h>>2];c[f>>2]=c[(c[g>>2]|0)+4>>2];T=c[f>>2]|0;i=j;return T|0}return 0}function Hd(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;o=i;i=i+192|0;u=o+92|0;t=o+160|0;v=o+36|0;w=o+84|0;m=o+88|0;n=o+124|0;g=o+32|0;p=o+116|0;q=o+72|0;r=o+40|0;z=o+48|0;y=o;B=o+56|0;A=o+8|0;H=o+64|0;D=o+100|0;E=o+140|0;F=o+148|0;G=o+156|0;K=o+164|0;L=o+172|0;M=o+176|0;N=o+96|0;J=o+52|0;O=o+104|0;I=o+108|0;P=o+112|0;C=o+60|0;R=o+120|0;Q=o+16|0;T=o+128|0;S=o+24|0;W=o+44|0;V=o+136|0;U=o+76|0;h=o+180|0;Y=o+68|0;X=o+144|0;l=o+80|0;j=o+152|0;s=o+132|0;x=o+168|0;k=o+28|0;c[Y>>2]=b;c[X>>2]=d;c[l>>2]=e;c[j>>2]=f;b=c[Y>>2]|0;d=c[X>>2]|0;c[W>>2]=b;c[V>>2]=d;Id(U,c[W>>2]|0,c[V>>2]|0);a[S+0>>0]=a[U+0>>0]|0;a[S+1>>0]=a[U+1>>0]|0;a[S+2>>0]=a[U+2>>0]|0;a[S+3>>0]=a[U+3>>0]|0;c[T>>2]=s;d=c[T>>2]|0;a[Q+0>>0]=a[S+0>>0]|0;a[Q+1>>0]=a[S+1>>0]|0;a[Q+2>>0]=a[S+2>>0]|0;a[Q+3>>0]=a[S+3>>0]|0;c[R>>2]=d;d=c[R>>2]|0;c[d+0>>2]=c[Q+0>>2];c[P>>2]=b;c[O>>2]=c[P>>2];c[M>>2]=J;c[N>>2]=-1;b=c[N>>2]|0;c[K>>2]=c[M>>2];c[L>>2]=b;c[c[K>>2]>>2]=0;c[I>>2]=c[J>>2];c[H>>2]=I;c[F>>2]=C;c[G>>2]=0;b=c[G>>2]|0;c[D>>2]=c[F>>2];c[E>>2]=b;c[c[D>>2]>>2]=c[E>>2];a[A+0>>0]=a[C+0>>0]|0;a[A+1>>0]=a[C+1>>0]|0;a[A+2>>0]=a[C+2>>0]|0;a[A+3>>0]=a[C+3>>0]|0;c[B>>2]=x;b=c[B>>2]|0;a[y+0>>0]=a[A+0>>0]|0;a[y+1>>0]=a[A+1>>0]|0;a[y+2>>0]=a[A+2>>0]|0;a[y+3>>0]=a[A+3>>0]|0;c[z>>2]=b;b=c[z>>2]|0;c[b+0>>2]=c[y+0>>2];c[v>>2]=s;c[w>>2]=x;b=c[w>>2]|0;c[u>>2]=c[v>>2];c[t>>2]=b;if((c[c[u>>2]>>2]|0)==(c[c[t>>2]>>2]|0)){a[h>>0]=0;Y=a[h>>0]|0;Y=Y&1;i=o;return Y|0}else{c[r>>2]=s;c[q>>2]=c[r>>2];c[p>>2]=(c[c[q>>2]>>2]|0)+8;c[g>>2]=c[p>>2];c[n>>2]=c[g>>2];c[m>>2]=c[n>>2];c[k>>2]=c[(c[m>>2]|0)+12>>2];c[c[l>>2]>>2]=c[k>>2]&63;c[c[j>>2]>>2]=c[k>>2]>>6;a[h>>0]=1;Y=a[h>>0]|0;Y=Y&1;i=o;return Y|0}return 0}function Id(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0;u=i;i=i+512|0;ab=u+224|0;$a=u+476|0;_a=u+468|0;fb=u+460|0;eb=u+208|0;ib=u+212|0;cb=u+216|0;db=u+220|0;bb=u+452|0;hb=u+20|0;Xa=u+24|0;Ya=u+28|0;Va=u+32|0;Wa=u+36|0;Ua=u+40|0;ta=u+428|0;Sa=u+44|0;Ta=u+48|0;Ea=u+52|0;Da=u+56|0;Ca=u+60|0;kb=u+64|0;jb=u+68|0;mb=u+72|0;nb=u+76|0;ob=u+80|0;pb=u+84|0;qb=u+88|0;rb=u+92|0;sb=u+96|0;ub=u+100|0;tb=u+424|0;Q=u+104|0;Z=u+108|0;Y=u+112|0;X=u+116|0;ca=u+120|0;ba=u+124|0;aa=u+128|0;$=u+132|0;_=u+136|0;ha=u+140|0;ga=u+144|0;fa=u+148|0;ea=u+152|0;da=u+156|0;D=u+160|0;K=u+164|0;J=u+168|0;I=u+172|0;P=u+176|0;O=u+180|0;N=u+184|0;M=u+188|0;L=u+192|0;W=u+196|0;V=u+448|0;U=u+456|0;T=u+464|0;S=u+472|0;H=u+480|0;G=u+488|0;F=u+492|0;oa=u+420|0;na=u+228|0;ma=u+232|0;ra=u+236|0;qa=u+240|0;pa=u+244|0;va=u+248|0;ua=u+252|0;g=u+256|0;sa=u+260|0;A=u+264|0;B=u+268|0;C=u+272|0;ya=u+276|0;xa=u+280|0;wa=u+284|0;Ba=u+288|0;Aa=u+292|0;za=u+296|0;Pa=u+300|0;Oa=u+304|0;Na=u+308|0;Ma=u+312|0;w=u+496|0;E=u+320|0;R=u+324|0;y=u+328|0;z=u+332|0;x=u+336|0;Ja=u+340|0;Ka=u+344|0;La=u+348|0;Ga=u+352|0;Ha=u+356|0;Ia=u+360|0;ka=u+364|0;la=u+368|0;ia=u+372|0;ja=u+376|0;p=u+380|0;s=u+384|0;t=u+388|0;q=u+392|0;r=u+396|0;m=u+400|0;n=u+404|0;k=u+408|0;l=u+412|0;j=u+416|0;h=u+16|0;o=u+12|0;vb=u+440|0;wb=u+432|0;xb=u;yb=u+8|0;Fa=u+444|0;lb=u+200|0;Ra=u+436|0;Qa=u+4|0;v=u+204|0;gb=u+484|0;Za=u+316|0;c[yb>>2]=e;c[Fa>>2]=f;f=c[yb>>2]|0;c[xb>>2]=f;c[wb>>2]=(c[xb>>2]|0)+12;c[vb>>2]=c[wb>>2];e=c[Fa>>2]|0;c[ub>>2]=c[vb>>2];c[tb>>2]=e;c[lb>>2]=Jd(c[ub>>2]|0,c[tb>>2]|0)|0;c[sb>>2]=f;c[rb>>2]=c[sb>>2];c[qb>>2]=c[rb>>2];c[pb>>2]=c[qb>>2];c[ob>>2]=(c[pb>>2]|0)+4;c[nb>>2]=c[ob>>2];c[mb>>2]=c[nb>>2];c[Ra>>2]=c[c[mb>>2]>>2];a:do if((c[Ra>>2]|0)!=0){yb=c[Ra>>2]|0;c[kb>>2]=c[lb>>2];c[jb>>2]=yb;lb=c[kb>>2]|0;kb=c[jb>>2]|0;if((c[jb>>2]&(c[jb>>2]|0)-1|0)!=0)jb=(lb>>>0)%(kb>>>0)|0;else jb=lb&kb-1;c[Qa>>2]=jb;yb=c[Qa>>2]|0;c[_a>>2]=f;c[fb>>2]=yb;yb=c[fb>>2]|0;c[$a>>2]=c[_a>>2];c[ab>>2]=c[$a>>2];c[v>>2]=c[(c[c[ab>>2]>>2]|0)+(yb<<2)>>2];yb=c[v>>2]|0;c[cb>>2]=bb;c[db>>2]=-1;xb=c[db>>2]|0;c[eb>>2]=c[cb>>2];c[ib>>2]=xb;c[c[eb>>2]>>2]=0;c[gb>>2]=c[bb>>2];c[hb>>2]=gb;if((yb|0)!=0){c[v>>2]=c[c[v>>2]>>2];while(1){yb=c[v>>2]|0;c[Va>>2]=Ua;c[Wa>>2]=-1;xb=c[Wa>>2]|0;c[Xa>>2]=c[Va>>2];c[Ya>>2]=xb;c[c[Xa>>2]>>2]=0;c[Za>>2]=c[Ua>>2];c[ta>>2]=Za;if((yb|0)==0)break a;$a=c[Ra>>2]|0;c[Sa>>2]=c[(c[v>>2]|0)+4>>2];c[Ta>>2]=$a;$a=c[Sa>>2]|0;_a=c[Ta>>2]|0;if((c[Ta>>2]&(c[Ta>>2]|0)-1|0)!=0)_a=($a>>>0)%(_a>>>0)|0;else _a=$a&_a-1;if((_a|0)!=(c[Qa>>2]|0))break a;c[Ca>>2]=f;c[Da>>2]=(c[Ca>>2]|0)+16;c[Ea>>2]=c[Da>>2];_a=(c[v>>2]|0)+8|0;yb=c[Fa>>2]|0;c[Ga>>2]=c[Ea>>2];c[Ha>>2]=_a;c[Ia>>2]=yb;yb=c[Ha>>2]|0;_a=c[Ia>>2]|0;c[Ja>>2]=c[Ga>>2];c[Ka>>2]=yb;c[La>>2]=_a;_a=c[La>>2]|0;c[E>>2]=c[Ka>>2];c[R>>2]=_a;c[Ma>>2]=c[E>>2];_a=c[Ma>>2]|0;c[Na>>2]=_a;c[Oa>>2]=c[Na>>2];c[Pa>>2]=c[Oa>>2];if((d[c[Pa>>2]>>0]&1|0)!=0){c[wa>>2]=_a;c[xa>>2]=c[wa>>2];c[ya>>2]=c[xa>>2];_a=c[(c[ya>>2]|0)+4>>2]|0}else{c[za>>2]=_a;c[Aa>>2]=c[za>>2];c[Ba>>2]=c[Aa>>2];_a=d[c[Ba>>2]>>0]>>1}c[y>>2]=_a;_a=c[y>>2]|0;c[sa>>2]=c[R>>2];$a=c[sa>>2]|0;c[g>>2]=$a;c[ua>>2]=c[g>>2];c[va>>2]=c[ua>>2];if((d[c[va>>2]>>0]&1|0)!=0){c[ma>>2]=$a;c[na>>2]=c[ma>>2];c[oa>>2]=c[na>>2];$a=c[(c[oa>>2]|0)+4>>2]|0}else{c[pa>>2]=$a;c[qa>>2]=c[pa>>2];c[ra>>2]=c[qa>>2];$a=d[c[ra>>2]>>0]>>1}do if((_a|0)==($a|0)){c[da>>2]=c[E>>2];c[ea>>2]=c[da>>2];_a=c[ea>>2]|0;c[fa>>2]=_a;c[ga>>2]=c[fa>>2];c[ha>>2]=c[ga>>2];if((d[c[ha>>2]>>0]&1|0)!=0){c[X>>2]=_a;c[Y>>2]=c[X>>2];c[Z>>2]=c[Y>>2];_a=c[(c[Z>>2]|0)+8>>2]|0}else{c[_>>2]=_a;c[$>>2]=c[_>>2];c[aa>>2]=c[$>>2];c[ba>>2]=(c[aa>>2]|0)+1;c[ca>>2]=c[ba>>2];_a=c[ca>>2]|0}c[Q>>2]=_a;c[z>>2]=c[Q>>2];c[S>>2]=c[R>>2];c[T>>2]=c[S>>2];_a=c[T>>2]|0;c[U>>2]=_a;c[V>>2]=c[U>>2];c[W>>2]=c[V>>2];if((d[c[W>>2]>>0]&1|0)!=0){c[I>>2]=_a;c[J>>2]=c[I>>2];c[K>>2]=c[J>>2];_a=c[(c[K>>2]|0)+8>>2]|0}else{c[L>>2]=_a;c[M>>2]=c[L>>2];c[N>>2]=c[M>>2];c[O>>2]=(c[N>>2]|0)+1;c[P>>2]=c[O>>2];_a=c[P>>2]|0}c[D>>2]=_a;c[x>>2]=c[D>>2];c[F>>2]=c[E>>2];c[G>>2]=c[F>>2];c[H>>2]=c[G>>2];if((d[c[H>>2]>>0]&1|0)!=0){xb=c[x>>2]|0;yb=c[y>>2]|0;c[A>>2]=c[z>>2];c[B>>2]=xb;c[C>>2]=yb;a[w>>0]=(iz(c[A>>2]|0,c[B>>2]|0,c[C>>2]|0)|0)==0&1;break}while(1){if((c[y>>2]|0)==0){_a=32;break}if((a[c[z>>2]>>0]|0)!=(a[c[x>>2]>>0]|0)){_a=30;break}c[y>>2]=(c[y>>2]|0)+ -1;c[z>>2]=(c[z>>2]|0)+1;c[x>>2]=(c[x>>2]|0)+1}if((_a|0)==30){a[w>>0]=0;break}else if((_a|0)==32){a[w>>0]=1;break}}else a[w>>0]=0;while(0);_a=c[v>>2]|0;if(a[w>>0]&1)break;c[v>>2]=c[_a>>2]}c[ia>>2]=b;c[ja>>2]=_a;yb=c[ja>>2]|0;c[ka>>2]=c[ia>>2];c[la>>2]=yb;c[c[ka>>2]>>2]=c[la>>2];i=u;return}}while(0);c[h>>2]=f;c[k>>2]=j;c[l>>2]=-1;yb=c[l>>2]|0;c[m>>2]=c[k>>2];c[n>>2]=yb;c[c[m>>2]>>2]=0;c[o>>2]=c[j>>2];c[p>>2]=o;c[q>>2]=b;c[r>>2]=0;yb=c[r>>2]|0;c[s>>2]=c[q>>2];c[t>>2]=yb;c[c[s>>2]>>2]=c[t>>2];i=u;return}function Jd(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;k=i;i=i+176|0;n=k+128|0;o=k+148|0;f=k;e=k+56|0;m=k+60|0;l=k+116|0;p=k+12|0;q=k+112|0;r=k+16|0;s=k+20|0;u=k+24|0;x=k+28|0;w=k+32|0;B=k+36|0;C=k+40|0;y=k+108|0;A=k+164|0;z=k+136|0;v=k+144|0;D=k+152|0;E=k+160|0;F=k+64|0;G=k+68|0;H=k+72|0;g=k+76|0;h=k+80|0;j=k+168|0;I=k+88|0;J=k+92|0;K=k+96|0;Q=k+100|0;M=k+104|0;N=k+4|0;O=k+124|0;P=k+44|0;L=k+8|0;R=k+48|0;S=k+132|0;T=k+52|0;U=k+140|0;V=k+120|0;t=k+84|0;c[k+156>>2]=a;c[t>>2]=b;c[V>>2]=c[t>>2];c[U>>2]=c[V>>2];b=c[U>>2]|0;c[T>>2]=b;c[S>>2]=c[T>>2];c[R>>2]=c[S>>2];if(((d[c[R>>2]>>0]|0)&1|0)!=0){c[Q>>2]=b;c[K>>2]=c[Q>>2];c[J>>2]=c[K>>2];J=c[(c[J>>2]|0)+8>>2]|0}else{c[L>>2]=b;c[P>>2]=c[L>>2];c[O>>2]=c[P>>2];c[N>>2]=(c[O>>2]|0)+1;c[M>>2]=c[N>>2];J=c[M>>2]|0}c[I>>2]=J;I=c[I>>2]|0;c[H>>2]=c[t>>2];c[G>>2]=c[H>>2];G=c[G>>2]|0;c[F>>2]=G;c[E>>2]=c[F>>2];c[D>>2]=c[E>>2];if(((d[c[D>>2]>>0]|0)&1|0)!=0){c[B>>2]=G;c[w>>2]=c[B>>2];c[x>>2]=c[w>>2];v=c[(c[x>>2]|0)+8>>2]|0}else{c[v>>2]=G;c[z>>2]=c[v>>2];c[A>>2]=c[z>>2];c[y>>2]=(c[A>>2]|0)+1;c[C>>2]=c[y>>2];v=c[C>>2]|0}c[u>>2]=v;u=c[u>>2]|0;c[s>>2]=c[t>>2];s=c[s>>2]|0;c[r>>2]=s;c[q>>2]=c[r>>2];c[p>>2]=c[q>>2];if(((d[c[p>>2]>>0]|0)&1|0)!=0){c[f>>2]=s;c[o>>2]=c[f>>2];c[n>>2]=c[o>>2];U=c[(c[n>>2]|0)+4>>2]|0;U=u+U|0;c[g>>2]=I;c[h>>2]=U;U=c[g>>2]|0;T=c[h>>2]|0;V=c[g>>2]|0;V=T-V|0;V=Kd(j,U,V)|0;i=k;return V|0}else{c[l>>2]=s;c[m>>2]=c[l>>2];c[e>>2]=c[m>>2];U=(d[c[e>>2]>>0]|0)>>1;U=u+U|0;c[g>>2]=I;c[h>>2]=U;U=c[g>>2]|0;T=c[h>>2]|0;V=c[g>>2]|0;V=T-V|0;V=Kd(j,U,V)|0;i=k;return V|0}return 0}function Kd(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;j=i;i=i+48|0;m=j;n=j+16|0;p=j+4|0;l=j+32|0;k=j+24|0;h=j+20|0;o=j+8|0;c[j+28>>2]=b;c[p>>2]=e;c[l>>2]=f;c[j+36>>2]=1540483477;c[j+12>>2]=24;c[k>>2]=c[l>>2];c[h>>2]=c[p>>2];while(1){if(!((c[l>>2]|0)>>>0>=4))break;c[m>>2]=c[h>>2];p=c[m>>2]|0;a[n+0>>0]=a[p+0>>0]|0;a[n+1>>0]=a[p+1>>0]|0;a[n+2>>0]=a[p+2>>0]|0;a[n+3>>0]=a[p+3>>0]|0;c[o>>2]=c[n>>2];c[o>>2]=da(c[o>>2]|0,1540483477)|0;c[o>>2]=c[o>>2]^(c[o>>2]|0)>>>24;c[o>>2]=da(c[o>>2]|0,1540483477)|0;c[k>>2]=da(c[k>>2]|0,1540483477)|0;c[k>>2]=c[k>>2]^c[o>>2];c[h>>2]=(c[h>>2]|0)+4;c[l>>2]=(c[l>>2]|0)-4}l=c[l>>2]|0;if((l|0)==3){c[k>>2]=c[k>>2]^(d[(c[h>>2]|0)+2>>0]|0)<<16;g=6}else if((l|0)==2)g=6;else if((l|0)!=1){p=c[k>>2]|0;p=p>>>13;b=c[k>>2]|0;p=b^p;c[k>>2]=p;p=c[k>>2]|0;p=da(p,1540483477)|0;c[k>>2]=p;p=c[k>>2]|0;p=p>>>15;b=c[k>>2]|0;p=b^p;c[k>>2]=p;p=c[k>>2]|0;i=j;return p|0}if((g|0)==6)c[k>>2]=c[k>>2]^(d[(c[h>>2]|0)+1>>0]|0)<<8;c[k>>2]=c[k>>2]^(d[c[h>>2]>>0]|0);c[k>>2]=da(c[k>>2]|0,1540483477)|0;p=c[k>>2]|0;p=p>>>13;b=c[k>>2]|0;p=b^p;c[k>>2]=p;p=c[k>>2]|0;p=da(p,1540483477)|0;c[k>>2]=p;p=c[k>>2]|0;p=p>>>15;b=c[k>>2]|0;p=b^p;c[k>>2]=p;p=c[k>>2]|0;i=j;return p|0}function Ld(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0;s=i;i=i+272|0;la=s+252|0;ma=s+244|0;na=s+196|0;ea=s+104|0;fa=s+108|0;ga=s+236|0;ha=s+204|0;ia=s+16|0;ja=s+20|0;ka=s+24|0;ca=s+28|0;ba=s+32|0;U=s+36|0;T=s+40|0;S=s+200|0;X=s+44|0;Y=s+48|0;Z=s+52|0;W=s+56|0;aa=s+60|0;V=s+64|0;$=s+68|0;P=s+72|0;Q=s+76|0;N=s+80|0;O=s+84|0;M=s+88|0;K=s+224|0;e=s+232|0;L=s+240|0;z=s+248|0;y=s+256|0;x=s+264|0;F=s+112|0;G=s+116|0;H=s+120|0;C=s+124|0;D=s+128|0;E=s+132|0;v=s+136|0;w=s+140|0;t=s+144|0;u=s+148|0;n=s+152|0;q=s+156|0;r=s+160|0;o=s+164|0;p=s+168|0;k=s+172|0;l=s+176|0;h=s+180|0;j=s+184|0;g=s+188|0;f=s+192|0;m=s+12|0;oa=s+8|0;pa=s+216|0;qa=s+92|0;ra=s+220|0;B=s+4|0;da=s+212|0;J=s+96|0;I=s+228|0;A=s+208|0;_=s;R=s+100|0;c[ra>>2]=b;c[B>>2]=d;d=c[ra>>2]|0;c[qa>>2]=d;c[pa>>2]=(c[qa>>2]|0)+12;c[oa>>2]=c[pa>>2];b=c[B>>2]|0;c[ma>>2]=c[oa>>2];c[na>>2]=b;b=c[c[na>>2]>>2]|0;c[s+260>>2]=c[ma>>2];c[la>>2]=b;c[da>>2]=c[la>>2];c[ka>>2]=d;c[ja>>2]=c[ka>>2];c[ia>>2]=c[ja>>2];c[ha>>2]=c[ia>>2];c[ga>>2]=(c[ha>>2]|0)+4;c[fa>>2]=c[ga>>2];c[ea>>2]=c[fa>>2];c[J>>2]=c[c[ea>>2]>>2];a:do if((c[J>>2]|0)!=0){ra=c[J>>2]|0;c[ca>>2]=c[da>>2];c[ba>>2]=ra;da=c[ca>>2]|0;ca=c[ba>>2]|0;if((c[ba>>2]&(c[ba>>2]|0)-1|0)!=0)ba=(da>>>0)%(ca>>>0)|0;else ba=da&ca-1;c[I>>2]=ba;ra=c[I>>2]|0;c[S>>2]=d;c[X>>2]=ra;ra=c[X>>2]|0;c[T>>2]=c[S>>2];c[U>>2]=c[T>>2];c[A>>2]=c[(c[c[U>>2]>>2]|0)+(ra<<2)>>2];ra=c[A>>2]|0;c[W>>2]=V;c[aa>>2]=-1;qa=c[aa>>2]|0;c[Y>>2]=c[W>>2];c[Z>>2]=qa;c[c[Y>>2]>>2]=0;c[_>>2]=c[V>>2];c[$>>2]=_;if((ra|0)!=0){c[A>>2]=c[c[A>>2]>>2];while(1){ra=c[A>>2]|0;c[N>>2]=M;c[O>>2]=-1;qa=c[O>>2]|0;c[P>>2]=c[N>>2];c[Q>>2]=qa;c[c[P>>2]>>2]=0;c[R>>2]=c[M>>2];c[K>>2]=R;if((ra|0)==0)break a;T=c[J>>2]|0;c[e>>2]=c[(c[A>>2]|0)+4>>2];c[L>>2]=T;T=c[e>>2]|0;S=c[L>>2]|0;if((c[L>>2]&(c[L>>2]|0)-1|0)!=0)S=(T>>>0)%(S>>>0)|0;else S=T&S-1;if((S|0)!=(c[I>>2]|0))break a;c[x>>2]=d;c[y>>2]=(c[x>>2]|0)+16;c[z>>2]=c[y>>2];S=(c[A>>2]|0)+8|0;ra=c[B>>2]|0;c[C>>2]=c[z>>2];c[D>>2]=S;c[E>>2]=ra;ra=c[D>>2]|0;S=c[E>>2]|0;c[F>>2]=c[C>>2];c[G>>2]=ra;c[H>>2]=S;S=c[A>>2]|0;if((c[c[G>>2]>>2]|0)==(c[c[H>>2]>>2]|0))break;c[A>>2]=c[S>>2]}c[t>>2]=a;c[u>>2]=S;ra=c[u>>2]|0;c[v>>2]=c[t>>2];c[w>>2]=ra;c[c[v>>2]>>2]=c[w>>2];i=s;return}}while(0);c[f>>2]=d;c[h>>2]=g;c[j>>2]=-1;ra=c[j>>2]|0;c[k>>2]=c[h>>2];c[l>>2]=ra;c[c[k>>2]>>2]=0;c[m>>2]=c[g>>2];c[n>>2]=m;c[o>>2]=a;c[p>>2]=0;ra=c[p>>2]|0;c[q>>2]=c[o>>2];c[r>>2]=ra;c[c[q>>2]>>2]=c[r>>2];i=s;return}function Md(a,b){a=a|0;b=+b;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+8|0;f=d;c[e>>2]=a;h[f>>3]=b;h[(c[e>>2]|0)+33619992>>3]=+h[f>>3];i=d;return}function Nd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;c[(c[e>>2]|0)+33619984>>2]=c[f>>2];i=d;return}function Od(b,f,j,k,l,m,n,o,p,q,r,s){b=b|0;f=f|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;s=s|0;var t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0.0,Ya=0;ha=i;i=i+400|0;Q=ha+360|0;P=ha+180|0;O=ha+244|0;N=ha+248|0;K=ha+252|0;L=ha+260|0;M=ha+204|0;H=ha+264|0;I=ha+148|0;J=ha+328|0;ba=ha+212|0;ca=ha+356|0;da=ha+348|0;$=ha+332|0;aa=ha+112|0;_=ha;W=ha+320|0;Y=ha+208|0;Z=ha+396|0;wa=ha+128|0;xa=ha+132|0;ya=ha+136|0;ua=ha+140|0;va=ha+144|0;ta=ha+40|0;qa=ha+152|0;ra=ha+324|0;sa=ha+397|0;Sa=ha+160|0;Ta=ha+164|0;Ua=ha+168|0;Qa=ha+172|0;Ra=ha+176|0;Pa=ha+48|0;Ma=ha+184|0;Na=ha+188|0;Fa=ha+398|0;Ya=ha+364|0;E=ha+372|0;Wa=ha+388|0;za=ha+344|0;Aa=ha+352|0;X=ha+392|0;v=ha+216|0;ia=ha+220|0;ja=ha+224|0;ka=ha+228|0;la=ha+232|0;ma=ha+236|0;F=ha+240|0;y=ha+24|0;z=ha+96|0;A=ha+88|0;oa=ha+399|0;D=ha+8|0;Va=ha+56|0;S=ha+268|0;t=ha+272|0;Ia=ha+276|0;Ja=ha+280|0;Ha=ha+284|0;Oa=ha+288|0;Ka=ha+292|0;La=ha+296|0;Ga=ha+32|0;Ea=ha+304|0;Ba=ha+308|0;Da=ha+312|0;Ca=ha+316|0;na=ha+124|0;ga=ha+120|0;fa=ha+336|0;u=ha+116|0;pa=ha+340|0;ea=ha+104|0;T=ha+300|0;U=ha+196|0;B=ha+200|0;V=ha+368|0;G=ha+376|0;R=ha+256|0;w=ha+192|0;x=ha+156|0;C=ha+16|0;c[Ya>>2]=b;c[E>>2]=f;c[Wa>>2]=j;c[za>>2]=k;c[Aa>>2]=l;c[X>>2]=m;c[v>>2]=n;c[ia>>2]=o;c[ja>>2]=p;c[ka>>2]=q;c[la>>2]=r;c[ma>>2]=s;s=c[Ya>>2]|0;a[c[ma>>2]>>0]=1;c[c[ja>>2]>>2]=0;c[F>>2]=c[Aa>>2]&c[za>>2];if((c[Wa>>2]|0)==0)Xa=20.0;else Xa=+g[(c[Wa>>2]|0)+(c[F>>2]<<2)>>2]+ +g[(c[Wa>>2]|0)+(((c[Aa>>2]|0)+1&c[za>>2])<<2)>>2]+ +g[(c[Wa>>2]|0)+(((c[Aa>>2]|0)+2&c[za>>2])<<2)>>2]+ +g[(c[Wa>>2]|0)+(((c[Aa>>2]|0)+3&c[za>>2])<<2)>>2];h[y>>3]=Xa;if((c[Wa>>2]|0)==0)Xa=15.0;else Xa=+g[(c[Wa>>2]|0)+(c[F>>2]<<2)>>2]+ +g[(c[Wa>>2]|0)+(((c[Aa>>2]|0)+1&c[za>>2])<<2)>>2]+ +g[(c[Wa>>2]|0)+(((c[Aa>>2]|0)+2&c[za>>2])<<2)>>2]+.3;h[z>>3]=Xa;if((c[Wa>>2]|0)==0)Xa=10.0;else Xa=+g[(c[Wa>>2]|0)+(c[F>>2]<<2)>>2]+ +g[(c[Wa>>2]|0)+(((c[Aa>>2]|0)+1&c[za>>2])<<2)>>2]+1.2;h[A>>3]=Xa;a[oa>>0]=0;h[D>>3]=8.115;if((c[s+33619984>>2]|0)<4){c[Va+0>>2]=c[32126];c[Va+4>>2]=c[32127];c[Va+8>>2]=c[32128];c[Va+12>>2]=c[32129];c[Va+16>>2]=c[32130];c[Va+20>>2]=c[32131];c[Va+24>>2]=c[32132];c[Va+28>>2]=c[32133];h[D>>3]=+h[D>>3]+ +h[Va+(c[s+33619984>>2]<<3)>>3]}c[S>>2]=c[c[ia>>2]>>2];c[c[ia>>2]>>2]=0;c[t>>2]=1;c[Ia>>2]=0;while(1){if((c[Ia>>2]|0)>=16)break;c[Ja>>2]=c[Aa>>2];do switch(c[Ia>>2]|0){case 0:{c[Ja>>2]=(c[Ja>>2]|0)-(c[s+33619968>>2]|0);break};case 1:{c[Ja>>2]=(c[Ja>>2]|0)-(c[s+33619972>>2]|0);break};case 12:{c[Ja>>2]=(c[Ja>>2]|0)-((c[s+33619972>>2]|0)-2);break};case 13:{c[Ja>>2]=(c[Ja>>2]|0)-((c[s+33619972>>2]|0)+2);break};case 14:{c[Ja>>2]=(c[Ja>>2]|0)-((c[s+33619972>>2]|0)-3);break};case 15:{c[Ja>>2]=(c[Ja>>2]|0)-((c[s+33619972>>2]|0)+3);break};case 2:{c[Ja>>2]=(c[Ja>>2]|0)-(c[s+33619976>>2]|0);break};case 3:{c[Ja>>2]=(c[Ja>>2]|0)-(c[s+33619980>>2]|0);break};case 4:{c[Ja>>2]=(c[Ja>>2]|0)-((c[s+33619968>>2]|0)-1);break};case 5:{c[Ja>>2]=(c[Ja>>2]|0)-((c[s+33619968>>2]|0)+1);break};case 6:{c[Ja>>2]=(c[Ja>>2]|0)-((c[s+33619968>>2]|0)-2);break};case 7:{c[Ja>>2]=(c[Ja>>2]|0)-((c[s+33619968>>2]|0)+2);break};case 8:{c[Ja>>2]=(c[Ja>>2]|0)-((c[s+33619968>>2]|0)-3);break};case 9:{c[Ja>>2]=(c[Ja>>2]|0)-((c[s+33619968>>2]|0)+3);break};case 10:{c[Ja>>2]=(c[Ja>>2]|0)-((c[s+33619972>>2]|0)-1);break};case 11:{c[Ja>>2]=(c[Ja>>2]|0)-((c[s+33619972>>2]|0)+1);break};default:{}}while(0);if((((!((c[Ja>>2]|0)>>>0>=(c[Aa>>2]|0)>>>0)?(c[Ha>>2]=(c[Aa>>2]|0)-(c[Ja>>2]|0),!((c[Ha>>2]|0)>>>0>(c[v>>2]|0)>>>0)):0)?(c[Ja>>2]=c[Ja>>2]&c[za>>2],!(((c[F>>2]|0)+(c[S>>2]|0)|0)>>>0>(c[za>>2]|0)>>>0)):0)?!(((c[Ja>>2]|0)+(c[S>>2]|0)|0)>>>0>(c[za>>2]|0)>>>0):0)?(d[(c[E>>2]|0)+((c[F>>2]|0)+(c[S>>2]|0))>>0]|0|0)==(d[(c[E>>2]|0)+((c[Ja>>2]|0)+(c[S>>2]|0))>>0]|0|0):0){c[Oa>>2]=Cd((c[E>>2]|0)+(c[Ja>>2]|0)|0,(c[E>>2]|0)+(c[F>>2]|0)|0,c[X>>2]|0)|0;Ya=c[Oa>>2]|0;c[Ka>>2]=4;c[La>>2]=3;c[Ma>>2]=Ka;c[Na>>2]=La;b=c[Ma>>2]|0;f=c[Na>>2]|0;a[Pa+0>>0]=a[Fa+0>>0]|0;c[Qa>>2]=b;c[Ra>>2]=f;f=c[Qa>>2]|0;b=c[Ra>>2]|0;c[Sa>>2]=Pa;c[Ta>>2]=f;c[Ua>>2]=b;if(Ya>>>0>=(c[((c[c[Ta>>2]>>2]|0)<(c[c[Ua>>2]>>2]|0)?c[Ra>>2]|0:c[Qa>>2]|0)>>2]|0)>>>0?(h[Ga>>3]=+Dd(+h[s+33619992>>3],+h[y>>3],+h[z>>3],+h[A>>3],c[Oa>>2]|0,c[Ia>>2]|0),+h[D>>3]<+h[Ga>>3]):0){h[D>>3]=+h[Ga>>3];c[S>>2]=c[Oa>>2];c[t>>2]=c[Ha>>2];c[c[ia>>2]>>2]=c[S>>2];c[c[ja>>2]>>2]=c[S>>2];c[c[ka>>2]>>2]=c[t>>2];h[c[la>>2]>>3]=+h[D>>3];a[oa>>0]=1;a[c[ma>>2]>>0]=(c[Ha>>2]|0)>>>0>(c[v>>2]|0)>>>0&1}}c[Ia>>2]=(c[Ia>>2]|0)+1}c[Ea>>2]=Sd((c[E>>2]|0)+(c[F>>2]|0)|0)|0;c[Ba>>2]=s+65536+(c[Ea>>2]<<10);if((e[s+(c[Ea>>2]<<1)>>1]|0)>>>0>256)Fa=(e[s+(c[Ea>>2]<<1)>>1]|0)-256|0;else Fa=0;c[Da>>2]=Fa;c[Ca>>2]=(e[s+(c[Ea>>2]<<1)>>1]|0)-1;while(1){if((c[Ca>>2]|0)<(c[Da>>2]|0))break;c[na>>2]=c[(c[Ba>>2]|0)+((c[Ca>>2]&255)<<2)>>2];if((c[na>>2]|0)>=0){c[ga>>2]=(c[Aa>>2]|0)-(c[na>>2]|0);if((c[ga>>2]|0)>>>0>(c[v>>2]|0)>>>0)break;c[na>>2]=c[na>>2]&c[za>>2];if((!(((c[F>>2]|0)+(c[S>>2]|0)|0)>>>0>(c[za>>2]|0)>>>0)?!(((c[na>>2]|0)+(c[S>>2]|0)|0)>>>0>(c[za>>2]|0)>>>0):0)?(d[(c[E>>2]|0)+((c[F>>2]|0)+(c[S>>2]|0))>>0]|0|0)==(d[(c[E>>2]|0)+((c[na>>2]|0)+(c[S>>2]|0))>>0]|0|0):0){c[fa>>2]=Cd((c[E>>2]|0)+(c[na>>2]|0)|0,(c[E>>2]|0)+(c[F>>2]|0)|0,c[X>>2]|0)|0;Ya=c[fa>>2]|0;c[u>>2]=4;c[pa>>2]=3;c[qa>>2]=u;c[ra>>2]=pa;b=c[qa>>2]|0;f=c[ra>>2]|0;a[ta+0>>0]=a[sa+0>>0]|0;c[ua>>2]=b;c[va>>2]=f;f=c[ua>>2]|0;b=c[va>>2]|0;c[wa>>2]=ta;c[xa>>2]=f;c[ya>>2]=b;if(Ya>>>0>=(c[((c[c[xa>>2]>>2]|0)<(c[c[ya>>2]>>2]|0)?c[va>>2]|0:c[ua>>2]|0)>>2]|0)>>>0?(h[ea>>3]=+Fd(+h[s+33619992>>3],+h[y>>3],+h[z>>3],+h[A>>3],c[fa>>2]|0,c[ga>>2]|0),+h[D>>3]<+h[ea>>3]):0){h[D>>3]=+h[ea>>3];c[S>>2]=c[fa>>2];c[t>>2]=c[ga>>2];c[c[ia>>2]>>2]=c[S>>2];c[c[ja>>2]>>2]=c[S>>2];c[c[ka>>2]>>2]=c[t>>2];h[c[la>>2]>>3]=+h[D>>3];a[oa>>0]=1;a[c[ma>>2]>>0]=0}}}c[Ca>>2]=(c[Ca>>2]|0)+ -1}if((c[s+3362e4>>2]|0)==0){Ya=a[oa>>0]|0;Ya=Ya&1;i=ha;return Ya|0}c[T>>2]=Bd((c[E>>2]|0)+(c[F>>2]|0)|0)|0;c[U>>2]=Gd(c[s+3362e4>>2]|0,c[T>>2]|0)|0;c[V>>2]=c[U>>2];c[W>>2]=V;c[Y>>2]=X;Ya=c[W>>2]|0;b=c[Y>>2]|0;a[_+0>>0]=a[Z+0>>0]|0;c[$>>2]=Ya;c[aa>>2]=b;b=c[aa>>2]|0;Ya=c[$>>2]|0;c[ba>>2]=_;c[ca>>2]=b;c[da>>2]=Ya;c[B>>2]=c[((c[c[ca>>2]>>2]|0)>>>0<(c[c[da>>2]>>2]|0)>>>0?c[aa>>2]|0:c[$>>2]|0)>>2];while(1){if(!((c[B>>2]|0)>=4?(c[B>>2]|0)>>>0>(c[S>>2]|0)>>>0:0))break;Ya=(c[E>>2]|0)+(c[F>>2]|0)|0;b=c[B>>2]|0;c[H>>2]=G;c[I>>2]=Ya;c[J>>2]=b;b=c[I>>2]|0;Ya=c[J>>2]|0;c[K>>2]=c[H>>2];c[L>>2]=b;c[M>>2]=Ya;Ya=c[K>>2]|0;c[N>>2]=Ya;c[O>>2]=c[N>>2];c[P>>2]=c[O>>2];c[Q>>2]=c[P>>2];Hn(Ya,c[L>>2]|0,c[M>>2]|0);if(Hd(c[s+3362e4>>2]|0,G,R,w)|0?(c[x>>2]=(c[v>>2]|0)+(c[w>>2]|0)+1,h[C>>3]=+Fd(+h[s+33619992>>3],+h[y>>3],+h[z>>3],+h[A>>3],c[B>>2]|0,c[x>>2]|0),+h[D>>3]<+h[C>>3]):0){h[D>>3]=+h[C>>3];c[S>>2]=c[B>>2];c[t>>2]=c[x>>2];c[c[ia>>2]>>2]=c[S>>2];c[c[ja>>2]>>2]=c[R>>2];c[c[ka>>2]>>2]=c[t>>2];h[c[la>>2]>>3]=+h[D>>3];a[oa>>0]=1;a[c[ma>>2]>>0]=1}Kn(G);c[B>>2]=(c[B>>2]|0)+ -1}Ya=a[oa>>0]|0;Ya=Ya&1;i=ha;return Ya|0}function Pd(a,d,f){a=a|0;d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+32|0;m=g+16|0;l=g+12|0;k=g+8|0;h=g+4|0;j=g;c[m>>2]=a;c[l>>2]=d;c[k>>2]=f;a=c[m>>2]|0;c[h>>2]=Sd(c[l>>2]|0)|0;c[j>>2]=(e[a+(c[h>>2]<<1)>>1]|0)&255;c[a+65536+(c[h>>2]<<10)+(c[j>>2]<<2)>>2]=c[k>>2];a=a+(c[h>>2]<<1)|0;b[a>>1]=(b[a>>1]|0)+1<<16>>16;i=g;return}function Qd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;b=c[f>>2]|0;if((c[b+33619968>>2]|0)==(c[e>>2]|0)){i=d;return}c[b+33619980>>2]=c[b+33619976>>2];c[b+33619976>>2]=c[b+33619972>>2];c[b+33619972>>2]=c[b+33619968>>2];c[b+33619968>>2]=c[e>>2];i=d;return}function Rd(a){a=a|0;var b=0,d=0;d=i;i=i+16|0;b=d;c[b>>2]=a;i=d;return(c[(c[b>>2]|0)+3362e4>>2]|0)!=0|0}function Sd(a){a=a|0;var b=0,d=0,e=0;d=i;i=i+16|0;e=d+4|0;b=d;c[e>>2]=a;c[b>>2]=da(Bd(c[e>>2]|0)|0,506832829)|0;i=d;return(c[b>>2]|0)>>>17|0}function Td(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;e=i;i=i+96|0;A=e+40|0;B=e+52|0;l=e+4|0;n=e+76|0;o=e+36|0;r=e+16|0;f=e+20|0;s=e+56|0;t=e+64|0;u=e+72|0;v=e+80|0;w=e+84|0;x=e+44|0;z=e+48|0;k=e+8|0;p=e;m=e+24|0;h=e+28|0;y=e+60|0;g=e+12|0;q=e+32|0;j=e+68|0;c[k>>2]=a;c[p>>2]=b;c[m>>2]=d;c[h>>2]=0;c[y>>2]=0;while(1){b=c[y>>2]|0;c[z>>2]=c[k>>2];a=c[z>>2]|0;if(!(b>>>0<(((c[a+4>>2]|0)-(c[a>>2]|0)|0)/32|0)>>>0))break;a=c[y>>2]|0;c[A>>2]=c[k>>2];c[B>>2]=a;c[h>>2]=(c[h>>2]|0)+(c[(c[c[A>>2]>>2]|0)+(c[B>>2]<<5)>>2]|0);c[y>>2]=(c[y>>2]|0)+1}if((c[h>>2]|0)==0){i=e;return}Ud(c[m>>2]|0,c[h>>2]|0);c[g>>2]=0;c[q>>2]=0;c[j>>2]=0;while(1){b=c[j>>2]|0;c[l>>2]=c[k>>2];a=c[l>>2]|0;if(!(b>>>0<(((c[a+4>>2]|0)-(c[a>>2]|0)|0)/32|0)>>>0)){f=9;break}if(!((c[g>>2]|0)>>>0<(c[h>>2]|0)>>>0)){f=9;break}b=c[g>>2]|0;c[n>>2]=c[m>>2];c[o>>2]=b;b=(c[c[n>>2]>>2]|0)+(c[o>>2]|0)|0;a=(c[p>>2]|0)+(c[q>>2]|0)|0;B=c[j>>2]|0;c[r>>2]=c[k>>2];c[f>>2]=B;qz(b|0,a|0,c[(c[c[r>>2]>>2]|0)+(c[f>>2]<<5)>>2]|0)|0;a=c[j>>2]|0;c[s>>2]=c[k>>2];c[t>>2]=a;c[g>>2]=(c[g>>2]|0)+(c[(c[c[s>>2]>>2]|0)+(c[t>>2]<<5)>>2]|0);a=c[j>>2]|0;c[u>>2]=c[k>>2];c[v>>2]=a;a=c[(c[c[u>>2]>>2]|0)+(c[v>>2]<<5)>>2]|0;b=c[j>>2]|0;c[w>>2]=c[k>>2];c[x>>2]=b;c[q>>2]=(c[q>>2]|0)+(a+(c[(c[c[w>>2]>>2]|0)+(c[x>>2]<<5)+4>>2]|0));c[j>>2]=(c[j>>2]|0)+1}if((f|0)==9){i=e;return}}function Ud(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;o=i;i=i+80|0;m=o+36|0;n=o+4|0;g=o+28|0;q=o;e=o+32|0;f=o+8|0;p=o+68|0;l=o+24|0;k=o+60|0;j=o+64|0;v=o+40|0;h=o+44|0;t=o+48|0;u=o+52|0;w=o+56|0;x=o+16|0;s=o+20|0;r=o+12|0;c[x>>2]=b;c[s>>2]=d;d=c[x>>2]|0;c[w>>2]=d;b=c[w>>2]|0;c[r>>2]=(c[b+4>>2]|0)-(c[b>>2]|0);if((c[r>>2]|0)>>>0<(c[s>>2]|0)>>>0){Yh(d,(c[s>>2]|0)-(c[r>>2]|0)|0);i=o;return}if(!((c[r>>2]|0)>>>0>(c[s>>2]|0)>>>0)){i=o;return}r=(c[d>>2]|0)+(c[s>>2]|0)|0;c[t>>2]=d;c[u>>2]=r;r=c[u>>2]|0;c[v>>2]=c[t>>2];c[h>>2]=r;r=c[v>>2]|0;while(1){if((c[h>>2]|0)==(c[r+4>>2]|0))break;c[j>>2]=r;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];x=c[l>>2]|0;b=r+4|0;w=(c[b>>2]|0)+ -1|0;c[b>>2]=w;c[m>>2]=w;w=c[m>>2]|0;c[e>>2]=x;c[f>>2]=w;w=c[e>>2]|0;x=c[f>>2]|0;a[q+0>>0]=a[p+0>>0]|0;c[n>>2]=w;c[g>>2]=x}i=o;return}function Vd(d,f,g){d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;B=i;i=i+144|0;v=B+124|0;x=B+68|0;y=B+32|0;r=B+108|0;u=B+116|0;t=B+8|0;s=B+12|0;H=B+72|0;G=B+16|0;F=B+20|0;E=B+24|0;w=B+88|0;j=B+96|0;C=B+104|0;M=B+112|0;N=B+120|0;O=B+44|0;P=B+48|0;L=B+52|0;K=B+56|0;J=B+60|0;q=B+64|0;p=B+4|0;o=B+76|0;m=B+80|0;n=B;I=B+84|0;A=B+28|0;D=B+92|0;z=B+36|0;h=B+100|0;k=B+40|0;l=B+128|0;c[A>>2]=d;c[D>>2]=f;c[z>>2]=g;c[h>>2]=0;while(1){f=c[h>>2]|0;c[I>>2]=c[A>>2];d=c[I>>2]|0;if(!(f>>>0<(((c[d+4>>2]|0)-(c[d>>2]|0)|0)/32|0)>>>0))break;g=c[h>>2]|0;c[j>>2]=c[A>>2];c[C>>2]=g;c[k>>2]=(c[c[j>>2]>>2]|0)+(c[C>>2]<<5);g=(c[k>>2]|0)+22|0;c[E>>2]=c[D>>2];c[w>>2]=g;g=c[E>>2]|0;d=c[g+4>>2]|0;c[F>>2]=g;c[G>>2]=(c[F>>2]|0)+8;c[H>>2]=c[G>>2];if((d|0)!=(c[c[H>>2]>>2]|0)){c[s>>2]=g;c[t>>2]=(c[s>>2]|0)+8;c[u>>2]=c[t>>2];Q=c[u>>2]|0;c[v>>2]=c[g+4>>2];d=c[v>>2]|0;f=c[w>>2]|0;c[x>>2]=Q;c[y>>2]=d;c[r>>2]=f;f=c[y>>2]|0;if((f|0)!=0)b[f>>1]=b[c[r>>2]>>1]|0;Q=g+4|0;c[Q>>2]=(c[Q>>2]|0)+2}else Rh(g,c[w>>2]|0);do if((c[(c[k>>2]|0)+4>>2]|0)>>>0>0?(e[(c[k>>2]|0)+20>>1]|0|0)!=65535:0){g=c[z>>2]|0;a[l>>0]=b[(c[k>>2]|0)+20>>1];c[m>>2]=g;c[n>>2]=l;g=c[m>>2]|0;Q=c[g+4>>2]|0;c[o>>2]=g;c[p>>2]=(c[o>>2]|0)+8;c[q>>2]=c[p>>2];if((Q|0)==(c[c[q>>2]>>2]|0)){Lh(g,c[n>>2]|0);break}c[J>>2]=g;c[K>>2]=(c[J>>2]|0)+8;c[L>>2]=c[K>>2];d=c[L>>2]|0;c[M>>2]=c[g+4>>2];Q=c[M>>2]|0;f=c[n>>2]|0;c[N>>2]=d;c[O>>2]=Q;c[P>>2]=f;f=c[O>>2]|0;if((f|0)!=0)a[f>>0]=a[c[P>>2]>>0]|0;Q=g+4|0;c[Q>>2]=(c[Q>>2]|0)+1}while(0);c[h>>2]=(c[h>>2]|0)+1}i=B;return}function Wd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;h=i;i=i+208|0;O=h+144|0;P=h+168|0;M=h+84|0;N=h+160|0;L=h+104|0;K=h+8|0;J=h+44|0;H=h+40|0;F=h+116|0;G=h+76|0;D=h+72|0;E=h+56|0;B=h+60|0;A=h+64|0;z=h+68|0;y=h+140|0;e=h+124|0;w=h+156|0;v=h+164|0;C=h+172|0;u=h+188|0;t=h;s=h+88|0;q=h+24|0;n=h+96|0;o=h+100|0;p=h+196|0;R=h+108|0;S=h+32|0;U=h+120|0;T=h+16|0;W=h+136|0;Q=h+204|0;V=h+205|0;X=h+48|0;Y=h+152|0;l=h+112|0;k=h+92|0;g=h+176|0;x=h+200|0;m=h+52|0;r=h+192|0;I=h+148|0;j=h+80|0;f=h+128|0;c[l>>2]=b;c[k>>2]=d;c[X>>2]=g;c[Y>>2]=h+206;b=c[Y>>2]|0;c[W>>2]=c[X>>2];c[h+132>>2]=b;b=c[W>>2]|0;a[T+0>>0]=a[V+0>>0]|0;c[U>>2]=Q;d=c[U>>2]|0;a[S+0>>0]=a[T+0>>0]|0;c[R>>2]=d;Jh(b,Q);c[x>>2]=0;c[m>>2]=0;while(1){if(!((c[m>>2]|0)>>>0<(c[k>>2]|0)>>>0))break;Y=(c[l>>2]|0)+(c[m>>2]|0)|0;c[n>>2]=g;c[o>>2]=Y;Hh(p,c[n>>2]|0,c[o>>2]|0);a[q+0>>0]=a[p+0>>0]|0;a[q+1>>0]=a[p+1>>0]|0;a[q+2>>0]=a[p+2>>0]|0;a[q+3>>0]=a[p+3>>0]|0;c[s>>2]=r;Y=c[s>>2]|0;a[t+0>>0]=a[q+0>>0]|0;a[t+1>>0]=a[q+1>>0]|0;a[t+2>>0]=a[q+2>>0]|0;a[t+3>>0]=a[q+3>>0]|0;c[u>>2]=Y;Y=c[u>>2]|0;c[Y+0>>2]=c[t+0>>2];c[v>>2]=g;c[w>>2]=c[v>>2];c[e>>2]=c[w>>2];c[y>>2]=(c[e>>2]|0)+4;c[z>>2]=c[y>>2];c[A>>2]=c[z>>2];c[B>>2]=c[A>>2];Y=c[B>>2]|0;c[D>>2]=C;c[E>>2]=Y;Y=c[E>>2]|0;c[F>>2]=c[D>>2];c[G>>2]=Y;c[c[F>>2]>>2]=c[G>>2];a[H+0>>0]=a[C+0>>0]|0;a[H+1>>0]=a[C+1>>0]|0;a[H+2>>0]=a[C+2>>0]|0;a[H+3>>0]=a[C+3>>0]|0;c[J>>2]=I;Y=c[J>>2]|0;a[K+0>>0]=a[H+0>>0]|0;a[K+1>>0]=a[H+1>>0]|0;a[K+2>>0]=a[H+2>>0]|0;a[K+3>>0]=a[H+3>>0]|0;c[L>>2]=Y;Y=c[L>>2]|0;c[Y+0>>2]=c[K+0>>2];c[M>>2]=r;c[N>>2]=I;Y=c[N>>2]|0;c[O>>2]=c[M>>2];c[P>>2]=Y;if((c[c[O>>2]>>2]|0)==(c[c[P>>2]>>2]|0)){Y=c[x>>2]&255;a[(Xd(g,(c[l>>2]|0)+(c[m>>2]|0)|0)|0)>>0]=Y;c[x>>2]=(c[x>>2]|0)+1}c[m>>2]=(c[m>>2]|0)+1}c[j>>2]=0;while(1){if(!((c[j>>2]|0)>>>0<(c[k>>2]|0)>>>0))break;Y=a[(Xd(g,(c[l>>2]|0)+(c[j>>2]|0)|0)|0)>>0]|0;a[(c[l>>2]|0)+(c[j>>2]|0)>>0]=Y;c[j>>2]=(c[j>>2]|0)+1}Y=c[x>>2]|0;c[f>>2]=1;Yd(g);i=h;return Y|0}function Xd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0;A=i;i=i+560|0;ra=A+472|0;qa=A+528|0;oa=A+520|0;na=A+512|0;ma=A+252|0;pa=A+256|0;ka=A+260|0;S=A+264|0;R=A+160|0;wa=A+156|0;va=A+96|0;xa=A+84|0;ya=A+80|0;_=A+72|0;da=A+76|0;ea=A+480|0;ca=A;$=A+284|0;aa=A+164|0;ba=A+548|0;N=A+140|0;la=A+100|0;ja=A+16|0;ga=A+108|0;ha=A+112|0;ia=A+549|0;X=A+120|0;Y=A+124|0;Z=A+128|0;U=A+132|0;V=A+136|0;W=A+476|0;fa=A+432|0;ua=A+392|0;T=A+292|0;za=A+280|0;Aa=A+276|0;kb=A+168|0;Ba=A+172|0;ta=A+176|0;jb=A+180|0;ib=A+184|0;K=A+188|0;J=A+192|0;D=A+196|0;C=A+104|0;v=A+204|0;l=A+208|0;m=A+212|0;k=A+56|0;g=A+220|0;h=A+224|0;j=A+550|0;s=A+240|0;t=A+244|0;r=A+40|0;o=A+508|0;p=A+516|0;q=A+551|0;u=A+532|0;f=A+540|0;e=A+268|0;z=A+272|0;x=A+544|0;w=A+452|0;n=A+428|0;H=A+424|0;y=A+388|0;E=A+500|0;F=A+296|0;sa=A+300|0;G=A+304|0;I=A+308|0;M=A+312|0;L=A+316|0;Pa=A+320|0;Oa=A+324|0;Ma=A+328|0;La=A+332|0;Ka=A+336|0;Na=A+340|0;Qa=A+344|0;Ta=A+348|0;Sa=A+352|0;Ra=A+356|0;Ua=A+360|0;bb=A+364|0;hb=A+368|0;gb=A+372|0;eb=A+376|0;fb=A+380|0;db=A+48|0;ab=A+200|0;_a=A+396|0;$a=A+400|0;cb=A+408|0;Za=A+24|0;Ca=A+416|0;Ya=A+420|0;Wa=A+8|0;Ja=A+216|0;Ia=A+436|0;Va=A+440|0;Ha=A+32|0;Ga=A+448|0;Fa=A+64|0;Xa=A+456|0;Ea=A+460|0;lb=A+464|0;Da=A+468|0;nb=A+288|0;sb=A+492|0;ub=A+496|0;tb=A+384|0;rb=A+92|0;vb=A+88|0;ob=A+248|0;O=A+504|0;P=A+488|0;B=A+536|0;qb=A+524|0;Q=A+228|0;mb=A+116|0;pb=A+144|0;c[vb>>2]=b;c[ob>>2]=d;b=c[vb>>2]|0;c[P>>2]=Eh(b,O,c[ob>>2]|0)|0;c[B>>2]=c[c[P>>2]>>2];d=c[c[P>>2]>>2]|0;c[ub>>2]=rb;c[tb>>2]=-1;tb=c[tb>>2]|0;c[sb>>2]=c[ub>>2];c[A+68>>2]=tb;c[c[sb>>2]>>2]=0;c[qb>>2]=c[rb>>2];c[A+484>>2]=qb;if((d|0)!=0){vb=c[B>>2]|0;vb=vb+13|0;vb=vb+1|0;i=A;return vb|0}Fh(pb,b,c[ob>>2]|0);c[nb>>2]=pb;ub=c[nb>>2]|0;c[lb>>2]=mb;c[Da>>2]=ub;ub=c[Da>>2]|0;c[Xa>>2]=c[lb>>2];c[Ea>>2]=ub;c[c[Xa>>2]>>2]=c[Ea>>2];a[Fa+0>>0]=a[mb+0>>0]|0;a[Fa+1>>0]=a[mb+1>>0]|0;a[Fa+2>>0]=a[mb+2>>0]|0;a[Fa+3>>0]=a[mb+3>>0]|0;c[Ga>>2]=Q;ub=c[Ga>>2]|0;a[Ha+0>>0]=a[Fa+0>>0]|0;a[Ha+1>>0]=a[Fa+1>>0]|0;a[Ha+2>>0]=a[Fa+2>>0]|0;a[Ha+3>>0]=a[Fa+3>>0]|0;c[Ia>>2]=ub;ub=c[Ia>>2]|0;c[Ja>>2]=Ha;c[Ka>>2]=c[c[Ja>>2]>>2];vb=c[Ka>>2]|0;c[La>>2]=vb;c[Ma>>2]=c[La>>2];c[Na>>2]=c[c[Ma>>2]>>2];c[Oa>>2]=vb;c[Pa>>2]=c[Oa>>2];c[c[Pa>>2]>>2]=0;vb=c[Na>>2]|0;c[Qa>>2]=Ha;c[Ra>>2]=c[c[Qa>>2]>>2];c[Sa>>2]=c[Ra>>2];c[Ta>>2]=c[Sa>>2];c[Ua>>2]=(c[Ta>>2]|0)+4;tb=c[Ua>>2]|0;c[Va+0>>2]=c[tb+0>>2];c[Va+4>>2]=c[tb+4>>2];a[Wa+0>>0]=a[Va+0>>0]|0;a[Wa+1>>0]=a[Va+1>>0]|0;a[Wa+2>>0]=a[Va+2>>0]|0;a[Wa+3>>0]=a[Va+3>>0]|0;a[Wa+4>>0]=a[Va+4>>0]|0;a[Wa+5>>0]=a[Va+5>>0]|0;a[Wa+6>>0]=a[Va+6>>0]|0;a[Wa+7>>0]=a[Va+7>>0]|0;c[Ca>>2]=ub;c[Ya>>2]=vb;Ca=c[Ca>>2]|0;vb=c[Ya>>2]|0;a[Za+0>>0]=a[Wa+0>>0]|0;a[Za+1>>0]=a[Wa+1>>0]|0;a[Za+2>>0]=a[Wa+2>>0]|0;a[Za+3>>0]=a[Wa+3>>0]|0;a[Za+4>>0]=a[Wa+4>>0]|0;a[Za+5>>0]=a[Wa+5>>0]|0;a[Za+6>>0]=a[Wa+6>>0]|0;a[Za+7>>0]=a[Wa+7>>0]|0;c[_a>>2]=Ca;c[$a>>2]=vb;vb=c[_a>>2]|0;c[ab>>2]=$a;Ca=c[c[ab>>2]>>2]|0;c[bb>>2]=Za;ub=c[bb>>2]|0;c[cb+0>>2]=c[ub+0>>2];c[cb+4>>2]=c[ub+4>>2];a[db+0>>0]=a[cb+0>>0]|0;a[db+1>>0]=a[cb+1>>0]|0;a[db+2>>0]=a[cb+2>>0]|0;a[db+3>>0]=a[cb+3>>0]|0;a[db+4>>0]=a[cb+4>>0]|0;a[db+5>>0]=a[cb+5>>0]|0;a[db+6>>0]=a[cb+6>>0]|0;a[db+7>>0]=a[cb+7>>0]|0;c[eb>>2]=vb;c[fb>>2]=Ca;Ca=c[eb>>2]|0;c[gb>>2]=fb;c[Ca>>2]=c[c[gb>>2]>>2];Ca=Ca+4|0;c[hb>>2]=db;vb=c[hb>>2]|0;c[Ca+0>>2]=c[vb+0>>2];c[Ca+4>>2]=c[vb+4>>2];c[ib>>2]=pb;c[jb>>2]=c[ib>>2];c[kb>>2]=c[jb>>2];c[Ba>>2]=0;Ca=c[kb>>2]|0;c[Aa>>2]=Ca;c[za>>2]=c[Aa>>2];c[ta>>2]=c[c[za>>2]>>2];vb=c[Ba>>2]|0;c[ya>>2]=Ca;c[xa>>2]=c[ya>>2];c[c[xa>>2]>>2]=vb;if((c[ta>>2]|0)!=0){c[va>>2]=Ca;c[wa>>2]=c[va>>2];ta=c[ta>>2]|0;c[ua>>2]=(c[wa>>2]|0)+4;c[T>>2]=ta;ta=c[ua>>2]|0;if(a[ta+5>>0]&1){vb=c[ta>>2]|0;c[fa>>2]=(c[T>>2]|0)+14;ub=c[fa>>2]|0;c[ga>>2]=vb;c[ha>>2]=ub;ub=c[ga>>2]|0;vb=c[ha>>2]|0;a[ja+0>>0]=a[ia+0>>0]|0;c[N>>2]=ub;c[la>>2]=vb}if(a[ta+4>>0]&1){vb=c[ta>>2]|0;c[_>>2]=(c[T>>2]|0)+13;ub=c[_>>2]|0;c[$>>2]=vb;c[aa>>2]=ub;ub=c[$>>2]|0;vb=c[aa>>2]|0;a[ca+0>>0]=a[ba+0>>0]|0;c[da>>2]=ub;c[ea>>2]=vb}if((c[T>>2]|0)!=0){ub=c[T>>2]|0;c[U>>2]=c[ta>>2];c[V>>2]=ub;c[W>>2]=1;ub=c[V>>2]|0;vb=c[W>>2]|0;c[X>>2]=c[U>>2];c[Y>>2]=ub;c[Z>>2]=vb;Ix(c[Y>>2]|0)}}ub=c[O>>2]|0;vb=c[P>>2]|0;c[R>>2]=Q;c[S>>2]=c[R>>2];c[ka>>2]=c[S>>2];Gh(b,ub,vb,c[c[ka>>2]>>2]|0);c[ma>>2]=Q;vb=c[ma>>2]|0;c[na>>2]=vb;c[oa>>2]=c[na>>2];c[pa>>2]=c[c[oa>>2]>>2];c[qa>>2]=vb;c[ra>>2]=c[qa>>2];c[c[ra>>2]>>2]=0;c[B>>2]=c[pa>>2];c[L>>2]=Q;c[M>>2]=c[L>>2];c[sa>>2]=c[M>>2];c[G>>2]=0;L=c[sa>>2]|0;c[F>>2]=L;c[E>>2]=c[F>>2];c[I>>2]=c[c[E>>2]>>2];vb=c[G>>2]|0;c[C>>2]=L;c[D>>2]=c[C>>2];c[c[D>>2]>>2]=vb;if((c[I>>2]|0)==0){vb=c[B>>2]|0;vb=vb+13|0;vb=vb+1|0;i=A;return vb|0}c[J>>2]=L;c[K>>2]=c[J>>2];C=c[I>>2]|0;c[H>>2]=(c[K>>2]|0)+4;c[y>>2]=C;C=c[H>>2]|0;if(a[C+5>>0]&1){vb=c[C>>2]|0;c[n>>2]=(c[y>>2]|0)+14;ub=c[n>>2]|0;c[o>>2]=vb;c[p>>2]=ub;ub=c[o>>2]|0;vb=c[p>>2]|0;a[r+0>>0]=a[q+0>>0]|0;c[s>>2]=ub;c[t>>2]=vb}if(a[C+4>>0]&1){vb=c[C>>2]|0;c[v>>2]=(c[y>>2]|0)+13;ub=c[v>>2]|0;c[g>>2]=vb;c[h>>2]=ub;ub=c[g>>2]|0;vb=c[h>>2]|0;a[k+0>>0]=a[j+0>>0]|0;c[l>>2]=ub;c[m>>2]=vb}if((c[y>>2]|0)==0){vb=c[B>>2]|0;vb=vb+13|0;vb=vb+1|0;i=A;return vb|0}ub=c[y>>2]|0;c[z>>2]=c[C>>2];c[x>>2]=ub;c[w>>2]=1;ub=c[x>>2]|0;vb=c[w>>2]|0;c[u>>2]=c[z>>2];c[f>>2]=ub;c[e>>2]=vb;Ix(c[f>>2]|0);vb=c[B>>2]|0;vb=vb+13|0;vb=vb+1|0;i=A;return vb|0}function Yd(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;ci(c[d>>2]|0);i=b;return}



function Ug(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;x=i;i=i+1136|0;m=x+1068|0;o=x+1096|0;p=x+1052|0;q=x+1092|0;l=x+1044|0;k=x+1040|0;t=x+1048|0;z=x+1088|0;y=x+1080|0;j=x+1056|0;w=x+1060|0;n=x+1064|0;s=x+1128|0;A=x+1072|0;G=x+1076|0;F=x+1084|0;u=x+1100|0;v=x+1104|0;E=x+1108|0;B=x+1112|0;C=x+1116|0;D=x+1120|0;h=x+1124|0;r=x;c[s>>2]=a;c[A>>2]=b;c[G>>2]=d;c[F>>2]=e;c[u>>2]=f;c[v>>2]=g;c[E>>2]=(((c[A>>2]|0)>>>0)/((c[G>>2]|0)>>>0)|0)+1;if((c[E>>2]|0)>(c[F>>2]|0))c[E>>2]=c[F>>2];c[B>>2]=7;c[C>>2]=((c[A>>2]|0)>>>0)/((c[E>>2]|0)>>>0)|0;c[D>>2]=0;while(1){if((c[D>>2]|0)>=(c[E>>2]|0))break;G=da(c[A>>2]|0,c[D>>2]|0)|0;c[h>>2]=(G>>>0)/((c[E>>2]|0)>>>0)|0;if((c[D>>2]|0)!=0){G=Wy(B)|0;c[h>>2]=(c[h>>2]|0)+((G|0)%(c[C>>2]|0)|0)}if(((c[h>>2]|0)+(c[u>>2]|0)|0)>>>0>=(c[A>>2]|0)>>>0)c[h>>2]=(c[A>>2]|0)-(c[u>>2]|0)-1;ah(r);Ch(r,(c[s>>2]|0)+(c[h>>2]|0)|0,c[u>>2]|0);c[w>>2]=c[v>>2];c[n>>2]=r;g=c[w>>2]|0;G=c[g+4>>2]|0;c[j>>2]=g;c[y>>2]=(c[j>>2]|0)+8;c[z>>2]=c[y>>2];if((G|0)!=(c[c[z>>2]>>2]|0)){c[t>>2]=g;c[k>>2]=(c[t>>2]|0)+8;c[l>>2]=c[k>>2];a=c[l>>2]|0;c[m>>2]=c[g+4>>2];G=c[m>>2]|0;F=c[n>>2]|0;c[o>>2]=a;c[p>>2]=G;c[q>>2]=F;F=c[p>>2]|0;if((F|0)!=0)qz(F|0,c[q>>2]|0,1040)|0;G=g+4|0;c[G>>2]=(c[G>>2]|0)+1040}else zh(g,c[n>>2]|0);c[D>>2]=(c[D>>2]|0)+1}i=x;return}function Vg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;n=i;i=i+1104|0;t=n+1088|0;p=n+1068|0;r=n+1060|0;s=n+1052|0;u=n+1064|0;v=n+1044|0;l=n+1048|0;m=n+1092|0;f=n+1056|0;o=n+1072|0;h=n+1076|0;k=n+1080|0;g=n+1084|0;j=n;q=n+1040|0;c[l>>2]=a;c[m>>2]=b;c[f>>2]=d;c[o>>2]=e;c[h>>2]=((c[m>>2]<<1>>>0)/((c[f>>2]|0)>>>0)|0)+100;c[k>>2]=7;b=c[h>>2]|0;c[v>>2]=c[o>>2];a=c[v>>2]|0;a=b+(((c[a+4>>2]|0)-(c[a>>2]|0)|0)/1040|0)-1|0;c[u>>2]=c[o>>2];b=c[u>>2]|0;b=(a>>>0)/((((c[b+4>>2]|0)-(c[b>>2]|0)|0)/1040|0)>>>0)|0;c[t>>2]=c[o>>2];a=c[t>>2]|0;c[h>>2]=da(b,((c[a+4>>2]|0)-(c[a>>2]|0)|0)/1040|0)|0;c[g>>2]=0;while(1){if((c[g>>2]|0)>=(c[h>>2]|0))break;ah(j);Bh(k,c[l>>2]|0,c[m>>2]|0,c[f>>2]|0,j);u=c[g>>2]|0;c[p>>2]=c[o>>2];v=c[p>>2]|0;c[q>>2]=(u>>>0)%((((c[v+4>>2]|0)-(c[v>>2]|0)|0)/1040|0)>>>0)|0;v=c[q>>2]|0;c[r>>2]=c[o>>2];c[s>>2]=v;ph((c[c[r>>2]>>2]|0)+((c[s>>2]|0)*1040|0)|0,j);c[g>>2]=(c[g>>2]|0)+1}i=n;return}function Wg(b,e,f,g,j){b=b|0;e=e|0;f=+f;g=g|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;k=i;i=i+128|0;H=k+52|0;I=k+48|0;J=k+96|0;K=k+112|0;L=k+104|0;M=k+32|0;D=k+92|0;B=k+28|0;y=k+8|0;G=k+36|0;o=k+80|0;p=k+40|0;u=k+108|0;q=k+116|0;F=k+120|0;E=k+56|0;m=k+60|0;l=k+64|0;x=k+76|0;C=k+68|0;n=k+72|0;A=k;z=k+100|0;w=k+16|0;v=k+88|0;r=k+84|0;t=k+24|0;s=k+44|0;c[D>>2]=b;c[B>>2]=e;h[y>>3]=f;c[G>>2]=g;c[o>>2]=j;c[M>>2]=c[G>>2];b=c[M>>2]|0;if((((c[b+4>>2]|0)-(c[b>>2]|0)|0)/1040|0)>>>0<=1){c[p>>2]=0;while(1){if(!((c[p>>2]|0)>>>0<(c[B>>2]|0)>>>0))break;a[(c[o>>2]|0)+(c[p>>2]|0)>>0]=0;c[p>>2]=(c[p>>2]|0)+1}i=k;return}c[L>>2]=c[G>>2];M=c[L>>2]|0;c[u>>2]=((c[M+4>>2]|0)-(c[M>>2]|0)|0)/1040|0;M=c[u>>2]<<8;c[q>>2]=Hx(M>>>0>536870911?-1:M<<3)|0;lz(c[q>>2]|0,0,c[u>>2]<<11|0)|0;c[F>>2]=0;while(1){if((c[F>>2]|0)>=256)break;c[E>>2]=0;while(1){if((c[E>>2]|0)>=(c[u>>2]|0))break;b=c[E>>2]|0;c[H>>2]=c[G>>2];c[I>>2]=b;b=c[(c[c[H>>2]>>2]|0)+((c[I>>2]|0)*1040|0)+1024>>2]|0;M=c[F>>2]|0;e=c[E>>2]|0;c[J>>2]=c[G>>2];c[K>>2]=e;f=+bg(b,c[(c[c[J>>2]>>2]|0)+((c[K>>2]|0)*1040|0)+(M<<2)>>2]|0);M=da(c[F>>2]|0,c[u>>2]|0)|0;h[(c[q>>2]|0)+(M+(c[E>>2]|0)<<3)>>3]=f;c[E>>2]=(c[E>>2]|0)+1}c[F>>2]=(c[F>>2]|0)+1}M=c[u>>2]|0;c[m>>2]=Hx(M>>>0>536870911?-1:M<<3)|0;lz(c[m>>2]|0,0,c[u>>2]<<3|0)|0;c[l>>2]=Hx(da(c[B>>2]|0,c[u>>2]|0)|0)|0;lz(c[l>>2]|0,0,da(c[B>>2]|0,c[u>>2]|0)|0)|0;c[x>>2]=0;while(1){if(!((c[x>>2]|0)>>>0<(c[B>>2]|0)>>>0))break;c[C>>2]=da(c[x>>2]|0,c[u>>2]|0)|0;c[n>>2]=da(d[(c[D>>2]|0)+(c[x>>2]|0)>>0]|0,c[u>>2]|0)|0;h[A>>3]=1.0e+99;c[z>>2]=0;while(1){if((c[z>>2]|0)>=(c[u>>2]|0))break;M=(c[m>>2]|0)+(c[z>>2]<<3)|0;h[M>>3]=+h[M>>3]+ +h[(c[q>>2]|0)+((c[n>>2]|0)+(c[z>>2]|0)<<3)>>3];if(+h[(c[m>>2]|0)+(c[z>>2]<<3)>>3]<+h[A>>3]){h[A>>3]=+h[(c[m>>2]|0)+(c[z>>2]<<3)>>3];a[(c[o>>2]|0)+(c[x>>2]|0)>>0]=c[z>>2]}c[z>>2]=(c[z>>2]|0)+1}h[w>>3]=+h[y>>3];if((c[x>>2]|0)>>>0<2e3)h[w>>3]=+h[w>>3]*(+((c[x>>2]|0)>>>0)*.07/2.0e3+.77);c[v>>2]=0;while(1){if((c[v>>2]|0)>=(c[u>>2]|0))break;M=(c[m>>2]|0)+(c[v>>2]<<3)|0;h[M>>3]=+h[M>>3]- +h[A>>3];if(+h[(c[m>>2]|0)+(c[v>>2]<<3)>>3]>=+h[w>>3]){h[(c[m>>2]|0)+(c[v>>2]<<3)>>3]=+h[w>>3];a[(c[l>>2]|0)+((c[C>>2]|0)+(c[v>>2]|0))>>0]=1}c[v>>2]=(c[v>>2]|0)+1}c[x>>2]=(c[x>>2]|0)+1}c[r>>2]=(c[B>>2]|0)-1;c[t>>2]=da(c[r>>2]|0,c[u>>2]|0)|0;c[s>>2]=d[(c[o>>2]|0)+(c[r>>2]|0)>>0];while(1){if((c[r>>2]|0)<=0)break;c[r>>2]=(c[r>>2]|0)+ -1;c[t>>2]=(c[t>>2]|0)-(c[u>>2]|0);if(a[(c[l>>2]|0)+((c[t>>2]|0)+(c[s>>2]|0))>>0]&1)c[s>>2]=d[(c[o>>2]|0)+(c[r>>2]|0)>>0];a[(c[o>>2]|0)+(c[r>>2]|0)>>0]=c[s>>2]}n=c[q>>2]|0;if((n|0)!=0)Jx(n);m=c[m>>2]|0;if((m|0)!=0)Jx(m);l=c[l>>2]|0;if((l|0)==0){i=k;return}Jx(l);i=k;return}function Xg(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;u=i;i=i+96|0;n=u+28|0;o=u+4|0;q=u+52|0;w=u+24|0;B=u+68|0;C=u+8|0;A=u;x=u+56|0;y=u+64|0;z=u+88|0;v=u+80|0;j=u+84|0;t=u+32|0;D=u+12|0;h=u+44|0;E=u+48|0;F=u+40|0;p=u+36|0;k=u+60|0;l=u+16|0;m=u+20|0;r=u+76|0;s=u+72|0;c[p>>2]=b;c[k>>2]=e;c[l>>2]=f;c[m>>2]=g;c[r>>2]=Wd(c[l>>2]|0,c[k>>2]|0)|0;c[F>>2]=c[m>>2];g=c[F>>2]|0;c[E>>2]=g;b=c[E>>2]|0;f=c[b>>2]|0;c[D>>2]=b;c[h>>2]=f;f=c[D>>2]|0;while(1){if((c[h>>2]|0)==(c[f+4>>2]|0))break;c[t>>2]=f;c[j>>2]=(c[t>>2]|0)+8;c[v>>2]=c[j>>2];F=c[v>>2]|0;D=f+4|0;E=(c[D>>2]|0)+ -1040|0;c[D>>2]=E;c[w>>2]=E;E=c[w>>2]|0;c[x>>2]=F;c[y>>2]=E;E=c[x>>2]|0;F=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=E;c[C>>2]=F}c[q>>2]=g;eh(c[m>>2]|0,c[r>>2]|0);c[s>>2]=0;while(1){if(!((c[s>>2]|0)>>>0<(c[k>>2]|0)>>>0))break;F=d[(c[l>>2]|0)+(c[s>>2]|0)>>0]|0;c[n>>2]=c[m>>2];c[o>>2]=F;bh((c[c[n>>2]>>2]|0)+((c[o>>2]|0)*1040|0)|0,d[(c[p>>2]|0)+(c[s>>2]|0)>>0]|0);c[s>>2]=(c[s>>2]|0)+1}i=u;return}function Yg(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0;l=i;i=i+1600|0;q=l+1272|0;r=l+1568|0;o=l+1544|0;p=l+1256|0;Ha=l+1260|0;ga=l+1320|0;ha=l+1480|0;ea=l+1268|0;h=l+1056|0;g=l+1536|0;ja=l+1060|0;na=l+1064|0;oa=l+1068|0;la=l+1072|0;ma=l+1076|0;ka=l+1488|0;qa=l+1140|0;ua=l+1084|0;va=l+1088|0;sa=l+1092|0;ta=l+1096|0;ra=l+1100|0;xa=l+1104|0;Ga=l+1108|0;Fa=l+1112|0;Da=l+1116|0;Ea=l+1120|0;Ca=l+1124|0;Aa=l+1128|0;Ba=l+1132|0;ya=l+1136|0;za=l+1484|0;ca=l+1264|0;ba=l+1144|0;ia=l+1148|0;pa=l+1152|0;wa=l+1156|0;aa=l+1160|0;$=l+1164|0;A=l+1168|0;B=l+1172|0;y=l+1176|0;z=l+1180|0;x=l+1184|0;D=l+1188|0;H=l+1192|0;I=l+1196|0;F=l+1200|0;G=l+1204|0;E=l+1208|0;K=l+1212|0;O=l+1216|0;P=l+1220|0;M=l+1224|0;N=l+1228|0;L=l+1232|0;R=l+1236|0;_=l+1240|0;Z=l+1244|0;X=l+1532|0;Y=l+1540|0;W=l+1548|0;U=l+1556|0;V=l+1564|0;S=l+1572|0;T=l+1588|0;w=l+1592|0;v=l+1276|0;C=l+1280|0;J=l+1284|0;Q=l+1288|0;u=l+1292|0;t=l+1296|0;La=l+1300|0;Na=l+1304|0;Oa=l+1308|0;Pa=l+1312|0;Ka=l+1316|0;Ja=l+1560|0;Ia=l+1324|0;Ua=l+1328|0;Ta=l+1332|0;Sa=l+1336|0;Qa=l+1340|0;Ma=l+1344|0;Ya=l+1348|0;Za=l+1352|0;tb=l+1356|0;ub=l+1364|0;vb=l+1368|0;sb=l+1372|0;ob=l+1380|0;pb=l+1388|0;qb=l+1392|0;nb=l+1396|0;jb=l+1404|0;kb=l+1412|0;lb=l+1416|0;ib=l+1420|0;$a=l+1428|0;bb=l+1436|0;ab=l+1440|0;cb=l+1444|0;eb=l+1448|0;db=l+1452|0;fb=l+1456|0;gb=l+1460|0;wb=l+1468|0;rb=l+1472|0;mb=l+1476|0;hb=l+1080|0;xb=l+1044|0;yb=l+1504|0;_a=l+1052|0;n=l+1040|0;s=l+1048|0;k=l+1492|0;j=l+1520|0;Wa=l+1248|0;Ra=l;Xa=l+1552|0;Va=l+1596|0;da=l+1508|0;fa=l+1576|0;m=l+1252|0;c[_a>>2]=b;c[n>>2]=e;c[s>>2]=f;c[yb>>2]=k;c[xb>>2]=c[yb>>2];c[wb>>2]=c[xb>>2];e=c[wb>>2]|0;c[l+1464>>2]=e;c[ub>>2]=sb;c[vb>>2]=-1;b=c[vb>>2]|0;c[tb>>2]=c[ub>>2];c[l+1360>>2]=b;c[c[tb>>2]>>2]=0;c[rb>>2]=c[sb>>2];c[l+1376>>2]=rb;c[e>>2]=0;c[pb>>2]=nb;c[qb>>2]=-1;b=c[qb>>2]|0;c[ob>>2]=c[pb>>2];c[l+1384>>2]=b;c[c[ob>>2]>>2]=0;c[mb>>2]=c[nb>>2];c[l+1400>>2]=mb;c[e+4>>2]=0;c[kb>>2]=ib;c[lb>>2]=-1;b=c[lb>>2]|0;c[jb>>2]=c[kb>>2];c[l+1408>>2]=b;c[c[jb>>2]>>2]=0;c[hb>>2]=c[ib>>2];c[l+1424>>2]=hb;c[fb>>2]=e+8;c[gb>>2]=0;e=c[gb>>2]|0;c[eb>>2]=c[fb>>2];c[db>>2]=e;e=c[eb>>2]|0;c[cb>>2]=db;b=c[c[cb>>2]>>2]|0;c[bb>>2]=e;c[ab>>2]=b;b=c[bb>>2]|0;c[l+1432>>2]=b;c[$a>>2]=ab;c[b>>2]=c[c[$a>>2]>>2];re(j,c[n>>2]|0);c[Wa>>2]=0;ah(Ra);c[Xa>>2]=0;while(1){if(!((c[Xa>>2]|0)>>>0<(c[n>>2]|0)>>>0))break;if(((c[Xa>>2]|0)+1|0)==(c[n>>2]|0))f=1;else f=(d[(c[s>>2]|0)+(c[Xa>>2]|0)>>0]|0|0)!=(d[(c[s>>2]|0)+((c[Xa>>2]|0)+1)>>0]|0|0);a[Va>>0]=f&1;yb=c[Wa>>2]|0;xb=c[Xa>>2]|0;c[Ya>>2]=j;c[Za>>2]=xb;c[(c[c[Ya>>2]>>2]|0)+(c[Za>>2]<<2)>>2]=yb;bh(Ra,d[(c[_a>>2]|0)+(c[Xa>>2]|0)>>0]|0);if(a[Va>>0]&1){c[Qa>>2]=k;c[Ma>>2]=Ra;f=c[Qa>>2]|0;yb=c[f+4>>2]|0;c[Sa>>2]=f;c[Ta>>2]=(c[Sa>>2]|0)+8;c[Ua>>2]=c[Ta>>2];if((yb|0)!=(c[c[Ua>>2]>>2]|0)){c[Ia>>2]=f;c[Ja>>2]=(c[Ia>>2]|0)+8;c[Ka>>2]=c[Ja>>2];xb=c[Ka>>2]|0;c[La>>2]=c[f+4>>2];yb=c[La>>2]|0;e=c[Ma>>2]|0;c[Na>>2]=xb;c[Oa>>2]=yb;c[Pa>>2]=e;e=c[Oa>>2]|0;if((e|0)!=0)qz(e|0,c[Pa>>2]|0,1040)|0;yb=f+4|0;c[yb>>2]=(c[yb>>2]|0)+1040}else zh(f,c[Ma>>2]|0);ch(Ra);c[Wa>>2]=(c[Wa>>2]|0)+1}c[Xa>>2]=(c[Xa>>2]|0)+1}c[t>>2]=da;c[u>>2]=c[t>>2];c[v>>2]=c[u>>2];yb=c[v>>2]|0;c[w>>2]=yb;c[y>>2]=x;c[z>>2]=-1;xb=c[z>>2]|0;c[A>>2]=c[y>>2];c[B>>2]=xb;c[c[A>>2]>>2]=0;c[C>>2]=c[x>>2];c[D>>2]=C;c[yb>>2]=0;c[F>>2]=E;c[G>>2]=-1;xb=c[G>>2]|0;c[H>>2]=c[F>>2];c[I>>2]=xb;c[c[H>>2]>>2]=0;c[J>>2]=c[E>>2];c[K>>2]=J;c[yb+4>>2]=0;c[M>>2]=L;c[N>>2]=-1;xb=c[N>>2]|0;c[O>>2]=c[M>>2];c[P>>2]=xb;c[c[O>>2]>>2]=0;c[Q>>2]=c[L>>2];c[R>>2]=Q;c[S>>2]=yb+8;c[T>>2]=0;yb=c[T>>2]|0;c[U>>2]=c[S>>2];c[V>>2]=yb;yb=c[U>>2]|0;c[W>>2]=V;xb=c[c[W>>2]>>2]|0;c[X>>2]=yb;c[Y>>2]=xb;xb=c[X>>2]|0;c[Z>>2]=xb;c[_>>2]=Y;c[xb>>2]=c[c[_>>2]>>2];c[$>>2]=fa;c[aa>>2]=c[$>>2];c[ba>>2]=c[aa>>2];xb=c[ba>>2]|0;c[ca>>2]=xb;c[ea>>2]=g;c[h>>2]=-1;yb=c[h>>2]|0;c[ga>>2]=c[ea>>2];c[ha>>2]=yb;c[c[ga>>2]>>2]=0;c[ia>>2]=c[g>>2];c[ja>>2]=ia;c[xb>>2]=0;c[la>>2]=ka;c[ma>>2]=-1;yb=c[ma>>2]|0;c[na>>2]=c[la>>2];c[oa>>2]=yb;c[c[na>>2]>>2]=0;c[pa>>2]=c[ka>>2];c[qa>>2]=pa;c[xb+4>>2]=0;c[sa>>2]=ra;c[ta>>2]=-1;yb=c[ta>>2]|0;c[ua>>2]=c[sa>>2];c[va>>2]=yb;c[c[ua>>2]>>2]=0;c[wa>>2]=c[ra>>2];c[xa>>2]=wa;c[ya>>2]=xb+8;c[za>>2]=0;xb=c[za>>2]|0;c[Aa>>2]=c[ya>>2];c[Ba>>2]=xb;xb=c[Aa>>2]|0;c[Ca>>2]=Ba;yb=c[c[Ca>>2]>>2]|0;c[Da>>2]=xb;c[Ea>>2]=yb;yb=c[Da>>2]|0;c[Fa>>2]=yb;c[Ga>>2]=Ea;c[yb>>2]=c[c[Ga>>2]>>2];c[Ha>>2]=k;yb=c[Ha>>2]|0;dh(k,1,((c[yb+4>>2]|0)-(c[yb>>2]|0)|0)/1040|0,256,da,fa);c[m>>2]=0;while(1){if(!((c[m>>2]|0)>>>0<(c[n>>2]|0)>>>0))break;yb=c[m>>2]|0;c[o>>2]=j;c[p>>2]=yb;yb=c[(c[c[o>>2]>>2]|0)+(c[p>>2]<<2)>>2]|0;c[q>>2]=fa;c[r>>2]=yb;a[(c[s>>2]|0)+(c[m>>2]|0)>>0]=c[(c[c[q>>2]>>2]|0)+(c[r>>2]<<2)>>2];c[m>>2]=(c[m>>2]|0)+1}we(fa);Zg(da);we(j);Zg(k);i=l;return}function Zg(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;_g(c[d>>2]|0);i=b;return}function _g(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;$g(c[d>>2]|0);i=b;return}function $g(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=i;i=i+144|0;w=d+48|0;B=d+8|0;C=d+84|0;A=d;x=d+16|0;y=d+4|0;z=d+132|0;v=d+80|0;u=d+44|0;t=d+20|0;E=d+24|0;e=d+28|0;D=d+32|0;g=d+36|0;f=d+40|0;s=d+76|0;l=d+124|0;k=d+128|0;j=d+52|0;h=d+56|0;p=d+64|0;q=d+68|0;r=d+92|0;m=d+96|0;n=d+100|0;o=d+104|0;I=d+108|0;K=d+116|0;J=d+120|0;H=d+88|0;F=d+72|0;G=d+12|0;c[F>>2]=b;b=c[F>>2]|0;F=c[b>>2]|0;c[K>>2]=H;c[J>>2]=-1;J=c[J>>2]|0;c[I>>2]=c[K>>2];c[d+112>>2]=J;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[d+60>>2]=G;if((F|0)==0){i=d;return}c[D>>2]=b;K=c[D>>2]|0;D=c[K>>2]|0;c[E>>2]=K;c[e>>2]=D;D=c[E>>2]|0;while(1){if((c[e>>2]|0)==(c[D+4>>2]|0))break;c[t>>2]=D;c[u>>2]=(c[t>>2]|0)+8;c[v>>2]=c[u>>2];K=c[v>>2]|0;I=D+4|0;J=(c[I>>2]|0)+ -1040|0;c[I>>2]=J;c[w>>2]=J;J=c[w>>2]|0;c[x>>2]=K;c[y>>2]=J;J=c[x>>2]|0;K=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=J;c[C>>2]=K}c[s>>2]=b;c[f>>2]=(c[s>>2]|0)+8;c[g>>2]=c[f>>2];I=c[g>>2]|0;K=c[b>>2]|0;c[h>>2]=b;J=c[h>>2]|0;c[j>>2]=J;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];J=((c[c[l>>2]>>2]|0)-(c[J>>2]|0)|0)/1040|0;c[m>>2]=I;c[n>>2]=K;c[o>>2]=J;J=c[n>>2]|0;K=c[o>>2]|0;c[p>>2]=c[m>>2];c[q>>2]=J;c[r>>2]=K;Ix(c[q>>2]|0);i=d;return}function ah(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Ah(c[d>>2]|0);i=b;return}function bh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;a=c[f>>2]|0;b=a+(c[e>>2]<<2)|0;c[b>>2]=(c[b>>2]|0)+1;a=a+1024|0;c[a>>2]=(c[a>>2]|0)+1;i=d;return}function ch(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;lz(a|0,0,1024)|0;c[a+1024>>2]=0;i=b;return}function dh(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0.0;B=i;i=i+176|0;J=B+156|0;K=B+120|0;G=B;H=B+104|0;k=B+64|0;l=B+148|0;n=B+20|0;o=B+108|0;q=B+24|0;r=B+28|0;j=B+32|0;F=B+36|0;v=B+40|0;w=B+44|0;x=B+48|0;y=B+128|0;z=B+136|0;A=B+144|0;U=B+152|0;V=B+160|0;S=B+68|0;T=B+72|0;Q=B+76|0;R=B+80|0;O=B+84|0;P=B+88|0;M=B+92|0;N=B+96|0;u=B+100|0;I=B+4|0;D=B+116|0;t=B+112|0;E=B+124|0;p=B+52|0;s=B+132|0;m=B+8|0;W=B+56|0;L=B+140|0;C=B+60|0;c[u>>2]=a;c[I>>2]=b;c[D>>2]=d;c[t>>2]=e;c[E>>2]=f;c[p>>2]=g;c[s>>2]=da(c[I>>2]|0,c[D>>2]|0)|0;a=c[s>>2]|0;c[W>>2]=1;ze(m,a,W);eh(c[E>>2]|0,c[s>>2]|0);Be(c[p>>2]|0,c[s>>2]|0);c[L>>2]=0;while(1){if((c[L>>2]|0)>=(c[s>>2]|0))break;W=c[L>>2]|0;c[M>>2]=c[E>>2];c[N>>2]=W;W=(c[c[M>>2]>>2]|0)+((c[N>>2]|0)*1040|0)|0;a=c[L>>2]|0;c[O>>2]=c[u>>2];c[P>>2]=a;qz(W|0,(c[c[O>>2]>>2]|0)+((c[P>>2]|0)*1040|0)|0,1040)|0;W=c[L>>2]|0;c[Q>>2]=c[u>>2];c[R>>2]=W;X=+fh((c[c[Q>>2]>>2]|0)+((c[R>>2]|0)*1040|0)|0);W=c[L>>2]|0;c[S>>2]=c[E>>2];c[T>>2]=W;h[(c[c[S>>2]>>2]|0)+((c[T>>2]|0)*1040|0)+1032>>3]=X;W=c[L>>2]|0;a=c[L>>2]|0;c[U>>2]=c[p>>2];c[V>>2]=a;c[(c[c[U>>2]>>2]|0)+(c[V>>2]<<2)>>2]=W;c[L>>2]=(c[L>>2]|0)+1}a:do if((c[I>>2]|0)>1){c[C>>2]=0;while(1){if((c[C>>2]|0)>=(c[D>>2]|0))break a;c[j>>2]=c[E>>2];c[F>>2]=0;a=(c[c[j>>2]>>2]|0)+((c[F>>2]|0)*1040|0)|0;c[G>>2]=m;c[H>>2]=0;W=(c[c[G>>2]>>2]|0)+(c[H>>2]<<2)|0;b=da(c[C>>2]|0,c[I>>2]|0)|0;c[J>>2]=c[p>>2];c[K>>2]=b;gh(a,W,(c[c[J>>2]>>2]|0)+(c[K>>2]<<2)|0,c[I>>2]|0,c[t>>2]|0);c[C>>2]=(c[C>>2]|0)+1}}while(0);c[k>>2]=c[E>>2];c[l>>2]=0;a=(c[c[k>>2]>>2]|0)+((c[l>>2]|0)*1040|0)|0;c[n>>2]=m;c[o>>2]=0;b=(c[c[n>>2]>>2]|0)+(c[o>>2]<<2)|0;c[q>>2]=c[p>>2];c[r>>2]=0;gh(a,b,(c[c[q>>2]>>2]|0)+(c[r>>2]<<2)|0,c[s>>2]|0,c[t>>2]|0);c[v>>2]=c[u>>2];c[w>>2]=0;b=(c[c[v>>2]>>2]|0)+((c[w>>2]|0)*1040|0)|0;a=c[s>>2]|0;c[x>>2]=c[E>>2];c[y>>2]=0;W=(c[c[x>>2]>>2]|0)+((c[y>>2]|0)*1040|0)|0;c[z>>2]=c[p>>2];c[A>>2]=0;hh(b,a,W,(c[c[z>>2]>>2]|0)+(c[A>>2]<<2)|0);ih(c[E>>2]|0,c[p>>2]|0);we(m);i=B;return}function eh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;o=i;i=i+80|0;m=o+36|0;n=o+4|0;g=o+28|0;q=o;e=o+32|0;f=o+8|0;p=o+68|0;l=o+24|0;k=o+60|0;j=o+64|0;v=o+40|0;h=o+44|0;t=o+48|0;u=o+52|0;w=o+56|0;x=o+16|0;s=o+20|0;r=o+12|0;c[x>>2]=b;c[s>>2]=d;d=c[x>>2]|0;c[w>>2]=d;b=c[w>>2]|0;c[r>>2]=((c[b+4>>2]|0)-(c[b>>2]|0)|0)/1040|0;if((c[r>>2]|0)>>>0<(c[s>>2]|0)>>>0){rh(d,(c[s>>2]|0)-(c[r>>2]|0)|0);i=o;return}if(!((c[r>>2]|0)>>>0>(c[s>>2]|0)>>>0)){i=o;return}r=(c[d>>2]|0)+((c[s>>2]|0)*1040|0)|0;c[t>>2]=d;c[u>>2]=r;r=c[u>>2]|0;c[v>>2]=c[t>>2];c[h>>2]=r;r=c[v>>2]|0;while(1){if((c[h>>2]|0)==(c[r+4>>2]|0))break;c[j>>2]=r;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];x=c[l>>2]|0;b=r+4|0;w=(c[b>>2]|0)+ -1040|0;c[b>>2]=w;c[m>>2]=w;w=c[m>>2]|0;c[e>>2]=x;c[f>>2]=w;w=c[e>>2]|0;x=c[f>>2]|0;a[q+0>>0]=a[p+0>>0]|0;c[n>>2]=w;c[g>>2]=x}i=o;return}function fh(a){a=a|0;var b=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0.0;b=i;i=i+288|0;e=b;f=b+16|0;l=b+12|0;m=b+24|0;g=b+32|0;j=b+20|0;k=b+8|0;c[f>>2]=a;if((c[(c[f>>2]|0)+1024>>2]|0)==0){h[e>>3]=12.0;n=+h[e>>3];i=b;return+n}c[l>>2]=0;c[m>>2]=0;while(1){if((c[m>>2]|0)>=256)break;if((c[l>>2]|0)>=5)break;if((c[(c[f>>2]|0)+(c[m>>2]<<2)>>2]|0)>0)c[l>>2]=(c[l>>2]|0)+1;c[m>>2]=(c[m>>2]|0)+1}if((c[l>>2]|0)==1){h[e>>3]=12.0;n=+h[e>>3];i=b;return+n}if((c[l>>2]|0)==2){h[e>>3]=+(20+(c[(c[f>>2]|0)+1024>>2]|0)|0);n=+h[e>>3];i=b;return+n}lz(g|0,0,256)|0;Ml(c[f>>2]|0,256,15,g);c[j>>2]=0;c[k>>2]=0;while(1){if((c[k>>2]|0)>=256)break;m=da(c[(c[f>>2]|0)+(c[k>>2]<<2)>>2]|0,d[g+(c[k>>2]|0)>>0]|0)|0;c[j>>2]=(c[j>>2]|0)+m;c[k>>2]=(c[k>>2]|0)+1}do if((c[l>>2]|0)!=3)if((c[l>>2]|0)==4){c[j>>2]=(c[j>>2]|0)+37;break}else{m=Gf(g,256)|0;c[j>>2]=(c[j>>2]|0)+m;break}else c[j>>2]=(c[j>>2]|0)+28;while(0);h[e>>3]=+(c[j>>2]|0);n=+h[e>>3];i=b;return+n}function gh(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0,Uc=0,Vc=0,Wc=0,Xc=0,Yc=0,Zc=0,_c=0,$c=0,ad=0,bd=0,cd=0,dd=0,ed=0,fd=0,gd=0,hd=0,id=0,jd=0,kd=0,ld=0,md=0,nd=0,od=0,pd=0,qd=0,rd=0,sd=0,td=0,ud=0,vd=0,wd=0,xd=0,yd=0,zd=0,Ad=0,Bd=0,Cd=0,Dd=0,Ed=0,Fd=0,Gd=0,Hd=0;m=i;i=i+1120|0;_a=m+580|0;Za=m+568|0;t=m+564|0;u=m+312|0;w=m+544|0;x=m+228|0;n=m+1040|0;o=m+1056|0;A=m+1072|0;B=m+1080|0;H=m+1088|0;N=m+1064|0;O=m+156|0;P=m+148|0;Q=m+144|0;R=m+1020|0;S=m+616|0;X=m+556|0;aa=m+352|0;ba=m+332|0;$=m+48|0;Y=m+224|0;Z=m+220|0;_=m+1104|0;W=m+160|0;V=m+164|0;U=m+168|0;L=m+172|0;M=m+176|0;J=m+180|0;K=m+184|0;I=m+1016|0;ca=m+728|0;da=m+612|0;ea=m+600|0;ga=m+552|0;ia=m+356|0;ja=m+348|0;qa=m+344|0;ra=m+328|0;oa=m+236|0;pa=m+232|0;la=m+244|0;ma=m+248|0;ka=m+252|0;ya=m+256|0;za=m+260|0;wa=m+264|0;xa=m+268|0;ta=m+272|0;ua=m+276|0;sa=m+280|0;q=m+284|0;Qa=m+288|0;Va=m+292|0;Wa=m+296|0;Ta=m+300|0;Ra=m+304|0;Sa=m+308|0;Ua=m+88|0;Pa=m+316|0;Oa=m+320|0;Ma=m+324|0;Na=m+1012|0;Xa=m+792|0;Ya=m+724|0;La=m+8|0;Ka=m+64|0;Ja=m+604|0;Ia=m+596|0;Ga=m+592|0;Ha=m+548|0;Ea=m+360|0;Fa=m+364|0;Da=m+80|0;Ba=m+72|0;Aa=m+24|0;hb=m+380|0;mb=m+384|0;nb=m+388|0;lb=m+120|0;ib=m+396|0;jb=m+400|0;k=m+1106|0;j=m+408|0;fb=m+412|0;eb=m+416|0;cb=m+420|0;db=m+424|0;ab=m+428|0;bb=m+432|0;$a=m+436|0;ob=m+440|0;pb=m+444|0;qb=m+448|0;xb=m+452|0;yb=m+456|0;vb=m+460|0;wb=m+464|0;kc=m+468|0;ub=m+472|0;Gb=m+476|0;Hb=m+480|0;Eb=m+484|0;Fb=m+488|0;Db=m+492|0;Jb=m+496|0;Nb=m+500|0;Ob=m+504|0;Lb=m+508|0;Mb=m+512|0;Kb=m+516|0;Qb=m+520|0;Ub=m+524|0;Vb=m+528|0;Sb=m+532|0;Tb=m+1052|0;Rb=m+1060|0;Xb=m+1068|0;ec=m+1076|0;dc=m+1084|0;bc=m+1092|0;cc=m+1096|0;ac=m+576|0;_b=m+1100|0;$b=m+584|0;Yb=m+588|0;Zb=m+1008|0;Cb=m+984|0;Bb=m+788|0;Ib=m+744|0;Pb=m+720|0;Wb=m+680|0;Ab=m+672|0;zb=m+668|0;ad=m+608|0;bd=m+620|0;cd=m+624|0;dd=m+628|0;$c=m+632|0;_c=m+636|0;Zc=m+640|0;xc=m+644|0;wc=m+648|0;vc=m+652|0;tc=m+656|0;uc=m+660|0;sc=m+664|0;rc=m+56|0;qc=m+368|0;pc=m+16|0;mc=m+372|0;nc=m+676|0;oc=m+376|0;rb=m+684|0;lc=m+688|0;gc=m+692|0;hc=m+696|0;ic=m+704|0;Xc=m+712|0;Yc=m+716|0;Wc=m+392|0;Vc=m+32|0;Uc=m+732|0;Sc=m;Qc=m+736|0;Rc=m+740|0;Oc=m+404|0;Pc=m+748|0;Mc=m+752|0;Lc=m+756|0;Kc=m+760|0;Jc=m+764|0;Ic=m+768|0;Hc=m+772|0;Gc=m+776|0;Nc=m+780|0;Fc=m+784|0;Ec=m+128|0;Dc=m+796|0;Bc=m+40|0;yc=m+800|0;zc=m+804|0;Ac=m+808|0;yd=m+812|0;zd=m+820|0;Ad=m+824|0;xd=m+828|0;td=m+836|0;ud=m+844|0;vd=m+848|0;sd=m+852|0;od=m+860|0;pd=m+868|0;qd=m+872|0;nd=m+876|0;ed=m+884|0;gd=m+892|0;fd=m+896|0;hd=m+900|0;jd=m+904|0;id=m+908|0;kd=m+912|0;ld=m+916|0;Bd=m+924|0;wd=m+928|0;rd=m+932|0;md=m+936|0;Cd=m+940|0;Dd=m+944|0;Fd=m+948|0;Ed=m+952|0;Gd=m+956|0;Hd=m+960|0;z=m+964|0;C=m+968|0;G=m+972|0;E=m+976|0;s=m+980|0;p=m+136|0;r=m+988|0;l=m+992|0;gb=m+192|0;fc=m+152|0;Cc=m+340|0;Tc=m+1024|0;jc=m+1032|0;kb=m+204|0;tb=m+560|0;sb=m+216|0;v=m+336|0;y=m+1044|0;D=m+536|0;F=m+1048|0;T=m+540|0;fa=m+572|0;na=m+1004|0;va=m+240|0;Ca=m+1105|0;ha=m+188|0;c[z>>2]=b;c[C>>2]=d;c[G>>2]=e;c[E>>2]=f;c[s>>2]=g;h[p>>3]=0.0;c[r>>2]=1;c[Gd>>2]=l;c[Hd>>2]=m+1107;d=c[Hd>>2]|0;c[Fd>>2]=c[Gd>>2];c[Ed>>2]=d;mf(c[Fd>>2]|0,c[Ed>>2]|0);c[Dd>>2]=gb;c[Cd>>2]=c[Dd>>2];c[Bd>>2]=c[Cd>>2];d=c[Bd>>2]|0;c[m+920>>2]=d;c[zd>>2]=xd;c[Ad>>2]=-1;b=c[Ad>>2]|0;c[yd>>2]=c[zd>>2];c[m+816>>2]=b;c[c[yd>>2]>>2]=0;c[wd>>2]=c[xd>>2];c[m+832>>2]=wd;c[d>>2]=0;c[ud>>2]=sd;c[vd>>2]=-1;b=c[vd>>2]|0;c[td>>2]=c[ud>>2];c[m+840>>2]=b;c[c[td>>2]>>2]=0;c[rd>>2]=c[sd>>2];c[m+856>>2]=rd;c[d+4>>2]=0;c[pd>>2]=nd;c[qd>>2]=-1;b=c[qd>>2]|0;c[od>>2]=c[pd>>2];c[m+864>>2]=b;c[c[od>>2]>>2]=0;c[md>>2]=c[nd>>2];c[m+880>>2]=md;c[kd>>2]=d+8;c[ld>>2]=0;d=c[ld>>2]|0;c[jd>>2]=c[kd>>2];c[id>>2]=d;d=c[jd>>2]|0;c[hd>>2]=id;b=c[c[hd>>2]>>2]|0;c[gd>>2]=d;c[fd>>2]=b;b=c[gd>>2]|0;c[m+888>>2]=b;c[ed>>2]=fd;c[b>>2]=c[c[ed>>2]>>2];c[fc>>2]=0;while(1){if((c[fc>>2]|0)>=(c[E>>2]|0))break;Hd=(c[G>>2]|0)+(c[fc>>2]<<2)|0;c[yc>>2]=l;c[zc>>2]=Hd;Ef(Ac,c[yc>>2]|0,c[zc>>2]|0);a[Bc+0>>0]=a[Ac+0>>0]|0;a[Bc+1>>0]=a[Ac+1>>0]|0;a[Bc+2>>0]=a[Ac+2>>0]|0;a[Bc+3>>0]=a[Ac+3>>0]|0;c[Dc>>2]=Cc;Hd=c[Dc>>2]|0;a[Ec+0>>0]=a[Bc+0>>0]|0;a[Ec+1>>0]=a[Bc+1>>0]|0;a[Ec+2>>0]=a[Bc+2>>0]|0;a[Ec+3>>0]=a[Bc+3>>0]|0;c[Fc>>2]=Hd;c[c[Fc>>2]>>2]=c[Ec>>2];c[Gc>>2]=l;c[Hc>>2]=c[Gc>>2];c[Ic>>2]=c[Hc>>2];c[Jc>>2]=(c[Ic>>2]|0)+4;c[Kc>>2]=c[Jc>>2];c[Lc>>2]=c[Kc>>2];c[Mc>>2]=c[Lc>>2];Hd=c[Mc>>2]|0;c[Oc>>2]=Nc;c[Pc>>2]=Hd;Hd=c[Pc>>2]|0;c[Qc>>2]=c[Oc>>2];c[Rc>>2]=Hd;c[c[Qc>>2]>>2]=c[Rc>>2];a[Sc+0>>0]=a[Nc+0>>0]|0;a[Sc+1>>0]=a[Nc+1>>0]|0;a[Sc+2>>0]=a[Nc+2>>0]|0;a[Sc+3>>0]=a[Nc+3>>0]|0;c[Uc>>2]=Tc;Hd=c[Uc>>2]|0;a[Vc+0>>0]=a[Sc+0>>0]|0;a[Vc+1>>0]=a[Sc+1>>0]|0;a[Vc+2>>0]=a[Sc+2>>0]|0;a[Vc+3>>0]=a[Sc+3>>0]|0;c[Wc>>2]=Hd;c[c[Wc>>2]>>2]=c[Vc>>2];c[Xc>>2]=Cc;c[Yc>>2]=Tc;do if((c[c[Xc>>2]>>2]|0)==(c[c[Yc>>2]>>2]|0)){g=(c[G>>2]|0)+(c[fc>>2]<<2)|0;c[gc>>2]=l;c[hc>>2]=g;hf(ic,c[gc>>2]|0,c[hc>>2]|0);c[rb>>2]=jc;c[lc>>2]=ic;g=c[lc>>2]|0;c[mc>>2]=c[rb>>2];c[nc>>2]=g;g=c[mc>>2]|0;Hd=c[nc>>2]|0;c[oc+0>>2]=c[Hd+0>>2];a[pc+0>>0]=a[oc+0>>0]|0;a[pc+1>>0]=a[oc+1>>0]|0;a[pc+2>>0]=a[oc+2>>0]|0;a[pc+3>>0]=a[oc+3>>0]|0;c[qc>>2]=g;Hd=c[qc>>2]|0;a[rc+0>>0]=a[pc+0>>0]|0;a[rc+1>>0]=a[pc+1>>0]|0;a[rc+2>>0]=a[pc+2>>0]|0;a[rc+3>>0]=a[pc+3>>0]|0;c[sc>>2]=Hd;c[c[sc>>2]>>2]=c[rc>>2];a[g+4>>0]=a[(c[nc>>2]|0)+4>>0]&1;g=(c[G>>2]|0)+(c[fc>>2]<<2)|0;c[tc>>2]=gb;c[uc>>2]=g;g=c[tc>>2]|0;Hd=c[g+4>>2]|0;c[vc>>2]=g;c[wc>>2]=(c[vc>>2]|0)+8;c[xc>>2]=c[wc>>2];if((Hd|0)==(c[c[xc>>2]>>2]|0)){Dh(g,c[uc>>2]|0);break}c[Zc>>2]=g;c[_c>>2]=(c[Zc>>2]|0)+8;c[$c>>2]=c[_c>>2];Gd=c[$c>>2]|0;c[ad>>2]=c[g+4>>2];Hd=c[ad>>2]|0;f=c[uc>>2]|0;c[bd>>2]=Gd;c[cd>>2]=Hd;c[dd>>2]=f;f=c[cd>>2]|0;if((f|0)!=0)c[f>>2]=c[c[dd>>2]>>2];Hd=g+4|0;c[Hd>>2]=(c[Hd>>2]|0)+4}while(0);c[fc>>2]=(c[fc>>2]|0)+1}c[zb>>2]=kb;c[Ab>>2]=c[zb>>2];c[Bb>>2]=c[Ab>>2];Gd=c[Bb>>2]|0;c[Cb>>2]=Gd;c[Eb>>2]=Db;c[Fb>>2]=-1;Hd=c[Fb>>2]|0;c[Gb>>2]=c[Eb>>2];c[Hb>>2]=Hd;c[c[Gb>>2]>>2]=0;c[Ib>>2]=c[Db>>2];c[Jb>>2]=Ib;c[Gd>>2]=0;c[Lb>>2]=Kb;c[Mb>>2]=-1;Hd=c[Mb>>2]|0;c[Nb>>2]=c[Lb>>2];c[Ob>>2]=Hd;c[c[Nb>>2]>>2]=0;c[Pb>>2]=c[Kb>>2];c[Qb>>2]=Pb;c[Gd+4>>2]=0;c[Sb>>2]=Rb;c[Tb>>2]=-1;Hd=c[Tb>>2]|0;c[Ub>>2]=c[Sb>>2];c[Vb>>2]=Hd;c[c[Ub>>2]>>2]=0;c[Wb>>2]=c[Rb>>2];c[Xb>>2]=Wb;c[Yb>>2]=Gd+8;c[Zb>>2]=0;Gd=c[Zb>>2]|0;c[_b>>2]=c[Yb>>2];c[$b>>2]=Gd;Gd=c[_b>>2]|0;c[ac>>2]=$b;Hd=c[c[ac>>2]>>2]|0;c[bc>>2]=Gd;c[cc>>2]=Hd;Hd=c[bc>>2]|0;c[dc>>2]=Hd;c[ec>>2]=cc;c[Hd>>2]=c[c[ec>>2]>>2];c[tb>>2]=0;while(1){Gd=c[tb>>2]|0;c[ub>>2]=gb;Hd=c[ub>>2]|0;if(!(Gd>>>0<(((c[Hd+4>>2]|0)-(c[Hd>>2]|0)|0)/4|0)>>>0))break;c[sb>>2]=(c[tb>>2]|0)+1;while(1){Gd=c[sb>>2]|0;c[kc>>2]=gb;Hd=c[kc>>2]|0;if(!(Gd>>>0<(((c[Hd+4>>2]|0)-(c[Hd>>2]|0)|0)/4|0)>>>0))break;Fd=c[z>>2]|0;Gd=c[C>>2]|0;Hd=c[tb>>2]|0;c[vb>>2]=gb;c[wb>>2]=Hd;Hd=c[(c[c[vb>>2]>>2]|0)+(c[wb>>2]<<2)>>2]|0;Ed=c[sb>>2]|0;c[xb>>2]=gb;c[yb>>2]=Ed;qh(Fd,Gd,Hd,c[(c[c[xb>>2]>>2]|0)+(c[yb>>2]<<2)>>2]|0,kb);c[sb>>2]=(c[sb>>2]|0)+1}c[tb>>2]=(c[tb>>2]|0)+1}a:while(1){c[q>>2]=gb;Hd=c[q>>2]|0;if(!((((c[Hd+4>>2]|0)-(c[Hd>>2]|0)|0)/4|0)>>>0>(c[r>>2]|0)>>>0))break;c[n>>2]=kb;c[o>>2]=0;if(+h[(c[c[n>>2]>>2]|0)+(c[o>>2]<<5)+24>>3]>=+h[p>>3]){h[p>>3]=1.0e+99;c[r>>2]=c[s>>2];continue}c[t>>2]=kb;c[u>>2]=0;c[v>>2]=c[(c[c[t>>2]>>2]|0)+(c[u>>2]<<5)>>2];c[w>>2]=kb;c[x>>2]=0;c[y>>2]=c[(c[c[w>>2]>>2]|0)+(c[x>>2]<<5)+4>>2];ph((c[z>>2]|0)+((c[v>>2]|0)*1040|0)|0,(c[z>>2]|0)+((c[y>>2]|0)*1040|0)|0);c[A>>2]=kb;c[B>>2]=0;h[(c[z>>2]|0)+((c[v>>2]|0)*1040|0)+1032>>3]=+h[(c[c[A>>2]>>2]|0)+(c[B>>2]<<5)+16>>3];Hd=(c[C>>2]|0)+(c[v>>2]<<2)|0;c[Hd>>2]=(c[Hd>>2]|0)+(c[(c[C>>2]|0)+(c[y>>2]<<2)>>2]|0);c[D>>2]=0;while(1){if((c[D>>2]|0)>=(c[E>>2]|0))break;if((c[(c[G>>2]|0)+(c[D>>2]<<2)>>2]|0)==(c[y>>2]|0))c[(c[G>>2]|0)+(c[D>>2]<<2)>>2]=c[v>>2];c[D>>2]=(c[D>>2]|0)+1}c[F>>2]=0;while(1){Gd=(c[F>>2]|0)+1|0;c[H>>2]=gb;Hd=c[H>>2]|0;if(!(Gd>>>0<(((c[Hd+4>>2]|0)-(c[Hd>>2]|0)|0)/4|0)>>>0))break;Hd=c[F>>2]|0;c[N>>2]=gb;c[O>>2]=Hd;if((c[(c[c[N>>2]>>2]|0)+(c[O>>2]<<2)>>2]|0)>=(c[y>>2]|0)){Hd=(c[F>>2]|0)+1|0;c[P>>2]=gb;c[Q>>2]=Hd;Hd=c[(c[c[P>>2]>>2]|0)+(c[Q>>2]<<2)>>2]|0;Gd=c[F>>2]|0;c[R>>2]=gb;c[S>>2]=Gd;c[(c[c[R>>2]>>2]|0)+(c[S>>2]<<2)>>2]=Hd}c[F>>2]=(c[F>>2]|0)+1}c[I>>2]=gb;Hd=c[I>>2]|0;rb=(c[Hd+4>>2]|0)+ -4|0;c[J>>2]=Hd;c[K>>2]=rb;rb=c[K>>2]|0;c[L>>2]=c[J>>2];c[M>>2]=rb;rb=c[L>>2]|0;while(1){if((c[M>>2]|0)==(c[rb+4>>2]|0))break;c[U>>2]=rb;c[V>>2]=(c[U>>2]|0)+8;c[W>>2]=c[V>>2];Hd=c[W>>2]|0;Fd=rb+4|0;Gd=(c[Fd>>2]|0)+ -4|0;c[Fd>>2]=Gd;c[X>>2]=Gd;Gd=c[X>>2]|0;c[Y>>2]=Hd;c[Z>>2]=Gd;Gd=c[Y>>2]|0;Hd=c[Z>>2]|0;a[$+0>>0]=a[_+0>>0]|0;c[aa>>2]=Gd;c[ba>>2]=Hd}c[T>>2]=0;while(1){Gd=c[T>>2]|0;c[ca>>2]=kb;Hd=c[ca>>2]|0;if(!(Gd>>>0<(((c[Hd+4>>2]|0)-(c[Hd>>2]|0)|0)/32|0)>>>0))break;Hd=c[T>>2]|0;c[da>>2]=kb;c[ea>>2]=Hd;c[fa>>2]=(c[c[da>>2]>>2]|0)+(c[ea>>2]<<5);if(!((((c[c[fa>>2]>>2]|0)!=(c[v>>2]|0)?(c[(c[fa>>2]|0)+4>>2]|0)!=(c[v>>2]|0):0)?(c[c[fa>>2]>>2]|0)!=(c[y>>2]|0):0)?(c[(c[fa>>2]|0)+4>>2]|0)!=(c[y>>2]|0):0))a[(c[fa>>2]|0)+8>>0]=0;c[T>>2]=(c[T>>2]|0)+1}b:while(1){c[ga>>2]=kb;Hd=c[ga>>2]|0;if((c[Hd>>2]|0)==(c[Hd+4>>2]|0))break;c[ia>>2]=kb;c[ja>>2]=0;if(!(a[(c[c[ia>>2]>>2]|0)+(c[ja>>2]<<5)+8>>0]&1^1))break;c[ka>>2]=kb;Hd=c[ka>>2]|0;Gd=c[Hd>>2]|0;c[la>>2]=Hd;c[ma>>2]=Gd;Gd=c[ma>>2]|0;c[oa>>2]=na;c[pa>>2]=Gd;Gd=c[pa>>2]|0;c[qa>>2]=c[oa>>2];c[ra>>2]=Gd;c[c[qa>>2]>>2]=c[ra>>2];c[sa>>2]=kb;Gd=c[sa>>2]|0;Hd=c[Gd+4>>2]|0;c[ta>>2]=Gd;c[ua>>2]=Hd;Hd=c[ua>>2]|0;c[wa>>2]=va;c[xa>>2]=Hd;Hd=c[xa>>2]|0;c[ya>>2]=c[wa>>2];c[za>>2]=Hd;c[c[ya>>2]>>2]=c[za>>2];a[Aa+0>>0]=a[na+0>>0]|0;a[Aa+1>>0]=a[na+1>>0]|0;a[Aa+2>>0]=a[na+2>>0]|0;a[Aa+3>>0]=a[na+3>>0]|0;a[Ba+0>>0]=a[va+0>>0]|0;a[Ba+1>>0]=a[va+1>>0]|0;a[Ba+2>>0]=a[va+2>>0]|0;a[Ba+3>>0]=a[va+3>>0]|0;a[Da+0>>0]=a[Ca+0>>0]|0;c[Ea+0>>2]=c[Aa+0>>2];c[Fa+0>>2]=c[Ba+0>>2];c[Ga>>2]=Ba;c[Ha>>2]=Aa;c[Ia>>2]=c[Ga>>2];Hd=c[c[Ia>>2]>>2]|0;c[Ja>>2]=c[Ha>>2];Hd=(Hd-(c[c[Ja>>2]>>2]|0)|0)/32|0;a[Ka+0>>0]=a[Ea+0>>0]|0;a[Ka+1>>0]=a[Ea+1>>0]|0;a[Ka+2>>0]=a[Ea+2>>0]|0;a[Ka+3>>0]=a[Ea+3>>0]|0;a[La+0>>0]=a[Fa+0>>0]|0;a[La+1>>0]=a[Fa+1>>0]|0;a[La+2>>0]=a[Fa+2>>0]|0;a[La+3>>0]=a[Fa+3>>0]|0;c[Ma>>2]=Da;c[Na>>2]=Hd;if((c[Na>>2]|0)>1){c[Oa>>2]=Ka;Hd=c[c[Oa>>2]>>2]|0;c[Pa>>2]=La;Gd=c[Pa>>2]|0;c[Gd>>2]=(c[Gd>>2]|0)+ -32;c[Qa>>2]=Gd;Gd=c[c[Qa>>2]>>2]|0;c[Ra>>2]=Hd;c[Sa>>2]=Gd;c[Ta>>2]=c[Ra>>2];Gd=c[Ta>>2]|0;c[Ua+0>>2]=c[Gd+0>>2];c[Ua+4>>2]=c[Gd+4>>2];c[Ua+8>>2]=c[Gd+8>>2];c[Ua+12>>2]=c[Gd+12>>2];c[Ua+16>>2]=c[Gd+16>>2];c[Ua+20>>2]=c[Gd+20>>2];c[Ua+24>>2]=c[Gd+24>>2];c[Ua+28>>2]=c[Gd+28>>2];Gd=c[Ra>>2]|0;c[Va>>2]=c[Sa>>2];Hd=c[Va>>2]|0;c[Gd+0>>2]=c[Hd+0>>2];c[Gd+4>>2]=c[Hd+4>>2];c[Gd+8>>2]=c[Hd+8>>2];c[Gd+12>>2]=c[Hd+12>>2];c[Gd+16>>2]=c[Hd+16>>2];c[Gd+20>>2]=c[Hd+20>>2];c[Gd+24>>2]=c[Hd+24>>2];c[Gd+28>>2]=c[Hd+28>>2];Gd=c[Sa>>2]|0;c[Wa>>2]=Ua;Hd=c[Wa>>2]|0;c[Gd+0>>2]=c[Hd+0>>2];c[Gd+4>>2]=c[Hd+4>>2];c[Gd+8>>2]=c[Hd+8>>2];c[Gd+12>>2]=c[Hd+12>>2];c[Gd+16>>2]=c[Hd+16>>2];c[Gd+20>>2]=c[Hd+20>>2];c[Gd+24>>2]=c[Hd+24>>2];c[Gd+28>>2]=c[Hd+28>>2];c[Xa+0>>2]=c[Ka+0>>2];c[Ya+0>>2]=c[La+0>>2];Gd=c[Ma>>2]|0;Hd=(c[Na>>2]|0)-1|0;c[Za+0>>2]=c[Xa+0>>2];c[_a+0>>2]=c[Ya+0>>2];sf(Za,_a,Gd,Hd)}c[$a>>2]=kb;Hd=c[$a>>2]|0;rb=(c[Hd+4>>2]|0)+ -32|0;c[ab>>2]=Hd;c[bb>>2]=rb;rb=c[bb>>2]|0;c[cb>>2]=c[ab>>2];c[db>>2]=rb;rb=c[cb>>2]|0;while(1){if((c[db>>2]|0)==(c[rb+4>>2]|0))continue b;c[eb>>2]=rb;c[fb>>2]=(c[eb>>2]|0)+8;c[j>>2]=c[fb>>2];Hd=c[j>>2]|0;Fd=rb+4|0;Gd=(c[Fd>>2]|0)+ -32|0;c[Fd>>2]=Gd;c[hb>>2]=Gd;Gd=c[hb>>2]|0;c[ib>>2]=Hd;c[jb>>2]=Gd;Gd=c[ib>>2]|0;Hd=c[jb>>2]|0;a[lb+0>>0]=a[k+0>>0]|0;c[mb>>2]=Gd;c[nb>>2]=Hd}}c[ha>>2]=0;while(1){Gd=c[ha>>2]|0;c[ob>>2]=gb;Hd=c[ob>>2]|0;if(!(Gd>>>0<(((c[Hd+4>>2]|0)-(c[Hd>>2]|0)|0)/4|0)>>>0))continue a;Fd=c[z>>2]|0;Gd=c[C>>2]|0;Hd=c[v>>2]|0;Ed=c[ha>>2]|0;c[pb>>2]=gb;c[qb>>2]=Ed;qh(Fd,Gd,Hd,c[(c[c[pb>>2]>>2]|0)+(c[qb>>2]<<2)>>2]|0,kb);c[ha>>2]=(c[ha>>2]|0)+1}}pf(kb);we(gb);bf(l);i=m;return}function hh(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0;Y=i;i=i+480|0;C=Y+432|0;B=Y+16|0;A=Y+200|0;y=Y+32|0;w=Y+304|0;x=Y+372|0;u=Y+360|0;v=Y+312|0;s=Y+196|0;r=Y+256|0;q=Y+128|0;p=Y+120|0;o=Y+444|0;n=Y+104|0;m=Y+100|0;t=Y+412|0;G=Y+96|0;H=Y+416|0;E=Y+236|0;F=Y+436|0;I=Y+112|0;W=Y+116|0;V=Y+72|0;U=Y+124|0;T=Y+8|0;R=Y+132|0;S=Y+136|0;P=Y+404|0;Q=Y+140|0;N=Y+144|0;M=Y+148|0;L=Y+152|0;O=Y+156|0;La=Y+160|0;Ka=Y+164|0;K=Y+168|0;Ia=Y+172|0;pa=Y+176|0;qa=Y+180|0;na=Y+184|0;oa=Y+188|0;la=Y+192|0;ka=Y+24|0;ja=Y+400|0;ha=Y+40|0;fa=Y+204|0;ga=Y+208|0;da=Y+212|0;j=Y+216|0;ba=Y+220|0;aa=Y+468|0;$=Y+472|0;_=Y+440|0;Z=Y+448|0;g=Y+240|0;X=Y+244|0;ca=Y+248|0;Ga=Y+252|0;Fa=Y+48|0;Ea=Y+260|0;Da=Y;Ba=Y+268|0;Ca=Y+272|0;za=Y+276|0;Aa=Y+280|0;xa=Y+284|0;wa=Y+288|0;va=Y+292|0;ya=Y+296|0;Za=Y+300|0;Ya=Y+80|0;Xa=Y+308|0;Wa=Y+64|0;Ta=Y+316|0;Ua=Y+320|0;Va=Y+396|0;Ra=Y+324|0;Sa=Y+328|0;Na=Y+332|0;Oa=Y+336|0;Pa=Y+344|0;$a=Y+352|0;_a=Y+356|0;ab=Y+452|0;bb=Y+364|0;sa=Y+460|0;l=Y+464|0;J=Y+376|0;Ha=Y+380|0;ea=Y+384|0;Ma=Y+408|0;Qa=Y+424|0;ta=Y+228|0;ra=Y+232|0;ua=Y+88|0;ma=Y+456|0;ia=Y+264|0;Ja=Y+56|0;D=Y+368|0;z=Y+224|0;k=Y+108|0;c[sa>>2]=b;c[l>>2]=d;c[J>>2]=e;c[Ha>>2]=f;c[ab>>2]=ea;c[bb>>2]=Y+476;b=c[bb>>2]|0;c[$a>>2]=c[ab>>2];c[_a>>2]=b;mf(c[$a>>2]|0,c[_a>>2]|0);c[Ma>>2]=0;while(1){if((c[Ma>>2]|0)>=(c[l>>2]|0))break;bb=(c[Ha>>2]|0)+(c[Ma>>2]<<2)|0;c[Na>>2]=ea;c[Oa>>2]=bb;hf(Pa,c[Na>>2]|0,c[Oa>>2]|0);c[Ra>>2]=Qa;c[Sa>>2]=Pa;bb=c[Sa>>2]|0;c[Ta>>2]=c[Ra>>2];c[Ua>>2]=bb;bb=c[Ta>>2]|0;ab=c[Ua>>2]|0;c[Va+0>>2]=c[ab+0>>2];a[Wa+0>>0]=a[Va+0>>0]|0;a[Wa+1>>0]=a[Va+1>>0]|0;a[Wa+2>>0]=a[Va+2>>0]|0;a[Wa+3>>0]=a[Va+3>>0]|0;c[Xa>>2]=bb;ab=c[Xa>>2]|0;a[Ya+0>>0]=a[Wa+0>>0]|0;a[Ya+1>>0]=a[Wa+1>>0]|0;a[Ya+2>>0]=a[Wa+2>>0]|0;a[Ya+3>>0]=a[Wa+3>>0]|0;c[Za>>2]=ab;c[c[Za>>2]>>2]=c[Ya>>2];a[bb+4>>0]=a[(c[Ua>>2]|0)+4>>0]&1;c[Ma>>2]=(c[Ma>>2]|0)+1}c[ta>>2]=0;while(1){if((c[ta>>2]|0)>=(c[l>>2]|0))break;if((c[ta>>2]|0)==0)f=c[c[Ha>>2]>>2]|0;else f=c[(c[Ha>>2]|0)+((c[ta>>2]|0)-1<<2)>>2]|0;c[ra>>2]=f;h[ua>>3]=+oh((c[sa>>2]|0)+((c[ta>>2]|0)*1040|0)|0,(c[J>>2]|0)+((c[ra>>2]|0)*1040|0)|0);c[va>>2]=ea;c[wa>>2]=c[va>>2];c[xa>>2]=c[wa>>2];bb=c[c[xa>>2]>>2]|0;c[za>>2]=ya;c[Aa>>2]=bb;bb=c[Aa>>2]|0;c[Ba>>2]=c[za>>2];c[Ca>>2]=bb;c[c[Ba>>2]>>2]=c[Ca>>2];a[Da+0>>0]=a[ya+0>>0]|0;a[Da+1>>0]=a[ya+1>>0]|0;a[Da+2>>0]=a[ya+2>>0]|0;a[Da+3>>0]=a[ya+3>>0]|0;c[Ea>>2]=ma;bb=c[Ea>>2]|0;a[Fa+0>>0]=a[Da+0>>0]|0;a[Fa+1>>0]=a[Da+1>>0]|0;a[Fa+2>>0]=a[Da+2>>0]|0;a[Fa+3>>0]=a[Da+3>>0]|0;c[Ga>>2]=bb;c[c[Ga>>2]>>2]=c[Fa>>2];while(1){c[X>>2]=ea;c[g>>2]=c[X>>2];c[Z>>2]=c[g>>2];c[_>>2]=(c[Z>>2]|0)+4;c[$>>2]=c[_>>2];c[aa>>2]=c[$>>2];c[ba>>2]=c[aa>>2];bb=c[ba>>2]|0;c[da>>2]=ca;c[j>>2]=bb;bb=c[j>>2]|0;c[fa>>2]=c[da>>2];c[ga>>2]=bb;c[c[fa>>2]>>2]=c[ga>>2];a[ha+0>>0]=a[ca+0>>0]|0;a[ha+1>>0]=a[ca+1>>0]|0;a[ha+2>>0]=a[ca+2>>0]|0;a[ha+3>>0]=a[ca+3>>0]|0;c[ja>>2]=ia;bb=c[ja>>2]|0;a[ka+0>>0]=a[ha+0>>0]|0;a[ka+1>>0]=a[ha+1>>0]|0;a[ka+2>>0]=a[ha+2>>0]|0;a[ka+3>>0]=a[ha+3>>0]|0;c[la>>2]=bb;c[c[la>>2]>>2]=c[ka>>2];c[na>>2]=ma;c[oa>>2]=ia;bb=c[oa>>2]|0;c[pa>>2]=c[na>>2];c[qa>>2]=bb;if(!((c[c[pa>>2]>>2]|0)==(c[c[qa>>2]>>2]|0)^1))break;bb=(c[sa>>2]|0)+((c[ta>>2]|0)*1040|0)|0;c[Ia>>2]=ma;h[Ja>>3]=+oh(bb,(c[J>>2]|0)+((c[(c[c[Ia>>2]>>2]|0)+16>>2]|0)*1040|0)|0);if(+h[Ja>>3]<+h[ua>>3]){h[ua>>3]=+h[Ja>>3];c[Ka>>2]=ma;c[ra>>2]=c[(c[c[Ka>>2]>>2]|0)+16>>2]}c[La>>2]=ma;bb=c[La>>2]|0;c[bb>>2]=gf(c[bb>>2]|0)|0}c[(c[Ha>>2]|0)+(c[ta>>2]<<2)>>2]=c[ra>>2];c[ta>>2]=(c[ta>>2]|0)+1}c[L>>2]=ea;c[M>>2]=c[L>>2];c[N>>2]=c[M>>2];bb=c[c[N>>2]>>2]|0;c[P>>2]=O;c[Q>>2]=bb;bb=c[Q>>2]|0;c[R>>2]=c[P>>2];c[S>>2]=bb;c[c[R>>2]>>2]=c[S>>2];a[T+0>>0]=a[O+0>>0]|0;a[T+1>>0]=a[O+1>>0]|0;a[T+2>>0]=a[O+2>>0]|0;a[T+3>>0]=a[O+3>>0]|0;c[U>>2]=D;bb=c[U>>2]|0;a[V+0>>0]=a[T+0>>0]|0;a[V+1>>0]=a[T+1>>0]|0;a[V+2>>0]=a[T+2>>0]|0;a[V+3>>0]=a[T+3>>0]|0;c[W>>2]=bb;c[c[W>>2]>>2]=c[V>>2];while(1){c[m>>2]=ea;c[n>>2]=c[m>>2];c[o>>2]=c[n>>2];c[p>>2]=(c[o>>2]|0)+4;c[q>>2]=c[p>>2];c[r>>2]=c[q>>2];c[s>>2]=c[r>>2];bb=c[s>>2]|0;c[u>>2]=t;c[v>>2]=bb;bb=c[v>>2]|0;c[w>>2]=c[u>>2];c[x>>2]=bb;c[c[w>>2]>>2]=c[x>>2];a[y+0>>0]=a[t+0>>0]|0;a[y+1>>0]=a[t+1>>0]|0;a[y+2>>0]=a[t+2>>0]|0;a[y+3>>0]=a[t+3>>0]|0;c[A>>2]=z;bb=c[A>>2]|0;a[B+0>>0]=a[y+0>>0]|0;a[B+1>>0]=a[y+1>>0]|0;a[B+2>>0]=a[y+2>>0]|0;a[B+3>>0]=a[y+3>>0]|0;c[C>>2]=bb;c[c[C>>2]>>2]=c[B>>2];c[E>>2]=D;c[F>>2]=z;bb=c[F>>2]|0;c[G>>2]=c[E>>2];c[H>>2]=bb;if(!((c[c[G>>2]>>2]|0)==(c[c[H>>2]>>2]|0)^1))break;c[I>>2]=D;ch((c[J>>2]|0)+((c[(c[c[I>>2]>>2]|0)+16>>2]|0)*1040|0)|0);c[K>>2]=D;bb=c[K>>2]|0;c[bb>>2]=gf(c[bb>>2]|0)|0}c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[l>>2]|0))break;ph((c[J>>2]|0)+((c[(c[Ha>>2]|0)+(c[k>>2]<<2)>>2]|0)*1040|0)|0,(c[sa>>2]|0)+((c[k>>2]|0)*1040|0)|0);c[k>>2]=(c[k>>2]|0)+1}bf(ea);i=Y;return}function ih(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0;g=i;i=i+288|0;y=g+212|0;z=g+88|0;w=g+224|0;x=g+60|0;k=g+232|0;l=g+140|0;m=g+256|0;u=g+220|0;v=g+156|0;n=g+84|0;o=g+80|0;s=g+64|0;t=g+68|0;ba=g+72|0;ca=g+76|0;$=g+216|0;aa=g+180|0;_=g+152|0;Z=g+16|0;Y=g+92|0;W=g+32|0;U=g+100|0;V=g+104|0;S=g+108|0;T=g+112|0;Q=g+236|0;P=g+120|0;O=g+252|0;N=g+260|0;M=g+268|0;L=g+144|0;K=g+272|0;R=g+244|0;J=g+176|0;I=g+8|0;H=g+160|0;e=g+24|0;C=g+148|0;D=g+164|0;E=g+168|0;A=g+172|0;B=g+96|0;da=g+184|0;fa=g+188|0;ga=g;ia=g+192|0;ha=g+40|0;ka=g+200|0;ea=g+276|0;ja=g+277|0;la=g+228|0;ma=g+116|0;p=g+196|0;j=g+240|0;f=g+44|0;F=g+124|0;q=g+136|0;r=g+264|0;G=g+248|0;X=g+56|0;h=g+208|0;c[p>>2]=b;c[j>>2]=d;jh(f,c[p>>2]|0);c[la>>2]=F;c[ma>>2]=g+278;b=c[ma>>2]|0;c[ka>>2]=c[la>>2];c[g+204>>2]=b;b=c[ka>>2]|0;a[ha+0>>0]=a[ja+0>>0]|0;c[ia>>2]=ea;d=c[ia>>2]|0;a[ga+0>>0]=a[ha+0>>0]|0;c[fa>>2]=d;Ve(b,ea);c[q>>2]=0;c[r>>2]=0;while(1){la=c[r>>2]|0;c[da>>2]=c[j>>2];ma=c[da>>2]|0;if(!(la>>>0<(((c[ma+4>>2]|0)-(c[ma>>2]|0)|0)/4|0)>>>0))break;ma=c[r>>2]|0;c[A>>2]=c[j>>2];c[B>>2]=ma;ma=(c[c[A>>2]>>2]|0)+(c[B>>2]<<2)|0;c[C>>2]=F;c[D>>2]=ma;Te(E,c[C>>2]|0,c[D>>2]|0);a[e+0>>0]=a[E+0>>0]|0;a[e+1>>0]=a[E+1>>0]|0;a[e+2>>0]=a[E+2>>0]|0;a[e+3>>0]=a[E+3>>0]|0;c[H>>2]=G;ma=c[H>>2]|0;a[I+0>>0]=a[e+0>>0]|0;a[I+1>>0]=a[e+1>>0]|0;a[I+2>>0]=a[e+2>>0]|0;a[I+3>>0]=a[e+3>>0]|0;c[J>>2]=ma;ma=c[J>>2]|0;c[ma+0>>2]=c[I+0>>2];c[K>>2]=F;c[L>>2]=c[K>>2];c[M>>2]=c[L>>2];c[N>>2]=(c[M>>2]|0)+4;c[O>>2]=c[N>>2];c[P>>2]=c[O>>2];c[Q>>2]=c[P>>2];ma=c[Q>>2]|0;c[S>>2]=R;c[T>>2]=ma;ma=c[T>>2]|0;c[U>>2]=c[S>>2];c[V>>2]=ma;c[c[U>>2]>>2]=c[V>>2];a[W+0>>0]=a[R+0>>0]|0;a[W+1>>0]=a[R+1>>0]|0;a[W+2>>0]=a[R+2>>0]|0;a[W+3>>0]=a[R+3>>0]|0;c[Y>>2]=X;ma=c[Y>>2]|0;a[Z+0>>0]=a[W+0>>0]|0;a[Z+1>>0]=a[W+1>>0]|0;a[Z+2>>0]=a[W+2>>0]|0;a[Z+3>>0]=a[W+3>>0]|0;c[_>>2]=ma;ma=c[_>>2]|0;c[ma+0>>2]=c[Z+0>>2];c[$>>2]=G;c[aa>>2]=X;ma=c[aa>>2]|0;c[ba>>2]=c[$>>2];c[ca>>2]=ma;if((c[c[ba>>2]>>2]|0)==(c[c[ca>>2]>>2]|0)){ma=c[q>>2]|0;la=c[r>>2]|0;c[s>>2]=c[j>>2];c[t>>2]=la;c[(He(F,(c[c[s>>2]>>2]|0)+(c[t>>2]<<2)|0)|0)>>2]=ma;ma=c[q>>2]|0;c[u>>2]=c[p>>2];c[v>>2]=ma;ma=(c[c[u>>2]>>2]|0)+((c[v>>2]|0)*1040|0)|0;la=c[r>>2]|0;c[w>>2]=c[j>>2];c[x>>2]=la;la=c[(c[c[w>>2]>>2]|0)+(c[x>>2]<<2)>>2]|0;c[y>>2]=f;c[z>>2]=la;qz(ma|0,(c[c[y>>2]>>2]|0)+((c[z>>2]|0)*1040|0)|0,1040)|0;c[q>>2]=(c[q>>2]|0)+1}c[r>>2]=(c[r>>2]|0)+1}eh(c[p>>2]|0,c[q>>2]|0);c[h>>2]=0;while(1){la=c[h>>2]|0;c[k>>2]=c[j>>2];ma=c[k>>2]|0;if(!(la>>>0<(((c[ma+4>>2]|0)-(c[ma>>2]|0)|0)/4|0)>>>0))break;ma=c[h>>2]|0;c[l>>2]=c[j>>2];c[m>>2]=ma;ma=c[(He(F,(c[c[l>>2]>>2]|0)+(c[m>>2]<<2)|0)|0)>>2]|0;la=c[h>>2]|0;c[n>>2]=c[j>>2];c[o>>2]=la;c[(c[c[n>>2]>>2]|0)+(c[o>>2]<<2)>>2]=ma;c[h>>2]=(c[h>>2]|0)+1}Ie(F);Zg(f);i=g;return}function jh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;kh(c[f>>2]|0,c[e>>2]|0);i=d;return}function kh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;e=i;i=i+208|0;h=e+96|0;P=e+80|0;Q=e+76|0;S=e+176|0;R=e+184|0;O=e+36|0;M=e+156|0;I=e+144|0;J=e+92|0;L=e+60|0;K=e+56|0;H=e+40|0;F=e+44|0;B=e+48|0;C=e+52|0;E=e+140|0;D=e+116|0;A=e+88|0;y=e+72|0;q=e+164|0;j=e+172|0;l=e+180|0;n=e+188|0;k=e+192|0;m=e+16|0;s=e+196|0;o=e+100|0;t=e+104|0;p=e+200|0;r=e+8|0;u=e+112|0;w=e+136|0;v=e+24|0;T=e+120|0;U=e+124|0;V=e+128|0;N=e+132|0;G=e+32|0;z=e+64|0;x=e+202|0;X=e+148|0;Y=e;_=e+160|0;Z=e+203|0;$=e+152|0;aa=e+28|0;ba=e+84|0;ca=e+68|0;g=e+168|0;W=e+201|0;f=e+108|0;c[ca>>2]=b;c[g>>2]=d;d=c[ca>>2]|0;c[ba>>2]=c[g>>2];c[aa>>2]=(c[ba>>2]|0)+8;c[$>>2]=c[aa>>2];c[_>>2]=c[$>>2];b=c[_>>2]|0;a[Y+0>>0]=a[Z+0>>0]|0;c[X>>2]=b;c[U>>2]=d;c[V>>2]=W;b=c[U>>2]|0;c[T>>2]=b;c[S>>2]=O;c[R>>2]=-1;R=c[R>>2]|0;c[P>>2]=c[S>>2];c[Q>>2]=R;c[c[P>>2]>>2]=0;c[N>>2]=c[O>>2];c[M>>2]=N;c[b>>2]=0;c[L>>2]=H;c[K>>2]=-1;K=c[K>>2]|0;c[I>>2]=c[L>>2];c[J>>2]=K;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[F>>2]=G;c[b+4>>2]=0;b=b+8|0;c[E>>2]=A;c[D>>2]=-1;D=c[D>>2]|0;c[B>>2]=c[E>>2];c[C>>2]=D;c[c[B>>2]>>2]=0;c[z>>2]=c[A>>2];c[y>>2]=z;a[v+0>>0]=a[x+0>>0]|0;c[u>>2]=b;c[w>>2]=0;u=c[u>>2]|0;b=c[w>>2]|0;a[r+0>>0]=a[v+0>>0]|0;c[o>>2]=u;c[t>>2]=b;o=c[o>>2]|0;c[s>>2]=t;b=c[c[s>>2]>>2]|0;c[q>>2]=r;a[m+0>>0]=a[p+0>>0]|0;c[n>>2]=o;c[k>>2]=b;b=c[n>>2]|0;c[l>>2]=m;c[j>>2]=k;c[b>>2]=c[c[j>>2]>>2];c[h>>2]=c[g>>2];b=c[h>>2]|0;c[f>>2]=((c[b+4>>2]|0)-(c[b>>2]|0)|0)/1040|0;if(!((c[f>>2]|0)>>>0>0)){i=e;return}lh(d,c[f>>2]|0);mh(d,c[c[g>>2]>>2]|0,c[(c[g>>2]|0)+4>>2]|0);i=e;return}function lh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;k=i;i=i+64|0;d=k+36|0;e=k+8|0;l=k+32|0;j=k+40|0;f=k+48|0;g=k+16|0;m=k;n=k+24|0;o=k+4|0;p=k+28|0;h=k+20|0;c[p>>2]=a;c[h>>2]=b;b=c[p>>2]|0;a=c[h>>2]|0;if(a>>>0>(nh(b)|0)>>>0)Zt(b);else{c[o>>2]=b;c[n>>2]=(c[o>>2]|0)+8;c[m>>2]=c[n>>2];p=c[h>>2]|0;c[e>>2]=c[m>>2];c[l>>2]=p;p=c[l>>2]|0;c[k+44>>2]=c[e>>2];c[d>>2]=p;c[k+12>>2]=0;p=Gx((c[d>>2]|0)*1040|0)|0;c[b+4>>2]=p;c[b>>2]=p;p=(c[b>>2]|0)+((c[h>>2]|0)*1040|0)|0;c[g>>2]=b;c[f>>2]=(c[g>>2]|0)+8;c[j>>2]=c[f>>2];c[c[j>>2]>>2]=p;i=k;return}}function mh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;k=i;i=i+48|0;g=k+36|0;j=k+16|0;e=k;l=k+28|0;n=k+32|0;o=k+40|0;p=k+12|0;q=k+24|0;h=k+20|0;m=k+8|0;f=k+4|0;c[q>>2]=a;c[h>>2]=b;c[m>>2]=d;d=c[q>>2]|0;c[p>>2]=d;c[o>>2]=(c[p>>2]|0)+8;c[n>>2]=c[o>>2];c[f>>2]=c[n>>2];while(1){if((c[h>>2]|0)==(c[m>>2]|0))break;p=c[f>>2]|0;c[g>>2]=c[d+4>>2];q=c[g>>2]|0;b=c[h>>2]|0;c[j>>2]=p;c[e>>2]=q;c[l>>2]=b;b=c[e>>2]|0;if((b|0)!=0)qz(b|0,c[l>>2]|0,1040)|0;q=d+4|0;c[q>>2]=(c[q>>2]|0)+1040;c[h>>2]=(c[h>>2]|0)+1040}i=k;return}function nh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+80|0;q=h+44|0;r=h+40|0;s=h+8|0;u=h+12|0;t=h+76|0;k=h+36|0;g=h+16|0;f=h+20|0;d=h+68|0;e=h+32|0;l=h;n=h+48|0;j=h+52|0;m=h+77|0;v=h+60|0;w=h+64|0;x=h+28|0;y=h+24|0;p=h+56|0;o=h+72|0;c[y>>2]=b;c[x>>2]=c[y>>2];c[w>>2]=(c[x>>2]|0)+8;c[v>>2]=c[w>>2];c[u>>2]=c[v>>2];b=c[u>>2]|0;a[s+0>>0]=a[t+0>>0]|0;c[r>>2]=b;c[q>>2]=c[r>>2];c[p>>2]=4129776;c[o>>2]=4294967295/2|0;c[n>>2]=p;c[j>>2]=o;b=c[n>>2]|0;j=c[j>>2]|0;a[l+0>>0]=a[m+0>>0]|0;c[d>>2]=b;c[e>>2]=j;j=c[e>>2]|0;b=c[d>>2]|0;c[k>>2]=l;c[g>>2]=j;c[f>>2]=b;i=h;return c[((c[c[g>>2]>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0?c[e>>2]|0:c[d>>2]|0)>>2]|0}function oh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0.0;d=i;i=i+1056|0;e=d+1040|0;j=d+1052|0;f=d+1048|0;g=d;c[j>>2]=a;c[f>>2]=b;if((c[(c[j>>2]|0)+1024>>2]|0)==0){h[e>>3]=0.0;k=+h[e>>3];i=d;return+k}else{qz(g|0,c[j>>2]|0,1040)|0;ph(g,c[f>>2]|0);k=+fh(g);h[e>>3]=k- +h[(c[f>>2]|0)+1032>>3];k=+h[e>>3];i=d;return+k}return 0.0}function ph(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;g=d+8|0;f=d+4|0;e=d;c[g>>2]=a;c[f>>2]=b;b=c[g>>2]|0;a=b+1024|0;c[a>>2]=(c[a>>2]|0)+(c[(c[f>>2]|0)+1024>>2]|0);c[e>>2]=0;while(1){if((c[e>>2]|0)>=256)break;g=b+(c[e>>2]<<2)|0;c[g>>2]=(c[g>>2]|0)+(c[(c[f>>2]|0)+(c[e>>2]<<2)>>2]|0);c[e>>2]=(c[e>>2]|0)+1}i=d;return}function qh(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0.0;M=i;i=i+1344|0;k=M+1248|0;l=M+1308|0;ra=M+1200|0;ga=M+1300|0;qa=M+1192|0;na=M+1256|0;oa=M+1252|0;ma=M+1080|0;ja=M+1332|0;ka=M+1324|0;fa=M+1337|0;R=M+1292|0;T=M+1196|0;U=M+1208|0;r=M+1204|0;Q=M+1140|0;P=M+1276|0;O=M+1144|0;X=M+1148|0;W=M+1152|0;V=M+1156|0;_=M+1160|0;S=M+1164|0;H=M+1168|0;G=M+1272|0;J=M+1172|0;I=M+1176|0;j=M+1180|0;L=M+1184|0;N=M+1188|0;z=M+1296|0;y=M+1304|0;B=M+1312|0;A=M+1320|0;E=M+1328|0;D=M+1212|0;F=M+1216|0;ha=M+1220|0;ia=M+1224|0;m=M+1228|0;n=M+1268|0;p=M+1232|0;o=M+1236|0;s=M+1240|0;q=M+1244|0;u=M+8|0;w=M+24|0;x=M;pa=M+1260|0;ea=M+1264|0;sa=M+1136|0;da=M+1280|0;$=M+1284|0;t=M+1128|0;ta=M+1132|0;ca=M+1338|0;Z=M+1088|0;ba=M+1072|0;la=M+16|0;aa=M+32|0;Y=M+1120|0;K=M+1288|0;C=M+1316|0;v=M+1336|0;c[ea>>2]=b;c[sa>>2]=d;c[da>>2]=e;c[$>>2]=f;c[t>>2]=g;if((c[da>>2]|0)==(c[$>>2]|0)){i=M;return}if((c[$>>2]|0)<(c[da>>2]|0)){c[ta>>2]=c[$>>2];c[$>>2]=c[da>>2];c[da>>2]=c[ta>>2]}a[ca>>0]=0;c[Z+0>>2]=0;c[Z+4>>2]=0;c[Z+8>>2]=0;c[Z+12>>2]=0;c[Z+16>>2]=0;c[Z+20>>2]=0;c[Z+24>>2]=0;c[Z+28>>2]=0;c[Z>>2]=c[da>>2];c[Z+4>>2]=c[$>>2];a[Z+8>>0]=1;h[Z+24>>3]=+uf(c[(c[sa>>2]|0)+(c[da>>2]<<2)>>2]|0,c[(c[sa>>2]|0)+(c[$>>2]<<2)>>2]|0)*.5;g=Z+24|0;h[g>>3]=+h[g>>3]- +h[(c[ea>>2]|0)+((c[da>>2]|0)*1040|0)+1032>>3];g=Z+24|0;h[g>>3]=+h[g>>3]- +h[(c[ea>>2]|0)+((c[$>>2]|0)*1040|0)+1032>>3];g=(c[ea>>2]|0)+((c[$>>2]|0)*1040|0)|0;do if((c[(c[ea>>2]|0)+((c[da>>2]|0)*1040|0)+1024>>2]|0)!=0){if((c[g+1024>>2]|0)==0){h[Z+16>>3]=+h[(c[ea>>2]|0)+((c[da>>2]|0)*1040|0)+1032>>3];a[ca>>0]=1;break}c[pa>>2]=c[t>>2];b=c[pa>>2]|0;if((c[b>>2]|0)==(c[b+4>>2]|0))ua=1.0e+99;else{h[la>>3]=0.0;c[ha>>2]=c[t>>2];c[ia>>2]=0;b=(c[c[ha>>2]>>2]|0)+(c[ia>>2]<<5)+24|0;c[ja>>2]=la;c[ka>>2]=b;b=c[ja>>2]|0;d=c[ka>>2]|0;a[ma+0>>0]=a[fa+0>>0]|0;c[na>>2]=b;c[oa>>2]=d;d=c[na>>2]|0;b=c[oa>>2]|0;c[ra>>2]=ma;c[ga>>2]=d;c[qa>>2]=b;ua=+h[(+h[c[ga>>2]>>3]<+h[c[qa>>2]>>3]?c[oa>>2]|0:c[na>>2]|0)>>3]}h[ba>>3]=ua;qz(aa|0,(c[ea>>2]|0)+((c[da>>2]|0)*1040|0)|0,1040)|0;ph(aa,(c[ea>>2]|0)+((c[$>>2]|0)*1040|0)|0);h[Y>>3]=+fh(aa);if(+h[Y>>3]<+h[ba>>3]- +h[Z+24>>3]){h[Z+16>>3]=+h[Y>>3];a[ca>>0]=1}}else{h[Z+16>>3]=+h[g+1032>>3];a[ca>>0]=1}while(0);if(!(a[ca>>0]&1)){i=M;return}Y=Z+24|0;h[Y>>3]=+h[Y>>3]+ +h[Z+16>>3];c[_>>2]=c[t>>2];c[S>>2]=Z;Y=c[_>>2]|0;b=c[Y+4>>2]|0;c[V>>2]=Y;c[W>>2]=(c[V>>2]|0)+8;c[X>>2]=c[W>>2];if((b|0)!=(c[c[X>>2]>>2]|0)){c[O>>2]=Y;c[P>>2]=(c[O>>2]|0)+8;c[Q>>2]=c[P>>2];d=c[Q>>2]|0;c[R>>2]=c[Y+4>>2];b=c[R>>2]|0;O=c[S>>2]|0;c[T>>2]=d;c[U>>2]=b;c[r>>2]=O;O=c[U>>2]|0;if((O|0)!=0){b=c[r>>2]|0;c[O+0>>2]=c[b+0>>2];c[O+4>>2]=c[b+4>>2];c[O+8>>2]=c[b+8>>2];c[O+12>>2]=c[b+12>>2];c[O+16>>2]=c[b+16>>2];c[O+20>>2]=c[b+20>>2];c[O+24>>2]=c[b+24>>2];c[O+28>>2]=c[b+28>>2]}b=Y+4|0;c[b>>2]=(c[b>>2]|0)+32}else wf(Y,c[S>>2]|0);c[N>>2]=c[t>>2];b=c[N>>2]|0;d=c[b>>2]|0;c[j>>2]=b;c[L>>2]=d;d=c[L>>2]|0;c[J>>2]=K;c[I>>2]=d;d=c[I>>2]|0;c[H>>2]=c[J>>2];c[G>>2]=d;c[c[H>>2]>>2]=c[G>>2];c[F>>2]=c[t>>2];d=c[F>>2]|0;b=c[d+4>>2]|0;c[E>>2]=d;c[D>>2]=b;b=c[D>>2]|0;c[B>>2]=C;c[A>>2]=b;b=c[A>>2]|0;c[z>>2]=c[B>>2];c[y>>2]=b;c[c[z>>2]>>2]=c[y>>2];a[x+0>>0]=a[K+0>>0]|0;a[x+1>>0]=a[K+1>>0]|0;a[x+2>>0]=a[K+2>>0]|0;a[x+3>>0]=a[K+3>>0]|0;a[w+0>>0]=a[C+0>>0]|0;a[w+1>>0]=a[C+1>>0]|0;a[w+2>>0]=a[C+2>>0]|0;a[w+3>>0]=a[C+3>>0]|0;a[u+0>>0]=a[v+0>>0]|0;c[s+0>>2]=c[x+0>>2];c[q+0>>2]=c[w+0>>2];c[p>>2]=w;c[o>>2]=x;c[n>>2]=c[p>>2];b=c[c[n>>2]>>2]|0;c[m>>2]=c[o>>2];b=(b-(c[c[m>>2]>>2]|0)|0)/32|0;c[l+0>>2]=c[s+0>>2];c[k+0>>2]=c[q+0>>2];vf(l,k,u,b);i=M;return}function rh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;t=i;i=i+144|0;h=t+60|0;u=t+48|0;v=t+124|0;e=t+116|0;f=t+8|0;r=t;o=t+84|0;q=t+52|0;A=t+40|0;z=t+104|0;y=t+112|0;x=t+120|0;w=t+128|0;g=t+132|0;F=t+136|0;p=t+64|0;l=t+68|0;m=t+72|0;n=t+76|0;E=t+16|0;D=t+88|0;C=t+96|0;B=t+4|0;G=t+92|0;H=t+44|0;I=t+100|0;J=t+108|0;s=t+12|0;k=t+80|0;j=t+20|0;c[J>>2]=b;c[s>>2]=d;d=c[J>>2]|0;c[I>>2]=d;c[H>>2]=(c[I>>2]|0)+8;c[G>>2]=c[H>>2];if((((c[c[G>>2]>>2]|0)-(c[d+4>>2]|0)|0)/1040|0)>>>0>=(c[s>>2]|0)>>>0){sh(d,c[s>>2]|0);i=t;return}c[B>>2]=d;c[C>>2]=(c[B>>2]|0)+8;c[D>>2]=c[C>>2];c[k>>2]=c[D>>2];c[E>>2]=d;B=c[E>>2]|0;B=(((c[B+4>>2]|0)-(c[B>>2]|0)|0)/1040|0)+(c[s>>2]|0)|0;c[F>>2]=d;c[p>>2]=B;B=c[F>>2]|0;c[l>>2]=nh(B)|0;if((c[p>>2]|0)>>>0>(c[l>>2]|0)>>>0)Zt(B);c[w>>2]=B;c[x>>2]=c[w>>2];J=c[x>>2]|0;c[y>>2]=J;c[z>>2]=(c[y>>2]|0)+8;c[A>>2]=c[z>>2];c[m>>2]=((c[c[A>>2]>>2]|0)-(c[J>>2]|0)|0)/1040|0;if((c[m>>2]|0)>>>0>=(((c[l>>2]|0)>>>0)/2|0)>>>0)c[g>>2]=c[l>>2];else{c[n>>2]=c[m>>2]<<1;c[o>>2]=n;c[q>>2]=p;J=c[o>>2]|0;I=c[q>>2]|0;a[r+0>>0]=a[t+140>>0]|0;c[e>>2]=J;c[f>>2]=I;I=c[e>>2]|0;J=c[f>>2]|0;c[t+56>>2]=r;c[u>>2]=I;c[v>>2]=J;c[g>>2]=c[((c[c[u>>2]>>2]|0)>>>0<(c[c[v>>2]>>2]|0)>>>0?c[f>>2]|0:c[e>>2]|0)>>2]}I=c[g>>2]|0;c[h>>2]=d;J=c[h>>2]|0;th(j,I,((c[J+4>>2]|0)-(c[J>>2]|0)|0)/1040|0,c[k>>2]|0);uh(j,c[s>>2]|0);vh(d,j);wh(j);i=t;return}function sh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;g=d+28|0;h=d+16|0;j=d+4|0;k=d+8|0;l=d+32|0;m=d;n=d+12|0;e=d+24|0;f=d+20|0;c[n>>2]=a;c[e>>2]=b;a=c[n>>2]|0;c[m>>2]=a;c[l>>2]=(c[m>>2]|0)+8;c[k>>2]=c[l>>2];c[f>>2]=c[k>>2];do{n=c[f>>2]|0;c[g>>2]=c[a+4>>2];b=c[g>>2]|0;c[h>>2]=n;c[j>>2]=b;b=c[j>>2]|0;if((b|0)!=0)ah(b);n=a+4|0;c[n>>2]=(c[n>>2]|0)+1040;c[e>>2]=(c[e>>2]|0)+ -1}while((c[e>>2]|0)>>>0>0);i=d;return}function th(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;k=f+12|0;j=f+8|0;h=f+4|0;g=f;c[k>>2]=a;c[j>>2]=b;c[h>>2]=d;c[g>>2]=e;yh(c[k>>2]|0,c[j>>2]|0,c[h>>2]|0,c[g>>2]|0);i=f;return}function uh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;g=d+28|0;h=d+16|0;j=d+4|0;k=d+8|0;l=d+32|0;m=d;n=d+12|0;e=d+24|0;f=d+20|0;c[n>>2]=a;c[e>>2]=b;a=c[n>>2]|0;c[m>>2]=a;c[l>>2]=(c[m>>2]|0)+12;c[k>>2]=c[l>>2];c[f>>2]=c[(c[k>>2]|0)+4>>2];do{n=c[f>>2]|0;c[g>>2]=c[a+8>>2];b=c[g>>2]|0;c[h>>2]=n;c[j>>2]=b;b=c[j>>2]|0;if((b|0)!=0)ah(b);n=a+8|0;c[n>>2]=(c[n>>2]|0)+1040;c[e>>2]=(c[e>>2]|0)+ -1}while((c[e>>2]|0)>>>0>0);i=d;return}function vh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=i;i=i+144|0;F=d+108|0;H=d+88|0;G=d+80|0;E=d+48|0;C=d+8|0;z=d+12|0;D=d+84|0;B=d+16|0;y=d+20|0;A=d+24|0;w=d+28|0;t=d+32|0;x=d+104|0;v=d+112|0;s=d+120|0;u=d+128|0;m=d+136|0;q=d+52|0;r=d+56|0;n=d+60|0;o=d+64|0;p=d+68|0;k=d+72|0;g=d+76|0;l=d+4|0;j=d;f=d+92|0;h=d+96|0;K=d+100|0;J=d+40|0;I=d+116|0;L=d+44|0;e=d+124|0;c[L>>2]=a;c[e>>2]=b;a=c[L>>2]|0;c[I>>2]=a;c[J>>2]=(c[I>>2]|0)+8;c[K>>2]=c[J>>2];J=c[a>>2]|0;I=c[a+4>>2]|0;b=(c[e>>2]|0)+4|0;c[d+132>>2]=c[K>>2];c[F>>2]=J;c[H>>2]=I;c[G>>2]=b;c[E>>2]=((c[H>>2]|0)-(c[F>>2]|0)|0)/1040|0;b=c[G>>2]|0;c[b>>2]=(c[b>>2]|0)+((0-(c[E>>2]|0)|0)*1040|0);qz(c[c[G>>2]>>2]|0,c[F>>2]|0,(c[E>>2]|0)*1040|0)|0;b=(c[e>>2]|0)+4|0;c[B>>2]=a;c[y>>2]=b;c[D>>2]=c[B>>2];c[A>>2]=c[c[D>>2]>>2];c[C>>2]=c[y>>2];c[c[B>>2]>>2]=c[c[C>>2]>>2];c[z>>2]=A;c[c[y>>2]>>2]=c[c[z>>2]>>2];b=(c[e>>2]|0)+8|0;c[v>>2]=a+4;c[s>>2]=b;c[x>>2]=c[v>>2];c[u>>2]=c[c[x>>2]>>2];c[w>>2]=c[s>>2];c[c[v>>2]>>2]=c[c[w>>2]>>2];c[t>>2]=u;c[c[s>>2]>>2]=c[c[t>>2]>>2];c[r>>2]=a;c[q>>2]=(c[r>>2]|0)+8;c[m>>2]=c[q>>2];m=c[m>>2]|0;c[p>>2]=c[e>>2];c[o>>2]=(c[p>>2]|0)+12;c[n>>2]=c[o>>2];b=c[n>>2]|0;c[j>>2]=m;c[f>>2]=b;c[l>>2]=c[j>>2];c[h>>2]=c[c[l>>2]>>2];c[k>>2]=c[f>>2];c[c[j>>2]>>2]=c[c[k>>2]>>2];c[g>>2]=h;c[c[f>>2]>>2]=c[c[g>>2]>>2];c[c[e>>2]>>2]=c[(c[e>>2]|0)+4>>2];c[d+36>>2]=a;i=d;return}function wh(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;xh(c[d>>2]|0);i=b;return}function xh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;r=i;i=i+128|0;l=r+72|0;k=r+44|0;j=r+12|0;h=r+104|0;g=r+24|0;f=r+16|0;q=r+20|0;p=r+76|0;d=r+52|0;e=r+28|0;m=r+32|0;n=r+36|0;o=r+40|0;w=r+108|0;B=r+112|0;C=r+116|0;A=r;x=r+56|0;y=r+60|0;z=r+120|0;v=r+68|0;u=r+88|0;t=r+92|0;E=r+96|0;s=r+100|0;G=r+8|0;F=r+80|0;I=r+84|0;H=r+121|0;J=r+48|0;D=r+64|0;c[D>>2]=b;D=c[D>>2]|0;c[J>>2]=D;J=c[J>>2]|0;b=c[J+4>>2]|0;c[F>>2]=J;c[I>>2]=b;F=c[F>>2]|0;b=c[I>>2]|0;a[G+0>>0]=a[H+0>>0]|0;c[E>>2]=F;c[s>>2]=b;b=c[E>>2]|0;while(1){if((c[s>>2]|0)==(c[b+8>>2]|0))break;c[t>>2]=b;c[u>>2]=(c[t>>2]|0)+12;c[v>>2]=c[u>>2];J=c[(c[v>>2]|0)+4>>2]|0;H=b+8|0;I=(c[H>>2]|0)+ -1040|0;c[H>>2]=I;c[w>>2]=I;I=c[w>>2]|0;c[x>>2]=J;c[y>>2]=I;I=c[x>>2]|0;J=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=I;c[C>>2]=J}if((c[D>>2]|0)==0){i=r;return}c[q>>2]=D;c[f>>2]=(c[q>>2]|0)+12;c[g>>2]=c[f>>2];H=c[(c[g>>2]|0)+4>>2]|0;J=c[D>>2]|0;c[h>>2]=D;I=c[h>>2]|0;c[j>>2]=I;c[k>>2]=(c[j>>2]|0)+12;c[l>>2]=c[k>>2];I=((c[c[l>>2]>>2]|0)-(c[I>>2]|0)|0)/1040|0;c[m>>2]=H;c[n>>2]=J;c[o>>2]=I;I=c[n>>2]|0;J=c[o>>2]|0;c[p>>2]=c[m>>2];c[d>>2]=I;c[e>>2]=J;Ix(c[d>>2]|0);i=r;return}function yh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;q=i;i=i+176|0;C=q+64|0;x=q+60|0;z=q;B=q+148|0;A=q+156|0;y=q+56|0;E=q+12|0;G=q+112|0;F=q+16|0;D=q+20|0;H=q+24|0;J=q+28|0;I=q+32|0;p=q+36|0;g=q+40|0;r=q+108|0;m=q+144|0;n=q+160|0;f=q+164|0;u=q+68|0;v=q+76|0;w=q+80|0;t=q+84|0;o=q+92|0;h=q+96|0;j=q+100|0;N=q+104|0;O=q+124|0;P=q+44|0;M=q+8|0;Q=q+48|0;k=q+132|0;l=q+52|0;K=q+140|0;L=q+120|0;s=q+116|0;c[Q>>2]=a;c[k>>2]=b;c[l>>2]=d;c[K>>2]=e;e=c[Q>>2]|0;c[O>>2]=M;c[P>>2]=-1;b=c[P>>2]|0;c[N>>2]=c[O>>2];c[q+4>>2]=b;c[c[N>>2]>>2]=0;c[L>>2]=c[M>>2];c[q+128>>2]=L;b=c[K>>2]|0;c[H>>2]=e+12;c[J>>2]=0;c[I>>2]=b;b=c[J>>2]|0;d=c[I>>2]|0;c[G>>2]=c[H>>2];c[F>>2]=b;c[D>>2]=d;d=c[G>>2]|0;c[E>>2]=F;b=c[c[E>>2]>>2]|0;c[C>>2]=c[D>>2];a=c[C>>2]|0;c[B>>2]=d;c[A>>2]=b;c[y>>2]=a;a=c[B>>2]|0;c[z>>2]=A;c[a>>2]=c[c[z>>2]>>2];c[x>>2]=c[y>>2];c[a+4>>2]=c[x>>2];if((c[k>>2]|0)!=0){c[r>>2]=e;c[g>>2]=(c[r>>2]|0)+12;c[p>>2]=c[g>>2];Q=c[k>>2]|0;c[n>>2]=c[(c[p>>2]|0)+4>>2];c[f>>2]=Q;Q=c[f>>2]|0;c[q+136>>2]=c[n>>2];c[m>>2]=Q;c[q+152>>2]=0;Q=Gx((c[m>>2]|0)*1040|0)|0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P*1040|0)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P*1040|0)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}else{c[v>>2]=t;c[w>>2]=-1;Q=c[w>>2]|0;c[u>>2]=c[v>>2];c[q+72>>2]=Q;c[c[u>>2]>>2]=0;c[s>>2]=c[t>>2];c[q+88>>2]=s;Q=0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P*1040|0)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P*1040|0)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}}function zh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;f=i;i=i+160|0;n=f+72|0;g=f+32|0;l=f+108|0;j=f+132|0;s=f+8|0;y=f+76|0;z=f+28|0;w=f+20|0;x=f+24|0;v=f;h=f+96|0;u=f+104|0;E=f+136|0;D=f+140|0;C=f+144|0;B=f+52|0;A=f+56|0;t=f+60|0;F=f+64|0;m=f+68|0;p=f+16|0;q=f+4|0;r=f+84|0;G=f+80|0;H=f+88|0;I=f+92|0;J=f+36|0;K=f+100|0;k=f+40|0;o=f+44|0;e=f+112|0;c[K>>2]=b;c[k>>2]=d;b=c[K>>2]|0;c[J>>2]=b;c[I>>2]=(c[J>>2]|0)+8;c[H>>2]=c[I>>2];c[o>>2]=c[H>>2];c[G>>2]=b;d=c[G>>2]|0;d=(((c[d+4>>2]|0)-(c[d>>2]|0)|0)/1040|0)+1|0;c[F>>2]=b;c[m>>2]=d;d=c[F>>2]|0;c[p>>2]=nh(d)|0;if((c[m>>2]|0)>>>0>(c[p>>2]|0)>>>0)Zt(d);c[A>>2]=d;c[B>>2]=c[A>>2];K=c[B>>2]|0;c[C>>2]=K;c[D>>2]=(c[C>>2]|0)+8;c[E>>2]=c[D>>2];c[q>>2]=((c[c[E>>2]>>2]|0)-(c[K>>2]|0)|0)/1040|0;if((c[q>>2]|0)>>>0>=(((c[p>>2]|0)>>>0)/2|0)>>>0)c[t>>2]=c[p>>2];else{c[r>>2]=c[q>>2]<<1;c[h>>2]=r;c[u>>2]=m;K=c[h>>2]|0;J=c[u>>2]|0;a[v+0>>0]=a[f+148>>0]|0;c[w>>2]=K;c[x>>2]=J;J=c[w>>2]|0;K=c[x>>2]|0;c[f+12>>2]=v;c[y>>2]=J;c[z>>2]=K;c[t>>2]=c[((c[c[y>>2]>>2]|0)>>>0<(c[c[z>>2]>>2]|0)>>>0?c[x>>2]|0:c[w>>2]|0)>>2]}K=c[t>>2]|0;c[s>>2]=b;J=c[s>>2]|0;th(e,K,((c[J+4>>2]|0)-(c[J>>2]|0)|0)/1040|0,c[o>>2]|0);J=c[o>>2]|0;c[j>>2]=c[e+8>>2];K=c[j>>2]|0;c[l>>2]=c[k>>2];h=c[l>>2]|0;c[f+48>>2]=J;c[n>>2]=K;c[g>>2]=h;h=c[n>>2]|0;if((h|0)==0){K=e+8|0;J=c[K>>2]|0;J=J+1040|0;c[K>>2]=J;vh(b,e);wh(e);i=f;return}qz(h|0,c[g>>2]|0,1040)|0;K=e+8|0;J=c[K>>2]|0;J=J+1040|0;c[K>>2]=J;vh(b,e);wh(e);i=f;return}function Ah(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;ch(c[d>>2]|0);i=b;return}function Bh(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;m=i;i=i+32|0;n=m+20|0;k=m+16|0;g=m+12|0;h=m+8|0;l=m+4|0;j=m;c[n>>2]=a;c[k>>2]=b;c[g>>2]=d;c[h>>2]=e;c[l>>2]=f;c[j>>2]=0;if((c[h>>2]|0)>>>0>=(c[g>>2]|0)>>>0){c[j>>2]=0;c[h>>2]=c[g>>2]}else{a=Wy(c[n>>2]|0)|0;c[j>>2]=(a>>>0)%(((c[g>>2]|0)-(c[h>>2]|0)+1|0)>>>0)|0}Ch(c[l>>2]|0,(c[k>>2]|0)+(c[j>>2]|0)|0,c[h>>2]|0);i=m;return}function Ch(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+16|0;j=f+8|0;h=f+4|0;g=f;c[j>>2]=a;c[h>>2]=b;c[g>>2]=e;e=c[j>>2]|0;a=e+1024|0;c[a>>2]=(c[a>>2]|0)+(c[g>>2]|0);c[g>>2]=(c[g>>2]|0)+1;while(1){j=(c[g>>2]|0)+ -1|0;c[g>>2]=j;if((j|0)==0)break;j=c[h>>2]|0;c[h>>2]=j+1;j=e+((d[j>>0]|0)<<2)|0;c[j>>2]=(c[j>>2]|0)+1}i=f;return}function Dh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;f=i;i=i+160|0;n=f+72|0;g=f+32|0;l=f+108|0;j=f+132|0;s=f+8|0;y=f+76|0;z=f+28|0;w=f+20|0;x=f+24|0;v=f;h=f+96|0;u=f+104|0;E=f+136|0;D=f+140|0;C=f+144|0;B=f+52|0;A=f+56|0;t=f+60|0;F=f+64|0;m=f+68|0;p=f+16|0;q=f+4|0;r=f+84|0;G=f+80|0;H=f+88|0;I=f+92|0;J=f+36|0;K=f+100|0;k=f+40|0;o=f+44|0;e=f+112|0;c[K>>2]=b;c[k>>2]=d;b=c[K>>2]|0;c[J>>2]=b;c[I>>2]=(c[J>>2]|0)+8;c[H>>2]=c[I>>2];c[o>>2]=c[H>>2];c[G>>2]=b;d=c[G>>2]|0;d=(((c[d+4>>2]|0)-(c[d>>2]|0)|0)/4|0)+1|0;c[F>>2]=b;c[m>>2]=d;d=c[F>>2]|0;c[p>>2]=Of(d)|0;if((c[m>>2]|0)>>>0>(c[p>>2]|0)>>>0)Zt(d);c[A>>2]=d;c[B>>2]=c[A>>2];K=c[B>>2]|0;c[C>>2]=K;c[D>>2]=(c[C>>2]|0)+8;c[E>>2]=c[D>>2];c[q>>2]=((c[c[E>>2]>>2]|0)-(c[K>>2]|0)|0)/4|0;if((c[q>>2]|0)>>>0>=(((c[p>>2]|0)>>>0)/2|0)>>>0)c[t>>2]=c[p>>2];else{c[r>>2]=c[q>>2]<<1;c[h>>2]=r;c[u>>2]=m;K=c[h>>2]|0;J=c[u>>2]|0;a[v+0>>0]=a[f+148>>0]|0;c[w>>2]=K;c[x>>2]=J;J=c[w>>2]|0;K=c[x>>2]|0;c[f+12>>2]=v;c[y>>2]=J;c[z>>2]=K;c[t>>2]=c[((c[c[y>>2]>>2]|0)>>>0<(c[c[z>>2]>>2]|0)>>>0?c[x>>2]|0:c[w>>2]|0)>>2]}K=c[t>>2]|0;c[s>>2]=b;J=c[s>>2]|0;Jf(e,K,((c[J+4>>2]|0)-(c[J>>2]|0)|0)/4|0,c[o>>2]|0);J=c[o>>2]|0;c[j>>2]=c[e+8>>2];K=c[j>>2]|0;c[l>>2]=c[k>>2];h=c[l>>2]|0;c[f+48>>2]=J;c[n>>2]=K;c[g>>2]=h;h=c[n>>2]|0;if((h|0)==0){K=e+8|0;J=c[K>>2]|0;J=J+4|0;c[K>>2]=J;Lf(b,e);Mf(e);i=f;return}c[h>>2]=c[c[g>>2]>>2];K=e+8|0;J=c[K>>2]|0;J=J+4|0;c[K>>2]=J;Lf(b,e);Mf(e);i=f;return}function Eh(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0;h=i;i=i+208|0;U=h+196|0;V=h+164|0;W=h+68|0;T=h+80|0;G=h+12|0;F=h+148|0;E=h+16|0;H=h+20|0;I=h+24|0;J=h+28|0;K=h+32|0;s=h+36|0;t=h+40|0;q=h+144|0;r=h+44|0;p=h+48|0;v=h+52|0;y=h+56|0;x=h+60|0;w=h+168|0;j=h+176|0;B=h+184|0;z=h+192|0;D=h+200|0;m=h+84|0;l=h+88|0;M=h+92|0;n=h+96|0;L=h+100|0;C=h+140|0;R=h+104|0;Q=h+108|0;P=h+112|0;O=h+116|0;N=h+120|0;X=h+124|0;Y=h+128|0;Z=h+132|0;_=h+136|0;$=h+8|0;aa=h+152|0;g=h+156|0;ba=h;f=h+4|0;A=h+160|0;o=h+64|0;S=h+172|0;u=h+72|0;k=h+180|0;c[ba>>2]=a;c[f>>2]=b;c[A>>2]=e;b=c[ba>>2]|0;c[aa>>2]=b;c[$>>2]=c[aa>>2];c[_>>2]=(c[$>>2]|0)+4;c[Z>>2]=c[_>>2];c[Y>>2]=c[Z>>2];c[X>>2]=c[Y>>2];c[o>>2]=c[c[X>>2]>>2];e=c[o>>2]|0;c[V>>2]=T;c[W>>2]=-1;a=c[W>>2]|0;c[U>>2]=c[V>>2];c[h+188>>2]=a;c[c[U>>2]>>2]=0;c[S>>2]=c[T>>2];c[h+76>>2]=S;if((e|0)==0){c[N>>2]=b;c[O>>2]=(c[N>>2]|0)+4;c[P>>2]=c[O>>2];c[Q>>2]=c[P>>2];c[R>>2]=c[Q>>2];c[c[f>>2]>>2]=c[R>>2];c[g>>2]=c[c[f>>2]>>2];ba=c[g>>2]|0;i=h;return ba|0}while(1){c[E>>2]=b;c[F>>2]=(c[E>>2]|0)+8;c[G>>2]=c[F>>2];c[H>>2]=c[G>>2];aa=c[A>>2]|0;ba=(c[o>>2]|0)+13|0;c[I>>2]=c[H>>2];c[J>>2]=aa;c[K>>2]=ba;if((d[c[J>>2]>>0]|0|0)<(d[c[K>>2]>>0]|0|0)){ba=c[c[o>>2]>>2]|0;c[q>>2]=p;c[r>>2]=-1;N=c[r>>2]|0;c[s>>2]=c[q>>2];c[t>>2]=N;c[c[s>>2]>>2]=0;c[u>>2]=c[p>>2];c[v>>2]=u;N=c[o>>2]|0;if((ba|0)==0){j=5;break}c[o>>2]=c[N>>2];continue}c[w>>2]=b;c[x>>2]=(c[w>>2]|0)+8;c[y>>2]=c[x>>2];c[j>>2]=c[y>>2];ba=(c[o>>2]|0)+13|0;N=c[A>>2]|0;c[B>>2]=c[j>>2];c[z>>2]=ba;c[D>>2]=N;N=c[o>>2]|0;if((d[c[z>>2]>>0]|0|0)>=(d[c[D>>2]>>0]|0|0)){j=10;break}ba=c[N+4>>2]|0;c[M>>2]=L;c[n>>2]=-1;N=c[n>>2]|0;c[m>>2]=c[M>>2];c[l>>2]=N;c[c[m>>2]>>2]=0;c[k>>2]=c[L>>2];c[C>>2]=k;N=c[o>>2]|0;if((ba|0)==0){j=9;break}c[o>>2]=c[N+4>>2]}if((j|0)==5){c[c[f>>2]>>2]=N;c[g>>2]=c[c[f>>2]>>2];ba=c[g>>2]|0;i=h;return ba|0}else if((j|0)==9){c[c[f>>2]>>2]=N;c[g>>2]=(c[c[f>>2]>>2]|0)+4;ba=c[g>>2]|0;i=h;return ba|0}else if((j|0)==10){c[c[f>>2]>>2]=N;c[g>>2]=c[f>>2];ba=c[g>>2]|0;i=h;return ba|0}return 0}function Fh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0,Uc=0,Vc=0,Wc=0,Xc=0,Yc=0,Zc=0,_c=0,$c=0,ad=0,bd=0,cd=0,dd=0,ed=0,fd=0,gd=0,hd=0,id=0,jd=0,kd=0,ld=0,md=0,nd=0,od=0,pd=0,qd=0,rd=0,sd=0,td=0,ud=0,vd=0,wd=0,xd=0,yd=0,zd=0,Ad=0,Bd=0,Cd=0,Dd=0,Ed=0,Fd=0,Gd=0,Hd=0,Id=0,Jd=0,Kd=0,Ld=0,Md=0,Nd=0,Od=0,Pd=0,Qd=0,Rd=0,Sd=0,Td=0,Ud=0,Vd=0,Wd=0,Xd=0,Yd=0,Zd=0,_d=0,$d=0,ae=0,be=0,ce=0,de=0,ee=0,fe=0,ge=0;g=i;i=i+1264|0;nd=g+808|0;md=g+1228|0;ld=g+1168|0;id=g+232|0;pd=g+260|0;qd=g+408|0;fd=g+1172|0;ed=g+1176|0;dd=g+1180|0;od=g+264|0;rd=g+1024|0;jd=g+1008|0;Hc=g+1188|0;Gc=g+228|0;Ec=g+216|0;Dc=g+1164|0;Cc=g+824|0;Fc=g+672|0;Ic=g+644|0;Lc=g+400|0;Kc=g+380|0;Jc=g+364|0;Mc=g+352|0;Vc=g+252|0;$c=g+248|0;_c=g+240|0;Yc=g+236|0;Zc=g+224|0;Xc=g+56|0;Uc=g+212|0;Sc=g+208|0;Tc=g+1160|0;Wc=g+1032|0;Rc=g+88|0;Pc=g+720|0;Qc=g+668|0;Oc=g+24|0;Bc=g+640|0;Ac=g+628|0;Nc=g+392|0;zc=g;yc=g+376|0;xc=g+32|0;Bb=g+360|0;Cb=g+356|0;Ib=g+348|0;Hb=g+344|0;gb=g+268|0;lb=g+272|0;mb=g+276|0;kb=g+96|0;hb=g+288|0;ib=g+292|0;jb=g+1248|0;sb=g+300|0;tb=g+304|0;sa=g+104|0;ob=g+220|0;pb=g+316|0;qb=g+1249|0;db=g+332|0;eb=g+336|0;fb=g+340|0;ab=g+1156|0;bb=g+1108|0;cb=g+1028|0;nb=g+960|0;Ab=g+820|0;$a=g+792|0;Gb=g+716|0;Fb=g+680|0;cd=g+664|0;Eb=g+660|0;Db=g+656|0;bd=g+648|0;ad=g+636|0;vc=g+632|0;wc=g+624|0;tc=g+616|0;uc=g+412|0;rc=g+416|0;Yb=g+384|0;Xb=g+424|0;Vb=g+428|0;Ub=g+432|0;Tb=g+372|0;Wb=g+440|0;Zb=g+444|0;ac=g+448|0;$b=g+452|0;_b=g+456|0;bc=g+460|0;kc=g+464|0;qc=g+468|0;pc=g+472|0;nc=g+476|0;oc=g+480|0;mc=g+8|0;jc=g+488|0;hc=g+492|0;ic=g+496|0;lc=g+280|0;gc=g+48|0;ec=g+516|0;fc=g+520|0;dc=g+136|0;Sb=g+528|0;Rb=g+532|0;cc=g+536|0;Qb=g+72|0;Pb=g+548|0;Nb=g+184|0;Lb=g+556|0;Mb=g+308|0;Jb=g+564|0;Kb=g+312|0;gd=g+572|0;sc=g+576|0;Ob=g+580|0;hd=g+592|0;ub=g+596|0;vb=g+600|0;_a=g+604|0;rb=g+608|0;Ya=g+612|0;za=g+1184|0;ya=g+1192|0;wa=g+1200|0;va=g+1208|0;ua=g+1104|0;xa=g+1224|0;Aa=g+1232|0;Da=g+1240|0;Ca=g+956|0;Ba=g+952|0;Ea=g+816|0;Na=g+812|0;Ta=g+788|0;Sa=g+776|0;Qa=g+712|0;Ra=g+704|0;Pa=g+80|0;Ma=g+684|0;Ka=g+688|0;La=g+692|0;Oa=g+696|0;Ja=g+120|0;Ha=g+652|0;Ia=g+708|0;Ga=g+112|0;ta=g+724|0;zb=g+728|0;Fa=g+736|0;yb=g+168|0;xb=g+744|0;wb=g+152|0;ud=g+748|0;td=g+752|0;sd=g+756|0;qa=g+760|0;ra=g+764|0;la=g+1216|0;ka=g+772|0;ia=g+420|0;P=g+780|0;Q=g+784|0;O=g+144|0;L=g+796|0;M=g+800|0;Y=g+1250|0;W=g+1244|0;X=g+436|0;V=g+176|0;S=g+828|0;T=g+832|0;U=g+1251|0;fa=g+848|0;ga=g+852|0;ha=g+856|0;ca=g+860|0;da=g+864|0;ea=g+868|0;R=g+872|0;oa=g+876|0;ba=g+880|0;ja=g+884|0;ma=g+888|0;Wa=g+892|0;na=g+896|0;pa=g+900|0;Va=g+904|0;Ua=g+908|0;xd=g+912|0;I=g+916|0;J=g+920|0;C=g+484|0;K=g+924|0;w=g+928|0;q=g+932|0;p=g+936|0;r=g+160|0;u=g+940|0;t=g+944|0;s=g+1252|0;m=g+948|0;n=g+512|0;l=g+16|0;h=g+964|0;j=g+968|0;k=g+1253|0;A=g+976|0;B=g+524|0;o=g+980|0;y=g+984|0;f=g+988|0;z=g+992|0;v=g+996|0;G=g+1e3|0;x=g+1004|0;D=g+544|0;E=g+1012|0;N=g+1016|0;F=g+1020|0;H=g+552|0;aa=g+1040|0;$=g+1044|0;yd=g+1048|0;zd=g+560|0;Ad=g+1052|0;Pd=g+1056|0;Gd=g+1060|0;Bd=g+568|0;Dd=g+1064|0;vd=g+1068|0;Ed=g+1072|0;Cd=g+128|0;Id=g+1080|0;Kd=g+1084|0;Jd=g+1088|0;Fd=g+1096|0;Hd=g+192|0;Nd=g+1112|0;Md=g+1116|0;Ld=g+40|0;Rd=g+1120|0;Td=g+1124|0;Sd=g+1128|0;Od=g+1136|0;Qd=g+200|0;Wd=g+1148|0;Vd=g+256|0;Ud=g+64|0;Zd=g+368|0;Yd=g+244|0;_d=g+676|0;$d=g+620|0;ae=g+1144|0;be=g+404|0;ce=g+768|0;de=g+1212|0;ee=g+1076|0;fe=g+1220|0;ge=g+1152|0;wd=g+1236|0;kd=g+972|0;_=g+500|0;Xd=g+840|0;Za=g+804|0;Xa=g+320|0;Z=g+296|0;c[ge>>2]=d;c[wd>>2]=e;c[fe>>2]=c[ge>>2];c[ee>>2]=(c[fe>>2]|0)+4;c[de>>2]=c[ee>>2];c[kd>>2]=c[de>>2];c[be>>2]=c[kd>>2];c[ce>>2]=1;d=c[ce>>2]|0;c[g+1196>>2]=c[be>>2];c[ae>>2]=d;c[g+1204>>2]=0;d=Gx(c[ae>>2]<<4)|0;e=c[kd>>2]|0;c[_d>>2]=Xd;c[$d>>2]=e;e=c[$d>>2]|0;c[Zd>>2]=c[_d>>2];c[Yd>>2]=e;e=c[Zd>>2]|0;c[e>>2]=c[Yd>>2];a[e+4>>0]=0;a[e+5>>0]=0;a[Ud+0>>0]=a[Xd+0>>0]|0;a[Ud+1>>0]=a[Xd+1>>0]|0;a[Ud+2>>0]=a[Xd+2>>0]|0;a[Ud+3>>0]=a[Xd+3>>0]|0;a[Ud+4>>0]=a[Xd+4>>0]|0;a[Ud+5>>0]=a[Xd+5>>0]|0;a[Ud+6>>0]=a[Xd+6>>0]|0;a[Ud+7>>0]=a[Xd+7>>0]|0;c[Wd>>2]=_;c[Vd>>2]=d;d=c[Wd>>2]|0;e=c[Vd>>2]|0;a[Qd+0>>0]=a[Ud+0>>0]|0;a[Qd+1>>0]=a[Ud+1>>0]|0;a[Qd+2>>0]=a[Ud+2>>0]|0;a[Qd+3>>0]=a[Ud+3>>0]|0;a[Qd+4>>0]=a[Ud+4>>0]|0;a[Qd+5>>0]=a[Ud+5>>0]|0;a[Qd+6>>0]=a[Ud+6>>0]|0;a[Qd+7>>0]=a[Ud+7>>0]|0;c[Td>>2]=d;c[Sd>>2]=e;e=c[Td>>2]|0;c[Rd>>2]=Sd;d=c[c[Rd>>2]>>2]|0;c[Pd>>2]=Qd;Pd=c[Pd>>2]|0;c[Od+0>>2]=c[Pd+0>>2];c[Od+4>>2]=c[Pd+4>>2];a[Ld+0>>0]=a[Od+0>>0]|0;a[Ld+1>>0]=a[Od+1>>0]|0;a[Ld+2>>0]=a[Od+2>>0]|0;a[Ld+3>>0]=a[Od+3>>0]|0;a[Ld+4>>0]=a[Od+4>>0]|0;a[Ld+5>>0]=a[Od+5>>0]|0;a[Ld+6>>0]=a[Od+6>>0]|0;a[Ld+7>>0]=a[Od+7>>0]|0;c[Nd>>2]=e;c[Md>>2]=d;d=c[Nd>>2]|0;e=c[Md>>2]|0;a[Hd+0>>0]=a[Ld+0>>0]|0;a[Hd+1>>0]=a[Ld+1>>0]|0;a[Hd+2>>0]=a[Ld+2>>0]|0;a[Hd+3>>0]=a[Ld+3>>0]|0;a[Hd+4>>0]=a[Ld+4>>0]|0;a[Hd+5>>0]=a[Ld+5>>0]|0;a[Hd+6>>0]=a[Ld+6>>0]|0;a[Hd+7>>0]=a[Ld+7>>0]|0;c[Kd>>2]=d;c[Jd>>2]=e;e=c[Kd>>2]|0;c[Id>>2]=Jd;d=c[c[Id>>2]>>2]|0;c[Gd>>2]=Hd;Gd=c[Gd>>2]|0;c[Fd+0>>2]=c[Gd+0>>2];c[Fd+4>>2]=c[Gd+4>>2];a[Cd+0>>0]=a[Fd+0>>0]|0;a[Cd+1>>0]=a[Fd+1>>0]|0;a[Cd+2>>0]=a[Fd+2>>0]|0;a[Cd+3>>0]=a[Fd+3>>0]|0;a[Cd+4>>0]=a[Fd+4>>0]|0;a[Cd+5>>0]=a[Fd+5>>0]|0;a[Cd+6>>0]=a[Fd+6>>0]|0;a[Cd+7>>0]=a[Fd+7>>0]|0;c[vd>>2]=e;c[Ed>>2]=d;vd=c[vd>>2]|0;c[Dd>>2]=Ed;c[vd>>2]=c[c[Dd>>2]>>2];vd=vd+4|0;c[Bd>>2]=Cd;d=c[Bd>>2]|0;c[vd+0>>2]=c[d+0>>2];c[vd+4>>2]=c[d+4>>2];vd=c[kd>>2]|0;c[Ad>>2]=_;c[zd>>2]=c[Ad>>2];c[yd>>2]=c[zd>>2];c[xd>>2]=(c[c[yd>>2]>>2]|0)+13;d=c[xd>>2]|0;e=c[wd>>2]|0;c[ud>>2]=vd;c[td>>2]=d;c[sd>>2]=e;e=c[td>>2]|0;if((e|0)!=0)a[e>>0]=a[c[sd>>2]>>0]|0;c[jd>>2]=_;c[rd>>2]=c[jd>>2];c[od>>2]=c[rd>>2];a[(c[od>>2]|0)+8>>0]=1;ge=c[kd>>2]|0;c[ld>>2]=_;c[md>>2]=c[ld>>2];c[nd>>2]=c[md>>2];c[id>>2]=(c[c[nd>>2]>>2]|0)+14;id=c[id>>2]|0;c[pd>>2]=ge;c[qd>>2]=id;id=c[qd>>2]|0;if((id|0)!=0)a[id>>0]=0;c[dd>>2]=_;c[ed>>2]=c[dd>>2];c[fd>>2]=c[ed>>2];a[(c[fd>>2]|0)+9>>0]=1;c[gd>>2]=_;ge=c[gd>>2]|0;c[Jb>>2]=hd;c[Kb>>2]=ge;ge=c[Kb>>2]|0;c[Lb>>2]=c[Jb>>2];c[Mb>>2]=ge;c[c[Lb>>2]>>2]=c[Mb>>2];a[Nb+0>>0]=a[hd+0>>0]|0;a[Nb+1>>0]=a[hd+1>>0]|0;a[Nb+2>>0]=a[hd+2>>0]|0;a[Nb+3>>0]=a[hd+3>>0]|0;c[Pb>>2]=Ob;Jb=c[Pb>>2]|0;a[Qb+0>>0]=a[Nb+0>>0]|0;a[Qb+1>>0]=a[Nb+1>>0]|0;a[Qb+2>>0]=a[Nb+2>>0]|0;a[Qb+3>>0]=a[Nb+3>>0]|0;c[Rb>>2]=Jb;Jb=c[Rb>>2]|0;c[Sb>>2]=Qb;c[Tb>>2]=c[c[Sb>>2]>>2];ge=c[Tb>>2]|0;c[Ub>>2]=ge;c[Vb>>2]=c[Ub>>2];c[Wb>>2]=c[c[Vb>>2]>>2];c[Xb>>2]=ge;c[Yb>>2]=c[Xb>>2];c[c[Yb>>2]>>2]=0;ge=c[Wb>>2]|0;c[Zb>>2]=Qb;c[_b>>2]=c[c[Zb>>2]>>2];c[$b>>2]=c[_b>>2];c[ac>>2]=c[$b>>2];c[bc>>2]=(c[ac>>2]|0)+4;fe=c[bc>>2]|0;c[cc+0>>2]=c[fe+0>>2];c[cc+4>>2]=c[fe+4>>2];a[dc+0>>0]=a[cc+0>>0]|0;a[dc+1>>0]=a[cc+1>>0]|0;a[dc+2>>0]=a[cc+2>>0]|0;a[dc+3>>0]=a[cc+3>>0]|0;a[dc+4>>0]=a[cc+4>>0]|0;a[dc+5>>0]=a[cc+5>>0]|0;a[dc+6>>0]=a[cc+6>>0]|0;a[dc+7>>0]=a[cc+7>>0]|0;c[ec>>2]=Jb;c[fc>>2]=ge;ge=c[ec>>2]|0;Jb=c[fc>>2]|0;a[gc+0>>0]=a[dc+0>>0]|0;a[gc+1>>0]=a[dc+1>>0]|0;a[gc+2>>0]=a[dc+2>>0]|0;a[gc+3>>0]=a[dc+3>>0]|0;a[gc+4>>0]=a[dc+4>>0]|0;a[gc+5>>0]=a[dc+5>>0]|0;a[gc+6>>0]=a[dc+6>>0]|0;a[gc+7>>0]=a[dc+7>>0]|0;c[hc>>2]=ge;c[ic>>2]=Jb;Jb=c[hc>>2]|0;c[jc>>2]=ic;ge=c[c[jc>>2]>>2]|0;c[kc>>2]=gc;fe=c[kc>>2]|0;c[lc+0>>2]=c[fe+0>>2];c[lc+4>>2]=c[fe+4>>2];a[mc+0>>0]=a[lc+0>>0]|0;a[mc+1>>0]=a[lc+1>>0]|0;a[mc+2>>0]=a[lc+2>>0]|0;a[mc+3>>0]=a[lc+3>>0]|0;a[mc+4>>0]=a[lc+4>>0]|0;a[mc+5>>0]=a[lc+5>>0]|0;a[mc+6>>0]=a[lc+6>>0]|0;a[mc+7>>0]=a[lc+7>>0]|0;c[nc>>2]=Jb;c[oc>>2]=ge;ge=c[nc>>2]|0;c[pc>>2]=oc;c[ge>>2]=c[c[pc>>2]>>2];ge=ge+4|0;c[qc>>2]=mc;Jb=c[qc>>2]|0;c[ge+0>>2]=c[Jb+0>>2];c[ge+4>>2]=c[Jb+4>>2];c[rc>>2]=Ob;ge=c[rc>>2]|0;c[tc>>2]=sc;c[uc>>2]=ge;ge=c[uc>>2]|0;c[vc>>2]=c[tc>>2];c[wc>>2]=ge;c[c[vc>>2]>>2]=c[wc>>2];a[xc+0>>0]=a[sc+0>>0]|0;a[xc+1>>0]=a[sc+1>>0]|0;a[xc+2>>0]=a[sc+2>>0]|0;a[xc+3>>0]=a[sc+3>>0]|0;c[yc>>2]=Xa;ge=c[yc>>2]|0;a[zc+0>>0]=a[xc+0>>0]|0;a[zc+1>>0]=a[xc+1>>0]|0;a[zc+2>>0]=a[xc+2>>0]|0;a[zc+3>>0]=a[xc+3>>0]|0;c[Ac>>2]=ge;ge=c[Ac>>2]|0;c[Bc>>2]=zc;c[Cc>>2]=c[c[Bc>>2]>>2];Jb=c[Cc>>2]|0;c[Dc>>2]=Jb;c[Ec>>2]=c[Dc>>2];c[Fc>>2]=c[c[Ec>>2]>>2];c[Gc>>2]=Jb;c[Hc>>2]=c[Gc>>2];c[c[Hc>>2]>>2]=0;Jb=c[Fc>>2]|0;c[Ic>>2]=zc;c[Jc>>2]=c[c[Ic>>2]>>2];c[Kc>>2]=c[Jc>>2];c[Lc>>2]=c[Kc>>2];c[Mc>>2]=(c[Lc>>2]|0)+4;fe=c[Mc>>2]|0;c[Nc+0>>2]=c[fe+0>>2];c[Nc+4>>2]=c[fe+4>>2];a[Oc+0>>0]=a[Nc+0>>0]|0;a[Oc+1>>0]=a[Nc+1>>0]|0;a[Oc+2>>0]=a[Nc+2>>0]|0;a[Oc+3>>0]=a[Nc+3>>0]|0;a[Oc+4>>0]=a[Nc+4>>0]|0;a[Oc+5>>0]=a[Nc+5>>0]|0;a[Oc+6>>0]=a[Nc+6>>0]|0;a[Oc+7>>0]=a[Nc+7>>0]|0;c[Pc>>2]=ge;c[Qc>>2]=Jb;Jb=c[Pc>>2]|0;ge=c[Qc>>2]|0;a[Rc+0>>0]=a[Oc+0>>0]|0;a[Rc+1>>0]=a[Oc+1>>0]|0;a[Rc+2>>0]=a[Oc+2>>0]|0;a[Rc+3>>0]=a[Oc+3>>0]|0;a[Rc+4>>0]=a[Oc+4>>0]|0;a[Rc+5>>0]=a[Oc+5>>0]|0;a[Rc+6>>0]=a[Oc+6>>0]|0;a[Rc+7>>0]=a[Oc+7>>0]|0;c[Sc>>2]=Jb;c[Tc>>2]=ge;ge=c[Sc>>2]|0;c[Uc>>2]=Tc;Jb=c[c[Uc>>2]>>2]|0;c[Vc>>2]=Rc;fe=c[Vc>>2]|0;c[Wc+0>>2]=c[fe+0>>2];c[Wc+4>>2]=c[fe+4>>2];a[Xc+0>>0]=a[Wc+0>>0]|0;a[Xc+1>>0]=a[Wc+1>>0]|0;a[Xc+2>>0]=a[Wc+2>>0]|0;a[Xc+3>>0]=a[Wc+3>>0]|0;a[Xc+4>>0]=a[Wc+4>>0]|0;a[Xc+5>>0]=a[Wc+5>>0]|0;a[Xc+6>>0]=a[Wc+6>>0]|0;a[Xc+7>>0]=a[Wc+7>>0]|0;c[Yc>>2]=ge;c[Zc>>2]=Jb;Jb=c[Yc>>2]|0;c[_c>>2]=Zc;c[Jb>>2]=c[c[_c>>2]>>2];Jb=Jb+4|0;c[$c>>2]=Xc;ge=c[$c>>2]|0;c[Jb+0>>2]=c[ge+0>>2];c[Jb+4>>2]=c[ge+4>>2];c[ad>>2]=Ob;c[bd>>2]=c[ad>>2];c[cd>>2]=c[bd>>2];c[Eb>>2]=0;Jb=c[cd>>2]|0;c[Fb>>2]=Jb;c[Gb>>2]=c[Fb>>2];c[Db>>2]=c[c[Gb>>2]>>2];ge=c[Eb>>2]|0;c[Hb>>2]=Jb;c[Ib>>2]=c[Hb>>2];c[c[Ib>>2]>>2]=ge;if((c[Db>>2]|0)!=0){c[Cb>>2]=Jb;c[Bb>>2]=c[Cb>>2];ge=c[Db>>2]|0;c[Ab>>2]=(c[Bb>>2]|0)+4;c[$a>>2]=ge;Ab=c[Ab>>2]|0;if(a[Ab+5>>0]&1){ge=c[Ab>>2]|0;c[nb>>2]=(c[$a>>2]|0)+14;fe=c[nb>>2]|0;c[ob>>2]=ge;c[pb>>2]=fe;fe=c[ob>>2]|0;ge=c[pb>>2]|0;a[sa+0>>0]=a[qb+0>>0]|0;c[sb>>2]=fe;c[tb>>2]=ge}if(a[Ab+4>>0]&1){ge=c[Ab>>2]|0;c[gb>>2]=(c[$a>>2]|0)+13;fe=c[gb>>2]|0;c[hb>>2]=ge;c[ib>>2]=fe;fe=c[hb>>2]|0;ge=c[ib>>2]|0;a[kb+0>>0]=a[jb+0>>0]|0;c[lb>>2]=fe;c[mb>>2]=ge}if((c[$a>>2]|0)!=0){fe=c[$a>>2]|0;c[ab>>2]=c[Ab>>2];c[bb>>2]=fe;c[cb>>2]=1;fe=c[bb>>2]|0;ge=c[cb>>2]|0;c[db>>2]=c[ab>>2];c[eb>>2]=fe;c[fb>>2]=ge;Ix(c[eb>>2]|0)}}c[Ya>>2]=Xa;ge=c[Ya>>2]|0;c[_a>>2]=Za;c[rb>>2]=ge;ge=c[rb>>2]|0;c[ub>>2]=c[_a>>2];c[vb>>2]=ge;c[c[ub>>2]>>2]=c[vb>>2];a[wb+0>>0]=a[Za+0>>0]|0;a[wb+1>>0]=a[Za+1>>0]|0;a[wb+2>>0]=a[Za+2>>0]|0;a[wb+3>>0]=a[Za+3>>0]|0;c[xb>>2]=b;ge=c[xb>>2]|0;a[yb+0>>0]=a[wb+0>>0]|0;a[yb+1>>0]=a[wb+1>>0]|0;a[yb+2>>0]=a[wb+2>>0]|0;a[yb+3>>0]=a[wb+3>>0]|0;c[zb>>2]=ge;ge=c[zb>>2]|0;c[ta>>2]=yb;c[ua>>2]=c[c[ta>>2]>>2];sa=c[ua>>2]|0;c[va>>2]=sa;c[wa>>2]=c[va>>2];c[xa>>2]=c[c[wa>>2]>>2];c[ya>>2]=sa;c[za>>2]=c[ya>>2];c[c[za>>2]>>2]=0;sa=c[xa>>2]|0;c[Aa>>2]=yb;c[Ba>>2]=c[c[Aa>>2]>>2];c[Ca>>2]=c[Ba>>2];c[Da>>2]=c[Ca>>2];c[Ea>>2]=(c[Da>>2]|0)+4;fe=c[Ea>>2]|0;c[Fa+0>>2]=c[fe+0>>2];c[Fa+4>>2]=c[fe+4>>2];a[Ga+0>>0]=a[Fa+0>>0]|0;a[Ga+1>>0]=a[Fa+1>>0]|0;a[Ga+2>>0]=a[Fa+2>>0]|0;a[Ga+3>>0]=a[Fa+3>>0]|0;a[Ga+4>>0]=a[Fa+4>>0]|0;a[Ga+5>>0]=a[Fa+5>>0]|0;a[Ga+6>>0]=a[Fa+6>>0]|0;a[Ga+7>>0]=a[Fa+7>>0]|0;c[Ha>>2]=ge;c[Ia>>2]=sa;sa=c[Ha>>2]|0;ge=c[Ia>>2]|0;a[Ja+0>>0]=a[Ga+0>>0]|0;a[Ja+1>>0]=a[Ga+1>>0]|0;a[Ja+2>>0]=a[Ga+2>>0]|0;a[Ja+3>>0]=a[Ga+3>>0]|0;a[Ja+4>>0]=a[Ga+4>>0]|0;a[Ja+5>>0]=a[Ga+5>>0]|0;a[Ja+6>>0]=a[Ga+6>>0]|0;a[Ja+7>>0]=a[Ga+7>>0]|0;c[Ka>>2]=sa;c[La>>2]=ge;ge=c[Ka>>2]|0;c[Ma>>2]=La;sa=c[c[Ma>>2]>>2]|0;c[Na>>2]=Ja;fe=c[Na>>2]|0;c[Oa+0>>2]=c[fe+0>>2];c[Oa+4>>2]=c[fe+4>>2];a[Pa+0>>0]=a[Oa+0>>0]|0;a[Pa+1>>0]=a[Oa+1>>0]|0;a[Pa+2>>0]=a[Oa+2>>0]|0;a[Pa+3>>0]=a[Oa+3>>0]|0;a[Pa+4>>0]=a[Oa+4>>0]|0;a[Pa+5>>0]=a[Oa+5>>0]|0;a[Pa+6>>0]=a[Oa+6>>0]|0;a[Pa+7>>0]=a[Oa+7>>0]|0;c[Qa>>2]=ge;c[Ra>>2]=sa;sa=c[Qa>>2]|0;c[Sa>>2]=Ra;c[sa>>2]=c[c[Sa>>2]>>2];sa=sa+4|0;c[Ta>>2]=Pa;ge=c[Ta>>2]|0;c[sa+0>>2]=c[ge+0>>2];c[sa+4>>2]=c[ge+4>>2];c[Ua>>2]=Xa;c[Va>>2]=c[Ua>>2];c[Wa>>2]=c[Va>>2];c[na>>2]=0;sa=c[Wa>>2]|0;c[ma>>2]=sa;c[ja>>2]=c[ma>>2];c[pa>>2]=c[c[ja>>2]>>2];ge=c[na>>2]|0;c[ka>>2]=sa;c[la>>2]=c[ka>>2];c[c[la>>2]>>2]=ge;if((c[pa>>2]|0)!=0){c[ra>>2]=sa;c[qa>>2]=c[ra>>2];ja=c[pa>>2]|0;c[oa>>2]=(c[qa>>2]|0)+4;c[ba>>2]=ja;ja=c[oa>>2]|0;if(a[ja+5>>0]&1){ge=c[ja>>2]|0;c[R>>2]=(c[ba>>2]|0)+14;fe=c[R>>2]|0;c[S>>2]=ge;c[T>>2]=fe;fe=c[S>>2]|0;ge=c[T>>2]|0;a[V+0>>0]=a[U+0>>0]|0;c[W>>2]=fe;c[X>>2]=ge}if(a[ja+4>>0]&1){ge=c[ja>>2]|0;c[ia>>2]=(c[ba>>2]|0)+13;fe=c[ia>>2]|0;c[L>>2]=ge;c[M>>2]=fe;fe=c[L>>2]|0;ge=c[M>>2]|0;a[O+0>>0]=a[Y+0>>0]|0;c[P>>2]=fe;c[Q>>2]=ge}if((c[ba>>2]|0)!=0){fe=c[ba>>2]|0;c[ca>>2]=c[ja>>2];c[da>>2]=fe;c[ea>>2]=1;fe=c[da>>2]|0;ge=c[ea>>2]|0;c[fa>>2]=c[ca>>2];c[ga>>2]=fe;c[ha>>2]=ge;Ix(c[ga>>2]|0)}}c[Z>>2]=1;c[$>>2]=_;c[aa>>2]=c[$>>2];c[N>>2]=c[aa>>2];c[F>>2]=0;L=c[N>>2]|0;c[E>>2]=L;c[D>>2]=c[E>>2];c[H>>2]=c[c[D>>2]>>2];ge=c[F>>2]|0;c[K>>2]=L;c[C>>2]=c[K>>2];c[c[C>>2]>>2]=ge;if((c[H>>2]|0)==0){i=g;return}c[J>>2]=L;c[I>>2]=c[J>>2];C=c[H>>2]|0;c[G>>2]=(c[I>>2]|0)+4;c[x>>2]=C;C=c[G>>2]|0;if(a[C+5>>0]&1){ge=c[C>>2]|0;c[v>>2]=(c[x>>2]|0)+14;fe=c[v>>2]|0;c[h>>2]=ge;c[j>>2]=fe;fe=c[h>>2]|0;ge=c[j>>2]|0;a[l+0>>0]=a[k+0>>0]|0;c[m>>2]=fe;c[n>>2]=ge}if(a[C+4>>0]&1){ge=c[C>>2]|0;c[w>>2]=(c[x>>2]|0)+13;fe=c[w>>2]|0;c[u>>2]=ge;c[t>>2]=fe;fe=c[u>>2]|0;ge=c[t>>2]|0;a[r+0>>0]=a[s+0>>0]|0;c[q>>2]=fe;c[p>>2]=ge}if((c[x>>2]|0)==0){i=g;return}fe=c[x>>2]|0;c[y>>2]=c[C>>2];c[f>>2]=fe;c[z>>2]=1;fe=c[f>>2]|0;ge=c[z>>2]|0;c[A>>2]=c[y>>2];c[B>>2]=fe;c[o>>2]=ge;Ix(c[B>>2]|0);i=g;return}function Gh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;n=i;i=i+144|0;C=n+52|0;D=n+96|0;E=n+108|0;B=n+132|0;x=n+12|0;u=n+88|0;v=n+20|0;w=n+24|0;t=n+28|0;r=n+104|0;q=n+112|0;l=n+120|0;f=n+128|0;g=n+136|0;o=n+140|0;p=n+56|0;m=n+64|0;h=n+68|0;j=n+72|0;H=n+76|0;I=n+4|0;J=n;G=n+92|0;K=n+100|0;z=n+36|0;k=n+40|0;y=n+116|0;F=n+44|0;A=n+124|0;s=n+8|0;c[K>>2]=a;c[z>>2]=b;c[k>>2]=d;c[y>>2]=e;e=c[K>>2]|0;c[I>>2]=G;c[J>>2]=-1;a=c[J>>2]|0;c[H>>2]=c[I>>2];c[n+80>>2]=a;c[c[H>>2]>>2]=0;c[F>>2]=c[G>>2];c[n+60>>2]=F;c[c[y>>2]>>2]=0;c[D>>2]=B;c[E>>2]=-1;a=c[E>>2]|0;c[C>>2]=c[D>>2];c[n+84>>2]=a;c[c[C>>2]>>2]=0;c[A>>2]=c[B>>2];c[n+48>>2]=A;c[(c[y>>2]|0)+4>>2]=0;c[(c[y>>2]|0)+8>>2]=c[z>>2];c[c[k>>2]>>2]=c[y>>2];c[x>>2]=e;a=c[c[c[x>>2]>>2]>>2]|0;c[v>>2]=t;c[w>>2]=-1;b=c[w>>2]|0;c[u>>2]=c[v>>2];c[n+16>>2]=b;c[c[u>>2]>>2]=0;c[s>>2]=c[t>>2];c[n+32>>2]=s;if((a|0)!=0){c[r>>2]=e;K=c[c[c[r>>2]>>2]>>2]|0;c[q>>2]=e;c[c[q>>2]>>2]=K}c[p>>2]=e;c[o>>2]=(c[p>>2]|0)+4;c[g>>2]=c[o>>2];c[f>>2]=c[g>>2];c[l>>2]=c[f>>2];Qe(c[c[l>>2]>>2]|0,c[c[k>>2]>>2]|0);c[j>>2]=e;c[h>>2]=(c[j>>2]|0)+8;c[m>>2]=c[h>>2];K=c[m>>2]|0;c[K>>2]=(c[K>>2]|0)+1;i=n;return}function Hh(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0;g=i;i=i+208|0;R=g+188|0;T=g+180|0;U=g+164|0;V=g+68|0;W=g+76|0;H=g+72|0;I=g+12|0;J=g+140|0;K=g+16|0;L=g+20|0;M=g+24|0;N=g+28|0;O=g+32|0;P=g+36|0;Q=g+40|0;D=g+136|0;C=g+44|0;E=g+48|0;F=g+52|0;A=g+56|0;B=g+160|0;h=g+168|0;y=g+176|0;u=g+192|0;t=g+80|0;v=g+84|0;x=g+88|0;w=g+92|0;r=g+96|0;f=g+100|0;p=g+132|0;q=g+104|0;o=g+108|0;n=g+112|0;m=g+116|0;l=g+120|0;k=g+124|0;j=g+128|0;X=g+8|0;Y=g+144|0;Z=g+148|0;_=g+4|0;$=g+152|0;aa=g;S=g+60|0;z=g+156|0;s=g+64|0;G=g+172|0;c[S>>2]=b;c[z>>2]=e;e=c[S>>2]|0;S=c[z>>2]|0;c[aa>>2]=e;c[$>>2]=c[aa>>2];c[_>>2]=(c[$>>2]|0)+4;c[Z>>2]=c[_>>2];c[Y>>2]=c[Z>>2];c[X>>2]=c[Y>>2];b=c[c[X>>2]>>2]|0;c[W>>2]=e;c[V>>2]=(c[W>>2]|0)+4;c[U>>2]=c[V>>2];c[T>>2]=c[U>>2];c[R>>2]=c[T>>2];Ih(s,e,S,b,c[R>>2]|0);c[Q>>2]=e;c[P>>2]=c[Q>>2];c[O>>2]=(c[P>>2]|0)+4;c[N>>2]=c[O>>2];c[M>>2]=c[N>>2];c[L>>2]=c[M>>2];b=c[L>>2]|0;c[J>>2]=G;c[K>>2]=b;b=c[K>>2]|0;c[H>>2]=c[J>>2];c[I>>2]=b;c[c[H>>2]>>2]=c[I>>2];c[E>>2]=s;c[F>>2]=G;b=c[F>>2]|0;c[D>>2]=c[E>>2];c[C>>2]=b;if((c[c[D>>2]>>2]|0)==(c[c[C>>2]>>2]|0)^1?(c[h>>2]=e,c[B>>2]=(c[h>>2]|0)+8,c[A>>2]=c[B>>2],_=c[A>>2]|0,aa=c[z>>2]|0,c[y>>2]=s,$=(c[c[y>>2]>>2]|0)+13|0,c[v>>2]=_,c[x>>2]=aa,c[w>>2]=$,$=c[x>>2]|0,aa=c[w>>2]|0,c[g+184>>2]=c[v>>2],c[u>>2]=$,c[t>>2]=aa,(d[c[u>>2]>>0]|0|0)>=(d[c[t>>2]>>0]|0|0)):0){c[a+0>>2]=c[s+0>>2];i=g;return}c[j>>2]=e;c[k>>2]=c[j>>2];c[l>>2]=(c[k>>2]|0)+4;c[m>>2]=c[l>>2];c[n>>2]=c[m>>2];c[o>>2]=c[n>>2];aa=c[o>>2]|0;c[p>>2]=a;c[q>>2]=aa;aa=c[q>>2]|0;c[r>>2]=c[p>>2];c[f>>2]=aa;c[c[r>>2]>>2]=c[f>>2];i=g;return}function Ih(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;n=i;i=i+96|0;o=n+32|0;r=n+28|0;q=n;p=n+84|0;x=n+56|0;y=n+8|0;z=n+12|0;u=n+48|0;v=n+64|0;h=n+72|0;l=n+80|0;m=n+88|0;j=n+92|0;k=n+36|0;D=n+40|0;E=n+44|0;B=n+52|0;C=n+60|0;A=n+16|0;G=n+4|0;t=n+20|0;s=n+68|0;w=n+24|0;F=n+76|0;c[G>>2]=b;c[t>>2]=e;c[s>>2]=f;c[w>>2]=g;g=c[G>>2]|0;while(1){G=c[s>>2]|0;c[B>>2]=A;c[C>>2]=-1;b=c[C>>2]|0;c[D>>2]=c[B>>2];c[E>>2]=b;c[c[D>>2]>>2]=0;c[F>>2]=c[A>>2];c[o>>2]=F;if((G|0)==0)break;c[p>>2]=g;c[q>>2]=(c[p>>2]|0)+8;c[r>>2]=c[q>>2];f=(c[s>>2]|0)+13|0;G=c[t>>2]|0;c[u>>2]=c[r>>2];c[v>>2]=f;c[h>>2]=G;G=c[v>>2]|0;f=c[h>>2]|0;c[x>>2]=c[u>>2];c[y>>2]=G;c[z>>2]=f;f=c[s>>2]|0;if((d[c[y>>2]>>0]|0|0)<(d[c[z>>2]>>0]|0|0)){c[s>>2]=c[f+4>>2];continue}else{c[w>>2]=f;c[s>>2]=c[c[s>>2]>>2];continue}}G=c[w>>2]|0;c[j>>2]=a;c[k>>2]=G;G=c[k>>2]|0;c[l>>2]=c[j>>2];c[m>>2]=G;c[c[l>>2]>>2]=c[m>>2];i=n;return}function Jh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;Kh(c[f>>2]|0,c[e>>2]|0);i=d;return}function Kh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;e=i;i=i+128|0;t=e+112|0;m=e+40|0;o=e+92|0;q=e+100|0;n=e+24|0;p=e;v=e+20|0;r=e+68|0;w=e+44|0;s=e+117|0;u=e+8|0;x=e+96|0;z=e+104|0;y=e+16|0;g=e+48|0;h=e+64|0;j=e+52|0;k=e+56|0;l=e+60|0;f=e+84|0;B=e+88|0;C=e+80|0;D=e+72|0;E=e+28|0;F=e+108|0;G=e+76|0;A=e+116|0;c[G>>2]=b;c[e+32>>2]=d;d=c[G>>2]|0;c[F>>2]=d+4;c[E>>2]=c[F>>2];c[D>>2]=c[E>>2];b=c[D>>2]|0;c[e+36>>2]=b;c[C>>2]=b;c[B>>2]=c[C>>2];c[c[B>>2]>>2]=0;b=d+8|0;a[y+0>>0]=a[A+0>>0]|0;c[x>>2]=b;c[z>>2]=0;x=c[x>>2]|0;b=c[z>>2]|0;a[u+0>>0]=a[y+0>>0]|0;c[r>>2]=x;c[w>>2]=b;r=c[r>>2]|0;c[v>>2]=w;b=c[c[v>>2]>>2]|0;c[t>>2]=u;a[p+0>>0]=a[s+0>>0]|0;c[q>>2]=r;c[n>>2]=b;b=c[q>>2]|0;c[o>>2]=p;c[m>>2]=n;c[b>>2]=c[c[m>>2]>>2];c[l>>2]=d;c[k>>2]=(c[l>>2]|0)+4;c[j>>2]=c[k>>2];c[h>>2]=c[j>>2];c[g>>2]=c[h>>2];b=c[g>>2]|0;c[f>>2]=d;c[c[f>>2]>>2]=b;i=e;return}function Lh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;f=i;i=i+160|0;n=f+72|0;g=f+32|0;l=f+108|0;j=f+132|0;s=f+8|0;y=f+76|0;z=f+28|0;w=f+20|0;x=f+24|0;v=f;h=f+96|0;u=f+104|0;E=f+136|0;D=f+140|0;C=f+144|0;B=f+52|0;A=f+56|0;t=f+60|0;F=f+64|0;m=f+68|0;p=f+16|0;q=f+4|0;r=f+84|0;G=f+80|0;H=f+88|0;I=f+92|0;J=f+36|0;K=f+100|0;k=f+40|0;o=f+44|0;e=f+112|0;c[K>>2]=b;c[k>>2]=d;b=c[K>>2]|0;c[J>>2]=b;c[I>>2]=(c[J>>2]|0)+8;c[H>>2]=c[I>>2];c[o>>2]=c[H>>2];c[G>>2]=b;d=c[G>>2]|0;d=(c[d+4>>2]|0)-(c[d>>2]|0)+1|0;c[F>>2]=b;c[m>>2]=d;d=c[F>>2]|0;c[p>>2]=gg(d)|0;if((c[m>>2]|0)>>>0>(c[p>>2]|0)>>>0)Zt(d);c[A>>2]=d;c[B>>2]=c[A>>2];K=c[B>>2]|0;c[C>>2]=K;c[D>>2]=(c[C>>2]|0)+8;c[E>>2]=c[D>>2];c[q>>2]=(c[c[E>>2]>>2]|0)-(c[K>>2]|0);if((c[q>>2]|0)>>>0>=(((c[p>>2]|0)>>>0)/2|0)>>>0)c[t>>2]=c[p>>2];else{c[r>>2]=c[q>>2]<<1;c[h>>2]=r;c[u>>2]=m;K=c[h>>2]|0;J=c[u>>2]|0;a[v+0>>0]=a[f+148>>0]|0;c[w>>2]=K;c[x>>2]=J;J=c[w>>2]|0;K=c[x>>2]|0;c[f+12>>2]=v;c[y>>2]=J;c[z>>2]=K;c[t>>2]=c[((c[c[y>>2]>>2]|0)>>>0<(c[c[z>>2]>>2]|0)>>>0?c[x>>2]|0:c[w>>2]|0)>>2]}K=c[t>>2]|0;c[s>>2]=b;J=c[s>>2]|0;Mh(e,K,(c[J+4>>2]|0)-(c[J>>2]|0)|0,c[o>>2]|0);J=c[o>>2]|0;c[j>>2]=c[e+8>>2];K=c[j>>2]|0;c[l>>2]=c[k>>2];h=c[l>>2]|0;c[f+48>>2]=J;c[n>>2]=K;c[g>>2]=h;h=c[n>>2]|0;if((h|0)==0){K=e+8|0;J=c[K>>2]|0;J=J+1|0;c[K>>2]=J;Nh(b,e);Oh(e);i=f;return}a[h>>0]=a[c[g>>2]>>0]|0;K=e+8|0;J=c[K>>2]|0;J=J+1|0;c[K>>2]=J;Nh(b,e);Oh(e);i=f;return}function Mh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;k=f+12|0;j=f+8|0;h=f+4|0;g=f;c[k>>2]=a;c[j>>2]=b;c[h>>2]=d;c[g>>2]=e;Qh(c[k>>2]|0,c[j>>2]|0,c[h>>2]|0,c[g>>2]|0);i=f;return}function Nh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=i;i=i+144|0;F=d+108|0;H=d+88|0;G=d+80|0;E=d+48|0;C=d+8|0;z=d+12|0;D=d+84|0;B=d+16|0;y=d+20|0;A=d+24|0;w=d+28|0;t=d+32|0;x=d+104|0;v=d+112|0;s=d+120|0;u=d+128|0;m=d+136|0;q=d+52|0;r=d+56|0;n=d+60|0;o=d+64|0;p=d+68|0;k=d+72|0;g=d+76|0;l=d+4|0;j=d;f=d+92|0;h=d+96|0;K=d+100|0;J=d+40|0;I=d+116|0;L=d+44|0;e=d+124|0;c[L>>2]=a;c[e>>2]=b;a=c[L>>2]|0;c[I>>2]=a;c[J>>2]=(c[I>>2]|0)+8;c[K>>2]=c[J>>2];J=c[a>>2]|0;I=c[a+4>>2]|0;b=(c[e>>2]|0)+4|0;c[d+132>>2]=c[K>>2];c[F>>2]=J;c[H>>2]=I;c[G>>2]=b;c[E>>2]=(c[H>>2]|0)-(c[F>>2]|0);b=c[G>>2]|0;c[b>>2]=(c[b>>2]|0)+(0-(c[E>>2]|0));qz(c[c[G>>2]>>2]|0,c[F>>2]|0,c[E>>2]|0)|0;b=(c[e>>2]|0)+4|0;c[B>>2]=a;c[y>>2]=b;c[D>>2]=c[B>>2];c[A>>2]=c[c[D>>2]>>2];c[C>>2]=c[y>>2];c[c[B>>2]>>2]=c[c[C>>2]>>2];c[z>>2]=A;c[c[y>>2]>>2]=c[c[z>>2]>>2];b=(c[e>>2]|0)+8|0;c[v>>2]=a+4;c[s>>2]=b;c[x>>2]=c[v>>2];c[u>>2]=c[c[x>>2]>>2];c[w>>2]=c[s>>2];c[c[v>>2]>>2]=c[c[w>>2]>>2];c[t>>2]=u;c[c[s>>2]>>2]=c[c[t>>2]>>2];c[r>>2]=a;c[q>>2]=(c[r>>2]|0)+8;c[m>>2]=c[q>>2];m=c[m>>2]|0;c[p>>2]=c[e>>2];c[o>>2]=(c[p>>2]|0)+12;c[n>>2]=c[o>>2];b=c[n>>2]|0;c[j>>2]=m;c[f>>2]=b;c[l>>2]=c[j>>2];c[h>>2]=c[c[l>>2]>>2];c[k>>2]=c[f>>2];c[c[j>>2]>>2]=c[c[k>>2]>>2];c[g>>2]=h;c[c[f>>2]>>2]=c[c[g>>2]>>2];c[c[e>>2]>>2]=c[(c[e>>2]|0)+4>>2];c[d+36>>2]=a;i=d;return}function Oh(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Ph(c[d>>2]|0);i=b;return}function Ph(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;r=i;i=i+128|0;l=r+72|0;k=r+44|0;j=r+12|0;h=r+104|0;g=r+24|0;f=r+16|0;q=r+20|0;p=r+76|0;d=r+52|0;e=r+28|0;m=r+32|0;n=r+36|0;o=r+40|0;w=r+108|0;B=r+112|0;C=r+116|0;A=r;x=r+56|0;y=r+60|0;z=r+120|0;v=r+68|0;u=r+88|0;t=r+92|0;E=r+96|0;s=r+100|0;G=r+8|0;F=r+80|0;I=r+84|0;H=r+121|0;J=r+48|0;D=r+64|0;c[D>>2]=b;D=c[D>>2]|0;c[J>>2]=D;J=c[J>>2]|0;b=c[J+4>>2]|0;c[F>>2]=J;c[I>>2]=b;F=c[F>>2]|0;b=c[I>>2]|0;a[G+0>>0]=a[H+0>>0]|0;c[E>>2]=F;c[s>>2]=b;b=c[E>>2]|0;while(1){if((c[s>>2]|0)==(c[b+8>>2]|0))break;c[t>>2]=b;c[u>>2]=(c[t>>2]|0)+12;c[v>>2]=c[u>>2];J=c[(c[v>>2]|0)+4>>2]|0;H=b+8|0;I=(c[H>>2]|0)+ -1|0;c[H>>2]=I;c[w>>2]=I;I=c[w>>2]|0;c[x>>2]=J;c[y>>2]=I;I=c[x>>2]|0;J=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=I;c[C>>2]=J}if((c[D>>2]|0)==0){i=r;return}c[q>>2]=D;c[f>>2]=(c[q>>2]|0)+12;c[g>>2]=c[f>>2];H=c[(c[g>>2]|0)+4>>2]|0;J=c[D>>2]|0;c[h>>2]=D;I=c[h>>2]|0;c[j>>2]=I;c[k>>2]=(c[j>>2]|0)+12;c[l>>2]=c[k>>2];I=(c[c[l>>2]>>2]|0)-(c[I>>2]|0)|0;c[m>>2]=H;c[n>>2]=J;c[o>>2]=I;I=c[n>>2]|0;J=c[o>>2]|0;c[p>>2]=c[m>>2];c[d>>2]=I;c[e>>2]=J;Ix(c[d>>2]|0);i=r;return}function Qh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;q=i;i=i+176|0;C=q+64|0;x=q+60|0;z=q;B=q+148|0;A=q+156|0;y=q+56|0;E=q+12|0;G=q+112|0;F=q+16|0;D=q+20|0;H=q+24|0;J=q+28|0;I=q+32|0;p=q+36|0;g=q+40|0;r=q+108|0;m=q+144|0;n=q+160|0;f=q+164|0;u=q+68|0;v=q+76|0;w=q+80|0;t=q+84|0;o=q+92|0;h=q+96|0;j=q+100|0;N=q+104|0;O=q+124|0;P=q+44|0;M=q+8|0;Q=q+48|0;k=q+132|0;l=q+52|0;K=q+140|0;L=q+120|0;s=q+116|0;c[Q>>2]=a;c[k>>2]=b;c[l>>2]=d;c[K>>2]=e;e=c[Q>>2]|0;c[O>>2]=M;c[P>>2]=-1;b=c[P>>2]|0;c[N>>2]=c[O>>2];c[q+4>>2]=b;c[c[N>>2]>>2]=0;c[L>>2]=c[M>>2];c[q+128>>2]=L;b=c[K>>2]|0;c[H>>2]=e+12;c[J>>2]=0;c[I>>2]=b;b=c[J>>2]|0;d=c[I>>2]|0;c[G>>2]=c[H>>2];c[F>>2]=b;c[D>>2]=d;d=c[G>>2]|0;c[E>>2]=F;b=c[c[E>>2]>>2]|0;c[C>>2]=c[D>>2];a=c[C>>2]|0;c[B>>2]=d;c[A>>2]=b;c[y>>2]=a;a=c[B>>2]|0;c[z>>2]=A;c[a>>2]=c[c[z>>2]>>2];c[x>>2]=c[y>>2];c[a+4>>2]=c[x>>2];if((c[k>>2]|0)!=0){c[r>>2]=e;c[g>>2]=(c[r>>2]|0)+12;c[p>>2]=c[g>>2];Q=c[k>>2]|0;c[n>>2]=c[(c[p>>2]|0)+4>>2];c[f>>2]=Q;Q=c[f>>2]|0;c[q+136>>2]=c[n>>2];c[m>>2]=Q;c[q+152>>2]=0;Q=Gx(c[m>>2]|0)|0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+P|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+P|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}else{c[v>>2]=t;c[w>>2]=-1;Q=c[w>>2]|0;c[u>>2]=c[v>>2];c[q+72>>2]=Q;c[c[u>>2]>>2]=0;c[s>>2]=c[t>>2];c[q+88>>2]=s;Q=0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+P|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+P|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}}function Rh(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;g=i;i=i+160|0;o=g+72|0;h=g+32|0;m=g+108|0;k=g+132|0;t=g+8|0;z=g+76|0;A=g+28|0;x=g+20|0;y=g+24|0;w=g;j=g+96|0;v=g+104|0;F=g+136|0;E=g+140|0;D=g+144|0;C=g+52|0;B=g+56|0;u=g+60|0;G=g+64|0;n=g+68|0;q=g+16|0;r=g+4|0;s=g+84|0;H=g+80|0;I=g+88|0;J=g+92|0;K=g+36|0;L=g+100|0;l=g+40|0;p=g+44|0;f=g+112|0;c[L>>2]=d;c[l>>2]=e;d=c[L>>2]|0;c[K>>2]=d;c[J>>2]=(c[K>>2]|0)+8;c[I>>2]=c[J>>2];c[p>>2]=c[I>>2];c[H>>2]=d;e=c[H>>2]|0;e=(((c[e+4>>2]|0)-(c[e>>2]|0)|0)/2|0)+1|0;c[G>>2]=d;c[n>>2]=e;e=c[G>>2]|0;c[q>>2]=Wh(e)|0;if((c[n>>2]|0)>>>0>(c[q>>2]|0)>>>0)Zt(e);c[B>>2]=e;c[C>>2]=c[B>>2];L=c[C>>2]|0;c[D>>2]=L;c[E>>2]=(c[D>>2]|0)+8;c[F>>2]=c[E>>2];c[r>>2]=((c[c[F>>2]>>2]|0)-(c[L>>2]|0)|0)/2|0;if((c[r>>2]|0)>>>0>=(((c[q>>2]|0)>>>0)/2|0)>>>0)c[u>>2]=c[q>>2];else{c[s>>2]=c[r>>2]<<1;c[j>>2]=s;c[v>>2]=n;L=c[j>>2]|0;K=c[v>>2]|0;a[w+0>>0]=a[g+148>>0]|0;c[x>>2]=L;c[y>>2]=K;K=c[x>>2]|0;L=c[y>>2]|0;c[g+12>>2]=w;c[z>>2]=K;c[A>>2]=L;c[u>>2]=c[((c[c[z>>2]>>2]|0)>>>0<(c[c[A>>2]>>2]|0)>>>0?c[y>>2]|0:c[x>>2]|0)>>2]}L=c[u>>2]|0;c[t>>2]=d;K=c[t>>2]|0;Sh(f,L,((c[K+4>>2]|0)-(c[K>>2]|0)|0)/2|0,c[p>>2]|0);K=c[p>>2]|0;c[k>>2]=c[f+8>>2];L=c[k>>2]|0;c[m>>2]=c[l>>2];j=c[m>>2]|0;c[g+48>>2]=K;c[o>>2]=L;c[h>>2]=j;j=c[o>>2]|0;if((j|0)==0){L=f+8|0;K=c[L>>2]|0;K=K+2|0;c[L>>2]=K;Th(d,f);Uh(f);i=g;return}b[j>>1]=b[c[h>>2]>>1]|0;L=f+8|0;K=c[L>>2]|0;K=K+2|0;c[L>>2]=K;Th(d,f);Uh(f);i=g;return}function Sh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;k=f+12|0;j=f+8|0;h=f+4|0;g=f;c[k>>2]=a;c[j>>2]=b;c[h>>2]=d;c[g>>2]=e;Xh(c[k>>2]|0,c[j>>2]|0,c[h>>2]|0,c[g>>2]|0);i=f;return}function Th(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=i;i=i+144|0;F=d+108|0;H=d+88|0;G=d+80|0;E=d+48|0;C=d+8|0;z=d+12|0;D=d+84|0;B=d+16|0;y=d+20|0;A=d+24|0;w=d+28|0;t=d+32|0;x=d+104|0;v=d+112|0;s=d+120|0;u=d+128|0;m=d+136|0;q=d+52|0;r=d+56|0;n=d+60|0;o=d+64|0;p=d+68|0;k=d+72|0;g=d+76|0;l=d+4|0;j=d;f=d+92|0;h=d+96|0;K=d+100|0;J=d+40|0;I=d+116|0;L=d+44|0;e=d+124|0;c[L>>2]=a;c[e>>2]=b;a=c[L>>2]|0;c[I>>2]=a;c[J>>2]=(c[I>>2]|0)+8;c[K>>2]=c[J>>2];J=c[a>>2]|0;I=c[a+4>>2]|0;b=(c[e>>2]|0)+4|0;c[d+132>>2]=c[K>>2];c[F>>2]=J;c[H>>2]=I;c[G>>2]=b;c[E>>2]=((c[H>>2]|0)-(c[F>>2]|0)|0)/2|0;b=c[G>>2]|0;c[b>>2]=(c[b>>2]|0)+(0-(c[E>>2]|0)<<1);qz(c[c[G>>2]>>2]|0,c[F>>2]|0,c[E>>2]<<1|0)|0;b=(c[e>>2]|0)+4|0;c[B>>2]=a;c[y>>2]=b;c[D>>2]=c[B>>2];c[A>>2]=c[c[D>>2]>>2];c[C>>2]=c[y>>2];c[c[B>>2]>>2]=c[c[C>>2]>>2];c[z>>2]=A;c[c[y>>2]>>2]=c[c[z>>2]>>2];b=(c[e>>2]|0)+8|0;c[v>>2]=a+4;c[s>>2]=b;c[x>>2]=c[v>>2];c[u>>2]=c[c[x>>2]>>2];c[w>>2]=c[s>>2];c[c[v>>2]>>2]=c[c[w>>2]>>2];c[t>>2]=u;c[c[s>>2]>>2]=c[c[t>>2]>>2];c[r>>2]=a;c[q>>2]=(c[r>>2]|0)+8;c[m>>2]=c[q>>2];m=c[m>>2]|0;c[p>>2]=c[e>>2];c[o>>2]=(c[p>>2]|0)+12;c[n>>2]=c[o>>2];b=c[n>>2]|0;c[j>>2]=m;c[f>>2]=b;c[l>>2]=c[j>>2];c[h>>2]=c[c[l>>2]>>2];c[k>>2]=c[f>>2];c[c[j>>2]>>2]=c[c[k>>2]>>2];c[g>>2]=h;c[c[f>>2]>>2]=c[c[g>>2]>>2];c[c[e>>2]>>2]=c[(c[e>>2]|0)+4>>2];c[d+36>>2]=a;i=d;return}function Uh(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Vh(c[d>>2]|0);i=b;return}function Vh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;r=i;i=i+128|0;l=r+72|0;k=r+44|0;j=r+12|0;h=r+104|0;g=r+24|0;f=r+16|0;q=r+20|0;p=r+76|0;d=r+52|0;e=r+28|0;m=r+32|0;n=r+36|0;o=r+40|0;w=r+108|0;B=r+112|0;C=r+116|0;A=r;x=r+56|0;y=r+60|0;z=r+120|0;v=r+68|0;u=r+88|0;t=r+92|0;E=r+96|0;s=r+100|0;G=r+8|0;F=r+80|0;I=r+84|0;H=r+121|0;J=r+48|0;D=r+64|0;c[D>>2]=b;D=c[D>>2]|0;c[J>>2]=D;J=c[J>>2]|0;b=c[J+4>>2]|0;c[F>>2]=J;c[I>>2]=b;F=c[F>>2]|0;b=c[I>>2]|0;a[G+0>>0]=a[H+0>>0]|0;c[E>>2]=F;c[s>>2]=b;b=c[E>>2]|0;while(1){if((c[s>>2]|0)==(c[b+8>>2]|0))break;c[t>>2]=b;c[u>>2]=(c[t>>2]|0)+12;c[v>>2]=c[u>>2];J=c[(c[v>>2]|0)+4>>2]|0;H=b+8|0;I=(c[H>>2]|0)+ -2|0;c[H>>2]=I;c[w>>2]=I;I=c[w>>2]|0;c[x>>2]=J;c[y>>2]=I;I=c[x>>2]|0;J=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=I;c[C>>2]=J}if((c[D>>2]|0)==0){i=r;return}c[q>>2]=D;c[f>>2]=(c[q>>2]|0)+12;c[g>>2]=c[f>>2];H=c[(c[g>>2]|0)+4>>2]|0;J=c[D>>2]|0;c[h>>2]=D;I=c[h>>2]|0;c[j>>2]=I;c[k>>2]=(c[j>>2]|0)+12;c[l>>2]=c[k>>2];I=((c[c[l>>2]>>2]|0)-(c[I>>2]|0)|0)/2|0;c[m>>2]=H;c[n>>2]=J;c[o>>2]=I;I=c[n>>2]|0;J=c[o>>2]|0;c[p>>2]=c[m>>2];c[d>>2]=I;c[e>>2]=J;Ix(c[d>>2]|0);i=r;return}function Wh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+80|0;q=h+44|0;r=h+40|0;s=h+8|0;u=h+12|0;t=h+76|0;k=h+36|0;g=h+16|0;f=h+20|0;d=h+68|0;e=h+32|0;l=h;n=h+48|0;j=h+52|0;m=h+77|0;v=h+60|0;w=h+64|0;x=h+28|0;y=h+24|0;p=h+56|0;o=h+72|0;c[y>>2]=b;c[x>>2]=c[y>>2];c[w>>2]=(c[x>>2]|0)+8;c[v>>2]=c[w>>2];c[u>>2]=c[v>>2];b=c[u>>2]|0;a[s+0>>0]=a[t+0>>0]|0;c[r>>2]=b;c[q>>2]=c[r>>2];c[p>>2]=2147483647;c[o>>2]=4294967295/2|0;c[n>>2]=p;c[j>>2]=o;b=c[n>>2]|0;j=c[j>>2]|0;a[l+0>>0]=a[m+0>>0]|0;c[d>>2]=b;c[e>>2]=j;j=c[e>>2]|0;b=c[d>>2]|0;c[k>>2]=l;c[g>>2]=j;c[f>>2]=b;i=h;return c[((c[c[g>>2]>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0?c[e>>2]|0:c[d>>2]|0)>>2]|0}function Xh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;q=i;i=i+176|0;C=q+64|0;x=q+60|0;z=q;B=q+148|0;A=q+156|0;y=q+56|0;E=q+12|0;G=q+112|0;F=q+16|0;D=q+20|0;H=q+24|0;J=q+28|0;I=q+32|0;p=q+36|0;g=q+40|0;r=q+108|0;m=q+144|0;n=q+160|0;f=q+164|0;u=q+68|0;v=q+76|0;w=q+80|0;t=q+84|0;o=q+92|0;h=q+96|0;j=q+100|0;N=q+104|0;O=q+124|0;P=q+44|0;M=q+8|0;Q=q+48|0;k=q+132|0;l=q+52|0;K=q+140|0;L=q+120|0;s=q+116|0;c[Q>>2]=a;c[k>>2]=b;c[l>>2]=d;c[K>>2]=e;e=c[Q>>2]|0;c[O>>2]=M;c[P>>2]=-1;b=c[P>>2]|0;c[N>>2]=c[O>>2];c[q+4>>2]=b;c[c[N>>2]>>2]=0;c[L>>2]=c[M>>2];c[q+128>>2]=L;b=c[K>>2]|0;c[H>>2]=e+12;c[J>>2]=0;c[I>>2]=b;b=c[J>>2]|0;d=c[I>>2]|0;c[G>>2]=c[H>>2];c[F>>2]=b;c[D>>2]=d;d=c[G>>2]|0;c[E>>2]=F;b=c[c[E>>2]>>2]|0;c[C>>2]=c[D>>2];a=c[C>>2]|0;c[B>>2]=d;c[A>>2]=b;c[y>>2]=a;a=c[B>>2]|0;c[z>>2]=A;c[a>>2]=c[c[z>>2]>>2];c[x>>2]=c[y>>2];c[a+4>>2]=c[x>>2];if((c[k>>2]|0)!=0){c[r>>2]=e;c[g>>2]=(c[r>>2]|0)+12;c[p>>2]=c[g>>2];Q=c[k>>2]|0;c[n>>2]=c[(c[p>>2]|0)+4>>2];c[f>>2]=Q;Q=c[f>>2]|0;c[q+136>>2]=c[n>>2];c[m>>2]=Q;c[q+152>>2]=0;Q=Gx(c[m>>2]<<1)|0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P<<1)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P<<1)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}else{c[v>>2]=t;c[w>>2]=-1;Q=c[w>>2]|0;c[u>>2]=c[v>>2];c[q+72>>2]=Q;c[c[u>>2]>>2]=0;c[s>>2]=c[t>>2];c[q+88>>2]=s;Q=0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P<<1)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P<<1)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}}function Yh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;t=i;i=i+144|0;h=t+60|0;u=t+48|0;v=t+124|0;e=t+116|0;f=t+8|0;r=t;o=t+84|0;q=t+52|0;A=t+40|0;z=t+104|0;y=t+112|0;x=t+120|0;w=t+128|0;g=t+132|0;F=t+136|0;p=t+64|0;l=t+68|0;m=t+72|0;n=t+76|0;E=t+16|0;D=t+88|0;C=t+96|0;B=t+4|0;G=t+92|0;H=t+44|0;I=t+100|0;J=t+108|0;s=t+12|0;k=t+80|0;j=t+20|0;c[J>>2]=b;c[s>>2]=d;d=c[J>>2]|0;c[I>>2]=d;c[H>>2]=(c[I>>2]|0)+8;c[G>>2]=c[H>>2];if(((c[c[G>>2]>>2]|0)-(c[d+4>>2]|0)|0)>>>0>=(c[s>>2]|0)>>>0){eg(d,c[s>>2]|0);i=t;return}c[B>>2]=d;c[C>>2]=(c[B>>2]|0)+8;c[D>>2]=c[C>>2];c[k>>2]=c[D>>2];c[E>>2]=d;B=c[E>>2]|0;B=(c[B+4>>2]|0)-(c[B>>2]|0)+(c[s>>2]|0)|0;c[F>>2]=d;c[p>>2]=B;B=c[F>>2]|0;c[l>>2]=gg(B)|0;if((c[p>>2]|0)>>>0>(c[l>>2]|0)>>>0)Zt(B);c[w>>2]=B;c[x>>2]=c[w>>2];J=c[x>>2]|0;c[y>>2]=J;c[z>>2]=(c[y>>2]|0)+8;c[A>>2]=c[z>>2];c[m>>2]=(c[c[A>>2]>>2]|0)-(c[J>>2]|0);if((c[m>>2]|0)>>>0>=(((c[l>>2]|0)>>>0)/2|0)>>>0)c[g>>2]=c[l>>2];else{c[n>>2]=c[m>>2]<<1;c[o>>2]=n;c[q>>2]=p;J=c[o>>2]|0;I=c[q>>2]|0;a[r+0>>0]=a[t+140>>0]|0;c[e>>2]=J;c[f>>2]=I;I=c[e>>2]|0;J=c[f>>2]|0;c[t+56>>2]=r;c[u>>2]=I;c[v>>2]=J;c[g>>2]=c[((c[c[u>>2]>>2]|0)>>>0<(c[c[v>>2]>>2]|0)>>>0?c[f>>2]|0:c[e>>2]|0)>>2]}I=c[g>>2]|0;c[h>>2]=d;J=c[h>>2]|0;Mh(j,I,(c[J+4>>2]|0)-(c[J>>2]|0)|0,c[k>>2]|0);Zh(j,c[s>>2]|0);Nh(d,j);Oh(j);i=t;return}function Zh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+48|0;h=e+28|0;j=e+16|0;k=e+4|0;l=e+8|0;m=e+32|0;n=e;o=e+12|0;f=e+24|0;g=e+20|0;c[o>>2]=b;c[f>>2]=d;b=c[o>>2]|0;c[n>>2]=b;c[m>>2]=(c[n>>2]|0)+12;c[l>>2]=c[m>>2];c[g>>2]=c[(c[l>>2]|0)+4>>2];do{o=c[g>>2]|0;c[h>>2]=c[b+8>>2];d=c[h>>2]|0;c[j>>2]=o;c[k>>2]=d;d=c[k>>2]|0;if((d|0)!=0)a[d>>0]=0;o=b+8|0;c[o>>2]=(c[o>>2]|0)+1;c[f>>2]=(c[f>>2]|0)+ -1}while((c[f>>2]|0)>>>0>0);i=e;return}function _h(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;he(c[d>>2]|0);i=b;return}function $h(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;ai(c[d>>2]|0);i=b;return}function ai(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=i;i=i+144|0;w=d+48|0;B=d+8|0;C=d+84|0;A=d;x=d+16|0;y=d+4|0;z=d+132|0;v=d+80|0;u=d+44|0;t=d+20|0;E=d+24|0;e=d+28|0;D=d+32|0;g=d+36|0;f=d+40|0;s=d+76|0;l=d+124|0;k=d+128|0;j=d+52|0;h=d+56|0;p=d+64|0;q=d+68|0;r=d+92|0;m=d+96|0;n=d+100|0;o=d+104|0;I=d+108|0;K=d+116|0;J=d+120|0;H=d+88|0;F=d+72|0;G=d+12|0;c[F>>2]=b;b=c[F>>2]|0;F=c[b>>2]|0;c[K>>2]=H;c[J>>2]=-1;J=c[J>>2]|0;c[I>>2]=c[K>>2];c[d+112>>2]=J;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[d+60>>2]=G;if((F|0)==0){i=d;return}c[D>>2]=b;K=c[D>>2]|0;D=c[K>>2]|0;c[E>>2]=K;c[e>>2]=D;D=c[E>>2]|0;while(1){if((c[e>>2]|0)==(c[D+4>>2]|0))break;c[t>>2]=D;c[u>>2]=(c[t>>2]|0)+8;c[v>>2]=c[u>>2];K=c[v>>2]|0;I=D+4|0;J=(c[I>>2]|0)+ -2|0;c[I>>2]=J;c[w>>2]=J;J=c[w>>2]|0;c[x>>2]=K;c[y>>2]=J;J=c[x>>2]|0;K=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=J;c[C>>2]=K}c[s>>2]=b;c[f>>2]=(c[s>>2]|0)+8;c[g>>2]=c[f>>2];I=c[g>>2]|0;K=c[b>>2]|0;c[h>>2]=b;J=c[h>>2]|0;c[j>>2]=J;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];J=((c[c[l>>2]>>2]|0)-(c[J>>2]|0)|0)/2|0;c[m>>2]=I;c[n>>2]=K;c[o>>2]=J;J=c[n>>2]|0;K=c[o>>2]|0;c[p>>2]=c[m>>2];c[q>>2]=J;c[r>>2]=K;Ix(c[q>>2]|0);i=d;return}function bi(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;fg(c[d>>2]|0);i=b;return}function ci(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;di(c[d>>2]|0);i=b;return}function di(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;ei(c[d>>2]|0);i=b;return}function ei(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+32|0;d=b+8|0;e=b+16|0;f=b+20|0;g=b+24|0;h=b+4|0;j=b;k=b+12|0;c[k>>2]=a;a=c[k>>2]|0;c[j>>2]=a;c[h>>2]=c[j>>2];c[g>>2]=(c[h>>2]|0)+4;c[f>>2]=c[g>>2];c[e>>2]=c[f>>2];c[d>>2]=c[e>>2];fi(a,c[c[d>>2]>>2]|0);i=b;return}function fi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;p=i;i=i+112|0;j=p+12|0;h=p+28|0;g=p+60|0;l=p+84|0;q=p+4|0;r=p+8|0;f=p;m=p+52|0;n=p+36|0;e=p+100|0;v=p+80|0;w=p+88|0;x=p+92|0;s=p+96|0;t=p+40|0;u=p+48|0;A=p+56|0;C=p+16|0;B=p+20|0;z=p+68|0;D=p+24|0;o=p+76|0;y=p+32|0;k=p+72|0;c[D>>2]=b;c[o>>2]=d;d=c[D>>2]|0;b=c[o>>2]|0;c[C>>2]=z;c[B>>2]=-1;B=c[B>>2]|0;c[A>>2]=c[C>>2];c[p+64>>2]=B;c[c[A>>2]>>2]=0;c[y>>2]=c[z>>2];c[p+44>>2]=y;if((b|0)==0){i=p;return}fi(d,c[c[o>>2]>>2]|0);fi(d,c[(c[o>>2]|0)+4>>2]|0);c[g>>2]=d;c[h>>2]=(c[g>>2]|0)+4;c[j>>2]=c[h>>2];c[k>>2]=c[j>>2];C=c[k>>2]|0;c[l>>2]=(c[o>>2]|0)+13;D=c[l>>2]|0;c[m>>2]=C;c[n>>2]=D;D=c[m>>2]|0;C=c[n>>2]|0;a[f+0>>0]=a[e+0>>0]|0;c[q>>2]=D;c[r>>2]=C;C=c[o>>2]|0;c[s>>2]=c[k>>2];c[t>>2]=C;c[u>>2]=1;C=c[t>>2]|0;D=c[u>>2]|0;c[v>>2]=c[s>>2];c[w>>2]=C;c[x>>2]=D;Ix(c[w>>2]|0);i=p;return}function gi(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e+12|0;h=e+8|0;j=e+4|0;g=e;c[f>>2]=a;c[h>>2]=b;c[j>>2]=d;b=c[h>>2]|0;d=c[j>>2]|0;if((c[f>>2]|0)==0){hi(1,0,0,b,d);i=e;return}hi(1,1,0,b,d);c[g>>2]=Ed(c[f>>2]|0)|0;a=c[g>>2]|0;hi(3,a,((a|0)<0)<<31>>31,c[h>>2]|0,c[j>>2]|0);if((c[g>>2]|0)<=0){i=e;return}a=(c[f>>2]|0)-(1<<c[g>>2])|0;hi(c[g>>2]|0,a,((a|0)<0)<<31>>31,c[h>>2]|0,c[j>>2]|0);i=e;return}function hi(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0;h=i;i=i+32|0;j=h+28|0;n=h+8|0;k=h+24|0;o=h+20|0;l=h+16|0;m=h;c[j>>2]=a;a=n;c[a>>2]=b;c[a+4>>2]=e;c[k>>2]=f;c[o>>2]=g;c[l>>2]=(c[o>>2]|0)+(c[c[k>>2]>>2]>>3);e=m;c[e>>2]=d[c[l>>2]>>0];c[e+4>>2]=0;e=n;e=rz(c[e>>2]|0,c[e+4>>2]|0,c[c[k>>2]>>2]&7|0)|0;f=m;b=c[f+4>>2]|H;a=m;c[a>>2]=c[f>>2]|e;c[a+4>>2]=b;a=m;Ll(c[l>>2]|0,c[a>>2]|0,c[a+4>>2]|0);a=c[k>>2]|0;c[a>>2]=(c[a>>2]|0)+(c[j>>2]|0);i=h;return}function ii(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;g=i;i=i+16|0;f=g+12|0;j=g+8|0;h=g+4|0;k=g;c[j>>2]=a;c[h>>2]=b;c[k>>2]=e;if(((d[c[h>>2]>>0]|0)&128|0)==0?(c[c[j>>2]>>2]=d[c[h>>2]>>0],(c[c[j>>2]>>2]|0)>0):0){c[f>>2]=1;a=c[f>>2]|0;i=g;return a|0}if((((c[k>>2]|0)>1?((d[c[h>>2]>>0]|0)&224|0)==192:0)?((d[(c[h>>2]|0)+1>>0]|0)&192|0)==128:0)?(c[c[j>>2]>>2]=((d[c[h>>2]>>0]|0)&31)<<6|(d[(c[h>>2]|0)+1>>0]|0)&63,(c[c[j>>2]>>2]|0)>127):0){c[f>>2]=2;a=c[f>>2]|0;i=g;return a|0}if(((((c[k>>2]|0)>2?((d[c[h>>2]>>0]|0)&240|0)==224:0)?((d[(c[h>>2]|0)+1>>0]|0)&192|0)==128:0)?((d[(c[h>>2]|0)+2>>0]|0)&192|0)==128:0)?(c[c[j>>2]>>2]=((d[c[h>>2]>>0]|0)&15)<<12|((d[(c[h>>2]|0)+1>>0]|0)&63)<<6|(d[(c[h>>2]|0)+2>>0]|0)&63,(c[c[j>>2]>>2]|0)>2047):0){c[f>>2]=3;a=c[f>>2]|0;i=g;return a|0}if(((((((c[k>>2]|0)>3?((d[c[h>>2]>>0]|0)&248|0)==240:0)?((d[(c[h>>2]|0)+1>>0]|0)&192|0)==128:0)?((d[(c[h>>2]|0)+2>>0]|0)&192|0)==128:0)?((d[(c[h>>2]|0)+3>>0]|0)&192|0)==128:0)?(c[c[j>>2]>>2]=((d[c[h>>2]>>0]|0)&7)<<18|((d[(c[h>>2]|0)+1>>0]|0)&63)<<12|((d[(c[h>>2]|0)+2>>0]|0)&63)<<6|(d[(c[h>>2]|0)+3>>0]|0)&63,(c[c[j>>2]>>2]|0)>65535):0)?(c[c[j>>2]>>2]|0)<=1114111:0){c[f>>2]=4;a=c[f>>2]|0;i=g;return a|0}c[c[j>>2]>>2]=1114112|(d[c[h>>2]>>0]|0);c[f>>2]=1;a=c[f>>2]|0;i=g;return a|0}function ji(a,b,d){a=a|0;b=b|0;d=+d;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0;k=i;i=i+32|0;l=k+16|0;j=k+24|0;g=k;f=k+28|0;m=k+12|0;e=k+8|0;n=k+20|0;c[l>>2]=a;c[j>>2]=b;h[g>>3]=d;c[f>>2]=0;c[m>>2]=0;while(1){if(!((c[m>>2]|0)>>>0<(c[j>>2]|0)>>>0))break;c[n>>2]=ii(e,(c[l>>2]|0)+(c[m>>2]|0)|0,(c[j>>2]|0)-(c[m>>2]|0)|0)|0;c[m>>2]=(c[m>>2]|0)+(c[n>>2]|0);if((c[e>>2]|0)>=1114112)continue;c[f>>2]=(c[f>>2]|0)+(c[n>>2]|0)}i=k;return+((c[f>>2]|0)>>>0)>+h[g>>3]*+((c[j>>2]|0)>>>0)|0}function ki(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0;o=i;i=i+32|0;h=o+12|0;m=o+17|0;j=o+16|0;k=o+8|0;l=o+4|0;n=o;c[h>>2]=b;a[m>>0]=d&1;a[j>>0]=e&1;c[k>>2]=f;c[l>>2]=g;hi(1,a[m>>0]&1,0,c[k>>2]|0,c[l>>2]|0);do if(a[m>>0]&1){f=c[k>>2]|0;g=c[l>>2]|0;if((c[h>>2]|0)!=0){hi(1,0,0,f,g);break}hi(1,1,0,f,g);i=o;return}while(0);c[h>>2]=(c[h>>2]|0)+ -1;b=(Ed(c[h>>2]|0)|0)+1|0;c[n>>2]=b;c[n>>2]=(c[n>>2]|0)<16?16:b;b=(c[n>>2]|0)-13>>2;hi(2,b,((b|0)<0)<<31>>31,c[k>>2]|0,c[l>>2]|0);while(1){if((c[n>>2]|0)<=0)break;hi(4,c[h>>2]&15,0,c[k>>2]|0,c[l>>2]|0);c[h>>2]=(c[h>>2]|0)>>>4;c[n>>2]=(c[n>>2]|0)-4}if(a[m>>0]&1){i=o;return}hi(1,a[j>>0]&1,0,c[k>>2]|0,c[l>>2]|0);i=o;return}function li(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;n=i;i=i+48|0;m=n;o=n+16|0;p=n+8|0;j=n+20|0;r=n+28|0;s=n+32|0;q=n+12|0;h=n+24|0;k=n+36|0;l=n+42|0;g=n+4|0;c[m>>2]=b;c[o>>2]=e;c[p>>2]=f;c[j>>2]=18;while(1){if((c[j>>2]|0)<=0)break;if((d[(c[m>>2]|0)+(d[129560+((c[j>>2]|0)-1)>>0]|0)>>0]|0|0)!=0)break;c[j>>2]=(c[j>>2]|0)+ -1}c[r>>2]=0;c[s>>2]=0;while(1){if((c[s>>2]|0)>=(c[j>>2]|0))break;if((d[(c[m>>2]|0)+(d[129560+(c[s>>2]|0)>>0]|0)>>0]|0|0)!=0)c[r>>2]=(c[r>>2]|0)+1;c[s>>2]=(c[s>>2]|0)+1}if((c[r>>2]|0)==1)c[j>>2]=18;c[q>>2]=0;if((d[(c[m>>2]|0)+(d[129560]|0)>>0]|0|0)==0?(d[(c[m>>2]|0)+(d[129561]|0)>>0]|0|0)==0:0){c[q>>2]=2;c[q>>2]=(d[(c[m>>2]|0)+(d[129562]|0)>>0]|0|0)==0?3:2}b=c[q>>2]|0;hi(2,b,((b|0)<0)<<31>>31,c[o>>2]|0,c[p>>2]|0);c[h>>2]=c[q>>2];while(1){if((c[h>>2]|0)>=(c[j>>2]|0))break;a[k+0>>0]=a[129584]|0;a[k+1>>0]=a[129585]|0;a[k+2>>0]=a[129586]|0;a[k+3>>0]=a[129587]|0;a[k+4>>0]=a[129588]|0;a[k+5>>0]=a[129589]|0;a[l+0>>0]=a[129592]|0;a[l+1>>0]=a[129593]|0;a[l+2>>0]=a[129594]|0;a[l+3>>0]=a[129595]|0;a[l+4>>0]=a[129596]|0;a[l+5>>0]=a[129597]|0;c[g>>2]=d[(c[m>>2]|0)+(d[129560+(c[h>>2]|0)>>0]|0)>>0];hi(d[k+(c[g>>2]|0)>>0]|0,d[l+(c[g>>2]|0)>>0]|0,0,c[o>>2]|0,c[p>>2]|0);c[h>>2]=(c[h>>2]|0)+1}i=n;return}function mi(a,b,f,g,h,j){a=a|0;b=b|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;r=i;i=i+48|0;p=r+28|0;k=r+16|0;t=r+4|0;l=r+8|0;n=r+32|0;o=r;q=r+12|0;m=r+24|0;s=r+20|0;c[p>>2]=a;c[k>>2]=b;c[t>>2]=f;c[l>>2]=g;c[n>>2]=h;c[o>>2]=j;c[q>>2]=0;while(1){if((c[q>>2]|0)>=(c[t>>2]|0))break;c[m>>2]=d[(c[p>>2]|0)+(c[q>>2]|0)>>0];c[s>>2]=d[(c[k>>2]|0)+(c[q>>2]|0)>>0];if((c[(c[l>>2]|0)+56>>2]|0)>1)hi(d[(c[l>>2]|0)+(c[m>>2]|0)>>0]|0,e[(c[l>>2]|0)+18+(c[m>>2]<<1)>>1]|0,0,c[n>>2]|0,c[o>>2]|0);j=c[m>>2]|0;if((j|0)==16){a=c[s>>2]|0;hi(2,a,((a|0)<0)<<31>>31,c[n>>2]|0,c[o>>2]|0)}else if((j|0)==17){a=c[s>>2]|0;hi(3,a,((a|0)<0)<<31>>31,c[n>>2]|0,c[o>>2]|0)}c[q>>2]=(c[q>>2]|0)+1}i=r;return}function ni(a,b,f,g){a=a|0;b=b|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;n=i;i=i+48|0;q=n+24|0;r=n+32|0;l=n+28|0;m=n+20|0;p=n+40|0;o=n+16|0;h=n+8|0;k=n+36|0;j=n;c[q>>2]=a;c[r>>2]=b;c[l>>2]=f;c[m>>2]=g;c[p>>2]=e[(c[q>>2]|0)+22>>1];hi(d[(c[r>>2]|0)+(c[p>>2]|0)>>0]|0,e[(c[r>>2]|0)+704+(c[p>>2]<<1)>>1]|0,0,c[l>>2]|0,c[m>>2]|0);if((c[p>>2]|0)>=128)c[p>>2]=(c[p>>2]|0)-128;c[o>>2]=xm(c[p>>2]|0)|0;r=c[c[q>>2]>>2]|0;a=h;c[a>>2]=r-(ym(c[p>>2]|0)|0);c[a+4>>2]=0;c[k>>2]=zm(c[p>>2]|0)|0;a=c[(c[q>>2]|0)+8>>2]|0;r=j;c[r>>2]=a-(Am(c[p>>2]|0)|0);c[r+4>>2]=0;if((c[o>>2]|0)>0){r=h;hi(c[o>>2]|0,c[r>>2]|0,c[r+4>>2]|0,c[l>>2]|0,c[m>>2]|0)}if((c[k>>2]|0)<=0){i=n;return}r=j;hi(c[k>>2]|0,c[r>>2]|0,c[r+4>>2]|0,c[l>>2]|0,c[m>>2]|0);i=n;return}function oi(a,b,f,g){a=a|0;b=b|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=i;i=i+32|0;p=h+24|0;o=h+16|0;l=h+20|0;m=h+28|0;n=h+12|0;k=h+8|0;j=h;c[p>>2]=a;c[o>>2]=b;c[l>>2]=f;c[m>>2]=g;c[n>>2]=e[(c[p>>2]|0)+20>>1];c[k>>2]=c[(c[p>>2]|0)+24>>2];a=j;c[a>>2]=c[(c[p>>2]|0)+28>>2];c[a+4>>2]=0;hi(d[(c[o>>2]|0)+(c[n>>2]|0)>>0]|0,e[(c[o>>2]|0)+520+(c[n>>2]<<1)>>1]|0,0,c[l>>2]|0,c[m>>2]|0);if((c[k>>2]|0)<=0){i=h;return}p=j;hi(c[k>>2]|0,c[p>>2]|0,c[p+4>>2]|0,c[l>>2]|0,c[m>>2]|0);i=h;return}function pi(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0;L=i;i=i+256|0;Q=L+76|0;R=L+68|0;V=L+4|0;W=L+220|0;w=L+228|0;x=L+64|0;N=L+12|0;O=L+124|0;P=L+52|0;j=L+20|0;M=L+24|0;K=L;G=L+32|0;I=L+36|0;J=L+244|0;Z=L+120|0;Y=L+80|0;X=L+144|0;aa=L+216|0;$=L+224|0;_=L+232|0;C=L+236|0;B=L+240|0;A=L+28|0;z=L+84|0;D=L+88|0;E=L+92|0;T=L+96|0;U=L+100|0;S=L+104|0;v=L+108|0;F=L+116|0;H=L+112|0;o=L+16|0;p=L+136|0;u=L+8|0;s=L+56|0;m=L+140|0;r=L+60|0;n=L+152|0;l=L+128|0;q=L+132|0;t=L+72|0;y=L+40|0;c[v>>2]=b;c[F>>2]=e;c[H>>2]=f;c[o>>2]=g;c[p>>2]=h;c[u>>2]=0;while(1){b=c[u>>2]|0;c[S>>2]=c[v>>2];g=c[S>>2]|0;if(!(b>>>0<(((c[g+4>>2]|0)-(c[g>>2]|0)|0)/32|0)>>>0)){k=19;break}h=c[u>>2]|0;c[D>>2]=c[v>>2];c[E>>2]=h;c[F>>2]=(c[F>>2]|0)+(c[(c[c[D>>2]>>2]|0)+(c[E>>2]<<5)>>2]|0);c[G>>2]=F;c[I>>2]=H;h=c[G>>2]|0;g=c[I>>2]|0;a[K+0>>0]=a[J+0>>0]|0;c[j>>2]=h;c[M>>2]=g;g=c[M>>2]|0;h=c[j>>2]|0;c[N>>2]=K;c[O>>2]=g;c[P>>2]=h;c[s>>2]=c[((c[c[O>>2]>>2]|0)>>>0<(c[c[P>>2]>>2]|0)>>>0?c[M>>2]|0:c[j>>2]|0)>>2];h=c[u>>2]|0;c[Q>>2]=c[v>>2];c[R>>2]=h;c[m>>2]=c[(c[c[Q>>2]>>2]|0)+(c[R>>2]<<5)+12>>2];c[r>>2]=(c[m>>2]|0)+16;h=c[m>>2]|0;if((c[m>>2]|0)>>>0<=(c[s>>2]|0)>>>0){if((h|0)==0){k=19;break}e=n+0|0;f=129728|0;h=e+64|0;do{c[e>>2]=c[f>>2];e=e+4|0;f=f+4|0}while((e|0)<(h|0));c[l>>2]=0;while(1){if((c[l>>2]|0)>=16)break;if((c[m>>2]|0)>=(c[n+(c[l>>2]<<2)>>2]|0)?(c[q>>2]=(c[(c[o>>2]|0)+(((c[c[p>>2]>>2]|0)+(c[129600+(c[l>>2]<<2)>>2]|0)&3)<<2)>>2]|0)+(c[129664+(c[l>>2]<<2)>>2]|0),(c[m>>2]|0)==(c[q>>2]|0)):0){k=9;break}c[l>>2]=(c[l>>2]|0)+1}if((k|0)==9){k=0;c[r>>2]=(c[l>>2]|0)+1}if((c[r>>2]|0)>1){c[(c[o>>2]|0)+((c[c[p>>2]>>2]&3)<<2)>>2]=c[m>>2];g=c[p>>2]|0;c[g>>2]=(c[g>>2]|0)+1}g=c[u>>2]|0;c[V>>2]=c[v>>2];c[W>>2]=g;c[F>>2]=(c[F>>2]|0)+(c[(c[c[V>>2]>>2]|0)+(c[W>>2]<<5)+4>>2]|0)}else{c[t>>2]=h-(c[s>>2]|0)-1;h=c[u>>2]|0;c[w>>2]=c[v>>2];c[x>>2]=h;qi(y,c[(c[c[w>>2]>>2]|0)+(c[x>>2]<<5)+8>>2]|0,c[t>>2]|0);c[z>>2]=y;h=c[z>>2]|0;c[A>>2]=h;c[B>>2]=c[A>>2];c[C>>2]=c[B>>2];if(((d[c[C>>2]>>0]|0)&1|0)!=0){c[X>>2]=h;c[Y>>2]=c[X>>2];c[Z>>2]=c[Y>>2];h=c[(c[Z>>2]|0)+4>>2]|0}else{c[_>>2]=h;c[$>>2]=c[_>>2];c[aa>>2]=c[$>>2];h=(d[c[aa>>2]>>0]|0)>>1}c[F>>2]=(c[F>>2]|0)+h;Kn(y)}g=c[r>>2]|0;b=c[u>>2]|0;c[T>>2]=c[v>>2];c[U>>2]=b;c[(c[c[T>>2]>>2]|0)+(c[U>>2]<<5)+16>>2]=g;c[u>>2]=(c[u>>2]|0)+1}if((k|0)==19){i=L;return}}function qi(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+32|0;f=e+8|0;m=e+16|0;l=e+20|0;j=e+24|0;h=e+4|0;k=e;g=e+12|0;c[f>>2]=b;c[m>>2]=d;c[l>>2]=1<<c[129808+(c[f>>2]<<2)>>2];c[j>>2]=c[131448+(c[f>>2]<<2)>>2];c[h>>2]=(c[m>>2]|0)/(c[l>>2]|0)|0;c[k>>2]=(c[m>>2]|0)%(c[l>>2]|0)|0;b=da(c[f>>2]|0,c[k>>2]|0)|0;c[j>>2]=(c[j>>2]|0)+b;c[g>>2]=131552+(c[j>>2]|0);Il(a,254336+((c[h>>2]|0)*12|0)|0,c[g>>2]|0,c[f>>2]|0);i=e;return}function ri(a,d,f){a=a|0;d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;m=i;i=i+32|0;n=m+4|0;o=m+16|0;p=m+8|0;g=m+20|0;j=m+28|0;k=m;l=m+12|0;h=m+24|0;c[g>>2]=a;c[j>>2]=d;c[k>>2]=f;c[l>>2]=0;while(1){d=c[l>>2]|0;c[p>>2]=c[g>>2];a=c[p>>2]|0;if(!(d>>>0<(((c[a+4>>2]|0)-(c[a>>2]|0)|0)/32|0)>>>0))break;a=c[l>>2]|0;c[n>>2]=c[g>>2];c[o>>2]=a;c[h>>2]=(c[c[n>>2]>>2]|0)+(c[o>>2]<<5);a=(wm(c[c[h>>2]>>2]|0,c[(c[h>>2]|0)+8>>2]|0)|0)&65535;b[(c[h>>2]|0)+22>>1]=a;if((c[(c[h>>2]|0)+8>>2]|0)>>>0>0)Bm(c[(c[h>>2]|0)+16>>2]|0,c[j>>2]|0,c[k>>2]|0,(c[h>>2]|0)+20|0,(c[h>>2]|0)+24|0,(c[h>>2]|0)+28|0);if((e[(c[h>>2]|0)+22>>1]|0|0)<128?(e[(c[h>>2]|0)+20>>1]|0|0)==0:0)b[(c[h>>2]|0)+20>>1]=-1;else{a=(c[h>>2]|0)+22|0;b[a>>1]=(e[a>>1]|0)+128}c[l>>2]=(c[l>>2]|0)+1}i=m;return}function si(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+32|0;j=d+8|0;f=d+16|0;l=d+20|0;e=d+24|0;h=d+4|0;k=d;g=d+12|0;c[h>>2]=a;c[k>>2]=b;c[g>>2]=0;while(1){b=c[g>>2]|0;c[l>>2]=c[h>>2];a=c[l>>2]|0;if(!(b>>>0<(((c[a+4>>2]|0)-(c[a>>2]|0)|0)/4|0)>>>0)){f=6;break}b=c[g>>2]|0;c[j>>2]=c[h>>2];c[f>>2]=b;b=c[g>>2]|0;if((c[(c[c[j>>2]>>2]|0)+(c[f>>2]<<2)>>2]|0)==(c[k>>2]|0)){f=4;break}c[g>>2]=b+1}if((f|0)==4){c[e>>2]=b;a=c[e>>2]|0;i=d;return a|0}else if((f|0)==6){c[e>>2]=-1;a=c[e>>2]|0;i=d;return a|0}return 0}function ti(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;h=i;i=i+48|0;k=h;l=h+8|0;m=h+36|0;n=h+16|0;f=h+32|0;g=h+40|0;q=h+44|0;p=h+24|0;e=h+20|0;o=h+12|0;j=h+4|0;d=h+28|0;c[e>>2]=a;c[o>>2]=b;a=c[o>>2]|0;c[q>>2]=c[e>>2];c[p>>2]=a;c[j>>2]=c[(c[c[q>>2]>>2]|0)+(c[p>>2]<<2)>>2];c[d>>2]=c[o>>2];while(1){if((c[d>>2]|0)<=0)break;q=(c[d>>2]|0)-1|0;c[k>>2]=c[e>>2];c[l>>2]=q;q=c[(c[c[k>>2]>>2]|0)+(c[l>>2]<<2)>>2]|0;p=c[d>>2]|0;c[m>>2]=c[e>>2];c[n>>2]=p;c[(c[c[m>>2]>>2]|0)+(c[n>>2]<<2)>>2]=q;c[d>>2]=(c[d>>2]|0)+ -1}q=c[j>>2]|0;c[f>>2]=c[e>>2];c[g>>2]=0;c[(c[c[f>>2]>>2]|0)+(c[g>>2]<<2)>>2]=q;i=h;return}function ui(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0;J=i;i=i+288|0;K=J+160|0;L=J+208|0;m=J+224|0;N=J+44|0;O=J+228|0;n=J+40|0;q=J+72|0;r=J+220|0;p=J+140|0;u=J+68|0;C=J+64|0;e=J+48|0;I=J+52|0;G=J+56|0;H=J+60|0;D=J+216|0;F=J+152|0;v=J+136|0;x=J+132|0;z=J+76|0;A=J+80|0;B=J+84|0;f=J+88|0;ka=J+92|0;ia=J+96|0;ja=J+100|0;ga=J+240|0;ha=J+248|0;w=J+256|0;y=J+16|0;E=J;s=J+32|0;da=J+212|0;ea=J+148|0;fa=J+276|0;ca=J+24|0;ba=J+8|0;$=J+268|0;aa=J+272|0;Z=J+164|0;_=J+168|0;X=J+176|0;W=J+180|0;U=J+184|0;V=J+188|0;S=J+192|0;T=J+196|0;Q=J+204|0;P=J+260|0;la=J+264|0;l=J+232|0;j=J+104|0;R=J+236|0;Y=J+36|0;t=J+116|0;o=J+244|0;g=J+120|0;k=J+252|0;M=J+156|0;h=J+144|0;c[l>>2]=d;c[la>>2]=c[l>>2];la=c[la>>2]|0;d=c[l>>2]|0;if((c[la>>2]|0)==(c[la+4>>2]|0)){vi(b,d);i=J;return}c[P>>2]=d;la=c[P>>2]|0;d=c[la>>2]|0;c[J+200>>2]=la;c[Q>>2]=d;d=c[Q>>2]|0;c[S>>2]=R;c[T>>2]=d;d=c[T>>2]|0;c[U>>2]=c[S>>2];c[V>>2]=d;c[c[U>>2]>>2]=c[V>>2];c[W>>2]=c[l>>2];d=c[W>>2]|0;la=c[d+4>>2]|0;c[J+172>>2]=d;c[X>>2]=la;la=c[X>>2]|0;c[Z>>2]=Y;c[_>>2]=la;la=c[_>>2]|0;c[$>>2]=c[Z>>2];c[aa>>2]=la;c[c[$>>2]>>2]=c[aa>>2];a[ba+0>>0]=a[R+0>>0]|0;a[ba+1>>0]=a[R+1>>0]|0;a[ba+2>>0]=a[R+2>>0]|0;a[ba+3>>0]=a[R+3>>0]|0;a[ca+0>>0]=a[Y+0>>0]|0;a[ca+1>>0]=a[Y+1>>0]|0;a[ca+2>>0]=a[Y+2>>0]|0;a[ca+3>>0]=a[Y+3>>0]|0;c[da+0>>2]=c[ba+0>>2];c[ea+0>>2]=c[ca+0>>2];a[s+0>>0]=a[da+0>>0]|0;a[s+1>>0]=a[da+1>>0]|0;a[s+2>>0]=a[da+2>>0]|0;a[s+3>>0]=a[da+3>>0]|0;a[E+0>>0]=a[ea+0>>0]|0;a[E+1>>0]=a[ea+1>>0]|0;a[E+2>>0]=a[ea+2>>0]|0;a[E+3>>0]=a[ea+3>>0]|0;a[y+0>>0]=a[fa+0>>0]|0;c[ga>>2]=s;c[ha>>2]=E;la=c[ha>>2]|0;c[ia>>2]=c[ga>>2];c[ja>>2]=la;c[ka>>2]=c[ia>>2];la=c[c[ka>>2]>>2]|0;c[f>>2]=c[ja>>2];a:do if((la|0)==(c[c[f>>2]>>2]|0)^1){c[w+0>>2]=c[s+0>>2];while(1){c[C>>2]=w;la=c[C>>2]|0;c[la>>2]=(c[la>>2]|0)+4;c[D>>2]=la;c[F>>2]=E;la=c[F>>2]|0;c[G>>2]=c[D>>2];c[H>>2]=la;c[I>>2]=c[G>>2];la=c[c[I>>2]>>2]|0;c[e>>2]=c[H>>2];if(!((la|0)==(c[c[e>>2]>>2]|0)^1))break a;c[v>>2]=s;d=c[c[v>>2]>>2]|0;c[x>>2]=w;la=c[c[x>>2]>>2]|0;c[z>>2]=y;c[A>>2]=d;c[B>>2]=la;if((c[c[A>>2]>>2]|0)>=(c[c[B>>2]>>2]|0))continue;c[s+0>>2]=c[w+0>>2]}}while(0);c[t+0>>2]=c[s+0>>2];c[u>>2]=t;re(j,(c[c[c[u>>2]>>2]>>2]|0)+1|0);c[o>>2]=0;while(1){d=c[o>>2]|0;c[p>>2]=j;la=c[p>>2]|0;if(!(d>>>0<(((c[la+4>>2]|0)-(c[la>>2]|0)|0)/4|0)>>>0))break;la=c[o>>2]|0;d=c[o>>2]|0;c[q>>2]=j;c[r>>2]=d;c[(c[c[q>>2]>>2]|0)+(c[r>>2]<<2)>>2]=la;c[o>>2]=(c[o>>2]|0)+1}c[n>>2]=c[l>>2];la=c[n>>2]|0;re(g,((c[la+4>>2]|0)-(c[la>>2]|0)|0)/4|0);c[k>>2]=0;while(1){d=c[k>>2]|0;c[m>>2]=c[l>>2];la=c[m>>2]|0;if(!(d>>>0<(((c[la+4>>2]|0)-(c[la>>2]|0)|0)/4|0)>>>0))break;la=c[k>>2]|0;c[K>>2]=c[l>>2];c[L>>2]=la;c[M>>2]=si(j,c[(c[c[K>>2]>>2]|0)+(c[L>>2]<<2)>>2]|0)|0;la=c[M>>2]|0;d=c[k>>2]|0;c[N>>2]=g;c[O>>2]=d;c[(c[c[N>>2]>>2]|0)+(c[O>>2]<<2)>>2]=la;ti(j,c[M>>2]|0);c[k>>2]=(c[k>>2]|0)+1}vi(b,g);c[h>>2]=1;we(g);we(j);i=J;return}function vi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;Mk(c[f>>2]|0,c[e>>2]|0);i=d;return}



function Zd(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0;p=i;i=i+320|0;ga=p+140|0;ia=p+288|0;ja=p+16|0;ca=p+144|0;fa=p+116|0;ea=p+128|0;da=p+124|0;oa=p+252|0;na=p+52|0;ma=p+28|0;la=p+32|0;ha=p+36|0;V=p+40|0;T=p+44|0;Y=p+48|0;Z=p+240|0;U=p+112|0;Q=p+56|0;S=p+60|0;ba=p+64|0;aa=p+68|0;$=p+72|0;_=p+76|0;W=p+80|0;Aa=p+84|0;Ba=p+88|0;Ca=p+92|0;ya=p+96|0;za=p+100|0;xa=p+8|0;ua=p+108|0;va=p+236|0;wa=p+310|0;Da=p+268|0;Ea=p+276|0;ra=p+284|0;sa=p+292|0;I=p+300|0;K=p+132|0;L=p+136|0;D=p+304|0;H=p+264|0;G=p+148|0;P=p+152|0;O=p+156|0;N=p+160|0;M=p+164|0;R=p+168|0;J=p+172|0;ta=p+176|0;B=p+180|0;w=p+184|0;x=p+188|0;q=p+192|0;A=p+196|0;z=p+200|0;y=p+204|0;v=p+208|0;u=p+212|0;C=p+104|0;F=p+220|0;t=p+224|0;f=p+228|0;n=p+232|0;o=p+20|0;k=p+248|0;l=p+12|0;j=p;s=p+216|0;m=p+24|0;h=p+311|0;Ga=p+244|0;Fa=p+272|0;qa=p+120|0;g=p+280|0;r=p+296|0;E=p+256|0;pa=p+260|0;ka=p+309|0;X=p+308|0;c[qa>>2]=b;c[g>>2]=e;c[Ga>>2]=c[qa>>2];c[Fa>>2]=0;c[r>>2]=d[(c[c[Ga>>2]>>2]|0)+(c[Fa>>2]|0)>>0];c[E>>2]=1;c[c[g>>2]>>2]=-1;c[pa>>2]=1;while(1){Fa=c[pa>>2]|0;c[ta>>2]=c[qa>>2];Ga=c[ta>>2]|0;if(!(Fa>>>0<((c[Ga+4>>2]|0)-(c[Ga>>2]|0)|0)>>>0))break;Ga=c[pa>>2]|0;c[ra>>2]=c[qa>>2];c[sa>>2]=Ga;if((d[(c[c[ra>>2]>>2]|0)+(c[sa>>2]|0)>>0]|0|0)!=(c[r>>2]|0)){e=(c[g>>2]|0)+4|0;a[ka>>0]=c[r>>2];c[la>>2]=e;c[ha>>2]=ka;e=c[la>>2]|0;Ga=c[e+4>>2]|0;c[ma>>2]=e;c[na>>2]=(c[ma>>2]|0)+8;c[oa>>2]=c[na>>2];if((Ga|0)!=(c[c[oa>>2]>>2]|0)){c[da>>2]=e;c[ea>>2]=(c[da>>2]|0)+8;c[fa>>2]=c[ea>>2];Fa=c[fa>>2]|0;c[ga>>2]=c[e+4>>2];Ga=c[ga>>2]|0;b=c[ha>>2]|0;c[ia>>2]=Fa;c[ja>>2]=Ga;c[ca>>2]=b;b=c[ja>>2]|0;if((b|0)!=0)a[b>>0]=a[c[ca>>2]>>0]|0;Ga=e+4|0;c[Ga>>2]=(c[Ga>>2]|0)+1}else Lh(e,c[ha>>2]|0);c[_>>2]=(c[g>>2]|0)+28;c[W>>2]=E;b=c[_>>2]|0;Ga=c[b+4>>2]|0;c[$>>2]=b;c[aa>>2]=(c[$>>2]|0)+8;c[ba>>2]=c[aa>>2];if((Ga|0)!=(c[c[ba>>2]>>2]|0)){c[S>>2]=b;c[Q>>2]=(c[S>>2]|0)+8;c[U>>2]=c[Q>>2];Fa=c[U>>2]|0;c[V>>2]=c[b+4>>2];Ga=c[V>>2]|0;e=c[W>>2]|0;c[T>>2]=Fa;c[Y>>2]=Ga;c[Z>>2]=e;e=c[Y>>2]|0;if((e|0)!=0)c[e>>2]=c[c[Z>>2]>>2];Ga=b+4|0;c[Ga>>2]=(c[Ga>>2]|0)+4}else Dh(b,c[W>>2]|0);c[ua>>2]=c[g>>2];c[va>>2]=r;Ga=c[ua>>2]|0;Fa=c[va>>2]|0;a[xa+0>>0]=a[wa+0>>0]|0;c[ya>>2]=Ga;c[za>>2]=Fa;Fa=c[ya>>2]|0;Ga=c[za>>2]|0;c[Aa>>2]=xa;c[Ba>>2]=Fa;c[Ca>>2]=Ga;c[c[g>>2]>>2]=c[((c[c[Ba>>2]>>2]|0)<(c[c[Ca>>2]>>2]|0)?c[za>>2]|0:c[ya>>2]|0)>>2];Ga=c[pa>>2]|0;c[Da>>2]=c[qa>>2];c[Ea>>2]=Ga;c[r>>2]=d[(c[c[Da>>2]>>2]|0)+(c[Ea>>2]|0)>>0];c[E>>2]=0}c[E>>2]=(c[E>>2]|0)+1;c[pa>>2]=(c[pa>>2]|0)+1}Q=(c[g>>2]|0)+4|0;a[X>>0]=c[r>>2];c[R>>2]=Q;c[J>>2]=X;Q=c[R>>2]|0;Ga=c[Q+4>>2]|0;c[M>>2]=Q;c[N>>2]=(c[M>>2]|0)+8;c[O>>2]=c[N>>2];if((Ga|0)!=(c[c[O>>2]>>2]|0)){c[P>>2]=Q;c[G>>2]=(c[P>>2]|0)+8;c[H>>2]=c[G>>2];Fa=c[H>>2]|0;c[I>>2]=c[Q+4>>2];Ga=c[I>>2]|0;G=c[J>>2]|0;c[K>>2]=Fa;c[L>>2]=Ga;c[D>>2]=G;G=c[L>>2]|0;if((G|0)!=0)a[G>>0]=a[c[D>>2]>>0]|0;Ga=Q+4|0;c[Ga>>2]=(c[Ga>>2]|0)+1}else Lh(Q,c[J>>2]|0);c[F>>2]=(c[g>>2]|0)+28;c[t>>2]=E;D=c[F>>2]|0;Ga=c[D+4>>2]|0;c[C>>2]=D;c[u>>2]=(c[C>>2]|0)+8;c[v>>2]=c[u>>2];if((Ga|0)==(c[c[v>>2]>>2]|0)){Dh(D,c[t>>2]|0);Ga=c[g>>2]|0;c[s>>2]=Ga;c[m>>2]=r;Ga=c[s>>2]|0;b=c[m>>2]|0;a[j+0>>0]=a[h+0>>0]|0;c[k>>2]=Ga;c[l>>2]=b;b=c[k>>2]|0;Ga=c[l>>2]|0;c[f>>2]=j;c[n>>2]=b;c[o>>2]=Ga;Ga=c[n>>2]|0;Ga=c[Ga>>2]|0;b=c[o>>2]|0;b=c[b>>2]|0;b=(Ga|0)<(b|0);Ga=c[l>>2]|0;Fa=c[k>>2]|0;Fa=b?Ga:Fa;Fa=c[Fa>>2]|0;Ga=c[g>>2]|0;c[Ga>>2]=Fa;Ga=c[g>>2]|0;Fa=c[Ga>>2]|0;Fa=Fa+1|0;c[Ga>>2]=Fa;i=p;return}c[y>>2]=D;c[z>>2]=(c[y>>2]|0)+8;c[A>>2]=c[z>>2];Fa=c[A>>2]|0;c[B>>2]=c[D+4>>2];Ga=c[B>>2]|0;t=c[t>>2]|0;c[w>>2]=Fa;c[x>>2]=Ga;c[q>>2]=t;t=c[x>>2]|0;if((t|0)!=0)c[t>>2]=c[c[q>>2]>>2];Ga=D+4|0;c[Ga>>2]=(c[Ga>>2]|0)+4;Ga=c[g>>2]|0;c[s>>2]=Ga;c[m>>2]=r;Ga=c[s>>2]|0;b=c[m>>2]|0;a[j+0>>0]=a[h+0>>0]|0;c[k>>2]=Ga;c[l>>2]=b;b=c[k>>2]|0;Ga=c[l>>2]|0;c[f>>2]=j;c[n>>2]=b;c[o>>2]=Ga;Ga=c[n>>2]|0;Ga=c[Ga>>2]|0;b=c[o>>2]|0;b=c[b>>2]|0;b=(Ga|0)<(b|0);Ga=c[l>>2]|0;Fa=c[k>>2]|0;Fa=b?Ga:Fa;Fa=c[Fa>>2]|0;Ga=c[g>>2]|0;c[Ga>>2]=Fa;Ga=c[g>>2]|0;Fa=c[Ga>>2]|0;Fa=Fa+1|0;c[Ga>>2]=Fa;i=p;return}function _d(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0;g=i;i=i+464|0;J=g+212|0;K=g+400|0;L=g+396|0;I=g+4|0;E=g+412|0;F=g+208|0;G=g+28|0;D=g+32|0;z=g+40|0;A=g+48|0;B=g+388|0;y=g+52|0;p=g+60|0;r=g+68|0;q=g+72|0;s=g+76|0;u=g+80|0;t=g+84|0;v=g+88|0;w=g+92|0;M=g+100|0;H=g+104|0;C=g+108|0;x=g+384|0;N=g+112|0;O=g+116|0;ha=g+120|0;ia=g+128|0;ja=g+132|0;ga=g+136|0;ca=g+144|0;da=g+152|0;ea=g+156|0;ba=g+160|0;Z=g+168|0;_=g+176|0;$=g+408|0;Y=g+416|0;P=g+432|0;R=g+456|0;Q=g+460|0;S=g+216|0;U=g+220|0;T=g+224|0;V=g+228|0;W=g+232|0;ka=g+240|0;fa=g+380|0;aa=g+244|0;X=g+248|0;la=g+252|0;ma=g+256|0;Ia=g+260|0;Ja=g+268|0;Ka=g+272|0;Ha=g+276|0;Da=g+284|0;Ea=g+292|0;Fa=g+296|0;Ca=g+300|0;ya=g+308|0;za=g+316|0;Aa=g+320|0;xa=g+324|0;oa=g+332|0;qa=g+340|0;pa=g+344|0;ra=g+348|0;ta=g+352|0;sa=g+356|0;ua=g+360|0;va=g+364|0;La=g+372|0;Ga=g+376|0;Ba=g+392|0;wa=g;Ma=g+12|0;Na=g+404|0;o=g+180|0;na=g+184|0;n=g+420|0;m=g+192|0;l=g+428|0;h=g+16|0;j=g+196|0;k=g+436|0;c[o>>2]=a;c[na>>2]=b;c[n>>2]=d;c[m>>2]=e;c[l>>2]=f;c[Na>>2]=h;c[Ma>>2]=c[Na>>2];c[La>>2]=c[Ma>>2];b=c[La>>2]|0;c[g+368>>2]=b;c[Ja>>2]=Ha;c[Ka>>2]=-1;a=c[Ka>>2]|0;c[Ia>>2]=c[Ja>>2];c[g+264>>2]=a;c[c[Ia>>2]>>2]=0;c[Ga>>2]=c[Ha>>2];c[g+280>>2]=Ga;c[b>>2]=0;c[Ea>>2]=Ca;c[Fa>>2]=-1;a=c[Fa>>2]|0;c[Da>>2]=c[Ea>>2];c[g+288>>2]=a;c[c[Da>>2]>>2]=0;c[Ba>>2]=c[Ca>>2];c[g+304>>2]=Ba;c[b+4>>2]=0;c[za>>2]=xa;c[Aa>>2]=-1;a=c[Aa>>2]|0;c[ya>>2]=c[za>>2];c[g+312>>2]=a;c[c[ya>>2]>>2]=0;c[wa>>2]=c[xa>>2];c[g+328>>2]=wa;c[ua>>2]=b+8;c[va>>2]=0;b=c[va>>2]|0;c[ta>>2]=c[ua>>2];c[sa>>2]=b;b=c[ta>>2]|0;c[ra>>2]=sa;a=c[c[ra>>2]>>2]|0;c[qa>>2]=b;c[pa>>2]=a;a=c[qa>>2]|0;c[g+336>>2]=a;c[oa>>2]=pa;c[a>>2]=c[c[oa>>2]>>2];Td(c[o>>2]|0,c[na>>2]|0,h);c[ma>>2]=j;c[la>>2]=c[ma>>2];c[ka>>2]=c[la>>2];a=c[ka>>2]|0;c[g+236>>2]=a;c[ia>>2]=ga;c[ja>>2]=-1;b=c[ja>>2]|0;c[ha>>2]=c[ia>>2];c[g+124>>2]=b;c[c[ha>>2]>>2]=0;c[fa>>2]=c[ga>>2];c[g+140>>2]=fa;c[a>>2]=0;c[da>>2]=ba;c[ea>>2]=-1;b=c[ea>>2]|0;c[ca>>2]=c[da>>2];c[g+148>>2]=b;c[c[ca>>2]>>2]=0;c[aa>>2]=c[ba>>2];c[g+164>>2]=aa;c[a+4>>2]=0;c[_>>2]=Y;c[$>>2]=-1;b=c[$>>2]|0;c[Z>>2]=c[_>>2];c[g+172>>2]=b;c[c[Z>>2]>>2]=0;c[X>>2]=c[Y>>2];c[g+424>>2]=X;c[V>>2]=a+8;c[W>>2]=0;a=c[W>>2]|0;c[U>>2]=c[V>>2];c[T>>2]=a;a=c[U>>2]|0;c[S>>2]=T;b=c[c[S>>2]>>2]|0;c[R>>2]=a;c[Q>>2]=b;b=c[R>>2]|0;c[g+448>>2]=b;c[P>>2]=Q;c[b>>2]=c[c[P>>2]>>2];c[O>>2]=k;c[N>>2]=c[O>>2];c[M>>2]=c[N>>2];b=c[M>>2]|0;c[g+96>>2]=b;c[K>>2]=I;c[L>>2]=-1;a=c[L>>2]|0;c[J>>2]=c[K>>2];c[g+188>>2]=a;c[c[J>>2]>>2]=0;c[H>>2]=c[I>>2];c[g+8>>2]=H;c[b>>2]=0;c[F>>2]=D;c[G>>2]=-1;a=c[G>>2]|0;c[E>>2]=c[F>>2];c[g+452>>2]=a;c[c[E>>2]>>2]=0;c[C>>2]=c[D>>2];c[g+36>>2]=C;c[b+4>>2]=0;c[A>>2]=y;c[B>>2]=-1;a=c[B>>2]|0;c[z>>2]=c[A>>2];c[g+44>>2]=a;c[c[z>>2]>>2]=0;c[x>>2]=c[y>>2];c[g+56>>2]=x;c[v>>2]=b+8;c[w>>2]=0;b=c[w>>2]|0;c[u>>2]=c[v>>2];c[t>>2]=b;b=c[u>>2]|0;c[s>>2]=t;a=c[c[s>>2]>>2]|0;c[r>>2]=b;c[q>>2]=a;a=c[r>>2]|0;c[g+64>>2]=a;c[p>>2]=q;c[a>>2]=c[c[p>>2]>>2];Vd(c[o>>2]|0,j,k);$d(h,544,100,70,26.0,c[n>>2]|0);ae(j,530,50,40,13.5,c[m>>2]|0);be(k,544,50,40,14.6,c[l>>2]|0);ce(k);de(j);ce(h);i=g;return}function $d(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=+g;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0;k=i;i=i+400|0;Y=k+176|0;_=k+160|0;$=k+156|0;X=k+48|0;W=k+8|0;C=k+368|0;aa=k+376|0;D=k+200|0;E=k+148|0;F=k+24|0;na=k+28|0;ma=k+32|0;H=k+36|0;G=k+40|0;J=k+44|0;L=k+316|0;M=k+108|0;la=k+52|0;ka=k+56|0;ga=k+60|0;fa=k+64|0;ea=k+68|0;ua=k+72|0;sa=k+80|0;ta=k+84|0;ra=k+88|0;za=k+96|0;xa=k+104|0;ya=k+312|0;wa=k+152|0;Ea=k+116|0;Ca=k+124|0;Da=k+128|0;Ba=k+132|0;da=k+140|0;Na=k+356|0;Oa=k+364|0;Ma=k+372|0;Ia=k+380|0;Ja=k+384|0;Ga=k+388|0;Ha=k+180|0;qa=k+188|0;va=k+192|0;Aa=k+196|0;Fa=k+360|0;pa=k+204|0;oa=k+208|0;u=k+212|0;q=k+216|0;p=k+220|0;l=k+224|0;x=k+228|0;w=k+232|0;v=k+236|0;m=k+308|0;s=k+240|0;r=k+244|0;z=k+248|0;n=k+252|0;B=k+256|0;S=k+260|0;U=k+264|0;V=k+268|0;y=k+272|0;R=k+276|0;Q=k+280|0;P=k+284|0;I=k+288|0;ca=k+292|0;ba=k+296|0;La=k+300|0;T=k+304|0;Pa=k+320|0;Qa=k+16|0;t=k+340|0;ha=k+12|0;ia=k+336|0;ja=k+144|0;Z=k;o=k+352|0;Ka=k+392|0;A=k+344|0;N=k+324|0;K=k+164|0;O=k+20|0;c[t>>2]=b;c[ha>>2]=d;c[ia>>2]=e;c[ja>>2]=f;h[Z>>3]=g;c[o>>2]=j;c[Qa>>2]=c[t>>2];b=c[Qa>>2]|0;if((c[b>>2]|0)==(c[b+4>>2]|0)){c[c[o>>2]>>2]=0;i=k;return}c[Pa>>2]=c[t>>2];Qa=c[Pa>>2]|0;if(!(((c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0)>>>0<128)){c[oa>>2]=N;c[pa>>2]=c[oa>>2];c[qa>>2]=c[pa>>2];b=c[qa>>2]|0;c[k+184>>2]=b;c[sa>>2]=ra;c[ta>>2]=-1;Qa=c[ta>>2]|0;c[ua>>2]=c[sa>>2];c[k+76>>2]=Qa;c[c[ua>>2]>>2]=0;c[va>>2]=c[ra>>2];c[k+92>>2]=va;c[b>>2]=0;c[xa>>2]=wa;c[ya>>2]=-1;Qa=c[ya>>2]|0;c[za>>2]=c[xa>>2];c[k+100>>2]=Qa;c[c[za>>2]>>2]=0;c[Aa>>2]=c[wa>>2];c[k+112>>2]=Aa;c[b+4>>2]=0;c[Ca>>2]=Ba;c[Da>>2]=-1;Qa=c[Da>>2]|0;c[Ea>>2]=c[Ca>>2];c[k+120>>2]=Qa;c[c[Ea>>2]>>2]=0;c[Fa>>2]=c[Ba>>2];c[k+136>>2]=Fa;c[Ga>>2]=b+8;c[Ha>>2]=0;b=c[Ha>>2]|0;c[Ia>>2]=c[Ga>>2];c[Ja>>2]=b;b=c[Ia>>2]|0;c[Ma>>2]=Ja;Qa=c[c[Ma>>2]>>2]|0;c[Na>>2]=b;c[Oa>>2]=Qa;Qa=c[Na>>2]|0;c[k+348>>2]=Qa;c[da>>2]=Oa;c[Qa>>2]=c[c[da>>2]>>2];c[ea>>2]=c[t>>2];c[fa>>2]=c[c[ea>>2]>>2];Qa=c[fa>>2]|0;c[ga>>2]=c[t>>2];b=c[ga>>2]|0;Ug(Qa,(c[b+4>>2]|0)-(c[b>>2]|0)|0,c[ha>>2]|0,c[ia>>2]|0,c[ja>>2]|0,N);c[ka>>2]=c[t>>2];c[la>>2]=c[c[ka>>2]>>2];b=c[la>>2]|0;c[ma>>2]=c[t>>2];Qa=c[ma>>2]|0;Vg(b,(c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0,c[ja>>2]|0,N);c[na>>2]=c[t>>2];Qa=c[na>>2]|0;ke(K,(c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0);c[O>>2]=0;while(1){l=c[t>>2]|0;if((c[O>>2]|0)>=10)break;c[W>>2]=l;c[X>>2]=c[c[W>>2]>>2];Qa=c[X>>2]|0;c[Y>>2]=c[t>>2];b=c[Y>>2]|0;b=(c[b+4>>2]|0)-(c[b>>2]|0)|0;g=+h[Z>>3];c[_>>2]=K;c[$>>2]=0;Wg(Qa,b,g,N,(c[c[_>>2]>>2]|0)+(c[$>>2]|0)|0);c[aa>>2]=c[t>>2];c[C>>2]=c[c[aa>>2]>>2];b=c[C>>2]|0;c[D>>2]=c[t>>2];Qa=c[D>>2]|0;Qa=(c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0;c[E>>2]=K;c[F>>2]=0;Xg(b,Qa,(c[c[E>>2]>>2]|0)+(c[F>>2]|0)|0,N);c[O>>2]=(c[O>>2]|0)+1}c[G>>2]=l;c[H>>2]=c[c[G>>2]>>2];b=c[H>>2]|0;c[J>>2]=c[t>>2];Qa=c[J>>2]|0;Qa=(c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0;c[L>>2]=K;c[M>>2]=0;Yg(b,Qa,(c[c[L>>2]>>2]|0)+(c[M>>2]|0)|0);Zd(K,c[o>>2]|0);ce(K);Zg(N);i=k;return}c[c[o>>2]>>2]=1;C=(c[o>>2]|0)+4|0;a[Ka>>0]=0;c[La>>2]=C;c[T>>2]=Ka;C=c[La>>2]|0;Qa=c[C+4>>2]|0;c[ba>>2]=C;c[ca>>2]=(c[ba>>2]|0)+8;c[I>>2]=c[ca>>2];if((Qa|0)!=(c[c[I>>2]>>2]|0)){c[P>>2]=C;c[Q>>2]=(c[P>>2]|0)+8;c[R>>2]=c[Q>>2];b=c[R>>2]|0;c[S>>2]=c[C+4>>2];Qa=c[S>>2]|0;D=c[T>>2]|0;c[U>>2]=b;c[V>>2]=Qa;c[y>>2]=D;D=c[V>>2]|0;if((D|0)!=0)a[D>>0]=a[c[y>>2]>>0]|0;Qa=C+4|0;c[Qa>>2]=(c[Qa>>2]|0)+1}else Lh(C,c[T>>2]|0);o=(c[o>>2]|0)+28|0;c[B>>2]=c[t>>2];Qa=c[B>>2]|0;c[A>>2]=(c[Qa+4>>2]|0)-(c[Qa>>2]|0);c[z>>2]=o;c[n>>2]=A;o=c[z>>2]|0;Qa=c[o+4>>2]|0;c[r>>2]=o;c[s>>2]=(c[r>>2]|0)+8;c[m>>2]=c[s>>2];if((Qa|0)==(c[c[m>>2]>>2]|0)){Dh(o,c[n>>2]|0);i=k;return}c[v>>2]=o;c[w>>2]=(c[v>>2]|0)+8;c[x>>2]=c[w>>2];b=c[x>>2]|0;c[u>>2]=c[o+4>>2];Qa=c[u>>2]|0;m=c[n>>2]|0;c[q>>2]=b;c[p>>2]=Qa;c[l>>2]=m;m=c[p>>2]|0;if((m|0)!=0)c[m>>2]=c[c[l>>2]>>2];Qa=o+4|0;c[Qa>>2]=(c[Qa>>2]|0)+4;i=k;return}function ae(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=+g;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0;k=i;i=i+400|0;Y=k+176|0;_=k+160|0;$=k+156|0;X=k+48|0;W=k+8|0;C=k+368|0;aa=k+376|0;D=k+200|0;E=k+148|0;F=k+24|0;na=k+28|0;ma=k+32|0;H=k+36|0;G=k+40|0;J=k+44|0;L=k+316|0;M=k+108|0;la=k+52|0;ka=k+56|0;ga=k+60|0;fa=k+64|0;ea=k+68|0;ua=k+72|0;sa=k+80|0;ta=k+84|0;ra=k+88|0;za=k+96|0;xa=k+104|0;ya=k+312|0;wa=k+152|0;Ea=k+116|0;Ca=k+124|0;Da=k+128|0;Ba=k+132|0;da=k+140|0;Na=k+356|0;Oa=k+364|0;Ma=k+372|0;Ia=k+380|0;Ja=k+384|0;Ga=k+388|0;Ha=k+180|0;qa=k+188|0;va=k+192|0;Aa=k+196|0;Fa=k+360|0;pa=k+204|0;oa=k+208|0;u=k+212|0;q=k+216|0;p=k+220|0;l=k+224|0;x=k+228|0;w=k+232|0;v=k+236|0;m=k+308|0;s=k+240|0;r=k+244|0;z=k+248|0;n=k+252|0;B=k+256|0;S=k+260|0;U=k+264|0;V=k+268|0;y=k+272|0;R=k+276|0;Q=k+280|0;P=k+284|0;I=k+288|0;ca=k+292|0;ba=k+296|0;La=k+300|0;T=k+304|0;Pa=k+320|0;Qa=k+16|0;t=k+340|0;ha=k+12|0;ia=k+336|0;ja=k+144|0;Z=k;o=k+352|0;Ka=k+392|0;A=k+344|0;N=k+324|0;K=k+164|0;O=k+20|0;c[t>>2]=b;c[ha>>2]=d;c[ia>>2]=e;c[ja>>2]=f;h[Z>>3]=g;c[o>>2]=j;c[Qa>>2]=c[t>>2];b=c[Qa>>2]|0;if((c[b>>2]|0)==(c[b+4>>2]|0)){c[c[o>>2]>>2]=0;i=k;return}c[Pa>>2]=c[t>>2];Qa=c[Pa>>2]|0;if(!((((c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0)/2|0)>>>0<128)){c[oa>>2]=N;c[pa>>2]=c[oa>>2];c[qa>>2]=c[pa>>2];b=c[qa>>2]|0;c[k+184>>2]=b;c[sa>>2]=ra;c[ta>>2]=-1;Qa=c[ta>>2]|0;c[ua>>2]=c[sa>>2];c[k+76>>2]=Qa;c[c[ua>>2]>>2]=0;c[va>>2]=c[ra>>2];c[k+92>>2]=va;c[b>>2]=0;c[xa>>2]=wa;c[ya>>2]=-1;Qa=c[ya>>2]|0;c[za>>2]=c[xa>>2];c[k+100>>2]=Qa;c[c[za>>2]>>2]=0;c[Aa>>2]=c[wa>>2];c[k+112>>2]=Aa;c[b+4>>2]=0;c[Ca>>2]=Ba;c[Da>>2]=-1;Qa=c[Da>>2]|0;c[Ea>>2]=c[Ca>>2];c[k+120>>2]=Qa;c[c[Ea>>2]>>2]=0;c[Fa>>2]=c[Ba>>2];c[k+136>>2]=Fa;c[Ga>>2]=b+8;c[Ha>>2]=0;b=c[Ha>>2]|0;c[Ia>>2]=c[Ga>>2];c[Ja>>2]=b;b=c[Ia>>2]|0;c[Ma>>2]=Ja;Qa=c[c[Ma>>2]>>2]|0;c[Na>>2]=b;c[Oa>>2]=Qa;Qa=c[Na>>2]|0;c[k+348>>2]=Qa;c[da>>2]=Oa;c[Qa>>2]=c[c[da>>2]>>2];c[ea>>2]=c[t>>2];c[fa>>2]=c[c[ea>>2]>>2];Qa=c[fa>>2]|0;c[ga>>2]=c[t>>2];b=c[ga>>2]|0;jg(Qa,((c[b+4>>2]|0)-(c[b>>2]|0)|0)/2|0,c[ha>>2]|0,c[ia>>2]|0,c[ja>>2]|0,N);c[ka>>2]=c[t>>2];c[la>>2]=c[c[ka>>2]>>2];b=c[la>>2]|0;c[ma>>2]=c[t>>2];Qa=c[ma>>2]|0;kg(b,((c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0)/2|0,c[ja>>2]|0,N);c[na>>2]=c[t>>2];Qa=c[na>>2]|0;ke(K,((c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0)/2|0);c[O>>2]=0;while(1){l=c[t>>2]|0;if((c[O>>2]|0)>=10)break;c[W>>2]=l;c[X>>2]=c[c[W>>2]>>2];Qa=c[X>>2]|0;c[Y>>2]=c[t>>2];b=c[Y>>2]|0;b=((c[b+4>>2]|0)-(c[b>>2]|0)|0)/2|0;g=+h[Z>>3];c[_>>2]=K;c[$>>2]=0;lg(Qa,b,g,N,(c[c[_>>2]>>2]|0)+(c[$>>2]|0)|0);c[aa>>2]=c[t>>2];c[C>>2]=c[c[aa>>2]>>2];b=c[C>>2]|0;c[D>>2]=c[t>>2];Qa=c[D>>2]|0;Qa=((c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0)/2|0;c[E>>2]=K;c[F>>2]=0;mg(b,Qa,(c[c[E>>2]>>2]|0)+(c[F>>2]|0)|0,N);c[O>>2]=(c[O>>2]|0)+1}c[G>>2]=l;c[H>>2]=c[c[G>>2]>>2];b=c[H>>2]|0;c[J>>2]=c[t>>2];Qa=c[J>>2]|0;Qa=((c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0)/2|0;c[L>>2]=K;c[M>>2]=0;ng(b,Qa,(c[c[L>>2]>>2]|0)+(c[M>>2]|0)|0);Zd(K,c[o>>2]|0);ce(K);og(N);i=k;return}c[c[o>>2]>>2]=1;C=(c[o>>2]|0)+4|0;a[Ka>>0]=0;c[La>>2]=C;c[T>>2]=Ka;C=c[La>>2]|0;Qa=c[C+4>>2]|0;c[ba>>2]=C;c[ca>>2]=(c[ba>>2]|0)+8;c[I>>2]=c[ca>>2];if((Qa|0)!=(c[c[I>>2]>>2]|0)){c[P>>2]=C;c[Q>>2]=(c[P>>2]|0)+8;c[R>>2]=c[Q>>2];b=c[R>>2]|0;c[S>>2]=c[C+4>>2];Qa=c[S>>2]|0;D=c[T>>2]|0;c[U>>2]=b;c[V>>2]=Qa;c[y>>2]=D;D=c[V>>2]|0;if((D|0)!=0)a[D>>0]=a[c[y>>2]>>0]|0;Qa=C+4|0;c[Qa>>2]=(c[Qa>>2]|0)+1}else Lh(C,c[T>>2]|0);o=(c[o>>2]|0)+28|0;c[B>>2]=c[t>>2];Qa=c[B>>2]|0;c[A>>2]=((c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0)/2|0;c[z>>2]=o;c[n>>2]=A;o=c[z>>2]|0;Qa=c[o+4>>2]|0;c[r>>2]=o;c[s>>2]=(c[r>>2]|0)+8;c[m>>2]=c[s>>2];if((Qa|0)==(c[c[m>>2]>>2]|0)){Dh(o,c[n>>2]|0);i=k;return}c[v>>2]=o;c[w>>2]=(c[v>>2]|0)+8;c[x>>2]=c[w>>2];b=c[x>>2]|0;c[u>>2]=c[o+4>>2];Qa=c[u>>2]|0;m=c[n>>2]|0;c[q>>2]=b;c[p>>2]=Qa;c[l>>2]=m;m=c[p>>2]|0;if((m|0)!=0)c[m>>2]=c[c[l>>2]>>2];Qa=o+4|0;c[Qa>>2]=(c[Qa>>2]|0)+4;i=k;return}function be(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=+g;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0;k=i;i=i+400|0;Y=k+176|0;_=k+160|0;$=k+156|0;X=k+48|0;W=k+8|0;C=k+368|0;aa=k+376|0;D=k+200|0;E=k+148|0;F=k+24|0;na=k+28|0;ma=k+32|0;H=k+36|0;G=k+40|0;J=k+44|0;L=k+316|0;M=k+108|0;la=k+52|0;ka=k+56|0;ga=k+60|0;fa=k+64|0;ea=k+68|0;ua=k+72|0;sa=k+80|0;ta=k+84|0;ra=k+88|0;za=k+96|0;xa=k+104|0;ya=k+312|0;wa=k+152|0;Ea=k+116|0;Ca=k+124|0;Da=k+128|0;Ba=k+132|0;da=k+140|0;Na=k+356|0;Oa=k+364|0;Ma=k+372|0;Ia=k+380|0;Ja=k+384|0;Ga=k+388|0;Ha=k+180|0;qa=k+188|0;va=k+192|0;Aa=k+196|0;Fa=k+360|0;pa=k+204|0;oa=k+208|0;u=k+212|0;q=k+216|0;p=k+220|0;l=k+224|0;x=k+228|0;w=k+232|0;v=k+236|0;m=k+308|0;s=k+240|0;r=k+244|0;z=k+248|0;n=k+252|0;B=k+256|0;S=k+260|0;U=k+264|0;V=k+268|0;y=k+272|0;R=k+276|0;Q=k+280|0;P=k+284|0;I=k+288|0;ca=k+292|0;ba=k+296|0;La=k+300|0;T=k+304|0;Pa=k+320|0;Qa=k+16|0;t=k+340|0;ha=k+12|0;ia=k+336|0;ja=k+144|0;Z=k;o=k+352|0;Ka=k+392|0;A=k+344|0;N=k+324|0;K=k+164|0;O=k+20|0;c[t>>2]=b;c[ha>>2]=d;c[ia>>2]=e;c[ja>>2]=f;h[Z>>3]=g;c[o>>2]=j;c[Qa>>2]=c[t>>2];b=c[Qa>>2]|0;if((c[b>>2]|0)==(c[b+4>>2]|0)){c[c[o>>2]>>2]=0;i=k;return}c[Pa>>2]=c[t>>2];Qa=c[Pa>>2]|0;if(!(((c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0)>>>0<128)){c[oa>>2]=N;c[pa>>2]=c[oa>>2];c[qa>>2]=c[pa>>2];b=c[qa>>2]|0;c[k+184>>2]=b;c[sa>>2]=ra;c[ta>>2]=-1;Qa=c[ta>>2]|0;c[ua>>2]=c[sa>>2];c[k+76>>2]=Qa;c[c[ua>>2]>>2]=0;c[va>>2]=c[ra>>2];c[k+92>>2]=va;c[b>>2]=0;c[xa>>2]=wa;c[ya>>2]=-1;Qa=c[ya>>2]|0;c[za>>2]=c[xa>>2];c[k+100>>2]=Qa;c[c[za>>2]>>2]=0;c[Aa>>2]=c[wa>>2];c[k+112>>2]=Aa;c[b+4>>2]=0;c[Ca>>2]=Ba;c[Da>>2]=-1;Qa=c[Da>>2]|0;c[Ea>>2]=c[Ca>>2];c[k+120>>2]=Qa;c[c[Ea>>2]>>2]=0;c[Fa>>2]=c[Ba>>2];c[k+136>>2]=Fa;c[Ga>>2]=b+8;c[Ha>>2]=0;b=c[Ha>>2]|0;c[Ia>>2]=c[Ga>>2];c[Ja>>2]=b;b=c[Ia>>2]|0;c[Ma>>2]=Ja;Qa=c[c[Ma>>2]>>2]|0;c[Na>>2]=b;c[Oa>>2]=Qa;Qa=c[Na>>2]|0;c[k+348>>2]=Qa;c[da>>2]=Oa;c[Qa>>2]=c[c[da>>2]>>2];c[ea>>2]=c[t>>2];c[fa>>2]=c[c[ea>>2]>>2];Qa=c[fa>>2]|0;c[ga>>2]=c[t>>2];b=c[ga>>2]|0;ie(Qa,(c[b+4>>2]|0)-(c[b>>2]|0)|0,c[ha>>2]|0,c[ia>>2]|0,c[ja>>2]|0,N);c[ka>>2]=c[t>>2];c[la>>2]=c[c[ka>>2]>>2];b=c[la>>2]|0;c[ma>>2]=c[t>>2];Qa=c[ma>>2]|0;je(b,(c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0,c[ja>>2]|0,N);c[na>>2]=c[t>>2];Qa=c[na>>2]|0;ke(K,(c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0);c[O>>2]=0;while(1){l=c[t>>2]|0;if((c[O>>2]|0)>=10)break;c[W>>2]=l;c[X>>2]=c[c[W>>2]>>2];Qa=c[X>>2]|0;c[Y>>2]=c[t>>2];b=c[Y>>2]|0;b=(c[b+4>>2]|0)-(c[b>>2]|0)|0;g=+h[Z>>3];c[_>>2]=K;c[$>>2]=0;le(Qa,b,g,N,(c[c[_>>2]>>2]|0)+(c[$>>2]|0)|0);c[aa>>2]=c[t>>2];c[C>>2]=c[c[aa>>2]>>2];b=c[C>>2]|0;c[D>>2]=c[t>>2];Qa=c[D>>2]|0;Qa=(c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0;c[E>>2]=K;c[F>>2]=0;me(b,Qa,(c[c[E>>2]>>2]|0)+(c[F>>2]|0)|0,N);c[O>>2]=(c[O>>2]|0)+1}c[G>>2]=l;c[H>>2]=c[c[G>>2]>>2];b=c[H>>2]|0;c[J>>2]=c[t>>2];Qa=c[J>>2]|0;Qa=(c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0;c[L>>2]=K;c[M>>2]=0;ne(b,Qa,(c[c[L>>2]>>2]|0)+(c[M>>2]|0)|0);Zd(K,c[o>>2]|0);ce(K);oe(N);i=k;return}c[c[o>>2]>>2]=1;C=(c[o>>2]|0)+4|0;a[Ka>>0]=0;c[La>>2]=C;c[T>>2]=Ka;C=c[La>>2]|0;Qa=c[C+4>>2]|0;c[ba>>2]=C;c[ca>>2]=(c[ba>>2]|0)+8;c[I>>2]=c[ca>>2];if((Qa|0)!=(c[c[I>>2]>>2]|0)){c[P>>2]=C;c[Q>>2]=(c[P>>2]|0)+8;c[R>>2]=c[Q>>2];b=c[R>>2]|0;c[S>>2]=c[C+4>>2];Qa=c[S>>2]|0;D=c[T>>2]|0;c[U>>2]=b;c[V>>2]=Qa;c[y>>2]=D;D=c[V>>2]|0;if((D|0)!=0)a[D>>0]=a[c[y>>2]>>0]|0;Qa=C+4|0;c[Qa>>2]=(c[Qa>>2]|0)+1}else Lh(C,c[T>>2]|0);o=(c[o>>2]|0)+28|0;c[B>>2]=c[t>>2];Qa=c[B>>2]|0;c[A>>2]=(c[Qa+4>>2]|0)-(c[Qa>>2]|0);c[z>>2]=o;c[n>>2]=A;o=c[z>>2]|0;Qa=c[o+4>>2]|0;c[r>>2]=o;c[s>>2]=(c[r>>2]|0)+8;c[m>>2]=c[s>>2];if((Qa|0)==(c[c[m>>2]>>2]|0)){Dh(o,c[n>>2]|0);i=k;return}c[v>>2]=o;c[w>>2]=(c[v>>2]|0)+8;c[x>>2]=c[w>>2];b=c[x>>2]|0;c[u>>2]=c[o+4>>2];Qa=c[u>>2]|0;m=c[n>>2]|0;c[q>>2]=b;c[p>>2]=Qa;c[l>>2]=m;m=c[p>>2]|0;if((m|0)!=0)c[m>>2]=c[c[l>>2]>>2];Qa=o+4|0;c[Qa>>2]=(c[Qa>>2]|0)+4;i=k;return}function ce(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;bi(c[d>>2]|0);i=b;return}function de(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;$h(c[d>>2]|0);i=b;return}function ee(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;_h(c[d>>2]|0);i=b;return}function fe(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;k=i;i=i+64|0;d=k+36|0;e=k+8|0;l=k+32|0;j=k+40|0;f=k+48|0;g=k+16|0;m=k;n=k+24|0;o=k+4|0;p=k+28|0;h=k+20|0;c[p>>2]=a;c[h>>2]=b;b=c[p>>2]|0;a=c[h>>2]|0;if(a>>>0>(xd(b)|0)>>>0)Zt(b);else{c[o>>2]=b;c[n>>2]=(c[o>>2]|0)+8;c[m>>2]=c[n>>2];p=c[h>>2]|0;c[e>>2]=c[m>>2];c[l>>2]=p;p=c[l>>2]|0;c[k+44>>2]=c[e>>2];c[d>>2]=p;c[k+12>>2]=0;p=Gx(c[d>>2]<<5)|0;c[b+4>>2]=p;c[b>>2]=p;p=(c[b>>2]|0)+(c[h>>2]<<5)|0;c[g>>2]=b;c[f>>2]=(c[g>>2]|0)+8;c[j>>2]=c[f>>2];c[c[j>>2]>>2]=p;i=k;return}}function ge(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;k=i;i=i+48|0;g=k+36|0;j=k+16|0;e=k;l=k+28|0;n=k+32|0;o=k+40|0;p=k+12|0;q=k+24|0;h=k+20|0;m=k+8|0;f=k+4|0;c[q>>2]=a;c[h>>2]=b;c[m>>2]=d;d=c[q>>2]|0;c[p>>2]=d;c[o>>2]=(c[p>>2]|0)+8;c[n>>2]=c[o>>2];c[f>>2]=c[n>>2];while(1){if((c[h>>2]|0)==(c[m>>2]|0))break;p=c[f>>2]|0;c[g>>2]=c[d+4>>2];q=c[g>>2]|0;b=c[h>>2]|0;c[j>>2]=p;c[e>>2]=q;c[l>>2]=b;b=c[e>>2]|0;if((b|0)!=0){q=c[l>>2]|0;c[b+0>>2]=c[q+0>>2];c[b+4>>2]=c[q+4>>2];c[b+8>>2]=c[q+8>>2];c[b+12>>2]=c[q+12>>2];c[b+16>>2]=c[q+16>>2];c[b+20>>2]=c[q+20>>2];c[b+24>>2]=c[q+24>>2];c[b+28>>2]=c[q+28>>2]}q=d+4|0;c[q>>2]=(c[q>>2]|0)+32;c[h>>2]=(c[h>>2]|0)+32}i=k;return}function he(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=i;i=i+144|0;w=d+48|0;B=d+8|0;C=d+84|0;A=d;x=d+16|0;y=d+4|0;z=d+132|0;v=d+80|0;u=d+44|0;t=d+20|0;E=d+24|0;e=d+28|0;D=d+32|0;g=d+36|0;f=d+40|0;s=d+76|0;l=d+124|0;k=d+128|0;j=d+52|0;h=d+56|0;p=d+64|0;q=d+68|0;r=d+92|0;m=d+96|0;n=d+100|0;o=d+104|0;I=d+108|0;K=d+116|0;J=d+120|0;H=d+88|0;F=d+72|0;G=d+12|0;c[F>>2]=b;b=c[F>>2]|0;F=c[b>>2]|0;c[K>>2]=H;c[J>>2]=-1;J=c[J>>2]|0;c[I>>2]=c[K>>2];c[d+112>>2]=J;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[d+60>>2]=G;if((F|0)==0){i=d;return}c[D>>2]=b;K=c[D>>2]|0;D=c[K>>2]|0;c[E>>2]=K;c[e>>2]=D;D=c[E>>2]|0;while(1){if((c[e>>2]|0)==(c[D+4>>2]|0))break;c[t>>2]=D;c[u>>2]=(c[t>>2]|0)+8;c[v>>2]=c[u>>2];K=c[v>>2]|0;I=D+4|0;J=(c[I>>2]|0)+ -32|0;c[I>>2]=J;c[w>>2]=J;J=c[w>>2]|0;c[x>>2]=K;c[y>>2]=J;J=c[x>>2]|0;K=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=J;c[C>>2]=K}c[s>>2]=b;c[f>>2]=(c[s>>2]|0)+8;c[g>>2]=c[f>>2];I=c[g>>2]|0;K=c[b>>2]|0;c[h>>2]=b;J=c[h>>2]|0;c[j>>2]=J;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];J=((c[c[l>>2]>>2]|0)-(c[J>>2]|0)|0)/32|0;c[m>>2]=I;c[n>>2]=K;c[o>>2]=J;J=c[n>>2]|0;K=c[o>>2]|0;c[p>>2]=c[m>>2];c[q>>2]=J;c[r>>2]=K;Ix(c[q>>2]|0);i=d;return}function ie(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;x=i;i=i+2192|0;m=x+2124|0;o=x+2152|0;p=x+2108|0;q=x+2148|0;l=x+2100|0;k=x+2096|0;t=x+2104|0;z=x+2144|0;y=x+2136|0;j=x+2112|0;w=x+2116|0;n=x+2120|0;s=x+2184|0;A=x+2128|0;G=x+2132|0;F=x+2140|0;u=x+2156|0;v=x+2160|0;E=x+2164|0;B=x+2168|0;C=x+2172|0;D=x+2176|0;h=x+2180|0;r=x;c[s>>2]=a;c[A>>2]=b;c[G>>2]=d;c[F>>2]=e;c[u>>2]=f;c[v>>2]=g;c[E>>2]=(((c[A>>2]|0)>>>0)/((c[G>>2]|0)>>>0)|0)+1;if((c[E>>2]|0)>(c[F>>2]|0))c[E>>2]=c[F>>2];c[B>>2]=7;c[C>>2]=((c[A>>2]|0)>>>0)/((c[E>>2]|0)>>>0)|0;c[D>>2]=0;while(1){if((c[D>>2]|0)>=(c[E>>2]|0))break;G=da(c[A>>2]|0,c[D>>2]|0)|0;c[h>>2]=(G>>>0)/((c[E>>2]|0)>>>0)|0;if((c[D>>2]|0)!=0){G=Wy(B)|0;c[h>>2]=(c[h>>2]|0)+((G|0)%(c[C>>2]|0)|0)}if(((c[h>>2]|0)+(c[u>>2]|0)|0)>>>0>=(c[A>>2]|0)>>>0)c[h>>2]=(c[A>>2]|0)-(c[u>>2]|0)-1;se(r);ig(r,(c[s>>2]|0)+(c[h>>2]|0)|0,c[u>>2]|0);c[w>>2]=c[v>>2];c[n>>2]=r;g=c[w>>2]|0;G=c[g+4>>2]|0;c[j>>2]=g;c[y>>2]=(c[j>>2]|0)+8;c[z>>2]=c[y>>2];if((G|0)!=(c[c[z>>2]>>2]|0)){c[t>>2]=g;c[k>>2]=(c[t>>2]|0)+8;c[l>>2]=c[k>>2];a=c[l>>2]|0;c[m>>2]=c[g+4>>2];G=c[m>>2]|0;F=c[n>>2]|0;c[o>>2]=a;c[p>>2]=G;c[q>>2]=F;F=c[p>>2]|0;if((F|0)!=0)qz(F|0,c[q>>2]|0,2096)|0;G=g+4|0;c[G>>2]=(c[G>>2]|0)+2096}else _f(g,c[n>>2]|0);c[D>>2]=(c[D>>2]|0)+1}i=x;return}function je(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;n=i;i=i+2160|0;t=n+2144|0;p=n+2124|0;r=n+2116|0;s=n+2108|0;u=n+2120|0;v=n+2100|0;l=n+2104|0;m=n+2148|0;f=n+2112|0;o=n+2128|0;h=n+2132|0;k=n+2136|0;g=n+2140|0;j=n;q=n+2096|0;c[l>>2]=a;c[m>>2]=b;c[f>>2]=d;c[o>>2]=e;c[h>>2]=((c[m>>2]<<1>>>0)/((c[f>>2]|0)>>>0)|0)+100;c[k>>2]=7;b=c[h>>2]|0;c[v>>2]=c[o>>2];a=c[v>>2]|0;a=b+(((c[a+4>>2]|0)-(c[a>>2]|0)|0)/2096|0)-1|0;c[u>>2]=c[o>>2];b=c[u>>2]|0;b=(a>>>0)/((((c[b+4>>2]|0)-(c[b>>2]|0)|0)/2096|0)>>>0)|0;c[t>>2]=c[o>>2];a=c[t>>2]|0;c[h>>2]=da(b,((c[a+4>>2]|0)-(c[a>>2]|0)|0)/2096|0)|0;c[g>>2]=0;while(1){if((c[g>>2]|0)>=(c[h>>2]|0))break;se(j);hg(k,c[l>>2]|0,c[m>>2]|0,c[f>>2]|0,j);u=c[g>>2]|0;c[p>>2]=c[o>>2];v=c[p>>2]|0;c[q>>2]=(u>>>0)%((((c[v+4>>2]|0)-(c[v>>2]|0)|0)/2096|0)>>>0)|0;v=c[q>>2]|0;c[r>>2]=c[o>>2];c[s>>2]=v;af((c[c[r>>2]>>2]|0)+((c[s>>2]|0)*2096|0)|0,j);c[g>>2]=(c[g>>2]|0)+1}i=n;return}function ke(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;cg(c[f>>2]|0,c[e>>2]|0);i=d;return}function le(b,e,f,g,j){b=b|0;e=e|0;f=+f;g=g|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;k=i;i=i+128|0;H=k+52|0;I=k+48|0;J=k+96|0;K=k+112|0;L=k+104|0;M=k+32|0;D=k+92|0;B=k+28|0;y=k+8|0;G=k+36|0;o=k+80|0;p=k+40|0;u=k+108|0;q=k+116|0;F=k+120|0;E=k+56|0;m=k+60|0;l=k+64|0;x=k+76|0;C=k+68|0;n=k+72|0;A=k;z=k+100|0;w=k+16|0;v=k+88|0;r=k+84|0;t=k+24|0;s=k+44|0;c[D>>2]=b;c[B>>2]=e;h[y>>3]=f;c[G>>2]=g;c[o>>2]=j;c[M>>2]=c[G>>2];b=c[M>>2]|0;if((((c[b+4>>2]|0)-(c[b>>2]|0)|0)/2096|0)>>>0<=1){c[p>>2]=0;while(1){if(!((c[p>>2]|0)>>>0<(c[B>>2]|0)>>>0))break;a[(c[o>>2]|0)+(c[p>>2]|0)>>0]=0;c[p>>2]=(c[p>>2]|0)+1}i=k;return}c[L>>2]=c[G>>2];M=c[L>>2]|0;c[u>>2]=((c[M+4>>2]|0)-(c[M>>2]|0)|0)/2096|0;M=(c[u>>2]|0)*520|0;c[q>>2]=Hx(M>>>0>536870911?-1:M<<3)|0;lz(c[q>>2]|0,0,(c[u>>2]|0)*4160|0)|0;c[F>>2]=0;while(1){if((c[F>>2]|0)>=520)break;c[E>>2]=0;while(1){if((c[E>>2]|0)>=(c[u>>2]|0))break;b=c[E>>2]|0;c[H>>2]=c[G>>2];c[I>>2]=b;b=c[(c[c[H>>2]>>2]|0)+((c[I>>2]|0)*2096|0)+2080>>2]|0;M=c[F>>2]|0;e=c[E>>2]|0;c[J>>2]=c[G>>2];c[K>>2]=e;f=+bg(b,c[(c[c[J>>2]>>2]|0)+((c[K>>2]|0)*2096|0)+(M<<2)>>2]|0);M=da(c[F>>2]|0,c[u>>2]|0)|0;h[(c[q>>2]|0)+(M+(c[E>>2]|0)<<3)>>3]=f;c[E>>2]=(c[E>>2]|0)+1}c[F>>2]=(c[F>>2]|0)+1}M=c[u>>2]|0;c[m>>2]=Hx(M>>>0>536870911?-1:M<<3)|0;lz(c[m>>2]|0,0,c[u>>2]<<3|0)|0;c[l>>2]=Hx(da(c[B>>2]|0,c[u>>2]|0)|0)|0;lz(c[l>>2]|0,0,da(c[B>>2]|0,c[u>>2]|0)|0)|0;c[x>>2]=0;while(1){if(!((c[x>>2]|0)>>>0<(c[B>>2]|0)>>>0))break;c[C>>2]=da(c[x>>2]|0,c[u>>2]|0)|0;c[n>>2]=da(d[(c[D>>2]|0)+(c[x>>2]|0)>>0]|0,c[u>>2]|0)|0;h[A>>3]=1.0e+99;c[z>>2]=0;while(1){if((c[z>>2]|0)>=(c[u>>2]|0))break;M=(c[m>>2]|0)+(c[z>>2]<<3)|0;h[M>>3]=+h[M>>3]+ +h[(c[q>>2]|0)+((c[n>>2]|0)+(c[z>>2]|0)<<3)>>3];if(+h[(c[m>>2]|0)+(c[z>>2]<<3)>>3]<+h[A>>3]){h[A>>3]=+h[(c[m>>2]|0)+(c[z>>2]<<3)>>3];a[(c[o>>2]|0)+(c[x>>2]|0)>>0]=c[z>>2]}c[z>>2]=(c[z>>2]|0)+1}h[w>>3]=+h[y>>3];if((c[x>>2]|0)>>>0<2e3)h[w>>3]=+h[w>>3]*(+((c[x>>2]|0)>>>0)*.07/2.0e3+.77);c[v>>2]=0;while(1){if((c[v>>2]|0)>=(c[u>>2]|0))break;M=(c[m>>2]|0)+(c[v>>2]<<3)|0;h[M>>3]=+h[M>>3]- +h[A>>3];if(+h[(c[m>>2]|0)+(c[v>>2]<<3)>>3]>=+h[w>>3]){h[(c[m>>2]|0)+(c[v>>2]<<3)>>3]=+h[w>>3];a[(c[l>>2]|0)+((c[C>>2]|0)+(c[v>>2]|0))>>0]=1}c[v>>2]=(c[v>>2]|0)+1}c[x>>2]=(c[x>>2]|0)+1}c[r>>2]=(c[B>>2]|0)-1;c[t>>2]=da(c[r>>2]|0,c[u>>2]|0)|0;c[s>>2]=d[(c[o>>2]|0)+(c[r>>2]|0)>>0];while(1){if((c[r>>2]|0)<=0)break;c[r>>2]=(c[r>>2]|0)+ -1;c[t>>2]=(c[t>>2]|0)-(c[u>>2]|0);if(a[(c[l>>2]|0)+((c[t>>2]|0)+(c[s>>2]|0))>>0]&1)c[s>>2]=d[(c[o>>2]|0)+(c[r>>2]|0)>>0];a[(c[o>>2]|0)+(c[r>>2]|0)>>0]=c[s>>2]}n=c[q>>2]|0;if((n|0)!=0)Jx(n);m=c[m>>2]|0;if((m|0)!=0)Jx(m);l=c[l>>2]|0;if((l|0)==0){i=k;return}Jx(l);i=k;return}function me(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;u=i;i=i+96|0;n=u+28|0;o=u+4|0;q=u+52|0;w=u+24|0;B=u+68|0;C=u+8|0;A=u;x=u+56|0;y=u+64|0;z=u+88|0;v=u+80|0;j=u+84|0;t=u+32|0;D=u+12|0;h=u+44|0;E=u+48|0;F=u+40|0;p=u+36|0;k=u+60|0;l=u+16|0;m=u+20|0;r=u+76|0;s=u+72|0;c[p>>2]=b;c[k>>2]=e;c[l>>2]=f;c[m>>2]=g;c[r>>2]=Wd(c[l>>2]|0,c[k>>2]|0)|0;c[F>>2]=c[m>>2];g=c[F>>2]|0;c[E>>2]=g;b=c[E>>2]|0;f=c[b>>2]|0;c[D>>2]=b;c[h>>2]=f;f=c[D>>2]|0;while(1){if((c[h>>2]|0)==(c[f+4>>2]|0))break;c[t>>2]=f;c[j>>2]=(c[t>>2]|0)+8;c[v>>2]=c[j>>2];F=c[v>>2]|0;D=f+4|0;E=(c[D>>2]|0)+ -2096|0;c[D>>2]=E;c[w>>2]=E;E=c[w>>2]|0;c[x>>2]=F;c[y>>2]=E;E=c[x>>2]|0;F=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=E;c[C>>2]=F}c[q>>2]=g;Ae(c[m>>2]|0,c[r>>2]|0);c[s>>2]=0;while(1){if(!((c[s>>2]|0)>>>0<(c[k>>2]|0)>>>0))break;F=d[(c[l>>2]|0)+(c[s>>2]|0)>>0]|0;c[n>>2]=c[m>>2];c[o>>2]=F;te((c[c[n>>2]>>2]|0)+((c[o>>2]|0)*2096|0)|0,d[(c[p>>2]|0)+(c[s>>2]|0)>>0]|0);c[s>>2]=(c[s>>2]|0)+1}i=u;return}function ne(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0;l=i;i=i+2656|0;q=l+2328|0;r=l+2624|0;o=l+2600|0;p=l+2312|0;Ha=l+2316|0;ga=l+2376|0;ha=l+2536|0;ea=l+2324|0;h=l+2112|0;g=l+2592|0;ja=l+2116|0;na=l+2120|0;oa=l+2124|0;la=l+2128|0;ma=l+2132|0;ka=l+2544|0;qa=l+2196|0;ua=l+2140|0;va=l+2144|0;sa=l+2148|0;ta=l+2152|0;ra=l+2156|0;xa=l+2160|0;Ga=l+2164|0;Fa=l+2168|0;Da=l+2172|0;Ea=l+2176|0;Ca=l+2180|0;Aa=l+2184|0;Ba=l+2188|0;ya=l+2192|0;za=l+2540|0;ca=l+2320|0;ba=l+2200|0;ia=l+2204|0;pa=l+2208|0;wa=l+2212|0;aa=l+2216|0;$=l+2220|0;A=l+2224|0;B=l+2228|0;y=l+2232|0;z=l+2236|0;x=l+2240|0;D=l+2244|0;H=l+2248|0;I=l+2252|0;F=l+2256|0;G=l+2260|0;E=l+2264|0;K=l+2268|0;O=l+2272|0;P=l+2276|0;M=l+2280|0;N=l+2284|0;L=l+2288|0;R=l+2292|0;_=l+2296|0;Z=l+2300|0;X=l+2588|0;Y=l+2596|0;W=l+2604|0;U=l+2612|0;V=l+2620|0;S=l+2628|0;T=l+2644|0;w=l+2648|0;v=l+2332|0;C=l+2336|0;J=l+2340|0;Q=l+2344|0;u=l+2348|0;t=l+2352|0;La=l+2356|0;Na=l+2360|0;Oa=l+2364|0;Pa=l+2368|0;Ka=l+2372|0;Ja=l+2616|0;Ia=l+2380|0;Ua=l+2384|0;Ta=l+2388|0;Sa=l+2392|0;Qa=l+2396|0;Ma=l+2400|0;Ya=l+2404|0;Za=l+2408|0;tb=l+2412|0;ub=l+2420|0;vb=l+2424|0;sb=l+2428|0;ob=l+2436|0;pb=l+2444|0;qb=l+2448|0;nb=l+2452|0;jb=l+2460|0;kb=l+2468|0;lb=l+2472|0;ib=l+2476|0;$a=l+2484|0;bb=l+2492|0;ab=l+2496|0;cb=l+2500|0;eb=l+2504|0;db=l+2508|0;fb=l+2512|0;gb=l+2516|0;wb=l+2524|0;rb=l+2528|0;mb=l+2532|0;hb=l+2136|0;xb=l+2100|0;yb=l+2560|0;_a=l+2108|0;n=l+2096|0;s=l+2104|0;k=l+2548|0;j=l+2576|0;Wa=l+2304|0;Ra=l;Xa=l+2608|0;Va=l+2652|0;da=l+2564|0;fa=l+2632|0;m=l+2308|0;c[_a>>2]=b;c[n>>2]=e;c[s>>2]=f;c[yb>>2]=k;c[xb>>2]=c[yb>>2];c[wb>>2]=c[xb>>2];e=c[wb>>2]|0;c[l+2520>>2]=e;c[ub>>2]=sb;c[vb>>2]=-1;b=c[vb>>2]|0;c[tb>>2]=c[ub>>2];c[l+2416>>2]=b;c[c[tb>>2]>>2]=0;c[rb>>2]=c[sb>>2];c[l+2432>>2]=rb;c[e>>2]=0;c[pb>>2]=nb;c[qb>>2]=-1;b=c[qb>>2]|0;c[ob>>2]=c[pb>>2];c[l+2440>>2]=b;c[c[ob>>2]>>2]=0;c[mb>>2]=c[nb>>2];c[l+2456>>2]=mb;c[e+4>>2]=0;c[kb>>2]=ib;c[lb>>2]=-1;b=c[lb>>2]|0;c[jb>>2]=c[kb>>2];c[l+2464>>2]=b;c[c[jb>>2]>>2]=0;c[hb>>2]=c[ib>>2];c[l+2480>>2]=hb;c[fb>>2]=e+8;c[gb>>2]=0;e=c[gb>>2]|0;c[eb>>2]=c[fb>>2];c[db>>2]=e;e=c[eb>>2]|0;c[cb>>2]=db;b=c[c[cb>>2]>>2]|0;c[bb>>2]=e;c[ab>>2]=b;b=c[bb>>2]|0;c[l+2488>>2]=b;c[$a>>2]=ab;c[b>>2]=c[c[$a>>2]>>2];re(j,c[n>>2]|0);c[Wa>>2]=0;se(Ra);c[Xa>>2]=0;while(1){if(!((c[Xa>>2]|0)>>>0<(c[n>>2]|0)>>>0))break;if(((c[Xa>>2]|0)+1|0)==(c[n>>2]|0))f=1;else f=(d[(c[s>>2]|0)+(c[Xa>>2]|0)>>0]|0|0)!=(d[(c[s>>2]|0)+((c[Xa>>2]|0)+1)>>0]|0|0);a[Va>>0]=f&1;yb=c[Wa>>2]|0;xb=c[Xa>>2]|0;c[Ya>>2]=j;c[Za>>2]=xb;c[(c[c[Ya>>2]>>2]|0)+(c[Za>>2]<<2)>>2]=yb;te(Ra,d[(c[_a>>2]|0)+(c[Xa>>2]|0)>>0]|0);if(a[Va>>0]&1){c[Qa>>2]=k;c[Ma>>2]=Ra;f=c[Qa>>2]|0;yb=c[f+4>>2]|0;c[Sa>>2]=f;c[Ta>>2]=(c[Sa>>2]|0)+8;c[Ua>>2]=c[Ta>>2];if((yb|0)!=(c[c[Ua>>2]>>2]|0)){c[Ia>>2]=f;c[Ja>>2]=(c[Ia>>2]|0)+8;c[Ka>>2]=c[Ja>>2];xb=c[Ka>>2]|0;c[La>>2]=c[f+4>>2];yb=c[La>>2]|0;e=c[Ma>>2]|0;c[Na>>2]=xb;c[Oa>>2]=yb;c[Pa>>2]=e;e=c[Oa>>2]|0;if((e|0)!=0)qz(e|0,c[Pa>>2]|0,2096)|0;yb=f+4|0;c[yb>>2]=(c[yb>>2]|0)+2096}else _f(f,c[Ma>>2]|0);ue(Ra);c[Wa>>2]=(c[Wa>>2]|0)+1}c[Xa>>2]=(c[Xa>>2]|0)+1}c[t>>2]=da;c[u>>2]=c[t>>2];c[v>>2]=c[u>>2];yb=c[v>>2]|0;c[w>>2]=yb;c[y>>2]=x;c[z>>2]=-1;xb=c[z>>2]|0;c[A>>2]=c[y>>2];c[B>>2]=xb;c[c[A>>2]>>2]=0;c[C>>2]=c[x>>2];c[D>>2]=C;c[yb>>2]=0;c[F>>2]=E;c[G>>2]=-1;xb=c[G>>2]|0;c[H>>2]=c[F>>2];c[I>>2]=xb;c[c[H>>2]>>2]=0;c[J>>2]=c[E>>2];c[K>>2]=J;c[yb+4>>2]=0;c[M>>2]=L;c[N>>2]=-1;xb=c[N>>2]|0;c[O>>2]=c[M>>2];c[P>>2]=xb;c[c[O>>2]>>2]=0;c[Q>>2]=c[L>>2];c[R>>2]=Q;c[S>>2]=yb+8;c[T>>2]=0;yb=c[T>>2]|0;c[U>>2]=c[S>>2];c[V>>2]=yb;yb=c[U>>2]|0;c[W>>2]=V;xb=c[c[W>>2]>>2]|0;c[X>>2]=yb;c[Y>>2]=xb;xb=c[X>>2]|0;c[Z>>2]=xb;c[_>>2]=Y;c[xb>>2]=c[c[_>>2]>>2];c[$>>2]=fa;c[aa>>2]=c[$>>2];c[ba>>2]=c[aa>>2];xb=c[ba>>2]|0;c[ca>>2]=xb;c[ea>>2]=g;c[h>>2]=-1;yb=c[h>>2]|0;c[ga>>2]=c[ea>>2];c[ha>>2]=yb;c[c[ga>>2]>>2]=0;c[ia>>2]=c[g>>2];c[ja>>2]=ia;c[xb>>2]=0;c[la>>2]=ka;c[ma>>2]=-1;yb=c[ma>>2]|0;c[na>>2]=c[la>>2];c[oa>>2]=yb;c[c[na>>2]>>2]=0;c[pa>>2]=c[ka>>2];c[qa>>2]=pa;c[xb+4>>2]=0;c[sa>>2]=ra;c[ta>>2]=-1;yb=c[ta>>2]|0;c[ua>>2]=c[sa>>2];c[va>>2]=yb;c[c[ua>>2]>>2]=0;c[wa>>2]=c[ra>>2];c[xa>>2]=wa;c[ya>>2]=xb+8;c[za>>2]=0;xb=c[za>>2]|0;c[Aa>>2]=c[ya>>2];c[Ba>>2]=xb;xb=c[Aa>>2]|0;c[Ca>>2]=Ba;yb=c[c[Ca>>2]>>2]|0;c[Da>>2]=xb;c[Ea>>2]=yb;yb=c[Da>>2]|0;c[Fa>>2]=yb;c[Ga>>2]=Ea;c[yb>>2]=c[c[Ga>>2]>>2];c[Ha>>2]=k;yb=c[Ha>>2]|0;ve(k,1,((c[yb+4>>2]|0)-(c[yb>>2]|0)|0)/2096|0,256,da,fa);c[m>>2]=0;while(1){if(!((c[m>>2]|0)>>>0<(c[n>>2]|0)>>>0))break;yb=c[m>>2]|0;c[o>>2]=j;c[p>>2]=yb;yb=c[(c[c[o>>2]>>2]|0)+(c[p>>2]<<2)>>2]|0;c[q>>2]=fa;c[r>>2]=yb;a[(c[s>>2]|0)+(c[m>>2]|0)>>0]=c[(c[c[q>>2]>>2]|0)+(c[r>>2]<<2)>>2];c[m>>2]=(c[m>>2]|0)+1}we(fa);oe(da);we(j);oe(k);i=l;return}function oe(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;pe(c[d>>2]|0);i=b;return}function pe(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;qe(c[d>>2]|0);i=b;return}function qe(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=i;i=i+144|0;w=d+48|0;B=d+8|0;C=d+84|0;A=d;x=d+16|0;y=d+4|0;z=d+132|0;v=d+80|0;u=d+44|0;t=d+20|0;E=d+24|0;e=d+28|0;D=d+32|0;g=d+36|0;f=d+40|0;s=d+76|0;l=d+124|0;k=d+128|0;j=d+52|0;h=d+56|0;p=d+64|0;q=d+68|0;r=d+92|0;m=d+96|0;n=d+100|0;o=d+104|0;I=d+108|0;K=d+116|0;J=d+120|0;H=d+88|0;F=d+72|0;G=d+12|0;c[F>>2]=b;b=c[F>>2]|0;F=c[b>>2]|0;c[K>>2]=H;c[J>>2]=-1;J=c[J>>2]|0;c[I>>2]=c[K>>2];c[d+112>>2]=J;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[d+60>>2]=G;if((F|0)==0){i=d;return}c[D>>2]=b;K=c[D>>2]|0;D=c[K>>2]|0;c[E>>2]=K;c[e>>2]=D;D=c[E>>2]|0;while(1){if((c[e>>2]|0)==(c[D+4>>2]|0))break;c[t>>2]=D;c[u>>2]=(c[t>>2]|0)+8;c[v>>2]=c[u>>2];K=c[v>>2]|0;I=D+4|0;J=(c[I>>2]|0)+ -2096|0;c[I>>2]=J;c[w>>2]=J;J=c[w>>2]|0;c[x>>2]=K;c[y>>2]=J;J=c[x>>2]|0;K=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=J;c[C>>2]=K}c[s>>2]=b;c[f>>2]=(c[s>>2]|0)+8;c[g>>2]=c[f>>2];I=c[g>>2]|0;K=c[b>>2]|0;c[h>>2]=b;J=c[h>>2]|0;c[j>>2]=J;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];J=((c[c[l>>2]>>2]|0)-(c[J>>2]|0)|0)/2096|0;c[m>>2]=I;c[n>>2]=K;c[o>>2]=J;J=c[n>>2]|0;K=c[o>>2]|0;c[p>>2]=c[m>>2];c[q>>2]=J;c[r>>2]=K;Ix(c[q>>2]|0);i=d;return}function re(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;ag(c[f>>2]|0,c[e>>2]|0);i=d;return}function se(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;$f(c[d>>2]|0);i=b;return}function te(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;a=c[f>>2]|0;b=a+(c[e>>2]<<2)|0;c[b>>2]=(c[b>>2]|0)+1;a=a+2080|0;c[a>>2]=(c[a>>2]|0)+1;i=d;return}function ue(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;lz(a|0,0,2080)|0;c[a+2080>>2]=0;i=b;return}function ve(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0.0;B=i;i=i+176|0;J=B+156|0;K=B+120|0;G=B;H=B+104|0;k=B+64|0;l=B+148|0;n=B+20|0;o=B+108|0;q=B+24|0;r=B+28|0;j=B+32|0;F=B+36|0;v=B+40|0;w=B+44|0;x=B+48|0;y=B+128|0;z=B+136|0;A=B+144|0;U=B+152|0;V=B+160|0;S=B+68|0;T=B+72|0;Q=B+76|0;R=B+80|0;O=B+84|0;P=B+88|0;M=B+92|0;N=B+96|0;u=B+100|0;I=B+4|0;D=B+116|0;t=B+112|0;E=B+124|0;p=B+52|0;s=B+132|0;m=B+8|0;W=B+56|0;L=B+140|0;C=B+60|0;c[u>>2]=a;c[I>>2]=b;c[D>>2]=d;c[t>>2]=e;c[E>>2]=f;c[p>>2]=g;c[s>>2]=da(c[I>>2]|0,c[D>>2]|0)|0;a=c[s>>2]|0;c[W>>2]=1;ze(m,a,W);Ae(c[E>>2]|0,c[s>>2]|0);Be(c[p>>2]|0,c[s>>2]|0);c[L>>2]=0;while(1){if((c[L>>2]|0)>=(c[s>>2]|0))break;W=c[L>>2]|0;c[M>>2]=c[E>>2];c[N>>2]=W;W=(c[c[M>>2]>>2]|0)+((c[N>>2]|0)*2096|0)|0;a=c[L>>2]|0;c[O>>2]=c[u>>2];c[P>>2]=a;qz(W|0,(c[c[O>>2]>>2]|0)+((c[P>>2]|0)*2096|0)|0,2096)|0;W=c[L>>2]|0;c[Q>>2]=c[u>>2];c[R>>2]=W;X=+Ce((c[c[Q>>2]>>2]|0)+((c[R>>2]|0)*2096|0)|0);W=c[L>>2]|0;c[S>>2]=c[E>>2];c[T>>2]=W;h[(c[c[S>>2]>>2]|0)+((c[T>>2]|0)*2096|0)+2088>>3]=X;W=c[L>>2]|0;a=c[L>>2]|0;c[U>>2]=c[p>>2];c[V>>2]=a;c[(c[c[U>>2]>>2]|0)+(c[V>>2]<<2)>>2]=W;c[L>>2]=(c[L>>2]|0)+1}a:do if((c[I>>2]|0)>1){c[C>>2]=0;while(1){if((c[C>>2]|0)>=(c[D>>2]|0))break a;c[j>>2]=c[E>>2];c[F>>2]=0;a=(c[c[j>>2]>>2]|0)+((c[F>>2]|0)*2096|0)|0;c[G>>2]=m;c[H>>2]=0;W=(c[c[G>>2]>>2]|0)+(c[H>>2]<<2)|0;b=da(c[C>>2]|0,c[I>>2]|0)|0;c[J>>2]=c[p>>2];c[K>>2]=b;De(a,W,(c[c[J>>2]>>2]|0)+(c[K>>2]<<2)|0,c[I>>2]|0,c[t>>2]|0);c[C>>2]=(c[C>>2]|0)+1}}while(0);c[k>>2]=c[E>>2];c[l>>2]=0;a=(c[c[k>>2]>>2]|0)+((c[l>>2]|0)*2096|0)|0;c[n>>2]=m;c[o>>2]=0;b=(c[c[n>>2]>>2]|0)+(c[o>>2]<<2)|0;c[q>>2]=c[p>>2];c[r>>2]=0;De(a,b,(c[c[q>>2]>>2]|0)+(c[r>>2]<<2)|0,c[s>>2]|0,c[t>>2]|0);c[v>>2]=c[u>>2];c[w>>2]=0;b=(c[c[v>>2]>>2]|0)+((c[w>>2]|0)*2096|0)|0;a=c[s>>2]|0;c[x>>2]=c[E>>2];c[y>>2]=0;W=(c[c[x>>2]>>2]|0)+((c[y>>2]|0)*2096|0)|0;c[z>>2]=c[p>>2];c[A>>2]=0;Ee(b,a,W,(c[c[z>>2]>>2]|0)+(c[A>>2]<<2)|0);Fe(c[E>>2]|0,c[p>>2]|0);we(m);i=B;return}function we(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;xe(c[d>>2]|0);i=b;return}function xe(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;ye(c[d>>2]|0);i=b;return}function ye(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=i;i=i+144|0;w=d+48|0;B=d+8|0;C=d+84|0;A=d;x=d+16|0;y=d+4|0;z=d+132|0;v=d+80|0;u=d+44|0;t=d+20|0;E=d+24|0;e=d+28|0;D=d+32|0;g=d+36|0;f=d+40|0;s=d+76|0;l=d+124|0;k=d+128|0;j=d+52|0;h=d+56|0;p=d+64|0;q=d+68|0;r=d+92|0;m=d+96|0;n=d+100|0;o=d+104|0;I=d+108|0;K=d+116|0;J=d+120|0;H=d+88|0;F=d+72|0;G=d+12|0;c[F>>2]=b;b=c[F>>2]|0;F=c[b>>2]|0;c[K>>2]=H;c[J>>2]=-1;J=c[J>>2]|0;c[I>>2]=c[K>>2];c[d+112>>2]=J;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[d+60>>2]=G;if((F|0)==0){i=d;return}c[D>>2]=b;K=c[D>>2]|0;D=c[K>>2]|0;c[E>>2]=K;c[e>>2]=D;D=c[E>>2]|0;while(1){if((c[e>>2]|0)==(c[D+4>>2]|0))break;c[t>>2]=D;c[u>>2]=(c[t>>2]|0)+8;c[v>>2]=c[u>>2];K=c[v>>2]|0;I=D+4|0;J=(c[I>>2]|0)+ -4|0;c[I>>2]=J;c[w>>2]=J;J=c[w>>2]|0;c[x>>2]=K;c[y>>2]=J;J=c[x>>2]|0;K=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=J;c[C>>2]=K}c[s>>2]=b;c[f>>2]=(c[s>>2]|0)+8;c[g>>2]=c[f>>2];I=c[g>>2]|0;K=c[b>>2]|0;c[h>>2]=b;J=c[h>>2]|0;c[j>>2]=J;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];J=((c[c[l>>2]>>2]|0)-(c[J>>2]|0)|0)/4|0;c[m>>2]=I;c[n>>2]=K;c[o>>2]=J;J=c[n>>2]|0;K=c[o>>2]|0;c[p>>2]=c[m>>2];c[q>>2]=J;c[r>>2]=K;Ix(c[q>>2]|0);i=d;return}function ze(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;h=e+8|0;g=e+4|0;f=e;c[h>>2]=a;c[g>>2]=b;c[f>>2]=d;Yf(c[h>>2]|0,c[g>>2]|0,c[f>>2]|0);i=e;return}function Ae(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;o=i;i=i+80|0;m=o+36|0;n=o+4|0;g=o+28|0;q=o;e=o+32|0;f=o+8|0;p=o+68|0;l=o+24|0;k=o+60|0;j=o+64|0;v=o+40|0;h=o+44|0;t=o+48|0;u=o+52|0;w=o+56|0;x=o+16|0;s=o+20|0;r=o+12|0;c[x>>2]=b;c[s>>2]=d;d=c[x>>2]|0;c[w>>2]=d;b=c[w>>2]|0;c[r>>2]=((c[b+4>>2]|0)-(c[b>>2]|0)|0)/2096|0;if((c[r>>2]|0)>>>0<(c[s>>2]|0)>>>0){Qf(d,(c[s>>2]|0)-(c[r>>2]|0)|0);i=o;return}if(!((c[r>>2]|0)>>>0>(c[s>>2]|0)>>>0)){i=o;return}r=(c[d>>2]|0)+((c[s>>2]|0)*2096|0)|0;c[t>>2]=d;c[u>>2]=r;r=c[u>>2]|0;c[v>>2]=c[t>>2];c[h>>2]=r;r=c[v>>2]|0;while(1){if((c[h>>2]|0)==(c[r+4>>2]|0))break;c[j>>2]=r;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];x=c[l>>2]|0;b=r+4|0;w=(c[b>>2]|0)+ -2096|0;c[b>>2]=w;c[m>>2]=w;w=c[m>>2]|0;c[e>>2]=x;c[f>>2]=w;w=c[e>>2]|0;x=c[f>>2]|0;a[q+0>>0]=a[p+0>>0]|0;c[n>>2]=w;c[g>>2]=x}i=o;return}function Be(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;o=i;i=i+80|0;m=o+36|0;n=o+4|0;g=o+28|0;q=o;e=o+32|0;f=o+8|0;p=o+68|0;l=o+24|0;k=o+60|0;j=o+64|0;v=o+40|0;h=o+44|0;t=o+48|0;u=o+52|0;w=o+56|0;x=o+16|0;s=o+20|0;r=o+12|0;c[x>>2]=b;c[s>>2]=d;d=c[x>>2]|0;c[w>>2]=d;b=c[w>>2]|0;c[r>>2]=((c[b+4>>2]|0)-(c[b>>2]|0)|0)/4|0;if((c[r>>2]|0)>>>0<(c[s>>2]|0)>>>0){Hf(d,(c[s>>2]|0)-(c[r>>2]|0)|0);i=o;return}if(!((c[r>>2]|0)>>>0>(c[s>>2]|0)>>>0)){i=o;return}r=(c[d>>2]|0)+(c[s>>2]<<2)|0;c[t>>2]=d;c[u>>2]=r;r=c[u>>2]|0;c[v>>2]=c[t>>2];c[h>>2]=r;r=c[v>>2]|0;while(1){if((c[h>>2]|0)==(c[r+4>>2]|0))break;c[j>>2]=r;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];x=c[l>>2]|0;b=r+4|0;w=(c[b>>2]|0)+ -4|0;c[b>>2]=w;c[m>>2]=w;w=c[m>>2]|0;c[e>>2]=x;c[f>>2]=w;w=c[e>>2]|0;x=c[f>>2]|0;a[q+0>>0]=a[p+0>>0]|0;c[n>>2]=w;c[g>>2]=x}i=o;return}function Ce(a){a=a|0;var b=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0.0;b=i;i=i+560|0;e=b;f=b+16|0;l=b+12|0;m=b+24|0;g=b+32|0;j=b+20|0;k=b+8|0;c[f>>2]=a;if((c[(c[f>>2]|0)+2080>>2]|0)==0){h[e>>3]=12.0;n=+h[e>>3];i=b;return+n}c[l>>2]=0;c[m>>2]=0;while(1){if((c[m>>2]|0)>=520)break;if((c[l>>2]|0)>=5)break;if((c[(c[f>>2]|0)+(c[m>>2]<<2)>>2]|0)>0)c[l>>2]=(c[l>>2]|0)+1;c[m>>2]=(c[m>>2]|0)+1}if((c[l>>2]|0)==1){h[e>>3]=12.0;n=+h[e>>3];i=b;return+n}if((c[l>>2]|0)==2){h[e>>3]=+(20+(c[(c[f>>2]|0)+2080>>2]|0)|0);n=+h[e>>3];i=b;return+n}lz(g|0,0,520)|0;Ml(c[f>>2]|0,520,15,g);c[j>>2]=0;c[k>>2]=0;while(1){if((c[k>>2]|0)>=520)break;m=da(c[(c[f>>2]|0)+(c[k>>2]<<2)>>2]|0,d[g+(c[k>>2]|0)>>0]|0)|0;c[j>>2]=(c[j>>2]|0)+m;c[k>>2]=(c[k>>2]|0)+1}do if((c[l>>2]|0)!=3)if((c[l>>2]|0)==4){c[j>>2]=(c[j>>2]|0)+37;break}else{m=Gf(g,520)|0;c[j>>2]=(c[j>>2]|0)+m;break}else c[j>>2]=(c[j>>2]|0)+28;while(0);h[e>>3]=+(c[j>>2]|0);n=+h[e>>3];i=b;return+n}function De(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0,Uc=0,Vc=0,Wc=0,Xc=0,Yc=0,Zc=0,_c=0,$c=0,ad=0,bd=0,cd=0,dd=0,ed=0,fd=0,gd=0,hd=0,id=0,jd=0,kd=0,ld=0,md=0,nd=0,od=0,pd=0,qd=0,rd=0,sd=0,td=0,ud=0,vd=0,wd=0,xd=0,yd=0,zd=0,Ad=0,Bd=0,Cd=0,Dd=0,Ed=0,Fd=0,Gd=0,Hd=0;m=i;i=i+1120|0;_a=m+580|0;Za=m+568|0;t=m+564|0;u=m+312|0;w=m+544|0;x=m+228|0;n=m+1040|0;o=m+1056|0;A=m+1072|0;B=m+1080|0;H=m+1088|0;N=m+1064|0;O=m+156|0;P=m+148|0;Q=m+144|0;R=m+1020|0;S=m+616|0;X=m+556|0;aa=m+352|0;ba=m+332|0;$=m+48|0;Y=m+224|0;Z=m+220|0;_=m+1104|0;W=m+160|0;V=m+164|0;U=m+168|0;L=m+172|0;M=m+176|0;J=m+180|0;K=m+184|0;I=m+1016|0;ca=m+728|0;da=m+612|0;ea=m+600|0;ga=m+552|0;ia=m+356|0;ja=m+348|0;qa=m+344|0;ra=m+328|0;oa=m+236|0;pa=m+232|0;la=m+244|0;ma=m+248|0;ka=m+252|0;ya=m+256|0;za=m+260|0;wa=m+264|0;xa=m+268|0;ta=m+272|0;ua=m+276|0;sa=m+280|0;q=m+284|0;Qa=m+288|0;Va=m+292|0;Wa=m+296|0;Ta=m+300|0;Ra=m+304|0;Sa=m+308|0;Ua=m+88|0;Pa=m+316|0;Oa=m+320|0;Ma=m+324|0;Na=m+1012|0;Xa=m+792|0;Ya=m+724|0;La=m+8|0;Ka=m+64|0;Ja=m+604|0;Ia=m+596|0;Ga=m+592|0;Ha=m+548|0;Ea=m+360|0;Fa=m+364|0;Da=m+80|0;Ba=m+72|0;Aa=m+24|0;hb=m+380|0;mb=m+384|0;nb=m+388|0;lb=m+120|0;ib=m+396|0;jb=m+400|0;k=m+1106|0;j=m+408|0;fb=m+412|0;eb=m+416|0;cb=m+420|0;db=m+424|0;ab=m+428|0;bb=m+432|0;$a=m+436|0;ob=m+440|0;pb=m+444|0;qb=m+448|0;xb=m+452|0;yb=m+456|0;vb=m+460|0;wb=m+464|0;kc=m+468|0;ub=m+472|0;Gb=m+476|0;Hb=m+480|0;Eb=m+484|0;Fb=m+488|0;Db=m+492|0;Jb=m+496|0;Nb=m+500|0;Ob=m+504|0;Lb=m+508|0;Mb=m+512|0;Kb=m+516|0;Qb=m+520|0;Ub=m+524|0;Vb=m+528|0;Sb=m+532|0;Tb=m+1052|0;Rb=m+1060|0;Xb=m+1068|0;ec=m+1076|0;dc=m+1084|0;bc=m+1092|0;cc=m+1096|0;ac=m+576|0;_b=m+1100|0;$b=m+584|0;Yb=m+588|0;Zb=m+1008|0;Cb=m+984|0;Bb=m+788|0;Ib=m+744|0;Pb=m+720|0;Wb=m+680|0;Ab=m+672|0;zb=m+668|0;ad=m+608|0;bd=m+620|0;cd=m+624|0;dd=m+628|0;$c=m+632|0;_c=m+636|0;Zc=m+640|0;xc=m+644|0;wc=m+648|0;vc=m+652|0;tc=m+656|0;uc=m+660|0;sc=m+664|0;rc=m+56|0;qc=m+368|0;pc=m+16|0;mc=m+372|0;nc=m+676|0;oc=m+376|0;rb=m+684|0;lc=m+688|0;gc=m+692|0;hc=m+696|0;ic=m+704|0;Xc=m+712|0;Yc=m+716|0;Wc=m+392|0;Vc=m+32|0;Uc=m+732|0;Sc=m;Qc=m+736|0;Rc=m+740|0;Oc=m+404|0;Pc=m+748|0;Mc=m+752|0;Lc=m+756|0;Kc=m+760|0;Jc=m+764|0;Ic=m+768|0;Hc=m+772|0;Gc=m+776|0;Nc=m+780|0;Fc=m+784|0;Ec=m+128|0;Dc=m+796|0;Bc=m+40|0;yc=m+800|0;zc=m+804|0;Ac=m+808|0;yd=m+812|0;zd=m+820|0;Ad=m+824|0;xd=m+828|0;td=m+836|0;ud=m+844|0;vd=m+848|0;sd=m+852|0;od=m+860|0;pd=m+868|0;qd=m+872|0;nd=m+876|0;ed=m+884|0;gd=m+892|0;fd=m+896|0;hd=m+900|0;jd=m+904|0;id=m+908|0;kd=m+912|0;ld=m+916|0;Bd=m+924|0;wd=m+928|0;rd=m+932|0;md=m+936|0;Cd=m+940|0;Dd=m+944|0;Fd=m+948|0;Ed=m+952|0;Gd=m+956|0;Hd=m+960|0;z=m+964|0;C=m+968|0;G=m+972|0;E=m+976|0;s=m+980|0;p=m+136|0;r=m+988|0;l=m+992|0;gb=m+192|0;fc=m+152|0;Cc=m+340|0;Tc=m+1024|0;jc=m+1032|0;kb=m+204|0;tb=m+560|0;sb=m+216|0;v=m+336|0;y=m+1044|0;D=m+536|0;F=m+1048|0;T=m+540|0;fa=m+572|0;na=m+1004|0;va=m+240|0;Ca=m+1105|0;ha=m+188|0;c[z>>2]=b;c[C>>2]=d;c[G>>2]=e;c[E>>2]=f;c[s>>2]=g;h[p>>3]=0.0;c[r>>2]=1;c[Gd>>2]=l;c[Hd>>2]=m+1107;d=c[Hd>>2]|0;c[Fd>>2]=c[Gd>>2];c[Ed>>2]=d;mf(c[Fd>>2]|0,c[Ed>>2]|0);c[Dd>>2]=gb;c[Cd>>2]=c[Dd>>2];c[Bd>>2]=c[Cd>>2];d=c[Bd>>2]|0;c[m+920>>2]=d;c[zd>>2]=xd;c[Ad>>2]=-1;b=c[Ad>>2]|0;c[yd>>2]=c[zd>>2];c[m+816>>2]=b;c[c[yd>>2]>>2]=0;c[wd>>2]=c[xd>>2];c[m+832>>2]=wd;c[d>>2]=0;c[ud>>2]=sd;c[vd>>2]=-1;b=c[vd>>2]|0;c[td>>2]=c[ud>>2];c[m+840>>2]=b;c[c[td>>2]>>2]=0;c[rd>>2]=c[sd>>2];c[m+856>>2]=rd;c[d+4>>2]=0;c[pd>>2]=nd;c[qd>>2]=-1;b=c[qd>>2]|0;c[od>>2]=c[pd>>2];c[m+864>>2]=b;c[c[od>>2]>>2]=0;c[md>>2]=c[nd>>2];c[m+880>>2]=md;c[kd>>2]=d+8;c[ld>>2]=0;d=c[ld>>2]|0;c[jd>>2]=c[kd>>2];c[id>>2]=d;d=c[jd>>2]|0;c[hd>>2]=id;b=c[c[hd>>2]>>2]|0;c[gd>>2]=d;c[fd>>2]=b;b=c[gd>>2]|0;c[m+888>>2]=b;c[ed>>2]=fd;c[b>>2]=c[c[ed>>2]>>2];c[fc>>2]=0;while(1){if((c[fc>>2]|0)>=(c[E>>2]|0))break;Hd=(c[G>>2]|0)+(c[fc>>2]<<2)|0;c[yc>>2]=l;c[zc>>2]=Hd;Ef(Ac,c[yc>>2]|0,c[zc>>2]|0);a[Bc+0>>0]=a[Ac+0>>0]|0;a[Bc+1>>0]=a[Ac+1>>0]|0;a[Bc+2>>0]=a[Ac+2>>0]|0;a[Bc+3>>0]=a[Ac+3>>0]|0;c[Dc>>2]=Cc;Hd=c[Dc>>2]|0;a[Ec+0>>0]=a[Bc+0>>0]|0;a[Ec+1>>0]=a[Bc+1>>0]|0;a[Ec+2>>0]=a[Bc+2>>0]|0;a[Ec+3>>0]=a[Bc+3>>0]|0;c[Fc>>2]=Hd;c[c[Fc>>2]>>2]=c[Ec>>2];c[Gc>>2]=l;c[Hc>>2]=c[Gc>>2];c[Ic>>2]=c[Hc>>2];c[Jc>>2]=(c[Ic>>2]|0)+4;c[Kc>>2]=c[Jc>>2];c[Lc>>2]=c[Kc>>2];c[Mc>>2]=c[Lc>>2];Hd=c[Mc>>2]|0;c[Oc>>2]=Nc;c[Pc>>2]=Hd;Hd=c[Pc>>2]|0;c[Qc>>2]=c[Oc>>2];c[Rc>>2]=Hd;c[c[Qc>>2]>>2]=c[Rc>>2];a[Sc+0>>0]=a[Nc+0>>0]|0;a[Sc+1>>0]=a[Nc+1>>0]|0;a[Sc+2>>0]=a[Nc+2>>0]|0;a[Sc+3>>0]=a[Nc+3>>0]|0;c[Uc>>2]=Tc;Hd=c[Uc>>2]|0;a[Vc+0>>0]=a[Sc+0>>0]|0;a[Vc+1>>0]=a[Sc+1>>0]|0;a[Vc+2>>0]=a[Sc+2>>0]|0;a[Vc+3>>0]=a[Sc+3>>0]|0;c[Wc>>2]=Hd;c[c[Wc>>2]>>2]=c[Vc>>2];c[Xc>>2]=Cc;c[Yc>>2]=Tc;do if((c[c[Xc>>2]>>2]|0)==(c[c[Yc>>2]>>2]|0)){g=(c[G>>2]|0)+(c[fc>>2]<<2)|0;c[gc>>2]=l;c[hc>>2]=g;hf(ic,c[gc>>2]|0,c[hc>>2]|0);c[rb>>2]=jc;c[lc>>2]=ic;g=c[lc>>2]|0;c[mc>>2]=c[rb>>2];c[nc>>2]=g;g=c[mc>>2]|0;Hd=c[nc>>2]|0;c[oc+0>>2]=c[Hd+0>>2];a[pc+0>>0]=a[oc+0>>0]|0;a[pc+1>>0]=a[oc+1>>0]|0;a[pc+2>>0]=a[oc+2>>0]|0;a[pc+3>>0]=a[oc+3>>0]|0;c[qc>>2]=g;Hd=c[qc>>2]|0;a[rc+0>>0]=a[pc+0>>0]|0;a[rc+1>>0]=a[pc+1>>0]|0;a[rc+2>>0]=a[pc+2>>0]|0;a[rc+3>>0]=a[pc+3>>0]|0;c[sc>>2]=Hd;c[c[sc>>2]>>2]=c[rc>>2];a[g+4>>0]=a[(c[nc>>2]|0)+4>>0]&1;g=(c[G>>2]|0)+(c[fc>>2]<<2)|0;c[tc>>2]=gb;c[uc>>2]=g;g=c[tc>>2]|0;Hd=c[g+4>>2]|0;c[vc>>2]=g;c[wc>>2]=(c[vc>>2]|0)+8;c[xc>>2]=c[wc>>2];if((Hd|0)==(c[c[xc>>2]>>2]|0)){Dh(g,c[uc>>2]|0);break}c[Zc>>2]=g;c[_c>>2]=(c[Zc>>2]|0)+8;c[$c>>2]=c[_c>>2];Gd=c[$c>>2]|0;c[ad>>2]=c[g+4>>2];Hd=c[ad>>2]|0;f=c[uc>>2]|0;c[bd>>2]=Gd;c[cd>>2]=Hd;c[dd>>2]=f;f=c[cd>>2]|0;if((f|0)!=0)c[f>>2]=c[c[dd>>2]>>2];Hd=g+4|0;c[Hd>>2]=(c[Hd>>2]|0)+4}while(0);c[fc>>2]=(c[fc>>2]|0)+1}c[zb>>2]=kb;c[Ab>>2]=c[zb>>2];c[Bb>>2]=c[Ab>>2];Gd=c[Bb>>2]|0;c[Cb>>2]=Gd;c[Eb>>2]=Db;c[Fb>>2]=-1;Hd=c[Fb>>2]|0;c[Gb>>2]=c[Eb>>2];c[Hb>>2]=Hd;c[c[Gb>>2]>>2]=0;c[Ib>>2]=c[Db>>2];c[Jb>>2]=Ib;c[Gd>>2]=0;c[Lb>>2]=Kb;c[Mb>>2]=-1;Hd=c[Mb>>2]|0;c[Nb>>2]=c[Lb>>2];c[Ob>>2]=Hd;c[c[Nb>>2]>>2]=0;c[Pb>>2]=c[Kb>>2];c[Qb>>2]=Pb;c[Gd+4>>2]=0;c[Sb>>2]=Rb;c[Tb>>2]=-1;Hd=c[Tb>>2]|0;c[Ub>>2]=c[Sb>>2];c[Vb>>2]=Hd;c[c[Ub>>2]>>2]=0;c[Wb>>2]=c[Rb>>2];c[Xb>>2]=Wb;c[Yb>>2]=Gd+8;c[Zb>>2]=0;Gd=c[Zb>>2]|0;c[_b>>2]=c[Yb>>2];c[$b>>2]=Gd;Gd=c[_b>>2]|0;c[ac>>2]=$b;Hd=c[c[ac>>2]>>2]|0;c[bc>>2]=Gd;c[cc>>2]=Hd;Hd=c[bc>>2]|0;c[dc>>2]=Hd;c[ec>>2]=cc;c[Hd>>2]=c[c[ec>>2]>>2];c[tb>>2]=0;while(1){Gd=c[tb>>2]|0;c[ub>>2]=gb;Hd=c[ub>>2]|0;if(!(Gd>>>0<(((c[Hd+4>>2]|0)-(c[Hd>>2]|0)|0)/4|0)>>>0))break;c[sb>>2]=(c[tb>>2]|0)+1;while(1){Gd=c[sb>>2]|0;c[kc>>2]=gb;Hd=c[kc>>2]|0;if(!(Gd>>>0<(((c[Hd+4>>2]|0)-(c[Hd>>2]|0)|0)/4|0)>>>0))break;Fd=c[z>>2]|0;Gd=c[C>>2]|0;Hd=c[tb>>2]|0;c[vb>>2]=gb;c[wb>>2]=Hd;Hd=c[(c[c[vb>>2]>>2]|0)+(c[wb>>2]<<2)>>2]|0;Ed=c[sb>>2]|0;c[xb>>2]=gb;c[yb>>2]=Ed;of(Fd,Gd,Hd,c[(c[c[xb>>2]>>2]|0)+(c[yb>>2]<<2)>>2]|0,kb);c[sb>>2]=(c[sb>>2]|0)+1}c[tb>>2]=(c[tb>>2]|0)+1}a:while(1){c[q>>2]=gb;Hd=c[q>>2]|0;if(!((((c[Hd+4>>2]|0)-(c[Hd>>2]|0)|0)/4|0)>>>0>(c[r>>2]|0)>>>0))break;c[n>>2]=kb;c[o>>2]=0;if(+h[(c[c[n>>2]>>2]|0)+(c[o>>2]<<5)+24>>3]>=+h[p>>3]){h[p>>3]=1.0e+99;c[r>>2]=c[s>>2];continue}c[t>>2]=kb;c[u>>2]=0;c[v>>2]=c[(c[c[t>>2]>>2]|0)+(c[u>>2]<<5)>>2];c[w>>2]=kb;c[x>>2]=0;c[y>>2]=c[(c[c[w>>2]>>2]|0)+(c[x>>2]<<5)+4>>2];af((c[z>>2]|0)+((c[v>>2]|0)*2096|0)|0,(c[z>>2]|0)+((c[y>>2]|0)*2096|0)|0);c[A>>2]=kb;c[B>>2]=0;h[(c[z>>2]|0)+((c[v>>2]|0)*2096|0)+2088>>3]=+h[(c[c[A>>2]>>2]|0)+(c[B>>2]<<5)+16>>3];Hd=(c[C>>2]|0)+(c[v>>2]<<2)|0;c[Hd>>2]=(c[Hd>>2]|0)+(c[(c[C>>2]|0)+(c[y>>2]<<2)>>2]|0);c[D>>2]=0;while(1){if((c[D>>2]|0)>=(c[E>>2]|0))break;if((c[(c[G>>2]|0)+(c[D>>2]<<2)>>2]|0)==(c[y>>2]|0))c[(c[G>>2]|0)+(c[D>>2]<<2)>>2]=c[v>>2];c[D>>2]=(c[D>>2]|0)+1}c[F>>2]=0;while(1){Gd=(c[F>>2]|0)+1|0;c[H>>2]=gb;Hd=c[H>>2]|0;if(!(Gd>>>0<(((c[Hd+4>>2]|0)-(c[Hd>>2]|0)|0)/4|0)>>>0))break;Hd=c[F>>2]|0;c[N>>2]=gb;c[O>>2]=Hd;if((c[(c[c[N>>2]>>2]|0)+(c[O>>2]<<2)>>2]|0)>=(c[y>>2]|0)){Hd=(c[F>>2]|0)+1|0;c[P>>2]=gb;c[Q>>2]=Hd;Hd=c[(c[c[P>>2]>>2]|0)+(c[Q>>2]<<2)>>2]|0;Gd=c[F>>2]|0;c[R>>2]=gb;c[S>>2]=Gd;c[(c[c[R>>2]>>2]|0)+(c[S>>2]<<2)>>2]=Hd}c[F>>2]=(c[F>>2]|0)+1}c[I>>2]=gb;Hd=c[I>>2]|0;rb=(c[Hd+4>>2]|0)+ -4|0;c[J>>2]=Hd;c[K>>2]=rb;rb=c[K>>2]|0;c[L>>2]=c[J>>2];c[M>>2]=rb;rb=c[L>>2]|0;while(1){if((c[M>>2]|0)==(c[rb+4>>2]|0))break;c[U>>2]=rb;c[V>>2]=(c[U>>2]|0)+8;c[W>>2]=c[V>>2];Hd=c[W>>2]|0;Fd=rb+4|0;Gd=(c[Fd>>2]|0)+ -4|0;c[Fd>>2]=Gd;c[X>>2]=Gd;Gd=c[X>>2]|0;c[Y>>2]=Hd;c[Z>>2]=Gd;Gd=c[Y>>2]|0;Hd=c[Z>>2]|0;a[$+0>>0]=a[_+0>>0]|0;c[aa>>2]=Gd;c[ba>>2]=Hd}c[T>>2]=0;while(1){Gd=c[T>>2]|0;c[ca>>2]=kb;Hd=c[ca>>2]|0;if(!(Gd>>>0<(((c[Hd+4>>2]|0)-(c[Hd>>2]|0)|0)/32|0)>>>0))break;Hd=c[T>>2]|0;c[da>>2]=kb;c[ea>>2]=Hd;c[fa>>2]=(c[c[da>>2]>>2]|0)+(c[ea>>2]<<5);if(!((((c[c[fa>>2]>>2]|0)!=(c[v>>2]|0)?(c[(c[fa>>2]|0)+4>>2]|0)!=(c[v>>2]|0):0)?(c[c[fa>>2]>>2]|0)!=(c[y>>2]|0):0)?(c[(c[fa>>2]|0)+4>>2]|0)!=(c[y>>2]|0):0))a[(c[fa>>2]|0)+8>>0]=0;c[T>>2]=(c[T>>2]|0)+1}b:while(1){c[ga>>2]=kb;Hd=c[ga>>2]|0;if((c[Hd>>2]|0)==(c[Hd+4>>2]|0))break;c[ia>>2]=kb;c[ja>>2]=0;if(!(a[(c[c[ia>>2]>>2]|0)+(c[ja>>2]<<5)+8>>0]&1^1))break;c[ka>>2]=kb;Hd=c[ka>>2]|0;Gd=c[Hd>>2]|0;c[la>>2]=Hd;c[ma>>2]=Gd;Gd=c[ma>>2]|0;c[oa>>2]=na;c[pa>>2]=Gd;Gd=c[pa>>2]|0;c[qa>>2]=c[oa>>2];c[ra>>2]=Gd;c[c[qa>>2]>>2]=c[ra>>2];c[sa>>2]=kb;Gd=c[sa>>2]|0;Hd=c[Gd+4>>2]|0;c[ta>>2]=Gd;c[ua>>2]=Hd;Hd=c[ua>>2]|0;c[wa>>2]=va;c[xa>>2]=Hd;Hd=c[xa>>2]|0;c[ya>>2]=c[wa>>2];c[za>>2]=Hd;c[c[ya>>2]>>2]=c[za>>2];a[Aa+0>>0]=a[na+0>>0]|0;a[Aa+1>>0]=a[na+1>>0]|0;a[Aa+2>>0]=a[na+2>>0]|0;a[Aa+3>>0]=a[na+3>>0]|0;a[Ba+0>>0]=a[va+0>>0]|0;a[Ba+1>>0]=a[va+1>>0]|0;a[Ba+2>>0]=a[va+2>>0]|0;a[Ba+3>>0]=a[va+3>>0]|0;a[Da+0>>0]=a[Ca+0>>0]|0;c[Ea+0>>2]=c[Aa+0>>2];c[Fa+0>>2]=c[Ba+0>>2];c[Ga>>2]=Ba;c[Ha>>2]=Aa;c[Ia>>2]=c[Ga>>2];Hd=c[c[Ia>>2]>>2]|0;c[Ja>>2]=c[Ha>>2];Hd=(Hd-(c[c[Ja>>2]>>2]|0)|0)/32|0;a[Ka+0>>0]=a[Ea+0>>0]|0;a[Ka+1>>0]=a[Ea+1>>0]|0;a[Ka+2>>0]=a[Ea+2>>0]|0;a[Ka+3>>0]=a[Ea+3>>0]|0;a[La+0>>0]=a[Fa+0>>0]|0;a[La+1>>0]=a[Fa+1>>0]|0;a[La+2>>0]=a[Fa+2>>0]|0;a[La+3>>0]=a[Fa+3>>0]|0;c[Ma>>2]=Da;c[Na>>2]=Hd;if((c[Na>>2]|0)>1){c[Oa>>2]=Ka;Hd=c[c[Oa>>2]>>2]|0;c[Pa>>2]=La;Gd=c[Pa>>2]|0;c[Gd>>2]=(c[Gd>>2]|0)+ -32;c[Qa>>2]=Gd;Gd=c[c[Qa>>2]>>2]|0;c[Ra>>2]=Hd;c[Sa>>2]=Gd;c[Ta>>2]=c[Ra>>2];Gd=c[Ta>>2]|0;c[Ua+0>>2]=c[Gd+0>>2];c[Ua+4>>2]=c[Gd+4>>2];c[Ua+8>>2]=c[Gd+8>>2];c[Ua+12>>2]=c[Gd+12>>2];c[Ua+16>>2]=c[Gd+16>>2];c[Ua+20>>2]=c[Gd+20>>2];c[Ua+24>>2]=c[Gd+24>>2];c[Ua+28>>2]=c[Gd+28>>2];Gd=c[Ra>>2]|0;c[Va>>2]=c[Sa>>2];Hd=c[Va>>2]|0;c[Gd+0>>2]=c[Hd+0>>2];c[Gd+4>>2]=c[Hd+4>>2];c[Gd+8>>2]=c[Hd+8>>2];c[Gd+12>>2]=c[Hd+12>>2];c[Gd+16>>2]=c[Hd+16>>2];c[Gd+20>>2]=c[Hd+20>>2];c[Gd+24>>2]=c[Hd+24>>2];c[Gd+28>>2]=c[Hd+28>>2];Gd=c[Sa>>2]|0;c[Wa>>2]=Ua;Hd=c[Wa>>2]|0;c[Gd+0>>2]=c[Hd+0>>2];c[Gd+4>>2]=c[Hd+4>>2];c[Gd+8>>2]=c[Hd+8>>2];c[Gd+12>>2]=c[Hd+12>>2];c[Gd+16>>2]=c[Hd+16>>2];c[Gd+20>>2]=c[Hd+20>>2];c[Gd+24>>2]=c[Hd+24>>2];c[Gd+28>>2]=c[Hd+28>>2];c[Xa+0>>2]=c[Ka+0>>2];c[Ya+0>>2]=c[La+0>>2];Gd=c[Ma>>2]|0;Hd=(c[Na>>2]|0)-1|0;c[Za+0>>2]=c[Xa+0>>2];c[_a+0>>2]=c[Ya+0>>2];sf(Za,_a,Gd,Hd)}c[$a>>2]=kb;Hd=c[$a>>2]|0;rb=(c[Hd+4>>2]|0)+ -32|0;c[ab>>2]=Hd;c[bb>>2]=rb;rb=c[bb>>2]|0;c[cb>>2]=c[ab>>2];c[db>>2]=rb;rb=c[cb>>2]|0;while(1){if((c[db>>2]|0)==(c[rb+4>>2]|0))continue b;c[eb>>2]=rb;c[fb>>2]=(c[eb>>2]|0)+8;c[j>>2]=c[fb>>2];Hd=c[j>>2]|0;Fd=rb+4|0;Gd=(c[Fd>>2]|0)+ -32|0;c[Fd>>2]=Gd;c[hb>>2]=Gd;Gd=c[hb>>2]|0;c[ib>>2]=Hd;c[jb>>2]=Gd;Gd=c[ib>>2]|0;Hd=c[jb>>2]|0;a[lb+0>>0]=a[k+0>>0]|0;c[mb>>2]=Gd;c[nb>>2]=Hd}}c[ha>>2]=0;while(1){Gd=c[ha>>2]|0;c[ob>>2]=gb;Hd=c[ob>>2]|0;if(!(Gd>>>0<(((c[Hd+4>>2]|0)-(c[Hd>>2]|0)|0)/4|0)>>>0))continue a;Fd=c[z>>2]|0;Gd=c[C>>2]|0;Hd=c[v>>2]|0;Ed=c[ha>>2]|0;c[pb>>2]=gb;c[qb>>2]=Ed;of(Fd,Gd,Hd,c[(c[c[pb>>2]>>2]|0)+(c[qb>>2]<<2)>>2]|0,kb);c[ha>>2]=(c[ha>>2]|0)+1}}pf(kb);we(gb);bf(l);i=m;return}function Ee(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0;Y=i;i=i+480|0;C=Y+432|0;B=Y+16|0;A=Y+200|0;y=Y+32|0;w=Y+304|0;x=Y+372|0;u=Y+360|0;v=Y+312|0;s=Y+196|0;r=Y+256|0;q=Y+128|0;p=Y+120|0;o=Y+444|0;n=Y+104|0;m=Y+100|0;t=Y+412|0;G=Y+96|0;H=Y+416|0;E=Y+236|0;F=Y+436|0;I=Y+112|0;W=Y+116|0;V=Y+72|0;U=Y+124|0;T=Y+8|0;R=Y+132|0;S=Y+136|0;P=Y+404|0;Q=Y+140|0;N=Y+144|0;M=Y+148|0;L=Y+152|0;O=Y+156|0;La=Y+160|0;Ka=Y+164|0;K=Y+168|0;Ia=Y+172|0;pa=Y+176|0;qa=Y+180|0;na=Y+184|0;oa=Y+188|0;la=Y+192|0;ka=Y+24|0;ja=Y+400|0;ha=Y+40|0;fa=Y+204|0;ga=Y+208|0;da=Y+212|0;j=Y+216|0;ba=Y+220|0;aa=Y+468|0;$=Y+472|0;_=Y+440|0;Z=Y+448|0;g=Y+240|0;X=Y+244|0;ca=Y+248|0;Ga=Y+252|0;Fa=Y+48|0;Ea=Y+260|0;Da=Y;Ba=Y+268|0;Ca=Y+272|0;za=Y+276|0;Aa=Y+280|0;xa=Y+284|0;wa=Y+288|0;va=Y+292|0;ya=Y+296|0;Za=Y+300|0;Ya=Y+80|0;Xa=Y+308|0;Wa=Y+64|0;Ta=Y+316|0;Ua=Y+320|0;Va=Y+396|0;Ra=Y+324|0;Sa=Y+328|0;Na=Y+332|0;Oa=Y+336|0;Pa=Y+344|0;$a=Y+352|0;_a=Y+356|0;ab=Y+452|0;bb=Y+364|0;sa=Y+460|0;l=Y+464|0;J=Y+376|0;Ha=Y+380|0;ea=Y+384|0;Ma=Y+408|0;Qa=Y+424|0;ta=Y+228|0;ra=Y+232|0;ua=Y+88|0;ma=Y+456|0;ia=Y+264|0;Ja=Y+56|0;D=Y+368|0;z=Y+224|0;k=Y+108|0;c[sa>>2]=b;c[l>>2]=d;c[J>>2]=e;c[Ha>>2]=f;c[ab>>2]=ea;c[bb>>2]=Y+476;b=c[bb>>2]|0;c[$a>>2]=c[ab>>2];c[_a>>2]=b;mf(c[$a>>2]|0,c[_a>>2]|0);c[Ma>>2]=0;while(1){if((c[Ma>>2]|0)>=(c[l>>2]|0))break;bb=(c[Ha>>2]|0)+(c[Ma>>2]<<2)|0;c[Na>>2]=ea;c[Oa>>2]=bb;hf(Pa,c[Na>>2]|0,c[Oa>>2]|0);c[Ra>>2]=Qa;c[Sa>>2]=Pa;bb=c[Sa>>2]|0;c[Ta>>2]=c[Ra>>2];c[Ua>>2]=bb;bb=c[Ta>>2]|0;ab=c[Ua>>2]|0;c[Va+0>>2]=c[ab+0>>2];a[Wa+0>>0]=a[Va+0>>0]|0;a[Wa+1>>0]=a[Va+1>>0]|0;a[Wa+2>>0]=a[Va+2>>0]|0;a[Wa+3>>0]=a[Va+3>>0]|0;c[Xa>>2]=bb;ab=c[Xa>>2]|0;a[Ya+0>>0]=a[Wa+0>>0]|0;a[Ya+1>>0]=a[Wa+1>>0]|0;a[Ya+2>>0]=a[Wa+2>>0]|0;a[Ya+3>>0]=a[Wa+3>>0]|0;c[Za>>2]=ab;c[c[Za>>2]>>2]=c[Ya>>2];a[bb+4>>0]=a[(c[Ua>>2]|0)+4>>0]&1;c[Ma>>2]=(c[Ma>>2]|0)+1}c[ta>>2]=0;while(1){if((c[ta>>2]|0)>=(c[l>>2]|0))break;if((c[ta>>2]|0)==0)f=c[c[Ha>>2]>>2]|0;else f=c[(c[Ha>>2]|0)+((c[ta>>2]|0)-1<<2)>>2]|0;c[ra>>2]=f;h[ua>>3]=+$e((c[sa>>2]|0)+((c[ta>>2]|0)*2096|0)|0,(c[J>>2]|0)+((c[ra>>2]|0)*2096|0)|0);c[va>>2]=ea;c[wa>>2]=c[va>>2];c[xa>>2]=c[wa>>2];bb=c[c[xa>>2]>>2]|0;c[za>>2]=ya;c[Aa>>2]=bb;bb=c[Aa>>2]|0;c[Ba>>2]=c[za>>2];c[Ca>>2]=bb;c[c[Ba>>2]>>2]=c[Ca>>2];a[Da+0>>0]=a[ya+0>>0]|0;a[Da+1>>0]=a[ya+1>>0]|0;a[Da+2>>0]=a[ya+2>>0]|0;a[Da+3>>0]=a[ya+3>>0]|0;c[Ea>>2]=ma;bb=c[Ea>>2]|0;a[Fa+0>>0]=a[Da+0>>0]|0;a[Fa+1>>0]=a[Da+1>>0]|0;a[Fa+2>>0]=a[Da+2>>0]|0;a[Fa+3>>0]=a[Da+3>>0]|0;c[Ga>>2]=bb;c[c[Ga>>2]>>2]=c[Fa>>2];while(1){c[X>>2]=ea;c[g>>2]=c[X>>2];c[Z>>2]=c[g>>2];c[_>>2]=(c[Z>>2]|0)+4;c[$>>2]=c[_>>2];c[aa>>2]=c[$>>2];c[ba>>2]=c[aa>>2];bb=c[ba>>2]|0;c[da>>2]=ca;c[j>>2]=bb;bb=c[j>>2]|0;c[fa>>2]=c[da>>2];c[ga>>2]=bb;c[c[fa>>2]>>2]=c[ga>>2];a[ha+0>>0]=a[ca+0>>0]|0;a[ha+1>>0]=a[ca+1>>0]|0;a[ha+2>>0]=a[ca+2>>0]|0;a[ha+3>>0]=a[ca+3>>0]|0;c[ja>>2]=ia;bb=c[ja>>2]|0;a[ka+0>>0]=a[ha+0>>0]|0;a[ka+1>>0]=a[ha+1>>0]|0;a[ka+2>>0]=a[ha+2>>0]|0;a[ka+3>>0]=a[ha+3>>0]|0;c[la>>2]=bb;c[c[la>>2]>>2]=c[ka>>2];c[na>>2]=ma;c[oa>>2]=ia;bb=c[oa>>2]|0;c[pa>>2]=c[na>>2];c[qa>>2]=bb;if(!((c[c[pa>>2]>>2]|0)==(c[c[qa>>2]>>2]|0)^1))break;bb=(c[sa>>2]|0)+((c[ta>>2]|0)*2096|0)|0;c[Ia>>2]=ma;h[Ja>>3]=+$e(bb,(c[J>>2]|0)+((c[(c[c[Ia>>2]>>2]|0)+16>>2]|0)*2096|0)|0);if(+h[Ja>>3]<+h[ua>>3]){h[ua>>3]=+h[Ja>>3];c[Ka>>2]=ma;c[ra>>2]=c[(c[c[Ka>>2]>>2]|0)+16>>2]}c[La>>2]=ma;bb=c[La>>2]|0;c[bb>>2]=gf(c[bb>>2]|0)|0}c[(c[Ha>>2]|0)+(c[ta>>2]<<2)>>2]=c[ra>>2];c[ta>>2]=(c[ta>>2]|0)+1}c[L>>2]=ea;c[M>>2]=c[L>>2];c[N>>2]=c[M>>2];bb=c[c[N>>2]>>2]|0;c[P>>2]=O;c[Q>>2]=bb;bb=c[Q>>2]|0;c[R>>2]=c[P>>2];c[S>>2]=bb;c[c[R>>2]>>2]=c[S>>2];a[T+0>>0]=a[O+0>>0]|0;a[T+1>>0]=a[O+1>>0]|0;a[T+2>>0]=a[O+2>>0]|0;a[T+3>>0]=a[O+3>>0]|0;c[U>>2]=D;bb=c[U>>2]|0;a[V+0>>0]=a[T+0>>0]|0;a[V+1>>0]=a[T+1>>0]|0;a[V+2>>0]=a[T+2>>0]|0;a[V+3>>0]=a[T+3>>0]|0;c[W>>2]=bb;c[c[W>>2]>>2]=c[V>>2];while(1){c[m>>2]=ea;c[n>>2]=c[m>>2];c[o>>2]=c[n>>2];c[p>>2]=(c[o>>2]|0)+4;c[q>>2]=c[p>>2];c[r>>2]=c[q>>2];c[s>>2]=c[r>>2];bb=c[s>>2]|0;c[u>>2]=t;c[v>>2]=bb;bb=c[v>>2]|0;c[w>>2]=c[u>>2];c[x>>2]=bb;c[c[w>>2]>>2]=c[x>>2];a[y+0>>0]=a[t+0>>0]|0;a[y+1>>0]=a[t+1>>0]|0;a[y+2>>0]=a[t+2>>0]|0;a[y+3>>0]=a[t+3>>0]|0;c[A>>2]=z;bb=c[A>>2]|0;a[B+0>>0]=a[y+0>>0]|0;a[B+1>>0]=a[y+1>>0]|0;a[B+2>>0]=a[y+2>>0]|0;a[B+3>>0]=a[y+3>>0]|0;c[C>>2]=bb;c[c[C>>2]>>2]=c[B>>2];c[E>>2]=D;c[F>>2]=z;bb=c[F>>2]|0;c[G>>2]=c[E>>2];c[H>>2]=bb;if(!((c[c[G>>2]>>2]|0)==(c[c[H>>2]>>2]|0)^1))break;c[I>>2]=D;ue((c[J>>2]|0)+((c[(c[c[I>>2]>>2]|0)+16>>2]|0)*2096|0)|0);c[K>>2]=D;bb=c[K>>2]|0;c[bb>>2]=gf(c[bb>>2]|0)|0}c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[l>>2]|0))break;af((c[J>>2]|0)+((c[(c[Ha>>2]|0)+(c[k>>2]<<2)>>2]|0)*2096|0)|0,(c[sa>>2]|0)+((c[k>>2]|0)*2096|0)|0);c[k>>2]=(c[k>>2]|0)+1}bf(ea);i=Y;return}function Fe(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0;g=i;i=i+288|0;y=g+212|0;z=g+88|0;w=g+224|0;x=g+60|0;k=g+232|0;l=g+140|0;m=g+256|0;u=g+220|0;v=g+156|0;n=g+84|0;o=g+80|0;s=g+64|0;t=g+68|0;ba=g+72|0;ca=g+76|0;$=g+216|0;aa=g+180|0;_=g+152|0;Z=g+16|0;Y=g+92|0;W=g+32|0;U=g+100|0;V=g+104|0;S=g+108|0;T=g+112|0;Q=g+236|0;P=g+120|0;O=g+252|0;N=g+260|0;M=g+268|0;L=g+144|0;K=g+272|0;R=g+244|0;J=g+176|0;I=g+8|0;H=g+160|0;e=g+24|0;C=g+148|0;D=g+164|0;E=g+168|0;A=g+172|0;B=g+96|0;da=g+184|0;fa=g+188|0;ga=g;ia=g+192|0;ha=g+40|0;ka=g+200|0;ea=g+276|0;ja=g+277|0;la=g+228|0;ma=g+116|0;p=g+196|0;j=g+240|0;f=g+44|0;F=g+124|0;q=g+136|0;r=g+264|0;G=g+248|0;X=g+56|0;h=g+208|0;c[p>>2]=b;c[j>>2]=d;Ge(f,c[p>>2]|0);c[la>>2]=F;c[ma>>2]=g+278;b=c[ma>>2]|0;c[ka>>2]=c[la>>2];c[g+204>>2]=b;b=c[ka>>2]|0;a[ha+0>>0]=a[ja+0>>0]|0;c[ia>>2]=ea;d=c[ia>>2]|0;a[ga+0>>0]=a[ha+0>>0]|0;c[fa>>2]=d;Ve(b,ea);c[q>>2]=0;c[r>>2]=0;while(1){la=c[r>>2]|0;c[da>>2]=c[j>>2];ma=c[da>>2]|0;if(!(la>>>0<(((c[ma+4>>2]|0)-(c[ma>>2]|0)|0)/4|0)>>>0))break;ma=c[r>>2]|0;c[A>>2]=c[j>>2];c[B>>2]=ma;ma=(c[c[A>>2]>>2]|0)+(c[B>>2]<<2)|0;c[C>>2]=F;c[D>>2]=ma;Te(E,c[C>>2]|0,c[D>>2]|0);a[e+0>>0]=a[E+0>>0]|0;a[e+1>>0]=a[E+1>>0]|0;a[e+2>>0]=a[E+2>>0]|0;a[e+3>>0]=a[E+3>>0]|0;c[H>>2]=G;ma=c[H>>2]|0;a[I+0>>0]=a[e+0>>0]|0;a[I+1>>0]=a[e+1>>0]|0;a[I+2>>0]=a[e+2>>0]|0;a[I+3>>0]=a[e+3>>0]|0;c[J>>2]=ma;ma=c[J>>2]|0;c[ma+0>>2]=c[I+0>>2];c[K>>2]=F;c[L>>2]=c[K>>2];c[M>>2]=c[L>>2];c[N>>2]=(c[M>>2]|0)+4;c[O>>2]=c[N>>2];c[P>>2]=c[O>>2];c[Q>>2]=c[P>>2];ma=c[Q>>2]|0;c[S>>2]=R;c[T>>2]=ma;ma=c[T>>2]|0;c[U>>2]=c[S>>2];c[V>>2]=ma;c[c[U>>2]>>2]=c[V>>2];a[W+0>>0]=a[R+0>>0]|0;a[W+1>>0]=a[R+1>>0]|0;a[W+2>>0]=a[R+2>>0]|0;a[W+3>>0]=a[R+3>>0]|0;c[Y>>2]=X;ma=c[Y>>2]|0;a[Z+0>>0]=a[W+0>>0]|0;a[Z+1>>0]=a[W+1>>0]|0;a[Z+2>>0]=a[W+2>>0]|0;a[Z+3>>0]=a[W+3>>0]|0;c[_>>2]=ma;ma=c[_>>2]|0;c[ma+0>>2]=c[Z+0>>2];c[$>>2]=G;c[aa>>2]=X;ma=c[aa>>2]|0;c[ba>>2]=c[$>>2];c[ca>>2]=ma;if((c[c[ba>>2]>>2]|0)==(c[c[ca>>2]>>2]|0)){ma=c[q>>2]|0;la=c[r>>2]|0;c[s>>2]=c[j>>2];c[t>>2]=la;c[(He(F,(c[c[s>>2]>>2]|0)+(c[t>>2]<<2)|0)|0)>>2]=ma;ma=c[q>>2]|0;c[u>>2]=c[p>>2];c[v>>2]=ma;ma=(c[c[u>>2]>>2]|0)+((c[v>>2]|0)*2096|0)|0;la=c[r>>2]|0;c[w>>2]=c[j>>2];c[x>>2]=la;la=c[(c[c[w>>2]>>2]|0)+(c[x>>2]<<2)>>2]|0;c[y>>2]=f;c[z>>2]=la;qz(ma|0,(c[c[y>>2]>>2]|0)+((c[z>>2]|0)*2096|0)|0,2096)|0;c[q>>2]=(c[q>>2]|0)+1}c[r>>2]=(c[r>>2]|0)+1}Ae(c[p>>2]|0,c[q>>2]|0);c[h>>2]=0;while(1){la=c[h>>2]|0;c[k>>2]=c[j>>2];ma=c[k>>2]|0;if(!(la>>>0<(((c[ma+4>>2]|0)-(c[ma>>2]|0)|0)/4|0)>>>0))break;ma=c[h>>2]|0;c[l>>2]=c[j>>2];c[m>>2]=ma;ma=c[(He(F,(c[c[l>>2]>>2]|0)+(c[m>>2]<<2)|0)|0)>>2]|0;la=c[h>>2]|0;c[n>>2]=c[j>>2];c[o>>2]=la;c[(c[c[n>>2]>>2]|0)+(c[o>>2]<<2)>>2]=ma;c[h>>2]=(c[h>>2]|0)+1}Ie(F);oe(f);i=g;return}function Ge(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;Xe(c[f>>2]|0,c[e>>2]|0);i=d;return}function He(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0;A=i;i=i+560|0;ra=A+472|0;qa=A+528|0;oa=A+520|0;na=A+512|0;ma=A+252|0;pa=A+256|0;ka=A+260|0;S=A+264|0;R=A+160|0;wa=A+156|0;va=A+96|0;xa=A+84|0;ya=A+80|0;_=A+72|0;da=A+76|0;ea=A+480|0;ca=A;$=A+284|0;aa=A+164|0;ba=A+548|0;N=A+140|0;la=A+100|0;ja=A+16|0;ga=A+108|0;ha=A+112|0;ia=A+549|0;X=A+120|0;Y=A+124|0;Z=A+128|0;U=A+132|0;V=A+136|0;W=A+476|0;fa=A+432|0;ua=A+392|0;T=A+292|0;za=A+280|0;Aa=A+276|0;kb=A+168|0;Ba=A+172|0;ta=A+176|0;jb=A+180|0;ib=A+184|0;K=A+188|0;J=A+192|0;D=A+196|0;C=A+104|0;v=A+204|0;l=A+208|0;m=A+212|0;k=A+56|0;g=A+220|0;h=A+224|0;j=A+550|0;s=A+240|0;t=A+244|0;r=A+40|0;o=A+508|0;p=A+516|0;q=A+551|0;u=A+532|0;f=A+540|0;e=A+268|0;z=A+272|0;x=A+544|0;w=A+452|0;n=A+428|0;H=A+424|0;y=A+388|0;E=A+500|0;F=A+296|0;sa=A+300|0;G=A+304|0;I=A+308|0;M=A+312|0;L=A+316|0;Pa=A+320|0;Oa=A+324|0;Ma=A+328|0;La=A+332|0;Ka=A+336|0;Na=A+340|0;Qa=A+344|0;Ta=A+348|0;Sa=A+352|0;Ra=A+356|0;Ua=A+360|0;bb=A+364|0;hb=A+368|0;gb=A+372|0;eb=A+376|0;fb=A+380|0;db=A+48|0;ab=A+200|0;_a=A+396|0;$a=A+400|0;cb=A+408|0;Za=A+24|0;Ca=A+416|0;Ya=A+420|0;Wa=A+8|0;Ja=A+216|0;Ia=A+436|0;Va=A+440|0;Ha=A+32|0;Ga=A+448|0;Fa=A+64|0;Xa=A+456|0;Ea=A+460|0;lb=A+464|0;Da=A+468|0;nb=A+288|0;sb=A+492|0;ub=A+496|0;tb=A+384|0;rb=A+92|0;vb=A+88|0;ob=A+248|0;O=A+504|0;P=A+488|0;B=A+536|0;qb=A+524|0;Q=A+228|0;mb=A+116|0;pb=A+144|0;c[vb>>2]=b;c[ob>>2]=d;b=c[vb>>2]|0;c[P>>2]=Ne(b,O,c[ob>>2]|0)|0;c[B>>2]=c[c[P>>2]>>2];d=c[c[P>>2]>>2]|0;c[ub>>2]=rb;c[tb>>2]=-1;tb=c[tb>>2]|0;c[sb>>2]=c[ub>>2];c[A+68>>2]=tb;c[c[sb>>2]>>2]=0;c[qb>>2]=c[rb>>2];c[A+484>>2]=qb;if((d|0)!=0){vb=c[B>>2]|0;vb=vb+16|0;vb=vb+4|0;i=A;return vb|0}Oe(pb,b,c[ob>>2]|0);c[nb>>2]=pb;ub=c[nb>>2]|0;c[lb>>2]=mb;c[Da>>2]=ub;ub=c[Da>>2]|0;c[Xa>>2]=c[lb>>2];c[Ea>>2]=ub;c[c[Xa>>2]>>2]=c[Ea>>2];a[Fa+0>>0]=a[mb+0>>0]|0;a[Fa+1>>0]=a[mb+1>>0]|0;a[Fa+2>>0]=a[mb+2>>0]|0;a[Fa+3>>0]=a[mb+3>>0]|0;c[Ga>>2]=Q;ub=c[Ga>>2]|0;a[Ha+0>>0]=a[Fa+0>>0]|0;a[Ha+1>>0]=a[Fa+1>>0]|0;a[Ha+2>>0]=a[Fa+2>>0]|0;a[Ha+3>>0]=a[Fa+3>>0]|0;c[Ia>>2]=ub;ub=c[Ia>>2]|0;c[Ja>>2]=Ha;c[Ka>>2]=c[c[Ja>>2]>>2];vb=c[Ka>>2]|0;c[La>>2]=vb;c[Ma>>2]=c[La>>2];c[Na>>2]=c[c[Ma>>2]>>2];c[Oa>>2]=vb;c[Pa>>2]=c[Oa>>2];c[c[Pa>>2]>>2]=0;vb=c[Na>>2]|0;c[Qa>>2]=Ha;c[Ra>>2]=c[c[Qa>>2]>>2];c[Sa>>2]=c[Ra>>2];c[Ta>>2]=c[Sa>>2];c[Ua>>2]=(c[Ta>>2]|0)+4;tb=c[Ua>>2]|0;c[Va+0>>2]=c[tb+0>>2];c[Va+4>>2]=c[tb+4>>2];a[Wa+0>>0]=a[Va+0>>0]|0;a[Wa+1>>0]=a[Va+1>>0]|0;a[Wa+2>>0]=a[Va+2>>0]|0;a[Wa+3>>0]=a[Va+3>>0]|0;a[Wa+4>>0]=a[Va+4>>0]|0;a[Wa+5>>0]=a[Va+5>>0]|0;a[Wa+6>>0]=a[Va+6>>0]|0;a[Wa+7>>0]=a[Va+7>>0]|0;c[Ca>>2]=ub;c[Ya>>2]=vb;Ca=c[Ca>>2]|0;vb=c[Ya>>2]|0;a[Za+0>>0]=a[Wa+0>>0]|0;a[Za+1>>0]=a[Wa+1>>0]|0;a[Za+2>>0]=a[Wa+2>>0]|0;a[Za+3>>0]=a[Wa+3>>0]|0;a[Za+4>>0]=a[Wa+4>>0]|0;a[Za+5>>0]=a[Wa+5>>0]|0;a[Za+6>>0]=a[Wa+6>>0]|0;a[Za+7>>0]=a[Wa+7>>0]|0;c[_a>>2]=Ca;c[$a>>2]=vb;vb=c[_a>>2]|0;c[ab>>2]=$a;Ca=c[c[ab>>2]>>2]|0;c[bb>>2]=Za;ub=c[bb>>2]|0;c[cb+0>>2]=c[ub+0>>2];c[cb+4>>2]=c[ub+4>>2];a[db+0>>0]=a[cb+0>>0]|0;a[db+1>>0]=a[cb+1>>0]|0;a[db+2>>0]=a[cb+2>>0]|0;a[db+3>>0]=a[cb+3>>0]|0;a[db+4>>0]=a[cb+4>>0]|0;a[db+5>>0]=a[cb+5>>0]|0;a[db+6>>0]=a[cb+6>>0]|0;a[db+7>>0]=a[cb+7>>0]|0;c[eb>>2]=vb;c[fb>>2]=Ca;Ca=c[eb>>2]|0;c[gb>>2]=fb;c[Ca>>2]=c[c[gb>>2]>>2];Ca=Ca+4|0;c[hb>>2]=db;vb=c[hb>>2]|0;c[Ca+0>>2]=c[vb+0>>2];c[Ca+4>>2]=c[vb+4>>2];c[ib>>2]=pb;c[jb>>2]=c[ib>>2];c[kb>>2]=c[jb>>2];c[Ba>>2]=0;Ca=c[kb>>2]|0;c[Aa>>2]=Ca;c[za>>2]=c[Aa>>2];c[ta>>2]=c[c[za>>2]>>2];vb=c[Ba>>2]|0;c[ya>>2]=Ca;c[xa>>2]=c[ya>>2];c[c[xa>>2]>>2]=vb;if((c[ta>>2]|0)!=0){c[va>>2]=Ca;c[wa>>2]=c[va>>2];ta=c[ta>>2]|0;c[ua>>2]=(c[wa>>2]|0)+4;c[T>>2]=ta;ta=c[ua>>2]|0;if(a[ta+5>>0]&1){vb=c[ta>>2]|0;c[fa>>2]=(c[T>>2]|0)+20;ub=c[fa>>2]|0;c[ga>>2]=vb;c[ha>>2]=ub;ub=c[ga>>2]|0;vb=c[ha>>2]|0;a[ja+0>>0]=a[ia+0>>0]|0;c[N>>2]=ub;c[la>>2]=vb}if(a[ta+4>>0]&1){vb=c[ta>>2]|0;c[_>>2]=(c[T>>2]|0)+16;ub=c[_>>2]|0;c[$>>2]=vb;c[aa>>2]=ub;ub=c[$>>2]|0;vb=c[aa>>2]|0;a[ca+0>>0]=a[ba+0>>0]|0;c[da>>2]=ub;c[ea>>2]=vb}if((c[T>>2]|0)!=0){ub=c[T>>2]|0;c[U>>2]=c[ta>>2];c[V>>2]=ub;c[W>>2]=1;ub=c[V>>2]|0;vb=c[W>>2]|0;c[X>>2]=c[U>>2];c[Y>>2]=ub;c[Z>>2]=vb;Ix(c[Y>>2]|0)}}ub=c[O>>2]|0;vb=c[P>>2]|0;c[R>>2]=Q;c[S>>2]=c[R>>2];c[ka>>2]=c[S>>2];Pe(b,ub,vb,c[c[ka>>2]>>2]|0);c[ma>>2]=Q;vb=c[ma>>2]|0;c[na>>2]=vb;c[oa>>2]=c[na>>2];c[pa>>2]=c[c[oa>>2]>>2];c[qa>>2]=vb;c[ra>>2]=c[qa>>2];c[c[ra>>2]>>2]=0;c[B>>2]=c[pa>>2];c[L>>2]=Q;c[M>>2]=c[L>>2];c[sa>>2]=c[M>>2];c[G>>2]=0;L=c[sa>>2]|0;c[F>>2]=L;c[E>>2]=c[F>>2];c[I>>2]=c[c[E>>2]>>2];vb=c[G>>2]|0;c[C>>2]=L;c[D>>2]=c[C>>2];c[c[D>>2]>>2]=vb;if((c[I>>2]|0)==0){vb=c[B>>2]|0;vb=vb+16|0;vb=vb+4|0;i=A;return vb|0}c[J>>2]=L;c[K>>2]=c[J>>2];C=c[I>>2]|0;c[H>>2]=(c[K>>2]|0)+4;c[y>>2]=C;C=c[H>>2]|0;if(a[C+5>>0]&1){vb=c[C>>2]|0;c[n>>2]=(c[y>>2]|0)+20;ub=c[n>>2]|0;c[o>>2]=vb;c[p>>2]=ub;ub=c[o>>2]|0;vb=c[p>>2]|0;a[r+0>>0]=a[q+0>>0]|0;c[s>>2]=ub;c[t>>2]=vb}if(a[C+4>>0]&1){vb=c[C>>2]|0;c[v>>2]=(c[y>>2]|0)+16;ub=c[v>>2]|0;c[g>>2]=vb;c[h>>2]=ub;ub=c[g>>2]|0;vb=c[h>>2]|0;a[k+0>>0]=a[j+0>>0]|0;c[l>>2]=ub;c[m>>2]=vb}if((c[y>>2]|0)==0){vb=c[B>>2]|0;vb=vb+16|0;vb=vb+4|0;i=A;return vb|0}ub=c[y>>2]|0;c[z>>2]=c[C>>2];c[x>>2]=ub;c[w>>2]=1;ub=c[x>>2]|0;vb=c[w>>2]|0;c[u>>2]=c[z>>2];c[f>>2]=ub;c[e>>2]=vb;Ix(c[f>>2]|0);vb=c[B>>2]|0;vb=vb+16|0;vb=vb+4|0;i=A;return vb|0}function Ie(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Je(c[d>>2]|0);i=b;return}function Je(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Ke(c[d>>2]|0);i=b;return}function Ke(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Le(c[d>>2]|0);i=b;return}function Le(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+32|0;d=b+8|0;e=b+16|0;f=b+20|0;g=b+24|0;h=b+4|0;j=b;k=b+12|0;c[k>>2]=a;a=c[k>>2]|0;c[j>>2]=a;c[h>>2]=c[j>>2];c[g>>2]=(c[h>>2]|0)+4;c[f>>2]=c[g>>2];c[e>>2]=c[f>>2];c[d>>2]=c[e>>2];Me(a,c[c[d>>2]>>2]|0);i=b;return}function Me(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;p=i;i=i+112|0;j=p+12|0;h=p+28|0;g=p+60|0;l=p+84|0;q=p+4|0;r=p+8|0;f=p;m=p+52|0;n=p+36|0;e=p+100|0;v=p+80|0;w=p+88|0;x=p+92|0;s=p+96|0;t=p+40|0;u=p+48|0;A=p+56|0;C=p+16|0;B=p+20|0;z=p+68|0;D=p+24|0;o=p+76|0;y=p+32|0;k=p+72|0;c[D>>2]=b;c[o>>2]=d;d=c[D>>2]|0;b=c[o>>2]|0;c[C>>2]=z;c[B>>2]=-1;B=c[B>>2]|0;c[A>>2]=c[C>>2];c[p+64>>2]=B;c[c[A>>2]>>2]=0;c[y>>2]=c[z>>2];c[p+44>>2]=y;if((b|0)==0){i=p;return}Me(d,c[c[o>>2]>>2]|0);Me(d,c[(c[o>>2]|0)+4>>2]|0);c[g>>2]=d;c[h>>2]=(c[g>>2]|0)+4;c[j>>2]=c[h>>2];c[k>>2]=c[j>>2];C=c[k>>2]|0;c[l>>2]=(c[o>>2]|0)+16;D=c[l>>2]|0;c[m>>2]=C;c[n>>2]=D;D=c[m>>2]|0;C=c[n>>2]|0;a[f+0>>0]=a[e+0>>0]|0;c[q>>2]=D;c[r>>2]=C;C=c[o>>2]|0;c[s>>2]=c[k>>2];c[t>>2]=C;c[u>>2]=1;C=c[t>>2]|0;D=c[u>>2]|0;c[v>>2]=c[s>>2];c[w>>2]=C;c[x>>2]=D;Ix(c[w>>2]|0);i=p;return}function Ne(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0;g=i;i=i+208|0;T=g+196|0;U=g+164|0;V=g+68|0;S=g+80|0;F=g+12|0;E=g+148|0;D=g+16|0;G=g+20|0;H=g+24|0;I=g+28|0;J=g+32|0;r=g+36|0;s=g+40|0;p=g+144|0;q=g+44|0;o=g+48|0;u=g+52|0;x=g+56|0;w=g+60|0;v=g+168|0;h=g+176|0;A=g+184|0;y=g+192|0;C=g+200|0;l=g+84|0;k=g+88|0;L=g+92|0;m=g+96|0;K=g+100|0;B=g+140|0;Q=g+104|0;P=g+108|0;O=g+112|0;N=g+116|0;M=g+120|0;W=g+124|0;X=g+128|0;Y=g+132|0;Z=g+136|0;_=g+8|0;$=g+152|0;f=g+156|0;aa=g;e=g+4|0;z=g+160|0;n=g+64|0;R=g+172|0;t=g+72|0;j=g+180|0;c[aa>>2]=a;c[e>>2]=b;c[z>>2]=d;b=c[aa>>2]|0;c[$>>2]=b;c[_>>2]=c[$>>2];c[Z>>2]=(c[_>>2]|0)+4;c[Y>>2]=c[Z>>2];c[X>>2]=c[Y>>2];c[W>>2]=c[X>>2];c[n>>2]=c[c[W>>2]>>2];d=c[n>>2]|0;c[U>>2]=S;c[V>>2]=-1;a=c[V>>2]|0;c[T>>2]=c[U>>2];c[g+188>>2]=a;c[c[T>>2]>>2]=0;c[R>>2]=c[S>>2];c[g+76>>2]=R;if((d|0)==0){c[M>>2]=b;c[N>>2]=(c[M>>2]|0)+4;c[O>>2]=c[N>>2];c[P>>2]=c[O>>2];c[Q>>2]=c[P>>2];c[c[e>>2]>>2]=c[Q>>2];c[f>>2]=c[c[e>>2]>>2];aa=c[f>>2]|0;i=g;return aa|0}while(1){c[D>>2]=b;c[E>>2]=(c[D>>2]|0)+8;c[F>>2]=c[E>>2];c[G>>2]=c[F>>2];$=c[z>>2]|0;aa=(c[n>>2]|0)+16|0;c[H>>2]=c[G>>2];c[I>>2]=$;c[J>>2]=aa;if((c[c[I>>2]>>2]|0)<(c[c[J>>2]>>2]|0)){aa=c[c[n>>2]>>2]|0;c[p>>2]=o;c[q>>2]=-1;M=c[q>>2]|0;c[r>>2]=c[p>>2];c[s>>2]=M;c[c[r>>2]>>2]=0;c[t>>2]=c[o>>2];c[u>>2]=t;M=c[n>>2]|0;if((aa|0)==0){h=5;break}c[n>>2]=c[M>>2];continue}c[v>>2]=b;c[w>>2]=(c[v>>2]|0)+8;c[x>>2]=c[w>>2];c[h>>2]=c[x>>2];aa=(c[n>>2]|0)+16|0;M=c[z>>2]|0;c[A>>2]=c[h>>2];c[y>>2]=aa;c[C>>2]=M;M=c[n>>2]|0;if((c[c[y>>2]>>2]|0)>=(c[c[C>>2]>>2]|0)){h=10;break}aa=c[M+4>>2]|0;c[L>>2]=K;c[m>>2]=-1;M=c[m>>2]|0;c[l>>2]=c[L>>2];c[k>>2]=M;c[c[l>>2]>>2]=0;c[j>>2]=c[K>>2];c[B>>2]=j;M=c[n>>2]|0;if((aa|0)==0){h=9;break}c[n>>2]=c[M+4>>2]}if((h|0)==5){c[c[e>>2]>>2]=M;c[f>>2]=c[c[e>>2]>>2];aa=c[f>>2]|0;i=g;return aa|0}else if((h|0)==9){c[c[e>>2]>>2]=M;c[f>>2]=(c[c[e>>2]>>2]|0)+4;aa=c[f>>2]|0;i=g;return aa|0}else if((h|0)==10){c[c[e>>2]>>2]=M;c[f>>2]=c[e>>2];aa=c[f>>2]|0;i=g;return aa|0}return 0}function Oe(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0,Uc=0,Vc=0,Wc=0,Xc=0,Yc=0,Zc=0,_c=0,$c=0,ad=0,bd=0,cd=0,dd=0,ed=0,fd=0,gd=0,hd=0,id=0,jd=0,kd=0,ld=0,md=0,nd=0,od=0,pd=0,qd=0,rd=0,sd=0,td=0,ud=0,vd=0,wd=0,xd=0,yd=0,zd=0,Ad=0,Bd=0,Cd=0,Dd=0,Ed=0,Fd=0,Gd=0,Hd=0,Id=0,Jd=0,Kd=0,Ld=0,Md=0,Nd=0,Od=0,Pd=0,Qd=0,Rd=0,Sd=0,Td=0,Ud=0,Vd=0,Wd=0,Xd=0,Yd=0,Zd=0,_d=0,$d=0,ae=0,be=0,ce=0,de=0,ee=0,fe=0,ge=0;g=i;i=i+1264|0;nd=g+808|0;md=g+1228|0;ld=g+1168|0;id=g+232|0;pd=g+260|0;qd=g+408|0;fd=g+1172|0;ed=g+1176|0;dd=g+1180|0;od=g+264|0;rd=g+1024|0;jd=g+1008|0;Hc=g+1188|0;Gc=g+228|0;Ec=g+216|0;Dc=g+1164|0;Cc=g+824|0;Fc=g+672|0;Ic=g+644|0;Lc=g+400|0;Kc=g+380|0;Jc=g+364|0;Mc=g+352|0;Vc=g+252|0;$c=g+248|0;_c=g+240|0;Yc=g+236|0;Zc=g+224|0;Xc=g+56|0;Uc=g+212|0;Sc=g+208|0;Tc=g+1160|0;Wc=g+1032|0;Rc=g+88|0;Pc=g+720|0;Qc=g+668|0;Oc=g+24|0;Bc=g+640|0;Ac=g+628|0;Nc=g+392|0;zc=g;yc=g+376|0;xc=g+32|0;Bb=g+360|0;Cb=g+356|0;Ib=g+348|0;Hb=g+344|0;gb=g+268|0;lb=g+272|0;mb=g+276|0;kb=g+96|0;hb=g+288|0;ib=g+292|0;jb=g+1248|0;sb=g+300|0;tb=g+304|0;sa=g+104|0;ob=g+220|0;pb=g+316|0;qb=g+1249|0;db=g+332|0;eb=g+336|0;fb=g+340|0;ab=g+1156|0;bb=g+1108|0;cb=g+1028|0;nb=g+960|0;Ab=g+820|0;$a=g+792|0;Gb=g+716|0;Fb=g+680|0;cd=g+664|0;Eb=g+660|0;Db=g+656|0;bd=g+648|0;ad=g+636|0;vc=g+632|0;wc=g+624|0;tc=g+616|0;uc=g+412|0;rc=g+416|0;Yb=g+384|0;Xb=g+424|0;Vb=g+428|0;Ub=g+432|0;Tb=g+372|0;Wb=g+440|0;Zb=g+444|0;ac=g+448|0;$b=g+452|0;_b=g+456|0;bc=g+460|0;kc=g+464|0;qc=g+468|0;pc=g+472|0;nc=g+476|0;oc=g+480|0;mc=g+8|0;jc=g+488|0;hc=g+492|0;ic=g+496|0;lc=g+280|0;gc=g+48|0;ec=g+516|0;fc=g+520|0;dc=g+136|0;Sb=g+528|0;Rb=g+532|0;cc=g+536|0;Qb=g+72|0;Pb=g+548|0;Nb=g+184|0;Lb=g+556|0;Mb=g+308|0;Jb=g+564|0;Kb=g+312|0;gd=g+572|0;sc=g+576|0;Ob=g+580|0;hd=g+592|0;ub=g+596|0;vb=g+600|0;_a=g+604|0;rb=g+608|0;Ya=g+612|0;za=g+1184|0;ya=g+1192|0;wa=g+1200|0;va=g+1208|0;ua=g+1104|0;xa=g+1224|0;Aa=g+1232|0;Da=g+1240|0;Ca=g+956|0;Ba=g+952|0;Ea=g+816|0;Na=g+812|0;Ta=g+788|0;Sa=g+776|0;Qa=g+712|0;Ra=g+704|0;Pa=g+80|0;Ma=g+684|0;Ka=g+688|0;La=g+692|0;Oa=g+696|0;Ja=g+120|0;Ha=g+652|0;Ia=g+708|0;Ga=g+112|0;ta=g+724|0;zb=g+728|0;Fa=g+736|0;yb=g+168|0;xb=g+744|0;wb=g+152|0;ud=g+748|0;td=g+752|0;sd=g+756|0;qa=g+760|0;ra=g+764|0;la=g+1216|0;ka=g+772|0;ia=g+420|0;P=g+780|0;Q=g+784|0;O=g+144|0;L=g+796|0;M=g+800|0;Y=g+1250|0;W=g+1244|0;X=g+436|0;V=g+176|0;S=g+828|0;T=g+832|0;U=g+1251|0;fa=g+848|0;ga=g+852|0;ha=g+856|0;ca=g+860|0;da=g+864|0;ea=g+868|0;R=g+872|0;oa=g+876|0;ba=g+880|0;ja=g+884|0;ma=g+888|0;Wa=g+892|0;na=g+896|0;pa=g+900|0;Va=g+904|0;Ua=g+908|0;xd=g+912|0;I=g+916|0;J=g+920|0;C=g+484|0;K=g+924|0;w=g+928|0;q=g+932|0;p=g+936|0;r=g+160|0;u=g+940|0;t=g+944|0;s=g+1252|0;m=g+948|0;n=g+512|0;l=g+16|0;h=g+964|0;j=g+968|0;k=g+1253|0;A=g+976|0;B=g+524|0;o=g+980|0;y=g+984|0;f=g+988|0;z=g+992|0;v=g+996|0;G=g+1e3|0;x=g+1004|0;D=g+544|0;E=g+1012|0;N=g+1016|0;F=g+1020|0;H=g+552|0;aa=g+1040|0;$=g+1044|0;yd=g+1048|0;zd=g+560|0;Ad=g+1052|0;Pd=g+1056|0;Gd=g+1060|0;Bd=g+568|0;Dd=g+1064|0;vd=g+1068|0;Ed=g+1072|0;Cd=g+128|0;Id=g+1080|0;Kd=g+1084|0;Jd=g+1088|0;Fd=g+1096|0;Hd=g+192|0;Nd=g+1112|0;Md=g+1116|0;Ld=g+40|0;Rd=g+1120|0;Td=g+1124|0;Sd=g+1128|0;Od=g+1136|0;Qd=g+200|0;Wd=g+1148|0;Vd=g+256|0;Ud=g+64|0;Zd=g+368|0;Yd=g+244|0;_d=g+676|0;$d=g+620|0;ae=g+1144|0;be=g+404|0;ce=g+768|0;de=g+1212|0;ee=g+1076|0;fe=g+1220|0;ge=g+1152|0;wd=g+1236|0;kd=g+972|0;_=g+500|0;Xd=g+840|0;Za=g+804|0;Xa=g+320|0;Z=g+296|0;c[ge>>2]=d;c[wd>>2]=e;c[fe>>2]=c[ge>>2];c[ee>>2]=(c[fe>>2]|0)+4;c[de>>2]=c[ee>>2];c[kd>>2]=c[de>>2];c[be>>2]=c[kd>>2];c[ce>>2]=1;d=c[ce>>2]|0;c[g+1196>>2]=c[be>>2];c[ae>>2]=d;c[g+1204>>2]=0;d=Gx((c[ae>>2]|0)*24|0)|0;e=c[kd>>2]|0;c[_d>>2]=Xd;c[$d>>2]=e;e=c[$d>>2]|0;c[Zd>>2]=c[_d>>2];c[Yd>>2]=e;e=c[Zd>>2]|0;c[e>>2]=c[Yd>>2];a[e+4>>0]=0;a[e+5>>0]=0;a[Ud+0>>0]=a[Xd+0>>0]|0;a[Ud+1>>0]=a[Xd+1>>0]|0;a[Ud+2>>0]=a[Xd+2>>0]|0;a[Ud+3>>0]=a[Xd+3>>0]|0;a[Ud+4>>0]=a[Xd+4>>0]|0;a[Ud+5>>0]=a[Xd+5>>0]|0;a[Ud+6>>0]=a[Xd+6>>0]|0;a[Ud+7>>0]=a[Xd+7>>0]|0;c[Wd>>2]=_;c[Vd>>2]=d;d=c[Wd>>2]|0;e=c[Vd>>2]|0;a[Qd+0>>0]=a[Ud+0>>0]|0;a[Qd+1>>0]=a[Ud+1>>0]|0;a[Qd+2>>0]=a[Ud+2>>0]|0;a[Qd+3>>0]=a[Ud+3>>0]|0;a[Qd+4>>0]=a[Ud+4>>0]|0;a[Qd+5>>0]=a[Ud+5>>0]|0;a[Qd+6>>0]=a[Ud+6>>0]|0;a[Qd+7>>0]=a[Ud+7>>0]|0;c[Td>>2]=d;c[Sd>>2]=e;e=c[Td>>2]|0;c[Rd>>2]=Sd;d=c[c[Rd>>2]>>2]|0;c[Pd>>2]=Qd;Pd=c[Pd>>2]|0;c[Od+0>>2]=c[Pd+0>>2];c[Od+4>>2]=c[Pd+4>>2];a[Ld+0>>0]=a[Od+0>>0]|0;a[Ld+1>>0]=a[Od+1>>0]|0;a[Ld+2>>0]=a[Od+2>>0]|0;a[Ld+3>>0]=a[Od+3>>0]|0;a[Ld+4>>0]=a[Od+4>>0]|0;a[Ld+5>>0]=a[Od+5>>0]|0;a[Ld+6>>0]=a[Od+6>>0]|0;a[Ld+7>>0]=a[Od+7>>0]|0;c[Nd>>2]=e;c[Md>>2]=d;d=c[Nd>>2]|0;e=c[Md>>2]|0;a[Hd+0>>0]=a[Ld+0>>0]|0;a[Hd+1>>0]=a[Ld+1>>0]|0;a[Hd+2>>0]=a[Ld+2>>0]|0;a[Hd+3>>0]=a[Ld+3>>0]|0;a[Hd+4>>0]=a[Ld+4>>0]|0;a[Hd+5>>0]=a[Ld+5>>0]|0;a[Hd+6>>0]=a[Ld+6>>0]|0;a[Hd+7>>0]=a[Ld+7>>0]|0;c[Kd>>2]=d;c[Jd>>2]=e;e=c[Kd>>2]|0;c[Id>>2]=Jd;d=c[c[Id>>2]>>2]|0;c[Gd>>2]=Hd;Gd=c[Gd>>2]|0;c[Fd+0>>2]=c[Gd+0>>2];c[Fd+4>>2]=c[Gd+4>>2];a[Cd+0>>0]=a[Fd+0>>0]|0;a[Cd+1>>0]=a[Fd+1>>0]|0;a[Cd+2>>0]=a[Fd+2>>0]|0;a[Cd+3>>0]=a[Fd+3>>0]|0;a[Cd+4>>0]=a[Fd+4>>0]|0;a[Cd+5>>0]=a[Fd+5>>0]|0;a[Cd+6>>0]=a[Fd+6>>0]|0;a[Cd+7>>0]=a[Fd+7>>0]|0;c[vd>>2]=e;c[Ed>>2]=d;vd=c[vd>>2]|0;c[Dd>>2]=Ed;c[vd>>2]=c[c[Dd>>2]>>2];vd=vd+4|0;c[Bd>>2]=Cd;d=c[Bd>>2]|0;c[vd+0>>2]=c[d+0>>2];c[vd+4>>2]=c[d+4>>2];vd=c[kd>>2]|0;c[Ad>>2]=_;c[zd>>2]=c[Ad>>2];c[yd>>2]=c[zd>>2];c[xd>>2]=(c[c[yd>>2]>>2]|0)+16;d=c[xd>>2]|0;e=c[wd>>2]|0;c[ud>>2]=vd;c[td>>2]=d;c[sd>>2]=e;e=c[td>>2]|0;if((e|0)!=0)c[e>>2]=c[c[sd>>2]>>2];c[jd>>2]=_;c[rd>>2]=c[jd>>2];c[od>>2]=c[rd>>2];a[(c[od>>2]|0)+8>>0]=1;ge=c[kd>>2]|0;c[ld>>2]=_;c[md>>2]=c[ld>>2];c[nd>>2]=c[md>>2];c[id>>2]=(c[c[nd>>2]>>2]|0)+20;id=c[id>>2]|0;c[pd>>2]=ge;c[qd>>2]=id;id=c[qd>>2]|0;if((id|0)!=0)c[id>>2]=0;c[dd>>2]=_;c[ed>>2]=c[dd>>2];c[fd>>2]=c[ed>>2];a[(c[fd>>2]|0)+9>>0]=1;c[gd>>2]=_;ge=c[gd>>2]|0;c[Jb>>2]=hd;c[Kb>>2]=ge;ge=c[Kb>>2]|0;c[Lb>>2]=c[Jb>>2];c[Mb>>2]=ge;c[c[Lb>>2]>>2]=c[Mb>>2];a[Nb+0>>0]=a[hd+0>>0]|0;a[Nb+1>>0]=a[hd+1>>0]|0;a[Nb+2>>0]=a[hd+2>>0]|0;a[Nb+3>>0]=a[hd+3>>0]|0;c[Pb>>2]=Ob;Jb=c[Pb>>2]|0;a[Qb+0>>0]=a[Nb+0>>0]|0;a[Qb+1>>0]=a[Nb+1>>0]|0;a[Qb+2>>0]=a[Nb+2>>0]|0;a[Qb+3>>0]=a[Nb+3>>0]|0;c[Rb>>2]=Jb;Jb=c[Rb>>2]|0;c[Sb>>2]=Qb;c[Tb>>2]=c[c[Sb>>2]>>2];ge=c[Tb>>2]|0;c[Ub>>2]=ge;c[Vb>>2]=c[Ub>>2];c[Wb>>2]=c[c[Vb>>2]>>2];c[Xb>>2]=ge;c[Yb>>2]=c[Xb>>2];c[c[Yb>>2]>>2]=0;ge=c[Wb>>2]|0;c[Zb>>2]=Qb;c[_b>>2]=c[c[Zb>>2]>>2];c[$b>>2]=c[_b>>2];c[ac>>2]=c[$b>>2];c[bc>>2]=(c[ac>>2]|0)+4;fe=c[bc>>2]|0;c[cc+0>>2]=c[fe+0>>2];c[cc+4>>2]=c[fe+4>>2];a[dc+0>>0]=a[cc+0>>0]|0;a[dc+1>>0]=a[cc+1>>0]|0;a[dc+2>>0]=a[cc+2>>0]|0;a[dc+3>>0]=a[cc+3>>0]|0;a[dc+4>>0]=a[cc+4>>0]|0;a[dc+5>>0]=a[cc+5>>0]|0;a[dc+6>>0]=a[cc+6>>0]|0;a[dc+7>>0]=a[cc+7>>0]|0;c[ec>>2]=Jb;c[fc>>2]=ge;ge=c[ec>>2]|0;Jb=c[fc>>2]|0;a[gc+0>>0]=a[dc+0>>0]|0;a[gc+1>>0]=a[dc+1>>0]|0;a[gc+2>>0]=a[dc+2>>0]|0;a[gc+3>>0]=a[dc+3>>0]|0;a[gc+4>>0]=a[dc+4>>0]|0;a[gc+5>>0]=a[dc+5>>0]|0;a[gc+6>>0]=a[dc+6>>0]|0;a[gc+7>>0]=a[dc+7>>0]|0;c[hc>>2]=ge;c[ic>>2]=Jb;Jb=c[hc>>2]|0;c[jc>>2]=ic;ge=c[c[jc>>2]>>2]|0;c[kc>>2]=gc;fe=c[kc>>2]|0;c[lc+0>>2]=c[fe+0>>2];c[lc+4>>2]=c[fe+4>>2];a[mc+0>>0]=a[lc+0>>0]|0;a[mc+1>>0]=a[lc+1>>0]|0;a[mc+2>>0]=a[lc+2>>0]|0;a[mc+3>>0]=a[lc+3>>0]|0;a[mc+4>>0]=a[lc+4>>0]|0;a[mc+5>>0]=a[lc+5>>0]|0;a[mc+6>>0]=a[lc+6>>0]|0;a[mc+7>>0]=a[lc+7>>0]|0;c[nc>>2]=Jb;c[oc>>2]=ge;ge=c[nc>>2]|0;c[pc>>2]=oc;c[ge>>2]=c[c[pc>>2]>>2];ge=ge+4|0;c[qc>>2]=mc;Jb=c[qc>>2]|0;c[ge+0>>2]=c[Jb+0>>2];c[ge+4>>2]=c[Jb+4>>2];c[rc>>2]=Ob;ge=c[rc>>2]|0;c[tc>>2]=sc;c[uc>>2]=ge;ge=c[uc>>2]|0;c[vc>>2]=c[tc>>2];c[wc>>2]=ge;c[c[vc>>2]>>2]=c[wc>>2];a[xc+0>>0]=a[sc+0>>0]|0;a[xc+1>>0]=a[sc+1>>0]|0;a[xc+2>>0]=a[sc+2>>0]|0;a[xc+3>>0]=a[sc+3>>0]|0;c[yc>>2]=Xa;ge=c[yc>>2]|0;a[zc+0>>0]=a[xc+0>>0]|0;a[zc+1>>0]=a[xc+1>>0]|0;a[zc+2>>0]=a[xc+2>>0]|0;a[zc+3>>0]=a[xc+3>>0]|0;c[Ac>>2]=ge;ge=c[Ac>>2]|0;c[Bc>>2]=zc;c[Cc>>2]=c[c[Bc>>2]>>2];Jb=c[Cc>>2]|0;c[Dc>>2]=Jb;c[Ec>>2]=c[Dc>>2];c[Fc>>2]=c[c[Ec>>2]>>2];c[Gc>>2]=Jb;c[Hc>>2]=c[Gc>>2];c[c[Hc>>2]>>2]=0;Jb=c[Fc>>2]|0;c[Ic>>2]=zc;c[Jc>>2]=c[c[Ic>>2]>>2];c[Kc>>2]=c[Jc>>2];c[Lc>>2]=c[Kc>>2];c[Mc>>2]=(c[Lc>>2]|0)+4;fe=c[Mc>>2]|0;c[Nc+0>>2]=c[fe+0>>2];c[Nc+4>>2]=c[fe+4>>2];a[Oc+0>>0]=a[Nc+0>>0]|0;a[Oc+1>>0]=a[Nc+1>>0]|0;a[Oc+2>>0]=a[Nc+2>>0]|0;a[Oc+3>>0]=a[Nc+3>>0]|0;a[Oc+4>>0]=a[Nc+4>>0]|0;a[Oc+5>>0]=a[Nc+5>>0]|0;a[Oc+6>>0]=a[Nc+6>>0]|0;a[Oc+7>>0]=a[Nc+7>>0]|0;c[Pc>>2]=ge;c[Qc>>2]=Jb;Jb=c[Pc>>2]|0;ge=c[Qc>>2]|0;a[Rc+0>>0]=a[Oc+0>>0]|0;a[Rc+1>>0]=a[Oc+1>>0]|0;a[Rc+2>>0]=a[Oc+2>>0]|0;a[Rc+3>>0]=a[Oc+3>>0]|0;a[Rc+4>>0]=a[Oc+4>>0]|0;a[Rc+5>>0]=a[Oc+5>>0]|0;a[Rc+6>>0]=a[Oc+6>>0]|0;a[Rc+7>>0]=a[Oc+7>>0]|0;c[Sc>>2]=Jb;c[Tc>>2]=ge;ge=c[Sc>>2]|0;c[Uc>>2]=Tc;Jb=c[c[Uc>>2]>>2]|0;c[Vc>>2]=Rc;fe=c[Vc>>2]|0;c[Wc+0>>2]=c[fe+0>>2];c[Wc+4>>2]=c[fe+4>>2];a[Xc+0>>0]=a[Wc+0>>0]|0;a[Xc+1>>0]=a[Wc+1>>0]|0;a[Xc+2>>0]=a[Wc+2>>0]|0;a[Xc+3>>0]=a[Wc+3>>0]|0;a[Xc+4>>0]=a[Wc+4>>0]|0;a[Xc+5>>0]=a[Wc+5>>0]|0;a[Xc+6>>0]=a[Wc+6>>0]|0;a[Xc+7>>0]=a[Wc+7>>0]|0;c[Yc>>2]=ge;c[Zc>>2]=Jb;Jb=c[Yc>>2]|0;c[_c>>2]=Zc;c[Jb>>2]=c[c[_c>>2]>>2];Jb=Jb+4|0;c[$c>>2]=Xc;ge=c[$c>>2]|0;c[Jb+0>>2]=c[ge+0>>2];c[Jb+4>>2]=c[ge+4>>2];c[ad>>2]=Ob;c[bd>>2]=c[ad>>2];c[cd>>2]=c[bd>>2];c[Eb>>2]=0;Jb=c[cd>>2]|0;c[Fb>>2]=Jb;c[Gb>>2]=c[Fb>>2];c[Db>>2]=c[c[Gb>>2]>>2];ge=c[Eb>>2]|0;c[Hb>>2]=Jb;c[Ib>>2]=c[Hb>>2];c[c[Ib>>2]>>2]=ge;if((c[Db>>2]|0)!=0){c[Cb>>2]=Jb;c[Bb>>2]=c[Cb>>2];ge=c[Db>>2]|0;c[Ab>>2]=(c[Bb>>2]|0)+4;c[$a>>2]=ge;Ab=c[Ab>>2]|0;if(a[Ab+5>>0]&1){ge=c[Ab>>2]|0;c[nb>>2]=(c[$a>>2]|0)+20;fe=c[nb>>2]|0;c[ob>>2]=ge;c[pb>>2]=fe;fe=c[ob>>2]|0;ge=c[pb>>2]|0;a[sa+0>>0]=a[qb+0>>0]|0;c[sb>>2]=fe;c[tb>>2]=ge}if(a[Ab+4>>0]&1){ge=c[Ab>>2]|0;c[gb>>2]=(c[$a>>2]|0)+16;fe=c[gb>>2]|0;c[hb>>2]=ge;c[ib>>2]=fe;fe=c[hb>>2]|0;ge=c[ib>>2]|0;a[kb+0>>0]=a[jb+0>>0]|0;c[lb>>2]=fe;c[mb>>2]=ge}if((c[$a>>2]|0)!=0){fe=c[$a>>2]|0;c[ab>>2]=c[Ab>>2];c[bb>>2]=fe;c[cb>>2]=1;fe=c[bb>>2]|0;ge=c[cb>>2]|0;c[db>>2]=c[ab>>2];c[eb>>2]=fe;c[fb>>2]=ge;Ix(c[eb>>2]|0)}}c[Ya>>2]=Xa;ge=c[Ya>>2]|0;c[_a>>2]=Za;c[rb>>2]=ge;ge=c[rb>>2]|0;c[ub>>2]=c[_a>>2];c[vb>>2]=ge;c[c[ub>>2]>>2]=c[vb>>2];a[wb+0>>0]=a[Za+0>>0]|0;a[wb+1>>0]=a[Za+1>>0]|0;a[wb+2>>0]=a[Za+2>>0]|0;a[wb+3>>0]=a[Za+3>>0]|0;c[xb>>2]=b;ge=c[xb>>2]|0;a[yb+0>>0]=a[wb+0>>0]|0;a[yb+1>>0]=a[wb+1>>0]|0;a[yb+2>>0]=a[wb+2>>0]|0;a[yb+3>>0]=a[wb+3>>0]|0;c[zb>>2]=ge;ge=c[zb>>2]|0;c[ta>>2]=yb;c[ua>>2]=c[c[ta>>2]>>2];sa=c[ua>>2]|0;c[va>>2]=sa;c[wa>>2]=c[va>>2];c[xa>>2]=c[c[wa>>2]>>2];c[ya>>2]=sa;c[za>>2]=c[ya>>2];c[c[za>>2]>>2]=0;sa=c[xa>>2]|0;c[Aa>>2]=yb;c[Ba>>2]=c[c[Aa>>2]>>2];c[Ca>>2]=c[Ba>>2];c[Da>>2]=c[Ca>>2];c[Ea>>2]=(c[Da>>2]|0)+4;fe=c[Ea>>2]|0;c[Fa+0>>2]=c[fe+0>>2];c[Fa+4>>2]=c[fe+4>>2];a[Ga+0>>0]=a[Fa+0>>0]|0;a[Ga+1>>0]=a[Fa+1>>0]|0;a[Ga+2>>0]=a[Fa+2>>0]|0;a[Ga+3>>0]=a[Fa+3>>0]|0;a[Ga+4>>0]=a[Fa+4>>0]|0;a[Ga+5>>0]=a[Fa+5>>0]|0;a[Ga+6>>0]=a[Fa+6>>0]|0;a[Ga+7>>0]=a[Fa+7>>0]|0;c[Ha>>2]=ge;c[Ia>>2]=sa;sa=c[Ha>>2]|0;ge=c[Ia>>2]|0;a[Ja+0>>0]=a[Ga+0>>0]|0;a[Ja+1>>0]=a[Ga+1>>0]|0;a[Ja+2>>0]=a[Ga+2>>0]|0;a[Ja+3>>0]=a[Ga+3>>0]|0;a[Ja+4>>0]=a[Ga+4>>0]|0;a[Ja+5>>0]=a[Ga+5>>0]|0;a[Ja+6>>0]=a[Ga+6>>0]|0;a[Ja+7>>0]=a[Ga+7>>0]|0;c[Ka>>2]=sa;c[La>>2]=ge;ge=c[Ka>>2]|0;c[Ma>>2]=La;sa=c[c[Ma>>2]>>2]|0;c[Na>>2]=Ja;fe=c[Na>>2]|0;c[Oa+0>>2]=c[fe+0>>2];c[Oa+4>>2]=c[fe+4>>2];a[Pa+0>>0]=a[Oa+0>>0]|0;a[Pa+1>>0]=a[Oa+1>>0]|0;a[Pa+2>>0]=a[Oa+2>>0]|0;a[Pa+3>>0]=a[Oa+3>>0]|0;a[Pa+4>>0]=a[Oa+4>>0]|0;a[Pa+5>>0]=a[Oa+5>>0]|0;a[Pa+6>>0]=a[Oa+6>>0]|0;a[Pa+7>>0]=a[Oa+7>>0]|0;c[Qa>>2]=ge;c[Ra>>2]=sa;sa=c[Qa>>2]|0;c[Sa>>2]=Ra;c[sa>>2]=c[c[Sa>>2]>>2];sa=sa+4|0;c[Ta>>2]=Pa;ge=c[Ta>>2]|0;c[sa+0>>2]=c[ge+0>>2];c[sa+4>>2]=c[ge+4>>2];c[Ua>>2]=Xa;c[Va>>2]=c[Ua>>2];c[Wa>>2]=c[Va>>2];c[na>>2]=0;sa=c[Wa>>2]|0;c[ma>>2]=sa;c[ja>>2]=c[ma>>2];c[pa>>2]=c[c[ja>>2]>>2];ge=c[na>>2]|0;c[ka>>2]=sa;c[la>>2]=c[ka>>2];c[c[la>>2]>>2]=ge;if((c[pa>>2]|0)!=0){c[ra>>2]=sa;c[qa>>2]=c[ra>>2];ja=c[pa>>2]|0;c[oa>>2]=(c[qa>>2]|0)+4;c[ba>>2]=ja;ja=c[oa>>2]|0;if(a[ja+5>>0]&1){ge=c[ja>>2]|0;c[R>>2]=(c[ba>>2]|0)+20;fe=c[R>>2]|0;c[S>>2]=ge;c[T>>2]=fe;fe=c[S>>2]|0;ge=c[T>>2]|0;a[V+0>>0]=a[U+0>>0]|0;c[W>>2]=fe;c[X>>2]=ge}if(a[ja+4>>0]&1){ge=c[ja>>2]|0;c[ia>>2]=(c[ba>>2]|0)+16;fe=c[ia>>2]|0;c[L>>2]=ge;c[M>>2]=fe;fe=c[L>>2]|0;ge=c[M>>2]|0;a[O+0>>0]=a[Y+0>>0]|0;c[P>>2]=fe;c[Q>>2]=ge}if((c[ba>>2]|0)!=0){fe=c[ba>>2]|0;c[ca>>2]=c[ja>>2];c[da>>2]=fe;c[ea>>2]=1;fe=c[da>>2]|0;ge=c[ea>>2]|0;c[fa>>2]=c[ca>>2];c[ga>>2]=fe;c[ha>>2]=ge;Ix(c[ga>>2]|0)}}c[Z>>2]=1;c[$>>2]=_;c[aa>>2]=c[$>>2];c[N>>2]=c[aa>>2];c[F>>2]=0;L=c[N>>2]|0;c[E>>2]=L;c[D>>2]=c[E>>2];c[H>>2]=c[c[D>>2]>>2];ge=c[F>>2]|0;c[K>>2]=L;c[C>>2]=c[K>>2];c[c[C>>2]>>2]=ge;if((c[H>>2]|0)==0){i=g;return}c[J>>2]=L;c[I>>2]=c[J>>2];C=c[H>>2]|0;c[G>>2]=(c[I>>2]|0)+4;c[x>>2]=C;C=c[G>>2]|0;if(a[C+5>>0]&1){ge=c[C>>2]|0;c[v>>2]=(c[x>>2]|0)+20;fe=c[v>>2]|0;c[h>>2]=ge;c[j>>2]=fe;fe=c[h>>2]|0;ge=c[j>>2]|0;a[l+0>>0]=a[k+0>>0]|0;c[m>>2]=fe;c[n>>2]=ge}if(a[C+4>>0]&1){ge=c[C>>2]|0;c[w>>2]=(c[x>>2]|0)+16;fe=c[w>>2]|0;c[u>>2]=ge;c[t>>2]=fe;fe=c[u>>2]|0;ge=c[t>>2]|0;a[r+0>>0]=a[s+0>>0]|0;c[q>>2]=fe;c[p>>2]=ge}if((c[x>>2]|0)==0){i=g;return}fe=c[x>>2]|0;c[y>>2]=c[C>>2];c[f>>2]=fe;c[z>>2]=1;fe=c[f>>2]|0;ge=c[z>>2]|0;c[A>>2]=c[y>>2];c[B>>2]=fe;c[o>>2]=ge;Ix(c[B>>2]|0);i=g;return}function Pe(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;n=i;i=i+144|0;C=n+68|0;D=n;E=n+108|0;B=n+132|0;x=n+20|0;u=n+24|0;v=n+32|0;w=n+36|0;t=n+40|0;r=n+104|0;q=n+112|0;l=n+120|0;f=n+128|0;g=n+136|0;o=n+140|0;p=n+72|0;m=n+80|0;h=n+84|0;j=n+88|0;H=n+92|0;I=n+12|0;J=n+4|0;G=n+8|0;K=n+100|0;z=n+48|0;k=n+52|0;y=n+116|0;F=n+60|0;A=n+124|0;s=n+16|0;c[K>>2]=a;c[z>>2]=b;c[k>>2]=d;c[y>>2]=e;e=c[K>>2]|0;c[I>>2]=G;c[J>>2]=-1;a=c[J>>2]|0;c[H>>2]=c[I>>2];c[n+96>>2]=a;c[c[H>>2]>>2]=0;c[F>>2]=c[G>>2];c[n+76>>2]=F;c[c[y>>2]>>2]=0;c[D>>2]=B;c[E>>2]=-1;a=c[E>>2]|0;c[C>>2]=c[D>>2];c[n+56>>2]=a;c[c[C>>2]>>2]=0;c[A>>2]=c[B>>2];c[n+64>>2]=A;c[(c[y>>2]|0)+4>>2]=0;c[(c[y>>2]|0)+8>>2]=c[z>>2];c[c[k>>2]>>2]=c[y>>2];c[x>>2]=e;a=c[c[c[x>>2]>>2]>>2]|0;c[v>>2]=t;c[w>>2]=-1;b=c[w>>2]|0;c[u>>2]=c[v>>2];c[n+28>>2]=b;c[c[u>>2]>>2]=0;c[s>>2]=c[t>>2];c[n+44>>2]=s;if((a|0)!=0){c[r>>2]=e;K=c[c[c[r>>2]>>2]>>2]|0;c[q>>2]=e;c[c[q>>2]>>2]=K}c[p>>2]=e;c[o>>2]=(c[p>>2]|0)+4;c[g>>2]=c[o>>2];c[f>>2]=c[g>>2];c[l>>2]=c[f>>2];Qe(c[c[l>>2]>>2]|0,c[c[k>>2]>>2]|0);c[j>>2]=e;c[h>>2]=(c[j>>2]|0)+8;c[m>>2]=c[h>>2];K=c[m>>2]|0;c[K>>2]=(c[K>>2]|0)+1;i=n;return}function Qe(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;h=i;i=i+96|0;f=h+76|0;u=h+48|0;v=h+24|0;s=h+36|0;t=h+68|0;q=h+16|0;x=h+20|0;e=h+56|0;p=h+64|0;m=h+72|0;n=h+80|0;k=h+40|0;l=h+44|0;j=h+8|0;y=h;z=h+4|0;g=h+52|0;r=h+28|0;o=h+60|0;A=h+12|0;w=h+32|0;c[z>>2]=b;c[g>>2]=d;a[(c[g>>2]|0)+12>>0]=(c[g>>2]|0)==(c[z>>2]|0)&1;while(1){if((c[g>>2]|0)==(c[z>>2]|0)){j=17;break}if(!(a[(c[(c[g>>2]|0)+8>>2]|0)+12>>0]&1^1)){j=17;break}c[y>>2]=c[(c[g>>2]|0)+8>>2];d=c[(c[(c[g>>2]|0)+8>>2]|0)+8>>2]|0;if((c[y>>2]|0)==(c[c[(c[y>>2]|0)+8>>2]>>2]|0)){c[r>>2]=c[d+4>>2];b=c[r>>2]|0;c[k>>2]=j;c[l>>2]=-1;d=c[l>>2]|0;c[m>>2]=c[k>>2];c[n>>2]=d;c[c[m>>2]>>2]=0;c[o>>2]=c[j>>2];c[p>>2]=o;if((b|0)==0){j=8;break}if(a[(c[r>>2]|0)+12>>0]&1){j=8;break}c[g>>2]=c[(c[g>>2]|0)+8>>2];a[(c[g>>2]|0)+12>>0]=1;c[g>>2]=c[(c[g>>2]|0)+8>>2];a[(c[g>>2]|0)+12>>0]=(c[g>>2]|0)==(c[z>>2]|0)&1;a[(c[r>>2]|0)+12>>0]=1;continue}else{c[A>>2]=c[d>>2];b=c[A>>2]|0;c[s>>2]=q;c[t>>2]=-1;d=c[t>>2]|0;c[u>>2]=c[s>>2];c[v>>2]=d;c[c[u>>2]>>2]=0;c[w>>2]=c[q>>2];c[x>>2]=w;if((b|0)==0){j=14;break}if(a[(c[A>>2]|0)+12>>0]&1){j=14;break}c[g>>2]=c[(c[g>>2]|0)+8>>2];a[(c[g>>2]|0)+12>>0]=1;c[g>>2]=c[(c[g>>2]|0)+8>>2];a[(c[g>>2]|0)+12>>0]=(c[g>>2]|0)==(c[z>>2]|0)&1;a[(c[A>>2]|0)+12>>0]=1;continue}}if((j|0)==8){c[f>>2]=c[g>>2];if((c[f>>2]|0)!=(c[c[(c[f>>2]|0)+8>>2]>>2]|0)){c[g>>2]=c[(c[g>>2]|0)+8>>2];Re(c[g>>2]|0)}c[g>>2]=c[(c[g>>2]|0)+8>>2];a[(c[g>>2]|0)+12>>0]=1;c[g>>2]=c[(c[g>>2]|0)+8>>2];a[(c[g>>2]|0)+12>>0]=0;Se(c[g>>2]|0);i=h;return}else if((j|0)==14){c[e>>2]=c[g>>2];if((c[e>>2]|0)==(c[c[(c[e>>2]|0)+8>>2]>>2]|0)){c[g>>2]=c[(c[g>>2]|0)+8>>2];Se(c[g>>2]|0)}c[g>>2]=c[(c[g>>2]|0)+8>>2];a[(c[g>>2]|0)+12>>0]=1;c[g>>2]=c[(c[g>>2]|0)+8>>2];a[(c[g>>2]|0)+12>>0]=0;Re(c[g>>2]|0);i=h;return}else if((j|0)==17){i=h;return}}function Re(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+48|0;f=e+16|0;k=e+28|0;l=e+32|0;m=e+36|0;j=e+12|0;b=e+24|0;d=e+20|0;h=e+8|0;c[b>>2]=a;c[d>>2]=c[(c[b>>2]|0)+4>>2];c[(c[b>>2]|0)+4>>2]=c[c[d>>2]>>2];g=c[(c[b>>2]|0)+4>>2]|0;c[l>>2]=j;c[m>>2]=-1;a=c[m>>2]|0;c[k>>2]=c[l>>2];c[e+4>>2]=a;c[c[k>>2]>>2]=0;c[h>>2]=c[j>>2];c[e>>2]=h;if((g|0)!=0)c[(c[(c[b>>2]|0)+4>>2]|0)+8>>2]=c[b>>2];c[(c[d>>2]|0)+8>>2]=c[(c[b>>2]|0)+8>>2];c[f>>2]=c[b>>2];g=c[d>>2]|0;a=c[(c[b>>2]|0)+8>>2]|0;if((c[f>>2]|0)==(c[c[(c[f>>2]|0)+8>>2]>>2]|0)){c[a>>2]=g;m=c[b>>2]|0;l=c[d>>2]|0;c[l>>2]=m;l=c[d>>2]|0;m=c[b>>2]|0;m=m+8|0;c[m>>2]=l;i=e;return}else{c[a+4>>2]=g;m=c[b>>2]|0;l=c[d>>2]|0;c[l>>2]=m;l=c[d>>2]|0;m=c[b>>2]|0;m=m+8|0;c[m>>2]=l;i=e;return}}function Se(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+48|0;f=e+16|0;k=e+28|0;l=e+32|0;m=e+36|0;j=e+12|0;b=e+24|0;d=e+20|0;h=e+8|0;c[b>>2]=a;c[d>>2]=c[c[b>>2]>>2];c[c[b>>2]>>2]=c[(c[d>>2]|0)+4>>2];g=c[c[b>>2]>>2]|0;c[l>>2]=j;c[m>>2]=-1;a=c[m>>2]|0;c[k>>2]=c[l>>2];c[e+4>>2]=a;c[c[k>>2]>>2]=0;c[h>>2]=c[j>>2];c[e>>2]=h;if((g|0)!=0)c[(c[c[b>>2]>>2]|0)+8>>2]=c[b>>2];c[(c[d>>2]|0)+8>>2]=c[(c[b>>2]|0)+8>>2];c[f>>2]=c[b>>2];g=c[d>>2]|0;a=c[(c[b>>2]|0)+8>>2]|0;if((c[f>>2]|0)==(c[c[(c[f>>2]|0)+8>>2]>>2]|0)){c[a>>2]=g;m=c[b>>2]|0;l=c[d>>2]|0;l=l+4|0;c[l>>2]=m;l=c[d>>2]|0;m=c[b>>2]|0;m=m+8|0;c[m>>2]=l;i=e;return}else{c[a+4>>2]=g;m=c[b>>2]|0;l=c[d>>2]|0;l=l+4|0;c[l>>2]=m;l=c[d>>2]|0;m=c[b>>2]|0;m=m+8|0;c[m>>2]=l;i=e;return}}function Te(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;f=i;i=i+208|0;Q=f+188|0;S=f+180|0;T=f+164|0;U=f+68|0;V=f+76|0;G=f+72|0;H=f+12|0;I=f+140|0;J=f+16|0;K=f+20|0;L=f+24|0;M=f+28|0;N=f+32|0;O=f+36|0;P=f+40|0;C=f+136|0;B=f+44|0;D=f+48|0;E=f+52|0;z=f+56|0;A=f+160|0;g=f+168|0;x=f+176|0;t=f+192|0;s=f+80|0;u=f+84|0;w=f+88|0;v=f+92|0;q=f+96|0;e=f+100|0;o=f+132|0;p=f+104|0;n=f+108|0;m=f+112|0;l=f+116|0;k=f+120|0;j=f+124|0;h=f+128|0;W=f+8|0;X=f+144|0;Y=f+148|0;Z=f+4|0;_=f+152|0;$=f;R=f+60|0;y=f+156|0;r=f+64|0;F=f+172|0;c[R>>2]=b;c[y>>2]=d;d=c[R>>2]|0;R=c[y>>2]|0;c[$>>2]=d;c[_>>2]=c[$>>2];c[Z>>2]=(c[_>>2]|0)+4;c[Y>>2]=c[Z>>2];c[X>>2]=c[Y>>2];c[W>>2]=c[X>>2];b=c[c[W>>2]>>2]|0;c[V>>2]=d;c[U>>2]=(c[V>>2]|0)+4;c[T>>2]=c[U>>2];c[S>>2]=c[T>>2];c[Q>>2]=c[S>>2];Ue(r,d,R,b,c[Q>>2]|0);c[P>>2]=d;c[O>>2]=c[P>>2];c[N>>2]=(c[O>>2]|0)+4;c[M>>2]=c[N>>2];c[L>>2]=c[M>>2];c[K>>2]=c[L>>2];b=c[K>>2]|0;c[I>>2]=F;c[J>>2]=b;b=c[J>>2]|0;c[G>>2]=c[I>>2];c[H>>2]=b;c[c[G>>2]>>2]=c[H>>2];c[D>>2]=r;c[E>>2]=F;b=c[E>>2]|0;c[C>>2]=c[D>>2];c[B>>2]=b;if((c[c[C>>2]>>2]|0)==(c[c[B>>2]>>2]|0)^1?(c[g>>2]=d,c[A>>2]=(c[g>>2]|0)+8,c[z>>2]=c[A>>2],Z=c[z>>2]|0,$=c[y>>2]|0,c[x>>2]=r,_=(c[c[x>>2]>>2]|0)+16|0,c[u>>2]=Z,c[w>>2]=$,c[v>>2]=_,_=c[w>>2]|0,$=c[v>>2]|0,c[f+184>>2]=c[u>>2],c[t>>2]=_,c[s>>2]=$,(c[c[t>>2]>>2]|0)>=(c[c[s>>2]>>2]|0)):0){c[a+0>>2]=c[r+0>>2];i=f;return}c[h>>2]=d;c[j>>2]=c[h>>2];c[k>>2]=(c[j>>2]|0)+4;c[l>>2]=c[k>>2];c[m>>2]=c[l>>2];c[n>>2]=c[m>>2];$=c[n>>2]|0;c[o>>2]=a;c[p>>2]=$;$=c[p>>2]|0;c[q>>2]=c[o>>2];c[e>>2]=$;c[c[q>>2]>>2]=c[e>>2];i=f;return}function Ue(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;m=i;i=i+96|0;n=m+44|0;q=m+40|0;p=m+4|0;o=m+84|0;w=m;x=m+16|0;y=m+20|0;t=m+24|0;u=m+64|0;g=m+72|0;k=m+80|0;l=m+88|0;h=m+92|0;j=m+48|0;C=m+52|0;D=m+56|0;A=m+8|0;B=m+60|0;z=m+28|0;F=m+12|0;s=m+32|0;r=m+68|0;v=m+36|0;E=m+76|0;c[F>>2]=b;c[s>>2]=d;c[r>>2]=e;c[v>>2]=f;f=c[F>>2]|0;while(1){F=c[r>>2]|0;c[A>>2]=z;c[B>>2]=-1;b=c[B>>2]|0;c[C>>2]=c[A>>2];c[D>>2]=b;c[c[C>>2]>>2]=0;c[E>>2]=c[z>>2];c[n>>2]=E;if((F|0)==0)break;c[o>>2]=f;c[p>>2]=(c[o>>2]|0)+8;c[q>>2]=c[p>>2];e=(c[r>>2]|0)+16|0;F=c[s>>2]|0;c[t>>2]=c[q>>2];c[u>>2]=e;c[g>>2]=F;F=c[u>>2]|0;e=c[g>>2]|0;c[w>>2]=c[t>>2];c[x>>2]=F;c[y>>2]=e;e=c[r>>2]|0;if((c[c[x>>2]>>2]|0)<(c[c[y>>2]>>2]|0)){c[r>>2]=c[e+4>>2];continue}else{c[v>>2]=e;c[r>>2]=c[c[r>>2]>>2];continue}}F=c[v>>2]|0;c[h>>2]=a;c[j>>2]=F;F=c[j>>2]|0;c[k>>2]=c[h>>2];c[l>>2]=F;c[c[k>>2]>>2]=c[l>>2];i=m;return}function Ve(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;We(c[f>>2]|0,c[e>>2]|0);i=d;return}function We(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;e=i;i=i+128|0;t=e+112|0;m=e+52|0;o=e+92|0;q=e+100|0;n=e+24|0;p=e+8|0;v=e+28|0;r=e+44|0;w=e+36|0;s=e+117|0;u=e+16|0;x=e+96|0;z=e+104|0;y=e;g=e+60|0;h=e+64|0;j=e+68|0;k=e+72|0;l=e+76|0;f=e+84|0;B=e+88|0;C=e+80|0;D=e+48|0;E=e+20|0;F=e+108|0;G=e+56|0;A=e+116|0;c[G>>2]=b;c[e+40>>2]=d;d=c[G>>2]|0;c[F>>2]=d+4;c[E>>2]=c[F>>2];c[D>>2]=c[E>>2];b=c[D>>2]|0;c[e+32>>2]=b;c[C>>2]=b;c[B>>2]=c[C>>2];c[c[B>>2]>>2]=0;b=d+8|0;a[y+0>>0]=a[A+0>>0]|0;c[x>>2]=b;c[z>>2]=0;x=c[x>>2]|0;b=c[z>>2]|0;a[u+0>>0]=a[y+0>>0]|0;c[r>>2]=x;c[w>>2]=b;r=c[r>>2]|0;c[v>>2]=w;b=c[c[v>>2]>>2]|0;c[t>>2]=u;a[p+0>>0]=a[s+0>>0]|0;c[q>>2]=r;c[n>>2]=b;b=c[q>>2]|0;c[o>>2]=p;c[m>>2]=n;c[b>>2]=c[c[m>>2]>>2];c[l>>2]=d;c[k>>2]=(c[l>>2]|0)+4;c[j>>2]=c[k>>2];c[h>>2]=c[j>>2];c[g>>2]=c[h>>2];b=c[g>>2]|0;c[f>>2]=d;c[c[f>>2]>>2]=b;i=e;return}function Xe(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;e=i;i=i+208|0;h=e+108|0;P=e+96|0;Q=e+92|0;S=e+176|0;R=e+184|0;O=e+36|0;M=e+156|0;I=e+124|0;J=e+72|0;L=e+40|0;K=e+48|0;H=e+52|0;F=e+56|0;B=e+60|0;C=e+64|0;E=e+104|0;D=e+76|0;A=e+68|0;y=e+80|0;q=e+164|0;j=e+172|0;l=e+180|0;n=e+188|0;k=e+192|0;m=e+8|0;s=e+196|0;o=e+112|0;t=e+116|0;p=e+200|0;r=e+16|0;u=e+128|0;w=e+88|0;v=e+24|0;T=e+140|0;U=e+144|0;V=e+148|0;N=e+152|0;G=e+28|0;z=e+44|0;x=e+202|0;X=e+132|0;Y=e;_=e+160|0;Z=e+203|0;$=e+136|0;aa=e+32|0;ba=e+100|0;ca=e+84|0;g=e+168|0;W=e+201|0;f=e+120|0;c[ca>>2]=b;c[g>>2]=d;d=c[ca>>2]|0;c[ba>>2]=c[g>>2];c[aa>>2]=(c[ba>>2]|0)+8;c[$>>2]=c[aa>>2];c[_>>2]=c[$>>2];b=c[_>>2]|0;a[Y+0>>0]=a[Z+0>>0]|0;c[X>>2]=b;c[U>>2]=d;c[V>>2]=W;b=c[U>>2]|0;c[T>>2]=b;c[S>>2]=O;c[R>>2]=-1;R=c[R>>2]|0;c[P>>2]=c[S>>2];c[Q>>2]=R;c[c[P>>2]>>2]=0;c[N>>2]=c[O>>2];c[M>>2]=N;c[b>>2]=0;c[L>>2]=H;c[K>>2]=-1;K=c[K>>2]|0;c[I>>2]=c[L>>2];c[J>>2]=K;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[F>>2]=G;c[b+4>>2]=0;b=b+8|0;c[E>>2]=A;c[D>>2]=-1;D=c[D>>2]|0;c[B>>2]=c[E>>2];c[C>>2]=D;c[c[B>>2]>>2]=0;c[z>>2]=c[A>>2];c[y>>2]=z;a[v+0>>0]=a[x+0>>0]|0;c[u>>2]=b;c[w>>2]=0;u=c[u>>2]|0;b=c[w>>2]|0;a[r+0>>0]=a[v+0>>0]|0;c[o>>2]=u;c[t>>2]=b;o=c[o>>2]|0;c[s>>2]=t;b=c[c[s>>2]>>2]|0;c[q>>2]=r;a[m+0>>0]=a[p+0>>0]|0;c[n>>2]=o;c[k>>2]=b;b=c[n>>2]|0;c[l>>2]=m;c[j>>2]=k;c[b>>2]=c[c[j>>2]>>2];c[h>>2]=c[g>>2];b=c[h>>2]|0;c[f>>2]=((c[b+4>>2]|0)-(c[b>>2]|0)|0)/2096|0;if(!((c[f>>2]|0)>>>0>0)){i=e;return}Ye(d,c[f>>2]|0);Ze(d,c[c[g>>2]>>2]|0,c[(c[g>>2]|0)+4>>2]|0);i=e;return}function Ye(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;k=i;i=i+64|0;d=k+36|0;e=k+16|0;l=k+32|0;j=k+40|0;f=k+48|0;g=k+8|0;m=k+4|0;n=k+24|0;o=k+12|0;p=k+28|0;h=k;c[p>>2]=a;c[h>>2]=b;b=c[p>>2]|0;a=c[h>>2]|0;if(a>>>0>(_e(b)|0)>>>0)Zt(b);else{c[o>>2]=b;c[n>>2]=(c[o>>2]|0)+8;c[m>>2]=c[n>>2];p=c[h>>2]|0;c[e>>2]=c[m>>2];c[l>>2]=p;p=c[l>>2]|0;c[k+44>>2]=c[e>>2];c[d>>2]=p;c[k+20>>2]=0;p=Gx((c[d>>2]|0)*2096|0)|0;c[b+4>>2]=p;c[b>>2]=p;p=(c[b>>2]|0)+((c[h>>2]|0)*2096|0)|0;c[g>>2]=b;c[f>>2]=(c[g>>2]|0)+8;c[j>>2]=c[f>>2];c[c[j>>2]>>2]=p;i=k;return}}function Ze(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;k=i;i=i+48|0;g=k+36|0;j=k+16|0;e=k;l=k+28|0;n=k+32|0;o=k+40|0;p=k+12|0;q=k+24|0;h=k+20|0;m=k+8|0;f=k+4|0;c[q>>2]=a;c[h>>2]=b;c[m>>2]=d;d=c[q>>2]|0;c[p>>2]=d;c[o>>2]=(c[p>>2]|0)+8;c[n>>2]=c[o>>2];c[f>>2]=c[n>>2];while(1){if((c[h>>2]|0)==(c[m>>2]|0))break;p=c[f>>2]|0;c[g>>2]=c[d+4>>2];q=c[g>>2]|0;b=c[h>>2]|0;c[j>>2]=p;c[e>>2]=q;c[l>>2]=b;b=c[e>>2]|0;if((b|0)!=0)qz(b|0,c[l>>2]|0,2096)|0;q=d+4|0;c[q>>2]=(c[q>>2]|0)+2096;c[h>>2]=(c[h>>2]|0)+2096}i=k;return}function _e(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+80|0;q=h+44|0;r=h+12|0;s=h+8|0;u=h+16|0;t=h+76|0;k=h+20|0;g=h+24|0;f=h+28|0;d=h+68|0;e=h+36|0;l=h;n=h+48|0;j=h+52|0;m=h+77|0;v=h+60|0;w=h+64|0;x=h+40|0;y=h+32|0;p=h+56|0;o=h+72|0;c[y>>2]=b;c[x>>2]=c[y>>2];c[w>>2]=(c[x>>2]|0)+8;c[v>>2]=c[w>>2];c[u>>2]=c[v>>2];b=c[u>>2]|0;a[s+0>>0]=a[t+0>>0]|0;c[r>>2]=b;c[q>>2]=c[r>>2];c[p>>2]=2049125;c[o>>2]=4294967295/2|0;c[n>>2]=p;c[j>>2]=o;b=c[n>>2]|0;j=c[j>>2]|0;a[l+0>>0]=a[m+0>>0]|0;c[d>>2]=b;c[e>>2]=j;j=c[e>>2]|0;b=c[d>>2]|0;c[k>>2]=l;c[g>>2]=j;c[f>>2]=b;i=h;return c[((c[c[g>>2]>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0?c[e>>2]|0:c[d>>2]|0)>>2]|0}function $e(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0.0;d=i;i=i+2112|0;e=d+2096|0;j=d+2108|0;f=d+2104|0;g=d;c[j>>2]=a;c[f>>2]=b;if((c[(c[j>>2]|0)+2080>>2]|0)==0){h[e>>3]=0.0;k=+h[e>>3];i=d;return+k}else{qz(g|0,c[j>>2]|0,2096)|0;af(g,c[f>>2]|0);k=+Ce(g);h[e>>3]=k- +h[(c[f>>2]|0)+2088>>3];k=+h[e>>3];i=d;return+k}return 0.0}function af(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;g=d+8|0;f=d+4|0;e=d;c[g>>2]=a;c[f>>2]=b;b=c[g>>2]|0;a=b+2080|0;c[a>>2]=(c[a>>2]|0)+(c[(c[f>>2]|0)+2080>>2]|0);c[e>>2]=0;while(1){if((c[e>>2]|0)>=520)break;g=b+(c[e>>2]<<2)|0;c[g>>2]=(c[g>>2]|0)+(c[(c[f>>2]|0)+(c[e>>2]<<2)>>2]|0);c[e>>2]=(c[e>>2]|0)+1}i=d;return}function bf(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;cf(c[d>>2]|0);i=b;return}function cf(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;df(c[d>>2]|0);i=b;return}function df(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;ef(c[d>>2]|0);i=b;return}function ef(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+32|0;d=b+8|0;e=b+16|0;f=b+20|0;g=b+24|0;h=b+4|0;j=b;k=b+12|0;c[k>>2]=a;a=c[k>>2]|0;c[j>>2]=a;c[h>>2]=c[j>>2];c[g>>2]=(c[h>>2]|0)+4;c[f>>2]=c[g>>2];c[e>>2]=c[f>>2];c[d>>2]=c[e>>2];ff(a,c[c[d>>2]>>2]|0);i=b;return}function ff(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;p=i;i=i+112|0;j=p+20|0;h=p+40|0;g=p+48|0;l=p+84|0;q=p+4|0;r=p+16|0;f=p;m=p+8|0;n=p+28|0;e=p+100|0;v=p+80|0;w=p+88|0;x=p+92|0;s=p+96|0;t=p+52|0;u=p+56|0;A=p+24|0;C=p+12|0;B=p+32|0;z=p+68|0;D=p+36|0;o=p+76|0;y=p+44|0;k=p+72|0;c[D>>2]=b;c[o>>2]=d;d=c[D>>2]|0;b=c[o>>2]|0;c[C>>2]=z;c[B>>2]=-1;B=c[B>>2]|0;c[A>>2]=c[C>>2];c[p+64>>2]=B;c[c[A>>2]>>2]=0;c[y>>2]=c[z>>2];c[p+60>>2]=y;if((b|0)==0){i=p;return}ff(d,c[c[o>>2]>>2]|0);ff(d,c[(c[o>>2]|0)+4>>2]|0);c[g>>2]=d;c[h>>2]=(c[g>>2]|0)+4;c[j>>2]=c[h>>2];c[k>>2]=c[j>>2];C=c[k>>2]|0;c[l>>2]=(c[o>>2]|0)+16;D=c[l>>2]|0;c[m>>2]=C;c[n>>2]=D;D=c[m>>2]|0;C=c[n>>2]|0;a[f+0>>0]=a[e+0>>0]|0;c[q>>2]=D;c[r>>2]=C;C=c[o>>2]|0;c[s>>2]=c[k>>2];c[t>>2]=C;c[u>>2]=1;C=c[t>>2]|0;D=c[u>>2]|0;c[v>>2]=c[s>>2];c[w>>2]=C;c[x>>2]=D;Ix(c[w>>2]|0);i=p;return}function gf(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;d=i;i=i+80|0;o=d+24|0;l=d+44|0;m=d+60|0;j=d+4|0;k=d+40|0;h=d+48|0;g=d+56|0;n=d+64|0;f=d+68|0;r=d+28|0;t=d+32|0;s=d+36|0;q=d+8|0;b=d+12|0;e=d+52|0;p=d+16|0;c[e>>2]=a;a=c[(c[e>>2]|0)+4>>2]|0;c[t>>2]=q;c[s>>2]=-1;s=c[s>>2]|0;c[r>>2]=c[t>>2];c[d>>2]=s;c[c[r>>2]>>2]=0;c[p>>2]=c[q>>2];c[d+20>>2]=p;if((a|0)==0){while(1){c[f>>2]=c[e>>2];g=c[(c[e>>2]|0)+8>>2]|0;if(!((c[f>>2]|0)==(c[c[(c[f>>2]|0)+8>>2]>>2]|0)^1))break;c[e>>2]=g}c[b>>2]=g;t=c[b>>2]|0;i=d;return t|0}c[g>>2]=c[(c[e>>2]|0)+4>>2];while(1){t=c[c[g>>2]>>2]|0;c[j>>2]=h;c[k>>2]=-1;e=c[k>>2]|0;c[l>>2]=c[j>>2];c[m>>2]=e;c[c[l>>2]>>2]=0;c[n>>2]=c[h>>2];c[o>>2]=n;e=c[g>>2]|0;if((t|0)==0)break;c[g>>2]=c[e>>2]}c[b>>2]=e;t=c[b>>2]|0;i=d;return t|0}function hf(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0;G=i;i=i+544|0;pa=G+264|0;oa=G+244|0;Y=G+240|0;ra=G+236|0;W=G+472|0;na=G+500|0;V=G+508|0;$=G+516|0;U=G+136|0;ta=G+132|0;sa=G+80|0;wa=G+68|0;xa=G+56|0;ja=G+60|0;ka=G+64|0;ia=G+48|0;fa=G+328|0;ga=G+272|0;ha=G+532|0;ba=G+128|0;ca=G+84|0;da=G+88|0;_=G+92|0;R=G+96|0;aa=G+100|0;ea=G+104|0;va=G+108|0;Z=G+112|0;ya=G+116|0;za=G+120|0;kb=G+124|0;Aa=G+464|0;ua=G+380|0;jb=G+324|0;ib=G+280|0;P=G+268|0;Q=G+144|0;M=G+148|0;L=G+152|0;z=G+156|0;A=G+160|0;y=G+24|0;v=G+168|0;w=G+172|0;x=G+533|0;C=G+188|0;B=G+192|0;f=G+196|0;F=G+200|0;E=G+204|0;D=G+208|0;u=G+212|0;N=G+216|0;t=G+220|0;K=G+224|0;J=G+488|0;T=G+496|0;I=G+504|0;O=G+512|0;S=G+520|0;qa=G+524|0;Pa=G+260|0;Oa=G+528|0;Ma=G+460|0;La=G+456|0;Ka=G+376|0;Na=G+356|0;Qa=G+320|0;Ta=G+284|0;Sa=G+288|0;Ra=G+292|0;Ua=G+296|0;bb=G+300|0;hb=G+304|0;gb=G+308|0;eb=G+312|0;fb=G+316|0;db=G+32|0;ab=G+332|0;_a=G+336|0;$a=G+340|0;cb=G+344|0;Ba=G+16|0;Xa=G+164|0;Ya=G+352|0;Wa=G;Ja=G+360|0;Ia=G+364|0;Va=G+368|0;Ha=G+40|0;Ga=G+384|0;Fa=G+8|0;Da=G+388|0;Ea=G+392|0;Ca=G+396|0;Za=G+400|0;mb=G+404|0;p=G+408|0;o=G+412|0;r=G+416|0;q=G+420|0;h=G+424|0;g=G+428|0;H=G+432|0;l=G+436|0;j=G+440|0;k=G+444|0;rb=G+452|0;tb=G+468|0;sb=G+480|0;qb=G+52|0;ub=G+476|0;nb=G+228|0;ma=G+484|0;la=G+72|0;s=G+76|0;m=G+534|0;pb=G+492|0;X=G+248|0;lb=G+232|0;ob=G+176|0;n=G+140|0;c[ub>>2]=d;c[nb>>2]=e;e=c[ub>>2]|0;c[la>>2]=jf(e,ma,c[nb>>2]|0)|0;c[s>>2]=c[c[la>>2]>>2];a[m>>0]=0;d=c[c[la>>2]>>2]|0;c[tb>>2]=qb;c[sb>>2]=-1;sb=c[sb>>2]|0;c[rb>>2]=c[tb>>2];c[G+276>>2]=sb;c[c[rb>>2]>>2]=0;c[pb>>2]=c[qb>>2];c[G+448>>2]=pb;if((d|0)!=0){ub=c[s>>2]|0;c[r>>2]=n;c[q>>2]=ub;ub=c[r>>2]|0;sb=c[q>>2]|0;c[p>>2]=ub;c[o>>2]=sb;sb=c[p>>2]|0;ub=c[o>>2]|0;c[sb>>2]=ub;c[l>>2]=b;c[j>>2]=n;c[k>>2]=m;sb=c[l>>2]|0;ub=c[k>>2]|0;tb=c[j>>2]|0;c[h>>2]=sb;c[g>>2]=tb;c[H>>2]=ub;ub=c[h>>2]|0;tb=c[g>>2]|0;c[ub+0>>2]=c[tb+0>>2];ub=ub+4|0;tb=c[H>>2]|0;tb=a[tb>>0]|0;tb=tb&1;tb=tb&1;a[ub>>0]=tb;i=G;return}kf(ob,e,c[nb>>2]|0);c[mb>>2]=ob;tb=c[mb>>2]|0;c[Ca>>2]=lb;c[Za>>2]=tb;tb=c[Za>>2]|0;c[Da>>2]=c[Ca>>2];c[Ea>>2]=tb;c[c[Da>>2]>>2]=c[Ea>>2];a[Fa+0>>0]=a[lb+0>>0]|0;a[Fa+1>>0]=a[lb+1>>0]|0;a[Fa+2>>0]=a[lb+2>>0]|0;a[Fa+3>>0]=a[lb+3>>0]|0;c[Ga>>2]=X;tb=c[Ga>>2]|0;a[Ha+0>>0]=a[Fa+0>>0]|0;a[Ha+1>>0]=a[Fa+1>>0]|0;a[Ha+2>>0]=a[Fa+2>>0]|0;a[Ha+3>>0]=a[Fa+3>>0]|0;c[Ia>>2]=tb;tb=c[Ia>>2]|0;c[Ja>>2]=Ha;c[Ka>>2]=c[c[Ja>>2]>>2];ub=c[Ka>>2]|0;c[La>>2]=ub;c[Ma>>2]=c[La>>2];c[Na>>2]=c[c[Ma>>2]>>2];c[Oa>>2]=ub;c[Pa>>2]=c[Oa>>2];c[c[Pa>>2]>>2]=0;ub=c[Na>>2]|0;c[Qa>>2]=Ha;c[Ra>>2]=c[c[Qa>>2]>>2];c[Sa>>2]=c[Ra>>2];c[Ta>>2]=c[Sa>>2];c[Ua>>2]=(c[Ta>>2]|0)+4;sb=c[Ua>>2]|0;c[Va+0>>2]=c[sb+0>>2];c[Va+4>>2]=c[sb+4>>2];a[Wa+0>>0]=a[Va+0>>0]|0;a[Wa+1>>0]=a[Va+1>>0]|0;a[Wa+2>>0]=a[Va+2>>0]|0;a[Wa+3>>0]=a[Va+3>>0]|0;a[Wa+4>>0]=a[Va+4>>0]|0;a[Wa+5>>0]=a[Va+5>>0]|0;a[Wa+6>>0]=a[Va+6>>0]|0;a[Wa+7>>0]=a[Va+7>>0]|0;c[Xa>>2]=tb;c[Ya>>2]=ub;ub=c[Xa>>2]|0;tb=c[Ya>>2]|0;a[Ba+0>>0]=a[Wa+0>>0]|0;a[Ba+1>>0]=a[Wa+1>>0]|0;a[Ba+2>>0]=a[Wa+2>>0]|0;a[Ba+3>>0]=a[Wa+3>>0]|0;a[Ba+4>>0]=a[Wa+4>>0]|0;a[Ba+5>>0]=a[Wa+5>>0]|0;a[Ba+6>>0]=a[Wa+6>>0]|0;a[Ba+7>>0]=a[Wa+7>>0]|0;c[_a>>2]=ub;c[$a>>2]=tb;tb=c[_a>>2]|0;c[ab>>2]=$a;ub=c[c[ab>>2]>>2]|0;c[bb>>2]=Ba;Ba=c[bb>>2]|0;c[cb+0>>2]=c[Ba+0>>2];c[cb+4>>2]=c[Ba+4>>2];a[db+0>>0]=a[cb+0>>0]|0;a[db+1>>0]=a[cb+1>>0]|0;a[db+2>>0]=a[cb+2>>0]|0;a[db+3>>0]=a[cb+3>>0]|0;a[db+4>>0]=a[cb+4>>0]|0;a[db+5>>0]=a[cb+5>>0]|0;a[db+6>>0]=a[cb+6>>0]|0;a[db+7>>0]=a[cb+7>>0]|0;c[eb>>2]=tb;c[fb>>2]=ub;Ba=c[eb>>2]|0;c[gb>>2]=fb;c[Ba>>2]=c[c[gb>>2]>>2];Ba=Ba+4|0;c[hb>>2]=db;ub=c[hb>>2]|0;c[Ba+0>>2]=c[ub+0>>2];c[Ba+4>>2]=c[ub+4>>2];c[ib>>2]=ob;c[jb>>2]=c[ib>>2];c[kb>>2]=c[jb>>2];c[Aa>>2]=0;Ba=c[kb>>2]|0;c[za>>2]=Ba;c[ya>>2]=c[za>>2];c[ua>>2]=c[c[ya>>2]>>2];ub=c[Aa>>2]|0;c[xa>>2]=Ba;c[wa>>2]=c[xa>>2];c[c[wa>>2]>>2]=ub;if((c[ua>>2]|0)!=0){c[sa>>2]=Ba;c[ta>>2]=c[sa>>2];sa=c[ua>>2]|0;c[va>>2]=(c[ta>>2]|0)+4;c[Z>>2]=sa;sa=c[va>>2]|0;if(a[sa+4>>0]&1){ub=c[sa>>2]|0;c[ea>>2]=(c[Z>>2]|0)+16;tb=c[ea>>2]|0;c[fa>>2]=ub;c[ga>>2]=tb;tb=c[fa>>2]|0;ub=c[ga>>2]|0;a[ia+0>>0]=a[ha+0>>0]|0;c[ja>>2]=tb;c[ka>>2]=ub}if((c[Z>>2]|0)!=0){tb=c[Z>>2]|0;c[_>>2]=c[sa>>2];c[R>>2]=tb;c[aa>>2]=1;tb=c[R>>2]|0;ub=c[aa>>2]|0;c[ba>>2]=c[_>>2];c[ca>>2]=tb;c[da>>2]=ub;Ix(c[ca>>2]|0)}}ub=c[ma>>2]|0;R=c[la>>2]|0;c[U>>2]=X;c[$>>2]=c[U>>2];c[V>>2]=c[$>>2];lf(e,ub,R,c[c[V>>2]>>2]|0);c[W>>2]=X;R=c[W>>2]|0;c[ra>>2]=R;c[Y>>2]=c[ra>>2];c[na>>2]=c[c[Y>>2]>>2];c[oa>>2]=R;c[pa>>2]=c[oa>>2];c[c[pa>>2]>>2]=0;c[s>>2]=c[na>>2];a[m>>0]=1;c[qa>>2]=X;c[S>>2]=c[qa>>2];c[T>>2]=c[S>>2];c[I>>2]=0;R=c[T>>2]|0;c[J>>2]=R;c[K>>2]=c[J>>2];c[O>>2]=c[c[K>>2]>>2];ub=c[I>>2]|0;c[L>>2]=R;c[M>>2]=c[L>>2];c[c[M>>2]>>2]=ub;if((c[O>>2]|0)==0){ub=c[s>>2]|0;c[r>>2]=n;c[q>>2]=ub;ub=c[r>>2]|0;sb=c[q>>2]|0;c[p>>2]=ub;c[o>>2]=sb;sb=c[p>>2]|0;ub=c[o>>2]|0;c[sb>>2]=ub;c[l>>2]=b;c[j>>2]=n;c[k>>2]=m;sb=c[l>>2]|0;ub=c[k>>2]|0;tb=c[j>>2]|0;c[h>>2]=sb;c[g>>2]=tb;c[H>>2]=ub;ub=c[h>>2]|0;tb=c[g>>2]|0;c[ub+0>>2]=c[tb+0>>2];ub=ub+4|0;tb=c[H>>2]|0;tb=a[tb>>0]|0;tb=tb&1;tb=tb&1;a[ub>>0]=tb;i=G;return}c[Q>>2]=R;c[P>>2]=c[Q>>2];I=c[O>>2]|0;c[N>>2]=(c[P>>2]|0)+4;c[t>>2]=I;I=c[N>>2]|0;if(a[I+4>>0]&1){ub=c[I>>2]|0;c[u>>2]=(c[t>>2]|0)+16;tb=c[u>>2]|0;c[v>>2]=ub;c[w>>2]=tb;tb=c[v>>2]|0;ub=c[w>>2]|0;a[y+0>>0]=a[x+0>>0]|0;c[z>>2]=tb;c[A>>2]=ub}if((c[t>>2]|0)==0){ub=c[s>>2]|0;c[r>>2]=n;c[q>>2]=ub;ub=c[r>>2]|0;sb=c[q>>2]|0;c[p>>2]=ub;c[o>>2]=sb;sb=c[p>>2]|0;ub=c[o>>2]|0;c[sb>>2]=ub;c[l>>2]=b;c[j>>2]=n;c[k>>2]=m;sb=c[l>>2]|0;ub=c[k>>2]|0;tb=c[j>>2]|0;c[h>>2]=sb;c[g>>2]=tb;c[H>>2]=ub;ub=c[h>>2]|0;tb=c[g>>2]|0;c[ub+0>>2]=c[tb+0>>2];ub=ub+4|0;tb=c[H>>2]|0;tb=a[tb>>0]|0;tb=tb&1;tb=tb&1;a[ub>>0]=tb;i=G;return}sb=c[t>>2]|0;c[F>>2]=c[I>>2];c[E>>2]=sb;c[D>>2]=1;sb=c[E>>2]|0;ub=c[D>>2]|0;c[C>>2]=c[F>>2];c[B>>2]=sb;c[f>>2]=ub;Ix(c[B>>2]|0);ub=c[s>>2]|0;c[r>>2]=n;c[q>>2]=ub;ub=c[r>>2]|0;sb=c[q>>2]|0;c[p>>2]=ub;c[o>>2]=sb;sb=c[p>>2]|0;ub=c[o>>2]|0;c[sb>>2]=ub;c[l>>2]=b;c[j>>2]=n;c[k>>2]=m;sb=c[l>>2]|0;ub=c[k>>2]|0;tb=c[j>>2]|0;c[h>>2]=sb;c[g>>2]=tb;c[H>>2]=ub;ub=c[h>>2]|0;tb=c[g>>2]|0;c[ub+0>>2]=c[tb+0>>2];ub=ub+4|0;tb=c[H>>2]|0;tb=a[tb>>0]|0;tb=tb&1;tb=tb&1;a[ub>>0]=tb;i=G;return}function jf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;g=i;i=i+208|0;R=g+188|0;S=g+164|0;T=g+68|0;Q=g+76|0;E=g+12|0;D=g+140|0;C=g+16|0;F=g+20|0;G=g+24|0;H=g+28|0;r=g+32|0;s=g+36|0;p=g+40|0;q=g+136|0;o=g+44|0;u=g+48|0;h=g+52|0;w=g+56|0;v=g+160|0;z=g+168|0;x=g+176|0;B=g+184|0;l=g+192|0;k=g+80|0;J=g+84|0;m=g+88|0;I=g+92|0;A=g+96|0;O=g+100|0;N=g+132|0;M=g+104|0;L=g+108|0;K=g+112|0;U=g+116|0;V=g+120|0;W=g+124|0;X=g+128|0;Y=g+8|0;Z=g+144|0;f=g+148|0;_=g+4|0;e=g+152|0;y=g;n=g+60|0;P=g+156|0;t=g+64|0;j=g+172|0;c[_>>2]=a;c[e>>2]=b;c[y>>2]=d;b=c[_>>2]|0;c[Z>>2]=b;c[Y>>2]=c[Z>>2];c[X>>2]=(c[Y>>2]|0)+4;c[W>>2]=c[X>>2];c[V>>2]=c[W>>2];c[U>>2]=c[V>>2];c[n>>2]=c[c[U>>2]>>2];d=c[n>>2]|0;c[S>>2]=Q;c[T>>2]=-1;a=c[T>>2]|0;c[R>>2]=c[S>>2];c[g+180>>2]=a;c[c[R>>2]>>2]=0;c[P>>2]=c[Q>>2];c[g+72>>2]=P;if((d|0)==0){c[K>>2]=b;c[L>>2]=(c[K>>2]|0)+4;c[M>>2]=c[L>>2];c[N>>2]=c[M>>2];c[O>>2]=c[N>>2];c[c[e>>2]>>2]=c[O>>2];c[f>>2]=c[c[e>>2]>>2];_=c[f>>2]|0;i=g;return _|0}while(1){c[C>>2]=b;c[D>>2]=(c[C>>2]|0)+8;c[E>>2]=c[D>>2];Z=c[y>>2]|0;_=(c[n>>2]|0)+16|0;c[F>>2]=c[E>>2];c[G>>2]=Z;c[H>>2]=_;if((c[c[G>>2]>>2]|0)<(c[c[H>>2]>>2]|0)){_=c[c[n>>2]>>2]|0;c[p>>2]=o;c[q>>2]=-1;K=c[q>>2]|0;c[r>>2]=c[p>>2];c[s>>2]=K;c[c[r>>2]>>2]=0;c[t>>2]=c[o>>2];c[u>>2]=t;K=c[n>>2]|0;if((_|0)==0){h=5;break}c[n>>2]=c[K>>2];continue}c[v>>2]=b;c[w>>2]=(c[v>>2]|0)+8;c[h>>2]=c[w>>2];_=(c[n>>2]|0)+16|0;K=c[y>>2]|0;c[z>>2]=c[h>>2];c[x>>2]=_;c[B>>2]=K;K=c[n>>2]|0;if((c[c[x>>2]>>2]|0)>=(c[c[B>>2]>>2]|0)){h=10;break}_=c[K+4>>2]|0;c[J>>2]=I;c[m>>2]=-1;K=c[m>>2]|0;c[l>>2]=c[J>>2];c[k>>2]=K;c[c[l>>2]>>2]=0;c[j>>2]=c[I>>2];c[A>>2]=j;K=c[n>>2]|0;if((_|0)==0){h=9;break}c[n>>2]=c[K+4>>2]}if((h|0)==5){c[c[e>>2]>>2]=K;c[f>>2]=c[c[e>>2]>>2];_=c[f>>2]|0;i=g;return _|0}else if((h|0)==9){c[c[e>>2]>>2]=K;c[f>>2]=(c[c[e>>2]>>2]|0)+4;_=c[f>>2]|0;i=g;return _|0}else if((h|0)==10){c[c[e>>2]>>2]=K;c[f>>2]=c[e>>2];_=c[f>>2]|0;i=g;return _|0}return 0}



function uk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;d=i;i=i+144|0;A=d+48|0;C=d+92|0;B=d+108|0;z=d+124|0;v=d+12|0;x=d+16|0;w=d+20|0;u=d+24|0;q=d+96|0;s=d+112|0;r=d+120|0;p=d+128|0;f=d+52|0;h=d+60|0;g=d+64|0;k=d+68|0;j=d+72|0;l=d+4|0;m=d;n=d+88|0;D=d+32|0;y=d+36|0;t=d+100|0;o=d+40|0;E=d+116|0;e=d+44|0;c[E>>2]=a;c[e>>2]=b;b=c[E>>2]|0;c[D>>2]=b;a=c[D>>2]|0;c[d+84>>2]=a;c[C>>2]=z;c[B>>2]=-1;B=c[B>>2]|0;c[A>>2]=c[C>>2];c[d+76>>2]=B;c[c[A>>2]>>2]=0;c[y>>2]=c[z>>2];c[d+8>>2]=y;c[a>>2]=0;c[x>>2]=u;c[w>>2]=-1;w=c[w>>2]|0;c[v>>2]=c[x>>2];c[d+80>>2]=w;c[c[v>>2]>>2]=0;c[t>>2]=c[u>>2];c[d+28>>2]=t;c[a+4>>2]=0;c[s>>2]=p;c[r>>2]=-1;r=c[r>>2]|0;c[q>>2]=c[s>>2];c[d+104>>2]=r;c[c[q>>2]>>2]=0;c[o>>2]=c[p>>2];c[d+132>>2]=o;c[m>>2]=a+8;c[n>>2]=0;a=c[n>>2]|0;c[j>>2]=c[m>>2];c[l>>2]=a;j=c[j>>2]|0;c[k>>2]=l;a=c[c[k>>2]>>2]|0;c[h>>2]=j;c[g>>2]=a;a=c[h>>2]|0;c[d+56>>2]=a;c[f>>2]=g;c[a>>2]=c[c[f>>2]>>2];if(!((c[e>>2]|0)>>>0>0)){i=d;return}Ye(b,c[e>>2]|0);Rf(b,c[e>>2]|0);i=d;return}function vk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;d=i;i=i+144|0;A=d+48|0;C=d+92|0;B=d+108|0;z=d+124|0;v=d+12|0;x=d+16|0;w=d+20|0;u=d+24|0;q=d+96|0;s=d+112|0;r=d+120|0;p=d+128|0;f=d+52|0;h=d+60|0;g=d+64|0;k=d+68|0;j=d+72|0;l=d+4|0;m=d;n=d+88|0;D=d+32|0;y=d+36|0;t=d+100|0;o=d+40|0;E=d+116|0;e=d+44|0;c[E>>2]=a;c[e>>2]=b;b=c[E>>2]|0;c[D>>2]=b;a=c[D>>2]|0;c[d+84>>2]=a;c[C>>2]=z;c[B>>2]=-1;B=c[B>>2]|0;c[A>>2]=c[C>>2];c[d+76>>2]=B;c[c[A>>2]>>2]=0;c[y>>2]=c[z>>2];c[d+8>>2]=y;c[a>>2]=0;c[x>>2]=u;c[w>>2]=-1;w=c[w>>2]|0;c[v>>2]=c[x>>2];c[d+80>>2]=w;c[c[v>>2]>>2]=0;c[t>>2]=c[u>>2];c[d+28>>2]=t;c[a+4>>2]=0;c[s>>2]=p;c[r>>2]=-1;r=c[r>>2]|0;c[q>>2]=c[s>>2];c[d+104>>2]=r;c[c[q>>2]>>2]=0;c[o>>2]=c[p>>2];c[d+132>>2]=o;c[m>>2]=a+8;c[n>>2]=0;a=c[n>>2]|0;c[j>>2]=c[m>>2];c[l>>2]=a;j=c[j>>2]|0;c[k>>2]=l;a=c[c[k>>2]>>2]|0;c[h>>2]=j;c[g>>2]=a;a=c[h>>2]|0;c[d+56>>2]=a;c[f>>2]=g;c[a>>2]=c[c[f>>2]>>2];if(!((c[e>>2]|0)>>>0>0)){i=d;return}lh(b,c[e>>2]|0);sh(b,c[e>>2]|0);i=d;return}function wk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;f=i;i=i+192|0;v=f+84|0;I=f+76|0;J=f+4|0;K=f+164|0;G=f+172|0;H=f+72|0;F=f;B=f+132|0;A=f+60|0;E=f+188|0;r=f+40|0;O=f+44|0;N=f+48|0;M=f+12|0;L=f+56|0;u=f+128|0;U=f+104|0;C=f+152|0;y=f+160|0;z=f+168|0;o=f+176|0;T=f+180|0;S=f+184|0;R=f+88|0;Q=f+92|0;j=f+96|0;l=f+100|0;m=f+52|0;g=f+108|0;D=f+112|0;p=f+116|0;q=f+124|0;P=f+120|0;n=f+16|0;k=f+144|0;h=f+8|0;V=f+64|0;W=f+148|0;X=f+68|0;Y=f+156|0;t=f+136|0;s=f+140|0;x=f+80|0;w=f+20|0;c[Y>>2]=b;c[t>>2]=d;c[s>>2]=e;e=c[Y>>2]|0;c[X>>2]=e;c[W>>2]=(c[X>>2]|0)+8;c[V>>2]=c[W>>2];if((((c[c[V>>2]>>2]|0)-(c[e+4>>2]|0)|0)/4|0)>>>0>=(c[t>>2]|0)>>>0){Y=c[t>>2]|0;o=c[s>>2]|0;c[P>>2]=e;c[n>>2]=Y;c[k>>2]=o;o=c[P>>2]|0;c[q>>2]=o;c[p>>2]=(c[q>>2]|0)+8;c[D>>2]=c[p>>2];c[h>>2]=c[D>>2];do{X=c[h>>2]|0;c[j>>2]=c[o+4>>2];Y=c[j>>2]|0;p=c[k>>2]|0;c[l>>2]=X;c[m>>2]=Y;c[g>>2]=p;p=c[m>>2]|0;if((p|0)!=0)c[p>>2]=c[c[g>>2]>>2];Y=o+4|0;c[Y>>2]=(c[Y>>2]|0)+4;c[n>>2]=(c[n>>2]|0)+ -1}while((c[n>>2]|0)>>>0>0);i=f;return}c[Q>>2]=e;c[R>>2]=(c[Q>>2]|0)+8;c[S>>2]=c[R>>2];c[x>>2]=c[S>>2];c[T>>2]=e;g=c[T>>2]|0;g=(((c[g+4>>2]|0)-(c[g>>2]|0)|0)/4|0)+(c[t>>2]|0)|0;c[U>>2]=e;c[C>>2]=g;g=c[U>>2]|0;c[y>>2]=Of(g)|0;if((c[C>>2]|0)>>>0>(c[y>>2]|0)>>>0)Zt(g);c[L>>2]=g;c[M>>2]=c[L>>2];Y=c[M>>2]|0;c[N>>2]=Y;c[O>>2]=(c[N>>2]|0)+8;c[r>>2]=c[O>>2];c[z>>2]=((c[c[r>>2]>>2]|0)-(c[Y>>2]|0)|0)/4|0;if((c[z>>2]|0)>>>0>=(((c[y>>2]|0)>>>0)/2|0)>>>0)c[u>>2]=c[y>>2];else{c[o>>2]=c[z>>2]<<1;c[B>>2]=o;c[A>>2]=C;Y=c[B>>2]|0;X=c[A>>2]|0;a[F+0>>0]=a[E+0>>0]|0;c[G>>2]=Y;c[H>>2]=X;X=c[G>>2]|0;Y=c[H>>2]|0;c[I>>2]=F;c[J>>2]=X;c[K>>2]=Y;c[u>>2]=c[((c[c[J>>2]>>2]|0)>>>0<(c[c[K>>2]>>2]|0)>>>0?c[H>>2]|0:c[G>>2]|0)>>2]}X=c[u>>2]|0;c[v>>2]=e;Y=c[v>>2]|0;Jf(w,X,((c[Y+4>>2]|0)-(c[Y>>2]|0)|0)/4|0,c[x>>2]|0);xk(w,c[t>>2]|0,c[s>>2]|0);Lf(e,w);Mf(w);i=f;return}function xk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;k=i;i=i+48|0;j=k+36|0;l=k+16|0;m=k;g=k+28|0;n=k+32|0;o=k+40|0;p=k+12|0;q=k+24|0;f=k+20|0;e=k+8|0;h=k+4|0;c[q>>2]=a;c[f>>2]=b;c[e>>2]=d;b=c[q>>2]|0;c[p>>2]=b;c[o>>2]=(c[p>>2]|0)+12;c[n>>2]=c[o>>2];c[h>>2]=c[(c[n>>2]|0)+4>>2];do{p=c[h>>2]|0;c[j>>2]=c[b+8>>2];q=c[j>>2]|0;d=c[e>>2]|0;c[l>>2]=p;c[m>>2]=q;c[g>>2]=d;d=c[m>>2]|0;if((d|0)!=0)c[d>>2]=c[c[g>>2]>>2];q=b+8|0;c[q>>2]=(c[q>>2]|0)+4;c[f>>2]=(c[f>>2]|0)+ -1}while((c[f>>2]|0)>>>0>0);i=k;return}function yk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0;f=i;i=i+288|0;g=f+132|0;D=f+140|0;C=f+116|0;E=f+24|0;K=f+232|0;j=f+64|0;M=f+272|0;I=f+188|0;H=f+112|0;G=f+60|0;T=f+56|0;F=f+40|0;R=f+44|0;S=f+48|0;Y=f+52|0;Z=f+204|0;N=f+120|0;$=f+108|0;aa=f+96|0;ba=f+68|0;X=f+72|0;U=f+76|0;V=f+80|0;W=f+84|0;ia=f+88|0;ja=f+92|0;ha=f;ea=f+228|0;fa=f+236|0;ga=f+274|0;da=f+252|0;u=f+260|0;v=f+264|0;w=f+124|0;s=f+128|0;t=f+268|0;r=f+8|0;n=f+136|0;p=f+256|0;q=f+275|0;B=f+148|0;A=f+152|0;z=f+156|0;y=f+160|0;x=f+164|0;L=f+168|0;P=f+172|0;o=f+176|0;k=f+180|0;l=f+184|0;m=f+240|0;ka=f+192|0;la=f+196|0;ma=f+32|0;na=f+220|0;oa=f+28|0;pa=f+100|0;qa=f+224|0;ra=f+104|0;sa=f+16|0;va=f+216|0;ua=f+212|0;ta=f+276|0;wa=f+36|0;J=f+200|0;h=f+208|0;_=f+144|0;O=f+244|0;ca=f+273|0;Q=f+248|0;c[wa>>2]=b;c[J>>2]=d;c[h>>2]=e;e=c[wa>>2]|0;b=c[h>>2]|0;c[va>>2]=c[J>>2];c[ua>>2]=b;b=c[va>>2]|0;d=c[ua>>2]|0;a[sa+0>>0]=a[ta+0>>0]|0;c[qa>>2]=b;c[ra>>2]=d;c[_>>2]=((c[ra>>2]|0)-(c[qa>>2]|0)|0)/32|0;d=c[_>>2]|0;c[pa>>2]=e;c[oa>>2]=c[pa>>2];b=c[oa>>2]|0;c[na>>2]=b;c[ma>>2]=(c[na>>2]|0)+8;c[la>>2]=c[ma>>2];if(!(d>>>0<=(((c[c[la>>2]>>2]|0)-(c[b>>2]|0)|0)/32|0)>>>0)){zk(e);g=c[_>>2]|0;c[P>>2]=e;c[o>>2]=g;g=c[P>>2]|0;c[k>>2]=xd(g)|0;if((c[o>>2]|0)>>>0>(c[k>>2]|0)>>>0)Zt(g);c[x>>2]=g;c[y>>2]=c[x>>2];wa=c[y>>2]|0;c[z>>2]=wa;c[A>>2]=(c[z>>2]|0)+8;c[B>>2]=c[A>>2];c[l>>2]=((c[c[B>>2]>>2]|0)-(c[wa>>2]|0)|0)/32|0;if((c[l>>2]|0)>>>0>=(((c[k>>2]|0)>>>0)/2|0)>>>0)c[L>>2]=c[k>>2];else{c[m>>2]=c[l>>2]<<1;c[n>>2]=m;c[p>>2]=o;wa=c[n>>2]|0;va=c[p>>2]|0;a[r+0>>0]=a[q+0>>0]|0;c[s>>2]=wa;c[t>>2]=va;va=c[s>>2]|0;wa=c[t>>2]|0;c[u>>2]=r;c[v>>2]=va;c[w>>2]=wa;c[L>>2]=c[((c[c[v>>2]>>2]|0)>>>0<(c[c[w>>2]>>2]|0)>>>0?c[t>>2]|0:c[s>>2]|0)>>2]}fe(e,c[L>>2]|0);ge(e,c[J>>2]|0,c[h>>2]|0);i=f;return}c[O>>2]=c[h>>2];a[ca>>0]=0;va=c[_>>2]|0;c[ka>>2]=e;wa=c[ka>>2]|0;if(va>>>0>(((c[wa+4>>2]|0)-(c[wa>>2]|0)|0)/32|0)>>>0){a[ca>>0]=1;c[O>>2]=c[J>>2];c[da>>2]=e;va=c[da>>2]|0;va=((c[va+4>>2]|0)-(c[va>>2]|0)|0)/32|0;c[ea>>2]=O;c[fa>>2]=va;va=c[ea>>2]|0;wa=c[fa>>2]|0;a[ha+0>>0]=a[ga+0>>0]|0;c[ia>>2]=va;c[ja>>2]=wa;wa=c[ia>>2]|0;c[wa>>2]=(c[wa>>2]|0)+(c[ja>>2]<<5)}va=c[O>>2]|0;ua=c[e>>2]|0;c[U>>2]=c[J>>2];c[V>>2]=va;c[W>>2]=ua;c[X>>2]=c[U>>2];ua=c[X>>2]|0;c[Y>>2]=c[V>>2];va=c[Y>>2]|0;c[Z>>2]=c[W>>2];wa=c[Z>>2]|0;c[N>>2]=ua;c[$>>2]=va;c[aa>>2]=wa;c[ba>>2]=((c[$>>2]|0)-(c[N>>2]|0)|0)/32|0;sz(c[aa>>2]|0,c[N>>2]|0,c[ba>>2]<<5|0)|0;c[Q>>2]=(c[aa>>2]|0)+(c[ba>>2]<<5);if(a[ca>>0]&1){ge(e,c[O>>2]|0,c[h>>2]|0);i=f;return}h=c[Q>>2]|0;c[R>>2]=e;c[S>>2]=h;h=c[S>>2]|0;c[T>>2]=c[R>>2];c[F>>2]=h;h=c[T>>2]|0;while(1){if((c[F>>2]|0)==(c[h+4>>2]|0))break;c[G>>2]=h;c[H>>2]=(c[G>>2]|0)+8;c[I>>2]=c[H>>2];wa=c[I>>2]|0;ua=h+4|0;va=(c[ua>>2]|0)+ -32|0;c[ua>>2]=va;c[g>>2]=va;va=c[g>>2]|0;c[K>>2]=wa;c[j>>2]=va;va=c[K>>2]|0;wa=c[j>>2]|0;a[E+0>>0]=a[M+0>>0]|0;c[D>>2]=va;c[C>>2]=wa}i=f;return}function zk(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;d=i;i=i+192|0;z=d+72|0;I=d+164|0;N=d+156|0;O=d+64|0;M=d;J=d+60|0;K=d+12|0;L=d+184|0;H=d+44|0;G=d+20|0;F=d+24|0;Q=d+28|0;E=d+32|0;P=d+36|0;R=d+40|0;h=d+124|0;g=d+68|0;f=d+48|0;n=d+144|0;m=d+152|0;l=d+160|0;k=d+168|0;j=d+176|0;r=d+76|0;s=d+80|0;t=d+84|0;o=d+88|0;p=d+92|0;q=d+96|0;x=d+100|0;y=d+120|0;v=d+104|0;w=d+108|0;u=d+112|0;A=d+116|0;D=d+8|0;C=d+16|0;B=d+140|0;V=d+52|0;X=d+132|0;W=d+56|0;U=d+148|0;S=d+4|0;T=d+172|0;e=d+128|0;c[S>>2]=b;b=c[S>>2]|0;S=c[b>>2]|0;c[X>>2]=U;c[W>>2]=-1;W=c[W>>2]|0;c[V>>2]=c[X>>2];c[d+136>>2]=W;c[c[V>>2]>>2]=0;c[T>>2]=c[U>>2];c[d+180>>2]=T;if((S|0)==0){i=d;return}c[R>>2]=b;R=c[R>>2]|0;c[P>>2]=R;X=c[P>>2]|0;P=c[X>>2]|0;c[Q>>2]=X;c[E>>2]=P;P=c[Q>>2]|0;while(1){if((c[E>>2]|0)==(c[P+4>>2]|0))break;c[F>>2]=P;c[G>>2]=(c[F>>2]|0)+8;c[H>>2]=c[G>>2];X=c[H>>2]|0;V=P+4|0;W=(c[V>>2]|0)+ -32|0;c[V>>2]=W;c[I>>2]=W;W=c[I>>2]|0;c[J>>2]=X;c[K>>2]=W;W=c[J>>2]|0;X=c[K>>2]|0;a[M+0>>0]=a[L+0>>0]|0;c[N>>2]=W;c[O>>2]=X}c[z>>2]=R;c[f>>2]=b;c[g>>2]=(c[f>>2]|0)+8;c[h>>2]=c[g>>2];V=c[h>>2]|0;X=c[b>>2]|0;c[j>>2]=b;c[k>>2]=c[j>>2];W=c[k>>2]|0;c[l>>2]=W;c[m>>2]=(c[l>>2]|0)+8;c[n>>2]=c[m>>2];W=((c[c[n>>2]>>2]|0)-(c[W>>2]|0)|0)/32|0;c[o>>2]=V;c[p>>2]=X;c[q>>2]=W;W=c[p>>2]|0;X=c[q>>2]|0;c[r>>2]=c[o>>2];c[s>>2]=W;c[t>>2]=X;Ix(c[s>>2]|0);c[v>>2]=u;c[w>>2]=-1;X=c[w>>2]|0;c[x>>2]=c[v>>2];c[y>>2]=X;c[c[x>>2]>>2]=0;c[e>>2]=c[u>>2];c[A>>2]=e;c[B>>2]=b;c[C>>2]=(c[B>>2]|0)+8;c[D>>2]=c[C>>2];c[c[D>>2]>>2]=0;c[b+4>>2]=0;c[b>>2]=0;i=d;return}function Ak(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;p=i;i=i+64|0;j=p+52|0;m=p;n=p+44|0;o=p+48|0;r=p+56|0;l=p+16|0;h=p+40|0;q=p+36|0;s=p+8|0;k=p+4|0;c[j>>2]=a;c[p+32>>2]=b;c[m>>2]=e;c[n>>2]=f;c[o>>2]=g;c[r>>2]=c[j>>2];c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[(c[j>>2]|0)+80>>2]|0))break;c[l+(c[h>>2]<<2)>>2]=c[(c[j>>2]|0)+84+(c[h>>2]<<2)>>2];c[h>>2]=(c[h>>2]|0)+1}c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[(c[j>>2]|0)+80>>2]|0))break;c[q>>2]=(c[h>>2]|0)+1;while(1){if((c[q>>2]|0)>=(c[(c[j>>2]|0)+80>>2]|0))break;if((d[(c[r>>2]|0)+(c[l+(c[q>>2]<<2)>>2]|0)>>0]|0|0)<(d[(c[r>>2]|0)+(c[l+(c[h>>2]<<2)>>2]|0)>>0]|0|0)){c[s>>2]=c[l+(c[h>>2]<<2)>>2];c[l+(c[h>>2]<<2)>>2]=c[l+(c[q>>2]<<2)>>2];c[l+(c[q>>2]<<2)>>2]=c[s>>2]}c[q>>2]=(c[q>>2]|0)+1}c[h>>2]=(c[h>>2]|0)+1}hi(2,1,0,c[n>>2]|0,c[o>>2]|0);a=(c[(c[j>>2]|0)+80>>2]|0)-1|0;hi(2,a,((a|0)<0)<<31>>31,c[n>>2]|0,c[o>>2]|0);c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[(c[j>>2]|0)+80>>2]|0))break;a=c[l+(c[k>>2]<<2)>>2]|0;hi(c[m>>2]|0,a,((a|0)<0)<<31>>31,c[n>>2]|0,c[o>>2]|0);c[k>>2]=(c[k>>2]|0)+1}if((c[(c[j>>2]|0)+80>>2]|0)!=4){i=p;return}if((((d[(c[r>>2]|0)+(c[l>>2]|0)>>0]|0|0)==2?(d[(c[r>>2]|0)+(c[l+4>>2]|0)>>0]|0|0)==2:0)?(d[(c[r>>2]|0)+(c[l+8>>2]|0)>>0]|0|0)==2:0)?(d[(c[r>>2]|0)+(c[l+12>>2]|0)>>0]|0|0)==2:0){hi(1,0,0,c[n>>2]|0,c[o>>2]|0);i=p;return}hi(1,1,0,c[n>>2]|0,c[o>>2]|0);i=p;return}function Bk(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;p=i;i=i+256|0;s=p+188|0;q=p+164|0;m=p+176|0;g=p+172|0;r=p+180|0;l=p+192|0;o=p+218|0;h=p+184|0;k=p;n=p+168|0;j=p+88|0;c[s>>2]=a;c[q>>2]=b;c[m>>2]=e;c[g>>2]=f;c[r>>2]=c[s>>2];c[h>>2]=0;Ul(c[r>>2]|0,c[q>>2]|0,l,o,h);Dj(k);e=k+0|0;f=e+72|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));c[n>>2]=0;while(1){if((c[n>>2]|0)>=(c[h>>2]|0))break;Ej(k,d[l+(c[n>>2]|0)>>0]|0);c[n>>2]=(c[n>>2]|0)+1}e=j+0|0;f=e+76|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));Fj(k,5,18,j);li(j,c[m>>2]|0,c[g>>2]|0);mi(l,o,c[h>>2]|0,j,c[m>>2]|0,c[g>>2]|0);i=p;return}function Ck(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;p=i;i=i+64|0;j=p+52|0;m=p;n=p+44|0;o=p+48|0;r=p+56|0;l=p+16|0;h=p+40|0;q=p+36|0;s=p+8|0;k=p+4|0;c[j>>2]=a;c[p+32>>2]=b;c[m>>2]=e;c[n>>2]=f;c[o>>2]=g;c[r>>2]=c[j>>2];c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[(c[j>>2]|0)+776>>2]|0))break;c[l+(c[h>>2]<<2)>>2]=c[(c[j>>2]|0)+780+(c[h>>2]<<2)>>2];c[h>>2]=(c[h>>2]|0)+1}c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[(c[j>>2]|0)+776>>2]|0))break;c[q>>2]=(c[h>>2]|0)+1;while(1){if((c[q>>2]|0)>=(c[(c[j>>2]|0)+776>>2]|0))break;if((d[(c[r>>2]|0)+(c[l+(c[q>>2]<<2)>>2]|0)>>0]|0|0)<(d[(c[r>>2]|0)+(c[l+(c[h>>2]<<2)>>2]|0)>>0]|0|0)){c[s>>2]=c[l+(c[h>>2]<<2)>>2];c[l+(c[h>>2]<<2)>>2]=c[l+(c[q>>2]<<2)>>2];c[l+(c[q>>2]<<2)>>2]=c[s>>2]}c[q>>2]=(c[q>>2]|0)+1}c[h>>2]=(c[h>>2]|0)+1}hi(2,1,0,c[n>>2]|0,c[o>>2]|0);a=(c[(c[j>>2]|0)+776>>2]|0)-1|0;hi(2,a,((a|0)<0)<<31>>31,c[n>>2]|0,c[o>>2]|0);c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[(c[j>>2]|0)+776>>2]|0))break;a=c[l+(c[k>>2]<<2)>>2]|0;hi(c[m>>2]|0,a,((a|0)<0)<<31>>31,c[n>>2]|0,c[o>>2]|0);c[k>>2]=(c[k>>2]|0)+1}if((c[(c[j>>2]|0)+776>>2]|0)!=4){i=p;return}if((((d[(c[r>>2]|0)+(c[l>>2]|0)>>0]|0|0)==2?(d[(c[r>>2]|0)+(c[l+4>>2]|0)>>0]|0|0)==2:0)?(d[(c[r>>2]|0)+(c[l+8>>2]|0)>>0]|0|0)==2:0)?(d[(c[r>>2]|0)+(c[l+12>>2]|0)>>0]|0|0)==2:0){hi(1,0,0,c[n>>2]|0,c[o>>2]|0);i=p;return}hi(1,1,0,c[n>>2]|0,c[o>>2]|0);i=p;return}function Dk(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;p=i;i=i+720|0;s=p+188|0;q=p+164|0;m=p+176|0;g=p+172|0;r=p+180|0;l=p+192|0;o=p+450|0;h=p+184|0;k=p;n=p+168|0;j=p+88|0;c[s>>2]=a;c[q>>2]=b;c[m>>2]=e;c[g>>2]=f;c[r>>2]=c[s>>2];c[h>>2]=0;Ul(c[r>>2]|0,c[q>>2]|0,l,o,h);Dj(k);e=k+0|0;f=e+72|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));c[n>>2]=0;while(1){if((c[n>>2]|0)>=(c[h>>2]|0))break;Ej(k,d[l+(c[n>>2]|0)>>0]|0);c[n>>2]=(c[n>>2]|0)+1}e=j+0|0;f=e+76|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));Fj(k,5,18,j);li(j,c[m>>2]|0,c[g>>2]|0);mi(l,o,c[h>>2]|0,j,c[m>>2]|0,c[g>>2]|0);i=p;return}function Ek(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Fk(c[d>>2]|0);i=b;return}function Fk(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b;c[d>>2]=a;d=c[d>>2]|0;e=d+0|0;a=e+104|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(a|0));c[d+104>>2]=0;i=b;return}function Gk(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Hk(c[d>>2]|0);i=b;return}function Hk(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;lz(a|0,0,1032)|0;c[a+1032>>2]=0;i=b;return}function Ik(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;p=i;i=i+64|0;j=p+52|0;m=p;n=p+44|0;o=p+48|0;r=p+56|0;l=p+16|0;h=p+40|0;q=p+36|0;s=p+8|0;k=p+4|0;c[j>>2]=a;c[p+32>>2]=b;c[m>>2]=e;c[n>>2]=f;c[o>>2]=g;c[r>>2]=c[j>>2];c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[(c[j>>2]|0)+816>>2]|0))break;c[l+(c[h>>2]<<2)>>2]=c[(c[j>>2]|0)+820+(c[h>>2]<<2)>>2];c[h>>2]=(c[h>>2]|0)+1}c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[(c[j>>2]|0)+816>>2]|0))break;c[q>>2]=(c[h>>2]|0)+1;while(1){if((c[q>>2]|0)>=(c[(c[j>>2]|0)+816>>2]|0))break;if((d[(c[r>>2]|0)+(c[l+(c[q>>2]<<2)>>2]|0)>>0]|0|0)<(d[(c[r>>2]|0)+(c[l+(c[h>>2]<<2)>>2]|0)>>0]|0|0)){c[s>>2]=c[l+(c[h>>2]<<2)>>2];c[l+(c[h>>2]<<2)>>2]=c[l+(c[q>>2]<<2)>>2];c[l+(c[q>>2]<<2)>>2]=c[s>>2]}c[q>>2]=(c[q>>2]|0)+1}c[h>>2]=(c[h>>2]|0)+1}hi(2,1,0,c[n>>2]|0,c[o>>2]|0);a=(c[(c[j>>2]|0)+816>>2]|0)-1|0;hi(2,a,((a|0)<0)<<31>>31,c[n>>2]|0,c[o>>2]|0);c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[(c[j>>2]|0)+816>>2]|0))break;a=c[l+(c[k>>2]<<2)>>2]|0;hi(c[m>>2]|0,a,((a|0)<0)<<31>>31,c[n>>2]|0,c[o>>2]|0);c[k>>2]=(c[k>>2]|0)+1}if((c[(c[j>>2]|0)+816>>2]|0)!=4){i=p;return}if((((d[(c[r>>2]|0)+(c[l>>2]|0)>>0]|0|0)==2?(d[(c[r>>2]|0)+(c[l+4>>2]|0)>>0]|0|0)==2:0)?(d[(c[r>>2]|0)+(c[l+8>>2]|0)>>0]|0|0)==2:0)?(d[(c[r>>2]|0)+(c[l+12>>2]|0)>>0]|0|0)==2:0){hi(1,0,0,c[n>>2]|0,c[o>>2]|0);i=p;return}hi(1,1,0,c[n>>2]|0,c[o>>2]|0);i=p;return}function Jk(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;p=i;i=i+736|0;s=p+188|0;q=p+164|0;m=p+176|0;g=p+172|0;r=p+180|0;l=p+192|0;o=p+464|0;h=p+184|0;k=p;n=p+168|0;j=p+88|0;c[s>>2]=a;c[q>>2]=b;c[m>>2]=e;c[g>>2]=f;c[r>>2]=c[s>>2];c[h>>2]=0;Ul(c[r>>2]|0,c[q>>2]|0,l,o,h);Dj(k);e=k+0|0;f=e+72|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));c[n>>2]=0;while(1){if((c[n>>2]|0)>=(c[h>>2]|0))break;Ej(k,d[l+(c[n>>2]|0)>>0]|0);c[n>>2]=(c[n>>2]|0)+1}e=j+0|0;f=e+76|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));Fj(k,5,18,j);li(j,c[m>>2]|0,c[g>>2]|0);mi(l,o,c[h>>2]|0,j,c[m>>2]|0,c[g>>2]|0);i=p;return}function Kk(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Lk(c[d>>2]|0);i=b;return}function Lk(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;lz(a|0,0,1088)|0;c[a+1088>>2]=0;i=b;return}function Mk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;e=i;i=i+208|0;h=e+96|0;P=e+80|0;Q=e+76|0;S=e+176|0;R=e+184|0;O=e+36|0;M=e+156|0;I=e+144|0;J=e+92|0;L=e+60|0;K=e+56|0;H=e+40|0;F=e+44|0;B=e+48|0;C=e+52|0;E=e+140|0;D=e+116|0;A=e+88|0;y=e+72|0;q=e+164|0;j=e+172|0;l=e+180|0;n=e+188|0;k=e+192|0;m=e+16|0;s=e+196|0;o=e+100|0;t=e+104|0;p=e+200|0;r=e+8|0;u=e+112|0;w=e+136|0;v=e+24|0;T=e+120|0;U=e+124|0;V=e+128|0;N=e+132|0;G=e+32|0;z=e+64|0;x=e+202|0;X=e+148|0;Y=e;_=e+160|0;Z=e+203|0;$=e+152|0;aa=e+28|0;ba=e+84|0;ca=e+68|0;g=e+168|0;W=e+201|0;f=e+108|0;c[ca>>2]=b;c[g>>2]=d;d=c[ca>>2]|0;c[ba>>2]=c[g>>2];c[aa>>2]=(c[ba>>2]|0)+8;c[$>>2]=c[aa>>2];c[_>>2]=c[$>>2];b=c[_>>2]|0;a[Y+0>>0]=a[Z+0>>0]|0;c[X>>2]=b;c[U>>2]=d;c[V>>2]=W;b=c[U>>2]|0;c[T>>2]=b;c[S>>2]=O;c[R>>2]=-1;R=c[R>>2]|0;c[P>>2]=c[S>>2];c[Q>>2]=R;c[c[P>>2]>>2]=0;c[N>>2]=c[O>>2];c[M>>2]=N;c[b>>2]=0;c[L>>2]=H;c[K>>2]=-1;K=c[K>>2]|0;c[I>>2]=c[L>>2];c[J>>2]=K;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[F>>2]=G;c[b+4>>2]=0;b=b+8|0;c[E>>2]=A;c[D>>2]=-1;D=c[D>>2]|0;c[B>>2]=c[E>>2];c[C>>2]=D;c[c[B>>2]>>2]=0;c[z>>2]=c[A>>2];c[y>>2]=z;a[v+0>>0]=a[x+0>>0]|0;c[u>>2]=b;c[w>>2]=0;u=c[u>>2]|0;b=c[w>>2]|0;a[r+0>>0]=a[v+0>>0]|0;c[o>>2]=u;c[t>>2]=b;o=c[o>>2]|0;c[s>>2]=t;b=c[c[s>>2]>>2]|0;c[q>>2]=r;a[m+0>>0]=a[p+0>>0]|0;c[n>>2]=o;c[k>>2]=b;b=c[n>>2]|0;c[l>>2]=m;c[j>>2]=k;c[b>>2]=c[c[j>>2]>>2];c[h>>2]=c[g>>2];b=c[h>>2]|0;c[f>>2]=((c[b+4>>2]|0)-(c[b>>2]|0)|0)/4|0;if(!((c[f>>2]|0)>>>0>0)){i=e;return}Zf(d,c[f>>2]|0);Nk(d,c[c[g>>2]>>2]|0,c[(c[g>>2]|0)+4>>2]|0);i=e;return}function Nk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;k=i;i=i+48|0;g=k+36|0;j=k+16|0;e=k;l=k+28|0;n=k+32|0;o=k+40|0;p=k+12|0;q=k+24|0;h=k+20|0;m=k+8|0;f=k+4|0;c[q>>2]=a;c[h>>2]=b;c[m>>2]=d;d=c[q>>2]|0;c[p>>2]=d;c[o>>2]=(c[p>>2]|0)+8;c[n>>2]=c[o>>2];c[f>>2]=c[n>>2];while(1){if((c[h>>2]|0)==(c[m>>2]|0))break;p=c[f>>2]|0;c[g>>2]=c[d+4>>2];q=c[g>>2]|0;b=c[h>>2]|0;c[j>>2]=p;c[e>>2]=q;c[l>>2]=b;b=c[e>>2]|0;if((b|0)!=0)c[b>>2]=c[c[l>>2]>>2];q=d+4|0;c[q>>2]=(c[q>>2]|0)+4;c[h>>2]=(c[h>>2]|0)+4}i=k;return}function Ok(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;oe(a+204|0);og(a+192|0);Zg(a+180|0);we(a+168|0);we(a+156|0);we(a+144|0);Pk(a+104|0);Pk(a+64|0);Pk(a+24|0);ee(a);i=b;return}function Pk(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Qk(c[d>>2]|0);i=b;return}function Qk(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;we(a+28|0);we(a+16|0);ce(a+4|0);i=b;return}function Rk(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0;b=i;i=i+960|0;y=b+948|0;A=b+932|0;z=b+924|0;x=b+916|0;t=b+432|0;v=b+440|0;u=b+444|0;s=b+448|0;o=b+32|0;q=b+40|0;p=b+880|0;n=b+44|0;d=b+52|0;f=b+60|0;e=b+64|0;h=b+68|0;g=b+72|0;j=b+76|0;k=b+80|0;l=b+84|0;B=b+92|0;w=b+96|0;r=b+100|0;m=b+876|0;C=b+104|0;D=b+108|0;Z=b+112|0;$=b+120|0;_=b+124|0;Y=b+128|0;U=b+136|0;W=b+144|0;V=b+148|0;T=b+152|0;P=b+160|0;R=b+168|0;Q=b+172|0;O=b+176|0;F=b+184|0;E=b+192|0;G=b+196|0;H=b+200|0;I=b+204|0;J=b+208|0;L=b+212|0;K=b+216|0;M=b+224|0;X=b+872|0;S=b+228|0;N=b+232|0;aa=b+236|0;ba=b+240|0;xa=b+244|0;za=b+252|0;ya=b+256|0;wa=b+260|0;sa=b+268|0;ua=b+276|0;ta=b+280|0;ra=b+284|0;na=b+292|0;pa=b+300|0;oa=b+304|0;ma=b+308|0;da=b+316|0;ca=b+324|0;ea=b+328|0;fa=b+332|0;ga=b+336|0;ha=b+340|0;ja=b+344|0;ia=b+348|0;ka=b+356|0;va=b+360|0;qa=b+364|0;la=b+368|0;Aa=b+372|0;Ba=b+376|0;Xa=b+380|0;Za=b+388|0;Ya=b+392|0;Wa=b+396|0;Sa=b+404|0;Ua=b+412|0;Ta=b+416|0;Ra=b+420|0;Na=b+912|0;Pa=b+928|0;Oa=b+936|0;Ma=b+944|0;Da=b+452|0;Ca=b+460|0;Ea=b+464|0;Fa=b+468|0;Ga=b+472|0;Ha=b+476|0;Ja=b+868|0;Ia=b+480|0;Ka=b+488|0;Va=b+492|0;Qa=b+496|0;La=b+500|0;_a=b+504|0;$a=b+508|0;vb=b+512|0;xb=b+520|0;wb=b+524|0;ub=b+528|0;qb=b+536|0;sb=b+544|0;rb=b+548|0;pb=b+552|0;lb=b+560|0;nb=b+568|0;mb=b+572|0;kb=b+576|0;bb=b+584|0;ab=b+592|0;cb=b+596|0;db=b+600|0;eb=b+604|0;fb=b+608|0;hb=b+612|0;gb=b+616|0;ib=b+624|0;tb=b+628|0;ob=b+632|0;jb=b+636|0;yb=b+640|0;zb=b+644|0;Vb=b+648|0;Xb=b+656|0;Wb=b+660|0;Ub=b+664|0;Qb=b+672|0;Sb=b+680|0;Rb=b+684|0;Pb=b+688|0;Lb=b+696|0;Nb=b+704|0;Mb=b+708|0;Kb=b+712|0;Bb=b+720|0;Ab=b+728|0;Cb=b+732|0;Db=b+736|0;Eb=b+740|0;Fb=b+744|0;Hb=b+748|0;Gb=b+752|0;Ib=b+760|0;Tb=b+764|0;Ob=b+768|0;Jb=b+772|0;Yb=b+776|0;Zb=b+780|0;tc=b+784|0;vc=b+792|0;uc=b+796|0;sc=b+800|0;oc=b+808|0;qc=b+816|0;pc=b+820|0;nc=b+824|0;jc=b+832|0;lc=b+840|0;kc=b+844|0;ic=b+848|0;$b=b+856|0;_b=b+864|0;ac=b+28|0;bc=b+16|0;cc=b;dc=b+884|0;fc=b+888|0;ec=b+20|0;gc=b+12|0;rc=b+4|0;mc=b+24|0;hc=b+896|0;wc=b+8|0;xc=b+424|0;yc=b+900|0;c[yc>>2]=a;a=c[yc>>2]|0;c[xc>>2]=a;c[wc>>2]=c[xc>>2];c[gc>>2]=c[wc>>2];gc=c[gc>>2]|0;c[b+892>>2]=gc;c[vc>>2]=sc;c[uc>>2]=-1;uc=c[uc>>2]|0;c[tc>>2]=c[vc>>2];c[b+788>>2]=uc;c[c[tc>>2]>>2]=0;c[rc>>2]=c[sc>>2];c[b+804>>2]=rc;c[gc>>2]=0;c[qc>>2]=nc;c[pc>>2]=-1;pc=c[pc>>2]|0;c[oc>>2]=c[qc>>2];c[b+812>>2]=pc;c[c[oc>>2]>>2]=0;c[mc>>2]=c[nc>>2];c[b+828>>2]=mc;c[gc+4>>2]=0;c[lc>>2]=ic;c[kc>>2]=-1;kc=c[kc>>2]|0;c[jc>>2]=c[lc>>2];c[b+836>>2]=kc;c[c[jc>>2]>>2]=0;c[hc>>2]=c[ic>>2];c[b+852>>2]=hc;c[fc>>2]=gc+8;c[ec>>2]=0;ec=c[ec>>2]|0;c[cc>>2]=c[fc>>2];c[dc>>2]=ec;cc=c[cc>>2]|0;c[bc>>2]=dc;bc=c[c[bc>>2]>>2]|0;c[_b>>2]=cc;c[ac>>2]=bc;_b=c[_b>>2]|0;c[b+860>>2]=_b;c[$b>>2]=ac;c[_b>>2]=c[c[$b>>2]>>2];Sk(a+24|0);Sk(a+64|0);Sk(a+104|0);c[Zb>>2]=a+144;c[Yb>>2]=c[Zb>>2];c[Ib>>2]=c[Yb>>2];Ib=c[Ib>>2]|0;c[b+756>>2]=Ib;c[Xb>>2]=Ub;c[Wb>>2]=-1;Wb=c[Wb>>2]|0;c[Vb>>2]=c[Xb>>2];c[b+652>>2]=Wb;c[c[Vb>>2]>>2]=0;c[Tb>>2]=c[Ub>>2];c[b+668>>2]=Tb;c[Ib>>2]=0;c[Sb>>2]=Pb;c[Rb>>2]=-1;Rb=c[Rb>>2]|0;c[Qb>>2]=c[Sb>>2];c[b+676>>2]=Rb;c[c[Qb>>2]>>2]=0;c[Ob>>2]=c[Pb>>2];c[b+692>>2]=Ob;c[Ib+4>>2]=0;c[Nb>>2]=Kb;c[Mb>>2]=-1;Mb=c[Mb>>2]|0;c[Lb>>2]=c[Nb>>2];c[b+700>>2]=Mb;c[c[Lb>>2]>>2]=0;c[Jb>>2]=c[Kb>>2];c[b+716>>2]=Jb;c[Hb>>2]=Ib+8;c[Gb>>2]=0;Gb=c[Gb>>2]|0;c[Eb>>2]=c[Hb>>2];c[Fb>>2]=Gb;Eb=c[Eb>>2]|0;c[Db>>2]=Fb;Db=c[c[Db>>2]>>2]|0;c[Ab>>2]=Eb;c[Cb>>2]=Db;Ab=c[Ab>>2]|0;c[b+724>>2]=Ab;c[Bb>>2]=Cb;c[Ab>>2]=c[c[Bb>>2]>>2];c[zb>>2]=a+156;c[yb>>2]=c[zb>>2];c[ib>>2]=c[yb>>2];ib=c[ib>>2]|0;c[b+620>>2]=ib;c[xb>>2]=ub;c[wb>>2]=-1;wb=c[wb>>2]|0;c[vb>>2]=c[xb>>2];c[b+516>>2]=wb;c[c[vb>>2]>>2]=0;c[tb>>2]=c[ub>>2];c[b+532>>2]=tb;c[ib>>2]=0;c[sb>>2]=pb;c[rb>>2]=-1;rb=c[rb>>2]|0;c[qb>>2]=c[sb>>2];c[b+540>>2]=rb;c[c[qb>>2]>>2]=0;c[ob>>2]=c[pb>>2];c[b+556>>2]=ob;c[ib+4>>2]=0;c[nb>>2]=kb;c[mb>>2]=-1;mb=c[mb>>2]|0;c[lb>>2]=c[nb>>2];c[b+564>>2]=mb;c[c[lb>>2]>>2]=0;c[jb>>2]=c[kb>>2];c[b+580>>2]=jb;c[hb>>2]=ib+8;c[gb>>2]=0;gb=c[gb>>2]|0;c[eb>>2]=c[hb>>2];c[fb>>2]=gb;eb=c[eb>>2]|0;c[db>>2]=fb;db=c[c[db>>2]>>2]|0;c[ab>>2]=eb;c[cb>>2]=db;ab=c[ab>>2]|0;c[b+588>>2]=ab;c[bb>>2]=cb;c[ab>>2]=c[c[bb>>2]>>2];c[$a>>2]=a+168;c[_a>>2]=c[$a>>2];c[Ka>>2]=c[_a>>2];Ka=c[Ka>>2]|0;c[b+484>>2]=Ka;c[Za>>2]=Wa;c[Ya>>2]=-1;Ya=c[Ya>>2]|0;c[Xa>>2]=c[Za>>2];c[b+384>>2]=Ya;c[c[Xa>>2]>>2]=0;c[Va>>2]=c[Wa>>2];c[b+400>>2]=Va;c[Ka>>2]=0;c[Ua>>2]=Ra;c[Ta>>2]=-1;Ta=c[Ta>>2]|0;c[Sa>>2]=c[Ua>>2];c[b+408>>2]=Ta;c[c[Sa>>2]>>2]=0;c[Qa>>2]=c[Ra>>2];c[b+904>>2]=Qa;c[Ka+4>>2]=0;c[Pa>>2]=Ma;c[Oa>>2]=-1;Oa=c[Oa>>2]|0;c[Na>>2]=c[Pa>>2];c[b+920>>2]=Oa;c[c[Na>>2]>>2]=0;c[La>>2]=c[Ma>>2];c[b+952>>2]=La;c[Ja>>2]=Ka+8;c[Ia>>2]=0;Ia=c[Ia>>2]|0;c[Ga>>2]=c[Ja>>2];c[Ha>>2]=Ia;Ga=c[Ga>>2]|0;c[Fa>>2]=Ha;Fa=c[c[Fa>>2]>>2]|0;c[Ca>>2]=Ga;c[Ea>>2]=Fa;Ca=c[Ca>>2]|0;c[b+456>>2]=Ca;c[Da>>2]=Ea;c[Ca>>2]=c[c[Da>>2]>>2];c[Ba>>2]=a+180;c[Aa>>2]=c[Ba>>2];c[ka>>2]=c[Aa>>2];ka=c[ka>>2]|0;c[b+352>>2]=ka;c[za>>2]=wa;c[ya>>2]=-1;ya=c[ya>>2]|0;c[xa>>2]=c[za>>2];c[b+248>>2]=ya;c[c[xa>>2]>>2]=0;c[va>>2]=c[wa>>2];c[b+264>>2]=va;c[ka>>2]=0;c[ua>>2]=ra;c[ta>>2]=-1;ta=c[ta>>2]|0;c[sa>>2]=c[ua>>2];c[b+272>>2]=ta;c[c[sa>>2]>>2]=0;c[qa>>2]=c[ra>>2];c[b+288>>2]=qa;c[ka+4>>2]=0;c[pa>>2]=ma;c[oa>>2]=-1;oa=c[oa>>2]|0;c[na>>2]=c[pa>>2];c[b+296>>2]=oa;c[c[na>>2]>>2]=0;c[la>>2]=c[ma>>2];c[b+312>>2]=la;c[ja>>2]=ka+8;c[ia>>2]=0;ia=c[ia>>2]|0;c[ga>>2]=c[ja>>2];c[ha>>2]=ia;ga=c[ga>>2]|0;c[fa>>2]=ha;fa=c[c[fa>>2]>>2]|0;c[ca>>2]=ga;c[ea>>2]=fa;ca=c[ca>>2]|0;c[b+320>>2]=ca;c[da>>2]=ea;c[ca>>2]=c[c[da>>2]>>2];c[ba>>2]=a+192;c[aa>>2]=c[ba>>2];c[M>>2]=c[aa>>2];M=c[M>>2]|0;c[b+220>>2]=M;c[$>>2]=Y;c[_>>2]=-1;_=c[_>>2]|0;c[Z>>2]=c[$>>2];c[b+116>>2]=_;c[c[Z>>2]>>2]=0;c[X>>2]=c[Y>>2];c[b+132>>2]=X;c[M>>2]=0;c[W>>2]=T;c[V>>2]=-1;V=c[V>>2]|0;c[U>>2]=c[W>>2];c[b+140>>2]=V;c[c[U>>2]>>2]=0;c[S>>2]=c[T>>2];c[b+156>>2]=S;c[M+4>>2]=0;c[R>>2]=O;c[Q>>2]=-1;Q=c[Q>>2]|0;c[P>>2]=c[R>>2];c[b+164>>2]=Q;c[c[P>>2]>>2]=0;c[N>>2]=c[O>>2];c[b+180>>2]=N;c[L>>2]=M+8;c[K>>2]=0;K=c[K>>2]|0;c[I>>2]=c[L>>2];c[J>>2]=K;I=c[I>>2]|0;c[H>>2]=J;H=c[c[H>>2]>>2]|0;c[E>>2]=I;c[G>>2]=H;E=c[E>>2]|0;c[b+188>>2]=E;c[F>>2]=G;c[E>>2]=c[c[F>>2]>>2];c[D>>2]=a+204;c[C>>2]=c[D>>2];c[B>>2]=c[C>>2];a=c[B>>2]|0;c[b+88>>2]=a;c[A>>2]=x;c[z>>2]=-1;z=c[z>>2]|0;c[y>>2]=c[A>>2];c[b+940>>2]=z;c[c[y>>2]>>2]=0;c[w>>2]=c[x>>2];c[b+908>>2]=w;c[a>>2]=0;c[v>>2]=s;c[u>>2]=-1;u=c[u>>2]|0;c[t>>2]=c[v>>2];c[b+436>>2]=u;c[c[t>>2]>>2]=0;c[r>>2]=c[s>>2];c[b+428>>2]=r;c[a+4>>2]=0;c[q>>2]=n;c[p>>2]=-1;p=c[p>>2]|0;c[o>>2]=c[q>>2];c[b+36>>2]=p;c[c[o>>2]>>2]=0;c[m>>2]=c[n>>2];c[b+48>>2]=m;c[k>>2]=a+8;c[l>>2]=0;a=c[l>>2]|0;c[g>>2]=c[k>>2];c[j>>2]=a;g=c[g>>2]|0;c[h>>2]=j;a=c[c[h>>2]>>2]|0;c[f>>2]=g;c[e>>2]=a;a=c[f>>2]|0;c[b+56>>2]=a;c[d>>2]=e;c[a>>2]=c[c[d>>2]>>2];i=b;return}function Sk(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Tk(c[d>>2]|0);i=b;return}function Tk(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0;b=i;i=i+416|0;y=b+404|0;A=b+372|0;z=b+356|0;x=b+12|0;t=b+180|0;v=b+16|0;u=b+20|0;s=b+24|0;o=b+32|0;q=b+40|0;p=b+344|0;n=b+44|0;d=b+52|0;f=b+60|0;e=b+64|0;h=b+68|0;g=b+72|0;j=b+76|0;k=b+80|0;l=b+84|0;B=b+92|0;w=b+96|0;r=b+100|0;m=b+340|0;C=b+104|0;D=b+108|0;Z=b+112|0;$=b+120|0;_=b+124|0;Y=b+128|0;U=b+136|0;W=b+144|0;V=b+148|0;T=b+152|0;P=b+368|0;R=b+384|0;Q=b+392|0;O=b+400|0;F=b+184|0;E=b+192|0;G=b+196|0;H=b+200|0;I=b+204|0;J=b+208|0;L=b+212|0;K=b+216|0;M=b+224|0;X=b+336|0;S=b+228|0;N=b+232|0;aa=b+236|0;ba=b+240|0;xa=b+244|0;za=b+252|0;ya=b+256|0;wa=b+260|0;sa=b+268|0;ua=b+276|0;ta=b+280|0;ra=b+284|0;na=b+292|0;pa=b+300|0;oa=b+304|0;ma=b+308|0;da=b+316|0;ca=b+324|0;ea=b+328|0;fa=b+332|0;ga=b+348|0;ha=b+352|0;ja=b+4|0;ia=b;ka=b+360|0;va=b+160|0;qa=b+364|0;la=b+164|0;Aa=b+380|0;Ba=b+172|0;Ca=b+388|0;c[Ca>>2]=a;a=c[Ca>>2]|0;c[Ba>>2]=a+4;c[Aa>>2]=c[Ba>>2];c[ka>>2]=c[Aa>>2];ka=c[ka>>2]|0;c[b+8>>2]=ka;c[za>>2]=wa;c[ya>>2]=-1;ya=c[ya>>2]|0;c[xa>>2]=c[za>>2];c[b+248>>2]=ya;c[c[xa>>2]>>2]=0;c[va>>2]=c[wa>>2];c[b+264>>2]=va;c[ka>>2]=0;c[ua>>2]=ra;c[ta>>2]=-1;ta=c[ta>>2]|0;c[sa>>2]=c[ua>>2];c[b+272>>2]=ta;c[c[sa>>2]>>2]=0;c[qa>>2]=c[ra>>2];c[b+288>>2]=qa;c[ka+4>>2]=0;c[pa>>2]=ma;c[oa>>2]=-1;oa=c[oa>>2]|0;c[na>>2]=c[pa>>2];c[b+296>>2]=oa;c[c[na>>2]>>2]=0;c[la>>2]=c[ma>>2];c[b+312>>2]=la;c[ja>>2]=ka+8;c[ia>>2]=0;ia=c[ia>>2]|0;c[ga>>2]=c[ja>>2];c[ha>>2]=ia;ga=c[ga>>2]|0;c[fa>>2]=ha;fa=c[c[fa>>2]>>2]|0;c[ca>>2]=ga;c[ea>>2]=fa;ca=c[ca>>2]|0;c[b+320>>2]=ca;c[da>>2]=ea;c[ca>>2]=c[c[da>>2]>>2];c[ba>>2]=a+16;c[aa>>2]=c[ba>>2];c[M>>2]=c[aa>>2];M=c[M>>2]|0;c[b+220>>2]=M;c[$>>2]=Y;c[_>>2]=-1;_=c[_>>2]|0;c[Z>>2]=c[$>>2];c[b+116>>2]=_;c[c[Z>>2]>>2]=0;c[X>>2]=c[Y>>2];c[b+132>>2]=X;c[M>>2]=0;c[W>>2]=T;c[V>>2]=-1;V=c[V>>2]|0;c[U>>2]=c[W>>2];c[b+140>>2]=V;c[c[U>>2]>>2]=0;c[S>>2]=c[T>>2];c[b+156>>2]=S;c[M+4>>2]=0;c[R>>2]=O;c[Q>>2]=-1;Q=c[Q>>2]|0;c[P>>2]=c[R>>2];c[b+376>>2]=Q;c[c[P>>2]>>2]=0;c[N>>2]=c[O>>2];c[b+408>>2]=N;c[L>>2]=M+8;c[K>>2]=0;K=c[K>>2]|0;c[I>>2]=c[L>>2];c[J>>2]=K;I=c[I>>2]|0;c[H>>2]=J;H=c[c[H>>2]>>2]|0;c[E>>2]=I;c[G>>2]=H;E=c[E>>2]|0;c[b+188>>2]=E;c[F>>2]=G;c[E>>2]=c[c[F>>2]>>2];c[D>>2]=a+28;c[C>>2]=c[D>>2];c[B>>2]=c[C>>2];a=c[B>>2]|0;c[b+88>>2]=a;c[A>>2]=x;c[z>>2]=-1;z=c[z>>2]|0;c[y>>2]=c[A>>2];c[b+396>>2]=z;c[c[y>>2]>>2]=0;c[w>>2]=c[x>>2];c[b+168>>2]=w;c[a>>2]=0;c[v>>2]=s;c[u>>2]=-1;u=c[u>>2]|0;c[t>>2]=c[v>>2];c[b+176>>2]=u;c[c[t>>2]>>2]=0;c[r>>2]=c[s>>2];c[b+28>>2]=r;c[a+4>>2]=0;c[q>>2]=n;c[p>>2]=-1;p=c[p>>2]|0;c[o>>2]=c[q>>2];c[b+36>>2]=p;c[c[o>>2]>>2]=0;c[m>>2]=c[n>>2];c[b+48>>2]=m;c[k>>2]=a+8;c[l>>2]=0;a=c[l>>2]|0;c[g>>2]=c[k>>2];c[j>>2]=a;g=c[g>>2]|0;c[h>>2]=j;a=c[c[h>>2]>>2]|0;c[f>>2]=g;c[e>>2]=a;a=c[f>>2]|0;c[b+56>>2]=a;c[d>>2]=e;c[a>>2]=c[c[d>>2]>>2];i=b;return}function Uk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;o=i;i=i+64|0;s=o+16|0;t=o+28|0;u=o+12|0;q=o+4|0;r=o+32|0;p=o;m=o+48|0;f=o+52|0;g=o+56|0;v=o+36|0;j=o+40|0;l=o+8|0;n=o+24|0;h=o+44|0;k=o+20|0;c[v>>2]=b;c[j>>2]=d;c[l>>2]=e;e=c[v>>2]|0;c[n>>2]=c[e+8>>2]&(1<<c[e>>2])-1;if(!((c[n>>2]|0)>>>0<1<<c[e+4>>2]>>>0)){i=o;return}c[h>>2]=(1<<c[e>>2])+(c[n>>2]|0);b=(c[e+12>>2]|0)+(c[h>>2]|0)|0;v=c[j>>2]|0;c[k>>2]=(1<<c[e+4>>2])-(c[n>>2]|0);c[m>>2]=l;c[f>>2]=k;d=c[m>>2]|0;e=c[f>>2]|0;a[p+0>>0]=a[g+0>>0]|0;c[q>>2]=d;c[r>>2]=e;e=c[r>>2]|0;d=c[q>>2]|0;c[s>>2]=p;c[t>>2]=e;c[u>>2]=d;qz(b|0,v|0,c[((c[c[t>>2]>>2]|0)>>>0<(c[c[u>>2]>>2]|0)>>>0?c[r>>2]|0:c[q>>2]|0)>>2]|0)|0;i=o;return}function Vk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;c[(c[e>>2]|0)+3362e4>>2]=c[f>>2];i=d;return}function Wk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;c[(c[e>>2]|0)+3362e4>>2]=c[f>>2];i=d;return}function Xk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0;f=i;i=i+784|0;C=f+396|0;K=f+752|0;J=f+736|0;I=f+168|0;n=f+304|0;s=f+192|0;t=f+704|0;r=f+40|0;o=f+380|0;p=f+384|0;q=f+772|0;z=f+164|0;A=f+128|0;y=f+56|0;e=f+116|0;w=f+696|0;x=f+773|0;h=f+364|0;g=f+316|0;v=f+296|0;l=f+196|0;k=f+188|0;j=f+184|0;u=f+160|0;E=f+132|0;m=f+136|0;H=f+140|0;G=f+120|0;ja=f+148|0;F=f+152|0;D=f+156|0;ia=f+692|0;ha=f+580|0;fa=f+512|0;ea=f+472|0;da=f+360|0;ca=f+320|0;ba=f+312|0;aa=f+308|0;$=f+292|0;_=f+200|0;Y=f+204|0;X=f+208|0;W=f+212|0;Z=f+216|0;V=f+220|0;U=f+32|0;T=f+228|0;S=f;P=f+236|0;Q=f+240|0;R=f+244|0;N=f+248|0;O=f+252|0;wa=f+256|0;oa=f+144|0;na=f+264|0;Ja=f+268|0;Ma=f+272|0;Ra=f+276|0;Qa=f+280|0;L=f+284|0;Ba=f+288|0;Ca=f+688|0;Aa=f+48|0;xa=f+576|0;la=f+572|0;za=f+774|0;Ia=f+496|0;ka=f+468|0;Ha=f+112|0;Ea=f+356|0;Fa=f+324|0;Ga=f+775|0;ta=f+340|0;ua=f+344|0;va=f+348|0;qa=f+352|0;ra=f+716|0;sa=f+724|0;Da=f+732|0;La=f+740|0;pa=f+748|0;Pa=f+756|0;Oa=f+764|0;Hb=f+388|0;Na=f+392|0;Ka=f+768|0;Gb=f+400|0;Fb=f+404|0;Sa=f+408|0;jb=f+412|0;hb=f+416|0;gb=f+224|0;fb=f+420|0;ib=f+424|0;lb=f+428|0;ob=f+232|0;nb=f+720|0;mb=f+440|0;pb=f+444|0;yb=f+448|0;Eb=f+452|0;Db=f+456|0;Bb=f+460|0;Cb=f+464|0;Ab=f+64|0;xb=f+476|0;vb=f+480|0;wb=f+484|0;zb=f+488|0;ub=f+72|0;sb=f+260|0;tb=f+500|0;rb=f+96|0;eb=f+528|0;db=f+532|0;qb=f+536|0;cb=f+16|0;bb=f+544|0;ab=f+8|0;_a=f+548|0;$a=f+552|0;Ya=f+556|0;Za=f+560|0;Wa=f+564|0;Ta=f+568|0;Mb=f+684|0;Lb=f+628|0;Kb=f+620|0;Jb=f+616|0;Ib=f+584|0;Ob=f+588|0;Nb=f+592|0;Pb=f+596|0;Qb=f+600|0;Rb=f+604|0;Sb=f+608|0;Vb=f+612|0;Ub=f+104|0;Xb=f+624|0;Wb=f+24|0;bc=f+432|0;Zb=f+632|0;_b=f+636|0;$b=f+640|0;ac=f+644|0;ec=f+648|0;fc=f+652|0;gc=f+656|0;hc=f+660|0;dc=f+664|0;ic=f+668|0;cc=f+672|0;jc=f+676|0;Yb=f+680|0;lc=f+300|0;kc=f+88|0;nc=f+368|0;mc=f+80|0;qc=f+700|0;pc=f+436|0;oc=f+712|0;B=f+708|0;rc=f+124|0;Va=f+372|0;kb=f+728|0;Tb=f+376|0;ma=f+172|0;Xa=f+760|0;Ua=f+328|0;M=f+504|0;ya=f+520|0;ga=f+744|0;c[rc>>2]=b;c[Va>>2]=d;b=c[rc>>2]|0;d=c[Va>>2]|0;c[qc>>2]=b;c[pc>>2]=d;gl(oc,c[qc>>2]|0,c[pc>>2]|0);a[mc+0>>0]=a[oc+0>>0]|0;a[mc+1>>0]=a[oc+1>>0]|0;a[mc+2>>0]=a[oc+2>>0]|0;a[mc+3>>0]=a[oc+3>>0]|0;c[nc>>2]=kb;d=c[nc>>2]|0;a[kc+0>>0]=a[mc+0>>0]|0;a[kc+1>>0]=a[mc+1>>0]|0;a[kc+2>>0]=a[mc+2>>0]|0;a[kc+3>>0]=a[mc+3>>0]|0;c[lc>>2]=d;d=c[lc>>2]|0;c[d+0>>2]=c[kc+0>>2];c[jc>>2]=b;c[ic>>2]=c[jc>>2];c[gc>>2]=dc;c[hc>>2]=-1;d=c[hc>>2]|0;c[ec>>2]=c[gc>>2];c[fc>>2]=d;c[c[ec>>2]>>2]=0;c[cc>>2]=c[dc>>2];c[bc>>2]=cc;c[$b>>2]=Yb;c[ac>>2]=0;d=c[ac>>2]|0;c[Zb>>2]=c[$b>>2];c[_b>>2]=d;c[c[Zb>>2]>>2]=c[_b>>2];a[Wb+0>>0]=a[Yb+0>>0]|0;a[Wb+1>>0]=a[Yb+1>>0]|0;a[Wb+2>>0]=a[Yb+2>>0]|0;a[Wb+3>>0]=a[Yb+3>>0]|0;c[Xb>>2]=Tb;d=c[Xb>>2]|0;a[Ub+0>>0]=a[Wb+0>>0]|0;a[Ub+1>>0]=a[Wb+1>>0]|0;a[Ub+2>>0]=a[Wb+2>>0]|0;a[Ub+3>>0]=a[Wb+3>>0]|0;c[Vb>>2]=d;d=c[Vb>>2]|0;c[d+0>>2]=c[Ub+0>>2];c[Rb>>2]=kb;c[Sb>>2]=Tb;d=c[Sb>>2]|0;c[Pb>>2]=c[Rb>>2];c[Qb>>2]=d;d=c[Qb>>2]|0;c[Ob>>2]=c[Pb>>2];c[Nb>>2]=d;if((c[c[Ob>>2]>>2]|0)==(c[c[Nb>>2]>>2]|0)^1){c[Ib>>2]=kb;c[Jb>>2]=c[Ib>>2];c[Kb>>2]=(c[c[Jb>>2]>>2]|0)+8;c[Lb>>2]=c[Kb>>2];c[Mb>>2]=c[Lb>>2];c[Ta>>2]=c[Mb>>2];c[B>>2]=(c[Ta>>2]|0)+12;rc=c[B>>2]|0;i=f;return rc|0}cl(Ua,b,c[Va>>2]|0);c[Wa>>2]=Ua;rc=c[Wa>>2]|0;c[Ya>>2]=Xa;c[Za>>2]=rc;rc=c[Za>>2]|0;c[_a>>2]=c[Ya>>2];c[$a>>2]=rc;c[c[_a>>2]>>2]=c[$a>>2];a[ab+0>>0]=a[Xa+0>>0]|0;a[ab+1>>0]=a[Xa+1>>0]|0;a[ab+2>>0]=a[Xa+2>>0]|0;a[ab+3>>0]=a[Xa+3>>0]|0;c[bb>>2]=ma;rc=c[bb>>2]|0;a[cb+0>>0]=a[ab+0>>0]|0;a[cb+1>>0]=a[ab+1>>0]|0;a[cb+2>>0]=a[ab+2>>0]|0;a[cb+3>>0]=a[ab+3>>0]|0;c[db>>2]=rc;rc=c[db>>2]|0;c[eb>>2]=cb;c[fb>>2]=c[c[eb>>2]>>2];qc=c[fb>>2]|0;c[gb>>2]=qc;c[hb>>2]=c[gb>>2];c[ib>>2]=c[c[hb>>2]>>2];c[jb>>2]=qc;c[Sa>>2]=c[jb>>2];c[c[Sa>>2]>>2]=0;Sa=c[ib>>2]|0;c[lb>>2]=cb;c[mb>>2]=c[c[lb>>2]>>2];c[nb>>2]=c[mb>>2];c[ob>>2]=c[nb>>2];c[pb>>2]=(c[ob>>2]|0)+4;qc=c[pb>>2]|0;c[qb+0>>2]=c[qc+0>>2];c[qb+4>>2]=c[qc+4>>2];a[rb+0>>0]=a[qb+0>>0]|0;a[rb+1>>0]=a[qb+1>>0]|0;a[rb+2>>0]=a[qb+2>>0]|0;a[rb+3>>0]=a[qb+3>>0]|0;a[rb+4>>0]=a[qb+4>>0]|0;a[rb+5>>0]=a[qb+5>>0]|0;a[rb+6>>0]=a[qb+6>>0]|0;a[rb+7>>0]=a[qb+7>>0]|0;c[sb>>2]=rc;c[tb>>2]=Sa;Sa=c[sb>>2]|0;rc=c[tb>>2]|0;a[ub+0>>0]=a[rb+0>>0]|0;a[ub+1>>0]=a[rb+1>>0]|0;a[ub+2>>0]=a[rb+2>>0]|0;a[ub+3>>0]=a[rb+3>>0]|0;a[ub+4>>0]=a[rb+4>>0]|0;a[ub+5>>0]=a[rb+5>>0]|0;a[ub+6>>0]=a[rb+6>>0]|0;a[ub+7>>0]=a[rb+7>>0]|0;c[vb>>2]=Sa;c[wb>>2]=rc;rc=c[vb>>2]|0;c[xb>>2]=wb;Sa=c[c[xb>>2]>>2]|0;c[yb>>2]=ub;qc=c[yb>>2]|0;c[zb+0>>2]=c[qc+0>>2];c[zb+4>>2]=c[qc+4>>2];a[Ab+0>>0]=a[zb+0>>0]|0;a[Ab+1>>0]=a[zb+1>>0]|0;a[Ab+2>>0]=a[zb+2>>0]|0;a[Ab+3>>0]=a[zb+3>>0]|0;a[Ab+4>>0]=a[zb+4>>0]|0;a[Ab+5>>0]=a[zb+5>>0]|0;a[Ab+6>>0]=a[zb+6>>0]|0;a[Ab+7>>0]=a[zb+7>>0]|0;c[Bb>>2]=rc;c[Cb>>2]=Sa;Sa=c[Bb>>2]|0;c[Db>>2]=Cb;c[Sa>>2]=c[c[Db>>2]>>2];Sa=Sa+4|0;c[Eb>>2]=Ab;rc=c[Eb>>2]|0;c[Sa+0>>2]=c[rc+0>>2];c[Sa+4>>2]=c[rc+4>>2];c[Fb>>2]=Ua;c[Gb>>2]=c[Fb>>2];c[Hb>>2]=c[Gb>>2];c[Na>>2]=0;Sa=c[Hb>>2]|0;c[Oa>>2]=Sa;c[Pa>>2]=c[Oa>>2];c[Ka>>2]=c[c[Pa>>2]>>2];rc=c[Na>>2]|0;c[Qa>>2]=Sa;c[Ra>>2]=c[Qa>>2];c[c[Ra>>2]>>2]=rc;if((c[Ka>>2]|0)!=0){c[Ma>>2]=Sa;c[Ja>>2]=c[Ma>>2];rc=c[Ka>>2]|0;c[La>>2]=(c[Ja>>2]|0)+4;c[pa>>2]=rc;Ja=c[La>>2]|0;if(a[Ja+5>>0]&1){rc=c[Ja>>2]|0;c[Da>>2]=(c[pa>>2]|0)+20;qc=c[Da>>2]|0;c[Ea>>2]=rc;c[Fa>>2]=qc;qc=c[Ea>>2]|0;rc=c[Fa>>2]|0;a[Ha+0>>0]=a[Ga+0>>0]|0;c[Ia>>2]=qc;c[ka>>2]=rc}if(a[Ja+4>>0]&1){rc=c[Ja>>2]|0;c[L>>2]=(c[pa>>2]|0)+8;qc=c[L>>2]|0;c[xa>>2]=rc;c[la>>2]=qc;qc=c[xa>>2]|0;rc=c[la>>2]|0;a[Aa+0>>0]=a[za+0>>0]|0;c[Ba>>2]=qc;c[Ca>>2]=rc;Kn(c[Ca>>2]|0)}if((c[pa>>2]|0)!=0){qc=c[pa>>2]|0;c[qa>>2]=c[Ja>>2];c[ra>>2]=qc;c[sa>>2]=1;qc=c[ra>>2]|0;rc=c[sa>>2]|0;c[ta>>2]=c[qa>>2];c[ua>>2]=qc;c[va>>2]=rc;Ix(c[ua>>2]|0)}}c[na>>2]=ma;c[oa>>2]=c[na>>2];c[wa>>2]=c[oa>>2];dl(ya,b,c[c[wa>>2]>>2]|0);c[N>>2]=M;c[O>>2]=ya;L=c[O>>2]|0;c[P>>2]=c[N>>2];c[Q>>2]=L;L=c[P>>2]|0;rc=c[Q>>2]|0;c[R+0>>2]=c[rc+0>>2];a[S+0>>0]=a[R+0>>0]|0;a[S+1>>0]=a[R+1>>0]|0;a[S+2>>0]=a[R+2>>0]|0;a[S+3>>0]=a[R+3>>0]|0;c[T>>2]=L;rc=c[T>>2]|0;a[U+0>>0]=a[S+0>>0]|0;a[U+1>>0]=a[S+1>>0]|0;a[U+2>>0]=a[S+2>>0]|0;a[U+3>>0]=a[S+3>>0]|0;c[V>>2]=rc;rc=c[V>>2]|0;c[rc+0>>2]=c[U+0>>2];a[L+4>>0]=a[(c[Q>>2]|0)+4>>0]&1;c[W>>2]=ma;L=c[W>>2]|0;c[X>>2]=L;c[Y>>2]=c[X>>2];c[Z>>2]=c[c[Y>>2]>>2];c[_>>2]=L;c[$>>2]=c[_>>2];c[c[$>>2]>>2]=0;c[aa>>2]=M;c[ba>>2]=c[aa>>2];c[ca>>2]=(c[c[ba>>2]>>2]|0)+8;c[da>>2]=c[ca>>2];c[ea>>2]=c[da>>2];c[fa>>2]=c[ea>>2];c[B>>2]=(c[fa>>2]|0)+12;c[ga>>2]=1;c[ha>>2]=ma;c[ia>>2]=c[ha>>2];c[ja>>2]=c[ia>>2];c[F>>2]=0;L=c[ja>>2]|0;c[G>>2]=L;c[H>>2]=c[G>>2];c[D>>2]=c[c[H>>2]>>2];rc=c[F>>2]|0;c[I>>2]=L;c[J>>2]=c[I>>2];c[c[J>>2]>>2]=rc;if((c[D>>2]|0)==0){rc=c[B>>2]|0;i=f;return rc|0}c[K>>2]=L;c[C>>2]=c[K>>2];rc=c[D>>2]|0;c[E>>2]=(c[C>>2]|0)+4;c[m>>2]=rc;C=c[E>>2]|0;if(a[C+5>>0]&1){rc=c[C>>2]|0;c[u>>2]=(c[m>>2]|0)+20;qc=c[u>>2]|0;c[e>>2]=rc;c[w>>2]=qc;qc=c[e>>2]|0;rc=c[w>>2]|0;a[y+0>>0]=a[x+0>>0]|0;c[z>>2]=qc;c[A>>2]=rc}if(a[C+4>>0]&1){rc=c[C>>2]|0;c[n>>2]=(c[m>>2]|0)+8;qc=c[n>>2]|0;c[o>>2]=rc;c[p>>2]=qc;qc=c[o>>2]|0;rc=c[p>>2]|0;a[r+0>>0]=a[q+0>>0]|0;c[s>>2]=qc;c[t>>2]=rc;Kn(c[t>>2]|0)}if((c[m>>2]|0)==0){rc=c[B>>2]|0;i=f;return rc|0}qc=c[m>>2]|0;c[l>>2]=c[C>>2];c[k>>2]=qc;c[j>>2]=1;qc=c[k>>2]|0;rc=c[j>>2]|0;c[h>>2]=c[l>>2];c[g>>2]=qc;c[v>>2]=rc;Ix(c[g>>2]|0);rc=c[B>>2]|0;i=f;return rc|0}function Yk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0;f=i;i=i+784|0;wa=f+484|0;oa=f+748|0;na=f+616|0;Ja=f+168|0;Ma=f+692|0;Ra=f+696|0;Qa=f+364|0;L=f+368|0;Ba=f+376|0;Ca=f+372|0;Aa=f+96|0;xa=f+164|0;la=f+128|0;za=f+772|0;Ia=f+116|0;ka=f+680|0;Ha=f+8|0;Ea=f+360|0;Fa=f+312|0;Ga=f+773|0;ta=f+188|0;ua=f+180|0;va=f+176|0;qa=f+160|0;ra=f+132|0;sa=f+136|0;Da=f+140|0;La=f+144|0;pa=f+148|0;Pa=f+152|0;Oa=f+156|0;Hb=f+676|0;Na=f+568|0;Ka=f+440|0;Gb=f+392|0;Fb=f+356|0;V=f+316|0;U=f+112|0;T=f+304|0;S=f+40|0;P=f+192|0;Q=f+196|0;R=f+200|0;N=f+204|0;O=f+208|0;$=f+212|0;_=f+216|0;Y=f+220|0;X=f+224|0;W=f+228|0;Z=f+232|0;fa=f+236|0;ea=f+240|0;da=f+244|0;ca=f+248|0;ba=f+252|0;aa=f+256|0;Sa=f+260|0;jb=f+264|0;hb=f+268|0;gb=f+272|0;fb=f+276|0;ib=f+280|0;lb=f+672|0;ob=f+612|0;nb=f+564|0;mb=f+560|0;pb=f+436|0;yb=f+428|0;Eb=f+388|0;Db=f+380|0;Bb=f+352|0;Cb=f+320|0;Ab=f+24|0;xb=f+328|0;vb=f+308|0;wb=f+336|0;zb=f+344|0;ub=f+88|0;sb=f+712|0;tb=f+720|0;rb=f+32|0;eb=f+744|0;db=f+752|0;qb=f+760|0;cb=f;bb=f+384|0;ab=f+64|0;C=f+396|0;K=f+400|0;J=f+404|0;I=f+408|0;n=f+412|0;s=f+416|0;t=f+420|0;r=f+72|0;o=f+424|0;p=f+700|0;q=f+774|0;z=f+444|0;A=f+448|0;y=f+16|0;e=f+452|0;w=f+456|0;x=f+775|0;h=f+472|0;g=f+476|0;v=f+480|0;l=f+768|0;k=f+488|0;j=f+492|0;u=f+496|0;E=f+500|0;m=f+504|0;H=f+508|0;G=f+512|0;ja=f+516|0;F=f+520|0;D=f+524|0;ia=f+528|0;ha=f+532|0;_a=f+536|0;$a=f+540|0;Ya=f+544|0;Za=f+548|0;Wa=f+552|0;Ta=f+556|0;Mb=f+668|0;Lb=f+648|0;Kb=f+608|0;Jb=f+600|0;Ib=f+572|0;Ob=f+576|0;Nb=f+580|0;Pb=f+584|0;Qb=f+432|0;Rb=f+588|0;Sb=f+592|0;Vb=f+596|0;Ub=f+48|0;Xb=f+604|0;Wb=f+104|0;bc=f+728|0;Zb=f+620|0;_b=f+624|0;$b=f+628|0;ac=f+632|0;ec=f+324|0;fc=f+636|0;gc=f+640|0;hc=f+644|0;dc=f+332|0;ic=f+652|0;cc=f+656|0;jc=f+660|0;Yb=f+664|0;lc=f+296|0;kc=f+56|0;nc=f+688|0;mc=f+80|0;qc=f+684|0;pc=f+724|0;oc=f+172|0;B=f+184|0;rc=f+124|0;Va=f+284|0;kb=f+716|0;Tb=f+300|0;ma=f+732|0;Xa=f+756|0;Ua=f+460|0;M=f+704|0;ya=f+288|0;ga=f+120|0;c[rc>>2]=b;c[Va>>2]=d;b=c[rc>>2]|0;d=c[Va>>2]|0;c[qc>>2]=b;c[pc>>2]=d;bl(oc,c[qc>>2]|0,c[pc>>2]|0);a[mc+0>>0]=a[oc+0>>0]|0;a[mc+1>>0]=a[oc+1>>0]|0;a[mc+2>>0]=a[oc+2>>0]|0;a[mc+3>>0]=a[oc+3>>0]|0;c[nc>>2]=kb;d=c[nc>>2]|0;a[kc+0>>0]=a[mc+0>>0]|0;a[kc+1>>0]=a[mc+1>>0]|0;a[kc+2>>0]=a[mc+2>>0]|0;a[kc+3>>0]=a[mc+3>>0]|0;c[lc>>2]=d;d=c[lc>>2]|0;c[d+0>>2]=c[kc+0>>2];c[jc>>2]=b;c[ic>>2]=c[jc>>2];c[gc>>2]=dc;c[hc>>2]=-1;d=c[hc>>2]|0;c[ec>>2]=c[gc>>2];c[fc>>2]=d;c[c[ec>>2]>>2]=0;c[cc>>2]=c[dc>>2];c[bc>>2]=cc;c[$b>>2]=Yb;c[ac>>2]=0;d=c[ac>>2]|0;c[Zb>>2]=c[$b>>2];c[_b>>2]=d;c[c[Zb>>2]>>2]=c[_b>>2];a[Wb+0>>0]=a[Yb+0>>0]|0;a[Wb+1>>0]=a[Yb+1>>0]|0;a[Wb+2>>0]=a[Yb+2>>0]|0;a[Wb+3>>0]=a[Yb+3>>0]|0;c[Xb>>2]=Tb;d=c[Xb>>2]|0;a[Ub+0>>0]=a[Wb+0>>0]|0;a[Ub+1>>0]=a[Wb+1>>0]|0;a[Ub+2>>0]=a[Wb+2>>0]|0;a[Ub+3>>0]=a[Wb+3>>0]|0;c[Vb>>2]=d;d=c[Vb>>2]|0;c[d+0>>2]=c[Ub+0>>2];c[Rb>>2]=kb;c[Sb>>2]=Tb;d=c[Sb>>2]|0;c[Pb>>2]=c[Rb>>2];c[Qb>>2]=d;d=c[Qb>>2]|0;c[Ob>>2]=c[Pb>>2];c[Nb>>2]=d;if((c[c[Ob>>2]>>2]|0)==(c[c[Nb>>2]>>2]|0)^1){c[Ib>>2]=kb;c[Jb>>2]=c[Ib>>2];c[Kb>>2]=(c[c[Jb>>2]>>2]|0)+8;c[Lb>>2]=c[Kb>>2];c[Mb>>2]=c[Lb>>2];c[Ta>>2]=c[Mb>>2];c[B>>2]=(c[Ta>>2]|0)+4;rc=c[B>>2]|0;i=f;return rc|0}Zk(Ua,b,c[Va>>2]|0);c[Wa>>2]=Ua;rc=c[Wa>>2]|0;c[Ya>>2]=Xa;c[Za>>2]=rc;rc=c[Za>>2]|0;c[_a>>2]=c[Ya>>2];c[$a>>2]=rc;c[c[_a>>2]>>2]=c[$a>>2];a[ab+0>>0]=a[Xa+0>>0]|0;a[ab+1>>0]=a[Xa+1>>0]|0;a[ab+2>>0]=a[Xa+2>>0]|0;a[ab+3>>0]=a[Xa+3>>0]|0;c[bb>>2]=ma;rc=c[bb>>2]|0;a[cb+0>>0]=a[ab+0>>0]|0;a[cb+1>>0]=a[ab+1>>0]|0;a[cb+2>>0]=a[ab+2>>0]|0;a[cb+3>>0]=a[ab+3>>0]|0;c[db>>2]=rc;rc=c[db>>2]|0;c[eb>>2]=cb;c[fb>>2]=c[c[eb>>2]>>2];qc=c[fb>>2]|0;c[gb>>2]=qc;c[hb>>2]=c[gb>>2];c[ib>>2]=c[c[hb>>2]>>2];c[jb>>2]=qc;c[Sa>>2]=c[jb>>2];c[c[Sa>>2]>>2]=0;Sa=c[ib>>2]|0;c[lb>>2]=cb;c[mb>>2]=c[c[lb>>2]>>2];c[nb>>2]=c[mb>>2];c[ob>>2]=c[nb>>2];c[pb>>2]=(c[ob>>2]|0)+4;qc=c[pb>>2]|0;c[qb+0>>2]=c[qc+0>>2];c[qb+4>>2]=c[qc+4>>2];a[rb+0>>0]=a[qb+0>>0]|0;a[rb+1>>0]=a[qb+1>>0]|0;a[rb+2>>0]=a[qb+2>>0]|0;a[rb+3>>0]=a[qb+3>>0]|0;a[rb+4>>0]=a[qb+4>>0]|0;a[rb+5>>0]=a[qb+5>>0]|0;a[rb+6>>0]=a[qb+6>>0]|0;a[rb+7>>0]=a[qb+7>>0]|0;c[sb>>2]=rc;c[tb>>2]=Sa;Sa=c[sb>>2]|0;rc=c[tb>>2]|0;a[ub+0>>0]=a[rb+0>>0]|0;a[ub+1>>0]=a[rb+1>>0]|0;a[ub+2>>0]=a[rb+2>>0]|0;a[ub+3>>0]=a[rb+3>>0]|0;a[ub+4>>0]=a[rb+4>>0]|0;a[ub+5>>0]=a[rb+5>>0]|0;a[ub+6>>0]=a[rb+6>>0]|0;a[ub+7>>0]=a[rb+7>>0]|0;c[vb>>2]=Sa;c[wb>>2]=rc;rc=c[vb>>2]|0;c[xb>>2]=wb;Sa=c[c[xb>>2]>>2]|0;c[yb>>2]=ub;qc=c[yb>>2]|0;c[zb+0>>2]=c[qc+0>>2];c[zb+4>>2]=c[qc+4>>2];a[Ab+0>>0]=a[zb+0>>0]|0;a[Ab+1>>0]=a[zb+1>>0]|0;a[Ab+2>>0]=a[zb+2>>0]|0;a[Ab+3>>0]=a[zb+3>>0]|0;a[Ab+4>>0]=a[zb+4>>0]|0;a[Ab+5>>0]=a[zb+5>>0]|0;a[Ab+6>>0]=a[zb+6>>0]|0;a[Ab+7>>0]=a[zb+7>>0]|0;c[Bb>>2]=rc;c[Cb>>2]=Sa;Sa=c[Bb>>2]|0;c[Db>>2]=Cb;c[Sa>>2]=c[c[Db>>2]>>2];Sa=Sa+4|0;c[Eb>>2]=Ab;rc=c[Eb>>2]|0;c[Sa+0>>2]=c[rc+0>>2];c[Sa+4>>2]=c[rc+4>>2];c[Fb>>2]=Ua;c[Gb>>2]=c[Fb>>2];c[Hb>>2]=c[Gb>>2];c[Na>>2]=0;Sa=c[Hb>>2]|0;c[Oa>>2]=Sa;c[Pa>>2]=c[Oa>>2];c[Ka>>2]=c[c[Pa>>2]>>2];rc=c[Na>>2]|0;c[Qa>>2]=Sa;c[Ra>>2]=c[Qa>>2];c[c[Ra>>2]>>2]=rc;if((c[Ka>>2]|0)!=0){c[Ma>>2]=Sa;c[Ja>>2]=c[Ma>>2];rc=c[Ka>>2]|0;c[La>>2]=(c[Ja>>2]|0)+4;c[pa>>2]=rc;Ja=c[La>>2]|0;if(a[Ja+5>>0]&1){rc=c[Ja>>2]|0;c[Da>>2]=(c[pa>>2]|0)+12;qc=c[Da>>2]|0;c[Ea>>2]=rc;c[Fa>>2]=qc;qc=c[Ea>>2]|0;rc=c[Fa>>2]|0;a[Ha+0>>0]=a[Ga+0>>0]|0;c[Ia>>2]=qc;c[ka>>2]=rc}if(a[Ja+4>>0]&1){rc=c[Ja>>2]|0;c[L>>2]=(c[pa>>2]|0)+8;qc=c[L>>2]|0;c[xa>>2]=rc;c[la>>2]=qc;qc=c[xa>>2]|0;rc=c[la>>2]|0;a[Aa+0>>0]=a[za+0>>0]|0;c[Ba>>2]=qc;c[Ca>>2]=rc}if((c[pa>>2]|0)!=0){qc=c[pa>>2]|0;c[qa>>2]=c[Ja>>2];c[ra>>2]=qc;c[sa>>2]=1;qc=c[ra>>2]|0;rc=c[sa>>2]|0;c[ta>>2]=c[qa>>2];c[ua>>2]=qc;c[va>>2]=rc;Ix(c[ua>>2]|0)}}c[na>>2]=ma;c[oa>>2]=c[na>>2];c[wa>>2]=c[oa>>2];_k(ya,b,c[c[wa>>2]>>2]|0);c[N>>2]=M;c[O>>2]=ya;L=c[O>>2]|0;c[P>>2]=c[N>>2];c[Q>>2]=L;L=c[P>>2]|0;rc=c[Q>>2]|0;c[R+0>>2]=c[rc+0>>2];a[S+0>>0]=a[R+0>>0]|0;a[S+1>>0]=a[R+1>>0]|0;a[S+2>>0]=a[R+2>>0]|0;a[S+3>>0]=a[R+3>>0]|0;c[T>>2]=L;rc=c[T>>2]|0;a[U+0>>0]=a[S+0>>0]|0;a[U+1>>0]=a[S+1>>0]|0;a[U+2>>0]=a[S+2>>0]|0;a[U+3>>0]=a[S+3>>0]|0;c[V>>2]=rc;rc=c[V>>2]|0;c[rc+0>>2]=c[U+0>>2];a[L+4>>0]=a[(c[Q>>2]|0)+4>>0]&1;c[W>>2]=ma;L=c[W>>2]|0;c[X>>2]=L;c[Y>>2]=c[X>>2];c[Z>>2]=c[c[Y>>2]>>2];c[_>>2]=L;c[$>>2]=c[_>>2];c[c[$>>2]>>2]=0;c[aa>>2]=M;c[ba>>2]=c[aa>>2];c[ca>>2]=(c[c[ba>>2]>>2]|0)+8;c[da>>2]=c[ca>>2];c[ea>>2]=c[da>>2];c[fa>>2]=c[ea>>2];c[B>>2]=(c[fa>>2]|0)+4;c[ga>>2]=1;c[ha>>2]=ma;c[ia>>2]=c[ha>>2];c[ja>>2]=c[ia>>2];c[F>>2]=0;L=c[ja>>2]|0;c[G>>2]=L;c[H>>2]=c[G>>2];c[D>>2]=c[c[H>>2]>>2];rc=c[F>>2]|0;c[I>>2]=L;c[J>>2]=c[I>>2];c[c[J>>2]>>2]=rc;if((c[D>>2]|0)==0){rc=c[B>>2]|0;i=f;return rc|0}c[K>>2]=L;c[C>>2]=c[K>>2];rc=c[D>>2]|0;c[E>>2]=(c[C>>2]|0)+4;c[m>>2]=rc;C=c[E>>2]|0;if(a[C+5>>0]&1){rc=c[C>>2]|0;c[u>>2]=(c[m>>2]|0)+12;qc=c[u>>2]|0;c[e>>2]=rc;c[w>>2]=qc;qc=c[e>>2]|0;rc=c[w>>2]|0;a[y+0>>0]=a[x+0>>0]|0;c[z>>2]=qc;c[A>>2]=rc}if(a[C+4>>0]&1){rc=c[C>>2]|0;c[n>>2]=(c[m>>2]|0)+8;qc=c[n>>2]|0;c[o>>2]=rc;c[p>>2]=qc;qc=c[o>>2]|0;rc=c[p>>2]|0;a[r+0>>0]=a[q+0>>0]|0;c[s>>2]=qc;c[t>>2]=rc}if((c[m>>2]|0)==0){rc=c[B>>2]|0;i=f;return rc|0}qc=c[m>>2]|0;c[l>>2]=c[C>>2];c[k>>2]=qc;c[j>>2]=1;qc=c[k>>2]|0;rc=c[j>>2]|0;c[h>>2]=c[l>>2];c[g>>2]=qc;c[v>>2]=rc;Ix(c[g>>2]|0);rc=c[B>>2]|0;i=f;return rc|0}function Zk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0,Uc=0,Vc=0,Wc=0,Xc=0,Yc=0,Zc=0,_c=0,$c=0,ad=0,bd=0,cd=0,dd=0,ed=0,fd=0,gd=0,hd=0,id=0,jd=0,kd=0,ld=0,md=0,nd=0,od=0,pd=0,qd=0,rd=0,sd=0,td=0,ud=0,vd=0,wd=0,xd=0,yd=0,zd=0,Ad=0,Bd=0,Cd=0,Dd=0,Ed=0,Fd=0,Gd=0,Hd=0,Id=0,Jd=0,Kd=0,Ld=0,Md=0,Nd=0,Od=0,Pd=0,Qd=0,Rd=0,Sd=0,Td=0,Ud=0,Vd=0,Wd=0,Xd=0,Yd=0,Zd=0,_d=0,$d=0,ae=0,be=0,ce=0,de=0,ee=0,fe=0,ge=0;g=i;i=i+1264|0;nd=g+808|0;md=g+1228|0;ld=g+1168|0;id=g+232|0;pd=g+260|0;qd=g+408|0;fd=g+1172|0;ed=g+1176|0;dd=g+1180|0;od=g+264|0;rd=g+1024|0;jd=g+1008|0;Hc=g+1188|0;Gc=g+228|0;Ec=g+216|0;Dc=g+1164|0;Cc=g+824|0;Fc=g+672|0;Ic=g+644|0;Lc=g+400|0;Kc=g+380|0;Jc=g+364|0;Mc=g+352|0;Vc=g+252|0;$c=g+248|0;_c=g+240|0;Yc=g+236|0;Zc=g+224|0;Xc=g+56|0;Uc=g+212|0;Sc=g+208|0;Tc=g+1160|0;Wc=g+1032|0;Rc=g+88|0;Pc=g+720|0;Qc=g+668|0;Oc=g+24|0;Bc=g+640|0;Ac=g+628|0;Nc=g+392|0;zc=g;yc=g+376|0;xc=g+32|0;Bb=g+360|0;Cb=g+356|0;Ib=g+348|0;Hb=g+344|0;gb=g+268|0;lb=g+272|0;mb=g+276|0;kb=g+96|0;hb=g+288|0;ib=g+292|0;jb=g+1248|0;sb=g+300|0;tb=g+304|0;sa=g+104|0;ob=g+220|0;pb=g+316|0;qb=g+1249|0;db=g+332|0;eb=g+336|0;fb=g+340|0;ab=g+1156|0;bb=g+1108|0;cb=g+1028|0;nb=g+960|0;Ab=g+820|0;$a=g+792|0;Gb=g+716|0;Fb=g+680|0;cd=g+664|0;Eb=g+660|0;Db=g+656|0;bd=g+648|0;ad=g+636|0;vc=g+632|0;wc=g+624|0;tc=g+616|0;uc=g+412|0;rc=g+416|0;Yb=g+384|0;Xb=g+424|0;Vb=g+428|0;Ub=g+432|0;Tb=g+372|0;Wb=g+440|0;Zb=g+444|0;ac=g+448|0;$b=g+452|0;_b=g+456|0;bc=g+460|0;kc=g+464|0;qc=g+468|0;pc=g+472|0;nc=g+476|0;oc=g+480|0;mc=g+8|0;jc=g+488|0;hc=g+492|0;ic=g+496|0;lc=g+280|0;gc=g+48|0;ec=g+516|0;fc=g+520|0;dc=g+136|0;Sb=g+528|0;Rb=g+532|0;cc=g+536|0;Qb=g+72|0;Pb=g+548|0;Nb=g+184|0;Lb=g+556|0;Mb=g+308|0;Jb=g+564|0;Kb=g+312|0;gd=g+572|0;sc=g+576|0;Ob=g+580|0;hd=g+592|0;ub=g+596|0;vb=g+600|0;_a=g+604|0;rb=g+608|0;Ya=g+612|0;za=g+1184|0;ya=g+1192|0;wa=g+1200|0;va=g+1208|0;ua=g+1104|0;xa=g+1224|0;Aa=g+1232|0;Da=g+1240|0;Ca=g+956|0;Ba=g+952|0;Ea=g+816|0;Na=g+812|0;Ta=g+788|0;Sa=g+776|0;Qa=g+712|0;Ra=g+704|0;Pa=g+80|0;Ma=g+684|0;Ka=g+688|0;La=g+692|0;Oa=g+696|0;Ja=g+120|0;Ha=g+652|0;Ia=g+708|0;Ga=g+112|0;ta=g+724|0;zb=g+728|0;Fa=g+736|0;yb=g+168|0;xb=g+744|0;wb=g+152|0;ud=g+748|0;td=g+752|0;sd=g+756|0;qa=g+760|0;ra=g+764|0;la=g+1216|0;ka=g+772|0;ia=g+420|0;P=g+780|0;Q=g+784|0;O=g+144|0;L=g+796|0;M=g+800|0;Y=g+1250|0;W=g+1244|0;X=g+436|0;V=g+176|0;S=g+828|0;T=g+832|0;U=g+1251|0;fa=g+848|0;ga=g+852|0;ha=g+856|0;ca=g+860|0;da=g+864|0;ea=g+868|0;R=g+872|0;oa=g+876|0;ba=g+880|0;ja=g+884|0;ma=g+888|0;Wa=g+892|0;na=g+896|0;pa=g+900|0;Va=g+904|0;Ua=g+908|0;xd=g+912|0;I=g+916|0;J=g+920|0;C=g+484|0;K=g+924|0;w=g+928|0;q=g+932|0;p=g+936|0;r=g+160|0;u=g+940|0;t=g+944|0;s=g+1252|0;m=g+948|0;n=g+512|0;l=g+16|0;h=g+964|0;j=g+968|0;k=g+1253|0;A=g+976|0;B=g+524|0;o=g+980|0;y=g+984|0;f=g+988|0;z=g+992|0;v=g+996|0;G=g+1e3|0;x=g+1004|0;D=g+544|0;E=g+1012|0;N=g+1016|0;F=g+1020|0;H=g+552|0;aa=g+1040|0;$=g+1044|0;yd=g+1048|0;zd=g+560|0;Ad=g+1052|0;Pd=g+1056|0;Gd=g+1060|0;Bd=g+568|0;Dd=g+1064|0;vd=g+1068|0;Ed=g+1072|0;Cd=g+128|0;Id=g+1080|0;Kd=g+1084|0;Jd=g+1088|0;Fd=g+1096|0;Hd=g+192|0;Nd=g+1112|0;Md=g+1116|0;Ld=g+40|0;Rd=g+1120|0;Td=g+1124|0;Sd=g+1128|0;Od=g+1136|0;Qd=g+200|0;Wd=g+1148|0;Vd=g+256|0;Ud=g+64|0;Zd=g+368|0;Yd=g+244|0;_d=g+676|0;$d=g+620|0;ae=g+1144|0;be=g+404|0;ce=g+768|0;de=g+1212|0;ee=g+1076|0;fe=g+1220|0;ge=g+1152|0;wd=g+1236|0;kd=g+972|0;_=g+500|0;Xd=g+840|0;Za=g+804|0;Xa=g+320|0;Z=g+296|0;c[ge>>2]=d;c[wd>>2]=e;c[fe>>2]=c[ge>>2];c[ee>>2]=(c[fe>>2]|0)+8;c[de>>2]=c[ee>>2];c[kd>>2]=c[de>>2];c[be>>2]=c[kd>>2];c[ce>>2]=1;d=c[ce>>2]|0;c[g+1196>>2]=c[be>>2];c[ae>>2]=d;c[g+1204>>2]=0;d=Gx(c[ae>>2]<<4)|0;e=c[kd>>2]|0;c[_d>>2]=Xd;c[$d>>2]=e;e=c[$d>>2]|0;c[Zd>>2]=c[_d>>2];c[Yd>>2]=e;e=c[Zd>>2]|0;c[e>>2]=c[Yd>>2];a[e+4>>0]=0;a[e+5>>0]=0;a[Ud+0>>0]=a[Xd+0>>0]|0;a[Ud+1>>0]=a[Xd+1>>0]|0;a[Ud+2>>0]=a[Xd+2>>0]|0;a[Ud+3>>0]=a[Xd+3>>0]|0;a[Ud+4>>0]=a[Xd+4>>0]|0;a[Ud+5>>0]=a[Xd+5>>0]|0;a[Ud+6>>0]=a[Xd+6>>0]|0;a[Ud+7>>0]=a[Xd+7>>0]|0;c[Wd>>2]=_;c[Vd>>2]=d;d=c[Wd>>2]|0;e=c[Vd>>2]|0;a[Qd+0>>0]=a[Ud+0>>0]|0;a[Qd+1>>0]=a[Ud+1>>0]|0;a[Qd+2>>0]=a[Ud+2>>0]|0;a[Qd+3>>0]=a[Ud+3>>0]|0;a[Qd+4>>0]=a[Ud+4>>0]|0;a[Qd+5>>0]=a[Ud+5>>0]|0;a[Qd+6>>0]=a[Ud+6>>0]|0;a[Qd+7>>0]=a[Ud+7>>0]|0;c[Td>>2]=d;c[Sd>>2]=e;e=c[Td>>2]|0;c[Rd>>2]=Sd;d=c[c[Rd>>2]>>2]|0;c[Pd>>2]=Qd;Pd=c[Pd>>2]|0;c[Od+0>>2]=c[Pd+0>>2];c[Od+4>>2]=c[Pd+4>>2];a[Ld+0>>0]=a[Od+0>>0]|0;a[Ld+1>>0]=a[Od+1>>0]|0;a[Ld+2>>0]=a[Od+2>>0]|0;a[Ld+3>>0]=a[Od+3>>0]|0;a[Ld+4>>0]=a[Od+4>>0]|0;a[Ld+5>>0]=a[Od+5>>0]|0;a[Ld+6>>0]=a[Od+6>>0]|0;a[Ld+7>>0]=a[Od+7>>0]|0;c[Nd>>2]=e;c[Md>>2]=d;d=c[Nd>>2]|0;e=c[Md>>2]|0;a[Hd+0>>0]=a[Ld+0>>0]|0;a[Hd+1>>0]=a[Ld+1>>0]|0;a[Hd+2>>0]=a[Ld+2>>0]|0;a[Hd+3>>0]=a[Ld+3>>0]|0;a[Hd+4>>0]=a[Ld+4>>0]|0;a[Hd+5>>0]=a[Ld+5>>0]|0;a[Hd+6>>0]=a[Ld+6>>0]|0;a[Hd+7>>0]=a[Ld+7>>0]|0;c[Kd>>2]=d;c[Jd>>2]=e;e=c[Kd>>2]|0;c[Id>>2]=Jd;d=c[c[Id>>2]>>2]|0;c[Gd>>2]=Hd;Gd=c[Gd>>2]|0;c[Fd+0>>2]=c[Gd+0>>2];c[Fd+4>>2]=c[Gd+4>>2];a[Cd+0>>0]=a[Fd+0>>0]|0;a[Cd+1>>0]=a[Fd+1>>0]|0;a[Cd+2>>0]=a[Fd+2>>0]|0;a[Cd+3>>0]=a[Fd+3>>0]|0;a[Cd+4>>0]=a[Fd+4>>0]|0;a[Cd+5>>0]=a[Fd+5>>0]|0;a[Cd+6>>0]=a[Fd+6>>0]|0;a[Cd+7>>0]=a[Fd+7>>0]|0;c[vd>>2]=e;c[Ed>>2]=d;vd=c[vd>>2]|0;c[Dd>>2]=Ed;c[vd>>2]=c[c[Dd>>2]>>2];vd=vd+4|0;c[Bd>>2]=Cd;d=c[Bd>>2]|0;c[vd+0>>2]=c[d+0>>2];c[vd+4>>2]=c[d+4>>2];vd=c[kd>>2]|0;c[Ad>>2]=_;c[zd>>2]=c[Ad>>2];c[yd>>2]=c[zd>>2];c[xd>>2]=(c[c[yd>>2]>>2]|0)+8;d=c[xd>>2]|0;e=c[wd>>2]|0;c[ud>>2]=vd;c[td>>2]=d;c[sd>>2]=e;e=c[td>>2]|0;if((e|0)!=0)c[e>>2]=c[c[sd>>2]>>2];c[jd>>2]=_;c[rd>>2]=c[jd>>2];c[od>>2]=c[rd>>2];a[(c[od>>2]|0)+8>>0]=1;ge=c[kd>>2]|0;c[ld>>2]=_;c[md>>2]=c[ld>>2];c[nd>>2]=c[md>>2];c[id>>2]=(c[c[nd>>2]>>2]|0)+12;id=c[id>>2]|0;c[pd>>2]=ge;c[qd>>2]=id;id=c[qd>>2]|0;if((id|0)!=0)c[id>>2]=0;c[dd>>2]=_;c[ed>>2]=c[dd>>2];c[fd>>2]=c[ed>>2];a[(c[fd>>2]|0)+9>>0]=1;c[gd>>2]=_;ge=c[gd>>2]|0;c[Jb>>2]=hd;c[Kb>>2]=ge;ge=c[Kb>>2]|0;c[Lb>>2]=c[Jb>>2];c[Mb>>2]=ge;c[c[Lb>>2]>>2]=c[Mb>>2];a[Nb+0>>0]=a[hd+0>>0]|0;a[Nb+1>>0]=a[hd+1>>0]|0;a[Nb+2>>0]=a[hd+2>>0]|0;a[Nb+3>>0]=a[hd+3>>0]|0;c[Pb>>2]=Ob;Jb=c[Pb>>2]|0;a[Qb+0>>0]=a[Nb+0>>0]|0;a[Qb+1>>0]=a[Nb+1>>0]|0;a[Qb+2>>0]=a[Nb+2>>0]|0;a[Qb+3>>0]=a[Nb+3>>0]|0;c[Rb>>2]=Jb;Jb=c[Rb>>2]|0;c[Sb>>2]=Qb;c[Tb>>2]=c[c[Sb>>2]>>2];ge=c[Tb>>2]|0;c[Ub>>2]=ge;c[Vb>>2]=c[Ub>>2];c[Wb>>2]=c[c[Vb>>2]>>2];c[Xb>>2]=ge;c[Yb>>2]=c[Xb>>2];c[c[Yb>>2]>>2]=0;ge=c[Wb>>2]|0;c[Zb>>2]=Qb;c[_b>>2]=c[c[Zb>>2]>>2];c[$b>>2]=c[_b>>2];c[ac>>2]=c[$b>>2];c[bc>>2]=(c[ac>>2]|0)+4;fe=c[bc>>2]|0;c[cc+0>>2]=c[fe+0>>2];c[cc+4>>2]=c[fe+4>>2];a[dc+0>>0]=a[cc+0>>0]|0;a[dc+1>>0]=a[cc+1>>0]|0;a[dc+2>>0]=a[cc+2>>0]|0;a[dc+3>>0]=a[cc+3>>0]|0;a[dc+4>>0]=a[cc+4>>0]|0;a[dc+5>>0]=a[cc+5>>0]|0;a[dc+6>>0]=a[cc+6>>0]|0;a[dc+7>>0]=a[cc+7>>0]|0;c[ec>>2]=Jb;c[fc>>2]=ge;ge=c[ec>>2]|0;Jb=c[fc>>2]|0;a[gc+0>>0]=a[dc+0>>0]|0;a[gc+1>>0]=a[dc+1>>0]|0;a[gc+2>>0]=a[dc+2>>0]|0;a[gc+3>>0]=a[dc+3>>0]|0;a[gc+4>>0]=a[dc+4>>0]|0;a[gc+5>>0]=a[dc+5>>0]|0;a[gc+6>>0]=a[dc+6>>0]|0;a[gc+7>>0]=a[dc+7>>0]|0;c[hc>>2]=ge;c[ic>>2]=Jb;Jb=c[hc>>2]|0;c[jc>>2]=ic;ge=c[c[jc>>2]>>2]|0;c[kc>>2]=gc;fe=c[kc>>2]|0;c[lc+0>>2]=c[fe+0>>2];c[lc+4>>2]=c[fe+4>>2];a[mc+0>>0]=a[lc+0>>0]|0;a[mc+1>>0]=a[lc+1>>0]|0;a[mc+2>>0]=a[lc+2>>0]|0;a[mc+3>>0]=a[lc+3>>0]|0;a[mc+4>>0]=a[lc+4>>0]|0;a[mc+5>>0]=a[lc+5>>0]|0;a[mc+6>>0]=a[lc+6>>0]|0;a[mc+7>>0]=a[lc+7>>0]|0;c[nc>>2]=Jb;c[oc>>2]=ge;ge=c[nc>>2]|0;c[pc>>2]=oc;c[ge>>2]=c[c[pc>>2]>>2];ge=ge+4|0;c[qc>>2]=mc;Jb=c[qc>>2]|0;c[ge+0>>2]=c[Jb+0>>2];c[ge+4>>2]=c[Jb+4>>2];c[rc>>2]=Ob;ge=c[rc>>2]|0;c[tc>>2]=sc;c[uc>>2]=ge;ge=c[uc>>2]|0;c[vc>>2]=c[tc>>2];c[wc>>2]=ge;c[c[vc>>2]>>2]=c[wc>>2];a[xc+0>>0]=a[sc+0>>0]|0;a[xc+1>>0]=a[sc+1>>0]|0;a[xc+2>>0]=a[sc+2>>0]|0;a[xc+3>>0]=a[sc+3>>0]|0;c[yc>>2]=Xa;ge=c[yc>>2]|0;a[zc+0>>0]=a[xc+0>>0]|0;a[zc+1>>0]=a[xc+1>>0]|0;a[zc+2>>0]=a[xc+2>>0]|0;a[zc+3>>0]=a[xc+3>>0]|0;c[Ac>>2]=ge;ge=c[Ac>>2]|0;c[Bc>>2]=zc;c[Cc>>2]=c[c[Bc>>2]>>2];Jb=c[Cc>>2]|0;c[Dc>>2]=Jb;c[Ec>>2]=c[Dc>>2];c[Fc>>2]=c[c[Ec>>2]>>2];c[Gc>>2]=Jb;c[Hc>>2]=c[Gc>>2];c[c[Hc>>2]>>2]=0;Jb=c[Fc>>2]|0;c[Ic>>2]=zc;c[Jc>>2]=c[c[Ic>>2]>>2];c[Kc>>2]=c[Jc>>2];c[Lc>>2]=c[Kc>>2];c[Mc>>2]=(c[Lc>>2]|0)+4;fe=c[Mc>>2]|0;c[Nc+0>>2]=c[fe+0>>2];c[Nc+4>>2]=c[fe+4>>2];a[Oc+0>>0]=a[Nc+0>>0]|0;a[Oc+1>>0]=a[Nc+1>>0]|0;a[Oc+2>>0]=a[Nc+2>>0]|0;a[Oc+3>>0]=a[Nc+3>>0]|0;a[Oc+4>>0]=a[Nc+4>>0]|0;a[Oc+5>>0]=a[Nc+5>>0]|0;a[Oc+6>>0]=a[Nc+6>>0]|0;a[Oc+7>>0]=a[Nc+7>>0]|0;c[Pc>>2]=ge;c[Qc>>2]=Jb;Jb=c[Pc>>2]|0;ge=c[Qc>>2]|0;a[Rc+0>>0]=a[Oc+0>>0]|0;a[Rc+1>>0]=a[Oc+1>>0]|0;a[Rc+2>>0]=a[Oc+2>>0]|0;a[Rc+3>>0]=a[Oc+3>>0]|0;a[Rc+4>>0]=a[Oc+4>>0]|0;a[Rc+5>>0]=a[Oc+5>>0]|0;a[Rc+6>>0]=a[Oc+6>>0]|0;a[Rc+7>>0]=a[Oc+7>>0]|0;c[Sc>>2]=Jb;c[Tc>>2]=ge;ge=c[Sc>>2]|0;c[Uc>>2]=Tc;Jb=c[c[Uc>>2]>>2]|0;c[Vc>>2]=Rc;fe=c[Vc>>2]|0;c[Wc+0>>2]=c[fe+0>>2];c[Wc+4>>2]=c[fe+4>>2];a[Xc+0>>0]=a[Wc+0>>0]|0;a[Xc+1>>0]=a[Wc+1>>0]|0;a[Xc+2>>0]=a[Wc+2>>0]|0;a[Xc+3>>0]=a[Wc+3>>0]|0;a[Xc+4>>0]=a[Wc+4>>0]|0;a[Xc+5>>0]=a[Wc+5>>0]|0;a[Xc+6>>0]=a[Wc+6>>0]|0;a[Xc+7>>0]=a[Wc+7>>0]|0;c[Yc>>2]=ge;c[Zc>>2]=Jb;Jb=c[Yc>>2]|0;c[_c>>2]=Zc;c[Jb>>2]=c[c[_c>>2]>>2];Jb=Jb+4|0;c[$c>>2]=Xc;ge=c[$c>>2]|0;c[Jb+0>>2]=c[ge+0>>2];c[Jb+4>>2]=c[ge+4>>2];c[ad>>2]=Ob;c[bd>>2]=c[ad>>2];c[cd>>2]=c[bd>>2];c[Eb>>2]=0;Jb=c[cd>>2]|0;c[Fb>>2]=Jb;c[Gb>>2]=c[Fb>>2];c[Db>>2]=c[c[Gb>>2]>>2];ge=c[Eb>>2]|0;c[Hb>>2]=Jb;c[Ib>>2]=c[Hb>>2];c[c[Ib>>2]>>2]=ge;if((c[Db>>2]|0)!=0){c[Cb>>2]=Jb;c[Bb>>2]=c[Cb>>2];ge=c[Db>>2]|0;c[Ab>>2]=(c[Bb>>2]|0)+4;c[$a>>2]=ge;Ab=c[Ab>>2]|0;if(a[Ab+5>>0]&1){ge=c[Ab>>2]|0;c[nb>>2]=(c[$a>>2]|0)+12;fe=c[nb>>2]|0;c[ob>>2]=ge;c[pb>>2]=fe;fe=c[ob>>2]|0;ge=c[pb>>2]|0;a[sa+0>>0]=a[qb+0>>0]|0;c[sb>>2]=fe;c[tb>>2]=ge}if(a[Ab+4>>0]&1){ge=c[Ab>>2]|0;c[gb>>2]=(c[$a>>2]|0)+8;fe=c[gb>>2]|0;c[hb>>2]=ge;c[ib>>2]=fe;fe=c[hb>>2]|0;ge=c[ib>>2]|0;a[kb+0>>0]=a[jb+0>>0]|0;c[lb>>2]=fe;c[mb>>2]=ge}if((c[$a>>2]|0)!=0){fe=c[$a>>2]|0;c[ab>>2]=c[Ab>>2];c[bb>>2]=fe;c[cb>>2]=1;fe=c[bb>>2]|0;ge=c[cb>>2]|0;c[db>>2]=c[ab>>2];c[eb>>2]=fe;c[fb>>2]=ge;Ix(c[eb>>2]|0)}}c[Ya>>2]=Xa;ge=c[Ya>>2]|0;c[_a>>2]=Za;c[rb>>2]=ge;ge=c[rb>>2]|0;c[ub>>2]=c[_a>>2];c[vb>>2]=ge;c[c[ub>>2]>>2]=c[vb>>2];a[wb+0>>0]=a[Za+0>>0]|0;a[wb+1>>0]=a[Za+1>>0]|0;a[wb+2>>0]=a[Za+2>>0]|0;a[wb+3>>0]=a[Za+3>>0]|0;c[xb>>2]=b;ge=c[xb>>2]|0;a[yb+0>>0]=a[wb+0>>0]|0;a[yb+1>>0]=a[wb+1>>0]|0;a[yb+2>>0]=a[wb+2>>0]|0;a[yb+3>>0]=a[wb+3>>0]|0;c[zb>>2]=ge;ge=c[zb>>2]|0;c[ta>>2]=yb;c[ua>>2]=c[c[ta>>2]>>2];sa=c[ua>>2]|0;c[va>>2]=sa;c[wa>>2]=c[va>>2];c[xa>>2]=c[c[wa>>2]>>2];c[ya>>2]=sa;c[za>>2]=c[ya>>2];c[c[za>>2]>>2]=0;sa=c[xa>>2]|0;c[Aa>>2]=yb;c[Ba>>2]=c[c[Aa>>2]>>2];c[Ca>>2]=c[Ba>>2];c[Da>>2]=c[Ca>>2];c[Ea>>2]=(c[Da>>2]|0)+4;fe=c[Ea>>2]|0;c[Fa+0>>2]=c[fe+0>>2];c[Fa+4>>2]=c[fe+4>>2];a[Ga+0>>0]=a[Fa+0>>0]|0;a[Ga+1>>0]=a[Fa+1>>0]|0;a[Ga+2>>0]=a[Fa+2>>0]|0;a[Ga+3>>0]=a[Fa+3>>0]|0;a[Ga+4>>0]=a[Fa+4>>0]|0;a[Ga+5>>0]=a[Fa+5>>0]|0;a[Ga+6>>0]=a[Fa+6>>0]|0;a[Ga+7>>0]=a[Fa+7>>0]|0;c[Ha>>2]=ge;c[Ia>>2]=sa;sa=c[Ha>>2]|0;ge=c[Ia>>2]|0;a[Ja+0>>0]=a[Ga+0>>0]|0;a[Ja+1>>0]=a[Ga+1>>0]|0;a[Ja+2>>0]=a[Ga+2>>0]|0;a[Ja+3>>0]=a[Ga+3>>0]|0;a[Ja+4>>0]=a[Ga+4>>0]|0;a[Ja+5>>0]=a[Ga+5>>0]|0;a[Ja+6>>0]=a[Ga+6>>0]|0;a[Ja+7>>0]=a[Ga+7>>0]|0;c[Ka>>2]=sa;c[La>>2]=ge;ge=c[Ka>>2]|0;c[Ma>>2]=La;sa=c[c[Ma>>2]>>2]|0;c[Na>>2]=Ja;fe=c[Na>>2]|0;c[Oa+0>>2]=c[fe+0>>2];c[Oa+4>>2]=c[fe+4>>2];a[Pa+0>>0]=a[Oa+0>>0]|0;a[Pa+1>>0]=a[Oa+1>>0]|0;a[Pa+2>>0]=a[Oa+2>>0]|0;a[Pa+3>>0]=a[Oa+3>>0]|0;a[Pa+4>>0]=a[Oa+4>>0]|0;a[Pa+5>>0]=a[Oa+5>>0]|0;a[Pa+6>>0]=a[Oa+6>>0]|0;a[Pa+7>>0]=a[Oa+7>>0]|0;c[Qa>>2]=ge;c[Ra>>2]=sa;sa=c[Qa>>2]|0;c[Sa>>2]=Ra;c[sa>>2]=c[c[Sa>>2]>>2];sa=sa+4|0;c[Ta>>2]=Pa;ge=c[Ta>>2]|0;c[sa+0>>2]=c[ge+0>>2];c[sa+4>>2]=c[ge+4>>2];c[Ua>>2]=Xa;c[Va>>2]=c[Ua>>2];c[Wa>>2]=c[Va>>2];c[na>>2]=0;sa=c[Wa>>2]|0;c[ma>>2]=sa;c[ja>>2]=c[ma>>2];c[pa>>2]=c[c[ja>>2]>>2];ge=c[na>>2]|0;c[ka>>2]=sa;c[la>>2]=c[ka>>2];c[c[la>>2]>>2]=ge;if((c[pa>>2]|0)!=0){c[ra>>2]=sa;c[qa>>2]=c[ra>>2];ja=c[pa>>2]|0;c[oa>>2]=(c[qa>>2]|0)+4;c[ba>>2]=ja;ja=c[oa>>2]|0;if(a[ja+5>>0]&1){ge=c[ja>>2]|0;c[R>>2]=(c[ba>>2]|0)+12;fe=c[R>>2]|0;c[S>>2]=ge;c[T>>2]=fe;fe=c[S>>2]|0;ge=c[T>>2]|0;a[V+0>>0]=a[U+0>>0]|0;c[W>>2]=fe;c[X>>2]=ge}if(a[ja+4>>0]&1){ge=c[ja>>2]|0;c[ia>>2]=(c[ba>>2]|0)+8;fe=c[ia>>2]|0;c[L>>2]=ge;c[M>>2]=fe;fe=c[L>>2]|0;ge=c[M>>2]|0;a[O+0>>0]=a[Y+0>>0]|0;c[P>>2]=fe;c[Q>>2]=ge}if((c[ba>>2]|0)!=0){fe=c[ba>>2]|0;c[ca>>2]=c[ja>>2];c[da>>2]=fe;c[ea>>2]=1;fe=c[da>>2]|0;ge=c[ea>>2]|0;c[fa>>2]=c[ca>>2];c[ga>>2]=fe;c[ha>>2]=ge;Ix(c[ga>>2]|0)}}c[Z>>2]=1;c[$>>2]=_;c[aa>>2]=c[$>>2];c[N>>2]=c[aa>>2];c[F>>2]=0;L=c[N>>2]|0;c[E>>2]=L;c[D>>2]=c[E>>2];c[H>>2]=c[c[D>>2]>>2];ge=c[F>>2]|0;c[K>>2]=L;c[C>>2]=c[K>>2];c[c[C>>2]>>2]=ge;if((c[H>>2]|0)==0){i=g;return}c[J>>2]=L;c[I>>2]=c[J>>2];C=c[H>>2]|0;c[G>>2]=(c[I>>2]|0)+4;c[x>>2]=C;C=c[G>>2]|0;if(a[C+5>>0]&1){ge=c[C>>2]|0;c[v>>2]=(c[x>>2]|0)+12;fe=c[v>>2]|0;c[h>>2]=ge;c[j>>2]=fe;fe=c[h>>2]|0;ge=c[j>>2]|0;a[l+0>>0]=a[k+0>>0]|0;c[m>>2]=fe;c[n>>2]=ge}if(a[C+4>>0]&1){ge=c[C>>2]|0;c[w>>2]=(c[x>>2]|0)+8;fe=c[w>>2]|0;c[u>>2]=ge;c[t>>2]=fe;fe=c[u>>2]|0;ge=c[t>>2]|0;a[r+0>>0]=a[s+0>>0]|0;c[q>>2]=fe;c[p>>2]=ge}if((c[x>>2]|0)==0){i=g;return}fe=c[x>>2]|0;c[y>>2]=c[C>>2];c[f>>2]=fe;c[z>>2]=1;fe=c[f>>2]|0;ge=c[z>>2]|0;c[A>>2]=c[y>>2];c[B>>2]=fe;c[o>>2]=ge;Ix(c[B>>2]|0);i=g;return}function _k(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0.0,Hb=0.0;m=i;i=i+528|0;rb=m+236|0;qb=m+500|0;ib=m+492|0;hb=m+476|0;fb=m+460|0;gb=m+220|0;mb=m+436|0;nb=m+416|0;kb=m+224|0;lb=m+20|0;jb=m+24|0;pb=m+28|0;Ya=m+32|0;Za=m+36|0;Wa=m+40|0;Xa=m+444|0;Va=m+104|0;$a=m+48|0;Ta=m+52|0;Ja=m+56|0;Ma=m+60|0;La=m+64|0;Ka=m+68|0;Qa=m+72|0;Ra=m+76|0;Sa=m+80|0;Na=m+84|0;Oa=m+88|0;Pa=m+92|0;ab=m+96|0;bb=m+100|0;cb=m+440|0;Ua=m+228|0;eb=m+108|0;db=m+112|0;Ia=m+116|0;Ga=m+120|0;Fa=m+124|0;Ea=m+128|0;ja=m+132|0;ia=m+136|0;Ha=m+140|0;sb=m+144|0;tb=m+148|0;ub=m+152|0;vb=m+156|0;wb=m+160|0;xb=m+164|0;yb=m+168|0;ka=m+172|0;sa=m+176|0;ta=m+180|0;ua=m+184|0;qa=m+188|0;ra=m+192|0;pa=m;ma=m+200|0;na=m+204|0;oa=m+520|0;zb=m+480|0;Ab=m+488|0;Bb=m+496|0;Ba=m+504|0;Aa=m+512|0;za=m+232|0;ya=m+516|0;xa=m+240|0;wa=m+244|0;va=m+248|0;Ca=m+252|0;ha=m+256|0;V=m+260|0;U=m+264|0;ga=m+268|0;T=m+272|0;Z=m+276|0;_=m+280|0;X=m+284|0;Y=m+288|0;W=m+292|0;aa=m+296|0;R=m+300|0;ba=m+304|0;P=m+308|0;Q=m+312|0;J=m+316|0;K=m+320|0;M=m+324|0;L=m+328|0;ea=m+332|0;da=m+336|0;G=m+340|0;fa=m+344|0;I=m+348|0;H=m+352|0;F=m+356|0;D=m+360|0;k=m+364|0;j=m+368|0;C=m+372|0;h=m+376|0;y=m+380|0;z=m+384|0;A=m+388|0;u=m+392|0;t=m+396|0;f=m+400|0;v=m+404|0;p=m+408|0;o=m+412|0;n=m+196|0;s=m+420|0;r=m+424|0;q=m+428|0;Cb=m+432|0;Db=m+44|0;Eb=m+8|0;Fb=m+4|0;l=m+12|0;E=m+452|0;x=m+521|0;B=m+456|0;N=m+448|0;ob=m+208|0;_a=m+212|0;Da=m+468|0;la=m+216|0;O=m+484|0;$=m+508|0;S=m+16|0;w=m+464|0;c[Fb>>2]=d;c[l>>2]=e;e=c[Fb>>2]|0;c[Eb>>2]=e;c[Db>>2]=(c[Eb>>2]|0)+12;c[Cb>>2]=c[Db>>2];d=(c[l>>2]|0)+8|0;c[Ab>>2]=c[Cb>>2];c[Bb>>2]=d;d=c[c[Bb>>2]>>2]|0;c[m+472>>2]=c[Ab>>2];c[zb>>2]=d;c[(c[l>>2]|0)+4>>2]=c[zb>>2];c[yb>>2]=e;c[xb>>2]=c[yb>>2];c[wb>>2]=c[xb>>2];c[vb>>2]=c[wb>>2];c[ub>>2]=(c[vb>>2]|0)+4;c[tb>>2]=c[ub>>2];c[sb>>2]=c[tb>>2];c[E>>2]=c[c[sb>>2]>>2];a[x>>0]=0;a:do if((c[E>>2]|0)!=0){d=c[E>>2]|0;c[rb>>2]=c[(c[l>>2]|0)+4>>2];c[qb>>2]=d;d=c[rb>>2]|0;rb=c[qb>>2]|0;if((c[qb>>2]&(c[qb>>2]|0)-1|0)!=0)qb=(d>>>0)%(rb>>>0)|0;else qb=d&rb-1;c[N>>2]=qb;Fb=c[N>>2]|0;c[fb>>2]=e;c[gb>>2]=Fb;Fb=c[gb>>2]|0;c[hb>>2]=c[fb>>2];c[ib>>2]=c[hb>>2];c[B>>2]=c[(c[c[ib>>2]>>2]|0)+(Fb<<2)>>2];Fb=c[B>>2]|0;c[kb>>2]=jb;c[lb>>2]=-1;Eb=c[lb>>2]|0;c[mb>>2]=c[kb>>2];c[nb>>2]=Eb;c[c[mb>>2]>>2]=0;c[ob>>2]=c[jb>>2];c[pb>>2]=ob;if((Fb|0)!=0){c[B>>2]=c[c[B>>2]>>2];while(1){Fb=c[B>>2]|0;c[Wa>>2]=Va;c[Xa>>2]=-1;Eb=c[Xa>>2]|0;c[Ya>>2]=c[Wa>>2];c[Za>>2]=Eb;c[c[Ya>>2]>>2]=0;c[_a>>2]=c[Va>>2];c[$a>>2]=_a;if((Fb|0)==0)break a;gb=c[E>>2]|0;c[Ta>>2]=c[(c[B>>2]|0)+4>>2];c[Ja>>2]=gb;gb=c[Ta>>2]|0;fb=c[Ja>>2]|0;if((c[Ja>>2]&(c[Ja>>2]|0)-1|0)!=0)fb=(gb>>>0)%(fb>>>0)|0;else fb=gb&fb-1;if((fb|0)!=(c[N>>2]|0))break a;c[Ka>>2]=e;c[La>>2]=(c[Ka>>2]|0)+16;c[Ma>>2]=c[La>>2];Fb=(c[B>>2]|0)+8|0;Eb=(c[l>>2]|0)+8|0;c[Na>>2]=c[Ma>>2];c[Oa>>2]=Fb;c[Pa>>2]=Eb;Eb=c[Oa>>2]|0;Fb=c[Pa>>2]|0;c[Qa>>2]=c[Na>>2];c[Ra>>2]=Eb;c[Sa>>2]=Fb;if((c[c[Ra>>2]>>2]|0)==(c[c[Sa>>2]>>2]|0))break;c[B>>2]=c[c[B>>2]>>2]}Fb=c[B>>2]|0;c[f>>2]=w;c[v>>2]=Fb;Fb=c[f>>2]|0;Db=c[v>>2]|0;c[u>>2]=Fb;c[t>>2]=Db;Db=c[u>>2]|0;Fb=c[t>>2]|0;c[Db>>2]=Fb;c[s>>2]=b;c[r>>2]=w;c[q>>2]=x;Db=c[s>>2]|0;Fb=c[q>>2]|0;Eb=c[r>>2]|0;c[p>>2]=Db;c[o>>2]=Eb;c[n>>2]=Fb;Fb=c[p>>2]|0;Eb=c[o>>2]|0;c[Fb+0>>2]=c[Eb+0>>2];Fb=Fb+4|0;Eb=c[n>>2]|0;Eb=a[Eb>>0]|0;Eb=Eb&1;Eb=Eb&1;a[Fb>>0]=Eb;i=m;return}}while(0);c[cb>>2]=e;c[bb>>2]=(c[cb>>2]|0)+12;c[ab>>2]=c[bb>>2];Hb=+(((c[c[ab>>2]>>2]|0)+1|0)>>>0);Gb=+((c[E>>2]|0)>>>0);c[db>>2]=e;c[eb>>2]=(c[db>>2]|0)+16;c[Ua>>2]=c[eb>>2];if(!(!(Hb>Gb*+g[c[Ua>>2]>>2])?(c[E>>2]|0)!=0:0)){Ja=c[E>>2]<<1;c[Ia>>2]=c[E>>2];if((c[Ia>>2]|0)>>>0>2)Ia=(c[Ia>>2]&(c[Ia>>2]|0)-1|0)!=0^1;else Ia=0;c[Da>>2]=Ja+((Ia^1)&1);c[Ea>>2]=e;c[Fa>>2]=(c[Ea>>2]|0)+12;c[Ga>>2]=c[Fa>>2];Hb=+(((c[c[Ga>>2]>>2]|0)+1|0)>>>0);c[Ha>>2]=e;c[ia>>2]=(c[Ha>>2]|0)+16;c[ja>>2]=c[ia>>2];g[ka>>2]=Hb/+g[c[ja>>2]>>2];c[la>>2]=~~+ca(+(+g[ka>>2]))>>>0;c[ma>>2]=Da;c[na>>2]=la;ja=c[ma>>2]|0;ia=c[na>>2]|0;a[pa+0>>0]=a[oa+0>>0]|0;c[qa>>2]=ja;c[ra>>2]=ia;ia=c[qa>>2]|0;ja=c[ra>>2]|0;c[sa>>2]=pa;c[ta>>2]=ia;c[ua>>2]=ja;$k(e,c[((c[c[ta>>2]>>2]|0)>>>0<(c[c[ua>>2]>>2]|0)>>>0?c[ra>>2]|0:c[qa>>2]|0)>>2]|0);c[va>>2]=e;c[wa>>2]=c[va>>2];c[xa>>2]=c[wa>>2];c[ya>>2]=c[xa>>2];c[za>>2]=(c[ya>>2]|0)+4;c[Aa>>2]=c[za>>2];c[Ba>>2]=c[Aa>>2];c[E>>2]=c[c[Ba>>2]>>2];ja=c[E>>2]|0;c[Ca>>2]=c[(c[l>>2]|0)+4>>2];c[ha>>2]=ja;ja=c[Ca>>2]|0;ia=c[ha>>2]|0;if((c[ha>>2]&(c[ha>>2]|0)-1|0)!=0)ha=(ja>>>0)%(ia>>>0)|0;else ha=ja&ia-1;c[N>>2]=ha}Fb=c[N>>2]|0;c[ga>>2]=e;c[T>>2]=Fb;Fb=c[T>>2]|0;c[U>>2]=c[ga>>2];c[V>>2]=c[U>>2];c[O>>2]=c[(c[c[V>>2]>>2]|0)+(Fb<<2)>>2];Fb=c[O>>2]|0;c[X>>2]=W;c[Y>>2]=-1;Eb=c[Y>>2]|0;c[Z>>2]=c[X>>2];c[_>>2]=Eb;c[c[Z>>2]>>2]=0;c[$>>2]=c[W>>2];c[aa>>2]=$;if((Fb|0)==0){c[ba>>2]=e+8;c[R>>2]=c[ba>>2];c[Q>>2]=c[R>>2];c[P>>2]=c[Q>>2];c[O>>2]=c[P>>2];c[c[l>>2]>>2]=c[c[O>>2]>>2];c[c[O>>2]>>2]=c[l>>2];Eb=c[O>>2]|0;Fb=c[N>>2]|0;c[M>>2]=e;c[L>>2]=Fb;Fb=c[L>>2]|0;c[K>>2]=c[M>>2];c[J>>2]=c[K>>2];c[(c[c[J>>2]>>2]|0)+(Fb<<2)>>2]=Eb;Fb=c[c[l>>2]>>2]|0;c[G>>2]=I;c[fa>>2]=-1;Eb=c[fa>>2]|0;c[ea>>2]=c[G>>2];c[da>>2]=Eb;c[c[ea>>2]>>2]=0;c[S>>2]=c[I>>2];c[H>>2]=S;if((Fb|0)!=0){G=c[l>>2]|0;E=c[E>>2]|0;c[F>>2]=c[(c[c[l>>2]>>2]|0)+4>>2];c[D>>2]=E;F=c[F>>2]|0;E=c[D>>2]|0;if((c[D>>2]&(c[D>>2]|0)-1|0)!=0)D=(F>>>0)%(E>>>0)|0;else D=F&E-1;c[C>>2]=e;c[h>>2]=D;Fb=c[h>>2]|0;c[j>>2]=c[C>>2];c[k>>2]=c[j>>2];c[(c[c[k>>2]>>2]|0)+(Fb<<2)>>2]=G}}else{c[c[l>>2]>>2]=c[c[O>>2]>>2];c[c[O>>2]>>2]=c[l>>2]}c[B>>2]=c[l>>2];c[A>>2]=e;c[z>>2]=(c[A>>2]|0)+12;c[y>>2]=c[z>>2];Fb=c[y>>2]|0;c[Fb>>2]=(c[Fb>>2]|0)+1;a[x>>0]=1;Fb=c[B>>2]|0;c[f>>2]=w;c[v>>2]=Fb;Fb=c[f>>2]|0;Db=c[v>>2]|0;c[u>>2]=Fb;c[t>>2]=Db;Db=c[u>>2]|0;Fb=c[t>>2]|0;c[Db>>2]=Fb;c[s>>2]=b;c[r>>2]=w;c[q>>2]=x;Db=c[s>>2]|0;Fb=c[q>>2]|0;Eb=c[r>>2]|0;c[p>>2]=Db;c[o>>2]=Eb;c[n>>2]=Fb;Fb=c[p>>2]|0;Eb=c[o>>2]|0;c[Fb+0>>2]=c[Eb+0>>2];Fb=Fb+4|0;Eb=c[n>>2]|0;Eb=a[Eb>>0]|0;Eb=Eb&1;Eb=Eb&1;a[Fb>>0]=Eb;i=m;return}function $k(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0.0;f=i;i=i+160|0;y=f+52|0;x=f+108|0;w=f+96|0;t=f+84|0;B=f+48|0;z=f+8|0;E=f+12|0;D=f+88|0;C=f+44|0;H=f+20|0;G=f+24|0;F=f+28|0;v=f+32|0;u=f+104|0;A=f+112|0;I=f+120|0;o=f+128|0;p=f+136|0;q=f+140|0;m=f+56|0;e=f+60|0;l=f;h=f+68|0;j=f+72|0;k=f+144|0;J=f+80|0;Q=f+16|0;P=f+4|0;O=f+92|0;N=f+100|0;M=f+36|0;L=f+40|0;K=f+116|0;R=f+64|0;n=f+124|0;r=f+132|0;s=f+76|0;c[R>>2]=b;c[n>>2]=d;b=c[R>>2]|0;if((c[n>>2]|0)!=1){if((c[n>>2]&(c[n>>2]|0)-1|0)!=0)c[n>>2]=Bn(c[n>>2]|0)|0}else c[n>>2]=2;c[K>>2]=b;c[L>>2]=c[K>>2];c[M>>2]=c[L>>2];c[N>>2]=c[M>>2];c[O>>2]=(c[N>>2]|0)+4;c[P>>2]=c[O>>2];c[Q>>2]=c[P>>2];c[r>>2]=c[c[Q>>2]>>2];K=c[n>>2]|0;if((c[n>>2]|0)>>>0>(c[r>>2]|0)>>>0){al(b,K);i=f;return}if(!(K>>>0<(c[r>>2]|0)>>>0)){i=f;return}c[J>>2]=c[r>>2];if((c[J>>2]|0)>>>0>2?(c[J>>2]&(c[J>>2]|0)-1|0)!=0^1:0){c[A>>2]=b;c[u>>2]=(c[A>>2]|0)+12;c[v>>2]=c[u>>2];S=+((c[c[v>>2]>>2]|0)>>>0);c[w>>2]=b;c[x>>2]=(c[w>>2]|0)+16;c[y>>2]=c[x>>2];g[t>>2]=S/+g[c[y>>2]>>2];c[z>>2]=~~+ca(+(+g[t>>2]))>>>0;c[B>>2]=(c[z>>2]|0)-1;t=1<<32-(pz(c[B>>2]|0)|0)}else{c[C>>2]=b;c[D>>2]=(c[C>>2]|0)+12;c[E>>2]=c[D>>2];S=+((c[c[E>>2]>>2]|0)>>>0);c[F>>2]=b;c[G>>2]=(c[F>>2]|0)+16;c[H>>2]=c[G>>2];g[I>>2]=S/+g[c[H>>2]>>2];t=Bn(~~+ca(+(+g[I>>2]))>>>0)|0}c[s>>2]=t;c[h>>2]=n;c[j>>2]=s;R=c[h>>2]|0;d=c[j>>2]|0;a[l+0>>0]=a[k+0>>0]|0;c[m>>2]=R;c[e>>2]=d;d=c[m>>2]|0;R=c[e>>2]|0;c[o>>2]=l;c[p>>2]=d;c[q>>2]=R;c[n>>2]=c[((c[c[p>>2]>>2]|0)>>>0<(c[c[q>>2]>>2]|0)>>>0?c[e>>2]|0:c[m>>2]|0)>>2];if(!((c[n>>2]|0)>>>0<(c[r>>2]|0)>>>0)){i=f;return}al(b,c[n>>2]|0);i=f;return}function al(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0;ea=i;i=i+528|0;kb=ea+232|0;hb=ea+220|0;ib=ea+464|0;mb=ea+476|0;nb=ea+516|0;ob=ea+508|0;lb=ea+20|0;qb=ea+28|0;rb=ea+32|0;sb=ea+36|0;ka=ea+40|0;Na=ea+452|0;ab=ea+44|0;eb=ea+48|0;Xa=ea+52|0;Wa=ea+56|0;Va=ea+60|0;$a=ea+68|0;Ya=ea+76|0;Za=ea+80|0;_a=ea+84|0;Ua=ea+88|0;Ta=ea+92|0;Sa=ea+96|0;Qa=ea+100|0;Ra=ea+448|0;db=ea+104|0;cb=ea+108|0;gb=ea+112|0;bb=ea+116|0;Pa=ea+120|0;Ja=ea+124|0;Ia=ea+128|0;Ha=ea+132|0;Ma=ea+136|0;La=ea+140|0;Ka=ea+144|0;za=ea+148|0;Aa=ea+152|0;xa=ea+156|0;ya=ea+160|0;wa=ea+164|0;Ca=ea+168|0;Ga=ea+172|0;Fa=ea+176|0;Da=ea+180|0;Ea=ea+184|0;Oa=ea+188|0;la=ea+192|0;fb=ea+196|0;ma=ea+200|0;ra=ea+204|0;sa=ea+208|0;pa=ea+472|0;qa=ea+480|0;oa=ea+488|0;ua=ea+496|0;na=ea+504|0;ja=ea+512|0;ha=ea+520|0;ga=ea+524|0;ia=ea+240|0;fa=ea+244|0;z=ea+248|0;A=ea+252|0;x=ea+256|0;y=ea+260|0;w=ea+264|0;C=ea+268|0;u=ea+272|0;v=ea+276|0;k=ea+280|0;j=ea+284|0;g=ea+288|0;h=ea+292|0;o=ea+296|0;p=ea+300|0;m=ea+304|0;n=ea+308|0;l=ea+312|0;r=ea+316|0;G=ea+320|0;F=ea+324|0;D=ea+328|0;E=ea+332|0;L=ea+336|0;M=ea+340|0;J=ea+344|0;K=ea+348|0;d=ea+352|0;O=ea+356|0;Z=ea+360|0;Y=ea+364|0;X=ea+368|0;ba=ea+372|0;ca=ea+376|0;da=ea+380|0;_=ea+384|0;$=ea+388|0;aa=ea+392|0;S=ea+396|0;R=ea+400|0;P=ea+404|0;Q=ea+408|0;W=ea+412|0;V=ea+416|0;T=ea+420|0;U=ea+424|0;tb=ea+428|0;ub=ea+432|0;vb=ea+436|0;wb=ea+440|0;t=ea+16|0;jb=ea+8|0;pb=ea+460|0;va=ea+4|0;Ba=ea;I=ea+12|0;e=ea+456|0;ta=ea+468|0;f=ea+212|0;s=ea+216|0;B=ea+484|0;q=ea+224|0;H=ea+492|0;N=ea+444|0;c[wb>>2]=a;c[t>>2]=b;a=c[wb>>2]|0;c[vb>>2]=a;c[ub>>2]=c[vb>>2];c[tb>>2]=c[ub>>2];c[sb>>2]=(c[tb>>2]|0)+4;c[rb>>2]=c[sb>>2];c[qb>>2]=c[rb>>2];c[jb>>2]=c[qb>>2];if((c[t>>2]|0)>>>0>0){wb=c[t>>2]|0;c[hb>>2]=c[jb>>2];c[ib>>2]=wb;wb=c[ib>>2]|0;c[ea+236>>2]=c[hb>>2];c[kb>>2]=wb;c[ea+228>>2]=0;hb=Gx(c[kb>>2]<<2)|0}else{c[nb>>2]=lb;c[ob>>2]=-1;hb=c[ob>>2]|0;c[mb>>2]=c[nb>>2];c[ea+500>>2]=hb;c[c[mb>>2]>>2]=0;c[pb>>2]=c[lb>>2];c[ea+24>>2]=pb;hb=0}c[gb>>2]=a;c[bb>>2]=hb;gb=c[gb>>2]|0;c[cb>>2]=gb;c[db>>2]=c[cb>>2];c[Pa>>2]=c[c[db>>2]>>2];wb=c[bb>>2]|0;c[eb>>2]=gb;c[ab>>2]=c[eb>>2];c[c[ab>>2]>>2]=wb;if((c[Pa>>2]|0)!=0){c[Na>>2]=gb;c[ka>>2]=c[Na>>2];vb=c[Pa>>2]|0;c[Qa>>2]=(c[ka>>2]|0)+4;c[Ra>>2]=vb;vb=c[Qa>>2]|0;c[Sa>>2]=vb;c[Ta>>2]=c[Sa>>2];c[Ua>>2]=c[Ta>>2];ub=c[Ua>>2]|0;wb=c[Ra>>2]|0;c[Va>>2]=vb;c[Wa>>2]=c[Va>>2];c[Xa>>2]=c[Wa>>2];vb=c[c[Xa>>2]>>2]|0;c[Ya>>2]=ub;c[Za>>2]=wb;c[_a>>2]=vb;vb=c[Za>>2]|0;wb=c[_a>>2]|0;c[ea+64>>2]=c[Ya>>2];c[$a>>2]=vb;c[ea+72>>2]=wb;Ix(c[$a>>2]|0)}wb=c[t>>2]|0;c[Ha>>2]=a;c[Ia>>2]=c[Ha>>2];c[Ja>>2]=c[Ia>>2];c[Ka>>2]=(c[Ja>>2]|0)+4;c[La>>2]=c[Ka>>2];c[Ma>>2]=c[La>>2];c[c[Ma>>2]>>2]=wb;if(!((c[t>>2]|0)>>>0>0)){i=ea;return}c[va>>2]=0;while(1){if(!((c[va>>2]|0)>>>0<(c[t>>2]|0)>>>0))break;c[xa>>2]=wa;c[ya>>2]=-1;wb=c[ya>>2]|0;c[za>>2]=c[xa>>2];c[Aa>>2]=wb;c[c[za>>2]>>2]=0;c[Ba>>2]=c[wa>>2];c[Ca>>2]=Ba;wb=c[va>>2]|0;c[Da>>2]=a;c[Ea>>2]=wb;wb=c[Ea>>2]|0;c[Fa>>2]=c[Da>>2];c[Ga>>2]=c[Fa>>2];c[(c[c[Ga>>2]>>2]|0)+(wb<<2)>>2]=0;c[va>>2]=(c[va>>2]|0)+1}c[la>>2]=a+8;c[Oa>>2]=c[la>>2];c[ma>>2]=c[Oa>>2];c[fb>>2]=c[ma>>2];c[I>>2]=c[fb>>2];c[e>>2]=c[c[I>>2]>>2];wb=c[e>>2]|0;c[pa>>2]=oa;c[qa>>2]=-1;vb=c[qa>>2]|0;c[ra>>2]=c[pa>>2];c[sa>>2]=vb;c[c[ra>>2]>>2]=0;c[ta>>2]=c[oa>>2];c[ua>>2]=ta;if((wb|0)==0){i=ea;return}la=c[t>>2]|0;c[na>>2]=c[(c[e>>2]|0)+4>>2];c[ja>>2]=la;la=c[na>>2]|0;ka=c[ja>>2]|0;if((c[ja>>2]&(c[ja>>2]|0)-1|0)!=0)ja=(la>>>0)%(ka>>>0)|0;else ja=la&ka-1;c[f>>2]=ja;vb=c[I>>2]|0;wb=c[f>>2]|0;c[ia>>2]=a;c[fa>>2]=wb;wb=c[fa>>2]|0;c[ga>>2]=c[ia>>2];c[ha>>2]=c[ga>>2];c[(c[c[ha>>2]>>2]|0)+(wb<<2)>>2]=vb;c[s>>2]=c[f>>2];c[I>>2]=c[e>>2];c[e>>2]=c[c[e>>2]>>2];while(1){wb=c[e>>2]|0;c[x>>2]=w;c[y>>2]=-1;vb=c[y>>2]|0;c[z>>2]=c[x>>2];c[A>>2]=vb;c[c[z>>2]>>2]=0;c[B>>2]=c[w>>2];c[C>>2]=B;if((wb|0)==0)break;ga=c[t>>2]|0;c[u>>2]=c[(c[e>>2]|0)+4>>2];c[v>>2]=ga;ga=c[u>>2]|0;fa=c[v>>2]|0;if((c[v>>2]&(c[v>>2]|0)-1|0)!=0)fa=(ga>>>0)%(fa>>>0)|0;else fa=ga&fa-1;c[f>>2]=fa;do if((c[f>>2]|0)==(c[s>>2]|0))c[I>>2]=c[e>>2];else{wb=c[f>>2]|0;c[g>>2]=a;c[h>>2]=wb;wb=c[h>>2]|0;c[j>>2]=c[g>>2];c[k>>2]=c[j>>2];wb=c[(c[c[k>>2]>>2]|0)+(wb<<2)>>2]|0;c[m>>2]=l;c[n>>2]=-1;vb=c[n>>2]|0;c[o>>2]=c[m>>2];c[p>>2]=vb;c[c[o>>2]>>2]=0;c[q>>2]=c[l>>2];c[r>>2]=q;if((wb|0)==0){vb=c[I>>2]|0;wb=c[f>>2]|0;c[D>>2]=a;c[E>>2]=wb;wb=c[E>>2]|0;c[F>>2]=c[D>>2];c[G>>2]=c[F>>2];c[(c[c[G>>2]>>2]|0)+(wb<<2)>>2]=vb;c[I>>2]=c[e>>2];c[s>>2]=c[f>>2];break}c[H>>2]=c[e>>2];while(1){wb=c[c[H>>2]>>2]|0;c[J>>2]=d;c[K>>2]=-1;vb=c[K>>2]|0;c[L>>2]=c[J>>2];c[M>>2]=vb;c[c[L>>2]>>2]=0;c[N>>2]=c[d>>2];c[O>>2]=N;if((wb|0)==0)break;c[X>>2]=a;c[Y>>2]=(c[X>>2]|0)+16;c[Z>>2]=c[Y>>2];wb=(c[e>>2]|0)+8|0;vb=(c[c[H>>2]>>2]|0)+8|0;c[_>>2]=c[Z>>2];c[$>>2]=wb;c[aa>>2]=vb;vb=c[$>>2]|0;wb=c[aa>>2]|0;c[ba>>2]=c[_>>2];c[ca>>2]=vb;c[da>>2]=wb;if((c[c[ca>>2]>>2]|0)!=(c[c[da>>2]>>2]|0))break;c[H>>2]=c[c[H>>2]>>2]}c[c[I>>2]>>2]=c[c[H>>2]>>2];vb=c[f>>2]|0;c[P>>2]=a;c[Q>>2]=vb;vb=c[Q>>2]|0;c[R>>2]=c[P>>2];c[S>>2]=c[R>>2];c[c[H>>2]>>2]=c[c[(c[c[S>>2]>>2]|0)+(vb<<2)>>2]>>2];vb=c[e>>2]|0;wb=c[f>>2]|0;c[T>>2]=a;c[U>>2]=wb;wb=c[U>>2]|0;c[V>>2]=c[T>>2];c[W>>2]=c[V>>2];c[c[(c[c[W>>2]>>2]|0)+(wb<<2)>>2]>>2]=vb}while(0);c[e>>2]=c[c[I>>2]>>2]}i=ea;return}function bl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0;s=i;i=i+272|0;la=s+252|0;ma=s+244|0;na=s+196|0;ea=s+104|0;fa=s+108|0;ga=s+236|0;ha=s+204|0;ia=s+16|0;ja=s+20|0;ka=s+24|0;ca=s+28|0;ba=s+32|0;U=s+36|0;T=s+40|0;S=s+200|0;X=s+44|0;Y=s+48|0;Z=s+52|0;W=s+56|0;aa=s+60|0;V=s+64|0;$=s+68|0;P=s+72|0;Q=s+76|0;N=s+80|0;O=s+84|0;M=s+88|0;K=s+224|0;e=s+232|0;L=s+240|0;z=s+248|0;y=s+256|0;x=s+264|0;F=s+112|0;G=s+116|0;H=s+120|0;C=s+124|0;D=s+128|0;E=s+132|0;v=s+136|0;w=s+140|0;t=s+144|0;u=s+148|0;n=s+152|0;q=s+156|0;r=s+160|0;o=s+164|0;p=s+168|0;k=s+172|0;l=s+176|0;h=s+180|0;j=s+184|0;g=s+188|0;f=s+192|0;m=s+12|0;oa=s+8|0;pa=s+216|0;qa=s+92|0;ra=s+220|0;B=s+4|0;da=s+212|0;J=s+96|0;I=s+228|0;A=s+208|0;_=s;R=s+100|0;c[ra>>2]=b;c[B>>2]=d;d=c[ra>>2]|0;c[qa>>2]=d;c[pa>>2]=(c[qa>>2]|0)+12;c[oa>>2]=c[pa>>2];b=c[B>>2]|0;c[ma>>2]=c[oa>>2];c[na>>2]=b;b=c[c[na>>2]>>2]|0;c[s+260>>2]=c[ma>>2];c[la>>2]=b;c[da>>2]=c[la>>2];c[ka>>2]=d;c[ja>>2]=c[ka>>2];c[ia>>2]=c[ja>>2];c[ha>>2]=c[ia>>2];c[ga>>2]=(c[ha>>2]|0)+4;c[fa>>2]=c[ga>>2];c[ea>>2]=c[fa>>2];c[J>>2]=c[c[ea>>2]>>2];a:do if((c[J>>2]|0)!=0){ra=c[J>>2]|0;c[ca>>2]=c[da>>2];c[ba>>2]=ra;da=c[ca>>2]|0;ca=c[ba>>2]|0;if((c[ba>>2]&(c[ba>>2]|0)-1|0)!=0)ba=(da>>>0)%(ca>>>0)|0;else ba=da&ca-1;c[I>>2]=ba;ra=c[I>>2]|0;c[S>>2]=d;c[X>>2]=ra;ra=c[X>>2]|0;c[T>>2]=c[S>>2];c[U>>2]=c[T>>2];c[A>>2]=c[(c[c[U>>2]>>2]|0)+(ra<<2)>>2];ra=c[A>>2]|0;c[W>>2]=V;c[aa>>2]=-1;qa=c[aa>>2]|0;c[Y>>2]=c[W>>2];c[Z>>2]=qa;c[c[Y>>2]>>2]=0;c[_>>2]=c[V>>2];c[$>>2]=_;if((ra|0)!=0){c[A>>2]=c[c[A>>2]>>2];while(1){ra=c[A>>2]|0;c[N>>2]=M;c[O>>2]=-1;qa=c[O>>2]|0;c[P>>2]=c[N>>2];c[Q>>2]=qa;c[c[P>>2]>>2]=0;c[R>>2]=c[M>>2];c[K>>2]=R;if((ra|0)==0)break a;T=c[J>>2]|0;c[e>>2]=c[(c[A>>2]|0)+4>>2];c[L>>2]=T;T=c[e>>2]|0;S=c[L>>2]|0;if((c[L>>2]&(c[L>>2]|0)-1|0)!=0)S=(T>>>0)%(S>>>0)|0;else S=T&S-1;if((S|0)!=(c[I>>2]|0))break a;c[x>>2]=d;c[y>>2]=(c[x>>2]|0)+16;c[z>>2]=c[y>>2];S=(c[A>>2]|0)+8|0;ra=c[B>>2]|0;c[C>>2]=c[z>>2];c[D>>2]=S;c[E>>2]=ra;ra=c[D>>2]|0;S=c[E>>2]|0;c[F>>2]=c[C>>2];c[G>>2]=ra;c[H>>2]=S;S=c[A>>2]|0;if((c[c[G>>2]>>2]|0)==(c[c[H>>2]>>2]|0))break;c[A>>2]=c[S>>2]}c[t>>2]=a;c[u>>2]=S;ra=c[u>>2]|0;c[v>>2]=c[t>>2];c[w>>2]=ra;c[c[v>>2]>>2]=c[w>>2];i=s;return}}while(0);c[f>>2]=d;c[h>>2]=g;c[j>>2]=-1;ra=c[j>>2]|0;c[k>>2]=c[h>>2];c[l>>2]=ra;c[c[k>>2]>>2]=0;c[m>>2]=c[g>>2];c[n>>2]=m;c[o>>2]=a;c[p>>2]=0;ra=c[p>>2]|0;c[q>>2]=c[o>>2];c[r>>2]=ra;c[c[q>>2]>>2]=c[r>>2];i=s;return}function cl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0,Uc=0,Vc=0,Wc=0,Xc=0,Yc=0,Zc=0,_c=0,$c=0,ad=0,bd=0,cd=0,dd=0,ed=0,fd=0,gd=0,hd=0,id=0,jd=0,kd=0,ld=0,md=0,nd=0,od=0,pd=0,qd=0,rd=0,sd=0,td=0,ud=0,vd=0,wd=0,xd=0,yd=0,zd=0,Ad=0,Bd=0,Cd=0,Dd=0,Ed=0,Fd=0,Gd=0,Hd=0,Id=0,Jd=0,Kd=0,Ld=0,Md=0,Nd=0,Od=0,Pd=0,Qd=0,Rd=0,Sd=0,Td=0,Ud=0,Vd=0,Wd=0,Xd=0,Yd=0,Zd=0,_d=0,$d=0,ae=0,be=0,ce=0,de=0,ee=0,fe=0,ge=0;g=i;i=i+1248|0;qa=g+768|0;ra=g+1208|0;la=g+1164|0;ka=g+1144|0;ia=g+228|0;P=g+256|0;Q=g+1148|0;O=g+144|0;L=g+1152|0;M=g+1156|0;Y=g+1236|0;W=g+1068|0;X=g+396|0;V=g+48|0;S=g+212|0;T=g+1140|0;U=g+1237|0;fa=g+636|0;ga=g+608|0;ha=g+388|0;ca=g+376|0;da=g+360|0;ea=g+348|0;R=g+248|0;oa=g+244|0;ba=g+236|0;ja=g+232|0;ma=g+224|0;Wa=g+216|0;na=g+208|0;pa=g+204|0;Va=g+1136|0;Ua=g+1076|0;za=g+868|0;ya=g+708|0;wa=g+632|0;va=g+620|0;ua=g+604|0;xa=g+588|0;Aa=g+384|0;Da=g+380|0;Ca=g+372|0;Ba=g+368|0;Ea=g+356|0;Na=g+352|0;Ta=g+344|0;Sa=g+340|0;Qa=g+264|0;Ra=g+268|0;Pa=g+32|0;Ma=g+276|0;Ka=g+280|0;La=g+284|0;Oa=g+288|0;Ja=g+56|0;Ha=g+220|0;Ia=g+304|0;Ga=g+16|0;ta=g+312|0;zb=g+316|0;Fa=g+320|0;yb=g+168|0;xb=g+336|0;wb=g+200|0;ub=g+1120|0;vb=g+1072|0;_a=g+1048|0;rb=g+864|0;Ya=g+760|0;Bb=g+704|0;Cb=g+644|0;Ib=g+628|0;Hb=g+624|0;gb=g+616|0;lb=g+612|0;mb=g+600|0;kb=g+112|0;hb=g+584|0;ib=g+412|0;jb=g+1238|0;sb=g+404|0;tb=g+408|0;sa=g+64|0;ob=g+416|0;pb=g+420|0;qb=g+1239|0;db=g+432|0;eb=g+436|0;fb=g+440|0;ab=g+444|0;bb=g+448|0;cb=g+452|0;nb=g+456|0;Ab=g+460|0;$a=g+464|0;Gb=g+468|0;Fb=g+472|0;cd=g+476|0;Eb=g+480|0;Db=g+272|0;bd=g+488|0;ad=g+492|0;Hc=g+496|0;Gc=g+500|0;Ec=g+504|0;Dc=g+508|0;Cc=g+512|0;Fc=g+516|0;Ic=g+520|0;Lc=g+296|0;Kc=g+528|0;Jc=g+300|0;Mc=g+536|0;Vc=g+540|0;$c=g+544|0;_c=g+308|0;Yc=g+552|0;Zc=g+556|0;Xc=g+184|0;Uc=g+564|0;Sc=g+568|0;Tc=g+572|0;Wc=g+576|0;Rc=g+192|0;Pc=g+592|0;Qc=g+1160|0;Oc=g+104|0;Bc=g+1176|0;Ac=g+1184|0;Nc=g+1192|0;zc=g+160|0;yc=g+1212|0;xc=g+152|0;vc=g+1044|0;wc=g+1012|0;tc=g+860|0;uc=g+1232|0;rc=g+756|0;Yb=g+744|0;Xb=g+700|0;Vb=g+648|0;Ub=g+652|0;Tb=g+656|0;Wb=g+660|0;Zb=g+664|0;ac=g+668|0;$b=g+672|0;_b=g+676|0;bc=g+680|0;kc=g+684|0;qc=g+688|0;pc=g+692|0;nc=g+696|0;oc=g+596|0;mc=g+120|0;jc=g+712|0;hc=g+716|0;ic=g+1168|0;lc=g+728|0;gc=g+24|0;ec=g+736|0;fc=g+740|0;dc=g;Sb=g+748|0;Rb=g+752|0;cc=g+1224|0;Qb=g+80|0;Pb=g+764|0;Nb=g+88|0;Lb=g+772|0;Mb=g+776|0;Jb=g+780|0;Kb=g+784|0;gd=g+788|0;sc=g+792|0;Ob=g+796|0;hd=g+808|0;fd=g+812|0;ed=g+816|0;dd=g+820|0;qd=g+824|0;rd=g+828|0;I=g+832|0;J=g+836|0;C=g+840|0;K=g+844|0;w=g+848|0;q=g+852|0;p=g+856|0;r=g+176|0;u=g+884|0;t=g+888|0;s=g+1240|0;m=g+904|0;n=g+908|0;l=g+96|0;h=g+912|0;j=g+916|0;k=g+1241|0;A=g+484|0;B=g+924|0;o=g+928|0;y=g+932|0;f=g+936|0;z=g+940|0;v=g+944|0;G=g+948|0;x=g+952|0;D=g+956|0;E=g+960|0;N=g+964|0;F=g+968|0;H=g+972|0;aa=g+976|0;$=g+980|0;pd=g+984|0;od=g+988|0;nd=g+992|0;md=g+996|0;kd=g+524|0;sd=g+1e3|0;jd=g+1004|0;ud=g+1008|0;td=g+532|0;id=g+1016|0;xd=g+1020|0;yd=g+1024|0;zd=g+1028|0;Ad=g+1204|0;Pd=g+1036|0;Gd=g+1040|0;Bd=g+548|0;Dd=g+1052|0;vd=g+1056|0;Ed=g+1060|0;Cd=g+72|0;Id=g+1064|0;Kd=g+560|0;Jd=g+1080|0;Fd=g+1088|0;Hd=g+136|0;Nd=g+1096|0;Md=g+1100|0;Ld=g+128|0;Rd=g+1104|0;Td=g+1108|0;Sd=g+1112|0;Od=g+328|0;Qd=g+8|0;Wd=g+1124|0;Vd=g+252|0;Ud=g+40|0;Zd=g+364|0;Yd=g+240|0;_d=g+640|0;$d=g+720|0;ae=g+1128|0;be=g+1200|0;ce=g+1116|0;de=g+1188|0;ee=g+392|0;fe=g+1032|0;ge=g+1132|0;wd=g+1216|0;ld=g+920|0;_=g+892|0;Xd=g+424|0;Za=g+400|0;Xa=g+872|0;Z=g+260|0;c[ge>>2]=d;c[wd>>2]=e;c[fe>>2]=c[ge>>2];c[ee>>2]=(c[fe>>2]|0)+8;c[de>>2]=c[ee>>2];c[ld>>2]=c[de>>2];c[be>>2]=c[ld>>2];c[ce>>2]=1;d=c[ce>>2]|0;c[g+1172>>2]=c[be>>2];c[ae>>2]=d;c[g+1180>>2]=0;d=Gx((c[ae>>2]|0)*24|0)|0;e=c[ld>>2]|0;c[_d>>2]=Xd;c[$d>>2]=e;e=c[$d>>2]|0;c[Zd>>2]=c[_d>>2];c[Yd>>2]=e;e=c[Zd>>2]|0;c[e>>2]=c[Yd>>2];a[e+4>>0]=0;a[e+5>>0]=0;a[Ud+0>>0]=a[Xd+0>>0]|0;a[Ud+1>>0]=a[Xd+1>>0]|0;a[Ud+2>>0]=a[Xd+2>>0]|0;a[Ud+3>>0]=a[Xd+3>>0]|0;a[Ud+4>>0]=a[Xd+4>>0]|0;a[Ud+5>>0]=a[Xd+5>>0]|0;a[Ud+6>>0]=a[Xd+6>>0]|0;a[Ud+7>>0]=a[Xd+7>>0]|0;c[Wd>>2]=_;c[Vd>>2]=d;d=c[Wd>>2]|0;e=c[Vd>>2]|0;a[Qd+0>>0]=a[Ud+0>>0]|0;a[Qd+1>>0]=a[Ud+1>>0]|0;a[Qd+2>>0]=a[Ud+2>>0]|0;a[Qd+3>>0]=a[Ud+3>>0]|0;a[Qd+4>>0]=a[Ud+4>>0]|0;a[Qd+5>>0]=a[Ud+5>>0]|0;a[Qd+6>>0]=a[Ud+6>>0]|0;a[Qd+7>>0]=a[Ud+7>>0]|0;c[Td>>2]=d;c[Sd>>2]=e;e=c[Td>>2]|0;c[Rd>>2]=Sd;d=c[c[Rd>>2]>>2]|0;c[Pd>>2]=Qd;Pd=c[Pd>>2]|0;c[Od+0>>2]=c[Pd+0>>2];c[Od+4>>2]=c[Pd+4>>2];a[Ld+0>>0]=a[Od+0>>0]|0;a[Ld+1>>0]=a[Od+1>>0]|0;a[Ld+2>>0]=a[Od+2>>0]|0;a[Ld+3>>0]=a[Od+3>>0]|0;a[Ld+4>>0]=a[Od+4>>0]|0;a[Ld+5>>0]=a[Od+5>>0]|0;a[Ld+6>>0]=a[Od+6>>0]|0;a[Ld+7>>0]=a[Od+7>>0]|0;c[Nd>>2]=e;c[Md>>2]=d;d=c[Nd>>2]|0;e=c[Md>>2]|0;a[Hd+0>>0]=a[Ld+0>>0]|0;a[Hd+1>>0]=a[Ld+1>>0]|0;a[Hd+2>>0]=a[Ld+2>>0]|0;a[Hd+3>>0]=a[Ld+3>>0]|0;a[Hd+4>>0]=a[Ld+4>>0]|0;a[Hd+5>>0]=a[Ld+5>>0]|0;a[Hd+6>>0]=a[Ld+6>>0]|0;a[Hd+7>>0]=a[Ld+7>>0]|0;c[Kd>>2]=d;c[Jd>>2]=e;e=c[Kd>>2]|0;c[Id>>2]=Jd;d=c[c[Id>>2]>>2]|0;c[Gd>>2]=Hd;Gd=c[Gd>>2]|0;c[Fd+0>>2]=c[Gd+0>>2];c[Fd+4>>2]=c[Gd+4>>2];a[Cd+0>>0]=a[Fd+0>>0]|0;a[Cd+1>>0]=a[Fd+1>>0]|0;a[Cd+2>>0]=a[Fd+2>>0]|0;a[Cd+3>>0]=a[Fd+3>>0]|0;a[Cd+4>>0]=a[Fd+4>>0]|0;a[Cd+5>>0]=a[Fd+5>>0]|0;a[Cd+6>>0]=a[Fd+6>>0]|0;a[Cd+7>>0]=a[Fd+7>>0]|0;c[vd>>2]=e;c[Ed>>2]=d;vd=c[vd>>2]|0;c[Dd>>2]=Ed;c[vd>>2]=c[c[Dd>>2]>>2];vd=vd+4|0;c[Bd>>2]=Cd;d=c[Bd>>2]|0;c[vd+0>>2]=c[d+0>>2];c[vd+4>>2]=c[d+4>>2];vd=c[ld>>2]|0;c[Ad>>2]=_;c[zd>>2]=c[Ad>>2];c[yd>>2]=c[zd>>2];c[xd>>2]=(c[c[yd>>2]>>2]|0)+8;d=c[xd>>2]|0;e=c[wd>>2]|0;c[ud>>2]=vd;c[td>>2]=d;c[id>>2]=e;e=c[td>>2]|0;if((e|0)!=0)Fn(e,c[id>>2]|0);c[jd>>2]=_;c[sd>>2]=c[jd>>2];c[kd>>2]=c[sd>>2];a[(c[kd>>2]|0)+8>>0]=1;ge=c[ld>>2]|0;c[md>>2]=_;c[nd>>2]=c[md>>2];c[od>>2]=c[nd>>2];c[pd>>2]=(c[c[od>>2]>>2]|0)+20;id=c[pd>>2]|0;c[qd>>2]=ge;c[rd>>2]=id;id=c[rd>>2]|0;if((id|0)!=0)c[id>>2]=0;c[dd>>2]=_;c[ed>>2]=c[dd>>2];c[fd>>2]=c[ed>>2];a[(c[fd>>2]|0)+9>>0]=1;c[gd>>2]=_;ge=c[gd>>2]|0;c[Jb>>2]=hd;c[Kb>>2]=ge;ge=c[Kb>>2]|0;c[Lb>>2]=c[Jb>>2];c[Mb>>2]=ge;c[c[Lb>>2]>>2]=c[Mb>>2];a[Nb+0>>0]=a[hd+0>>0]|0;a[Nb+1>>0]=a[hd+1>>0]|0;a[Nb+2>>0]=a[hd+2>>0]|0;a[Nb+3>>0]=a[hd+3>>0]|0;c[Pb>>2]=Ob;Jb=c[Pb>>2]|0;a[Qb+0>>0]=a[Nb+0>>0]|0;a[Qb+1>>0]=a[Nb+1>>0]|0;a[Qb+2>>0]=a[Nb+2>>0]|0;a[Qb+3>>0]=a[Nb+3>>0]|0;c[Rb>>2]=Jb;Jb=c[Rb>>2]|0;c[Sb>>2]=Qb;c[Tb>>2]=c[c[Sb>>2]>>2];ge=c[Tb>>2]|0;c[Ub>>2]=ge;c[Vb>>2]=c[Ub>>2];c[Wb>>2]=c[c[Vb>>2]>>2];c[Xb>>2]=ge;c[Yb>>2]=c[Xb>>2];c[c[Yb>>2]>>2]=0;ge=c[Wb>>2]|0;c[Zb>>2]=Qb;c[_b>>2]=c[c[Zb>>2]>>2];c[$b>>2]=c[_b>>2];c[ac>>2]=c[$b>>2];c[bc>>2]=(c[ac>>2]|0)+4;fe=c[bc>>2]|0;c[cc+0>>2]=c[fe+0>>2];c[cc+4>>2]=c[fe+4>>2];a[dc+0>>0]=a[cc+0>>0]|0;a[dc+1>>0]=a[cc+1>>0]|0;a[dc+2>>0]=a[cc+2>>0]|0;a[dc+3>>0]=a[cc+3>>0]|0;a[dc+4>>0]=a[cc+4>>0]|0;a[dc+5>>0]=a[cc+5>>0]|0;a[dc+6>>0]=a[cc+6>>0]|0;a[dc+7>>0]=a[cc+7>>0]|0;c[ec>>2]=Jb;c[fc>>2]=ge;ge=c[ec>>2]|0;Jb=c[fc>>2]|0;a[gc+0>>0]=a[dc+0>>0]|0;a[gc+1>>0]=a[dc+1>>0]|0;a[gc+2>>0]=a[dc+2>>0]|0;a[gc+3>>0]=a[dc+3>>0]|0;a[gc+4>>0]=a[dc+4>>0]|0;a[gc+5>>0]=a[dc+5>>0]|0;a[gc+6>>0]=a[dc+6>>0]|0;a[gc+7>>0]=a[dc+7>>0]|0;c[hc>>2]=ge;c[ic>>2]=Jb;Jb=c[hc>>2]|0;c[jc>>2]=ic;ge=c[c[jc>>2]>>2]|0;c[kc>>2]=gc;fe=c[kc>>2]|0;c[lc+0>>2]=c[fe+0>>2];c[lc+4>>2]=c[fe+4>>2];a[mc+0>>0]=a[lc+0>>0]|0;a[mc+1>>0]=a[lc+1>>0]|0;a[mc+2>>0]=a[lc+2>>0]|0;a[mc+3>>0]=a[lc+3>>0]|0;a[mc+4>>0]=a[lc+4>>0]|0;a[mc+5>>0]=a[lc+5>>0]|0;a[mc+6>>0]=a[lc+6>>0]|0;a[mc+7>>0]=a[lc+7>>0]|0;c[nc>>2]=Jb;c[oc>>2]=ge;ge=c[nc>>2]|0;c[pc>>2]=oc;c[ge>>2]=c[c[pc>>2]>>2];ge=ge+4|0;c[qc>>2]=mc;Jb=c[qc>>2]|0;c[ge+0>>2]=c[Jb+0>>2];c[ge+4>>2]=c[Jb+4>>2];c[rc>>2]=Ob;ge=c[rc>>2]|0;c[tc>>2]=sc;c[uc>>2]=ge;ge=c[uc>>2]|0;c[vc>>2]=c[tc>>2];c[wc>>2]=ge;c[c[vc>>2]>>2]=c[wc>>2];a[xc+0>>0]=a[sc+0>>0]|0;a[xc+1>>0]=a[sc+1>>0]|0;a[xc+2>>0]=a[sc+2>>0]|0;a[xc+3>>0]=a[sc+3>>0]|0;c[yc>>2]=Xa;ge=c[yc>>2]|0;a[zc+0>>0]=a[xc+0>>0]|0;a[zc+1>>0]=a[xc+1>>0]|0;a[zc+2>>0]=a[xc+2>>0]|0;a[zc+3>>0]=a[xc+3>>0]|0;c[Ac>>2]=ge;ge=c[Ac>>2]|0;c[Bc>>2]=zc;c[Cc>>2]=c[c[Bc>>2]>>2];Jb=c[Cc>>2]|0;c[Dc>>2]=Jb;c[Ec>>2]=c[Dc>>2];c[Fc>>2]=c[c[Ec>>2]>>2];c[Gc>>2]=Jb;c[Hc>>2]=c[Gc>>2];c[c[Hc>>2]>>2]=0;Jb=c[Fc>>2]|0;c[Ic>>2]=zc;c[Jc>>2]=c[c[Ic>>2]>>2];c[Kc>>2]=c[Jc>>2];c[Lc>>2]=c[Kc>>2];c[Mc>>2]=(c[Lc>>2]|0)+4;fe=c[Mc>>2]|0;c[Nc+0>>2]=c[fe+0>>2];c[Nc+4>>2]=c[fe+4>>2];a[Oc+0>>0]=a[Nc+0>>0]|0;a[Oc+1>>0]=a[Nc+1>>0]|0;a[Oc+2>>0]=a[Nc+2>>0]|0;a[Oc+3>>0]=a[Nc+3>>0]|0;a[Oc+4>>0]=a[Nc+4>>0]|0;a[Oc+5>>0]=a[Nc+5>>0]|0;a[Oc+6>>0]=a[Nc+6>>0]|0;a[Oc+7>>0]=a[Nc+7>>0]|0;c[Pc>>2]=ge;c[Qc>>2]=Jb;Jb=c[Pc>>2]|0;ge=c[Qc>>2]|0;a[Rc+0>>0]=a[Oc+0>>0]|0;a[Rc+1>>0]=a[Oc+1>>0]|0;a[Rc+2>>0]=a[Oc+2>>0]|0;a[Rc+3>>0]=a[Oc+3>>0]|0;a[Rc+4>>0]=a[Oc+4>>0]|0;a[Rc+5>>0]=a[Oc+5>>0]|0;a[Rc+6>>0]=a[Oc+6>>0]|0;a[Rc+7>>0]=a[Oc+7>>0]|0;c[Sc>>2]=Jb;c[Tc>>2]=ge;ge=c[Sc>>2]|0;c[Uc>>2]=Tc;Jb=c[c[Uc>>2]>>2]|0;c[Vc>>2]=Rc;fe=c[Vc>>2]|0;c[Wc+0>>2]=c[fe+0>>2];c[Wc+4>>2]=c[fe+4>>2];a[Xc+0>>0]=a[Wc+0>>0]|0;a[Xc+1>>0]=a[Wc+1>>0]|0;a[Xc+2>>0]=a[Wc+2>>0]|0;a[Xc+3>>0]=a[Wc+3>>0]|0;a[Xc+4>>0]=a[Wc+4>>0]|0;a[Xc+5>>0]=a[Wc+5>>0]|0;a[Xc+6>>0]=a[Wc+6>>0]|0;a[Xc+7>>0]=a[Wc+7>>0]|0;c[Yc>>2]=ge;c[Zc>>2]=Jb;Jb=c[Yc>>2]|0;c[_c>>2]=Zc;c[Jb>>2]=c[c[_c>>2]>>2];Jb=Jb+4|0;c[$c>>2]=Xc;ge=c[$c>>2]|0;c[Jb+0>>2]=c[ge+0>>2];c[Jb+4>>2]=c[ge+4>>2];c[ad>>2]=Ob;c[bd>>2]=c[ad>>2];c[cd>>2]=c[bd>>2];c[Eb>>2]=0;Jb=c[cd>>2]|0;c[Fb>>2]=Jb;c[Gb>>2]=c[Fb>>2];c[Db>>2]=c[c[Gb>>2]>>2];ge=c[Eb>>2]|0;c[Hb>>2]=Jb;c[Ib>>2]=c[Hb>>2];c[c[Ib>>2]>>2]=ge;if((c[Db>>2]|0)!=0){c[Cb>>2]=Jb;c[Bb>>2]=c[Cb>>2];ge=c[Db>>2]|0;c[Ab>>2]=(c[Bb>>2]|0)+4;c[$a>>2]=ge;Ab=c[Ab>>2]|0;if(a[Ab+5>>0]&1){ge=c[Ab>>2]|0;c[nb>>2]=(c[$a>>2]|0)+20;fe=c[nb>>2]|0;c[ob>>2]=ge;c[pb>>2]=fe;fe=c[ob>>2]|0;ge=c[pb>>2]|0;a[sa+0>>0]=a[qb+0>>0]|0;c[sb>>2]=fe;c[tb>>2]=ge}if(a[Ab+4>>0]&1){ge=c[Ab>>2]|0;c[gb>>2]=(c[$a>>2]|0)+8;fe=c[gb>>2]|0;c[hb>>2]=ge;c[ib>>2]=fe;fe=c[hb>>2]|0;ge=c[ib>>2]|0;a[kb+0>>0]=a[jb+0>>0]|0;c[lb>>2]=fe;c[mb>>2]=ge;Kn(c[mb>>2]|0)}if((c[$a>>2]|0)!=0){fe=c[$a>>2]|0;c[ab>>2]=c[Ab>>2];c[bb>>2]=fe;c[cb>>2]=1;fe=c[bb>>2]|0;ge=c[cb>>2]|0;c[db>>2]=c[ab>>2];c[eb>>2]=fe;c[fb>>2]=ge;Ix(c[eb>>2]|0)}}c[Ya>>2]=Xa;ge=c[Ya>>2]|0;c[_a>>2]=Za;c[rb>>2]=ge;ge=c[rb>>2]|0;c[ub>>2]=c[_a>>2];c[vb>>2]=ge;c[c[ub>>2]>>2]=c[vb>>2];a[wb+0>>0]=a[Za+0>>0]|0;a[wb+1>>0]=a[Za+1>>0]|0;a[wb+2>>0]=a[Za+2>>0]|0;a[wb+3>>0]=a[Za+3>>0]|0;c[xb>>2]=b;ge=c[xb>>2]|0;a[yb+0>>0]=a[wb+0>>0]|0;a[yb+1>>0]=a[wb+1>>0]|0;a[yb+2>>0]=a[wb+2>>0]|0;a[yb+3>>0]=a[wb+3>>0]|0;c[zb>>2]=ge;ge=c[zb>>2]|0;c[ta>>2]=yb;c[ua>>2]=c[c[ta>>2]>>2];sa=c[ua>>2]|0;c[va>>2]=sa;c[wa>>2]=c[va>>2];c[xa>>2]=c[c[wa>>2]>>2];c[ya>>2]=sa;c[za>>2]=c[ya>>2];c[c[za>>2]>>2]=0;sa=c[xa>>2]|0;c[Aa>>2]=yb;c[Ba>>2]=c[c[Aa>>2]>>2];c[Ca>>2]=c[Ba>>2];c[Da>>2]=c[Ca>>2];c[Ea>>2]=(c[Da>>2]|0)+4;fe=c[Ea>>2]|0;c[Fa+0>>2]=c[fe+0>>2];c[Fa+4>>2]=c[fe+4>>2];a[Ga+0>>0]=a[Fa+0>>0]|0;a[Ga+1>>0]=a[Fa+1>>0]|0;a[Ga+2>>0]=a[Fa+2>>0]|0;a[Ga+3>>0]=a[Fa+3>>0]|0;a[Ga+4>>0]=a[Fa+4>>0]|0;a[Ga+5>>0]=a[Fa+5>>0]|0;a[Ga+6>>0]=a[Fa+6>>0]|0;a[Ga+7>>0]=a[Fa+7>>0]|0;c[Ha>>2]=ge;c[Ia>>2]=sa;sa=c[Ha>>2]|0;ge=c[Ia>>2]|0;a[Ja+0>>0]=a[Ga+0>>0]|0;a[Ja+1>>0]=a[Ga+1>>0]|0;a[Ja+2>>0]=a[Ga+2>>0]|0;a[Ja+3>>0]=a[Ga+3>>0]|0;a[Ja+4>>0]=a[Ga+4>>0]|0;a[Ja+5>>0]=a[Ga+5>>0]|0;a[Ja+6>>0]=a[Ga+6>>0]|0;a[Ja+7>>0]=a[Ga+7>>0]|0;c[Ka>>2]=sa;c[La>>2]=ge;ge=c[Ka>>2]|0;c[Ma>>2]=La;sa=c[c[Ma>>2]>>2]|0;c[Na>>2]=Ja;fe=c[Na>>2]|0;c[Oa+0>>2]=c[fe+0>>2];c[Oa+4>>2]=c[fe+4>>2];a[Pa+0>>0]=a[Oa+0>>0]|0;a[Pa+1>>0]=a[Oa+1>>0]|0;a[Pa+2>>0]=a[Oa+2>>0]|0;a[Pa+3>>0]=a[Oa+3>>0]|0;a[Pa+4>>0]=a[Oa+4>>0]|0;a[Pa+5>>0]=a[Oa+5>>0]|0;a[Pa+6>>0]=a[Oa+6>>0]|0;a[Pa+7>>0]=a[Oa+7>>0]|0;c[Qa>>2]=ge;c[Ra>>2]=sa;sa=c[Qa>>2]|0;c[Sa>>2]=Ra;c[sa>>2]=c[c[Sa>>2]>>2];sa=sa+4|0;c[Ta>>2]=Pa;ge=c[Ta>>2]|0;c[sa+0>>2]=c[ge+0>>2];c[sa+4>>2]=c[ge+4>>2];c[Ua>>2]=Xa;c[Va>>2]=c[Ua>>2];c[Wa>>2]=c[Va>>2];c[na>>2]=0;sa=c[Wa>>2]|0;c[ma>>2]=sa;c[ja>>2]=c[ma>>2];c[pa>>2]=c[c[ja>>2]>>2];ge=c[na>>2]|0;c[ka>>2]=sa;c[la>>2]=c[ka>>2];c[c[la>>2]>>2]=ge;if((c[pa>>2]|0)!=0){c[ra>>2]=sa;c[qa>>2]=c[ra>>2];ja=c[pa>>2]|0;c[oa>>2]=(c[qa>>2]|0)+4;c[ba>>2]=ja;ja=c[oa>>2]|0;if(a[ja+5>>0]&1){ge=c[ja>>2]|0;c[R>>2]=(c[ba>>2]|0)+20;fe=c[R>>2]|0;c[S>>2]=ge;c[T>>2]=fe;fe=c[S>>2]|0;ge=c[T>>2]|0;a[V+0>>0]=a[U+0>>0]|0;c[W>>2]=fe;c[X>>2]=ge}if(a[ja+4>>0]&1){ge=c[ja>>2]|0;c[ia>>2]=(c[ba>>2]|0)+8;fe=c[ia>>2]|0;c[L>>2]=ge;c[M>>2]=fe;fe=c[L>>2]|0;ge=c[M>>2]|0;a[O+0>>0]=a[Y+0>>0]|0;c[P>>2]=fe;c[Q>>2]=ge;Kn(c[Q>>2]|0)}if((c[ba>>2]|0)!=0){fe=c[ba>>2]|0;c[ca>>2]=c[ja>>2];c[da>>2]=fe;c[ea>>2]=1;fe=c[da>>2]|0;ge=c[ea>>2]|0;c[fa>>2]=c[ca>>2];c[ga>>2]=fe;c[ha>>2]=ge;Ix(c[ga>>2]|0)}}c[Z>>2]=1;c[$>>2]=_;c[aa>>2]=c[$>>2];c[N>>2]=c[aa>>2];c[F>>2]=0;L=c[N>>2]|0;c[E>>2]=L;c[D>>2]=c[E>>2];c[H>>2]=c[c[D>>2]>>2];ge=c[F>>2]|0;c[K>>2]=L;c[C>>2]=c[K>>2];c[c[C>>2]>>2]=ge;if((c[H>>2]|0)==0){i=g;return}c[J>>2]=L;c[I>>2]=c[J>>2];C=c[H>>2]|0;c[G>>2]=(c[I>>2]|0)+4;c[x>>2]=C;C=c[G>>2]|0;if(a[C+5>>0]&1){ge=c[C>>2]|0;c[v>>2]=(c[x>>2]|0)+20;fe=c[v>>2]|0;c[h>>2]=ge;c[j>>2]=fe;fe=c[h>>2]|0;ge=c[j>>2]|0;a[l+0>>0]=a[k+0>>0]|0;c[m>>2]=fe;c[n>>2]=ge}if(a[C+4>>0]&1){ge=c[C>>2]|0;c[w>>2]=(c[x>>2]|0)+8;fe=c[w>>2]|0;c[u>>2]=ge;c[t>>2]=fe;fe=c[u>>2]|0;ge=c[t>>2]|0;a[r+0>>0]=a[s+0>>0]|0;c[q>>2]=fe;c[p>>2]=ge;Kn(c[p>>2]|0)}if((c[x>>2]|0)==0){i=g;return}fe=c[x>>2]|0;c[y>>2]=c[C>>2];c[f>>2]=fe;c[z>>2]=1;fe=c[f>>2]|0;ge=c[z>>2]|0;c[A>>2]=c[y>>2];c[B>>2]=fe;c[o>>2]=ge;Ix(c[B>>2]|0);i=g;return}function dl(b,e,f){b=b|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0.0,Nc=0.0;n=i;i=i+752|0;uc=n+352|0;ec=n+340|0;fc=n+336|0;cc=n+12|0;dc=n+8|0;bc=n+16|0;hc=n+680|0;$b=n+716|0;ac=n+724|0;Qb=n+732|0;Pb=n+332|0;Ob=n+28|0;rc=n+32|0;mc=n+36|0;pc=n+40|0;qc=n+672|0;oc=n+104|0;sc=n+48|0;vc=n+52|0;nc=n+56|0;wc=n+60|0;eb=n+64|0;nb=n+68|0;mb=n+72|0;lb=n+76|0;sb=n+80|0;rb=n+84|0;qb=n+88|0;pb=n+92|0;ob=n+96|0;xb=n+100|0;wb=n+668|0;vb=n+228|0;ub=n+108|0;tb=n+112|0;Ta=n+116|0;_a=n+120|0;Za=n+124|0;Ya=n+128|0;db=n+132|0;cb=n+136|0;bb=n+140|0;ab=n+144|0;$a=n+148|0;kb=n+152|0;jb=n+156|0;ib=n+160|0;hb=n+164|0;gb=n+168|0;Xa=n+172|0;Wa=n+176|0;Va=n+180|0;Ab=n+184|0;zb=n+188|0;yb=n+192|0;Db=n+196|0;Cb=n+200|0;Bb=n+204|0;Hb=n+208|0;Gb=n+212|0;Fb=n+216|0;Eb=n+220|0;Qa=n+224|0;Ra=n+664|0;Sa=n+404|0;Kb=n+232|0;Jb=n+236|0;Ib=n+240|0;Nb=n+244|0;Mb=n+248|0;Lb=n+252|0;_b=n+256|0;Zb=n+260|0;Yb=n+264|0;Xb=n+268|0;Ma=n+748|0;Ua=n+276|0;fb=n+280|0;Oa=n+284|0;Pa=n+288|0;Na=n+292|0;Ub=n+296|0;Vb=n+300|0;Wb=n+304|0;Rb=n+308|0;Sb=n+312|0;Tb=n+316|0;kc=n+696|0;jc=n+704|0;ic=n+712|0;La=n+720|0;Ka=n+728|0;lc=n+736|0;Ja=n+740|0;Ia=n+348|0;Ga=n+744|0;Ha=n+356|0;wa=n+360|0;Da=n+364|0;Fa=n+368|0;yc=n+372|0;xc=n+376|0;ka=n+380|0;sa=n+384|0;ta=n+388|0;ua=n+392|0;qa=n+396|0;ra=n+400|0;pa=n;ma=n+408|0;na=n+412|0;oa=n+749|0;zc=n+420|0;Ac=n+424|0;Bc=n+428|0;Cc=n+432|0;Dc=n+436|0;Ec=n+440|0;Fc=n+444|0;Hc=n+448|0;Gc=n+452|0;Ba=n+456|0;Aa=n+460|0;za=n+464|0;ya=n+468|0;xa=n+472|0;ja=n+476|0;va=n+660|0;Ca=n+480|0;ia=n+484|0;W=n+488|0;V=n+492|0;T=n+496|0;U=n+500|0;_=n+504|0;$=n+508|0;Y=n+512|0;Z=n+516|0;X=n+520|0;ba=n+524|0;S=n+528|0;ha=n+532|0;Q=n+536|0;R=n+540|0;K=n+544|0;L=n+548|0;N=n+552|0;M=n+556|0;ea=n+560|0;da=n+564|0;I=n+568|0;fa=n+572|0;J=n+576|0;H=n+580|0;G=n+584|0;E=n+588|0;h=n+592|0;j=n+596|0;l=n+600|0;k=n+604|0;A=n+608|0;B=n+612|0;C=n+616|0;v=n+620|0;u=n+624|0;x=n+628|0;w=n+632|0;q=n+636|0;p=n+640|0;o=n+644|0;t=n+648|0;s=n+652|0;r=n+656|0;Ic=n+20|0;Jc=n+688|0;Kc=n+24|0;Lc=n+320|0;m=n+692|0;F=n+324|0;z=n+750|0;D=n+44|0;O=n+684|0;tc=n+328|0;gc=n+708|0;Ea=n+676|0;la=n+4|0;P=n+344|0;aa=n+700|0;ga=n+416|0;y=n+272|0;c[Lc>>2]=e;c[m>>2]=f;e=c[Lc>>2]|0;c[Kc>>2]=e;c[Jc>>2]=(c[Kc>>2]|0)+12;c[Ic>>2]=c[Jc>>2];f=(c[m>>2]|0)+8|0;c[Hc>>2]=c[Ic>>2];c[Gc>>2]=f;f=Jd(c[Hc>>2]|0,c[Gc>>2]|0)|0;c[(c[m>>2]|0)+4>>2]=f;c[Fc>>2]=e;c[Ec>>2]=c[Fc>>2];c[Dc>>2]=c[Ec>>2];c[Cc>>2]=c[Dc>>2];c[Bc>>2]=(c[Cc>>2]|0)+4;c[Ac>>2]=c[Bc>>2];c[zc>>2]=c[Ac>>2];c[F>>2]=c[c[zc>>2]>>2];a[z>>0]=0;a:do if((c[F>>2]|0)!=0){f=c[F>>2]|0;c[yc>>2]=c[(c[m>>2]|0)+4>>2];c[xc>>2]=f;f=c[yc>>2]|0;yc=c[xc>>2]|0;if((c[xc>>2]&(c[xc>>2]|0)-1|0)!=0)xc=(f>>>0)%(yc>>>0)|0;else xc=f&yc-1;c[O>>2]=xc;Lc=c[O>>2]|0;c[nc>>2]=e;c[wc>>2]=Lc;Lc=c[wc>>2]|0;c[vc>>2]=c[nc>>2];c[sc>>2]=c[vc>>2];c[D>>2]=c[(c[c[sc>>2]>>2]|0)+(Lc<<2)>>2];Lc=c[D>>2]|0;c[pc>>2]=oc;c[qc>>2]=-1;Kc=c[qc>>2]|0;c[rc>>2]=c[pc>>2];c[mc>>2]=Kc;c[c[rc>>2]>>2]=0;c[tc>>2]=c[oc>>2];c[uc>>2]=tc;if((Lc|0)!=0){c[D>>2]=c[c[D>>2]>>2];while(1){Lc=c[D>>2]|0;c[cc>>2]=bc;c[dc>>2]=-1;Kc=c[dc>>2]|0;c[ec>>2]=c[cc>>2];c[fc>>2]=Kc;c[c[ec>>2]>>2]=0;c[gc>>2]=c[bc>>2];c[hc>>2]=gc;if((Lc|0)==0)break a;nc=c[F>>2]|0;c[$b>>2]=c[(c[D>>2]|0)+4>>2];c[ac>>2]=nc;nc=c[$b>>2]|0;mc=c[ac>>2]|0;if((c[ac>>2]&(c[ac>>2]|0)-1|0)!=0)mc=(nc>>>0)%(mc>>>0)|0;else mc=nc&mc-1;if((mc|0)!=(c[O>>2]|0))break a;c[Ob>>2]=e;c[Pb>>2]=(c[Ob>>2]|0)+16;c[Qb>>2]=c[Pb>>2];mc=(c[D>>2]|0)+8|0;Lc=(c[m>>2]|0)+8|0;c[Rb>>2]=c[Qb>>2];c[Sb>>2]=mc;c[Tb>>2]=Lc;Lc=c[Sb>>2]|0;mc=c[Tb>>2]|0;c[Ub>>2]=c[Rb>>2];c[Vb>>2]=Lc;c[Wb>>2]=mc;mc=c[Wb>>2]|0;c[Ua>>2]=c[Vb>>2];c[fb>>2]=mc;c[Xb>>2]=c[Ua>>2];mc=c[Xb>>2]|0;c[Yb>>2]=mc;c[Zb>>2]=c[Yb>>2];c[_b>>2]=c[Zb>>2];if((d[c[_b>>2]>>0]&1|0)!=0){c[Ib>>2]=mc;c[Jb>>2]=c[Ib>>2];c[Kb>>2]=c[Jb>>2];mc=c[(c[Kb>>2]|0)+4>>2]|0}else{c[Lb>>2]=mc;c[Mb>>2]=c[Lb>>2];c[Nb>>2]=c[Mb>>2];mc=d[c[Nb>>2]>>0]>>1}c[Oa>>2]=mc;mc=c[Oa>>2]|0;c[Eb>>2]=c[fb>>2];nc=c[Eb>>2]|0;c[Fb>>2]=nc;c[Gb>>2]=c[Fb>>2];c[Hb>>2]=c[Gb>>2];if((d[c[Hb>>2]>>0]&1|0)!=0){c[yb>>2]=nc;c[zb>>2]=c[yb>>2];c[Ab>>2]=c[zb>>2];nc=c[(c[Ab>>2]|0)+4>>2]|0}else{c[Bb>>2]=nc;c[Cb>>2]=c[Bb>>2];c[Db>>2]=c[Cb>>2];nc=d[c[Db>>2]>>0]>>1}do if((mc|0)==(nc|0)){c[tb>>2]=c[Ua>>2];c[ub>>2]=c[tb>>2];mc=c[ub>>2]|0;c[vb>>2]=mc;c[wb>>2]=c[vb>>2];c[xb>>2]=c[wb>>2];if((d[c[xb>>2]>>0]&1|0)!=0){c[lb>>2]=mc;c[mb>>2]=c[lb>>2];c[nb>>2]=c[mb>>2];mc=c[(c[nb>>2]|0)+8>>2]|0}else{c[ob>>2]=mc;c[pb>>2]=c[ob>>2];c[qb>>2]=c[pb>>2];c[rb>>2]=(c[qb>>2]|0)+1;c[sb>>2]=c[rb>>2];mc=c[sb>>2]|0}c[eb>>2]=mc;c[Pa>>2]=c[eb>>2];c[gb>>2]=c[fb>>2];c[hb>>2]=c[gb>>2];mc=c[hb>>2]|0;c[ib>>2]=mc;c[jb>>2]=c[ib>>2];c[kb>>2]=c[jb>>2];if((d[c[kb>>2]>>0]&1|0)!=0){c[Ya>>2]=mc;c[Za>>2]=c[Ya>>2];c[_a>>2]=c[Za>>2];mc=c[(c[_a>>2]|0)+8>>2]|0}else{c[$a>>2]=mc;c[ab>>2]=c[$a>>2];c[bb>>2]=c[ab>>2];c[cb>>2]=(c[bb>>2]|0)+1;c[db>>2]=c[cb>>2];mc=c[db>>2]|0}c[Ta>>2]=mc;c[Na>>2]=c[Ta>>2];c[Va>>2]=c[Ua>>2];c[Wa>>2]=c[Va>>2];c[Xa>>2]=c[Wa>>2];if((d[c[Xa>>2]>>0]&1|0)!=0){Kc=c[Na>>2]|0;Lc=c[Oa>>2]|0;c[Qa>>2]=c[Pa>>2];c[Ra>>2]=Kc;c[Sa>>2]=Lc;a[Ma>>0]=(iz(c[Qa>>2]|0,c[Ra>>2]|0,c[Sa>>2]|0)|0)==0&1;break}while(1){if((c[Oa>>2]|0)==0){mc=32;break}if((a[c[Pa>>2]>>0]|0)!=(a[c[Na>>2]>>0]|0)){mc=30;break}c[Oa>>2]=(c[Oa>>2]|0)+ -1;c[Pa>>2]=(c[Pa>>2]|0)+1;c[Na>>2]=(c[Na>>2]|0)+1}if((mc|0)==30){a[Ma>>0]=0;break}else if((mc|0)==32){a[Ma>>0]=1;break}}else a[Ma>>0]=0;while(0);if(a[Ma>>0]&1)break;c[D>>2]=c[c[D>>2]>>2]}Lc=c[D>>2]|0;c[x>>2]=y;c[w>>2]=Lc;Lc=c[x>>2]|0;Jc=c[w>>2]|0;c[v>>2]=Lc;c[u>>2]=Jc;Jc=c[v>>2]|0;Lc=c[u>>2]|0;c[Jc>>2]=Lc;c[t>>2]=b;c[s>>2]=y;c[r>>2]=z;Jc=c[t>>2]|0;Lc=c[r>>2]|0;Kc=c[s>>2]|0;c[q>>2]=Jc;c[p>>2]=Kc;c[o>>2]=Lc;Lc=c[q>>2]|0;Kc=c[p>>2]|0;c[Lc+0>>2]=c[Kc+0>>2];Lc=Lc+4|0;Kc=c[o>>2]|0;Kc=a[Kc>>0]|0;Kc=Kc&1;Kc=Kc&1;a[Lc>>0]=Kc;i=n;return}}while(0);c[ic>>2]=e;c[jc>>2]=(c[ic>>2]|0)+12;c[kc>>2]=c[jc>>2];Nc=+(((c[c[kc>>2]>>2]|0)+1|0)>>>0);Mc=+((c[F>>2]|0)>>>0);c[lc>>2]=e;c[Ka>>2]=(c[lc>>2]|0)+16;c[La>>2]=c[Ka>>2];if(!(!(Nc>Mc*+g[c[La>>2]>>2])?(c[F>>2]|0)!=0:0)){Ka=c[F>>2]<<1;c[Ja>>2]=c[F>>2];if((c[Ja>>2]|0)>>>0>2)Ja=(c[Ja>>2]&(c[Ja>>2]|0)-1|0)!=0^1;else Ja=0;c[Ea>>2]=Ka+((Ja^1)&1);c[Ha>>2]=e;c[Ga>>2]=(c[Ha>>2]|0)+12;c[Ia>>2]=c[Ga>>2];Nc=+(((c[c[Ia>>2]>>2]|0)+1|0)>>>0);c[Fa>>2]=e;c[Da>>2]=(c[Fa>>2]|0)+16;c[wa>>2]=c[Da>>2];g[ka>>2]=Nc/+g[c[wa>>2]>>2];c[la>>2]=~~+ca(+(+g[ka>>2]))>>>0;c[ma>>2]=Ea;c[na>>2]=la;ka=c[ma>>2]|0;Lc=c[na>>2]|0;a[pa+0>>0]=a[oa+0>>0]|0;c[qa>>2]=ka;c[ra>>2]=Lc;Lc=c[qa>>2]|0;ka=c[ra>>2]|0;c[sa>>2]=pa;c[ta>>2]=Lc;c[ua>>2]=ka;el(e,c[((c[c[ta>>2]>>2]|0)>>>0<(c[c[ua>>2]>>2]|0)>>>0?c[ra>>2]|0:c[qa>>2]|0)>>2]|0);c[va>>2]=e;c[ja>>2]=c[va>>2];c[xa>>2]=c[ja>>2];c[ya>>2]=c[xa>>2];c[za>>2]=(c[ya>>2]|0)+4;c[Aa>>2]=c[za>>2];c[Ba>>2]=c[Aa>>2];c[F>>2]=c[c[Ba>>2]>>2];ka=c[F>>2]|0;c[Ca>>2]=c[(c[m>>2]|0)+4>>2];c[ia>>2]=ka;ka=c[Ca>>2]|0;ja=c[ia>>2]|0;if((c[ia>>2]&(c[ia>>2]|0)-1|0)!=0)ia=(ka>>>0)%(ja>>>0)|0;else ia=ka&ja-1;c[O>>2]=ia}Lc=c[O>>2]|0;c[T>>2]=e;c[U>>2]=Lc;Lc=c[U>>2]|0;c[V>>2]=c[T>>2];c[W>>2]=c[V>>2];c[P>>2]=c[(c[c[W>>2]>>2]|0)+(Lc<<2)>>2];Lc=c[P>>2]|0;c[Y>>2]=X;c[Z>>2]=-1;Kc=c[Z>>2]|0;c[_>>2]=c[Y>>2];c[$>>2]=Kc;c[c[_>>2]>>2]=0;c[aa>>2]=c[X>>2];c[ba>>2]=aa;if((Lc|0)==0){c[ha>>2]=e+8;c[S>>2]=c[ha>>2];c[R>>2]=c[S>>2];c[Q>>2]=c[R>>2];c[P>>2]=c[Q>>2];c[c[m>>2]>>2]=c[c[P>>2]>>2];c[c[P>>2]>>2]=c[m>>2];Kc=c[P>>2]|0;Lc=c[O>>2]|0;c[N>>2]=e;c[M>>2]=Lc;Lc=c[M>>2]|0;c[L>>2]=c[N>>2];c[K>>2]=c[L>>2];c[(c[c[K>>2]>>2]|0)+(Lc<<2)>>2]=Kc;Lc=c[c[m>>2]>>2]|0;c[I>>2]=J;c[fa>>2]=-1;Kc=c[fa>>2]|0;c[ea>>2]=c[I>>2];c[da>>2]=Kc;c[c[ea>>2]>>2]=0;c[ga>>2]=c[J>>2];c[H>>2]=ga;if((Lc|0)!=0){H=c[m>>2]|0;F=c[F>>2]|0;c[G>>2]=c[(c[c[m>>2]>>2]|0)+4>>2];c[E>>2]=F;G=c[G>>2]|0;F=c[E>>2]|0;if((c[E>>2]&(c[E>>2]|0)-1|0)!=0)E=(G>>>0)%(F>>>0)|0;else E=G&F-1;c[l>>2]=e;c[k>>2]=E;Lc=c[k>>2]|0;c[j>>2]=c[l>>2];c[h>>2]=c[j>>2];c[(c[c[h>>2]>>2]|0)+(Lc<<2)>>2]=H}}else{c[c[m>>2]>>2]=c[c[P>>2]>>2];c[c[P>>2]>>2]=c[m>>2]}c[D>>2]=c[m>>2];c[C>>2]=e;c[B>>2]=(c[C>>2]|0)+12;c[A>>2]=c[B>>2];Lc=c[A>>2]|0;c[Lc>>2]=(c[Lc>>2]|0)+1;a[z>>0]=1;Lc=c[D>>2]|0;c[x>>2]=y;c[w>>2]=Lc;Lc=c[x>>2]|0;Jc=c[w>>2]|0;c[v>>2]=Lc;c[u>>2]=Jc;Jc=c[v>>2]|0;Lc=c[u>>2]|0;c[Jc>>2]=Lc;c[t>>2]=b;c[s>>2]=y;c[r>>2]=z;Jc=c[t>>2]|0;Lc=c[r>>2]|0;Kc=c[s>>2]|0;c[q>>2]=Jc;c[p>>2]=Kc;c[o>>2]=Lc;Lc=c[q>>2]|0;Kc=c[p>>2]|0;c[Lc+0>>2]=c[Kc+0>>2];Lc=Lc+4|0;Kc=c[o>>2]|0;Kc=a[Kc>>0]|0;Kc=Kc&1;Kc=Kc&1;a[Lc>>0]=Kc;i=n;return}function el(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0.0;f=i;i=i+160|0;y=f+68|0;x=f+108|0;w=f+80|0;t=f+8|0;B=f+64|0;z=f+16|0;E=f+20|0;D=f+24|0;C=f+28|0;H=f+32|0;G=f+36|0;F=f+40|0;v=f+44|0;u=f+104|0;A=f+112|0;I=f+120|0;o=f+128|0;p=f+136|0;q=f+140|0;m=f+72|0;e=f+76|0;l=f;h=f+84|0;j=f+88|0;k=f+144|0;J=f+96|0;Q=f+12|0;P=f+4|0;O=f+56|0;N=f+100|0;M=f+48|0;L=f+52|0;K=f+116|0;R=f+60|0;n=f+124|0;r=f+132|0;s=f+92|0;c[R>>2]=b;c[n>>2]=d;b=c[R>>2]|0;if((c[n>>2]|0)!=1){if((c[n>>2]&(c[n>>2]|0)-1|0)!=0)c[n>>2]=Bn(c[n>>2]|0)|0}else c[n>>2]=2;c[K>>2]=b;c[L>>2]=c[K>>2];c[M>>2]=c[L>>2];c[N>>2]=c[M>>2];c[O>>2]=(c[N>>2]|0)+4;c[P>>2]=c[O>>2];c[Q>>2]=c[P>>2];c[r>>2]=c[c[Q>>2]>>2];K=c[n>>2]|0;if((c[n>>2]|0)>>>0>(c[r>>2]|0)>>>0){fl(b,K);i=f;return}if(!(K>>>0<(c[r>>2]|0)>>>0)){i=f;return}c[J>>2]=c[r>>2];if((c[J>>2]|0)>>>0>2?(c[J>>2]&(c[J>>2]|0)-1|0)!=0^1:0){c[A>>2]=b;c[u>>2]=(c[A>>2]|0)+12;c[v>>2]=c[u>>2];S=+((c[c[v>>2]>>2]|0)>>>0);c[w>>2]=b;c[x>>2]=(c[w>>2]|0)+16;c[y>>2]=c[x>>2];g[t>>2]=S/+g[c[y>>2]>>2];c[z>>2]=~~+ca(+(+g[t>>2]))>>>0;c[B>>2]=(c[z>>2]|0)-1;t=1<<32-(pz(c[B>>2]|0)|0)}else{c[C>>2]=b;c[D>>2]=(c[C>>2]|0)+12;c[E>>2]=c[D>>2];S=+((c[c[E>>2]>>2]|0)>>>0);c[F>>2]=b;c[G>>2]=(c[F>>2]|0)+16;c[H>>2]=c[G>>2];g[I>>2]=S/+g[c[H>>2]>>2];t=Bn(~~+ca(+(+g[I>>2]))>>>0)|0}c[s>>2]=t;c[h>>2]=n;c[j>>2]=s;R=c[h>>2]|0;d=c[j>>2]|0;a[l+0>>0]=a[k+0>>0]|0;c[m>>2]=R;c[e>>2]=d;d=c[m>>2]|0;R=c[e>>2]|0;c[o>>2]=l;c[p>>2]=d;c[q>>2]=R;c[n>>2]=c[((c[c[p>>2]>>2]|0)>>>0<(c[c[q>>2]>>2]|0)>>>0?c[e>>2]|0:c[m>>2]|0)>>2];if(!((c[n>>2]|0)>>>0<(c[r>>2]|0)>>>0)){i=f;return}fl(b,c[n>>2]|0);i=f;return}function fl(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0;Za=i;i=i+768|0;Wb=Za+348|0;nc=Za+344|0;ic=Za+340|0;mc=Za+8|0;dc=Za+4|0;cc=Za+724|0;bc=Za+732|0;hc=Za+748|0;ec=Za+28|0;fc=Za+32|0;gc=Za+36|0;ac=Za+40|0;$b=Za+688|0;_b=Za+44|0;Yb=Za+48|0;Zb=Za+52|0;lc=Za+56|0;kc=Za+60|0;oc=Za+64|0;jc=Za+68|0;Xb=Za+72|0;Rb=Za+76|0;Qb=Za+80|0;Pb=Za+84|0;Ub=Za+88|0;sb=Za+92|0;Sb=Za+96|0;Hb=Za+100|0;Ib=Za+684|0;Fb=Za+104|0;Gb=Za+108|0;Eb=Za+112|0;Kb=Za+116|0;Ob=Za+120|0;Nb=Za+124|0;Lb=Za+128|0;Mb=Za+132|0;tb=Za+136|0;Vb=Za+140|0;vb=Za+144|0;ub=Za+148|0;zb=Za+152|0;Ab=Za+156|0;xb=Za+160|0;yb=Za+164|0;wb=Za+168|0;Cb=Za+172|0;Tb=Za+176|0;rb=Za+180|0;pb=Za+184|0;ob=Za+188|0;nb=Za+192|0;qb=Za+196|0;C=Za+200|0;D=Za+204|0;A=Za+208|0;B=Za+212|0;z=Za+216|0;F=Za+220|0;x=Za+224|0;y=Za+680|0;n=Za+228|0;m=Za+232|0;k=Za+236|0;l=Za+240|0;r=Za+244|0;s=Za+248|0;p=Za+252|0;q=Za+256|0;o=Za+260|0;u=Za+264|0;J=Za+268|0;I=Za+272|0;G=Za+276|0;H=Za+280|0;O=Za+284|0;P=Za+288|0;M=Za+292|0;N=Za+296|0;L=Za+300|0;R=Za+304|0;aa=Za+308|0;$=Za+312|0;_=Za+316|0;uc=Za+320|0;vc=Za+712|0;wc=Za+720|0;tc=Za+728|0;sc=Za+744|0;pc=Za+756|0;qc=Za+760|0;yc=Za+360|0;zc=Za+364|0;Ac=Za+368|0;Sa=Za+372|0;Ma=Za+376|0;La=Za+380|0;Ka=Za+384|0;Ra=Za+388|0;f=Za+392|0;Pa=Za+396|0;Oa=Za+400|0;Na=Za+404|0;Ia=Za+408|0;Ha=Za+412|0;Ga=Za+416|0;Fa=Za+420|0;Ea=Za+424|0;fb=Za+428|0;$a=Za+432|0;_a=Za+436|0;g=Za+440|0;eb=Za+444|0;db=Za+448|0;cb=Za+452|0;bb=Za+456|0;ab=Za+460|0;Ya=Za+464|0;Xa=Za+468|0;Wa=Za+472|0;Va=Za+476|0;Ua=Za+676|0;jb=Za+480|0;ib=Za+484|0;hb=Za+488|0;Aa=Za+492|0;za=Za+496|0;ya=Za+500|0;Da=Za+504|0;Ca=Za+508|0;Ba=Za+512|0;xa=Za+516|0;wa=Za+520|0;va=Za+524|0;ua=Za+528|0;kb=Za+532|0;lb=Za+536|0;mb=Za+540|0;pa=Za+544|0;oa=Za+548|0;na=Za+552|0;sa=Za+556|0;ra=Za+560|0;qa=Za+564|0;ma=Za+568|0;la=Za+572|0;ka=Za+576|0;ja=Za+580|0;Ja=Za+764|0;ha=Za+588|0;ia=Za+592|0;ta=Za+596|0;Ta=Za+600|0;gb=Za+604|0;ea=Za+608|0;fa=Za+612|0;ga=Za+616|0;ba=Za+620|0;ca=Za+624|0;da=Za+628|0;V=Za+632|0;U=Za+636|0;S=Za+640|0;T=Za+644|0;Z=Za+648|0;Y=Za+652|0;W=Za+656|0;X=Za+660|0;Bc=Za+664|0;Cc=Za+668|0;Dc=Za+672|0;Ec=Za+24|0;w=Za+20|0;rc=Za+704|0;xc=Za+16|0;Db=Za+700|0;Jb=Za+328|0;h=Za+708|0;Qa=Za+692|0;Bb=Za;j=Za+332|0;v=Za+716|0;E=Za+12|0;t=Za+696|0;K=Za+352|0;Q=Za+584|0;c[Ec>>2]=b;c[w>>2]=e;b=c[Ec>>2]|0;c[Dc>>2]=b;c[Cc>>2]=c[Dc>>2];c[Bc>>2]=c[Cc>>2];c[Ac>>2]=(c[Bc>>2]|0)+4;c[zc>>2]=c[Ac>>2];c[yc>>2]=c[zc>>2];c[rc>>2]=c[yc>>2];if((c[w>>2]|0)>>>0>0){Ec=c[w>>2]|0;c[pc>>2]=c[rc>>2];c[qc>>2]=Ec;Ec=c[qc>>2]|0;c[Za+736>>2]=c[pc>>2];c[sc>>2]=Ec;c[Za+752>>2]=0;pc=Gx(c[sc>>2]<<2)|0}else{c[vc>>2]=tc;c[wc>>2]=-1;pc=c[wc>>2]|0;c[uc>>2]=c[vc>>2];c[Za+324>>2]=pc;c[c[uc>>2]>>2]=0;c[xc>>2]=c[tc>>2];c[Za+356>>2]=xc;pc=0}c[oc>>2]=b;c[jc>>2]=pc;oc=c[oc>>2]|0;c[kc>>2]=oc;c[lc>>2]=c[kc>>2];c[Xb>>2]=c[c[lc>>2]>>2];Ec=c[jc>>2]|0;c[mc>>2]=oc;c[ic>>2]=c[mc>>2];c[c[ic>>2]>>2]=Ec;if((c[Xb>>2]|0)!=0){c[nc>>2]=oc;c[Wb>>2]=c[nc>>2];Dc=c[Xb>>2]|0;c[Yb>>2]=(c[Wb>>2]|0)+4;c[Zb>>2]=Dc;Dc=c[Yb>>2]|0;c[_b>>2]=Dc;c[$b>>2]=c[_b>>2];c[ac>>2]=c[$b>>2];Cc=c[ac>>2]|0;Ec=c[Zb>>2]|0;c[bc>>2]=Dc;c[cc>>2]=c[bc>>2];c[dc>>2]=c[cc>>2];Dc=c[c[dc>>2]>>2]|0;c[ec>>2]=Cc;c[fc>>2]=Ec;c[gc>>2]=Dc;Dc=c[fc>>2]|0;Ec=c[gc>>2]|0;c[Za+740>>2]=c[ec>>2];c[hc>>2]=Dc;c[Za+336>>2]=Ec;Ix(c[hc>>2]|0)}Ec=c[w>>2]|0;c[Pb>>2]=b;c[Qb>>2]=c[Pb>>2];c[Rb>>2]=c[Qb>>2];c[Sb>>2]=(c[Rb>>2]|0)+4;c[sb>>2]=c[Sb>>2];c[Ub>>2]=c[sb>>2];c[c[Ub>>2]>>2]=Ec;if(!((c[w>>2]|0)>>>0>0)){i=Za;return}c[Db>>2]=0;while(1){if(!((c[Db>>2]|0)>>>0<(c[w>>2]|0)>>>0))break;c[Fb>>2]=Eb;c[Gb>>2]=-1;Ec=c[Gb>>2]|0;c[Hb>>2]=c[Fb>>2];c[Ib>>2]=Ec;c[c[Hb>>2]>>2]=0;c[Jb>>2]=c[Eb>>2];c[Kb>>2]=Jb;Ec=c[Db>>2]|0;c[Lb>>2]=b;c[Mb>>2]=Ec;Ec=c[Mb>>2]|0;c[Nb>>2]=c[Lb>>2];c[Ob>>2]=c[Nb>>2];c[(c[c[Ob>>2]>>2]|0)+(Ec<<2)>>2]=0;c[Db>>2]=(c[Db>>2]|0)+1}c[Vb>>2]=b+8;c[tb>>2]=c[Vb>>2];c[ub>>2]=c[tb>>2];c[vb>>2]=c[ub>>2];c[h>>2]=c[vb>>2];c[Qa>>2]=c[c[h>>2]>>2];Ec=c[Qa>>2]|0;c[xb>>2]=wb;c[yb>>2]=-1;Dc=c[yb>>2]|0;c[zb>>2]=c[xb>>2];c[Ab>>2]=Dc;c[c[zb>>2]>>2]=0;c[Bb>>2]=c[wb>>2];c[Cb>>2]=Bb;if((Ec|0)==0){i=Za;return}tb=c[w>>2]|0;c[Tb>>2]=c[(c[Qa>>2]|0)+4>>2];c[rb>>2]=tb;tb=c[Tb>>2]|0;sb=c[rb>>2]|0;if((c[rb>>2]&(c[rb>>2]|0)-1|0)!=0)rb=(tb>>>0)%(sb>>>0)|0;else rb=tb&sb-1;c[j>>2]=rb;Dc=c[h>>2]|0;Ec=c[j>>2]|0;c[nb>>2]=b;c[qb>>2]=Ec;Ec=c[qb>>2]|0;c[ob>>2]=c[nb>>2];c[pb>>2]=c[ob>>2];c[(c[c[pb>>2]>>2]|0)+(Ec<<2)>>2]=Dc;c[v>>2]=c[j>>2];c[h>>2]=c[Qa>>2];c[Qa>>2]=c[c[Qa>>2]>>2];while(1){Ec=c[Qa>>2]|0;c[A>>2]=z;c[B>>2]=-1;Dc=c[B>>2]|0;c[C>>2]=c[A>>2];c[D>>2]=Dc;c[c[C>>2]>>2]=0;c[E>>2]=c[z>>2];c[F>>2]=E;if((Ec|0)==0)break;ob=c[w>>2]|0;c[x>>2]=c[(c[Qa>>2]|0)+4>>2];c[y>>2]=ob;ob=c[x>>2]|0;nb=c[y>>2]|0;if((c[y>>2]&(c[y>>2]|0)-1|0)!=0)nb=(ob>>>0)%(nb>>>0)|0;else nb=ob&nb-1;c[j>>2]=nb;do if((c[j>>2]|0)==(c[v>>2]|0))c[h>>2]=c[Qa>>2];else{Ec=c[j>>2]|0;c[k>>2]=b;c[l>>2]=Ec;Ec=c[l>>2]|0;c[m>>2]=c[k>>2];c[n>>2]=c[m>>2];Ec=c[(c[c[n>>2]>>2]|0)+(Ec<<2)>>2]|0;c[p>>2]=o;c[q>>2]=-1;Dc=c[q>>2]|0;c[r>>2]=c[p>>2];c[s>>2]=Dc;c[c[r>>2]>>2]=0;c[t>>2]=c[o>>2];c[u>>2]=t;if((Ec|0)==0){Dc=c[h>>2]|0;Ec=c[j>>2]|0;c[G>>2]=b;c[H>>2]=Ec;Ec=c[H>>2]|0;c[I>>2]=c[G>>2];c[J>>2]=c[I>>2];c[(c[c[J>>2]>>2]|0)+(Ec<<2)>>2]=Dc;c[h>>2]=c[Qa>>2];c[v>>2]=c[j>>2];break}c[K>>2]=c[Qa>>2];while(1){Ec=c[c[K>>2]>>2]|0;c[M>>2]=L;c[N>>2]=-1;Dc=c[N>>2]|0;c[O>>2]=c[M>>2];c[P>>2]=Dc;c[c[O>>2]>>2]=0;c[Q>>2]=c[L>>2];c[R>>2]=Q;if((Ec|0)==0)break;c[_>>2]=b;c[$>>2]=(c[_>>2]|0)+16;c[aa>>2]=c[$>>2];nb=(c[Qa>>2]|0)+8|0;Ec=(c[c[K>>2]>>2]|0)+8|0;c[ba>>2]=c[aa>>2];c[ca>>2]=nb;c[da>>2]=Ec;Ec=c[ca>>2]|0;nb=c[da>>2]|0;c[ea>>2]=c[ba>>2];c[fa>>2]=Ec;c[ga>>2]=nb;nb=c[ga>>2]|0;c[ha>>2]=c[fa>>2];c[ia>>2]=nb;c[ja>>2]=c[ha>>2];nb=c[ja>>2]|0;c[ka>>2]=nb;c[la>>2]=c[ka>>2];c[ma>>2]=c[la>>2];if((d[c[ma>>2]>>0]&1|0)!=0){c[na>>2]=nb;c[oa>>2]=c[na>>2];c[pa>>2]=c[oa>>2];nb=c[(c[pa>>2]|0)+4>>2]|0}else{c[qa>>2]=nb;c[ra>>2]=c[qa>>2];c[sa>>2]=c[ra>>2];nb=d[c[sa>>2]>>0]>>1}c[ta>>2]=nb;nb=c[ta>>2]|0;c[ua>>2]=c[ia>>2];ob=c[ua>>2]|0;c[va>>2]=ob;c[wa>>2]=c[va>>2];c[xa>>2]=c[wa>>2];if((d[c[xa>>2]>>0]&1|0)!=0){c[ya>>2]=ob;c[za>>2]=c[ya>>2];c[Aa>>2]=c[za>>2];ob=c[(c[Aa>>2]|0)+4>>2]|0}else{c[Ba>>2]=ob;c[Ca>>2]=c[Ba>>2];c[Da>>2]=c[Ca>>2];ob=d[c[Da>>2]>>0]>>1}do if((nb|0)==(ob|0)){c[Ea>>2]=c[ha>>2];c[Fa>>2]=c[Ea>>2];nb=c[Fa>>2]|0;c[Ga>>2]=nb;c[Ha>>2]=c[Ga>>2];c[Ia>>2]=c[Ha>>2];if((d[c[Ia>>2]>>0]&1|0)!=0){c[Ka>>2]=nb;c[La>>2]=c[Ka>>2];c[Ma>>2]=c[La>>2];nb=c[(c[Ma>>2]|0)+8>>2]|0}else{c[Na>>2]=nb;c[Oa>>2]=c[Na>>2];c[Pa>>2]=c[Oa>>2];c[f>>2]=(c[Pa>>2]|0)+1;c[Ra>>2]=c[f>>2];nb=c[Ra>>2]|0}c[Sa>>2]=nb;c[Ta>>2]=c[Sa>>2];c[Ua>>2]=c[ia>>2];c[Va>>2]=c[Ua>>2];nb=c[Va>>2]|0;c[Wa>>2]=nb;c[Xa>>2]=c[Wa>>2];c[Ya>>2]=c[Xa>>2];if((d[c[Ya>>2]>>0]&1|0)!=0){c[g>>2]=nb;c[_a>>2]=c[g>>2];c[$a>>2]=c[_a>>2];nb=c[(c[$a>>2]|0)+8>>2]|0}else{c[ab>>2]=nb;c[bb>>2]=c[ab>>2];c[cb>>2]=c[bb>>2];c[db>>2]=(c[cb>>2]|0)+1;c[eb>>2]=c[db>>2];nb=c[eb>>2]|0}c[fb>>2]=nb;c[gb>>2]=c[fb>>2];c[hb>>2]=c[ha>>2];c[ib>>2]=c[hb>>2];c[jb>>2]=c[ib>>2];if((d[c[jb>>2]>>0]&1|0)!=0){Dc=c[gb>>2]|0;Ec=c[ta>>2]|0;c[kb>>2]=c[Ta>>2];c[lb>>2]=Dc;c[mb>>2]=Ec;a[Ja>>0]=(iz(c[kb>>2]|0,c[lb>>2]|0,c[mb>>2]|0)|0)==0&1;break}while(1){if((c[ta>>2]|0)==0){nb=45;break}if((a[c[Ta>>2]>>0]|0)!=(a[c[gb>>2]>>0]|0)){nb=43;break}c[ta>>2]=(c[ta>>2]|0)+ -1;c[Ta>>2]=(c[Ta>>2]|0)+1;c[gb>>2]=(c[gb>>2]|0)+1}if((nb|0)==43){a[Ja>>0]=0;break}else if((nb|0)==45){a[Ja>>0]=1;break}}else a[Ja>>0]=0;while(0);if(!(a[Ja>>0]&1))break;c[K>>2]=c[c[K>>2]>>2]}c[c[h>>2]>>2]=c[c[K>>2]>>2];Dc=c[j>>2]|0;c[S>>2]=b;c[T>>2]=Dc;Dc=c[T>>2]|0;c[U>>2]=c[S>>2];c[V>>2]=c[U>>2];c[c[K>>2]>>2]=c[c[(c[c[V>>2]>>2]|0)+(Dc<<2)>>2]>>2];Dc=c[Qa>>2]|0;Ec=c[j>>2]|0;c[W>>2]=b;c[X>>2]=Ec;Ec=c[X>>2]|0;c[Y>>2]=c[W>>2];c[Z>>2]=c[Y>>2];c[c[(c[c[Z>>2]>>2]|0)+(Ec<<2)>>2]>>2]=Dc}while(0);c[Qa>>2]=c[c[h>>2]>>2]}i=Za;return}



function gl(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0;u=i;i=i+512|0;ab=u+224|0;$a=u+476|0;_a=u+468|0;fb=u+460|0;eb=u+208|0;ib=u+212|0;cb=u+216|0;db=u+220|0;bb=u+452|0;hb=u+20|0;Xa=u+24|0;Ya=u+28|0;Va=u+32|0;Wa=u+36|0;Ua=u+40|0;ta=u+428|0;Sa=u+44|0;Ta=u+48|0;Ea=u+52|0;Da=u+56|0;Ca=u+60|0;kb=u+64|0;jb=u+68|0;mb=u+72|0;nb=u+76|0;ob=u+80|0;pb=u+84|0;qb=u+88|0;rb=u+92|0;sb=u+96|0;ub=u+100|0;tb=u+424|0;Q=u+104|0;Z=u+108|0;Y=u+112|0;X=u+116|0;ca=u+120|0;ba=u+124|0;aa=u+128|0;$=u+132|0;_=u+136|0;ha=u+140|0;ga=u+144|0;fa=u+148|0;ea=u+152|0;da=u+156|0;D=u+160|0;K=u+164|0;J=u+168|0;I=u+172|0;P=u+176|0;O=u+180|0;N=u+184|0;M=u+188|0;L=u+192|0;W=u+196|0;V=u+448|0;U=u+456|0;T=u+464|0;S=u+472|0;H=u+480|0;G=u+488|0;F=u+492|0;oa=u+420|0;na=u+228|0;ma=u+232|0;ra=u+236|0;qa=u+240|0;pa=u+244|0;va=u+248|0;ua=u+252|0;g=u+256|0;sa=u+260|0;A=u+264|0;B=u+268|0;C=u+272|0;ya=u+276|0;xa=u+280|0;wa=u+284|0;Ba=u+288|0;Aa=u+292|0;za=u+296|0;Pa=u+300|0;Oa=u+304|0;Na=u+308|0;Ma=u+312|0;w=u+496|0;E=u+320|0;R=u+324|0;y=u+328|0;z=u+332|0;x=u+336|0;Ja=u+340|0;Ka=u+344|0;La=u+348|0;Ga=u+352|0;Ha=u+356|0;Ia=u+360|0;ka=u+364|0;la=u+368|0;ia=u+372|0;ja=u+376|0;p=u+380|0;s=u+384|0;t=u+388|0;q=u+392|0;r=u+396|0;m=u+400|0;n=u+404|0;k=u+408|0;l=u+412|0;j=u+416|0;h=u+16|0;o=u+12|0;vb=u+440|0;wb=u+432|0;xb=u;yb=u+8|0;Fa=u+444|0;lb=u+200|0;Ra=u+436|0;Qa=u+4|0;v=u+204|0;gb=u+484|0;Za=u+316|0;c[yb>>2]=e;c[Fa>>2]=f;f=c[yb>>2]|0;c[xb>>2]=f;c[wb>>2]=(c[xb>>2]|0)+12;c[vb>>2]=c[wb>>2];e=c[Fa>>2]|0;c[ub>>2]=c[vb>>2];c[tb>>2]=e;c[lb>>2]=Jd(c[ub>>2]|0,c[tb>>2]|0)|0;c[sb>>2]=f;c[rb>>2]=c[sb>>2];c[qb>>2]=c[rb>>2];c[pb>>2]=c[qb>>2];c[ob>>2]=(c[pb>>2]|0)+4;c[nb>>2]=c[ob>>2];c[mb>>2]=c[nb>>2];c[Ra>>2]=c[c[mb>>2]>>2];a:do if((c[Ra>>2]|0)!=0){yb=c[Ra>>2]|0;c[kb>>2]=c[lb>>2];c[jb>>2]=yb;lb=c[kb>>2]|0;kb=c[jb>>2]|0;if((c[jb>>2]&(c[jb>>2]|0)-1|0)!=0)jb=(lb>>>0)%(kb>>>0)|0;else jb=lb&kb-1;c[Qa>>2]=jb;yb=c[Qa>>2]|0;c[_a>>2]=f;c[fb>>2]=yb;yb=c[fb>>2]|0;c[$a>>2]=c[_a>>2];c[ab>>2]=c[$a>>2];c[v>>2]=c[(c[c[ab>>2]>>2]|0)+(yb<<2)>>2];yb=c[v>>2]|0;c[cb>>2]=bb;c[db>>2]=-1;xb=c[db>>2]|0;c[eb>>2]=c[cb>>2];c[ib>>2]=xb;c[c[eb>>2]>>2]=0;c[gb>>2]=c[bb>>2];c[hb>>2]=gb;if((yb|0)!=0){c[v>>2]=c[c[v>>2]>>2];while(1){yb=c[v>>2]|0;c[Va>>2]=Ua;c[Wa>>2]=-1;xb=c[Wa>>2]|0;c[Xa>>2]=c[Va>>2];c[Ya>>2]=xb;c[c[Xa>>2]>>2]=0;c[Za>>2]=c[Ua>>2];c[ta>>2]=Za;if((yb|0)==0)break a;$a=c[Ra>>2]|0;c[Sa>>2]=c[(c[v>>2]|0)+4>>2];c[Ta>>2]=$a;$a=c[Sa>>2]|0;_a=c[Ta>>2]|0;if((c[Ta>>2]&(c[Ta>>2]|0)-1|0)!=0)_a=($a>>>0)%(_a>>>0)|0;else _a=$a&_a-1;if((_a|0)!=(c[Qa>>2]|0))break a;c[Ca>>2]=f;c[Da>>2]=(c[Ca>>2]|0)+16;c[Ea>>2]=c[Da>>2];_a=(c[v>>2]|0)+8|0;yb=c[Fa>>2]|0;c[Ga>>2]=c[Ea>>2];c[Ha>>2]=_a;c[Ia>>2]=yb;yb=c[Ha>>2]|0;_a=c[Ia>>2]|0;c[Ja>>2]=c[Ga>>2];c[Ka>>2]=yb;c[La>>2]=_a;_a=c[La>>2]|0;c[E>>2]=c[Ka>>2];c[R>>2]=_a;c[Ma>>2]=c[E>>2];_a=c[Ma>>2]|0;c[Na>>2]=_a;c[Oa>>2]=c[Na>>2];c[Pa>>2]=c[Oa>>2];if((d[c[Pa>>2]>>0]&1|0)!=0){c[wa>>2]=_a;c[xa>>2]=c[wa>>2];c[ya>>2]=c[xa>>2];_a=c[(c[ya>>2]|0)+4>>2]|0}else{c[za>>2]=_a;c[Aa>>2]=c[za>>2];c[Ba>>2]=c[Aa>>2];_a=d[c[Ba>>2]>>0]>>1}c[y>>2]=_a;_a=c[y>>2]|0;c[sa>>2]=c[R>>2];$a=c[sa>>2]|0;c[g>>2]=$a;c[ua>>2]=c[g>>2];c[va>>2]=c[ua>>2];if((d[c[va>>2]>>0]&1|0)!=0){c[ma>>2]=$a;c[na>>2]=c[ma>>2];c[oa>>2]=c[na>>2];$a=c[(c[oa>>2]|0)+4>>2]|0}else{c[pa>>2]=$a;c[qa>>2]=c[pa>>2];c[ra>>2]=c[qa>>2];$a=d[c[ra>>2]>>0]>>1}do if((_a|0)==($a|0)){c[da>>2]=c[E>>2];c[ea>>2]=c[da>>2];_a=c[ea>>2]|0;c[fa>>2]=_a;c[ga>>2]=c[fa>>2];c[ha>>2]=c[ga>>2];if((d[c[ha>>2]>>0]&1|0)!=0){c[X>>2]=_a;c[Y>>2]=c[X>>2];c[Z>>2]=c[Y>>2];_a=c[(c[Z>>2]|0)+8>>2]|0}else{c[_>>2]=_a;c[$>>2]=c[_>>2];c[aa>>2]=c[$>>2];c[ba>>2]=(c[aa>>2]|0)+1;c[ca>>2]=c[ba>>2];_a=c[ca>>2]|0}c[Q>>2]=_a;c[z>>2]=c[Q>>2];c[S>>2]=c[R>>2];c[T>>2]=c[S>>2];_a=c[T>>2]|0;c[U>>2]=_a;c[V>>2]=c[U>>2];c[W>>2]=c[V>>2];if((d[c[W>>2]>>0]&1|0)!=0){c[I>>2]=_a;c[J>>2]=c[I>>2];c[K>>2]=c[J>>2];_a=c[(c[K>>2]|0)+8>>2]|0}else{c[L>>2]=_a;c[M>>2]=c[L>>2];c[N>>2]=c[M>>2];c[O>>2]=(c[N>>2]|0)+1;c[P>>2]=c[O>>2];_a=c[P>>2]|0}c[D>>2]=_a;c[x>>2]=c[D>>2];c[F>>2]=c[E>>2];c[G>>2]=c[F>>2];c[H>>2]=c[G>>2];if((d[c[H>>2]>>0]&1|0)!=0){xb=c[x>>2]|0;yb=c[y>>2]|0;c[A>>2]=c[z>>2];c[B>>2]=xb;c[C>>2]=yb;a[w>>0]=(iz(c[A>>2]|0,c[B>>2]|0,c[C>>2]|0)|0)==0&1;break}while(1){if((c[y>>2]|0)==0){_a=32;break}if((a[c[z>>2]>>0]|0)!=(a[c[x>>2]>>0]|0)){_a=30;break}c[y>>2]=(c[y>>2]|0)+ -1;c[z>>2]=(c[z>>2]|0)+1;c[x>>2]=(c[x>>2]|0)+1}if((_a|0)==30){a[w>>0]=0;break}else if((_a|0)==32){a[w>>0]=1;break}}else a[w>>0]=0;while(0);_a=c[v>>2]|0;if(a[w>>0]&1)break;c[v>>2]=c[_a>>2]}c[ia>>2]=b;c[ja>>2]=_a;yb=c[ja>>2]|0;c[ka>>2]=c[ia>>2];c[la>>2]=yb;c[c[ka>>2]>>2]=c[la>>2];i=u;return}}while(0);c[h>>2]=f;c[k>>2]=j;c[l>>2]=-1;yb=c[l>>2]|0;c[m>>2]=c[k>>2];c[n>>2]=yb;c[c[m>>2]>>2]=0;c[o>>2]=c[j>>2];c[p>>2]=o;c[q>>2]=b;c[r>>2]=0;yb=c[r>>2]|0;c[s>>2]=c[q>>2];c[t>>2]=yb;c[c[s>>2]>>2]=c[t>>2];i=u;return}function hl(a){a=a|0;var b=0,d=0,e=0,f=0,h=0.0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0;b=i;i=i+464|0;d=b+444|0;f=b+4|0;e=b+8|0;j=b+12|0;l=b+16|0;k=b+216|0;m=b+220|0;n=b+400|0;p=b+32|0;o=b+40|0;q=b+44|0;r=b+48|0;s=b+52|0;t=b+56|0;v=b+60|0;u=b+64|0;z=b+72|0;B=b+80|0;A=b+84|0;y=b+88|0;w=b+92|0;x=b+96|0;C=b+100|0;D=b+108|0;E=b+112|0;F=b+116|0;H=b+120|0;G=b+128|0;I=b+132|0;J=b+136|0;K=b+140|0;L=b+144|0;N=b+148|0;M=b+152|0;O=b+156|0;P=b+160|0;R=b+164|0;Q=b+168|0;S=b+172|0;T=b+176|0;U=b+180|0;V=b+184|0;X=b+188|0;W=b+192|0;Y=b+196|0;Z=b+408|0;_=b+416|0;$=b+424|0;aa=b+432|0;ba=b+440|0;da=b+448|0;ca=b+228|0;ea=b+232|0;ga=b+236|0;fa=b+240|0;ha=b+244|0;ia=b+248|0;ja=b+252|0;ma=b+256|0;la=b+264|0;na=b+268|0;oa=b+272|0;pa=b+276|0;qa=b+280|0;sa=b+284|0;ra=b+288|0;wa=b+296|0;ya=b+304|0;xa=b+308|0;va=b+312|0;ta=b+316|0;ua=b+320|0;za=b+324|0;Aa=b+332|0;Ba=b+336|0;Ca=b+340|0;Ea=b+344|0;Da=b+352|0;Fa=b+356|0;Ga=b+360|0;Ha=b+364|0;Ia=b+368|0;Ka=b+372|0;Ja=b+376|0;La=b+380|0;Ma=b+384|0;Oa=b+388|0;Na=b+392|0;Pa=b+396|0;Qa=b+24|0;Ra=b;Sa=b+20|0;Ua=b+404|0;Ta=b+204|0;Va=b+412|0;Wa=b+28|0;ka=b+208|0;Xa=b+420|0;Ya=b+212|0;Za=b+428|0;_a=b+200|0;c[_a>>2]=a;a=c[_a>>2]|0;c[Za>>2]=a;c[Ya>>2]=c[Za>>2];c[Xa>>2]=c[Ya>>2];c[ka>>2]=c[Xa>>2];ka=c[ka>>2]|0;c[Wa>>2]=ka;c[Va>>2]=c[Wa>>2];c[Ua>>2]=c[Va>>2];c[Ta>>2]=0;Ta=c[Ta>>2]|0;c[Ra>>2]=c[Ua>>2];c[Sa>>2]=Ta;Ra=c[Ra>>2]|0;c[Qa>>2]=Sa;Qa=c[c[Qa>>2]>>2]|0;c[Na>>2]=Ra;c[Pa>>2]=Qa;Na=c[Na>>2]|0;c[Oa>>2]=Pa;c[Na>>2]=c[c[Oa>>2]>>2];c[Ma>>2]=Na+4;c[La>>2]=c[Ma>>2];c[Ka>>2]=c[La>>2];c[Ja>>2]=0;Ja=c[Ja>>2]|0;c[Ha>>2]=c[Ka>>2];c[Ia>>2]=Ja;Ha=c[Ha>>2]|0;c[Ga>>2]=Ia;Ga=c[c[Ga>>2]>>2]|0;c[Da>>2]=Ha;c[Fa>>2]=Ga;Da=c[Da>>2]|0;c[b+348>>2]=Da;c[Ea>>2]=Fa;c[Da>>2]=c[c[Ea>>2]>>2];c[Ca>>2]=ka+8;c[Ba>>2]=c[Ca>>2];c[Aa>>2]=c[Ba>>2];Aa=c[Aa>>2]|0;c[b+328>>2]=Aa;c[za>>2]=Aa;c[ta>>2]=c[za>>2];ta=c[ta>>2]|0;c[ya>>2]=va;c[xa>>2]=-1;xa=c[xa>>2]|0;c[wa>>2]=c[ya>>2];c[b+300>>2]=xa;c[c[wa>>2]>>2]=0;c[ua>>2]=c[va>>2];c[b+292>>2]=ua;c[ta>>2]=0;c[sa>>2]=ka+12;c[ra>>2]=0;ra=c[ra>>2]|0;c[pa>>2]=c[sa>>2];c[qa>>2]=ra;pa=c[pa>>2]|0;c[oa>>2]=qa;oa=c[c[oa>>2]>>2]|0;c[la>>2]=pa;c[na>>2]=oa;la=c[la>>2]|0;c[b+260>>2]=la;c[ma>>2]=na;c[la>>2]=c[c[ma>>2]>>2];c[ia>>2]=ka+16;g[ja>>2]=1.0;h=+g[ja>>2];c[fa>>2]=c[ia>>2];g[ha>>2]=h;fa=c[fa>>2]|0;c[ga>>2]=ha;h=+g[c[ga>>2]>>2];c[ca>>2]=fa;g[ea>>2]=h;ca=c[ca>>2]|0;c[b+224>>2]=ca;c[da>>2]=ea;g[ca>>2]=+g[c[da>>2]>>2];c[ba>>2]=a+20;c[aa>>2]=c[ba>>2];c[$>>2]=c[aa>>2];c[_>>2]=c[$>>2];a=c[_>>2]|0;c[Z>>2]=a;c[Y>>2]=c[Z>>2];c[X>>2]=c[Y>>2];c[W>>2]=0;W=c[W>>2]|0;c[U>>2]=c[X>>2];c[V>>2]=W;U=c[U>>2]|0;c[T>>2]=V;T=c[c[T>>2]>>2]|0;c[Q>>2]=U;c[S>>2]=T;Q=c[Q>>2]|0;c[R>>2]=S;c[Q>>2]=c[c[R>>2]>>2];c[P>>2]=Q+4;c[O>>2]=c[P>>2];c[N>>2]=c[O>>2];c[M>>2]=0;M=c[M>>2]|0;c[K>>2]=c[N>>2];c[L>>2]=M;K=c[K>>2]|0;c[J>>2]=L;J=c[c[J>>2]>>2]|0;c[G>>2]=K;c[I>>2]=J;G=c[G>>2]|0;c[b+124>>2]=G;c[H>>2]=I;c[G>>2]=c[c[H>>2]>>2];c[F>>2]=a+8;c[E>>2]=c[F>>2];c[D>>2]=c[E>>2];D=c[D>>2]|0;c[b+104>>2]=D;c[C>>2]=D;c[w>>2]=c[C>>2];w=c[w>>2]|0;c[B>>2]=y;c[A>>2]=-1;A=c[A>>2]|0;c[z>>2]=c[B>>2];c[b+76>>2]=A;c[c[z>>2]>>2]=0;c[x>>2]=c[y>>2];c[b+68>>2]=x;c[w>>2]=0;c[v>>2]=a+12;c[u>>2]=0;u=c[u>>2]|0;c[s>>2]=c[v>>2];c[t>>2]=u;s=c[s>>2]|0;c[r>>2]=t;r=c[c[r>>2]>>2]|0;c[o>>2]=s;c[q>>2]=r;o=c[o>>2]|0;c[b+36>>2]=o;c[p>>2]=q;c[o>>2]=c[c[p>>2]>>2];c[m>>2]=a+16;g[n>>2]=1.0;h=+g[n>>2];c[l>>2]=c[m>>2];g[k>>2]=h;a=c[l>>2]|0;c[j>>2]=k;h=+g[c[j>>2]>>2];c[f>>2]=a;g[e>>2]=h;a=c[f>>2]|0;c[b+436>>2]=a;c[d>>2]=e;g[a>>2]=+g[c[d>>2]>>2];i=b;return}function il(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;jl(c[d>>2]|0);i=b;return}function jl(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;kl(c[d>>2]|0);i=b;return}function kl(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;ll(c[d>>2]|0);i=b;return}function ll(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;b=i;i=i+112|0;e=b+40|0;l=b+36|0;t=b+32|0;v=b+100|0;o=b+92|0;n=b+8|0;m=b+12|0;s=b+16|0;p=b+80|0;q=b+88|0;r=b+96|0;d=b+104|0;k=b+108|0;j=b+60|0;g=b+44|0;h=b+48|0;w=b+52|0;x=b+56|0;y=b+4|0;u=b+68|0;f=b+76|0;z=b+24|0;A=b+72|0;B=b;C=b+28|0;D=b+84|0;c[D>>2]=a;a=c[D>>2]|0;c[C>>2]=a+8;c[B>>2]=c[C>>2];ml(a,c[c[B>>2]>>2]|0);c[A>>2]=a;c[z>>2]=c[A>>2];c[y>>2]=c[z>>2];c[u>>2]=0;a=c[y>>2]|0;c[x>>2]=a;c[w>>2]=c[x>>2];c[f>>2]=c[c[w>>2]>>2];u=c[u>>2]|0;c[v>>2]=a;c[t>>2]=c[v>>2];c[c[t>>2]>>2]=u;if((c[f>>2]|0)==0){i=b;return}c[l>>2]=a;c[e>>2]=c[l>>2];C=c[f>>2]|0;c[g>>2]=(c[e>>2]|0)+4;c[h>>2]=C;C=c[g>>2]|0;c[j>>2]=C;c[k>>2]=c[j>>2];c[d>>2]=c[k>>2];B=c[d>>2]|0;D=c[h>>2]|0;c[m>>2]=C;c[n>>2]=c[m>>2];c[o>>2]=c[n>>2];C=c[c[o>>2]>>2]|0;c[p>>2]=B;c[q>>2]=D;c[r>>2]=C;C=c[q>>2]|0;D=c[r>>2]|0;c[b+64>>2]=c[p>>2];c[s>>2]=C;c[b+20>>2]=D;Ix(c[s>>2]|0);i=b;return}function ml(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;r=i;i=i+112|0;q=r+36|0;n=r+64|0;v=r+4|0;w=r+32|0;u=r;e=r+68|0;s=r+12|0;t=r+104|0;k=r+44|0;l=r+20|0;h=r+24|0;j=r+28|0;g=r+96|0;A=r+100|0;B=r+40|0;C=r+56|0;x=r+52|0;y=r+48|0;z=r+72|0;D=r+76|0;E=r+80|0;F=r+84|0;G=r+88|0;f=r+16|0;p=r+8|0;m=r+92|0;o=r+60|0;c[G>>2]=b;c[f>>2]=d;c[F>>2]=c[G>>2];c[E>>2]=(c[F>>2]|0)+8;c[D>>2]=c[E>>2];c[p>>2]=c[D>>2];while(1){G=c[f>>2]|0;c[h>>2]=g;c[j>>2]=-1;F=c[j>>2]|0;c[k>>2]=c[h>>2];c[l>>2]=F;c[c[k>>2]>>2]=0;c[m>>2]=c[g>>2];c[n>>2]=m;if((G|0)==0)break;c[o>>2]=c[c[f>>2]>>2];F=c[p>>2]|0;c[q>>2]=(c[f>>2]|0)+8;G=c[q>>2]|0;c[e>>2]=F;c[s>>2]=G;G=c[e>>2]|0;F=c[s>>2]|0;a[u+0>>0]=a[t+0>>0]|0;c[v>>2]=G;c[w>>2]=F;nl(c[w>>2]|0);F=c[f>>2]|0;c[x>>2]=c[p>>2];c[y>>2]=F;c[z>>2]=1;F=c[y>>2]|0;G=c[z>>2]|0;c[A>>2]=c[x>>2];c[B>>2]=F;c[C>>2]=G;Ix(c[B>>2]|0);c[f>>2]=c[o>>2]}i=r;return}function nl(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;ol(c[d>>2]|0);i=b;return}function ol(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;pl(c[d>>2]|0);i=b;return}function pl(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;ql(c[d>>2]|0);i=b;return}function ql(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Kn(c[d>>2]|0);i=b;return}function rl(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=c[(c[d>>2]|0)+12>>2]|0;if((a|0)==0){i=b;return}Jx(a);i=b;return}function sl(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;xj(c[d>>2]|0);i=b;return}function tl(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;xl(c[d>>2]|0);i=b;return}function ul(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;vl(c[d>>2]|0);i=b;return}function vl(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;c[a+33619968>>2]=4;c[a+33619972>>2]=11;c[a+33619976>>2]=15;c[a+33619980>>2]=16;c[a+33619984>>2]=0;h[a+33619992>>3]=5.4;c[a+3362e4>>2]=0;wl(a);i=b;return}function wl(d){d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=i;i=i+64|0;h=e+32|0;f=e+12|0;g=e+44|0;k=e+36|0;j=e+16|0;l=e+40|0;n=e+48|0;m=e+52|0;o=e+56|0;r=e;q=e+20|0;p=e+4|0;t=e+24|0;s=e+60|0;v=e+28|0;u=e+8|0;c[v>>2]=d;d=c[v>>2]|0;c[u>>2]=0;c[q>>2]=d;c[p>>2]=d+65536;c[t>>2]=u;q=c[q>>2]|0;p=c[p>>2]|0;d=c[t>>2]|0;a[r+0>>0]=a[s+0>>0]|0;c[n>>2]=q;c[m>>2]=p;c[o>>2]=d;m=((c[m>>2]|0)-(c[n>>2]|0)|0)/2|0;d=c[o>>2]|0;c[k>>2]=c[n>>2];c[j>>2]=m;c[l>>2]=d;j=c[j>>2]|0;d=c[l>>2]|0;c[h>>2]=c[k>>2];c[f>>2]=j;c[g>>2]=d;while(1){if((c[f>>2]|0)<=0)break;b[c[h>>2]>>1]=c[c[g>>2]>>2];c[h>>2]=(c[h>>2]|0)+2;c[f>>2]=(c[f>>2]|0)+ -1}i=e;return}function xl(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;c[a+33619968>>2]=4;c[a+33619972>>2]=11;c[a+33619976>>2]=15;c[a+33619980>>2]=16;c[a+33619984>>2]=0;h[a+33619992>>3]=5.4;c[a+3362e4>>2]=0;yl(a);i=b;return}function yl(d){d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=i;i=i+64|0;h=e+32|0;f=e+12|0;g=e+44|0;k=e+36|0;j=e+16|0;l=e+40|0;n=e+48|0;m=e+52|0;o=e+56|0;r=e;q=e+20|0;p=e+4|0;t=e+24|0;s=e+60|0;v=e+28|0;u=e+8|0;c[v>>2]=d;d=c[v>>2]|0;c[u>>2]=0;c[q>>2]=d;c[p>>2]=d+65536;c[t>>2]=u;q=c[q>>2]|0;p=c[p>>2]|0;d=c[t>>2]|0;a[r+0>>0]=a[s+0>>0]|0;c[n>>2]=q;c[m>>2]=p;c[o>>2]=d;m=((c[m>>2]|0)-(c[n>>2]|0)|0)/2|0;d=c[o>>2]|0;c[k>>2]=c[n>>2];c[j>>2]=m;c[l>>2]=d;j=c[j>>2]|0;d=c[l>>2]|0;c[h>>2]=c[k>>2];c[f>>2]=j;c[g>>2]=d;while(1){if((c[f>>2]|0)<=0)break;b[c[h>>2]>>1]=c[c[g>>2]>>2];c[h>>2]=(c[h>>2]|0)+2;c[f>>2]=(c[f>>2]|0)+ -1}i=e;return}function zl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+32|0;l=f+16|0;k=f+12|0;j=f+8|0;h=f+4|0;g=f;c[l>>2]=b;c[k>>2]=d;c[j>>2]=e;e=c[l>>2]|0;c[e>>2]=c[k>>2];c[e+4>>2]=c[j>>2];c[e+8>>2]=0;c[h>>2]=(1<<c[e>>2])+(1<<c[e+4>>2]);b=(c[h>>2]|0)+2|0;c[e+12>>2]=Hx((b|0)<0?-1:b)|0;c[g>>2]=0;while(1){if((c[g>>2]|0)>=2)break;a[(c[e+12>>2]|0)+((c[h>>2]|0)+(c[g>>2]|0))>>0]=0;c[g>>2]=(c[g>>2]|0)+1}i=f;return}function Al(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;b=i;i=i+96|0;d=b+84|0;f=b;e=b+28|0;h=b+76|0;g=b+8|0;j=b+12|0;k=b+44|0;l=b+64|0;m=b+72|0;n=b+80|0;p=b+88|0;o=b+36|0;q=b+40|0;r=b+48|0;s=b+56|0;t=b+16|0;v=b+60|0;u=b+4|0;w=b+20|0;x=b+68|0;y=b+24|0;c[y>>2]=a;a=c[y>>2]|0;c[x>>2]=a;c[w>>2]=c[x>>2];c[v>>2]=c[w>>2];c[u>>2]=0;u=c[u>>2]|0;c[s>>2]=c[v>>2];c[t>>2]=u;s=c[s>>2]|0;c[r>>2]=t;r=c[c[r>>2]>>2]|0;c[o>>2]=s;c[q>>2]=r;o=c[o>>2]|0;c[b+32>>2]=o;c[p>>2]=q;c[o>>2]=c[c[p>>2]>>2];c[n>>2]=a+4;c[m>>2]=c[n>>2];c[k>>2]=c[m>>2];c[l>>2]=0;a=c[l>>2]|0;c[g>>2]=c[k>>2];c[j>>2]=a;g=c[g>>2]|0;c[h>>2]=j;a=c[c[h>>2]>>2]|0;c[f>>2]=g;c[e>>2]=a;a=c[f>>2]|0;c[b+52>>2]=a;c[d>>2]=e;c[a>>2]=c[c[d>>2]>>2];i=b;return}function Bl(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Cl(c[d>>2]|0);i=b;return}function Cl(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=i;i=i+144|0;w=d+48|0;B=d+8|0;C=d+84|0;A=d;x=d+16|0;y=d+4|0;z=d+132|0;v=d+80|0;u=d+44|0;t=d+20|0;E=d+24|0;e=d+28|0;D=d+32|0;g=d+36|0;f=d+40|0;s=d+76|0;l=d+124|0;k=d+128|0;j=d+52|0;h=d+56|0;p=d+64|0;q=d+68|0;r=d+92|0;m=d+96|0;n=d+100|0;o=d+104|0;I=d+108|0;K=d+116|0;J=d+120|0;H=d+88|0;F=d+72|0;G=d+12|0;c[F>>2]=b;b=c[F>>2]|0;F=c[b>>2]|0;c[K>>2]=H;c[J>>2]=-1;J=c[J>>2]|0;c[I>>2]=c[K>>2];c[d+112>>2]=J;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[d+60>>2]=G;if((F|0)==0){i=d;return}c[D>>2]=b;K=c[D>>2]|0;D=c[K>>2]|0;c[E>>2]=K;c[e>>2]=D;D=c[E>>2]|0;while(1){if((c[e>>2]|0)==(c[D+4>>2]|0))break;c[t>>2]=D;c[u>>2]=(c[t>>2]|0)+8;c[v>>2]=c[u>>2];K=c[v>>2]|0;I=D+4|0;J=(c[I>>2]|0)+ -788|0;c[I>>2]=J;c[w>>2]=J;J=c[w>>2]|0;c[x>>2]=K;c[y>>2]=J;J=c[x>>2]|0;K=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=J;c[C>>2]=K}c[s>>2]=b;c[f>>2]=(c[s>>2]|0)+8;c[g>>2]=c[f>>2];I=c[g>>2]|0;K=c[b>>2]|0;c[h>>2]=b;J=c[h>>2]|0;c[j>>2]=J;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];J=((c[c[l>>2]>>2]|0)-(c[J>>2]|0)|0)/788|0;c[m>>2]=I;c[n>>2]=K;c[o>>2]=J;J=c[n>>2]|0;K=c[o>>2]|0;c[p>>2]=c[m>>2];c[q>>2]=J;c[r>>2]=K;Ix(c[q>>2]|0);i=d;return}function Dl(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;El(c[d>>2]|0);i=b;return}function El(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=i;i=i+144|0;w=d+48|0;B=d+8|0;C=d+84|0;A=d;x=d+16|0;y=d+4|0;z=d+132|0;v=d+80|0;u=d+44|0;t=d+20|0;E=d+24|0;e=d+28|0;D=d+32|0;g=d+36|0;f=d+40|0;s=d+76|0;l=d+124|0;k=d+128|0;j=d+52|0;h=d+56|0;p=d+64|0;q=d+68|0;r=d+92|0;m=d+96|0;n=d+100|0;o=d+104|0;I=d+108|0;K=d+116|0;J=d+120|0;H=d+88|0;F=d+72|0;G=d+12|0;c[F>>2]=b;b=c[F>>2]|0;F=c[b>>2]|0;c[K>>2]=H;c[J>>2]=-1;J=c[J>>2]|0;c[I>>2]=c[K>>2];c[d+112>>2]=J;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[d+60>>2]=G;if((F|0)==0){i=d;return}c[D>>2]=b;K=c[D>>2]|0;D=c[K>>2]|0;c[E>>2]=K;c[e>>2]=D;D=c[E>>2]|0;while(1){if((c[e>>2]|0)==(c[D+4>>2]|0))break;c[t>>2]=D;c[u>>2]=(c[t>>2]|0)+8;c[v>>2]=c[u>>2];K=c[v>>2]|0;I=D+4|0;J=(c[I>>2]|0)+ -2132|0;c[I>>2]=J;c[w>>2]=J;J=c[w>>2]|0;c[x>>2]=K;c[y>>2]=J;J=c[x>>2]|0;K=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=J;c[C>>2]=K}c[s>>2]=b;c[f>>2]=(c[s>>2]|0)+8;c[g>>2]=c[f>>2];I=c[g>>2]|0;K=c[b>>2]|0;c[h>>2]=b;J=c[h>>2]|0;c[j>>2]=J;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];J=((c[c[l>>2]>>2]|0)-(c[J>>2]|0)|0)/2132|0;c[m>>2]=I;c[n>>2]=K;c[o>>2]=J;J=c[n>>2]|0;K=c[o>>2]|0;c[p>>2]=c[m>>2];c[q>>2]=J;c[r>>2]=K;Ix(c[q>>2]|0);i=d;return}function Fl(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Gl(c[d>>2]|0);i=b;return}function Gl(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=i;i=i+144|0;w=d+48|0;B=d+8|0;C=d+84|0;A=d;x=d+16|0;y=d+4|0;z=d+132|0;v=d+80|0;u=d+44|0;t=d+20|0;E=d+24|0;e=d+28|0;D=d+32|0;g=d+36|0;f=d+40|0;s=d+76|0;l=d+124|0;k=d+128|0;j=d+52|0;h=d+56|0;p=d+64|0;q=d+68|0;r=d+92|0;m=d+96|0;n=d+100|0;o=d+104|0;I=d+108|0;K=d+116|0;J=d+120|0;H=d+88|0;F=d+72|0;G=d+12|0;c[F>>2]=b;b=c[F>>2]|0;F=c[b>>2]|0;c[K>>2]=H;c[J>>2]=-1;J=c[J>>2]|0;c[I>>2]=c[K>>2];c[d+112>>2]=J;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[d+60>>2]=G;if((F|0)==0){i=d;return}c[D>>2]=b;K=c[D>>2]|0;D=c[K>>2]|0;c[E>>2]=K;c[e>>2]=D;D=c[E>>2]|0;while(1){if((c[e>>2]|0)==(c[D+4>>2]|0))break;c[t>>2]=D;c[u>>2]=(c[t>>2]|0)+8;c[v>>2]=c[u>>2];K=c[v>>2]|0;I=D+4|0;J=(c[I>>2]|0)+ -1580|0;c[I>>2]=J;c[w>>2]=J;J=c[w>>2]|0;c[x>>2]=K;c[y>>2]=J;J=c[x>>2]|0;K=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=J;c[C>>2]=K}c[s>>2]=b;c[f>>2]=(c[s>>2]|0)+8;c[g>>2]=c[f>>2];I=c[g>>2]|0;K=c[b>>2]|0;c[h>>2]=b;J=c[h>>2]|0;c[j>>2]=J;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];J=((c[c[l>>2]>>2]|0)-(c[J>>2]|0)|0)/1580|0;c[m>>2]=I;c[n>>2]=K;c[o>>2]=J;J=c[n>>2]|0;K=c[o>>2]|0;c[p>>2]=c[m>>2];c[q>>2]=J;c[r>>2]=K;Ix(c[q>>2]|0);i=d;return}function Hl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+32|0;f=d+16|0;g=d+12|0;h=d+8|0;j=d+4|0;e=d;c[j>>2]=a;c[e>>2]=b;b=c[j>>2]|0;c[b>>2]=c[e>>2];c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[h>>2]=(c[e>>2]|0)+28;a=c[h>>2]|0;if((c[a>>2]|0)==(c[a+4>>2]|0)){i=d;return}c[f>>2]=(c[e>>2]|0)+28;c[g>>2]=0;c[b+12>>2]=c[(c[c[f>>2]>>2]|0)+(c[g>>2]<<2)>>2];i=d;return}function Il(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0;j=i;i=i+656|0;q=j+284|0;o=j+620|0;u=j+612|0;s=j+604|0;p=j+4|0;n=j+268|0;t=j+272|0;m=j+276|0;r=j+280|0;v=j+596|0;x=j+24|0;E=j+28|0;D=j+32|0;y=j+36|0;C=j+40|0;B=j+548|0;A=j+44|0;z=j+48|0;I=j+52|0;F=j+56|0;H=j+60|0;G=j+64|0;J=j+68|0;K=j+72|0;Q=j+76|0;w=j+80|0;O=j+84|0;P=j+88|0;N=j+92|0;M=j+96|0;L=j+100|0;X=j+544|0;W=j+104|0;U=j+108|0;V=j+112|0;S=j+116|0;T=j+120|0;ea=j+124|0;fa=j+128|0;ga=j+132|0;ka=j+136|0;aa=j+140|0;ba=j+144|0;ca=j+148|0;da=j+152|0;ha=j+156|0;ia=j+160|0;ja=j+164|0;la=j+168|0;ma=j+172|0;Y=j+176|0;ra=j+180|0;qa=j+184|0;pa=j+188|0;ua=j+192|0;ta=j+196|0;na=j+200|0;sa=j+204|0;oa=j+208|0;va=j+212|0;wa=j+216|0;Ma=j+220|0;Na=j+224|0;Oa=j+540|0;Ba=j+228|0;Ha=j+232|0;Ia=j+236|0;Ca=j+240|0;Ea=j+244|0;Ga=j+248|0;Ua=j+252|0;Wa=j+576|0;ob=j+592|0;qb=j+600|0;Xa=j+608|0;jb=j+616|0;kb=j+624|0;lb=j+640|0;mb=j+644|0;nb=j+288|0;ab=j+292|0;hb=j+296|0;ib=j+300|0;tb=j+304|0;sb=j+308|0;Qb=j+312|0;Ta=j+316|0;Ob=j+320|0;Pb=j+324|0;Nb=j+328|0;Mb=j+332|0;Lb=j+336|0;Kb=j+340|0;Hb=j+344|0;Ib=j+348|0;Jb=j+352|0;Eb=j+356|0;Fb=j+360|0;Gb=j+364|0;Da=j+368|0;za=j+372|0;Fa=j+376|0;Pa=j+380|0;Qa=j+384|0;Aa=j+388|0;Ja=j+392|0;Ka=j+396|0;La=j+400|0;Sa=j+404|0;Va=j+408|0;gb=j+412|0;eb=j+416|0;fb=j+420|0;_a=j+424|0;Za=j+428|0;Ya=j+432|0;pb=j+436|0;$a=j+440|0;db=j+444|0;cb=j+448|0;bb=j+452|0;rb=j+456|0;ub=j+460|0;Sb=j+464|0;Ra=j+468|0;vb=j+472|0;Tb=j+476|0;wb=j+536|0;xb=j+480|0;yb=j+484|0;zb=j+488|0;Cb=j+492|0;Bb=j+496|0;Ab=j+500|0;Ub=j+504|0;Rb=j+508|0;Db=j+512|0;Xb=j+516|0;Zb=j+524|0;_b=j+528|0;$b=j+532|0;ac=j+20|0;Yb=j+16|0;bc=j+568|0;cc=j+552|0;R=j+572|0;Wb=j+256|0;$=j;k=j+648|0;Vb=j+260|0;ya=j+580|0;xa=j+556|0;_=j+8|0;Z=j+264|0;h=j+628|0;l=j+12|0;c[R>>2]=e;c[Wb>>2]=f;c[$>>2]=g;a[k>>0]=0;f=c[c[R>>2]>>2]|0;c[bc>>2]=b;c[cc>>2]=f;f=c[cc>>2]|0;c[ac>>2]=c[bc>>2];c[Yb>>2]=f;f=c[ac>>2]|0;c[$b>>2]=f;c[_b>>2]=c[$b>>2];c[Zb>>2]=c[_b>>2];c[j+520>>2]=c[Zb>>2];e=c[Yb>>2]|0;c[Xb>>2]=c[Yb>>2];Hn(f,e,mz(c[Xb>>2]|0)|0);if((c[(c[R>>2]|0)+4>>2]|0)<=9)c[$>>2]=(c[$>>2]|0)-(c[(c[R>>2]|0)+4>>2]|0);a:do if((c[$>>2]|0)>0){if((c[(c[R>>2]|0)+4>>2]|0)>=12){c[Vb>>2]=(c[(c[R>>2]|0)+4>>2]|0)-11;if((c[$>>2]|0)<=(c[Vb>>2]|0))break;Y=(c[Wb>>2]|0)+(c[Vb>>2]|0)|0;Z=(c[Wb>>2]|0)+(c[$>>2]|0)|0;c[Ub>>2]=ya;c[Rb>>2]=Y;c[Db>>2]=Z;Z=c[Rb>>2]|0;Y=c[Db>>2]|0;c[Cb>>2]=c[Ub>>2];c[Bb>>2]=Z;c[Ab>>2]=Y;Y=c[Cb>>2]|0;c[zb>>2]=Y;c[yb>>2]=c[zb>>2];c[xb>>2]=c[yb>>2];c[wb>>2]=c[xb>>2];Kl(Y,c[Bb>>2]|0,c[Ab>>2]|0);c[vb>>2]=b;c[Tb>>2]=ya;Y=c[Tb>>2]|0;c[Sb>>2]=c[vb>>2];c[Ra>>2]=Y;Y=c[Sb>>2]|0;c[ub>>2]=c[Ra>>2];c[rb>>2]=c[ub>>2];Z=c[rb>>2]|0;c[bb>>2]=Z;c[cb>>2]=c[bb>>2];c[db>>2]=c[cb>>2];if(((d[c[db>>2]>>0]|0)&1|0)!=0){c[fb>>2]=Z;c[eb>>2]=c[fb>>2];c[gb>>2]=c[eb>>2];Z=c[(c[gb>>2]|0)+8>>2]|0}else{c[$a>>2]=Z;c[pb>>2]=c[$a>>2];c[Ya>>2]=c[pb>>2];c[Za>>2]=(c[Ya>>2]|0)+1;c[_a>>2]=c[Za>>2];Z=c[_a>>2]|0}c[Va>>2]=Z;Z=c[Va>>2]|0;c[Sa>>2]=c[Ra>>2];_=c[Sa>>2]|0;c[La>>2]=_;c[Ka>>2]=c[La>>2];c[Ja>>2]=c[Ka>>2];if(((d[c[Ja>>2]>>0]|0)&1|0)!=0){c[Fa>>2]=_;c[za>>2]=c[Fa>>2];c[Da>>2]=c[za>>2];_=c[(c[Da>>2]|0)+4>>2]|0}else{c[Aa>>2]=_;c[Qa>>2]=c[Aa>>2];c[Pa>>2]=c[Qa>>2];_=(d[c[Pa>>2]>>0]|0)>>1}Tn(Y,Z,_)|0;Kn(ya);break}ya=c[Wb>>2]|0;za=(c[Wb>>2]|0)+(c[$>>2]|0)|0;c[Eb>>2]=xa;c[Fb>>2]=ya;c[Gb>>2]=za;za=c[Fb>>2]|0;ya=c[Gb>>2]|0;c[Hb>>2]=c[Eb>>2];c[Ib>>2]=za;c[Jb>>2]=ya;ya=c[Hb>>2]|0;c[Kb>>2]=ya;c[Lb>>2]=c[Kb>>2];c[Mb>>2]=c[Lb>>2];c[Nb>>2]=c[Mb>>2];Kl(ya,c[Ib>>2]|0,c[Jb>>2]|0);c[Ob>>2]=b;c[Pb>>2]=xa;ya=c[Pb>>2]|0;c[Qb>>2]=c[Ob>>2];c[Ta>>2]=ya;ya=c[Qb>>2]|0;c[sb>>2]=c[Ta>>2];c[tb>>2]=c[sb>>2];za=c[tb>>2]|0;c[ib>>2]=za;c[hb>>2]=c[ib>>2];c[ab>>2]=c[hb>>2];if(((d[c[ab>>2]>>0]|0)&1|0)!=0){c[Xa>>2]=za;c[qb>>2]=c[Xa>>2];c[ob>>2]=c[qb>>2];za=c[(c[ob>>2]|0)+8>>2]|0}else{c[nb>>2]=za;c[mb>>2]=c[nb>>2];c[lb>>2]=c[mb>>2];c[kb>>2]=(c[lb>>2]|0)+1;c[jb>>2]=c[kb>>2];za=c[jb>>2]|0}c[Wa>>2]=za;za=c[Wa>>2]|0;c[Ua>>2]=c[Ta>>2];Aa=c[Ua>>2]|0;c[Ga>>2]=Aa;c[Ea>>2]=c[Ga>>2];c[Ca>>2]=c[Ea>>2];if(((d[c[Ca>>2]>>0]|0)&1|0)!=0){c[Oa>>2]=Aa;c[Na>>2]=c[Oa>>2];c[Ma>>2]=c[Na>>2];Aa=c[(c[Ma>>2]|0)+4>>2]|0}else{c[Ia>>2]=Aa;c[Ha>>2]=c[Ia>>2];c[Ba>>2]=c[Ha>>2];Aa=(d[c[Ba>>2]>>0]|0)>>1}Tn(ya,za,Aa)|0;Kn(xa);c[wa>>2]=b;wa=c[wa>>2]|0;c[va>>2]=wa;c[oa>>2]=c[va>>2];c[sa>>2]=c[oa>>2];if(((d[c[sa>>2]>>0]|0)&1|0)!=0){c[pa>>2]=wa;c[qa>>2]=c[pa>>2];c[ra>>2]=c[qa>>2];na=c[(c[ra>>2]|0)+4>>2]|0}else{c[na>>2]=wa;c[ta>>2]=c[na>>2];c[ua>>2]=c[ta>>2];na=(d[c[ua>>2]>>0]|0)>>1}cc=na-(c[$>>2]|0)|0;c[ma>>2]=b;c[Y>>2]=cc;c[la>>2]=c[ma>>2];la=c[la>>2]|0;c[ja>>2]=la;c[ia>>2]=c[ja>>2];c[ha>>2]=c[ia>>2];if(((d[c[ha>>2]>>0]|0)&1|0)!=0){c[ga>>2]=la;c[fa>>2]=c[ga>>2];c[ea>>2]=c[fa>>2];aa=c[(c[ea>>2]|0)+8>>2]|0}else{c[da>>2]=la;c[ca>>2]=c[da>>2];c[ba>>2]=c[ca>>2];c[aa>>2]=(c[ba>>2]|0)+1;c[ka>>2]=c[aa>>2];aa=c[ka>>2]|0}c[_>>2]=aa+(c[Y>>2]|0);if((c[(c[R>>2]|0)+4>>2]|0)==10){Jl(c[_>>2]|0,c[$>>2]|0)|0;break}if((c[(c[R>>2]|0)+4>>2]|0)==11)while(1){if((c[$>>2]|0)<=0)break a;c[Z>>2]=Jl(c[_>>2]|0,c[$>>2]|0)|0;c[_>>2]=(c[_>>2]|0)+(c[Z>>2]|0);c[$>>2]=(c[$>>2]|0)-(c[Z>>2]|0)}}while(0);cc=c[(c[R>>2]|0)+8>>2]|0;c[S>>2]=h;c[T>>2]=cc;cc=c[T>>2]|0;c[U>>2]=c[S>>2];c[V>>2]=cc;cc=c[U>>2]|0;c[W>>2]=cc;c[X>>2]=c[W>>2];c[L>>2]=c[X>>2];c[M>>2]=c[L>>2];L=c[V>>2]|0;c[N>>2]=c[V>>2];Hn(cc,L,mz(c[N>>2]|0)|0);c[O>>2]=b;c[P>>2]=h;L=c[P>>2]|0;c[Q>>2]=c[O>>2];c[w>>2]=L;L=c[Q>>2]|0;c[K>>2]=c[w>>2];c[J>>2]=c[K>>2];J=c[J>>2]|0;c[G>>2]=J;c[H>>2]=c[G>>2];c[F>>2]=c[H>>2];if(((d[c[F>>2]>>0]|0)&1|0)!=0){c[y>>2]=J;c[D>>2]=c[y>>2];c[E>>2]=c[D>>2];y=c[(c[E>>2]|0)+8>>2]|0}else{c[I>>2]=J;c[z>>2]=c[I>>2];c[A>>2]=c[z>>2];c[B>>2]=(c[A>>2]|0)+1;c[C>>2]=c[B>>2];y=c[C>>2]|0}c[x>>2]=y;x=c[x>>2]|0;c[v>>2]=c[w>>2];v=c[v>>2]|0;c[r>>2]=v;c[m>>2]=c[r>>2];c[t>>2]=c[m>>2];if(((d[c[t>>2]>>0]|0)&1|0)!=0){c[u>>2]=v;c[o>>2]=c[u>>2];c[q>>2]=c[o>>2];m=c[(c[q>>2]|0)+4>>2]|0}else{c[n>>2]=v;c[p>>2]=c[n>>2];c[s>>2]=c[p>>2];m=(d[c[s>>2]>>0]|0)>>1}Tn(L,x,m)|0;Kn(h);a[k>>0]=1;c[l>>2]=1;if(a[k>>0]&1){i=j;return}Kn(b);i=j;return}function Jl(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+16|0;g=f+8|0;h=f+4|0;j=f;c[h>>2]=b;c[j>>2]=e;if((c[j>>2]|0)!=1?(d[c[h>>2]>>0]|0|0)>=192:0){if((d[c[h>>2]>>0]|0|0)<224){b=(c[h>>2]|0)+1|0;a[b>>0]=(d[b>>0]|0)^32;c[g>>2]=2;b=c[g>>2]|0;i=f;return b|0}if((c[j>>2]|0)==2){c[g>>2]=2;b=c[g>>2]|0;i=f;return b|0}else{b=(c[h>>2]|0)+2|0;a[b>>0]=(d[b>>0]|0)^5;c[g>>2]=3;b=c[g>>2]|0;i=f;return b|0}}if((d[c[h>>2]>>0]|0|0)>=97?(d[c[h>>2]>>0]|0|0)<=122:0){b=c[h>>2]|0;a[b>>0]=(d[b>>0]|0)^32}c[g>>2]=1;b=c[g>>2]|0;i=f;return b|0}function Kl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0;h=i;i=i+240|0;M=h+100|0;S=h+84|0;U=h+172|0;T=h+96|0;N=h+192|0;R=h+208|0;O=h+176|0;P=h+168|0;Q=h+52|0;W=h+28|0;V=h+32|0;C=h+36|0;q=h+40|0;A=h+44|0;Y=h+48|0;Z=h+164|0;_=h+8|0;aa=h+56|0;$=h+226|0;ba=h+64|0;ca=h+68|0;da=h+72|0;ea=h+76|0;X=h+188|0;F=h+196|0;G=h+204|0;H=h+212|0;D=h+216|0;B=h+184|0;L=h+220|0;K=h+104|0;I=h+160|0;J=h+112|0;v=h+108|0;w=h+116|0;y=h+120|0;x=h+124|0;E=h+128|0;r=h+132|0;t=h+136|0;s=h+140|0;n=h+144|0;o=h+148|0;p=h+152|0;l=h+156|0;fa=h+16|0;ga=h+12|0;ha=h;ka=h+180|0;ja=h+20|0;ia=h+227|0;la=h+80|0;k=h+200|0;f=h+88|0;u=h+92|0;j=h+24|0;z=h+60|0;m=h+225|0;g=h+224|0;c[la>>2]=b;c[k>>2]=d;c[f>>2]=e;e=c[la>>2]|0;d=c[f>>2]|0;c[ka>>2]=c[k>>2];c[ja>>2]=d;d=c[ka>>2]|0;b=c[ja>>2]|0;a[ha+0>>0]=a[ia+0>>0]|0;c[fa>>2]=d;c[ga>>2]=b;c[u>>2]=(c[ga>>2]|0)-(c[fa>>2]|0);b=c[u>>2]|0;c[ea>>2]=e;c[da>>2]=c[ea>>2];c[ca>>2]=c[da>>2];c[ba>>2]=c[ca>>2];c[aa>>2]=c[ba>>2];d=c[aa>>2]|0;a[_+0>>0]=a[$+0>>0]|0;c[Z>>2]=d;c[Y>>2]=c[Z>>2];c[X>>2]=-1;if(b>>>0>((c[X>>2]|0)-16|0)>>>0)En(e);d=c[u>>2]|0;if((c[u>>2]|0)>>>0<11){c[U>>2]=e;c[T>>2]=d;la=c[T>>2]<<1&255;c[S>>2]=c[U>>2];c[M>>2]=c[S>>2];a[c[M>>2]>>0]=la;c[Q>>2]=e;c[P>>2]=c[Q>>2];c[O>>2]=c[P>>2];c[R>>2]=(c[O>>2]|0)+1;c[N>>2]=c[R>>2];c[j>>2]=c[N>>2]}else{c[V>>2]=d;if((c[V>>2]|0)>>>0<11)M=11;else{c[W>>2]=(c[V>>2]|0)+1;M=(c[W>>2]|0)+15&-16}c[z>>2]=M-1;c[A>>2]=e;c[q>>2]=c[A>>2];c[C>>2]=c[q>>2];la=(c[z>>2]|0)+1|0;c[D>>2]=c[C>>2];c[B>>2]=la;la=c[B>>2]|0;c[F>>2]=c[D>>2];c[G>>2]=la;c[H>>2]=0;c[j>>2]=Gx(c[G>>2]|0)|0;la=c[j>>2]|0;c[I>>2]=e;c[J>>2]=la;la=c[J>>2]|0;c[K>>2]=c[I>>2];c[L>>2]=c[K>>2];c[(c[L>>2]|0)+8>>2]=la;la=(c[z>>2]|0)+1|0;c[y>>2]=e;c[x>>2]=la;la=1|c[x>>2];c[w>>2]=c[y>>2];c[v>>2]=c[w>>2];c[c[v>>2]>>2]=la;la=c[u>>2]|0;c[t>>2]=e;c[s>>2]=la;la=c[s>>2]|0;c[r>>2]=c[t>>2];c[E>>2]=c[r>>2];c[(c[E>>2]|0)+4>>2]=la}while(1){q=c[j>>2]|0;if((c[k>>2]|0)==(c[f>>2]|0))break;a[m>>0]=a[c[k>>2]>>0]|0;c[n>>2]=q;c[o>>2]=m;a[c[n>>2]>>0]=a[c[o>>2]>>0]|0;c[k>>2]=(c[k>>2]|0)+1;c[j>>2]=(c[j>>2]|0)+1}a[g>>0]=0;c[p>>2]=q;c[l>>2]=g;a[c[p>>2]>>0]=a[c[l>>2]>>0]|0;i=h;return}function Ll(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;h=f+8|0;g=f;c[h>>2]=b;b=g;c[b>>2]=d;c[b+4>>2]=e;b=c[h>>2]|0;a[b+0>>0]=a[g+0>>0]|0;a[b+1>>0]=a[g+1>>0]|0;a[b+2>>0]=a[g+2>>0]|0;a[b+3>>0]=a[g+3>>0]|0;a[b+4>>0]=a[g+4>>0]|0;a[b+5>>0]=a[g+5>>0]|0;a[b+6>>0]=a[g+6>>0]|0;a[b+7>>0]=a[g+7>>0]|0;i=f;return}function Ml(e,f,g,h){e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0;$a=i;i=i+544|0;ja=$a+448|0;ka=$a+236|0;da=$a+232|0;ea=$a+228|0;fa=$a+224|0;ga=$a+500|0;K=$a+508|0;N=$a+516|0;O=$a+492|0;Q=$a+60|0;R=$a+56|0;S=$a+40|0;T=$a+44|0;U=$a+48|0;V=$a+52|0;W=$a+456|0;X=$a+252|0;ha=$a+124|0;ia=$a+120|0;qa=$a+72|0;sa=$a+76|0;j=$a+80|0;ma=$a+84|0;pa=$a+88|0;oa=$a+92|0;na=$a+96|0;k=$a+100|0;xa=$a+104|0;wa=$a+108|0;va=$a+112|0;ra=$a+116|0;Da=$a+452|0;Fa=$a+256|0;Ga=$a+248|0;za=$a+244|0;Ca=$a+132|0;Ba=$a+136|0;Aa=$a+140|0;_a=$a+144|0;Za=$a+148|0;Ya=$a+152|0;Xa=$a+156|0;Ea=$a+160|0;F=$a+164|0;H=$a+168|0;I=$a+172|0;J=$a+176|0;E=$a+180|0;D=$a+184|0;C=$a+188|0;aa=$a+192|0;$=$a+196|0;_=$a+200|0;Y=$a+204|0;G=$a+208|0;t=$a+212|0;u=$a+216|0;v=$a+488|0;w=$a+496|0;Ta=$a+504|0;Ua=$a+512|0;Va=$a+520|0;Wa=$a+524|0;Sa=$a+528|0;Ra=$a+400|0;Qa=$a;Pa=$a+16|0;Ma=$a+260|0;Na=$a+264|0;La=$a+268|0;Ia=$a+272|0;Ja=$a+276|0;Ha=$a+280|0;n=$a+284|0;o=$a+288|0;p=$a+292|0;ya=$a+296|0;q=$a+300|0;l=$a+304|0;m=$a+8|0;z=$a+308|0;A=$a+312|0;B=$a+532|0;ab=$a+320|0;bb=$a+324|0;cb=$a+328|0;zb=$a+332|0;Ab=$a+336|0;Bb=$a+340|0;Cb=$a+344|0;yb=$a+348|0;xb=$a+352|0;wb=$a+356|0;vb=$a+360|0;ub=$a+364|0;tb=$a+368|0;rb=$a+372|0;sb=$a+376|0;mb=$a+380|0;nb=$a+384|0;ob=$a+388|0;kb=$a+392|0;lb=$a+396|0;jb=$a+24|0;fb=$a+404|0;hb=$a+408|0;ib=$a+533|0;db=$a+416|0;y=$a+420|0;ta=$a+424|0;x=$a+428|0;gb=$a+432|0;s=$a+436|0;eb=$a+128|0;pb=$a+28|0;qb=$a+472|0;r=$a+32|0;ua=$a+36|0;Ka=$a+460|0;Oa=$a+480|0;Z=$a+64|0;ba=$a+464|0;ca=$a+220|0;la=$a+484|0;M=$a+240|0;P=$a+412|0;L=$a+316|0;c[db>>2]=e;c[y>>2]=f;c[ta>>2]=g;c[x>>2]=h;c[gb>>2]=1;while(1){jm(s);Nl(s,(c[y>>2]<<1)+1|0);c[eb>>2]=0;while(1){if((c[eb>>2]|0)>=(c[y>>2]|0))break;do if((c[(c[db>>2]|0)+(c[eb>>2]<<2)>>2]|0)!=0){c[fb>>2]=(c[db>>2]|0)+(c[eb>>2]<<2);c[hb>>2]=gb;h=c[fb>>2]|0;e=c[hb>>2]|0;a[jb+0>>0]=a[ib+0>>0]|0;c[kb>>2]=h;c[lb>>2]=e;e=c[kb>>2]|0;h=c[lb>>2]|0;c[mb>>2]=jb;c[nb>>2]=e;c[ob>>2]=h;c[pb>>2]=c[((c[c[nb>>2]>>2]|0)<(c[c[ob>>2]>>2]|0)?c[lb>>2]|0:c[kb>>2]|0)>>2];mm(qb,c[pb>>2]|0,-1,c[eb>>2]&65535);c[rb>>2]=s;c[sb>>2]=qb;h=c[rb>>2]|0;e=c[h+4>>2]|0;c[tb>>2]=h;c[ub>>2]=(c[tb>>2]|0)+8;c[vb>>2]=c[ub>>2];if((e|0)==(c[c[vb>>2]>>2]|0)){dm(h,c[sb>>2]|0);break}c[wb>>2]=h;c[xb>>2]=(c[wb>>2]|0)+8;c[yb>>2]=c[xb>>2];f=c[yb>>2]|0;c[zb>>2]=c[h+4>>2];e=c[zb>>2]|0;g=c[sb>>2]|0;c[Ab>>2]=f;c[Bb>>2]=e;c[Cb>>2]=g;g=c[Bb>>2]|0;if((g|0)!=0){e=c[Cb>>2]|0;c[g+0>>2]=c[e+0>>2];c[g+4>>2]=c[e+4>>2]}e=h+4|0;c[e>>2]=(c[e>>2]|0)+8}while(0);c[eb>>2]=(c[eb>>2]|0)+1}c[cb>>2]=s;e=c[cb>>2]|0;c[r>>2]=((c[e+4>>2]|0)-(c[e>>2]|0)|0)/8|0;do if((c[r>>2]|0)!=1){c[Ha>>2]=s;e=c[Ha>>2]|0;h=c[e>>2]|0;c[Ia>>2]=e;c[Ja>>2]=h;cm(Ka,c[Ja>>2]|0);c[La>>2]=s;h=c[La>>2]|0;e=c[h+4>>2]|0;c[Ma>>2]=h;c[Na>>2]=e;cm(Oa,c[Na>>2]|0);a[Pa+0>>0]=a[Ka+0>>0]|0;a[Pa+1>>0]=a[Ka+1>>0]|0;a[Pa+2>>0]=a[Ka+2>>0]|0;a[Pa+3>>0]=a[Ka+3>>0]|0;a[Qa+0>>0]=a[Oa+0>>0]|0;a[Qa+1>>0]=a[Oa+1>>0]|0;a[Qa+2>>0]=a[Oa+2>>0]|0;a[Qa+3>>0]=a[Oa+3>>0]|0;c[Ra>>2]=15;c[Sa>>2]=Pa;e=c[c[Sa>>2]>>2]|0;c[Ta>>2]=Qa;h=c[c[Ta>>2]>>2]|0;c[Ua>>2]=e;c[Va>>2]=h;c[Wa>>2]=Ra;Yl(c[Ua>>2]|0,c[Va>>2]|0,c[Wa>>2]|0);mm(Z,2147483647,-1,-1);c[Xa>>2]=s;c[Ea>>2]=Z;h=c[Xa>>2]|0;e=c[h+4>>2]|0;c[Ya>>2]=h;c[Za>>2]=(c[Ya>>2]|0)+8;c[_a>>2]=c[Za>>2];if((e|0)!=(c[c[_a>>2]>>2]|0)){c[Aa>>2]=h;c[Ba>>2]=(c[Aa>>2]|0)+8;c[Ca>>2]=c[Ba>>2];f=c[Ca>>2]|0;c[Da>>2]=c[h+4>>2];e=c[Da>>2]|0;g=c[Ea>>2]|0;c[Fa>>2]=f;c[Ga>>2]=e;c[za>>2]=g;g=c[Ga>>2]|0;if((g|0)!=0){e=c[za>>2]|0;c[g+0>>2]=c[e+0>>2];c[g+4>>2]=c[e+4>>2]}e=h+4|0;c[e>>2]=(c[e>>2]|0)+8}else dm(h,c[Ea>>2]|0);c[va>>2]=s;c[ra>>2]=Z;h=c[va>>2]|0;e=c[h+4>>2]|0;c[wa>>2]=h;c[xa>>2]=(c[wa>>2]|0)+8;c[k>>2]=c[xa>>2];if((e|0)!=(c[c[k>>2]>>2]|0)){c[na>>2]=h;c[oa>>2]=(c[na>>2]|0)+8;c[pa>>2]=c[oa>>2];f=c[pa>>2]|0;c[qa>>2]=c[h+4>>2];e=c[qa>>2]|0;g=c[ra>>2]|0;c[sa>>2]=f;c[j>>2]=e;c[ma>>2]=g;g=c[j>>2]|0;if((g|0)!=0){e=c[ma>>2]|0;c[g+0>>2]=c[e+0>>2];c[g+4>>2]=c[e+4>>2]}e=h+4|0;c[e>>2]=(c[e>>2]|0)+8}else dm(h,c[ra>>2]|0);c[ba>>2]=0;c[ca>>2]=(c[r>>2]|0)+1;c[la>>2]=(c[r>>2]|0)-1;while(1){if((c[la>>2]|0)<=0)break;e=c[ba>>2]|0;c[ha>>2]=s;c[ia>>2]=e;e=c[(c[c[ha>>2]>>2]|0)+(c[ia>>2]<<3)>>2]|0;f=c[ca>>2]|0;c[ja>>2]=s;c[ka>>2]=f;if((e|0)<=(c[(c[c[ja>>2]>>2]|0)+(c[ka>>2]<<3)>>2]|0)){c[M>>2]=c[ba>>2];c[ba>>2]=(c[ba>>2]|0)+1}else{c[M>>2]=c[ca>>2];c[ca>>2]=(c[ca>>2]|0)+1}e=c[ba>>2]|0;c[da>>2]=s;c[ea>>2]=e;e=c[(c[c[da>>2]>>2]|0)+(c[ea>>2]<<3)>>2]|0;f=c[ca>>2]|0;c[fa>>2]=s;c[ga>>2]=f;if((e|0)<=(c[(c[c[fa>>2]>>2]|0)+(c[ga>>2]<<3)>>2]|0)){c[P>>2]=c[ba>>2];c[ba>>2]=(c[ba>>2]|0)+1}else{c[P>>2]=c[ca>>2];c[ca>>2]=(c[ca>>2]|0)+1}c[K>>2]=s;h=c[K>>2]|0;c[L>>2]=(((c[h+4>>2]|0)-(c[h>>2]|0)|0)/8|0)-1;h=c[M>>2]|0;c[N>>2]=s;c[O>>2]=h;h=c[(c[c[N>>2]>>2]|0)+(c[O>>2]<<3)>>2]|0;e=c[P>>2]|0;c[Q>>2]=s;c[R>>2]=e;h=h+(c[(c[c[Q>>2]>>2]|0)+(c[R>>2]<<3)>>2]|0)|0;e=c[L>>2]|0;c[S>>2]=s;c[T>>2]=e;c[(c[c[S>>2]>>2]|0)+(c[T>>2]<<3)>>2]=h;h=c[M>>2]&65535;e=c[L>>2]|0;c[U>>2]=s;c[V>>2]=e;b[(c[c[U>>2]>>2]|0)+(c[V>>2]<<3)+4>>1]=h;h=c[P>>2]&65535;e=c[L>>2]|0;c[W>>2]=s;c[X>>2]=e;b[(c[c[W>>2]>>2]|0)+(c[X>>2]<<3)+6>>1]=h;c[Y>>2]=s;c[G>>2]=Z;h=c[Y>>2]|0;e=c[h+4>>2]|0;c[_>>2]=h;c[$>>2]=(c[_>>2]|0)+8;c[aa>>2]=c[$>>2];if((e|0)!=(c[c[aa>>2]>>2]|0)){c[C>>2]=h;c[D>>2]=(c[C>>2]|0)+8;c[E>>2]=c[D>>2];f=c[E>>2]|0;c[F>>2]=c[h+4>>2];e=c[F>>2]|0;g=c[G>>2]|0;c[H>>2]=f;c[I>>2]=e;c[J>>2]=g;g=c[I>>2]|0;if((g|0)!=0){e=c[J>>2]|0;c[g+0>>2]=c[e+0>>2];c[g+4>>2]=c[e+4>>2]}e=h+4|0;c[e>>2]=(c[e>>2]|0)+8}else dm(h,c[G>>2]|0);c[la>>2]=(c[la>>2]|0)+ -1}f=(c[r>>2]<<1)-1|0;c[t>>2]=s;c[u>>2]=f;f=(c[c[t>>2]>>2]|0)+(c[u>>2]<<3)|0;c[v>>2]=s;c[w>>2]=0;Pl(f,(c[c[v>>2]>>2]|0)+(c[w>>2]<<3)|0,c[x>>2]|0,0);f=(c[x>>2]|0)+(c[y>>2]|0)|0;c[z>>2]=c[x>>2];c[A>>2]=f;f=c[z>>2]|0;e=c[A>>2]|0;a[m+0>>0]=a[B+0>>0]|0;c[ya>>2]=f;c[q>>2]=e;a:do if((c[ya>>2]|0)!=(c[q>>2]|0)){c[l>>2]=c[ya>>2];while(1){e=(c[l>>2]|0)+1|0;c[l>>2]=e;if((e|0)==(c[q>>2]|0))break a;f=c[ya>>2]|0;e=c[l>>2]|0;c[n>>2]=m;c[o>>2]=f;c[p>>2]=e;if((d[c[o>>2]>>0]|0)>=(d[c[p>>2]>>0]|0))continue;c[ya>>2]=c[l>>2]}}while(0);if((d[c[ya>>2]>>0]|0)<=(c[ta>>2]|0)){c[ua>>2]=2;break}else{c[ua>>2]=0;break}}else{c[ab>>2]=s;c[bb>>2]=0;a[(c[x>>2]|0)+(b[(c[c[ab>>2]>>2]|0)+(c[bb>>2]<<3)+6>>1]|0)>>0]=1;c[ua>>2]=2}while(0);lm(s);if((c[ua>>2]|0)==2)break;c[gb>>2]=c[gb>>2]<<1}i=$a;return}function Nl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;h=i;i=i+80|0;k=h+60|0;g=h+52|0;f=h+12|0;e=h+8|0;m=h+48|0;o=h+56|0;p=h+64|0;q=h+16|0;r=h;n=h+40|0;j=h+4|0;d=h+44|0;l=h+20|0;c[n>>2]=a;c[j>>2]=b;b=c[n>>2]|0;n=c[j>>2]|0;c[r>>2]=b;c[q>>2]=c[r>>2];a=c[q>>2]|0;c[p>>2]=a;c[o>>2]=(c[p>>2]|0)+8;c[m>>2]=c[o>>2];if(!(n>>>0>(((c[c[m>>2]>>2]|0)-(c[a>>2]|0)|0)/8|0)>>>0)){i=h;return}c[e>>2]=b;c[f>>2]=(c[e>>2]|0)+8;c[g>>2]=c[f>>2];c[d>>2]=c[g>>2];q=c[j>>2]|0;c[k>>2]=b;r=c[k>>2]|0;hm(l,q,((c[r+4>>2]|0)-(c[r>>2]|0)|0)/8|0,c[d>>2]|0);em(b,l);fm(l);i=h;return}function Ol(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+16|0;g=f+8|0;j=f+4|0;h=f;c[j>>2]=d;c[h>>2]=e;e=c[j>>2]|0;if((c[c[j>>2]>>2]|0)==(c[c[h>>2]>>2]|0)){a[g>>0]=(b[e+6>>1]|0)>(b[(c[h>>2]|0)+6>>1]|0)&1;j=a[g>>0]|0;j=j&1;i=f;return j|0}else{a[g>>0]=(c[e>>2]|0)<(c[c[h>>2]>>2]|0)&1;j=a[g>>0]|0;j=j&1;i=f;return j|0}return 0}function Pl(d,e,f,g){d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;m=h+12|0;l=h+8|0;k=h+4|0;j=h;c[m>>2]=d;c[l>>2]=e;c[k>>2]=f;c[j>>2]=g;g=c[j>>2]|0;if((b[(c[m>>2]|0)+4>>1]|0)>=0){c[j>>2]=g+1;Pl((c[l>>2]|0)+(b[(c[m>>2]|0)+4>>1]<<3)|0,c[l>>2]|0,c[k>>2]|0,c[j>>2]|0);Pl((c[l>>2]|0)+(b[(c[m>>2]|0)+6>>1]<<3)|0,c[l>>2]|0,c[k>>2]|0,c[j>>2]|0);i=h;return}else{a[(c[k>>2]|0)+(b[(c[m>>2]|0)+6>>1]|0)>>0]=g;i=h;return}}function Ql(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+16|0;k=g+12|0;h=g+8|0;j=g+4|0;l=g;c[k>>2]=b;c[h>>2]=e;c[j>>2]=f;c[j>>2]=(c[j>>2]|0)+ -1;while(1){if((c[h>>2]|0)>=(c[j>>2]|0))break;c[l>>2]=d[(c[k>>2]|0)+(c[h>>2]|0)>>0];a[(c[k>>2]|0)+(c[h>>2]|0)>>0]=a[(c[k>>2]|0)+(c[j>>2]|0)>>0]|0;a[(c[k>>2]|0)+(c[j>>2]|0)>>0]=c[l>>2];c[h>>2]=(c[h>>2]|0)+1;c[j>>2]=(c[j>>2]|0)+ -1}i=g;return}function Rl(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;p=i;i=i+32|0;r=p+4|0;o=p+16|0;l=p+8|0;j=p+20|0;q=p+28|0;m=p;k=p+12|0;n=p+24|0;c[r>>2]=b;c[o>>2]=d;c[l>>2]=e;c[j>>2]=f;c[q>>2]=g;c[m>>2]=h;if((c[r>>2]|0)!=(c[o>>2]|0)){a[(c[j>>2]|0)+(c[c[m>>2]>>2]|0)>>0]=c[o>>2];a[(c[q>>2]|0)+(c[c[m>>2]>>2]|0)>>0]=0;r=c[m>>2]|0;c[r>>2]=(c[r>>2]|0)+1;c[l>>2]=(c[l>>2]|0)+ -1}if((c[l>>2]|0)==7){a[(c[j>>2]|0)+(c[c[m>>2]>>2]|0)>>0]=c[o>>2];a[(c[q>>2]|0)+(c[c[m>>2]>>2]|0)>>0]=0;r=c[m>>2]|0;c[r>>2]=(c[r>>2]|0)+1;c[l>>2]=(c[l>>2]|0)+ -1}if((c[l>>2]|0)<3){c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[l>>2]|0))break;a[(c[j>>2]|0)+(c[c[m>>2]>>2]|0)>>0]=c[o>>2];a[(c[q>>2]|0)+(c[c[m>>2]>>2]|0)>>0]=0;r=c[m>>2]|0;c[r>>2]=(c[r>>2]|0)+1;c[k>>2]=(c[k>>2]|0)+1}i=p;return}c[l>>2]=(c[l>>2]|0)-3;c[n>>2]=c[c[m>>2]>>2];while(1){if((c[l>>2]|0)<0)break;a[(c[j>>2]|0)+(c[c[m>>2]>>2]|0)>>0]=16;a[(c[q>>2]|0)+(c[c[m>>2]>>2]|0)>>0]=c[l>>2]&3;r=c[m>>2]|0;c[r>>2]=(c[r>>2]|0)+1;c[l>>2]=c[l>>2]>>2;c[l>>2]=(c[l>>2]|0)+ -1}Ql(c[j>>2]|0,c[n>>2]|0,c[c[m>>2]>>2]|0);Ql(c[q>>2]|0,c[n>>2]|0,c[c[m>>2]>>2]|0);i=p;return}function Sl(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;l=i;i=i+32|0;j=l+20|0;k=l+16|0;m=l+12|0;g=l+8|0;h=l+4|0;n=l;c[j>>2]=b;c[k>>2]=d;c[m>>2]=e;c[g>>2]=f;if((c[j>>2]|0)==11){a[(c[k>>2]|0)+(c[c[g>>2]>>2]|0)>>0]=0;a[(c[m>>2]|0)+(c[c[g>>2]>>2]|0)>>0]=0;b=c[g>>2]|0;c[b>>2]=(c[b>>2]|0)+1;c[j>>2]=(c[j>>2]|0)+ -1}if((c[j>>2]|0)<3){c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[j>>2]|0))break;a[(c[k>>2]|0)+(c[c[g>>2]>>2]|0)>>0]=0;a[(c[m>>2]|0)+(c[c[g>>2]>>2]|0)>>0]=0;b=c[g>>2]|0;c[b>>2]=(c[b>>2]|0)+1;c[h>>2]=(c[h>>2]|0)+1}i=l;return}c[j>>2]=(c[j>>2]|0)-3;c[n>>2]=c[c[g>>2]>>2];while(1){if((c[j>>2]|0)<0)break;a[(c[k>>2]|0)+(c[c[g>>2]>>2]|0)>>0]=17;a[(c[m>>2]|0)+(c[c[g>>2]>>2]|0)>>0]=c[j>>2]&7;b=c[g>>2]|0;c[b>>2]=(c[b>>2]|0)+1;c[j>>2]=c[j>>2]>>3;c[j>>2]=(c[j>>2]|0)+ -1}Ql(c[k>>2]|0,c[n>>2]|0,c[c[g>>2]>>2]|0);Ql(c[m>>2]|0,c[n>>2]|0,c[c[g>>2]>>2]|0);i=l;return}function Tl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;l=i;i=i+80|0;o=l+60|0;m=l+44|0;j=l+20|0;e=l+16|0;n=l+4|0;h=l+40|0;g=l+48|0;k=l+56|0;t=l+64|0;x=l+24|0;w=l;r=l+32|0;v=l+28|0;s=l+8|0;u=l+36|0;p=l+12|0;q=l+52|0;c[m>>2]=b;c[j>>2]=d;while(1){if((c[m>>2]|0)<0)break;if((c[m>>2]|0)==0){f=4;break}if((c[(c[j>>2]|0)+((c[m>>2]|0)-1<<2)>>2]|0)!=0)break;c[m>>2]=(c[m>>2]|0)+ -1}if((f|0)==4){c[o>>2]=1;b=c[o>>2]|0;i=l;return b|0}c[t>>2]=0;c[x>>2]=1073741824;c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[m>>2]|0))break;if((c[(c[j>>2]|0)+(c[k>>2]<<2)>>2]|0)!=0?(c[t>>2]=(c[t>>2]|0)+1,(c[x>>2]|0)>(c[(c[j>>2]|0)+(c[k>>2]<<2)>>2]|0)):0)c[x>>2]=c[(c[j>>2]|0)+(c[k>>2]<<2)>>2];c[k>>2]=(c[k>>2]|0)+1}if((c[t>>2]|0)<5){c[o>>2]=1;b=c[o>>2]|0;i=l;return b|0}c[w>>2]=(c[m>>2]|0)-(c[t>>2]|0);a:do if((c[x>>2]|0)<4?(c[w>>2]|0)<6:0){c[k>>2]=1;while(1){if((c[k>>2]|0)>=((c[m>>2]|0)-1|0))break a;if(((c[(c[j>>2]|0)+((c[k>>2]|0)-1<<2)>>2]|0)!=0?(c[(c[j>>2]|0)+(c[k>>2]<<2)>>2]|0)==0:0)?(c[(c[j>>2]|0)+((c[k>>2]|0)+1<<2)>>2]|0)!=0:0)c[(c[j>>2]|0)+(c[k>>2]<<2)>>2]=1;c[k>>2]=(c[k>>2]|0)+1}}while(0);if((c[t>>2]|0)<28){c[o>>2]=1;b=c[o>>2]|0;i=l;return b|0}c[g>>2]=Fy(c[m>>2]|0,1)|0;if((c[g>>2]|0)==0){c[o>>2]=0;b=c[o>>2]|0;i=l;return b|0}c[r>>2]=c[c[j>>2]>>2];c[v>>2]=0;c[k>>2]=0;while(1){if((c[k>>2]|0)>=((c[m>>2]|0)+1|0))break;if((c[k>>2]|0)!=(c[m>>2]|0)?(c[(c[j>>2]|0)+(c[k>>2]<<2)>>2]|0)==(c[r>>2]|0):0)c[v>>2]=(c[v>>2]|0)+1;else{if((c[r>>2]|0)==0?(c[v>>2]|0)>=5:0)f=36;else f=34;if(((f|0)==34?(f=0,(c[r>>2]|0)!=0):0)?(c[v>>2]|0)>=7:0)f=36;b:do if((f|0)==36){f=0;c[s>>2]=0;while(1){if((c[s>>2]|0)>=(c[v>>2]|0))break b;a[(c[g>>2]|0)+((c[k>>2]|0)-(c[s>>2]|0)-1)>>0]=1;c[s>>2]=(c[s>>2]|0)+1}}while(0);c[v>>2]=1;if((c[k>>2]|0)!=(c[m>>2]|0))c[r>>2]=c[(c[j>>2]|0)+(c[k>>2]<<2)>>2]}c[k>>2]=(c[k>>2]|0)+1}c[u>>2]=1240;c[e>>2]=0;c[n>>2]=(((c[c[j>>2]>>2]|0)+(c[(c[j>>2]|0)+4>>2]|0)+(c[(c[j>>2]|0)+8>>2]|0)<<8|0)/3|0)+420;c[h>>2]=0;c[k>>2]=0;while(1){if((c[k>>2]|0)>=((c[m>>2]|0)+1|0))break;do if((c[k>>2]|0)!=(c[m>>2]|0)?(a[(c[g>>2]|0)+(c[k>>2]|0)>>0]|0)==0:0){if((c[k>>2]|0)!=0?(a[(c[g>>2]|0)+((c[k>>2]|0)-1)>>0]|0)!=0:0){f=50;break}if((S((c[(c[j>>2]|0)+(c[k>>2]<<2)>>2]<<8)-(c[n>>2]|0)|0)|0)>=1240)f=50}else f=50;while(0);do if((f|0)==50){f=0;if((c[e>>2]|0)<4){if((c[e>>2]|0)>=3?(c[h>>2]|0)==0:0)f=53}else f=53;c:do if((f|0)==53){f=0;b=((c[h>>2]|0)+((c[e>>2]|0)/2|0)|0)/(c[e>>2]|0)|0;c[q>>2]=b;b=(c[q>>2]|0)<1?1:b;c[q>>2]=b;c[q>>2]=(c[h>>2]|0)==0?0:b;c[p>>2]=0;while(1){if((c[p>>2]|0)>=(c[e>>2]|0))break c;c[(c[j>>2]|0)+((c[k>>2]|0)-(c[p>>2]|0)-1<<2)>>2]=c[q>>2];c[p>>2]=(c[p>>2]|0)+1}}while(0);c[e>>2]=0;c[h>>2]=0;r=c[k>>2]|0;if((c[k>>2]|0)<((c[m>>2]|0)-2|0)){c[n>>2]=(((c[(c[j>>2]|0)+(r<<2)>>2]|0)+(c[(c[j>>2]|0)+((c[k>>2]|0)+1<<2)>>2]|0)+(c[(c[j>>2]|0)+((c[k>>2]|0)+2<<2)>>2]|0)<<8|0)/3|0)+420;break}if((r|0)<(c[m>>2]|0)){c[n>>2]=c[(c[j>>2]|0)+(c[k>>2]<<2)>>2]<<8;break}else{c[n>>2]=0;break}}while(0);c[e>>2]=(c[e>>2]|0)+1;if((c[k>>2]|0)!=(c[m>>2]|0)){c[h>>2]=(c[h>>2]|0)+(c[(c[j>>2]|0)+(c[k>>2]<<2)>>2]|0);if((c[e>>2]|0)>=4)c[n>>2]=((c[h>>2]<<8)+((c[e>>2]|0)/2|0)|0)/(c[e>>2]|0)|0;if((c[e>>2]|0)==4)c[n>>2]=(c[n>>2]|0)+120}c[k>>2]=(c[k>>2]|0)+1}Ey(c[g>>2]|0);c[o>>2]=1;b=c[o>>2]|0;i=l;return b|0}function Ul(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;j=i;i=i+48|0;o=j+36|0;q=j+16|0;l=j+4|0;u=j+8|0;m=j+32|0;v=j;t=j+40|0;s=j+41|0;k=j+20|0;n=j+28|0;r=j+24|0;p=j+12|0;c[o>>2]=b;c[q>>2]=e;c[l>>2]=f;c[u>>2]=g;c[m>>2]=h;c[v>>2]=8;Vl(c[o>>2]|0,c[q>>2]|0,t,s);c[k>>2]=0;while(1){if(!((c[k>>2]|0)>>>0<(c[q>>2]|0)>>>0))break;c[n>>2]=d[(c[o>>2]|0)+(c[k>>2]|0)>>0];c[r>>2]=1;a:do if((c[q>>2]|0)>50){if(!((c[n>>2]|0)!=0?a[t>>0]&1:0)){if((c[n>>2]|0)!=0)break;if(!(a[s>>0]&1))break}c[p>>2]=(c[k>>2]|0)+1;while(1){if(!((c[p>>2]|0)>>>0<(c[q>>2]|0)>>>0))break a;if((d[(c[o>>2]|0)+(c[p>>2]|0)>>0]|0|0)!=(c[n>>2]|0))break a;c[r>>2]=(c[r>>2]|0)+1;c[p>>2]=(c[p>>2]|0)+1}}while(0);if((c[n>>2]|0)==0)Sl(c[r>>2]|0,c[l>>2]|0,c[u>>2]|0,c[m>>2]|0);else{Rl(c[v>>2]|0,c[n>>2]|0,c[r>>2]|0,c[l>>2]|0,c[u>>2]|0,c[m>>2]|0);c[v>>2]=c[n>>2]}c[k>>2]=(c[k>>2]|0)+(c[r>>2]|0)}while(1){if((c[c[m>>2]>>2]|0)<=0){k=20;break}if((d[(c[l>>2]|0)+((c[c[m>>2]>>2]|0)-1)>>0]|0|0)>0?(d[(c[l>>2]|0)+((c[c[m>>2]>>2]|0)-1)>>0]|0|0)<17:0){k=20;break}b=c[m>>2]|0;c[b>>2]=(c[b>>2]|0)+ -1}if((k|0)==20){i=j;return}}function Vl(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;h=i;i=i+64|0;p=h+16|0;v=h+12|0;m=h+44|0;n=h+36|0;k=h+32|0;r=h+40|0;l=h+48|0;o=h+52|0;u=h+20|0;w=h;q=h+28|0;j=h+4|0;s=h+24|0;t=h+8|0;c[p>>2]=b;c[v>>2]=e;c[m>>2]=f;c[n>>2]=g;c[k>>2]=0;c[r>>2]=0;c[l>>2]=0;c[o>>2]=0;c[u>>2]=c[v>>2];c[w>>2]=0;while(1){if((c[w>>2]|0)>=(c[v>>2]|0))break;if((d[(c[p>>2]|0)+((c[v>>2]|0)-(c[w>>2]|0)-1)>>0]|0|0)!=0)break;c[u>>2]=(c[u>>2]|0)+ -1;c[w>>2]=(c[w>>2]|0)+1}c[q>>2]=0;while(1){if(!((c[q>>2]|0)>>>0<(c[u>>2]|0)>>>0))break;c[j>>2]=d[(c[p>>2]|0)+(c[q>>2]|0)>>0];c[s>>2]=1;c[t>>2]=(c[q>>2]|0)+1;while(1){if((c[t>>2]|0)>>>0<(c[u>>2]|0)>>>0)v=(d[(c[p>>2]|0)+(c[t>>2]|0)>>0]|0|0)==(c[j>>2]|0);else v=0;g=c[s>>2]|0;if(!v)break;c[s>>2]=g+1;c[t>>2]=(c[t>>2]|0)+1}if((g|0)>=3?(c[j>>2]|0)==0:0){c[k>>2]=(c[k>>2]|0)+(c[s>>2]|0);c[l>>2]=(c[l>>2]|0)+1}if((c[s>>2]|0)>=4?(c[j>>2]|0)!=0:0){c[r>>2]=(c[r>>2]|0)+(c[s>>2]|0);c[o>>2]=(c[o>>2]|0)+1}c[q>>2]=(c[q>>2]|0)+(c[s>>2]|0)}c[r>>2]=(c[r>>2]|0)-(c[o>>2]<<1);c[k>>2]=(c[k>>2]|0)-(c[l>>2]<<1);a[c[m>>2]>>0]=(c[r>>2]|0)>2&1;a[c[n>>2]>>0]=(c[k>>2]|0)>2&1;i=h;return}function Wl(f,g,h){f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;r=i;i=i+96|0;j=r;k=r+16|0;s=r+20|0;l=r+32|0;p=r+28|0;m=r+64|0;n=r+8|0;o=r+12|0;q=r+4|0;c[j>>2]=f;c[k>>2]=g;c[s>>2]=h;c[r+24>>2]=16;g=l+0|0;h=g+32|0;do{b[g>>1]=0;g=g+2|0}while((g|0)<(h|0));c[p>>2]=0;while(1){if((c[p>>2]|0)>=(c[k>>2]|0))break;f=l+(d[(c[j>>2]|0)+(c[p>>2]|0)>>0]<<1)|0;b[f>>1]=(b[f>>1]|0)+1<<16>>16;c[p>>2]=(c[p>>2]|0)+1}b[l>>1]=0;b[m>>1]=0;c[n>>2]=0;c[o>>2]=1;while(1){if((c[o>>2]|0)>=16)break;c[n>>2]=(c[n>>2]|0)+(e[l+((c[o>>2]|0)-1<<1)>>1]|0)<<1;b[m+(c[o>>2]<<1)>>1]=c[n>>2];c[o>>2]=(c[o>>2]|0)+1}c[q>>2]=0;while(1){if((c[q>>2]|0)>=(c[k>>2]|0))break;if((a[(c[j>>2]|0)+(c[q>>2]|0)>>0]|0)!=0){g=d[(c[j>>2]|0)+(c[q>>2]|0)>>0]|0;h=m+(d[(c[j>>2]|0)+(c[q>>2]|0)>>0]<<1)|0;f=b[h>>1]|0;b[h>>1]=f+1<<16>>16;f=Xl(g,f)|0;b[(c[s>>2]|0)+(c[q>>2]<<1)>>1]=f}c[q>>2]=(c[q>>2]|0)+1}i=r;return}function Xl(a,d){a=a|0;d=d|0;var f=0,g=0,h=0,j=0,k=0;h=i;i=i+16|0;g=h+8|0;k=h+12|0;f=h+4|0;j=h;c[g>>2]=a;b[k>>1]=d;c[f>>2]=c[256200+(((e[k>>1]|0)&15)<<2)>>2];c[j>>2]=4;while(1){if((c[j>>2]|0)>=(c[g>>2]|0))break;c[f>>2]=c[f>>2]<<4;b[k>>1]=(e[k>>1]|0)>>4;c[f>>2]=c[f>>2]|c[256200+(((e[k>>1]|0)&15)<<2)>>2];c[j>>2]=(c[j>>2]|0)+4}c[f>>2]=(c[f>>2]|0)>>>(0-(c[g>>2]|0)&3);i=h;return c[f>>2]&65535|0}function Yl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0;k=i;i=i+224|0;U=k+92|0;V=k+196|0;S=k+188|0;Q=k+76|0;R=k+88|0;T=k+80|0;O=k+12|0;P=k+156|0;M=k+16|0;K=k+20|0;L=k+24|0;N=k+32|0;$=k+40|0;aa=k+44|0;Z=k+48|0;X=k+152|0;Y=k+52|0;_=k+56|0;f=k+64|0;J=k+176|0;G=k+184|0;E=k+192|0;F=k+200|0;H=k+208|0;x=k+216|0;y=k+96|0;v=k+100|0;t=k+104|0;u=k+108|0;w=k+112|0;p=k+120|0;q=k+148|0;n=k+124|0;l=k+128|0;m=k+132|0;o=k+136|0;I=k+144|0;h=k+8|0;j=k+4|0;D=k+160|0;A=k+164|0;B=k+68|0;z=k+172|0;C=k;r=k+72|0;s=k+180|0;W=k+220|0;c[I>>2]=b;c[h>>2]=d;c[j>>2]=e;c[k+168>>2]=30;a:while(1){c[D>>2]=((c[h>>2]|0)-(c[I>>2]|0)|0)/8|0;switch(c[D>>2]|0){case 4:{g=6;break a};case 2:{g=3;break a};case 5:{g=7;break a};case 3:{g=5;break a};case 1:case 0:{g=49;break a};default:{}}e=c[I>>2]|0;if((c[D>>2]|0)<=30){g=9;break}c[A>>2]=e;c[B>>2]=c[h>>2];c[B>>2]=(c[B>>2]|0)+ -8;b=(c[D>>2]|0)>=1e3;c[C>>2]=(c[D>>2]|0)/2|0;c[A>>2]=(c[A>>2]|0)+(c[C>>2]<<3);if(b){c[C>>2]=(c[C>>2]|0)/2|0;c[z>>2]=$l(c[I>>2]|0,(c[I>>2]|0)+(c[C>>2]<<3)|0,c[A>>2]|0,(c[A>>2]|0)+(c[C>>2]<<3)|0,c[B>>2]|0,c[j>>2]|0)|0}else c[z>>2]=Zl(c[I>>2]|0,c[A>>2]|0,c[B>>2]|0,c[j>>2]|0)|0;c[r>>2]=c[I>>2];c[s>>2]=c[B>>2];do if(!(fc[c[c[j>>2]>>2]&15](c[r>>2]|0,c[A>>2]|0)|0)){while(1){d=c[r>>2]|0;b=(c[s>>2]|0)+ -8|0;c[s>>2]=b;if((d|0)==(b|0))break;if(fc[c[c[j>>2]>>2]&15](c[s>>2]|0,c[A>>2]|0)|0){g=28;break}}if((g|0)==28){g=0;b=c[s>>2]|0;c[X>>2]=c[r>>2];c[Y>>2]=b;c[Z>>2]=c[X>>2];b=c[Z>>2]|0;c[_+0>>2]=c[b+0>>2];c[_+4>>2]=c[b+4>>2];b=c[X>>2]|0;c[$>>2]=c[Y>>2];d=c[$>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];b=c[Y>>2]|0;c[aa>>2]=_;d=c[aa>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];c[z>>2]=(c[z>>2]|0)+1;break}c[r>>2]=(c[r>>2]|0)+8;c[s>>2]=c[h>>2];e=c[c[j>>2]>>2]|0;d=c[I>>2]|0;b=(c[s>>2]|0)+ -8|0;c[s>>2]=b;if(!(fc[e&15](d,b)|0)){while(1){if((c[r>>2]|0)==(c[s>>2]|0)){g=49;break a}b=fc[c[c[j>>2]>>2]&15](c[I>>2]|0,c[r>>2]|0)|0;e=c[r>>2]|0;if(b)break;c[r>>2]=e+8}b=c[s>>2]|0;c[t>>2]=e;c[u>>2]=b;c[v>>2]=c[t>>2];b=c[v>>2]|0;c[w+0>>2]=c[b+0>>2];c[w+4>>2]=c[b+4>>2];b=c[t>>2]|0;c[x>>2]=c[u>>2];d=c[x>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];b=c[u>>2]|0;c[y>>2]=w;d=c[y>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];c[z>>2]=(c[z>>2]|0)+1;c[r>>2]=(c[r>>2]|0)+8}if((c[r>>2]|0)==(c[s>>2]|0)){g=49;break a}while(1){if((fc[c[c[j>>2]>>2]&15](c[I>>2]|0,c[r>>2]|0)|0)^1){c[r>>2]=(c[r>>2]|0)+8;continue}do{e=c[c[j>>2]>>2]|0;d=c[I>>2]|0;b=(c[s>>2]|0)+ -8|0;c[s>>2]=b}while(fc[e&15](d,b)|0);e=c[r>>2]|0;if((c[r>>2]|0)>>>0>=(c[s>>2]|0)>>>0)break;b=c[s>>2]|0;c[E>>2]=e;c[F>>2]=b;c[G>>2]=c[E>>2];b=c[G>>2]|0;c[H+0>>2]=c[b+0>>2];c[H+4>>2]=c[b+4>>2];b=c[E>>2]|0;c[f>>2]=c[F>>2];d=c[f>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];b=c[F>>2]|0;c[J>>2]=H;d=c[J>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];c[z>>2]=(c[z>>2]|0)+1;c[r>>2]=(c[r>>2]|0)+8}c[I>>2]=e;continue a}while(0);c[r>>2]=(c[r>>2]|0)+8;b:do if((c[r>>2]|0)>>>0<(c[s>>2]|0)>>>0)while(1){if(fc[c[c[j>>2]>>2]&15](c[r>>2]|0,c[A>>2]|0)|0){c[r>>2]=(c[r>>2]|0)+8;continue}do{d=c[c[j>>2]>>2]|0;b=(c[s>>2]|0)+ -8|0;c[s>>2]=b}while((fc[d&15](b,c[A>>2]|0)|0)^1);if((c[r>>2]|0)>>>0>(c[s>>2]|0)>>>0)break b;b=c[s>>2]|0;c[K>>2]=c[r>>2];c[L>>2]=b;c[M>>2]=c[K>>2];b=c[M>>2]|0;c[N+0>>2]=c[b+0>>2];c[N+4>>2]=c[b+4>>2];b=c[K>>2]|0;c[O>>2]=c[L>>2];d=c[O>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];b=c[L>>2]|0;c[P>>2]=N;d=c[P>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];c[z>>2]=(c[z>>2]|0)+1;if((c[A>>2]|0)==(c[r>>2]|0))c[A>>2]=c[s>>2];c[r>>2]=(c[r>>2]|0)+8}while(0);if((c[r>>2]|0)!=(c[A>>2]|0)?fc[c[c[j>>2]>>2]&15](c[A>>2]|0,c[r>>2]|0)|0:0){b=c[A>>2]|0;c[Q>>2]=c[r>>2];c[R>>2]=b;c[S>>2]=c[Q>>2];b=c[S>>2]|0;c[T+0>>2]=c[b+0>>2];c[T+4>>2]=c[b+4>>2];b=c[Q>>2]|0;c[U>>2]=c[R>>2];d=c[U>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];b=c[R>>2]|0;c[V>>2]=T;d=c[V>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];c[z>>2]=(c[z>>2]|0)+1}do if((c[z>>2]|0)==0){a[W>>0]=(bm(c[I>>2]|0,c[r>>2]|0,c[j>>2]|0)|0)&1;b=bm((c[r>>2]|0)+8|0,c[h>>2]|0,c[j>>2]|0)|0;e=a[W>>0]&1;if(b){if(e){g=49;break a}c[h>>2]=c[r>>2];continue a}else{if(!e)break;b=(c[r>>2]|0)+8|0;c[r>>2]=b;c[I>>2]=b;continue a}}while(0);if((((c[r>>2]|0)-(c[I>>2]|0)|0)/8|0|0)<(((c[h>>2]|0)-(c[r>>2]|0)|0)/8|0|0)){Yl(c[I>>2]|0,c[r>>2]|0,c[j>>2]|0);b=(c[r>>2]|0)+8|0;c[r>>2]=b;c[I>>2]=b;continue}else{Yl((c[r>>2]|0)+8|0,c[h>>2]|0,c[j>>2]|0);c[h>>2]=c[r>>2];continue}}if((g|0)==3){d=c[c[j>>2]>>2]|0;b=(c[h>>2]|0)+ -8|0;c[h>>2]=b;if(!(fc[d&15](b,c[I>>2]|0)|0)){i=k;return}b=c[h>>2]|0;c[l>>2]=c[I>>2];c[m>>2]=b;c[n>>2]=c[l>>2];b=c[n>>2]|0;c[o+0>>2]=c[b+0>>2];c[o+4>>2]=c[b+4>>2];b=c[l>>2]|0;c[p>>2]=c[m>>2];d=c[p>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];b=c[m>>2]|0;c[q>>2]=o;d=c[q>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];i=k;return}else if((g|0)==5){e=c[I>>2]|0;d=(c[I>>2]|0)+8|0;b=(c[h>>2]|0)+ -8|0;c[h>>2]=b;Zl(e,d,b,c[j>>2]|0)|0;i=k;return}else if((g|0)==6){aa=c[I>>2]|0;e=(c[I>>2]|0)+8|0;d=(c[I>>2]|0)+16|0;b=(c[h>>2]|0)+ -8|0;c[h>>2]=b;_l(aa,e,d,b,c[j>>2]|0)|0;i=k;return}else if((g|0)==7){$=c[I>>2]|0;aa=(c[I>>2]|0)+8|0;e=(c[I>>2]|0)+16|0;d=(c[I>>2]|0)+24|0;b=(c[h>>2]|0)+ -8|0;c[h>>2]=b;$l($,aa,e,d,b,c[j>>2]|0)|0;i=k;return}else if((g|0)==9){am(e,c[h>>2]|0,c[j>>2]|0);i=k;return}else if((g|0)==49){i=k;return}}function Zl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;A=i;i=i+176|0;m=A+64|0;j=A+104|0;o=A+116|0;n=A+132|0;l=A+156|0;k=A+56|0;B=A+12|0;C=A+108|0;z=A+16|0;x=A+20|0;f=A+24|0;g=A+32|0;J=A+40|0;E=A+128|0;H=A+136|0;K=A+144|0;G=A+152|0;I=A+160|0;v=A+168|0;w=A+68|0;t=A+72|0;r=A+76|0;s=A+80|0;u=A+88|0;P=A+96|0;Q=A+100|0;N=A+4|0;L=A;M=A+112|0;O=A+120|0;y=A+44|0;F=A+48|0;q=A+140|0;p=A+52|0;D=A+148|0;h=A+8|0;c[F>>2]=a;c[q>>2]=b;c[p>>2]=d;c[D>>2]=e;c[h>>2]=0;a=fc[c[c[D>>2]>>2]&15](c[q>>2]|0,c[F>>2]|0)|0;e=fc[c[c[D>>2]>>2]&15](c[p>>2]|0,c[q>>2]|0)|0;if(a){E=c[F>>2]|0;if(e){a=c[p>>2]|0;c[n>>2]=E;c[l>>2]=a;c[o>>2]=c[n>>2];a=c[o>>2]|0;c[k+0>>2]=c[a+0>>2];c[k+4>>2]=c[a+4>>2];a=c[n>>2]|0;c[m>>2]=c[l>>2];b=c[m>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];a=c[l>>2]|0;c[j>>2]=k;b=c[j>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[h>>2]=1;c[y>>2]=c[h>>2];a=c[y>>2]|0;i=A;return a|0}a=c[q>>2]|0;c[x>>2]=E;c[f>>2]=a;c[z>>2]=c[x>>2];a=c[z>>2]|0;c[g+0>>2]=c[a+0>>2];c[g+4>>2]=c[a+4>>2];a=c[x>>2]|0;c[B>>2]=c[f>>2];b=c[B>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];a=c[f>>2]|0;c[C>>2]=g;b=c[C>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[h>>2]=1;if(fc[c[c[D>>2]>>2]&15](c[p>>2]|0,c[q>>2]|0)|0){a=c[p>>2]|0;c[r>>2]=c[q>>2];c[s>>2]=a;c[t>>2]=c[r>>2];a=c[t>>2]|0;c[u+0>>2]=c[a+0>>2];c[u+4>>2]=c[a+4>>2];a=c[r>>2]|0;c[v>>2]=c[s>>2];b=c[v>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];a=c[s>>2]|0;c[w>>2]=u;b=c[w>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[h>>2]=2}c[y>>2]=c[h>>2];a=c[y>>2]|0;i=A;return a|0}else{if(!e){c[y>>2]=c[h>>2];a=c[y>>2]|0;i=A;return a|0}a=c[p>>2]|0;c[L>>2]=c[q>>2];c[M>>2]=a;c[N>>2]=c[L>>2];a=c[N>>2]|0;c[O+0>>2]=c[a+0>>2];c[O+4>>2]=c[a+4>>2];a=c[L>>2]|0;c[P>>2]=c[M>>2];b=c[P>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];a=c[M>>2]|0;c[Q>>2]=O;b=c[Q>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[h>>2]=1;if(fc[c[c[D>>2]>>2]&15](c[q>>2]|0,c[F>>2]|0)|0){a=c[q>>2]|0;c[K>>2]=c[F>>2];c[G>>2]=a;c[H>>2]=c[K>>2];a=c[H>>2]|0;c[I+0>>2]=c[a+0>>2];c[I+4>>2]=c[a+4>>2];a=c[K>>2]|0;c[J>>2]=c[G>>2];b=c[J>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];a=c[G>>2]|0;c[E>>2]=I;b=c[E>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[h>>2]=2}c[y>>2]=c[h>>2];a=c[y>>2]|0;i=A;return a|0}return 0}function _l(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;v=i;i=i+112|0;w=v+36|0;x=v+32|0;u=v;s=v+92|0;t=v+60|0;g=v+8|0;p=v+16|0;q=v+52|0;n=v+72|0;l=v+80|0;m=v+88|0;o=v+96|0;E=v+104|0;F=v+40|0;C=v+44|0;A=v+48|0;B=v+56|0;D=v+64|0;k=v+20|0;j=v+4|0;r=v+24|0;z=v+76|0;y=v+28|0;h=v+84|0;c[k>>2]=a;c[j>>2]=b;c[r>>2]=d;c[z>>2]=e;c[y>>2]=f;c[h>>2]=Zl(c[k>>2]|0,c[j>>2]|0,c[r>>2]|0,c[y>>2]|0)|0;if(!(fc[c[c[y>>2]>>2]&15](c[z>>2]|0,c[r>>2]|0)|0)){a=c[h>>2]|0;i=v;return a|0}a=c[z>>2]|0;c[A>>2]=c[r>>2];c[B>>2]=a;c[C>>2]=c[A>>2];a=c[C>>2]|0;c[D+0>>2]=c[a+0>>2];c[D+4>>2]=c[a+4>>2];a=c[A>>2]|0;c[E>>2]=c[B>>2];b=c[E>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];a=c[B>>2]|0;c[F>>2]=D;b=c[F>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[h>>2]=(c[h>>2]|0)+1;if(!(fc[c[c[y>>2]>>2]&15](c[r>>2]|0,c[j>>2]|0)|0)){a=c[h>>2]|0;i=v;return a|0}a=c[r>>2]|0;c[s>>2]=c[j>>2];c[t>>2]=a;c[u>>2]=c[s>>2];a=c[u>>2]|0;c[g+0>>2]=c[a+0>>2];c[g+4>>2]=c[a+4>>2];a=c[s>>2]|0;c[w>>2]=c[t>>2];b=c[w>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];a=c[t>>2]|0;c[x>>2]=g;b=c[x>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[h>>2]=(c[h>>2]|0)+1;if(!(fc[c[c[y>>2]>>2]&15](c[j>>2]|0,c[k>>2]|0)|0)){a=c[h>>2]|0;i=v;return a|0}a=c[j>>2]|0;c[l>>2]=c[k>>2];c[m>>2]=a;c[n>>2]=c[l>>2];a=c[n>>2]|0;c[o+0>>2]=c[a+0>>2];c[o+4>>2]=c[a+4>>2];a=c[l>>2]|0;c[p>>2]=c[m>>2];b=c[p>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];a=c[m>>2]|0;c[q>>2]=o;b=c[q>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[h>>2]=(c[h>>2]|0)+1;a=c[h>>2]|0;i=v;return a|0}function $l(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;A=i;i=i+144|0;x=A+136|0;y=A+128|0;v=A+48|0;t=A+92|0;u=A+56|0;w=A+16|0;F=A+24|0;G=A+96|0;D=A+28|0;B=A+32|0;C=A+36|0;E=A+40|0;q=A+116|0;r=A+124|0;o=A+132|0;m=A+140|0;n=A+60|0;p=A+64|0;M=A+72|0;N=A+76|0;K=A+80|0;I=A+84|0;J=A+88|0;L=A+8|0;l=A;k=A+104|0;s=A+100|0;h=A+108|0;H=A+112|0;z=A+52|0;j=A+120|0;c[l>>2]=a;c[k>>2]=b;c[s>>2]=d;c[h>>2]=e;c[H>>2]=f;c[z>>2]=g;c[j>>2]=_l(c[l>>2]|0,c[k>>2]|0,c[s>>2]|0,c[h>>2]|0,c[z>>2]|0)|0;if(!(fc[c[c[z>>2]>>2]&15](c[H>>2]|0,c[h>>2]|0)|0)){a=c[j>>2]|0;i=A;return a|0}a=c[H>>2]|0;c[I>>2]=c[h>>2];c[J>>2]=a;c[K>>2]=c[I>>2];a=c[K>>2]|0;c[L+0>>2]=c[a+0>>2];c[L+4>>2]=c[a+4>>2];a=c[I>>2]|0;c[M>>2]=c[J>>2];b=c[M>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];a=c[J>>2]|0;c[N>>2]=L;b=c[N>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[j>>2]=(c[j>>2]|0)+1;if(!(fc[c[c[z>>2]>>2]&15](c[h>>2]|0,c[s>>2]|0)|0)){a=c[j>>2]|0;i=A;return a|0}a=c[h>>2]|0;c[B>>2]=c[s>>2];c[C>>2]=a;c[D>>2]=c[B>>2];a=c[D>>2]|0;c[E+0>>2]=c[a+0>>2];c[E+4>>2]=c[a+4>>2];a=c[B>>2]|0;c[F>>2]=c[C>>2];b=c[F>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];a=c[C>>2]|0;c[G>>2]=E;b=c[G>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[j>>2]=(c[j>>2]|0)+1;if(!(fc[c[c[z>>2]>>2]&15](c[s>>2]|0,c[k>>2]|0)|0)){a=c[j>>2]|0;i=A;return a|0}a=c[s>>2]|0;c[t>>2]=c[k>>2];c[u>>2]=a;c[v>>2]=c[t>>2];a=c[v>>2]|0;c[w+0>>2]=c[a+0>>2];c[w+4>>2]=c[a+4>>2];a=c[t>>2]|0;c[x>>2]=c[u>>2];b=c[x>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];a=c[u>>2]|0;c[y>>2]=w;b=c[y>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[j>>2]=(c[j>>2]|0)+1;if(!(fc[c[c[z>>2]>>2]&15](c[k>>2]|0,c[l>>2]|0)|0)){a=c[j>>2]|0;i=A;return a|0}a=c[k>>2]|0;c[m>>2]=c[l>>2];c[n>>2]=a;c[o>>2]=c[m>>2];a=c[o>>2]|0;c[p+0>>2]=c[a+0>>2];c[p+4>>2]=c[a+4>>2];a=c[m>>2]|0;c[q>>2]=c[n>>2];b=c[q>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];a=c[n>>2]|0;c[r>>2]=p;b=c[r>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[j>>2]=(c[j>>2]|0)+1;a=c[j>>2]|0;i=A;return a|0}function am(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;l=i;i=i+48|0;h=l;p=l+16|0;e=l+36|0;j=l+4|0;o=l+40|0;n=l+44|0;f=l+12|0;k=l+32|0;m=l+24|0;g=l+8|0;c[j>>2]=a;c[o>>2]=b;c[n>>2]=d;c[f>>2]=(c[j>>2]|0)+16;Zl(c[j>>2]|0,(c[j>>2]|0)+8|0,c[f>>2]|0,c[n>>2]|0)|0;c[k>>2]=(c[f>>2]|0)+8;while(1){if((c[k>>2]|0)==(c[o>>2]|0))break;if(fc[c[c[n>>2]>>2]&15](c[k>>2]|0,c[f>>2]|0)|0){c[e>>2]=c[k>>2];a=c[e>>2]|0;c[m+0>>2]=c[a+0>>2];c[m+4>>2]=c[a+4>>2];c[g>>2]=c[f>>2];c[f>>2]=c[k>>2];do{a=c[f>>2]|0;c[h>>2]=c[g>>2];b=c[h>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[f>>2]=c[g>>2];if((c[f>>2]|0)==(c[j>>2]|0))break;b=c[c[n>>2]>>2]|0;a=(c[g>>2]|0)+ -8|0;c[g>>2]=a}while(fc[b&15](m,a)|0);a=c[f>>2]|0;c[p>>2]=m;b=c[p>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2]}c[f>>2]=c[k>>2];c[k>>2]=(c[k>>2]|0)+8}i=l;return}function bm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+96|0;x=h+80|0;y=h+44|0;u=h+24|0;m=h+16|0;q=h+4|0;o=h+40|0;n=h+48|0;l=h+56|0;r=h+72|0;f=h+84|0;p=h+28|0;g=h;k=h+32|0;s=h+36|0;v=h+12|0;j=h+52|0;t=h+64|0;w=h+20|0;c[p>>2]=b;c[g>>2]=d;c[k>>2]=e;switch(((c[g>>2]|0)-(c[p>>2]|0)|0)/8|0|0){case 2:{d=c[c[k>>2]>>2]|0;b=(c[g>>2]|0)+ -8|0;c[g>>2]=b;if(fc[d&15](b,c[p>>2]|0)|0){b=c[g>>2]|0;c[n>>2]=c[p>>2];c[l>>2]=b;c[o>>2]=c[n>>2];b=c[o>>2]|0;c[r+0>>2]=c[b+0>>2];c[r+4>>2]=c[b+4>>2];b=c[n>>2]|0;c[m>>2]=c[l>>2];d=c[m>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];b=c[l>>2]|0;c[q>>2]=r;d=c[q>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2]}a[f>>0]=1;b=a[f>>0]|0;b=b&1;i=h;return b|0};case 3:{y=c[p>>2]|0;d=(c[p>>2]|0)+8|0;b=(c[g>>2]|0)+ -8|0;c[g>>2]=b;Zl(y,d,b,c[k>>2]|0)|0;a[f>>0]=1;b=a[f>>0]|0;b=b&1;i=h;return b|0};case 4:{x=c[p>>2]|0;y=(c[p>>2]|0)+8|0;d=(c[p>>2]|0)+16|0;b=(c[g>>2]|0)+ -8|0;c[g>>2]=b;_l(x,y,d,b,c[k>>2]|0)|0;a[f>>0]=1;b=a[f>>0]|0;b=b&1;i=h;return b|0};case 5:{w=c[p>>2]|0;x=(c[p>>2]|0)+8|0;y=(c[p>>2]|0)+16|0;d=(c[p>>2]|0)+24|0;b=(c[g>>2]|0)+ -8|0;c[g>>2]=b;$l(w,x,y,d,b,c[k>>2]|0)|0;a[f>>0]=1;b=a[f>>0]|0;b=b&1;i=h;return b|0};case 1:case 0:{a[f>>0]=1;b=a[f>>0]|0;b=b&1;i=h;return b|0};default:{c[s>>2]=(c[p>>2]|0)+16;Zl(c[p>>2]|0,(c[p>>2]|0)+8|0,c[s>>2]|0,c[k>>2]|0)|0;c[h+8>>2]=8;c[v>>2]=0;c[j>>2]=(c[s>>2]|0)+8;while(1){if((c[j>>2]|0)==(c[g>>2]|0)){k=18;break}if(fc[c[c[k>>2]>>2]&15](c[j>>2]|0,c[s>>2]|0)|0){c[y>>2]=c[j>>2];b=c[y>>2]|0;c[t+0>>2]=c[b+0>>2];c[t+4>>2]=c[b+4>>2];c[w>>2]=c[s>>2];c[s>>2]=c[j>>2];do{b=c[s>>2]|0;c[x>>2]=c[w>>2];d=c[x>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];c[s>>2]=c[w>>2];if((c[s>>2]|0)==(c[p>>2]|0))break;d=c[c[k>>2]>>2]|0;b=(c[w>>2]|0)+ -8|0;c[w>>2]=b}while(fc[d&15](t,b)|0);b=c[s>>2]|0;c[u>>2]=t;d=c[u>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];b=(c[v>>2]|0)+1|0;c[v>>2]=b;if((b|0)==8){k=16;break}}c[s>>2]=c[j>>2];c[j>>2]=(c[j>>2]|0)+8}if((k|0)==16){b=(c[j>>2]|0)+8|0;c[j>>2]=b;a[f>>0]=(b|0)==(c[g>>2]|0)&1;b=a[f>>0]|0;b=b&1;i=h;return b|0}else if((k|0)==18){a[f>>0]=1;b=a[f>>0]|0;b=b&1;i=h;return b|0}}}return 0}function cm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;c[c[e>>2]>>2]=c[f>>2];i=d;return}function dm(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;f=i;i=i+160|0;n=f+72|0;g=f+32|0;l=f+108|0;j=f+132|0;s=f+8|0;y=f+76|0;z=f+28|0;w=f+20|0;x=f+24|0;v=f;h=f+96|0;u=f+104|0;E=f+136|0;D=f+140|0;C=f+144|0;B=f+52|0;A=f+56|0;t=f+60|0;F=f+64|0;m=f+68|0;p=f+16|0;q=f+4|0;r=f+84|0;G=f+80|0;H=f+88|0;I=f+92|0;J=f+36|0;K=f+100|0;k=f+40|0;o=f+44|0;e=f+112|0;c[K>>2]=b;c[k>>2]=d;b=c[K>>2]|0;c[J>>2]=b;c[I>>2]=(c[J>>2]|0)+8;c[H>>2]=c[I>>2];c[o>>2]=c[H>>2];c[G>>2]=b;d=c[G>>2]|0;d=(((c[d+4>>2]|0)-(c[d>>2]|0)|0)/8|0)+1|0;c[F>>2]=b;c[m>>2]=d;d=c[F>>2]|0;c[p>>2]=gm(d)|0;if((c[m>>2]|0)>>>0>(c[p>>2]|0)>>>0)Zt(d);c[A>>2]=d;c[B>>2]=c[A>>2];K=c[B>>2]|0;c[C>>2]=K;c[D>>2]=(c[C>>2]|0)+8;c[E>>2]=c[D>>2];c[q>>2]=((c[c[E>>2]>>2]|0)-(c[K>>2]|0)|0)/8|0;if((c[q>>2]|0)>>>0>=(((c[p>>2]|0)>>>0)/2|0)>>>0)c[t>>2]=c[p>>2];else{c[r>>2]=c[q>>2]<<1;c[h>>2]=r;c[u>>2]=m;K=c[h>>2]|0;J=c[u>>2]|0;a[v+0>>0]=a[f+148>>0]|0;c[w>>2]=K;c[x>>2]=J;J=c[w>>2]|0;K=c[x>>2]|0;c[f+12>>2]=v;c[y>>2]=J;c[z>>2]=K;c[t>>2]=c[((c[c[y>>2]>>2]|0)>>>0<(c[c[z>>2]>>2]|0)>>>0?c[x>>2]|0:c[w>>2]|0)>>2]}K=c[t>>2]|0;c[s>>2]=b;J=c[s>>2]|0;hm(e,K,((c[J+4>>2]|0)-(c[J>>2]|0)|0)/8|0,c[o>>2]|0);J=c[o>>2]|0;c[j>>2]=c[e+8>>2];K=c[j>>2]|0;c[l>>2]=c[k>>2];h=c[l>>2]|0;c[f+48>>2]=J;c[n>>2]=K;c[g>>2]=h;h=c[n>>2]|0;if((h|0)==0){K=e+8|0;J=c[K>>2]|0;J=J+8|0;c[K>>2]=J;em(b,e);fm(e);i=f;return}K=c[g>>2]|0;c[h+0>>2]=c[K+0>>2];c[h+4>>2]=c[K+4>>2];K=e+8|0;J=c[K>>2]|0;J=J+8|0;c[K>>2]=J;em(b,e);fm(e);i=f;return}function em(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=i;i=i+144|0;F=d+108|0;H=d+88|0;G=d+80|0;E=d+48|0;C=d+8|0;z=d+12|0;D=d+84|0;B=d+16|0;y=d+20|0;A=d+24|0;w=d+28|0;t=d+32|0;x=d+104|0;v=d+112|0;s=d+120|0;u=d+128|0;m=d+136|0;q=d+52|0;r=d+56|0;n=d+60|0;o=d+64|0;p=d+68|0;k=d+72|0;g=d+76|0;l=d+4|0;j=d;f=d+92|0;h=d+96|0;K=d+100|0;J=d+40|0;I=d+116|0;L=d+44|0;e=d+124|0;c[L>>2]=a;c[e>>2]=b;a=c[L>>2]|0;c[I>>2]=a;c[J>>2]=(c[I>>2]|0)+8;c[K>>2]=c[J>>2];J=c[a>>2]|0;I=c[a+4>>2]|0;b=(c[e>>2]|0)+4|0;c[d+132>>2]=c[K>>2];c[F>>2]=J;c[H>>2]=I;c[G>>2]=b;c[E>>2]=((c[H>>2]|0)-(c[F>>2]|0)|0)/8|0;b=c[G>>2]|0;c[b>>2]=(c[b>>2]|0)+(0-(c[E>>2]|0)<<3);qz(c[c[G>>2]>>2]|0,c[F>>2]|0,c[E>>2]<<3|0)|0;b=(c[e>>2]|0)+4|0;c[B>>2]=a;c[y>>2]=b;c[D>>2]=c[B>>2];c[A>>2]=c[c[D>>2]>>2];c[C>>2]=c[y>>2];c[c[B>>2]>>2]=c[c[C>>2]>>2];c[z>>2]=A;c[c[y>>2]>>2]=c[c[z>>2]>>2];b=(c[e>>2]|0)+8|0;c[v>>2]=a+4;c[s>>2]=b;c[x>>2]=c[v>>2];c[u>>2]=c[c[x>>2]>>2];c[w>>2]=c[s>>2];c[c[v>>2]>>2]=c[c[w>>2]>>2];c[t>>2]=u;c[c[s>>2]>>2]=c[c[t>>2]>>2];c[r>>2]=a;c[q>>2]=(c[r>>2]|0)+8;c[m>>2]=c[q>>2];m=c[m>>2]|0;c[p>>2]=c[e>>2];c[o>>2]=(c[p>>2]|0)+12;c[n>>2]=c[o>>2];b=c[n>>2]|0;c[j>>2]=m;c[f>>2]=b;c[l>>2]=c[j>>2];c[h>>2]=c[c[l>>2]>>2];c[k>>2]=c[f>>2];c[c[j>>2]>>2]=c[c[k>>2]>>2];c[g>>2]=h;c[c[f>>2]>>2]=c[c[g>>2]>>2];c[c[e>>2]>>2]=c[(c[e>>2]|0)+4>>2];c[d+36>>2]=a;i=d;return}function fm(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;r=i;i=i+128|0;l=r+72|0;k=r+44|0;j=r+12|0;h=r+104|0;g=r+24|0;f=r+16|0;q=r+20|0;p=r+76|0;d=r+52|0;e=r+28|0;m=r+32|0;n=r+36|0;o=r+40|0;w=r+108|0;B=r+112|0;C=r+116|0;A=r;x=r+56|0;y=r+60|0;z=r+120|0;v=r+68|0;u=r+88|0;t=r+92|0;E=r+96|0;s=r+100|0;G=r+8|0;F=r+80|0;I=r+84|0;H=r+121|0;J=r+48|0;D=r+64|0;c[D>>2]=b;D=c[D>>2]|0;c[J>>2]=D;J=c[J>>2]|0;b=c[J+4>>2]|0;c[F>>2]=J;c[I>>2]=b;F=c[F>>2]|0;b=c[I>>2]|0;a[G+0>>0]=a[H+0>>0]|0;c[E>>2]=F;c[s>>2]=b;b=c[E>>2]|0;while(1){if((c[s>>2]|0)==(c[b+8>>2]|0))break;c[t>>2]=b;c[u>>2]=(c[t>>2]|0)+12;c[v>>2]=c[u>>2];J=c[(c[v>>2]|0)+4>>2]|0;H=b+8|0;I=(c[H>>2]|0)+ -8|0;c[H>>2]=I;c[w>>2]=I;I=c[w>>2]|0;c[x>>2]=J;c[y>>2]=I;I=c[x>>2]|0;J=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=I;c[C>>2]=J}if((c[D>>2]|0)==0){i=r;return}c[q>>2]=D;c[f>>2]=(c[q>>2]|0)+12;c[g>>2]=c[f>>2];H=c[(c[g>>2]|0)+4>>2]|0;J=c[D>>2]|0;c[h>>2]=D;I=c[h>>2]|0;c[j>>2]=I;c[k>>2]=(c[j>>2]|0)+12;c[l>>2]=c[k>>2];I=((c[c[l>>2]>>2]|0)-(c[I>>2]|0)|0)/8|0;c[m>>2]=H;c[n>>2]=J;c[o>>2]=I;I=c[n>>2]|0;J=c[o>>2]|0;c[p>>2]=c[m>>2];c[d>>2]=I;c[e>>2]=J;Ix(c[d>>2]|0);i=r;return}function gm(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+80|0;q=h+44|0;r=h+40|0;s=h+8|0;u=h+12|0;t=h+76|0;k=h+36|0;g=h+16|0;f=h+20|0;d=h+68|0;e=h+32|0;l=h;n=h+48|0;j=h+52|0;m=h+77|0;v=h+60|0;w=h+64|0;x=h+28|0;y=h+24|0;p=h+56|0;o=h+72|0;c[y>>2]=b;c[x>>2]=c[y>>2];c[w>>2]=(c[x>>2]|0)+8;c[v>>2]=c[w>>2];c[u>>2]=c[v>>2];b=c[u>>2]|0;a[s+0>>0]=a[t+0>>0]|0;c[r>>2]=b;c[q>>2]=c[r>>2];c[p>>2]=536870911;c[o>>2]=4294967295/2|0;c[n>>2]=p;c[j>>2]=o;b=c[n>>2]|0;j=c[j>>2]|0;a[l+0>>0]=a[m+0>>0]|0;c[d>>2]=b;c[e>>2]=j;j=c[e>>2]|0;b=c[d>>2]|0;c[k>>2]=l;c[g>>2]=j;c[f>>2]=b;i=h;return c[((c[c[g>>2]>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0?c[e>>2]|0:c[d>>2]|0)>>2]|0}function hm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;l=i;i=i+128|0;p=l+108|0;o=l+100|0;r=l+32|0;q=l+8|0;n=l+68|0;m=l+16|0;u=l+20|0;v=l+88|0;w=l+96|0;t=l+104|0;k=l+64|0;f=l+44|0;g=l+48|0;A=l+52|0;B=l+60|0;C=l+4|0;z=l+72|0;D=l+80|0;h=l;j=l+76|0;x=l+28|0;y=l+84|0;s=l+92|0;c[D>>2]=a;c[h>>2]=b;c[j>>2]=d;c[x>>2]=e;e=c[D>>2]|0;c[B>>2]=z;c[C>>2]=-1;a=c[C>>2]|0;c[A>>2]=c[B>>2];c[l+56>>2]=a;c[c[A>>2]>>2]=0;c[y>>2]=c[z>>2];c[l+40>>2]=y;im(e+12|0,0,c[x>>2]|0);if((c[h>>2]|0)!=0){c[r>>2]=e;c[o>>2]=(c[r>>2]|0)+12;c[p>>2]=c[o>>2];D=c[h>>2]|0;c[n>>2]=c[(c[p>>2]|0)+4>>2];c[m>>2]=D;m=c[m>>2]|0;c[l+36>>2]=c[n>>2];c[q>>2]=m;c[l+12>>2]=0;m=Gx(c[q>>2]<<3)|0}else{c[v>>2]=t;c[w>>2]=-1;m=c[w>>2]|0;c[u>>2]=c[v>>2];c[l+24>>2]=m;c[c[u>>2]>>2]=0;c[s>>2]=c[t>>2];c[l+112>>2]=s;m=0}c[e>>2]=m;D=(c[e>>2]|0)+(c[j>>2]<<3)|0;c[e+8>>2]=D;c[e+4>>2]=D;D=(c[e>>2]|0)+(c[h>>2]<<3)|0;c[g>>2]=e;c[f>>2]=(c[g>>2]|0)+12;c[k>>2]=c[f>>2];c[c[k>>2]>>2]=D;i=l;return}function im(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;i=i+48|0;l=e;f=e+16|0;h=e+28|0;k=e+4|0;j=e+32|0;g=e+36|0;n=e+12|0;p=e+24|0;o=e+20|0;m=e+8|0;c[p>>2]=a;c[o>>2]=b;c[m>>2]=d;d=c[p>>2]|0;c[n>>2]=o;b=c[c[n>>2]>>2]|0;c[l>>2]=c[m>>2];a=c[l>>2]|0;c[k>>2]=d;c[j>>2]=b;c[g>>2]=a;a=c[k>>2]|0;c[h>>2]=j;c[a>>2]=c[c[h>>2]>>2];c[f>>2]=c[g>>2];c[a+4>>2]=c[f>>2];i=e;return}function jm(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;b=i;i=i+96|0;l=b+28|0;n=b+84|0;m=b+56|0;k=b+8|0;f=b+48|0;h=b+72|0;g=b+80|0;e=b+88|0;q=b+36|0;s=b+44|0;r=b+52|0;p=b+60|0;t=b+4|0;o=b+20|0;j=b+68|0;d=b+24|0;u=b+76|0;c[u>>2]=a;c[t>>2]=c[u>>2];a=c[t>>2]|0;c[b+16>>2]=a;c[s>>2]=p;c[r>>2]=-1;r=c[r>>2]|0;c[q>>2]=c[s>>2];c[b+40>>2]=r;c[c[q>>2]>>2]=0;c[o>>2]=c[p>>2];c[b+32>>2]=o;c[a>>2]=0;c[n>>2]=k;c[m>>2]=-1;m=c[m>>2]|0;c[l>>2]=c[n>>2];c[b>>2]=m;c[c[l>>2]>>2]=0;c[j>>2]=c[k>>2];c[b+12>>2]=j;c[a+4>>2]=0;c[h>>2]=e;c[g>>2]=-1;g=c[g>>2]|0;c[f>>2]=c[h>>2];c[b+64>>2]=g;c[c[f>>2]>>2]=0;c[d>>2]=c[e>>2];c[b+92>>2]=d;km(a+8|0,0);i=b;return}function km(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+32|0;e=d+8|0;g=d+20|0;f=d+24|0;h=d+4|0;k=d;j=d+12|0;c[k>>2]=a;c[j>>2]=b;b=c[k>>2]|0;c[h>>2]=j;a=c[c[h>>2]>>2]|0;c[g>>2]=b;c[f>>2]=a;a=c[g>>2]|0;c[d+16>>2]=a;c[e>>2]=f;c[a>>2]=c[c[e>>2]>>2];i=d;return}function lm(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=i;i=i+144|0;w=d+48|0;B=d+8|0;C=d+84|0;A=d;x=d+16|0;y=d+4|0;z=d+132|0;v=d+80|0;u=d+44|0;t=d+20|0;E=d+24|0;e=d+28|0;D=d+32|0;g=d+36|0;f=d+40|0;s=d+76|0;l=d+124|0;k=d+128|0;j=d+52|0;h=d+56|0;p=d+64|0;q=d+68|0;r=d+92|0;m=d+96|0;n=d+100|0;o=d+104|0;I=d+108|0;K=d+116|0;J=d+120|0;H=d+88|0;F=d+72|0;G=d+12|0;c[F>>2]=b;b=c[F>>2]|0;F=c[b>>2]|0;c[K>>2]=H;c[J>>2]=-1;J=c[J>>2]|0;c[I>>2]=c[K>>2];c[d+112>>2]=J;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[d+60>>2]=G;if((F|0)==0){i=d;return}c[D>>2]=b;K=c[D>>2]|0;D=c[K>>2]|0;c[E>>2]=K;c[e>>2]=D;D=c[E>>2]|0;while(1){if((c[e>>2]|0)==(c[D+4>>2]|0))break;c[t>>2]=D;c[u>>2]=(c[t>>2]|0)+8;c[v>>2]=c[u>>2];K=c[v>>2]|0;I=D+4|0;J=(c[I>>2]|0)+ -8|0;c[I>>2]=J;c[w>>2]=J;J=c[w>>2]|0;c[x>>2]=K;c[y>>2]=J;J=c[x>>2]|0;K=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=J;c[C>>2]=K}c[s>>2]=b;c[f>>2]=(c[s>>2]|0)+8;c[g>>2]=c[f>>2];I=c[g>>2]|0;K=c[b>>2]|0;c[h>>2]=b;J=c[h>>2]|0;c[j>>2]=J;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];J=((c[c[l>>2]>>2]|0)-(c[J>>2]|0)|0)/8|0;c[m>>2]=I;c[n>>2]=K;c[o>>2]=J;J=c[n>>2]|0;K=c[o>>2]|0;c[p>>2]=c[m>>2];c[q>>2]=J;c[r>>2]=K;Ix(c[q>>2]|0);i=d;return}function mm(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+16|0;l=g+4|0;k=g;j=g+10|0;h=g+8|0;c[l>>2]=a;c[k>>2]=d;b[j>>1]=e;b[h>>1]=f;a=c[l>>2]|0;c[a>>2]=c[k>>2];b[a+4>>1]=b[j>>1]|0;b[a+6>>1]=b[h>>1]|0;i=g;return}function nm(b,f,g,h,j,k,l,m,n,o,p){b=b|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0;L=i;i=i+176|0;q=L+56|0;G=L+140|0;B=L+44|0;C=L+52|0;N=L+48|0;O=L+8|0;S=L+12|0;T=L+76|0;J=L+16|0;K=L+20|0;P=L+120|0;I=L+128|0;W=L+136|0;V=L+144|0;U=L+152|0;v=L+72|0;t=L+156|0;w=L+60|0;A=L+64|0;E=L+68|0;M=L+4|0;R=L+80|0;x=L+104|0;r=L+24|0;F=L+88|0;H=L;s=L+40|0;y=L+124|0;u=L+160|0;z=L+161|0;D=L+148|0;Q=L+132|0;c[I>>2]=b;c[W>>2]=f;c[V>>2]=g;c[U>>2]=h;c[v>>2]=j;c[t>>2]=k;c[w>>2]=l;c[A>>2]=m;c[E>>2]=n;c[M>>2]=o;c[R>>2]=p;Wi(x,c[W>>2]|0);Wi(r,c[V>>2]|0);Wi(F,c[U>>2]|0);c[H>>2]=0;while(1){V=c[H>>2]|0;c[P>>2]=c[I>>2];W=c[P>>2]|0;if(!(V>>>0<(((c[W+4>>2]|0)-(c[W>>2]|0)|0)/32|0)>>>0))break;W=c[H>>2]|0;c[J>>2]=c[I>>2];c[K>>2]=W;c[s>>2]=(c[c[J>>2]>>2]|0)+(c[K>>2]<<5);om(r);W=c[r+8>>2]|0;c[N>>2]=c[M>>2];c[O>>2]=W;sg((c[c[N>>2]>>2]|0)+((c[O>>2]|0)*2832|0)|0,e[(c[s>>2]|0)+22>>1]|0);c[y>>2]=0;while(1){if(!((c[y>>2]|0)>>>0<(c[c[s>>2]>>2]|0)>>>0))break;om(x);if((c[t>>2]|0)>>>0>0)p=d[(c[v>>2]|0)+((c[t>>2]|0)-1&c[w>>2])>>0]|0;else p=0;a[u>>0]=p;if((c[t>>2]|0)>>>0>1)p=d[(c[v>>2]|0)+((c[t>>2]|0)-2&c[w>>2])>>0]|0;else p=0;a[z>>0]=p;U=c[x+8>>2]<<6;V=a[u>>0]|0;W=a[z>>0]|0;b=c[x+8>>2]|0;c[B>>2]=c[A>>2];c[C>>2]=b;c[D>>2]=U+((pm(V,W,c[(c[c[B>>2]>>2]|0)+(c[C>>2]<<2)>>2]|0)|0)&255);W=c[D>>2]|0;c[q>>2]=c[E>>2];c[G>>2]=W;bh((c[c[q>>2]>>2]|0)+((c[G>>2]|0)*1040|0)|0,d[(c[v>>2]|0)+(c[t>>2]&c[w>>2])>>0]|0);c[t>>2]=(c[t>>2]|0)+1;c[y>>2]=(c[y>>2]|0)+1}c[t>>2]=(c[t>>2]|0)+(c[(c[s>>2]|0)+4>>2]|0);if((c[(c[s>>2]|0)+4>>2]|0)>>>0>0?(e[(c[s>>2]|0)+20>>1]|0|0)!=65535:0){om(F);if((c[(c[s>>2]|0)+8>>2]|0)>>>0>4)p=3;else p=(c[(c[s>>2]|0)+8>>2]|0)-2|0;c[Q>>2]=(c[F+8>>2]<<2)+p;W=c[Q>>2]|0;c[S>>2]=c[R>>2];c[T>>2]=W;te((c[c[S>>2]>>2]|0)+((c[T>>2]|0)*2096|0)|0,e[(c[s>>2]|0)+20>>1]|0)}c[H>>2]=(c[H>>2]|0)+1}i=L;return}function om(a){a=a|0;var b=0,e=0,f=0,g=0,h=0,j=0;b=i;i=i+32|0;g=b+16|0;h=b+12|0;e=b+8|0;f=b+4|0;j=b;c[j>>2]=a;a=c[j>>2]|0;if((c[a+12>>2]|0)!=0){j=a+12|0;a=c[j>>2]|0;a=a+ -1|0;c[j>>2]=a;i=b;return}j=a+4|0;c[j>>2]=(c[j>>2]|0)+1;j=c[a+4>>2]|0;c[e>>2]=(c[a>>2]|0)+4;c[f>>2]=j;c[a+8>>2]=d[(c[c[e>>2]>>2]|0)+(c[f>>2]|0)>>0];j=c[a+4>>2]|0;c[g>>2]=(c[a>>2]|0)+28;c[h>>2]=j;c[a+12>>2]=c[(c[c[g>>2]>>2]|0)+(c[h>>2]<<2)>>2];j=a+12|0;a=c[j>>2]|0;a=a+ -1|0;c[j>>2]=a;i=b;return}function pm(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+16|0;h=g+6|0;k=g+5|0;j=g+4|0;l=g;a[k>>0]=b;a[j>>0]=e;c[l>>2]=f;f=c[l>>2]|0;if((f|0)==2){a[h>>0]=d[256264+(d[k>>0]|0)>>0]|0|(d[(d[j>>0]|0)+256520>>0]|0);l=a[h>>0]|0;i=g;return l|0}else if((f|0)==1){a[h>>0]=(d[k>>0]|0)>>2;l=a[h>>0]|0;i=g;return l|0}else if((f|0)==0){a[h>>0]=(d[k>>0]|0)&63;l=a[h>>0]|0;i=g;return l|0}else if((f|0)==3){a[h>>0]=(c[256776+((d[k>>0]|0)<<2)>>2]<<3)+(c[256776+((d[j>>0]|0)<<2)>>2]|0);l=a[h>>0]|0;i=g;return l|0}else{a[h>>0]=0;l=a[h>>0]|0;i=g;return l|0}return 0}function qm(b,e,f,h,j,k){b=b|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;E=i;i=i+3232|0;S=E+56|0;R=E+8|0;Q=E+16|0;O=E+3176|0;P=E+48|0;T=E;W=E+12|0;V=E+3172|0;U=E+3224|0;p=E+20|0;D=E+24|0;q=E+28|0;I=E+32|0;o=E+36|0;H=E+40|0;t=E+3168|0;v=E+96|0;w=E+3212|0;K=E+3216|0;X=E+3220|0;l=E+60|0;N=E+72|0;M=E+76|0;J=E+80|0;L=E+84|0;n=E+88|0;F=E+92|0;m=E+3184|0;G=E+3188|0;s=E+3192|0;r=E+3196|0;u=E+3200|0;x=E+3204|0;y=E+3208|0;z=E+4|0;A=E+3180|0;B=E+52|0;C=E+44|0;c[p>>2]=b;c[D>>2]=e;c[q>>2]=f;c[I>>2]=h;c[o>>2]=j;c[H>>2]=k;c[t>>2]=rm(c[p>>2]|0,c[D>>2]|0,c[q>>2]|0,c[o>>2]|0)|0;lz(v|0,0,3072)|0;c[w>>2]=495;c[X>>2]=c[w>>2];c[W>>2]=X;c[V>>2]=D;b=c[W>>2]|0;e=c[V>>2]|0;a[T+0>>0]=a[U+0>>0]|0;c[O>>2]=b;c[P>>2]=e;e=c[P>>2]|0;b=c[O>>2]|0;c[S>>2]=T;c[R>>2]=e;c[Q>>2]=b;c[K>>2]=c[((c[c[R>>2]>>2]|0)>>>0<(c[c[Q>>2]>>2]|0)>>>0?c[P>>2]|0:c[O>>2]|0)>>2];c[l+0>>2]=0;c[l+4>>2]=0;c[l+8>>2]=0;c[N>>2]=0;c[M>>2]=0;c[J>>2]=0;while(1){if((c[J>>2]|0)>=(c[K>>2]|0))break;c[L>>2]=d[(c[o>>2]|0)+((c[p>>2]|0)+(c[J>>2]|0)&c[q>>2])>>0];X=v+(c[M>>2]<<10)+(c[L>>2]<<2)|0;c[X>>2]=(c[X>>2]|0)+1;X=l+(c[M>>2]<<2)|0;c[X>>2]=(c[X>>2]|0)+1;c[M>>2]=sm(c[N>>2]|0,c[L>>2]|0,c[t>>2]|0)|0;c[N>>2]=c[L>>2];c[J>>2]=(c[J>>2]|0)+1}c[n>>2]=0;while(1){if(!((c[n>>2]|0)>>>0<(c[D>>2]|0)>>>0))break;if(((c[n>>2]|0)-(c[w>>2]|0)|0)>=0){if(((c[n>>2]|0)-(c[w>>2]|0)-1|0)<0)k=0;else k=d[(c[o>>2]|0)+((c[p>>2]|0)+(c[n>>2]|0)-(c[w>>2]|0)-1&c[q>>2])>>0]|0;c[F>>2]=k;if(((c[n>>2]|0)-(c[w>>2]|0)-2|0)<0)k=0;else k=d[(c[o>>2]|0)+((c[p>>2]|0)+(c[n>>2]|0)-(c[w>>2]|0)-2&c[q>>2])>>0]|0;c[m>>2]=k;c[G>>2]=sm(c[m>>2]|0,c[F>>2]|0,c[t>>2]|0)|0;X=v+(c[G>>2]<<10)+((d[(c[o>>2]|0)+((c[p>>2]|0)+(c[n>>2]|0)-(c[w>>2]|0)&c[q>>2])>>0]|0)<<2)|0;c[X>>2]=(c[X>>2]|0)+ -1;X=l+(c[G>>2]<<2)|0;c[X>>2]=(c[X>>2]|0)+ -1}if(((c[n>>2]|0)+(c[w>>2]|0)|0)>>>0<(c[D>>2]|0)>>>0){if(((c[n>>2]|0)+(c[w>>2]|0)-1|0)<0)k=0;else k=d[(c[o>>2]|0)+((c[p>>2]|0)+(c[n>>2]|0)+(c[w>>2]|0)-1&c[q>>2])>>0]|0;c[s>>2]=k;if(((c[n>>2]|0)+(c[w>>2]|0)-2|0)<0)k=0;else k=d[(c[o>>2]|0)+((c[p>>2]|0)+(c[n>>2]|0)+(c[w>>2]|0)-2&c[q>>2])>>0]|0;c[r>>2]=k;c[u>>2]=sm(c[r>>2]|0,c[s>>2]|0,c[t>>2]|0)|0;X=v+(c[u>>2]<<10)+((d[(c[o>>2]|0)+((c[p>>2]|0)+(c[n>>2]|0)+(c[w>>2]|0)&c[q>>2])>>0]|0)<<2)|0;c[X>>2]=(c[X>>2]|0)+1;X=l+(c[u>>2]<<2)|0;c[X>>2]=(c[X>>2]|0)+1}if((c[n>>2]|0)<1)k=0;else k=d[(c[o>>2]|0)+((c[p>>2]|0)+(c[n>>2]|0)-1&c[q>>2])>>0]|0;c[x>>2]=k;if((c[n>>2]|0)<2)k=0;else k=d[(c[o>>2]|0)+((c[p>>2]|0)+(c[n>>2]|0)-2&c[q>>2])>>0]|0;c[y>>2]=k;c[z>>2]=sm(c[y>>2]|0,c[x>>2]|0,c[t>>2]|0)|0;c[A>>2]=(c[p>>2]|0)+(c[n>>2]|0)&c[q>>2];X=c[v+(c[z>>2]<<10)+((d[(c[o>>2]|0)+(c[A>>2]|0)>>0]|0)<<2)>>2]|0;c[B>>2]=X;c[B>>2]=(c[B>>2]|0)==0?1:X;g[C>>2]=+Fa(+(+(c[l+(c[z>>2]<<2)>>2]|0)/+(c[B>>2]|0)));g[C>>2]=+g[C>>2]+.02905;if(+g[C>>2]<1.0){g[C>>2]=+g[C>>2]*.5;g[C>>2]=+g[C>>2]+.5}if((c[n>>2]|0)<2e3)g[C>>2]=+g[C>>2]+(.7- +(2e3-(c[n>>2]|0)|0)/2.0e3*.35);g[(c[H>>2]|0)+(((c[p>>2]|0)+(c[n>>2]|0)&c[I>>2])<<2)>>2]=+g[C>>2];c[n>>2]=(c[n>>2]|0)+1}i=E;return}function rm(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;h=i;i=i+48|0;g=h;l=h+16|0;o=h+28|0;m=h+4|0;j=h+32|0;n=h+44|0;q=h+12|0;r=h+24|0;k=h+20|0;p=h+8|0;c[g>>2]=a;c[l>>2]=b;c[o>>2]=e;c[m>>2]=f;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[n>>2]=1;c[q>>2]=0;c[r>>2]=0;c[k>>2]=0;while(1){if(!((c[k>>2]|0)>>>0<(c[l>>2]|0)>>>0))break;c[p>>2]=d[(c[m>>2]|0)+((c[g>>2]|0)+(c[k>>2]|0)&c[o>>2])>>0];c[r>>2]=sm(c[q>>2]|0,c[p>>2]|0,2)|0;a=j+(c[r>>2]<<2)|0;c[a>>2]=(c[a>>2]|0)+1;c[q>>2]=c[p>>2];c[k>>2]=(c[k>>2]|0)+1}if((c[j+8>>2]|0)<500)c[n>>2]=1;if(((c[j+4>>2]|0)+(c[j+8>>2]|0)|0)>=25){a=c[n>>2]|0;i=h;return a|0}c[n>>2]=0;a=c[n>>2]|0;i=h;return a|0}function sm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;r=i;i=i+96|0;x=r+24|0;y=r+52|0;v=r+32|0;w=r+72|0;u=r;s=r+20|0;t=r+60|0;p=r+84|0;q=r+16|0;n=r+88|0;o=r+40|0;m=r+8|0;j=r+56|0;l=r+48|0;g=r+64|0;z=r+12|0;A=r+28|0;k=r+80|0;h=r+44|0;f=r+68|0;c[z>>2]=b;c[A>>2]=d;c[k>>2]=e;if((c[A>>2]|0)<128){c[g>>2]=0;b=c[g>>2]|0;i=r;return b|0}if((c[A>>2]|0)>=192){c[h>>2]=1;c[j>>2]=h;c[l>>2]=k;b=c[j>>2]|0;d=c[l>>2]|0;a[m+0>>0]=a[r+93>>0]|0;c[n>>2]=b;c[o>>2]=d;d=c[o>>2]|0;b=c[n>>2]|0;c[r+76>>2]=m;c[p>>2]=d;c[q>>2]=b;c[g>>2]=c[((c[c[p>>2]>>2]|0)<(c[c[q>>2]>>2]|0)?c[o>>2]|0:c[n>>2]|0)>>2];b=c[g>>2]|0;i=r;return b|0}if((c[z>>2]|0)<224){c[g>>2]=0;b=c[g>>2]|0;i=r;return b|0}else{c[f>>2]=2;c[s>>2]=f;c[t>>2]=k;b=c[s>>2]|0;d=c[t>>2]|0;a[u+0>>0]=a[r+92>>0]|0;c[v>>2]=b;c[w>>2]=d;d=c[w>>2]|0;b=c[v>>2]|0;c[r+36>>2]=u;c[x>>2]=d;c[y>>2]=b;c[g>>2]=c[((c[c[x>>2]>>2]|0)<(c[c[y>>2]>>2]|0)?c[w>>2]|0:c[v>>2]|0)>>2];b=c[g>>2]|0;i=r;return b|0}return 0}function tm(b,e,f,h,j,k){b=b|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;u=i;i=i+1120|0;D=u+8|0;C=u+4|0;B=u+1072|0;z=u+24|0;A=u+1088|0;E=u;H=u+12|0;G=u+1076|0;F=u+1108|0;o=u+1092|0;v=u+1100|0;q=u+1104|0;x=u+32|0;n=u+36|0;w=u+44|0;m=u+48|0;l=u+40|0;s=u+28|0;I=u+1080|0;y=u+16|0;p=u+20|0;r=u+1096|0;t=u+1084|0;c[o>>2]=b;c[v>>2]=e;c[q>>2]=f;c[x>>2]=h;c[n>>2]=j;c[w>>2]=k;lz(m|0,0,1024)|0;c[l>>2]=2e3;c[I>>2]=c[l>>2];c[H>>2]=I;c[G>>2]=v;b=c[H>>2]|0;e=c[G>>2]|0;a[E+0>>0]=a[F+0>>0]|0;c[z>>2]=b;c[A>>2]=e;e=c[A>>2]|0;b=c[z>>2]|0;c[D>>2]=E;c[C>>2]=e;c[B>>2]=b;c[s>>2]=c[((c[c[C>>2]>>2]|0)>>>0<(c[c[B>>2]>>2]|0)>>>0?c[A>>2]|0:c[z>>2]|0)>>2];c[y>>2]=0;while(1){if((c[y>>2]|0)>=(c[s>>2]|0))break;I=m+((d[(c[n>>2]|0)+((c[o>>2]|0)+(c[y>>2]|0)&c[q>>2])>>0]|0)<<2)|0;c[I>>2]=(c[I>>2]|0)+1;c[y>>2]=(c[y>>2]|0)+1}c[p>>2]=0;while(1){if(!((c[p>>2]|0)>>>0<(c[v>>2]|0)>>>0))break;if(((c[p>>2]|0)-(c[l>>2]|0)|0)>=0){I=m+((d[(c[n>>2]|0)+((c[o>>2]|0)+(c[p>>2]|0)-(c[l>>2]|0)&c[q>>2])>>0]|0)<<2)|0;c[I>>2]=(c[I>>2]|0)+ -1;c[s>>2]=(c[s>>2]|0)+ -1}if(((c[p>>2]|0)+(c[l>>2]|0)|0)>>>0<(c[v>>2]|0)>>>0){I=m+((d[(c[n>>2]|0)+((c[o>>2]|0)+(c[p>>2]|0)+(c[l>>2]|0)&c[q>>2])>>0]|0)<<2)|0;c[I>>2]=(c[I>>2]|0)+1;c[s>>2]=(c[s>>2]|0)+1}I=c[m+((d[(c[n>>2]|0)+((c[o>>2]|0)+(c[p>>2]|0)&c[q>>2])>>0]|0)<<2)>>2]|0;c[r>>2]=I;c[r>>2]=(c[r>>2]|0)==0?1:I;g[t>>2]=+Fa(+(+(c[s>>2]|0)/+(c[r>>2]|0)));g[t>>2]=+g[t>>2]+.029;if(+g[t>>2]<1.0){g[t>>2]=+g[t>>2]*.5;g[t>>2]=+g[t>>2]+.5}g[(c[w>>2]|0)+(((c[o>>2]|0)+(c[p>>2]|0)&c[x>>2])<<2)>>2]=+g[t>>2];c[p>>2]=(c[p>>2]|0)+1}i=u;return}function um(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;d=i;i=i+16|0;b=d+12|0;g=d+8|0;e=d+4|0;f=d;c[g>>2]=a;c[e>>2]=0;while(1){if((c[e>>2]|0)>=24){a=7;break}c[f>>2]=257800+(c[e>>2]<<3);if((c[g>>2]|0)>=(c[c[f>>2]>>2]|0)?(c[g>>2]|0)<((c[c[f>>2]>>2]|0)+(1<<c[(c[f>>2]|0)+4>>2])|0):0){a=5;break}c[e>>2]=(c[e>>2]|0)+1}if((a|0)==5){c[b>>2]=c[e>>2];g=c[b>>2]|0;i=d;return g|0}else if((a|0)==7){c[b>>2]=-1;g=c[b>>2]|0;i=d;return g|0}return 0}function vm(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;d=i;i=i+16|0;b=d+12|0;g=d+8|0;e=d+4|0;f=d;c[g>>2]=a;c[e>>2]=0;while(1){if((c[e>>2]|0)>=24){a=7;break}c[f>>2]=257992+(c[e>>2]<<3);if((c[g>>2]|0)>=(c[c[f>>2]>>2]|0)?(c[g>>2]|0)<((c[c[f>>2]>>2]|0)+(1<<c[(c[f>>2]|0)+4>>2])|0):0){a=5;break}c[e>>2]=(c[e>>2]|0)+1}if((a|0)==5){c[b>>2]=c[e>>2];g=c[b>>2]|0;i=d;return g|0}else if((a|0)==7){c[b>>2]=-1;g=c[b>>2]|0;i=d;return g|0}return 0}function wm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;g=i;i=i+32|0;j=g+16|0;h=g+12|0;e=g+8|0;d=g+4|0;f=g;c[j>>2]=a;c[h>>2]=b;c[h>>2]=(c[h>>2]|0)==0?4:b;c[e>>2]=um(c[j>>2]|0)|0;c[d>>2]=vm(c[h>>2]|0)|0;c[f>>2]=((c[e>>2]>>3)*3|0)+(c[d>>2]>>3);i=g;return(c[258184+(c[f>>2]<<2)>>2]<<6)+((c[e>>2]&7)<<3)+(c[d>>2]&7)|0}function xm(a){a=a|0;var b=0,d=0,e=0;d=i;i=i+16|0;e=d+4|0;b=d;c[e>>2]=a;c[b>>2]=(c[258224+(c[e>>2]>>6<<2)>>2]<<3)+(c[e>>2]>>3&7);i=d;return c[257804+(c[b>>2]<<3)>>2]|0}function ym(a){a=a|0;var b=0,d=0,e=0;d=i;i=i+16|0;e=d+4|0;b=d;c[e>>2]=a;c[b>>2]=(c[258224+(c[e>>2]>>6<<2)>>2]<<3)+(c[e>>2]>>3&7);i=d;return c[257800+(c[b>>2]<<3)>>2]|0}function zm(a){a=a|0;var b=0,d=0,e=0;d=i;i=i+16|0;e=d+4|0;b=d;c[e>>2]=a;c[b>>2]=(c[258264+(c[e>>2]>>6<<2)>>2]<<3)+(c[e>>2]&7);i=d;return c[257996+(c[b>>2]<<3)>>2]|0}function Am(a){a=a|0;var b=0,d=0,e=0;d=i;i=i+16|0;e=d+4|0;b=d;c[e>>2]=a;c[b>>2]=(c[258264+(c[e>>2]>>6<<2)>>2]<<3)+(c[e>>2]&7);i=d;return c[257992+(c[b>>2]<<3)>>2]|0}function Bm(a,d,e,f,g,h){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;r=i;i=i+48|0;n=r+36|0;s=r+16|0;o=r;m=r+28|0;l=r+32|0;k=r+40|0;t=r+12|0;u=r+24|0;q=r+20|0;j=r+8|0;p=r+4|0;c[n>>2]=a;c[s>>2]=d;c[o>>2]=e;c[m>>2]=f;c[l>>2]=g;c[k>>2]=h;c[n>>2]=(c[n>>2]|0)-1;if((c[n>>2]|0)<(16+(c[s>>2]|0)|0)){b[c[m>>2]>>1]=c[n>>2];c[c[l>>2]>>2]=0;c[c[k>>2]>>2]=0;i=r;return}else{c[n>>2]=(c[n>>2]|0)-(16+(c[s>>2]|0));c[n>>2]=(c[n>>2]|0)+(1<<(c[o>>2]|0)+2);c[t>>2]=(Ed(c[n>>2]|0)|0)-1;c[u>>2]=(1<<c[o>>2])-1;c[q>>2]=c[n>>2]&c[u>>2];c[j>>2]=c[n>>2]>>c[t>>2]&1;c[p>>2]=2+(c[j>>2]|0)<<c[t>>2];c[c[l>>2]>>2]=(c[t>>2]|0)-(c[o>>2]|0);b[c[m>>2]>>1]=16+(c[s>>2]|0)+(((c[c[l>>2]>>2]|0)-1<<1)+(c[j>>2]|0)<<c[o>>2])+(c[q>>2]|0);c[c[k>>2]>>2]=(c[n>>2]|0)-(c[p>>2]|0)>>c[o>>2];i=r;return}}function Cm(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;d=i;i=i+16|0;b=d+12|0;g=d+8|0;e=d+4|0;f=d;c[g>>2]=a;c[e>>2]=0;while(1){if((c[e>>2]|0)>=26){a=7;break}c[f>>2]=258304+(c[e>>2]<<3);if((c[g>>2]|0)>=(c[c[f>>2]>>2]|0)?(c[g>>2]|0)<((c[c[f>>2]>>2]|0)+(1<<c[(c[f>>2]|0)+4>>2])|0):0){a=5;break}c[e>>2]=(c[e>>2]|0)+1}if((a|0)==5){c[b>>2]=c[e>>2];g=c[b>>2]|0;i=d;return g|0}else if((a|0)==7){c[b>>2]=-1;g=c[b>>2]|0;i=d;return g|0}return 0}function Dm(a){a=a|0;var b=0,d=0;d=i;i=i+16|0;b=d;c[b>>2]=a;i=d;return c[258308+(c[b>>2]<<3)>>2]|0}function Em(a){a=a|0;var b=0,d=0;d=i;i=i+16|0;b=d;c[b>>2]=a;i=d;return c[258304+(c[b>>2]<<3)>>2]|0}function Fm(a){a=a|0;var b=0,d=0,e=0,f=0;a=i;e=c[q>>2]|0;bn(259224,e,259280);c[64628]=260876;c[64630]=260896;c[64629]=0;ko(258520|0,259224);c[64648]=0;c[64649]=-1;d=c[r>>2]|0;Wm(259328,d,259288|0);c[64650]=260956;c[64651]=260976;ko(258604|0,259328);c[64669]=0;c[64670]=-1;b=c[p>>2]|0;Wm(259376,b,259296|0);c[64672]=260956;c[64673]=260976;ko(258692|0,259376);c[64691]=0;c[64692]=-1;f=c[(c[(c[64672]|0)+ -12>>2]|0)+258712>>2]|0;c[64694]=260956;c[64695]=260976;ko(258780|0,f);c[64713]=0;c[64714]=-1;c[(c[(c[64628]|0)+ -12>>2]|0)+258584>>2]=258600;f=(c[(c[64672]|0)+ -12>>2]|0)+258692|0;c[f>>2]=c[f>>2]|8192;c[(c[(c[64672]|0)+ -12>>2]|0)+258760>>2]=258600;Om(259424,e,259304|0);c[64716]=260916;c[64718]=260936;c[64717]=0;ko(258872|0,259424);c[64736]=0;c[64737]=-1;Hm(259480,d,259312|0);c[64738]=260996;c[64739]=261016;ko(258956|0,259480);c[64757]=0;c[64758]=-1;Hm(259528,b,259320|0);c[64760]=260996;c[64761]=261016;ko(259044|0,259528);c[64779]=0;c[64780]=-1;b=c[(c[(c[64760]|0)+ -12>>2]|0)+259064>>2]|0;c[64782]=260996;c[64783]=261016;ko(259132|0,b);c[64801]=0;c[64802]=-1;c[(c[(c[64716]|0)+ -12>>2]|0)+258936>>2]=258952;b=(c[(c[64760]|0)+ -12>>2]|0)+259044|0;c[b>>2]=c[b>>2]|8192;c[(c[(c[64760]|0)+ -12>>2]|0)+259112>>2]=258952;i=a;return}function Gm(a){a=a|0;a=i;Vo(258600)|0;Vo(258776)|0;$o(258952)|0;$o(259128)|0;i=a;return}function Hm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;Eo(b);c[b>>2]=259584;c[b+32>>2]=d;Mu(g,b+4|0);d=Pu(g,263576)|0;Nu(g);c[b+36>>2]=d;c[b+40>>2]=e;a[b+44>>0]=(Yb[c[(c[d>>2]|0)+28>>2]&63](d)|0)&1;i=f;return}function Im(a){a=a|0;var b=0;b=i;Do(a);i=b;return}function Jm(a){a=a|0;var b=0;b=i;c[a>>2]=260808;Nu(a+4|0);Ix(a);i=b;return}function Km(b,d){b=b|0;d=d|0;var e=0;e=i;Yb[c[(c[b>>2]|0)+24>>2]&63](b)|0;d=Pu(d,263576)|0;c[b+36>>2]=d;a[b+44>>0]=(Yb[c[(c[d>>2]|0)+28>>2]&63](d)|0)&1;i=e;return}function Lm(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;b=i;i=i+16|0;g=b+8|0;d=b;e=a+36|0;f=a+40|0;h=g+8|0;j=g;a=a+32|0;while(1){k=c[e>>2]|0;k=gc[c[(c[k>>2]|0)+20>>2]&15](k,c[f>>2]|0,g,h,d)|0;l=(c[d>>2]|0)-j|0;if((Hb(g|0,1,l|0,c[a>>2]|0)|0)!=(l|0)){e=-1;d=5;break}if((k|0)==2){e=-1;d=5;break}else if((k|0)!=1){d=4;break}}if((d|0)==4){l=((Ra(c[a>>2]|0)|0)!=0)<<31>>31;i=b;return l|0}else if((d|0)==5){i=b;return e|0}return 0}function Mm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;if((a[b+44>>0]|0)!=0){d=Hb(d|0,4,e|0,c[b+32>>2]|0)|0;i=f;return d|0}if((e|0)>0)g=0;else{d=0;i=f;return d|0}while(1){if((fc[c[(c[b>>2]|0)+52>>2]&15](b,c[d>>2]|0)|0)==-1){e=6;break}g=g+1|0;if((g|0)<(e|0))d=d+4|0;else{e=6;break}}if((e|0)==6){i=f;return g|0}return 0}function Nm(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+32|0;k=e+16|0;p=e+8|0;j=e+4|0;h=e;f=(d|0)==-1;a:do if(!f){c[p>>2]=d;if((a[b+44>>0]|0)!=0){if((Hb(p|0,4,1,c[b+32>>2]|0)|0)==1)break;else d=-1;i=e;return d|0}c[j>>2]=k;l=p+4|0;n=b+36|0;o=b+40|0;g=k+8|0;m=k;b=b+32|0;while(1){q=c[n>>2]|0;q=bc[c[(c[q>>2]|0)+12>>2]&15](q,c[o>>2]|0,p,l,h,k,g,j)|0;if((c[h>>2]|0)==(p|0)){d=-1;g=12;break}if((q|0)==3){g=7;break}r=(q|0)==1;if(!(q>>>0<2)){d=-1;g=12;break}q=(c[j>>2]|0)-m|0;if((Hb(k|0,1,q|0,c[b>>2]|0)|0)!=(q|0)){d=-1;g=12;break}if(r)p=r?c[h>>2]|0:p;else break a}if((g|0)==7){if((Hb(p|0,1,1,c[b>>2]|0)|0)==1)break;else d=-1;i=e;return d|0}else if((g|0)==12){i=e;return d|0}}while(0);r=f?0:d;i=e;return r|0}function Om(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;Eo(b);c[b>>2]=259696;c[b+32>>2]=d;c[b+40>>2]=e;c[b+48>>2]=-1;a[b+52>>0]=0;Mu(g,b+4|0);Rm(b,g);Nu(g);i=f;return}function Pm(a){a=a|0;var b=0;b=i;Do(a);i=b;return}function Qm(a){a=a|0;var b=0;b=i;c[a>>2]=260808;Nu(a+4|0);Ix(a);i=b;return}function Rm(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;g=Pu(d,263576)|0;f=b+36|0;c[f>>2]=g;d=b+44|0;c[d>>2]=Yb[c[(c[g>>2]|0)+24>>2]&63](g)|0;f=c[f>>2]|0;a[b+53>>0]=(Yb[c[(c[f>>2]|0)+28>>2]&63](f)|0)&1;if((c[d>>2]|0)>8)nt(259792);else{i=e;return}}function Sm(a){a=a|0;var b=0;b=i;a=Vm(a,0)|0;i=b;return a|0}function Tm(a){a=a|0;var b=0;b=i;a=Vm(a,1)|0;i=b;return a|0}function Um(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+32|0;j=e+16|0;f=e+8|0;l=e+4|0;k=e;g=b+52|0;m=(a[g>>0]|0)!=0;if((d|0)==-1){if(m){m=-1;i=e;return m|0}m=c[b+48>>2]|0;a[g>>0]=(m|0)!=-1&1;i=e;return m|0}h=b+48|0;a:do if(m){c[l>>2]=c[h>>2];m=c[b+36>>2]|0;k=bc[c[(c[m>>2]|0)+12>>2]&15](m,c[b+40>>2]|0,l,l+4|0,k,j,j+8|0,f)|0;if((k|0)==3){a[j>>0]=c[h>>2];c[f>>2]=j+1}else if((k|0)==1|(k|0)==2){m=-1;i=e;return m|0}b=b+32|0;while(1){k=c[f>>2]|0;if(!(k>>>0>j>>>0))break a;m=k+ -1|0;c[f>>2]=m;if((Ka(a[m>>0]|0,c[b>>2]|0)|0)==-1){f=-1;break}}i=e;return f|0}while(0);c[h>>2]=d;a[g>>0]=1;m=d;i=e;return m|0}function Vm(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+32|0;g=e+16|0;j=e+8|0;m=e+4|0;l=e;n=b+52|0;if((a[n>>0]|0)!=0){f=b+48|0;g=c[f>>2]|0;if(!d){v=g;i=e;return v|0}c[f>>2]=-1;a[n>>0]=0;v=g;i=e;return v|0}s=c[b+44>>2]|0;s=(s|0)>1?s:1;a:do if((s|0)>0){p=b+32|0;n=0;while(1){o=sb(c[p>>2]|0)|0;if((o|0)==-1){h=-1;break}a[g+n>>0]=o;n=n+1|0;if((n|0)>=(s|0))break a}i=e;return h|0}while(0);b:do if((a[b+53>>0]|0)==0){p=b+40|0;q=b+36|0;n=j+4|0;o=b+32|0;while(1){v=c[p>>2]|0;u=v;t=c[u>>2]|0;u=c[u+4>>2]|0;w=c[q>>2]|0;r=g+s|0;v=bc[c[(c[w>>2]|0)+16>>2]&15](w,v,g,r,m,j,n,l)|0;if((v|0)==2){h=-1;f=22;break}else if((v|0)==3){f=14;break}else if((v|0)!=1){k=s;break b}w=c[p>>2]|0;c[w>>2]=t;c[w+4>>2]=u;if((s|0)==8){h=-1;f=22;break}t=sb(c[o>>2]|0)|0;if((t|0)==-1){h=-1;f=22;break}a[r>>0]=t;s=s+1|0}if((f|0)==14){c[j>>2]=a[g>>0];k=s;break}else if((f|0)==22){i=e;return h|0}}else{c[j>>2]=a[g>>0];k=s}while(0);if(d){w=c[j>>2]|0;c[b+48>>2]=w;i=e;return w|0}d=b+32|0;while(1){if((k|0)<=0)break;k=k+ -1|0;if((Ka(a[g+k>>0]|0,c[d>>2]|0)|0)==-1){h=-1;f=22;break}}if((f|0)==22){i=e;return h|0}w=c[j>>2]|0;i=e;return w|0}function Wm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;oo(b);c[b>>2]=259840;c[b+32>>2]=d;Mu(g,b+4|0);d=Pu(g,263568)|0;Nu(g);c[b+36>>2]=d;c[b+40>>2]=e;a[b+44>>0]=(Yb[c[(c[d>>2]|0)+28>>2]&63](d)|0)&1;i=f;return}function Xm(a){a=a|0;var b=0;b=i;no(a);i=b;return}function Ym(a){a=a|0;var b=0;b=i;c[a>>2]=260744;Nu(a+4|0);Ix(a);i=b;return}function Zm(b,d){b=b|0;d=d|0;var e=0;e=i;Yb[c[(c[b>>2]|0)+24>>2]&63](b)|0;d=Pu(d,263568)|0;c[b+36>>2]=d;a[b+44>>0]=(Yb[c[(c[d>>2]|0)+28>>2]&63](d)|0)&1;i=e;return}function _m(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;b=i;i=i+16|0;g=b+8|0;d=b;e=a+36|0;f=a+40|0;h=g+8|0;j=g;a=a+32|0;while(1){k=c[e>>2]|0;k=gc[c[(c[k>>2]|0)+20>>2]&15](k,c[f>>2]|0,g,h,d)|0;l=(c[d>>2]|0)-j|0;if((Hb(g|0,1,l|0,c[a>>2]|0)|0)!=(l|0)){e=-1;d=5;break}if((k|0)==2){e=-1;d=5;break}else if((k|0)!=1){d=4;break}}if((d|0)==4){l=((Ra(c[a>>2]|0)|0)!=0)<<31>>31;i=b;return l|0}else if((d|0)==5){i=b;return e|0}return 0}function $m(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0;g=i;if((a[b+44>>0]|0)!=0){e=Hb(e|0,1,f|0,c[b+32>>2]|0)|0;i=g;return e|0}if((f|0)>0)h=0;else{e=0;i=g;return e|0}while(1){if((fc[c[(c[b>>2]|0)+52>>2]&15](b,d[e>>0]|0)|0)==-1){f=6;break}h=h+1|0;if((h|0)<(f|0))e=e+1|0;else{f=6;break}}if((f|0)==6){i=g;return h|0}return 0}function an(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+32|0;k=e+16|0;p=e+8|0;j=e+4|0;h=e;f=(d|0)==-1;a:do if(!f){a[p>>0]=d;if((a[b+44>>0]|0)!=0){if((Hb(p|0,1,1,c[b+32>>2]|0)|0)==1)break;else d=-1;i=e;return d|0}c[j>>2]=k;l=p+1|0;n=b+36|0;o=b+40|0;g=k+8|0;m=k;b=b+32|0;while(1){q=c[n>>2]|0;q=bc[c[(c[q>>2]|0)+12>>2]&15](q,c[o>>2]|0,p,l,h,k,g,j)|0;if((c[h>>2]|0)==(p|0)){d=-1;g=12;break}if((q|0)==3){g=7;break}r=(q|0)==1;if(!(q>>>0<2)){d=-1;g=12;break}q=(c[j>>2]|0)-m|0;if((Hb(k|0,1,q|0,c[b>>2]|0)|0)!=(q|0)){d=-1;g=12;break}if(r)p=r?c[h>>2]|0:p;else break a}if((g|0)==7){if((Hb(p|0,1,1,c[b>>2]|0)|0)==1)break;else d=-1;i=e;return d|0}else if((g|0)==12){i=e;return d|0}}while(0);r=f?0:d;i=e;return r|0}function bn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;oo(b);c[b>>2]=259952;c[b+32>>2]=d;c[b+40>>2]=e;c[b+48>>2]=-1;a[b+52>>0]=0;Mu(g,b+4|0);en(b,g);Nu(g);i=f;return}function cn(a){a=a|0;var b=0;b=i;no(a);i=b;return}function dn(a){a=a|0;var b=0;b=i;c[a>>2]=260744;Nu(a+4|0);Ix(a);i=b;return}function en(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;g=Pu(d,263568)|0;f=b+36|0;c[f>>2]=g;d=b+44|0;c[d>>2]=Yb[c[(c[g>>2]|0)+24>>2]&63](g)|0;f=c[f>>2]|0;a[b+53>>0]=(Yb[c[(c[f>>2]|0)+28>>2]&63](f)|0)&1;if((c[d>>2]|0)>8)nt(259792);else{i=e;return}}function fn(a){a=a|0;var b=0;b=i;a=jn(a,0)|0;i=b;return a|0}function gn(a){a=a|0;var b=0;b=i;a=jn(a,1)|0;i=b;return a|0}function hn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+32|0;j=e+16|0;f=e+4|0;l=e+8|0;k=e;g=b+52|0;m=(a[g>>0]|0)!=0;if((d|0)==-1){if(m){m=-1;i=e;return m|0}m=c[b+48>>2]|0;a[g>>0]=(m|0)!=-1&1;i=e;return m|0}h=b+48|0;a:do if(m){a[l>>0]=c[h>>2];m=c[b+36>>2]|0;k=bc[c[(c[m>>2]|0)+12>>2]&15](m,c[b+40>>2]|0,l,l+1|0,k,j,j+8|0,f)|0;if((k|0)==3){a[j>>0]=c[h>>2];c[f>>2]=j+1}else if((k|0)==1|(k|0)==2){m=-1;i=e;return m|0}b=b+32|0;while(1){k=c[f>>2]|0;if(!(k>>>0>j>>>0))break a;m=k+ -1|0;c[f>>2]=m;if((Ka(a[m>>0]|0,c[b>>2]|0)|0)==-1){f=-1;break}}i=e;return f|0}while(0);c[h>>2]=d;a[g>>0]=1;m=d;i=e;return m|0}function jn(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;f=i;i=i+32|0;h=f+16|0;j=f+8|0;n=f+4|0;m=f;o=b+52|0;if((a[o>>0]|0)!=0){g=b+48|0;h=c[g>>2]|0;if(!e){w=h;i=f;return w|0}c[g>>2]=-1;a[o>>0]=0;w=h;i=f;return w|0}p=c[b+44>>2]|0;p=(p|0)>1?p:1;a:do if((p|0)>0){r=b+32|0;o=0;while(1){q=sb(c[r>>2]|0)|0;if((q|0)==-1){k=-1;break}a[h+o>>0]=q;o=o+1|0;if((o|0)>=(p|0))break a}i=f;return k|0}while(0);b:do if((a[b+53>>0]|0)==0){r=b+40|0;s=b+36|0;o=j+1|0;q=b+32|0;while(1){w=c[r>>2]|0;v=w;u=c[v>>2]|0;v=c[v+4>>2]|0;x=c[s>>2]|0;t=h+p|0;w=bc[c[(c[x>>2]|0)+16>>2]&15](x,w,h,t,n,j,o,m)|0;if((w|0)==2){k=-1;m=23;break}else if((w|0)==3){m=14;break}else if((w|0)!=1){l=p;break b}x=c[r>>2]|0;c[x>>2]=u;c[x+4>>2]=v;if((p|0)==8){k=-1;m=23;break}u=sb(c[q>>2]|0)|0;if((u|0)==-1){k=-1;m=23;break}a[t>>0]=u;p=p+1|0}if((m|0)==14){a[j>>0]=a[h>>0]|0;l=p;break}else if((m|0)==23){i=f;return k|0}}else{a[j>>0]=a[h>>0]|0;l=p}while(0);do if(!e){e=b+32|0;while(1){if((l|0)<=0){m=21;break}l=l+ -1|0;if((Ka(d[h+l>>0]|0,c[e>>2]|0)|0)==-1){k=-1;m=23;break}}if((m|0)==21){g=a[j>>0]|0;break}else if((m|0)==23){i=f;return k|0}}else{g=a[j>>0]|0;c[b+48>>2]=g&255}while(0);x=g&255;i=f;return x|0}function kn(){var a=0;a=i;Fm(0);Lb(112,259216,o|0)|0;i=a;return}function ln(a){a=a|0;return}function mn(a){a=a|0;a=a+4|0;c[a>>2]=(c[a>>2]|0)+1;return}function nn(a){a=a|0;var b=0,d=0,e=0;b=i;e=a+4|0;d=c[e>>2]|0;c[e>>2]=d+ -1;if((d|0)!=0){e=0;i=b;return e|0}Vb[c[(c[a>>2]|0)+8>>2]&127](a);e=1;i=b;return e|0}function on(a,b){a=a|0;b=b|0;var d=0;d=i;c[a>>2]=271960;rn(a+4|0,b);i=d;return}function pn(b,d){b=b|0;d=d|0;var e=0;e=i;c[b>>2]=271984;if((a[d>>0]&1)==0)d=d+1|0;else d=c[d+8>>2]|0;rn(b+4|0,d);i=e;return}function qn(a,b){a=a|0;b=b|0;var d=0;d=i;c[a>>2]=271984;rn(a+4|0,b);i=d;return}function rn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=mz(b|0)|0;g=Hx(e+13|0)|0;c[g+4>>2]=e;c[g>>2]=e;f=g+12|0;c[a>>2]=f;c[g+8>>2]=0;qz(f|0,b|0,e+1|0)|0;i=d;return}function sn(a){a=a|0;return}function tn(a,b,d){a=a|0;b=b|0;d=d|0;c[a>>2]=d;c[a+4>>2]=b;return}function un(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;f=e;_b[c[(c[a>>2]|0)+12>>2]&3](f,a,b);if((c[f+4>>2]|0)!=(c[d+4>>2]|0)){a=0;i=e;return a|0}a=(c[f>>2]|0)==(c[d>>2]|0);i=e;return a|0}function vn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=i;if((c[b+4>>2]|0)!=(a|0)){a=0;i=e;return a|0}a=(c[b>>2]|0)==(d|0);i=e;return a|0}function wn(a,b,c){a=a|0;b=b|0;c=c|0;b=i;c=Kb(c|0)|0;Hn(a,c,mz(c|0)|0);i=b;return}function xn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;g=i;i=i+16|0;f=g;h=c[d>>2]|0;if((h|0)==0){c[b+0>>2]=c[e+0>>2];c[b+4>>2]=c[e+4>>2];c[b+8>>2]=c[e+8>>2];c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;i=g;return}j=a[e>>0]|0;if((j&1)==0)j=(j&255)>>>1;else j=c[e+4>>2]|0;if((j|0)!=0){Rn(e,260088)|0;h=c[d>>2]|0}d=c[d+4>>2]|0;_b[c[(c[d>>2]|0)+24>>2]&3](f,d,h);d=a[f>>0]|0;if((d&1)==0){d=(d&255)>>>1;h=f+1|0}else{d=c[f+4>>2]|0;h=c[f+8>>2]|0}Tn(e,h,d)|0;Ln(f);c[b+0>>2]=c[e+0>>2];c[b+4>>2]=c[e+4>>2];c[b+8>>2]=c[e+8>>2];c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;i=g;return}function yn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+32|0;g=e+12|0;f=e;Hn(f,d,mz(d|0)|0);xn(g,b,f);pn(a,g);Ln(g);Ln(f);c[a>>2]=260104;f=b;b=c[f+4>>2]|0;d=a+8|0;c[d>>2]=c[f>>2];c[d+4>>2]=b;i=e;return}function zn(a){a=a|0;var b=0;b=i;Wx(a);Ix(a);i=b;return}function An(a){a=a|0;var b=0;b=i;Wx(a);i=b;return}function Bn(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+16|0;g=e+8|0;d=e+4|0;f=e;c[d>>2]=a;if(a>>>0<212){k=c[(Cn(260240,260432|0,d,g)|0)>>2]|0;i=e;return k|0}if(a>>>0>4294967291){k=Na(8)|0;qn(k,260624);c[k>>2]=272144;Bb(k|0,272184,100)}j=(a>>>0)/210|0;k=j*210|0;c[f>>2]=a-k;a=(Cn(260432,260624|0,f,g)|0)-260432>>2;f=a;g=j;a=(c[260432+(a<<2)>>2]|0)+k|0;a:while(1){h=5;while(1){k=c[260240+(h<<2)>>2]|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=109;break a}h=h+1|0;if((a|0)==(da(j,k)|0))break;if(!(h>>>0<47)){b=10;break}}b:do if((b|0)==10){b=0;if(a>>>0<44521){b=112;break a}j=(a>>>0)/211|0;h=211;while(1){if((a|0)==(da(j,h)|0))break b;k=h+10|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+12|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+16|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+18|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+22|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+28|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+30|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+36|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+40|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+42|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+46|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+52|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+58|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+60|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+66|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+70|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+72|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+78|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+82|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+88|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;j=h+96|0;k=(a>>>0)/(j>>>0)|0;if(k>>>0<j>>>0){b=110;break a}if((a|0)==(da(k,j)|0))break b;k=h+100|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+102|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+106|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+108|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+112|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+120|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+126|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+130|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+136|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+138|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+142|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+148|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+150|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+156|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+162|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+166|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+168|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+172|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+178|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+180|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+186|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+190|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+192|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;j=h+196|0;k=(a>>>0)/(j>>>0)|0;if(k>>>0<j>>>0){b=110;break a}if((a|0)==(da(k,j)|0))break b;j=h+198|0;k=(a>>>0)/(j>>>0)|0;if(k>>>0<j>>>0){b=110;break a}if((a|0)==(da(k,j)|0))break b;j=h+208|0;k=(a>>>0)/(j>>>0)|0;if(k>>>0<j>>>0){b=110;break a}h=h+210|0;if((a|0)==(da(k,j)|0))break b;j=(a>>>0)/(h>>>0)|0;if(j>>>0<h>>>0){b=111;break a}}}while(0);k=f+1|0;a=(k|0)==48;k=a?0:k;a=(a&1)+g|0;f=k;g=a;a=(c[260432+(k<<2)>>2]|0)+(a*210|0)|0}if((b|0)==109){c[d>>2]=a;k=a;i=e;return k|0}else if((b|0)==110){c[d>>2]=a;k=a;i=e;return k|0}else if((b|0)==111){c[d>>2]=a;k=a;i=e;return k|0}else if((b|0)==112){c[d>>2]=a;k=a;i=e;return k|0}return 0}function Cn(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;e=i;f=a;a=b-a>>2;a:while(1){while(1){if((a|0)==0)break a;b=(a|0)/2|0;if((c[f+(b<<2)>>2]|0)>>>0<(c[d>>2]|0)>>>0)break;else a=b}f=f+(b+1<<2)|0;a=a+ -1-b|0}i=e;return f|0}function Dn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=i;Jb(260648)|0;if((c[a>>2]|0)==1)do Ba(260672,260648)|0;while((c[a>>2]|0)==1);if((c[a>>2]|0)==0){c[a>>2]=1;mb(260648)|0;Vb[d&127](b);Jb(260648)|0;c[a>>2]=-1;mb(260648)|0;Db(260672)|0;i=e;return}else{mb(260648)|0;i=e;return}}function En(a){a=a|0;a=Na(8)|0;on(a,260720);c[a>>2]=272040;Bb(a|0,272080,98)}function Fn(a,b){a=a|0;b=b|0;var c=0;c=i;Gn(a,b);i=c;return}function Gn(b,d){b=b|0;d=d|0;var e=0;e=i;if((a[d>>0]&1)==0){c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];c[b+8>>2]=c[d+8>>2];i=e;return}else{Hn(b,c[d+8>>2]|0,c[d+4>>2]|0);i=e;return}}function Hn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;if(e>>>0>4294967279)En(0);if(e>>>0<11){a[b>>0]=e<<1;b=b+1|0;qz(b|0,d|0,e|0)|0;d=b+e|0;a[d>>0]=0;i=f;return}else{h=e+16&-16;g=Gx(h)|0;c[b+8>>2]=g;c[b>>2]=h|1;c[b+4>>2]=e;b=g;qz(b|0,d|0,e|0)|0;d=b+e|0;a[d>>0]=0;i=f;return}}function In(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;if(d>>>0>4294967279)En(0);if(d>>>0<11){a[b>>0]=d<<1;b=b+1|0;lz(b|0,e|0,d|0)|0;e=b+d|0;a[e>>0]=0;i=f;return}else{h=d+16&-16;g=Gx(h)|0;c[b+8>>2]=g;c[b>>2]=h|1;c[b+4>>2]=d;b=g;lz(b|0,e|0,d|0)|0;e=b+d|0;a[e>>0]=0;i=f;return}}function Jn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;h=d;g=e-h|0;if(g>>>0>4294967279)En(0);if(g>>>0<11){a[b>>0]=g<<1;g=b+1|0}else{k=g+16&-16;j=Gx(k)|0;c[b+8>>2]=j;c[b>>2]=k|1;c[b+4>>2]=g;g=j}if((d|0)==(e|0)){k=g;a[k>>0]=0;i=f;return}h=e+(0-h)|0;b=g;while(1){a[b>>0]=a[d>>0]|0;d=d+1|0;if((d|0)==(e|0))break;else b=b+1|0}k=g+h|0;a[k>>0]=0;i=f;return}function Kn(a){a=a|0;var b=0;b=i;Ln(a);i=b;return}function Ln(b){b=b|0;var d=0;d=i;if((a[b>>0]&1)==0){i=d;return}Ix(c[b+8>>2]|0);i=d;return}function Mn(a,b){a=a|0;b=b|0;var c=0;c=i;a=Nn(a,b,mz(b|0)|0)|0;i=c;return a|0}function Nn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;h=a[b>>0]|0;if((h&1)==0)g=10;else{g=c[b>>2]|0;h=g&255;g=(g&-2)+ -1|0}j=(h&1)==0;if(g>>>0<e>>>0){if(j)h=(h&255)>>>1;else h=c[b+4>>2]|0;Un(b,g,e-g|0,h,0,h,e,d);i=f;return b|0}if(j)g=b+1|0;else g=c[b+8>>2]|0;sz(g|0,d|0,e|0)|0;a[g+e>>0]=0;if((a[b>>0]&1)==0){a[b>>0]=e<<1;i=f;return b|0}else{c[b+4>>2]=e;i=f;return b|0}return 0}function On(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;h=a[b>>0]|0;g=(h&1)==0;if(g)h=(h&255)>>>1;else h=c[b+4>>2]|0;if(h>>>0<d>>>0){Pn(b,d-h|0,e)|0;i=f;return}if(g){a[b+d+1>>0]=0;a[b>>0]=d<<1;i=f;return}else{a[(c[b+8>>2]|0)+d>>0]=0;c[b+4>>2]=d;i=f;return}}function Pn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;if((d|0)==0){i=f;return b|0}j=a[b>>0]|0;if((j&1)==0)h=10;else{h=c[b>>2]|0;j=h&255;h=(h&-2)+ -1|0}if((j&1)==0)g=(j&255)>>>1;else g=c[b+4>>2]|0;if((h-g|0)>>>0<d>>>0){Vn(b,h,d-h+g|0,g,g,0,0);j=a[b>>0]|0}if((j&1)==0)h=b+1|0;else h=c[b+8>>2]|0;lz(h+g|0,e|0,d|0)|0;e=g+d|0;if((a[b>>0]&1)==0)a[b>>0]=e<<1;else c[b+4>>2]=e;a[h+e>>0]=0;i=f;return b|0}function Qn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;if(d>>>0>4294967279)En(0);g=a[b>>0]|0;if((g&1)==0)h=10;else{h=c[b>>2]|0;g=h&255;h=(h&-2)+ -1|0}if((g&1)==0)f=(g&255)>>>1;else f=c[b+4>>2]|0;d=f>>>0>d>>>0?f:d;if(d>>>0<11)d=10;else d=(d+16&-16)+ -1|0;if((d|0)==(h|0)){i=e;return}do if((d|0)!=10){j=d+1|0;if(d>>>0>h>>>0)k=Gx(j)|0;else k=Gx(j)|0;if((g&1)==0){l=1;j=b+1|0;h=0;break}else{l=1;j=c[b+8>>2]|0;h=1;break}}else{k=b+1|0;l=0;j=c[b+8>>2]|0;h=1}while(0);if((g&1)==0)g=(g&255)>>>1;else g=c[b+4>>2]|0;qz(k|0,j|0,g+1|0)|0;if(h)Ix(j);if(l){c[b>>2]=d+1|1;c[b+4>>2]=f;c[b+8>>2]=k;i=e;return}else{a[b>>0]=f<<1;i=e;return}}function Rn(a,b){a=a|0;b=b|0;var c=0;c=i;a=Tn(a,b,mz(b|0)|0)|0;i=c;return a|0}function Sn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;g=a[b>>0]|0;f=(g&1)!=0;if(f){h=(c[b>>2]&-2)+ -1|0;g=c[b+4>>2]|0}else{h=10;g=(g&255)>>>1}if((g|0)==(h|0)){Vn(b,h,1,h,h,0,0);if((a[b>>0]&1)==0)f=7;else f=8}else if(f)f=8;else f=7;if((f|0)==7){a[b>>0]=(g<<1)+2;h=g+1|0;f=b+1|0;g=f+g|0;a[g>>0]=d;h=f+h|0;a[h>>0]=0;i=e;return}else if((f|0)==8){f=c[b+8>>2]|0;h=g+1|0;c[b+4>>2]=h;g=f+g|0;a[g>>0]=d;h=f+h|0;a[h>>0]=0;i=e;return}}function Tn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;j=a[b>>0]|0;if((j&1)==0)h=10;else{h=c[b>>2]|0;j=h&255;h=(h&-2)+ -1|0}if((j&1)==0)g=(j&255)>>>1;else g=c[b+4>>2]|0;if((h-g|0)>>>0<e>>>0){Un(b,h,e-h+g|0,g,g,0,e,d);i=f;return b|0}if((e|0)==0){i=f;return b|0}if((j&1)==0)h=b+1|0;else h=c[b+8>>2]|0;qz(h+g|0,d|0,e|0)|0;e=g+e|0;if((a[b>>0]&1)==0)a[b>>0]=e<<1;else c[b+4>>2]=e;a[h+e>>0]=0;i=f;return b|0}function Un(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0;l=i;if((-18-d|0)>>>0<e>>>0)En(0);if((a[b>>0]&1)==0)m=b+1|0;else m=c[b+8>>2]|0;if(d>>>0<2147483623){e=e+d|0;n=d<<1;e=e>>>0<n>>>0?n:e;if(e>>>0<11)e=11;else e=e+16&-16}else e=-17;n=Gx(e)|0;if((g|0)!=0)qz(n|0,m|0,g|0)|0;if((j|0)!=0)qz(n+g|0,k|0,j|0)|0;k=f-h|0;if((k|0)!=(g|0))qz(n+(j+g)|0,m+(h+g)|0,k-g|0)|0;if((d|0)==10){f=b+8|0;c[f>>2]=n;e=e|1;c[b>>2]=e;e=k+j|0;f=b+4|0;c[f>>2]=e;n=n+e|0;a[n>>0]=0;i=l;return}Ix(m);f=b+8|0;c[f>>2]=n;e=e|1;c[b>>2]=e;e=k+j|0;f=b+4|0;c[f>>2]=e;n=n+e|0;a[n>>0]=0;i=l;return}function Vn(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0;k=i;if((-17-d|0)>>>0<e>>>0)En(0);if((a[b>>0]&1)==0)l=b+1|0;else l=c[b+8>>2]|0;if(d>>>0<2147483623){e=e+d|0;m=d<<1;e=e>>>0<m>>>0?m:e;if(e>>>0<11)m=11;else m=e+16&-16}else m=-17;e=Gx(m)|0;if((g|0)!=0)qz(e|0,l|0,g|0)|0;f=f-h|0;if((f|0)!=(g|0))qz(e+(j+g)|0,l+(h+g)|0,f-g|0)|0;if((d|0)==10){f=b+8|0;c[f>>2]=e;m=m|1;c[b>>2]=m;i=k;return}Ix(l);f=b+8|0;c[f>>2]=e;m=m|1;c[b>>2]=m;i=k;return}function Wn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;if(e>>>0>1073741807)En(0);if(e>>>0<2){a[b>>0]=e<<1;b=b+4|0;yx(b,d,e)|0;d=b+(e<<2)|0;c[d>>2]=0;i=f;return}else{h=e+4&-4;g=Gx(h<<2)|0;c[b+8>>2]=g;c[b>>2]=h|1;c[b+4>>2]=e;b=g;yx(b,d,e)|0;d=b+(e<<2)|0;c[d>>2]=0;i=f;return}}function Xn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;if(d>>>0>1073741807)En(0);if(d>>>0<2){a[b>>0]=d<<1;b=b+4|0;Ax(b,e,d)|0;e=b+(d<<2)|0;c[e>>2]=0;i=f;return}else{h=d+4&-4;g=Gx(h<<2)|0;c[b+8>>2]=g;c[b>>2]=h|1;c[b+4>>2]=d;b=g;Ax(b,e,d)|0;e=b+(d<<2)|0;c[e>>2]=0;i=f;return}}function Yn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;g=d;h=e-g|0;j=h>>2;if(j>>>0>1073741807)En(0);if(j>>>0<2){a[b>>0]=h>>>1;h=b+4|0}else{k=j+4&-4;h=Gx(k<<2)|0;c[b+8>>2]=h;c[b>>2]=k|1;c[b+4>>2]=j}if((d|0)==(e|0)){k=h;c[k>>2]=0;i=f;return}g=((e+ -4+(0-g)|0)>>>2)+1|0;j=h;while(1){c[j>>2]=c[d>>2];d=d+4|0;if((d|0)==(e|0))break;else j=j+4|0}k=h+(g<<2)|0;c[k>>2]=0;i=f;return}function Zn(a){a=a|0;var b=0;b=i;_n(a);i=b;return}function _n(b){b=b|0;var d=0;d=i;if((a[b>>0]&1)==0){i=d;return}Ix(c[b+8>>2]|0);i=d;return}function $n(a,b){a=a|0;b=b|0;var c=0;c=i;a=ao(a,b,xx(b)|0)|0;i=c;return a|0}function ao(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;h=a[b>>0]|0;if((h&1)==0)g=1;else{g=c[b>>2]|0;h=g&255;g=(g&-2)+ -1|0}j=(h&1)==0;if(g>>>0<e>>>0){if(j)h=(h&255)>>>1;else h=c[b+4>>2]|0;eo(b,g,e-g|0,h,0,h,e,d);i=f;return b|0}if(j)g=b+4|0;else g=c[b+8>>2]|0;zx(g,d,e)|0;c[g+(e<<2)>>2]=0;if((a[b>>0]&1)==0){a[b>>0]=e<<1;i=f;return b|0}else{c[b+4>>2]=e;i=f;return b|0}return 0}function bo(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;if(d>>>0>1073741807)En(0);g=a[b>>0]|0;if((g&1)==0)h=1;else{h=c[b>>2]|0;g=h&255;h=(h&-2)+ -1|0}if((g&1)==0)f=(g&255)>>>1;else f=c[b+4>>2]|0;d=f>>>0>d>>>0?f:d;if(d>>>0<2)d=1;else d=(d+4&-4)+ -1|0;if((d|0)==(h|0)){i=e;return}do if((d|0)!=1){j=(d<<2)+4|0;if(d>>>0>h>>>0)k=Gx(j)|0;else k=Gx(j)|0;if((g&1)==0){l=1;j=b+4|0;h=0;break}else{l=1;j=c[b+8>>2]|0;h=1;break}}else{k=b+4|0;l=0;j=c[b+8>>2]|0;h=1}while(0);if((g&1)==0)g=(g&255)>>>1;else g=c[b+4>>2]|0;yx(k,j,g+1|0)|0;if(h)Ix(j);if(l){c[b>>2]=d+1|1;c[b+4>>2]=f;c[b+8>>2]=k;i=e;return}else{a[b>>0]=f<<1;i=e;return}}function co(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;g=a[b>>0]|0;f=(g&1)!=0;if(f){h=(c[b>>2]&-2)+ -1|0;g=c[b+4>>2]|0}else{h=1;g=(g&255)>>>1}if((g|0)==(h|0)){fo(b,h,1,h,h,0,0);if((a[b>>0]&1)==0)f=7;else f=8}else if(f)f=8;else f=7;if((f|0)==7){a[b>>0]=(g<<1)+2;h=g+1|0;f=b+4|0;g=f+(g<<2)|0;c[g>>2]=d;h=f+(h<<2)|0;c[h>>2]=0;i=e;return}else if((f|0)==8){f=c[b+8>>2]|0;h=g+1|0;c[b+4>>2]=h;g=f+(g<<2)|0;c[g>>2]=d;h=f+(h<<2)|0;c[h>>2]=0;i=e;return}}function eo(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0;l=i;if((1073741806-d|0)>>>0<e>>>0)En(0);if((a[b>>0]&1)==0)m=b+4|0;else m=c[b+8>>2]|0;if(d>>>0<536870887){e=e+d|0;n=d<<1;e=e>>>0<n>>>0?n:e;if(e>>>0<2)e=2;else e=e+4&-4}else e=1073741807;n=Gx(e<<2)|0;if((g|0)!=0)yx(n,m,g)|0;if((j|0)!=0)yx(n+(g<<2)|0,k,j)|0;k=f-h|0;if((k|0)!=(g|0))yx(n+(j+g<<2)|0,m+(h+g<<2)|0,k-g|0)|0;if((d|0)==1){f=b+8|0;c[f>>2]=n;e=e|1;c[b>>2]=e;e=k+j|0;f=b+4|0;c[f>>2]=e;n=n+(e<<2)|0;c[n>>2]=0;i=l;return}Ix(m);f=b+8|0;c[f>>2]=n;e=e|1;c[b>>2]=e;e=k+j|0;f=b+4|0;c[f>>2]=e;n=n+(e<<2)|0;c[n>>2]=0;i=l;return}function fo(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0;k=i;if((1073741807-d|0)>>>0<e>>>0)En(0);if((a[b>>0]&1)==0)l=b+4|0;else l=c[b+8>>2]|0;if(d>>>0<536870887){e=e+d|0;m=d<<1;e=e>>>0<m>>>0?m:e;if(e>>>0<2)m=2;else m=e+4&-4}else m=1073741807;e=Gx(m<<2)|0;if((g|0)!=0)yx(e,l,g)|0;f=f-h|0;if((f|0)!=(g|0))yx(e+(j+g<<2)|0,l+(h+g<<2)|0,f-g|0)|0;if((d|0)==1){f=b+8|0;c[f>>2]=e;m=m|1;c[b>>2]=m;i=k;return}Ix(l);f=b+8|0;c[f>>2]=e;m=m|1;c[b>>2]=m;i=k;return}function go(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d;f=(c[a+24>>2]|0)==0;if(f)c[a+16>>2]=b|1;else c[a+16>>2]=b;if(((f&1|b)&c[a+20>>2]|0)==0){i=d;return}else{a=Na(16)|0;op()|0;f=e;c[f>>2]=1;c[f+4>>2]=261080;qp(a,261136,e);Bb(a|0,261184,31)}}function ho(a){a=a|0;var b=0;b=i;c[a>>2]=261128;io(a,0);Nu(a+28|0);Ey(c[a+32>>2]|0);Ey(c[a+36>>2]|0);Ey(c[a+48>>2]|0);Ey(c[a+60>>2]|0);i=b;return}



function wi(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0;wa=i;i=i+496|0;R=wa+224|0;S=wa+216|0;H=wa+212|0;I=wa+24|0;T=wa+420|0;t=wa+448|0;v=wa+456|0;w=wa+464|0;p=wa+208|0;s=wa+28|0;r=wa+32|0;q=wa+36|0;O=wa+40|0;N=wa+44|0;M=wa+48|0;L=wa+412|0;u=wa+112|0;$a=wa+56|0;ab=wa+60|0;bb=wa+64|0;Za=wa+68|0;_a=wa+72|0;Ya=wa;Va=wa+80|0;Wa=wa+84|0;Xa=wa+480|0;A=wa+92|0;B=wa+96|0;C=wa+100|0;D=wa+104|0;z=wa+108|0;y=wa+408|0;x=wa+236|0;o=wa+116|0;n=wa+120|0;m=wa+124|0;k=wa+128|0;l=wa+132|0;U=wa+136|0;V=wa+140|0;W=wa+144|0;qb=wa+148|0;rb=wa+152|0;sb=wa+156|0;ob=wa+160|0;pb=wa+76|0;nb=wa+8|0;kb=wa+172|0;lb=wa+176|0;mb=wa+481|0;tb=wa+184|0;ub=wa+188|0;Da=wa+192|0;Ea=wa+196|0;Fa=wa+436|0;Ga=wa+444|0;Ca=wa+452|0;Ba=wa+460|0;Aa=wa+468|0;aa=wa+472|0;$=wa+476|0;_=wa+228|0;Y=wa+232|0;Z=wa+404|0;eb=wa+348|0;Qa=wa+240|0;Ra=wa+244|0;Sa=wa+248|0;Ta=wa+252|0;Pa=wa+256|0;Oa=wa+260|0;Na=wa+264|0;Ma=wa+268|0;La=wa+272|0;Ka=wa+276|0;Ia=wa+280|0;Ja=wa+284|0;gb=wa+288|0;hb=wa+292|0;ja=wa+296|0;ka=wa+300|0;la=wa+304|0;ma=wa+308|0;ia=wa+312|0;ha=wa+316|0;ga=wa+320|0;fa=wa+324|0;g=wa+328|0;da=wa+332|0;ba=wa+336|0;ca=wa+340|0;ib=wa+164|0;h=wa+344|0;xa=wa+168|0;ya=wa+352|0;za=wa+356|0;va=wa+360|0;ua=wa+364|0;ta=wa+368|0;sa=wa+372|0;ra=wa+376|0;qa=wa+380|0;oa=wa+384|0;pa=wa+388|0;jb=wa+392|0;G=wa+396|0;J=wa+400|0;E=wa+52|0;ea=wa+416|0;cb=wa+428|0;db=wa+200|0;fb=wa+432|0;Ua=wa+20|0;F=wa+424|0;K=wa+204|0;j=wa+440|0;P=wa+16|0;Q=wa+12|0;X=wa+220|0;Ha=wa+180|0;na=wa+88|0;c[G>>2]=b;c[J>>2]=d;c[E>>2]=e;c[ea>>2]=f;c[cb>>2]=0;c[db>>2]=0;while(1){d=c[db>>2]|0;c[jb>>2]=c[G>>2];b=c[jb>>2]|0;if(!(d>>>0<(((c[b+4>>2]|0)-(c[b>>2]|0)|0)/4|0)>>>0))break;while(1){d=c[db>>2]|0;c[ib>>2]=c[G>>2];b=c[ib>>2]|0;if(!(d>>>0<(((c[b+4>>2]|0)-(c[b>>2]|0)|0)/4|0)>>>0))break;b=c[db>>2]|0;c[gb>>2]=c[G>>2];c[hb>>2]=b;if((c[(c[c[gb>>2]>>2]|0)+(c[hb>>2]<<2)>>2]|0)==0)break;c[db>>2]=(c[db>>2]|0)+1}c[fb>>2]=0;while(1){d=c[db>>2]|0;c[eb>>2]=c[G>>2];b=c[eb>>2]|0;if(!(d>>>0<(((c[b+4>>2]|0)-(c[b>>2]|0)|0)/4|0)>>>0))break;b=c[db>>2]|0;c[tb>>2]=c[G>>2];c[ub>>2]=b;if((c[(c[c[tb>>2]>>2]|0)+(c[ub>>2]<<2)>>2]|0)!=0)break;c[fb>>2]=(c[fb>>2]|0)+1;c[db>>2]=(c[db>>2]|0)+1}c[kb>>2]=fb;c[lb>>2]=cb;b=c[kb>>2]|0;d=c[lb>>2]|0;a[nb+0>>0]=a[mb+0>>0]|0;c[ob>>2]=b;c[pb>>2]=d;d=c[ob>>2]|0;b=c[pb>>2]|0;c[qb>>2]=nb;c[rb>>2]=d;c[sb>>2]=b;c[cb>>2]=c[((c[c[rb>>2]>>2]|0)<(c[c[sb>>2]>>2]|0)?c[pb>>2]|0:c[ob>>2]|0)>>2]}if((c[cb>>2]|0)>0)f=Ed(c[cb>>2]|0)|0;else f=0;c[Ua>>2]=f;b=c[J>>2]|0;c[Va>>2]=Ua;c[Wa>>2]=b;b=c[Va>>2]|0;d=c[Wa>>2]|0;a[Ya+0>>0]=a[Xa+0>>0]|0;c[Za>>2]=b;c[_a>>2]=d;d=c[_a>>2]|0;b=c[Za>>2]|0;c[$a>>2]=Ya;c[ab>>2]=d;c[bb>>2]=b;c[c[J>>2]>>2]=c[((c[c[ab>>2]>>2]|0)<(c[c[bb>>2]>>2]|0)?c[_a>>2]|0:c[Za>>2]|0)>>2];c[F>>2]=0;a:while(1){d=c[F>>2]|0;c[T>>2]=c[G>>2];b=c[T>>2]|0;if(!(d>>>0<(((c[b+4>>2]|0)-(c[b>>2]|0)|0)/4|0)>>>0))break;b=c[F>>2]|0;c[R>>2]=c[G>>2];c[S>>2]=b;if((c[(c[c[R>>2]>>2]|0)+(c[S>>2]<<2)>>2]|0)!=0){Va=c[E>>2]|0;b=c[F>>2]|0;c[H>>2]=c[G>>2];c[I>>2]=b;c[K>>2]=(c[(c[c[H>>2]>>2]|0)+(c[I>>2]<<2)>>2]|0)+(c[c[J>>2]>>2]|0);c[L>>2]=Va;c[u>>2]=K;Va=c[L>>2]|0;b=c[Va+4>>2]|0;c[M>>2]=Va;c[N>>2]=(c[M>>2]|0)+8;c[O>>2]=c[N>>2];if((b|0)!=(c[c[O>>2]>>2]|0)){c[q>>2]=Va;c[r>>2]=(c[q>>2]|0)+8;c[s>>2]=c[r>>2];d=c[s>>2]|0;c[t>>2]=c[Va+4>>2];b=c[t>>2]|0;Ua=c[u>>2]|0;c[v>>2]=d;c[w>>2]=b;c[p>>2]=Ua;Ua=c[w>>2]|0;if((Ua|0)!=0)c[Ua>>2]=c[c[p>>2]>>2];b=Va+4|0;c[b>>2]=(c[b>>2]|0)+4}else Dh(Va,c[u>>2]|0);Ua=c[ea>>2]|0;c[j>>2]=0;c[k>>2]=Ua;c[l>>2]=j;Ua=c[k>>2]|0;b=c[Ua+4>>2]|0;c[m>>2]=Ua;c[n>>2]=(c[m>>2]|0)+8;c[o>>2]=c[n>>2];if((b|0)!=(c[c[o>>2]>>2]|0)){c[x>>2]=Ua;c[y>>2]=(c[x>>2]|0)+8;c[z>>2]=c[y>>2];d=c[z>>2]|0;c[A>>2]=c[Ua+4>>2];b=c[A>>2]|0;Va=c[l>>2]|0;c[B>>2]=d;c[C>>2]=b;c[D>>2]=Va;Va=c[C>>2]|0;if((Va|0)!=0)c[Va>>2]=c[c[D>>2]>>2];b=Ua+4|0;c[b>>2]=(c[b>>2]|0)+4}else Dh(Ua,c[l>>2]|0);c[F>>2]=(c[F>>2]|0)+1;continue}c[P>>2]=1;c[Q>>2]=(c[F>>2]|0)+1;while(1){d=c[Q>>2]|0;c[U>>2]=c[G>>2];b=c[U>>2]|0;if(d>>>0<(((c[b+4>>2]|0)-(c[b>>2]|0)|0)/4|0)>>>0){Va=c[Q>>2]|0;c[V>>2]=c[G>>2];c[W>>2]=Va;Va=(c[(c[c[V>>2]>>2]|0)+(c[W>>2]<<2)>>2]|0)==0}else Va=0;Ua=c[P>>2]|0;if(!Va)break;c[P>>2]=Ua+1;c[Q>>2]=(c[Q>>2]|0)+1}c[F>>2]=(c[F>>2]|0)+Ua;while(1){if((c[P>>2]|0)==0)continue a;if((c[P>>2]|0)<(2<<c[c[J>>2]>>2]|0))break;Ua=c[J>>2]|0;c[ba>>2]=c[E>>2];c[ca>>2]=Ua;Ua=c[ba>>2]|0;b=c[Ua+4>>2]|0;c[da>>2]=Ua;c[g>>2]=(c[da>>2]|0)+8;c[fa>>2]=c[g>>2];if((b|0)!=(c[c[fa>>2]>>2]|0)){c[ga>>2]=Ua;c[ha>>2]=(c[ga>>2]|0)+8;c[ia>>2]=c[ha>>2];d=c[ia>>2]|0;c[ja>>2]=c[Ua+4>>2];b=c[ja>>2]|0;Va=c[ca>>2]|0;c[ka>>2]=d;c[la>>2]=b;c[ma>>2]=Va;Va=c[la>>2]|0;if((Va|0)!=0)c[Va>>2]=c[c[ma>>2]>>2];b=Ua+4|0;c[b>>2]=(c[b>>2]|0)+4}else Dh(Ua,c[ca>>2]|0);Ua=c[ea>>2]|0;c[na>>2]=(1<<c[c[J>>2]>>2])-1;c[oa>>2]=Ua;c[pa>>2]=na;Ua=c[oa>>2]|0;b=c[Ua+4>>2]|0;c[qa>>2]=Ua;c[ra>>2]=(c[qa>>2]|0)+8;c[sa>>2]=c[ra>>2];if((b|0)!=(c[c[sa>>2]>>2]|0)){c[ta>>2]=Ua;c[ua>>2]=(c[ta>>2]|0)+8;c[va>>2]=c[ua>>2];d=c[va>>2]|0;c[h>>2]=c[Ua+4>>2];b=c[h>>2]|0;Va=c[pa>>2]|0;c[xa>>2]=d;c[ya>>2]=b;c[za>>2]=Va;Va=c[ya>>2]|0;if((Va|0)!=0)c[Va>>2]=c[c[za>>2]>>2];b=Ua+4|0;c[b>>2]=(c[b>>2]|0)+4}else Dh(Ua,c[pa>>2]|0);c[P>>2]=(c[P>>2]|0)-((2<<c[c[J>>2]>>2])-1)}c[X>>2]=Ed(c[P>>2]|0)|0;c[Y>>2]=c[E>>2];c[Z>>2]=X;Va=c[Y>>2]|0;b=c[Va+4>>2]|0;c[_>>2]=Va;c[$>>2]=(c[_>>2]|0)+8;c[aa>>2]=c[$>>2];if((b|0)!=(c[c[aa>>2]>>2]|0)){c[Aa>>2]=Va;c[Ba>>2]=(c[Aa>>2]|0)+8;c[Ca>>2]=c[Ba>>2];d=c[Ca>>2]|0;c[Da>>2]=c[Va+4>>2];b=c[Da>>2]|0;Ua=c[Z>>2]|0;c[Ea>>2]=d;c[Fa>>2]=b;c[Ga>>2]=Ua;Ua=c[Fa>>2]|0;if((Ua|0)!=0)c[Ua>>2]=c[c[Ga>>2]>>2];b=Va+4|0;c[b>>2]=(c[b>>2]|0)+4}else Dh(Va,c[Z>>2]|0);Va=c[ea>>2]|0;c[Ha>>2]=(c[P>>2]|0)-(1<<c[X>>2]);c[Ia>>2]=Va;c[Ja>>2]=Ha;Va=c[Ia>>2]|0;b=c[Va+4>>2]|0;c[Ka>>2]=Va;c[La>>2]=(c[Ka>>2]|0)+8;c[Ma>>2]=c[La>>2];if((b|0)==(c[c[Ma>>2]>>2]|0)){Dh(Va,c[Ja>>2]|0);continue}c[Na>>2]=Va;c[Oa>>2]=(c[Na>>2]|0)+8;c[Pa>>2]=c[Oa>>2];d=c[Pa>>2]|0;c[Qa>>2]=c[Va+4>>2];b=c[Qa>>2]|0;Ua=c[Ja>>2]|0;c[Ra>>2]=d;c[Sa>>2]=b;c[Ta>>2]=Ua;Ua=c[Sa>>2]|0;if((Ua|0)!=0)c[Ua>>2]=c[c[Ta>>2]>>2];b=Va+4|0;c[b>>2]=(c[b>>2]|0)+4}i=wa;return}function xi(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0;d=i;i=i+1456|0;q=d+1440|0;r=d+1380|0;p=d+1116|0;fa=d+1232|0;ga=d+1276|0;ca=d+1144|0;ea=d+1248|0;ba=d+1432|0;ia=d+1376|0;ma=d+1120|0;na=d+1124|0;ka=d+1128|0;la=d+1132|0;ja=d+1136|0;pa=d+1140|0;ta=d+1372|0;ua=d+1204|0;ra=d+1148|0;sa=d+1152|0;qa=d+1156|0;wa=d+1160|0;Fa=d+1164|0;Ea=d+1168|0;Ca=d+1172|0;Da=d+1176|0;Ba=d+1180|0;za=d+1184|0;Aa=d+1188|0;xa=d+1192|0;ya=d+1196|0;aa=d+1200|0;$=d+1368|0;ha=d+1240|0;oa=d+1208|0;va=d+1212|0;_=d+1216|0;Z=d+1396|0;z=d+1412|0;A=d+1420|0;x=d+1428|0;y=d+1436|0;w=d+1444|0;C=d+1252|0;G=d+1256|0;H=d+1260|0;E=d+1264|0;F=d+1268|0;D=d+1272|0;J=d+1424|0;N=d+1280|0;O=d+1284|0;L=d+1288|0;M=d+1292|0;K=d+1296|0;Q=d+1300|0;Y=d+1304|0;X=d+1308|0;V=d+1312|0;W=d+1316|0;U=d+1320|0;T=d+1324|0;e=d+1328|0;R=d+1332|0;S=d+1364|0;v=d+1336|0;u=d+1340|0;B=d+1344|0;I=d+1348|0;P=d+1352|0;t=d+1356|0;s=d+1360|0;Ha=d+1112|0;k=d+1384|0;b=d+1108|0;l=d+1388|0;g=d+1220|0;f=d+1400|0;Ga=d+1236|0;h=d+1416|0;n=d;o=d+1392|0;j=d+1104|0;m=d+1244|0;c[Ha>>2]=a;c[k>>2]=2147483647;c[b>>2]=0;c[l>>2]=0;while(1){if((c[l>>2]|0)>16){e=18;break}c[s>>2]=g;c[t>>2]=c[s>>2];c[u>>2]=c[t>>2];a=c[u>>2]|0;c[v>>2]=a;c[x>>2]=w;c[y>>2]=-1;Ia=c[y>>2]|0;c[z>>2]=c[x>>2];c[A>>2]=Ia;c[c[z>>2]>>2]=0;c[B>>2]=c[w>>2];c[C>>2]=B;c[a>>2]=0;c[E>>2]=D;c[F>>2]=-1;Ia=c[F>>2]|0;c[G>>2]=c[E>>2];c[H>>2]=Ia;c[c[G>>2]>>2]=0;c[I>>2]=c[D>>2];c[J>>2]=I;c[a+4>>2]=0;c[L>>2]=K;c[M>>2]=-1;Ia=c[M>>2]|0;c[N>>2]=c[L>>2];c[O>>2]=Ia;c[c[N>>2]>>2]=0;c[P>>2]=c[K>>2];c[Q>>2]=P;c[R>>2]=a+8;c[S>>2]=0;a=c[S>>2]|0;c[T>>2]=c[R>>2];c[e>>2]=a;a=c[T>>2]|0;c[U>>2]=e;Ia=c[c[U>>2]>>2]|0;c[V>>2]=a;c[W>>2]=Ia;Ia=c[V>>2]|0;c[X>>2]=Ia;c[Y>>2]=W;c[Ia>>2]=c[c[Y>>2]>>2];c[Z>>2]=f;c[_>>2]=c[Z>>2];c[$>>2]=c[_>>2];Ia=c[$>>2]|0;c[aa>>2]=Ia;c[ca>>2]=ba;c[ea>>2]=-1;a=c[ea>>2]|0;c[fa>>2]=c[ca>>2];c[ga>>2]=a;c[c[fa>>2]>>2]=0;c[ha>>2]=c[ba>>2];c[ia>>2]=ha;c[Ia>>2]=0;c[ka>>2]=ja;c[la>>2]=-1;a=c[la>>2]|0;c[ma>>2]=c[ka>>2];c[na>>2]=a;c[c[ma>>2]>>2]=0;c[oa>>2]=c[ja>>2];c[pa>>2]=oa;c[Ia+4>>2]=0;c[ra>>2]=qa;c[sa>>2]=-1;a=c[sa>>2]|0;c[ta>>2]=c[ra>>2];c[ua>>2]=a;c[c[ta>>2]>>2]=0;c[va>>2]=c[qa>>2];c[wa>>2]=va;c[xa>>2]=Ia+8;c[ya>>2]=0;Ia=c[ya>>2]|0;c[za>>2]=c[xa>>2];c[Aa>>2]=Ia;Ia=c[za>>2]|0;c[Ba>>2]=Aa;a=c[c[Ba>>2]>>2]|0;c[Ca>>2]=Ia;c[Da>>2]=a;a=c[Ca>>2]|0;c[Ea>>2]=a;c[Fa>>2]=Da;c[a>>2]=c[c[Fa>>2]>>2];c[Ga>>2]=c[l>>2];wi(c[Ha>>2]|0,Ga,g,f);if((c[Ga>>2]|0)<(c[l>>2]|0))c[h>>2]=2;else{yi(n);c[o>>2]=0;while(1){a=c[o>>2]|0;c[p>>2]=g;Ia=c[p>>2]|0;if(!(a>>>0<(((c[Ia+4>>2]|0)-(c[Ia>>2]|0)|0)/4|0)>>>0))break;Ia=c[o>>2]|0;c[q>>2]=g;c[r>>2]=Ia;zi(n,c[(c[c[q>>2]>>2]|0)+(c[r>>2]<<2)>>2]|0);c[o>>2]=(c[o>>2]|0)+1}c[j>>2]=~~+Ai(n);if((c[l>>2]|0)>0)c[j>>2]=(c[j>>2]|0)+4;c[m>>2]=1;while(1){if((c[m>>2]|0)>(c[l>>2]|0))break;Ia=da(c[n+(c[m>>2]<<2)>>2]|0,c[m>>2]|0)|0;c[j>>2]=(c[j>>2]|0)+Ia;c[m>>2]=(c[m>>2]|0)+1}if((c[j>>2]|0)<(c[k>>2]|0)){c[k>>2]=c[j>>2];c[b>>2]=c[l>>2]}c[h>>2]=0}we(f);we(g);if((c[h>>2]|0)==2){e=18;break}c[l>>2]=(c[l>>2]|0)+1}if((e|0)==18){i=d;return c[b>>2]|0}return 0}function yi(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Kk(c[d>>2]|0);i=b;return}function zi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;a=c[f>>2]|0;b=a+(c[e>>2]<<2)|0;c[b>>2]=(c[b>>2]|0)+1;a=a+1088|0;c[a>>2]=(c[a>>2]|0)+1;i=d;return}function Ai(a){a=a|0;var b=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0.0;b=i;i=i+304|0;e=b;f=b+16|0;l=b+12|0;m=b+24|0;g=b+32|0;j=b+20|0;k=b+8|0;c[f>>2]=a;if((c[(c[f>>2]|0)+1088>>2]|0)==0){h[e>>3]=12.0;n=+h[e>>3];i=b;return+n}c[l>>2]=0;c[m>>2]=0;while(1){if((c[m>>2]|0)>=272)break;if((c[l>>2]|0)>=5)break;if((c[(c[f>>2]|0)+(c[m>>2]<<2)>>2]|0)>0)c[l>>2]=(c[l>>2]|0)+1;c[m>>2]=(c[m>>2]|0)+1}if((c[l>>2]|0)==1){h[e>>3]=12.0;n=+h[e>>3];i=b;return+n}if((c[l>>2]|0)==2){h[e>>3]=+(20+(c[(c[f>>2]|0)+1088>>2]|0)|0);n=+h[e>>3];i=b;return+n}lz(g|0,0,272)|0;Ml(c[f>>2]|0,272,15,g);c[j>>2]=0;c[k>>2]=0;while(1){if((c[k>>2]|0)>=272)break;m=da(c[(c[f>>2]|0)+(c[k>>2]<<2)>>2]|0,d[g+(c[k>>2]|0)>>0]|0)|0;c[j>>2]=(c[j>>2]|0)+m;c[k>>2]=(c[k>>2]|0)+1}do if((c[l>>2]|0)!=3)if((c[l>>2]|0)==4){c[j>>2]=(c[j>>2]|0)+37;break}else{m=pk(g,272)|0;c[j>>2]=(c[j>>2]|0)+m;break}else c[j>>2]=(c[j>>2]|0)+28;while(0);h[e>>3]=+(c[j>>2]|0);n=+h[e>>3];i=b;return+n}function Bi(b,f,g,h){b=b|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0;Z=i;i=i+2352|0;q=Z+1284|0;r=Z+1488|0;s=Z+1160|0;t=Z+1440|0;u=Z+1264|0;v=Z+1268|0;C=Z+1280|0;D=Z+1472|0;A=Z+1464|0;B=Z+1136|0;x=Z+1140|0;y=Z+1144|0;E=Z+1148|0;K=Z+1152|0;L=Z+1156|0;J=Z+1432|0;ra=Z+1220|0;pa=Z+1168|0;qa=Z+1172|0;oa=Z+1176|0;wa=Z+1184|0;ua=Z+1192|0;va=Z+1196|0;ta=Z+1200|0;Ba=Z+1208|0;za=Z+1216|0;Aa=Z+1428|0;ya=Z+1276|0;Ka=Z+1228|0;Ia=Z+1236|0;Ja=Z+1240|0;Ha=Z+1244|0;Fa=Z+1248|0;Ga=Z+1252|0;Da=Z+1256|0;Ea=Z+1460|0;na=Z+1476|0;sa=Z+1484|0;xa=Z+1492|0;Ca=Z+2332|0;ma=Z+2336|0;la=Z+1288|0;T=Z+1292|0;R=Z+1300|0;S=Z+1304|0;Q=Z+1308|0;Y=Z+1316|0;W=Z+1324|0;X=Z+1328|0;V=Z+1332|0;ba=Z+1340|0;$=Z+1344|0;aa=Z+1348|0;_=Z+1352|0;ka=Z+1360|0;ia=Z+1368|0;ja=Z+1372|0;ha=Z+1376|0;fa=Z+1380|0;ga=Z+1384|0;da=Z+1388|0;ea=Z+1392|0;P=Z+1400|0;U=Z+1404|0;j=Z+1408|0;ca=Z+1412|0;O=Z+1416|0;N=Z+1420|0;M=Z+1436|0;G=Z+1116|0;k=Z+1444|0;l=Z+1120|0;o=Z+1104|0;n=Z+1124|0;m=Z+1448|0;w=Z+1260|0;F=Z;I=Z+1272|0;H=Z+2340|0;z=Z+1496|0;p=Z+1480|0;c[M>>2]=b;c[G>>2]=f;c[k>>2]=g;c[l>>2]=h;gi((c[G>>2]|0)-1|0,c[k>>2]|0,c[l>>2]|0);if((c[G>>2]|0)==1){i=Z;return}ui(o,c[M>>2]|0);c[N>>2]=n;c[O>>2]=c[N>>2];c[P>>2]=c[O>>2];b=c[P>>2]|0;c[Z+1396>>2]=b;c[R>>2]=Q;c[S>>2]=-1;f=c[S>>2]|0;c[T>>2]=c[R>>2];c[Z+1296>>2]=f;c[c[T>>2]>>2]=0;c[U>>2]=c[Q>>2];c[Z+1312>>2]=U;c[b>>2]=0;c[W>>2]=V;c[X>>2]=-1;f=c[X>>2]|0;c[Y>>2]=c[W>>2];c[Z+1320>>2]=f;c[c[Y>>2]>>2]=0;c[j>>2]=c[V>>2];c[Z+1336>>2]=j;c[b+4>>2]=0;c[$>>2]=_;c[aa>>2]=-1;f=c[aa>>2]|0;c[ba>>2]=c[$>>2];c[Z+1424>>2]=f;c[c[ba>>2]>>2]=0;c[ca>>2]=c[_>>2];c[Z+1356>>2]=ca;c[da>>2]=b+8;c[ea>>2]=0;b=c[ea>>2]|0;c[fa>>2]=c[da>>2];c[ga>>2]=b;b=c[fa>>2]|0;c[ha>>2]=ga;f=c[c[ha>>2]>>2]|0;c[ia>>2]=b;c[ja>>2]=f;f=c[ia>>2]|0;c[Z+1364>>2]=f;c[ka>>2]=ja;c[f>>2]=c[c[ka>>2]>>2];c[la>>2]=m;c[ma>>2]=c[la>>2];c[na>>2]=c[ma>>2];f=c[na>>2]|0;c[Z+1468>>2]=f;c[pa>>2]=oa;c[qa>>2]=-1;b=c[qa>>2]|0;c[ra>>2]=c[pa>>2];c[Z+1164>>2]=b;c[c[ra>>2]>>2]=0;c[sa>>2]=c[oa>>2];c[Z+1180>>2]=sa;c[f>>2]=0;c[ua>>2]=ta;c[va>>2]=-1;b=c[va>>2]|0;c[wa>>2]=c[ua>>2];c[Z+1188>>2]=b;c[c[wa>>2]>>2]=0;c[xa>>2]=c[ta>>2];c[Z+1204>>2]=xa;c[f+4>>2]=0;c[za>>2]=ya;c[Aa>>2]=-1;b=c[Aa>>2]|0;c[Ba>>2]=c[za>>2];c[Z+1212>>2]=b;c[c[Ba>>2]>>2]=0;c[Ca>>2]=c[ya>>2];c[Z+1224>>2]=Ca;c[Da>>2]=f+8;c[Ea>>2]=0;f=c[Ea>>2]|0;c[Fa>>2]=c[Da>>2];c[Ga>>2]=f;f=c[Fa>>2]|0;c[Ha>>2]=Ga;b=c[c[Ha>>2]>>2]|0;c[Ia>>2]=f;c[Ja>>2]=b;b=c[Ia>>2]|0;c[Z+1232>>2]=b;c[Ka>>2]=Ja;c[b>>2]=c[c[Ka>>2]>>2];c[w>>2]=xi(o)|0;wi(o,w,n,m);yi(F);c[I>>2]=0;while(1){f=c[I>>2]|0;c[J>>2]=n;b=c[J>>2]|0;if(!(f>>>0<(((c[b+4>>2]|0)-(c[b>>2]|0)|0)/4|0)>>>0))break;b=c[I>>2]|0;c[K>>2]=n;c[L>>2]=b;zi(F,c[(c[c[K>>2]>>2]|0)+(c[L>>2]<<2)>>2]|0);c[I>>2]=(c[I>>2]|0)+1}a[H>>0]=(c[w>>2]|0)>0&1;hi(1,a[H>>0]&1,0,c[k>>2]|0,c[l>>2]|0);if(a[H>>0]&1){b=(c[w>>2]|0)-1|0;hi(4,b,((b|0)<0)<<31>>31,c[k>>2]|0,c[l>>2]|0)}Ci(F,15,(c[G>>2]|0)+(c[w>>2]|0)|0,z,c[k>>2]|0,c[l>>2]|0);c[p>>2]=0;while(1){f=c[p>>2]|0;c[E>>2]=n;b=c[E>>2]|0;if(!(f>>>0<(((c[b+4>>2]|0)-(c[b>>2]|0)|0)/4|0)>>>0))break;b=c[p>>2]|0;c[x>>2]=n;c[y>>2]=b;b=d[z+(c[(c[c[x>>2]>>2]|0)+(c[y>>2]<<2)>>2]|0)>>0]|0;f=c[p>>2]|0;c[A>>2]=n;c[B>>2]=f;hi(b,e[z+272+(c[(c[c[A>>2]>>2]|0)+(c[B>>2]<<2)>>2]<<1)>>1]|0,0,c[k>>2]|0,c[l>>2]|0);b=c[p>>2]|0;c[C>>2]=n;c[D>>2]=b;if((c[(c[c[C>>2]>>2]|0)+(c[D>>2]<<2)>>2]|0)>0?(b=c[p>>2]|0,c[u>>2]=n,c[v>>2]=b,(c[(c[c[u>>2]>>2]|0)+(c[v>>2]<<2)>>2]|0)<=(c[w>>2]|0)):0){f=c[p>>2]|0;c[q>>2]=n;c[r>>2]=f;f=c[(c[c[q>>2]>>2]|0)+(c[r>>2]<<2)>>2]|0;b=c[p>>2]|0;c[s>>2]=m;c[t>>2]=b;b=c[(c[c[s>>2]>>2]|0)+(c[t>>2]<<2)>>2]|0;hi(f,b,((b|0)<0)<<31>>31,c[k>>2]|0,c[l>>2]|0)}c[p>>2]=(c[p>>2]|0)+1}hi(1,1,0,c[k>>2]|0,c[l>>2]|0);we(m);we(n);we(o);i=Z;return}function Ci(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;l=i;i=i+80|0;u=l+8|0;v=l+32|0;s=l+52|0;o=l+60|0;p=l+40|0;q=l+48|0;r=l+56|0;w=l+64|0;n=l+68|0;j=l+4|0;m=l+36|0;h=l+12|0;y=l;k=l+16|0;x=l+44|0;t=l+20|0;c[r>>2]=a;c[w>>2]=b;c[n>>2]=d;c[j>>2]=e;c[m>>2]=f;c[h>>2]=g;lz(c[j>>2]|0,0,272)|0;lz((c[j>>2]|0)+272|0,0,544)|0;a=(c[j>>2]|0)+820|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[(c[j>>2]|0)+816>>2]=0;c[y>>2]=(c[n>>2]|0)-1;c[k>>2]=0;while(1){if((c[y>>2]|0)==0)break;c[y>>2]=c[y>>2]>>1;c[k>>2]=(c[k>>2]|0)+1}c[x>>2]=0;while(1){if(!((c[x>>2]|0)>>>0<(c[n>>2]|0)>>>0))break;if((c[(c[r>>2]|0)+(c[x>>2]<<2)>>2]|0)>0){if((c[(c[j>>2]|0)+816>>2]|0)<4)c[(c[j>>2]|0)+820+(c[(c[j>>2]|0)+816>>2]<<2)>>2]=c[x>>2];a=(c[j>>2]|0)+816|0;c[a>>2]=(c[a>>2]|0)+1}c[x>>2]=(c[x>>2]|0)+1}if((c[(c[j>>2]|0)+816>>2]|0)<=1){hi(2,1,0,c[m>>2]|0,c[h>>2]|0);hi(2,0,0,c[m>>2]|0,c[h>>2]|0);a=c[(c[j>>2]|0)+820>>2]|0;hi(c[k>>2]|0,a,((a|0)<0)<<31>>31,c[m>>2]|0,c[h>>2]|0);i=l;return}if((c[n>>2]|0)>=50?(c[(c[j>>2]|0)+816>>2]|0)>=16:0){re(t,c[n>>2]|0);c[p>>2]=t;c[q>>2]=0;qz((c[c[p>>2]>>2]|0)+(c[q>>2]<<2)|0,c[r>>2]|0,c[n>>2]<<2|0)|0;a=c[n>>2]|0;c[s>>2]=t;c[o>>2]=0;Tl(a,(c[c[s>>2]>>2]|0)+(c[o>>2]<<2)|0)|0;c[u>>2]=t;c[v>>2]=0;Ml((c[c[u>>2]>>2]|0)+(c[v>>2]<<2)|0,c[n>>2]|0,c[w>>2]|0,c[j>>2]|0);we(t)}else Ml(c[r>>2]|0,c[n>>2]|0,c[w>>2]|0,c[j>>2]|0);Wl(c[j>>2]|0,c[n>>2]|0,(c[j>>2]|0)+272|0);o=c[j>>2]|0;n=c[n>>2]|0;if((c[(c[j>>2]|0)+816>>2]|0)<=4){Ik(o,n,c[k>>2]|0,c[m>>2]|0,c[h>>2]|0);i=l;return}else{Jk(o,n,c[m>>2]|0,c[h>>2]|0);i=l;return}}function Di(a,b,f,g){a=a|0;b=b|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=i;i=i+32|0;o=h+8|0;p=h+16|0;l=h+20|0;m=h+24|0;n=h+4|0;k=h;j=h+12|0;c[o>>2]=a;c[p>>2]=b;c[l>>2]=f;c[m>>2]=g;c[n>>2]=Cm(c[p>>2]|0)|0;c[k>>2]=Dm(c[n>>2]|0)|0;a=c[p>>2]|0;c[j>>2]=a-(Em(c[n>>2]|0)|0);hi(d[(c[o>>2]|0)+(c[n>>2]|0)>>0]|0,e[(c[o>>2]|0)+26+(c[n>>2]<<1)>>1]|0,0,c[l>>2]|0,c[m>>2]|0);if((c[k>>2]|0)<=0){i=h;return}p=c[j>>2]|0;hi(c[k>>2]|0,p,((p|0)<0)<<31>>31,c[l>>2]|0,c[m>>2]|0);i=h;return}function Ei(a){a=a|0;var b=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;b=i;i=i+96|0;x=b+84|0;y=b+48|0;s=b+36|0;t=b+24|0;u=b+76|0;v=b+8|0;r=b+12|0;q=b+64|0;e=b+72|0;o=b+80|0;n=b+88|0;m=b+28|0;j=b+32|0;l=b+40|0;z=b+44|0;p=b;g=b+56|0;h=b+16|0;w=b+68|0;f=b+4|0;k=b+20|0;c[p>>2]=a;if((c[c[p>>2]>>2]|0)<=1){c[c[p>>2]>>2]=1;i=b;return}c[g+0>>2]=c[32448];c[g+4>>2]=c[32449];c[h>>2]=0;c[w>>2]=0;while(1){a=c[w>>2]|0;c[z>>2]=(c[p>>2]|0)+4;A=c[z>>2]|0;if(!(a>>>0<((c[A+4>>2]|0)-(c[A>>2]|0)|0)>>>0))break;A=c[w>>2]|0;c[x>>2]=(c[p>>2]|0)+4;c[y>>2]=A;c[f>>2]=d[(c[c[x>>2]>>2]|0)+(c[y>>2]|0)>>0];do if((c[f>>2]|0)!=(c[g+((c[h>>2]&1)<<2)>>2]|0))if((c[f>>2]|0)==((c[g+(((c[h>>2]|0)-1&1)<<2)>>2]|0)+1|0)){c[k>>2]=1;break}else{c[k>>2]=(c[f>>2]|0)+2;break}else c[k>>2]=0;while(0);c[g+((c[h>>2]&1)<<2)>>2]=c[f>>2];c[h>>2]=(c[h>>2]|0)+1;c[j>>2]=(c[p>>2]|0)+16;c[l>>2]=k;A=c[j>>2]|0;a=c[A+4>>2]|0;c[m>>2]=A;c[n>>2]=(c[m>>2]|0)+8;c[o>>2]=c[n>>2];if((a|0)!=(c[c[o>>2]>>2]|0)){c[e>>2]=A;c[q>>2]=(c[e>>2]|0)+8;c[r>>2]=c[q>>2];C=c[r>>2]|0;c[s>>2]=c[A+4>>2];B=c[s>>2]|0;a=c[l>>2]|0;c[t>>2]=C;c[u>>2]=B;c[v>>2]=a;a=c[u>>2]|0;if((a|0)!=0)c[a>>2]=c[c[v>>2]>>2];C=A+4|0;c[C>>2]=(c[C>>2]|0)+4}else Dh(A,c[l>>2]|0);c[w>>2]=(c[w>>2]|0)+1}i=b;return}function Fi(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;q=i;i=i+1232|0;r=q+1188|0;s=q+1180|0;g=q+1204|0;n=q+1208|0;o=q+1168|0;v=q+1196|0;w=q+1200|0;u=q+1216|0;f=q+1220|0;h=q+1176|0;j=q+1172|0;k=q+1192|0;m=q;t=q+1212|0;l=q+1048|0;p=q+1184|0;c[f>>2]=a;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;gi((c[c[f>>2]>>2]|0)-1|0,c[j>>2]|0,c[k>>2]|0);if((c[c[f>>2]>>2]|0)==1){i=q;return}Gi(m);c[t>>2]=1;while(1){b=c[t>>2]|0;c[u>>2]=(c[f>>2]|0)+16;a=c[u>>2]|0;if(!(b>>>0<(((c[a+4>>2]|0)-(c[a>>2]|0)|0)/4|0)>>>0))break;a=c[t>>2]|0;c[v>>2]=(c[f>>2]|0)+16;c[w>>2]=a;Hi(m,c[(c[c[v>>2]>>2]|0)+(c[w>>2]<<2)>>2]|0);c[t>>2]=(c[t>>2]|0)+1}Ii(l);c[p>>2]=0;while(1){b=c[p>>2]|0;c[g>>2]=(c[f>>2]|0)+28;a=c[g>>2]|0;e=c[f>>2]|0;if(!(b>>>0<(((c[a+4>>2]|0)-(c[a>>2]|0)|0)/4|0)>>>0))break;a=c[p>>2]|0;c[r>>2]=e+28;c[s>>2]=a;Ji(l,Cm(c[(c[c[r>>2]>>2]|0)+(c[s>>2]<<2)>>2]|0)|0);c[p>>2]=(c[p>>2]|0)+1}Ki(m,15,(c[e>>2]|0)+2|0,c[h>>2]|0,c[j>>2]|0,c[k>>2]|0);Li(l,15,26,(c[h>>2]|0)+796|0,c[j>>2]|0,c[k>>2]|0);a=(c[h>>2]|0)+796|0;c[n>>2]=(c[f>>2]|0)+28;c[o>>2]=0;Di(a,c[(c[c[n>>2]>>2]|0)+(c[o>>2]<<2)>>2]|0,c[j>>2]|0,c[k>>2]|0);i=q;return}function Gi(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Gk(c[d>>2]|0);i=b;return}function Hi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;a=c[f>>2]|0;b=a+(c[e>>2]<<2)|0;c[b>>2]=(c[b>>2]|0)+1;a=a+1032|0;c[a>>2]=(c[a>>2]|0)+1;i=d;return}function Ii(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Ek(c[d>>2]|0);i=b;return}function Ji(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;a=c[f>>2]|0;b=a+(c[e>>2]<<2)|0;c[b>>2]=(c[b>>2]|0)+1;a=a+104|0;c[a>>2]=(c[a>>2]|0)+1;i=d;return}function Ki(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;l=i;i=i+80|0;u=l+8|0;v=l+32|0;s=l+52|0;o=l+60|0;p=l+40|0;q=l+48|0;r=l+56|0;w=l+64|0;n=l+68|0;j=l+4|0;m=l+36|0;h=l+12|0;y=l;k=l+16|0;x=l+44|0;t=l+20|0;c[r>>2]=a;c[w>>2]=b;c[n>>2]=d;c[j>>2]=e;c[m>>2]=f;c[h>>2]=g;lz(c[j>>2]|0,0,258)|0;lz((c[j>>2]|0)+258|0,0,516)|0;a=(c[j>>2]|0)+780|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[(c[j>>2]|0)+776>>2]=0;c[y>>2]=(c[n>>2]|0)-1;c[k>>2]=0;while(1){if((c[y>>2]|0)==0)break;c[y>>2]=c[y>>2]>>1;c[k>>2]=(c[k>>2]|0)+1}c[x>>2]=0;while(1){if(!((c[x>>2]|0)>>>0<(c[n>>2]|0)>>>0))break;if((c[(c[r>>2]|0)+(c[x>>2]<<2)>>2]|0)>0){if((c[(c[j>>2]|0)+776>>2]|0)<4)c[(c[j>>2]|0)+780+(c[(c[j>>2]|0)+776>>2]<<2)>>2]=c[x>>2];a=(c[j>>2]|0)+776|0;c[a>>2]=(c[a>>2]|0)+1}c[x>>2]=(c[x>>2]|0)+1}if((c[(c[j>>2]|0)+776>>2]|0)<=1){hi(2,1,0,c[m>>2]|0,c[h>>2]|0);hi(2,0,0,c[m>>2]|0,c[h>>2]|0);a=c[(c[j>>2]|0)+780>>2]|0;hi(c[k>>2]|0,a,((a|0)<0)<<31>>31,c[m>>2]|0,c[h>>2]|0);i=l;return}if((c[n>>2]|0)>=50?(c[(c[j>>2]|0)+776>>2]|0)>=16:0){re(t,c[n>>2]|0);c[p>>2]=t;c[q>>2]=0;qz((c[c[p>>2]>>2]|0)+(c[q>>2]<<2)|0,c[r>>2]|0,c[n>>2]<<2|0)|0;a=c[n>>2]|0;c[s>>2]=t;c[o>>2]=0;Tl(a,(c[c[s>>2]>>2]|0)+(c[o>>2]<<2)|0)|0;c[u>>2]=t;c[v>>2]=0;Ml((c[c[u>>2]>>2]|0)+(c[v>>2]<<2)|0,c[n>>2]|0,c[w>>2]|0,c[j>>2]|0);we(t)}else Ml(c[r>>2]|0,c[n>>2]|0,c[w>>2]|0,c[j>>2]|0);Wl(c[j>>2]|0,c[n>>2]|0,(c[j>>2]|0)+258|0);o=c[j>>2]|0;n=c[n>>2]|0;if((c[(c[j>>2]|0)+776>>2]|0)<=4){Ck(o,n,c[k>>2]|0,c[m>>2]|0,c[h>>2]|0);i=l;return}else{Dk(o,n,c[m>>2]|0,c[h>>2]|0);i=l;return}}function Li(d,e,f,g,h,j){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;k=i;i=i+80|0;y=k+28|0;z=k+24|0;r=k+52|0;x=k+60|0;u=k+40|0;v=k+48|0;w=k+56|0;A=k+64|0;p=k+68|0;o=k;m=k+36|0;n=k+4|0;q=k+32|0;l=k+8|0;s=k+44|0;t=k+12|0;c[w>>2]=d;c[A>>2]=e;c[p>>2]=f;c[o>>2]=g;c[m>>2]=h;c[n>>2]=j;h=(c[o>>2]|0)+0|0;j=h+26|0;do{a[h>>0]=0;h=h+1|0}while((h|0)<(j|0));h=(c[o>>2]|0)+26|0;j=h+52|0;do{b[h>>1]=0;h=h+2|0}while((h|0)<(j|0));d=(c[o>>2]|0)+84|0;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[(c[o>>2]|0)+80>>2]=0;c[q>>2]=(c[p>>2]|0)-1;c[l>>2]=0;while(1){if((c[q>>2]|0)==0)break;c[q>>2]=c[q>>2]>>1;c[l>>2]=(c[l>>2]|0)+1}c[s>>2]=0;while(1){if(!((c[s>>2]|0)>>>0<(c[p>>2]|0)>>>0))break;if((c[(c[w>>2]|0)+(c[s>>2]<<2)>>2]|0)>0){if((c[(c[o>>2]|0)+80>>2]|0)<4)c[(c[o>>2]|0)+84+(c[(c[o>>2]|0)+80>>2]<<2)>>2]=c[s>>2];d=(c[o>>2]|0)+80|0;c[d>>2]=(c[d>>2]|0)+1}c[s>>2]=(c[s>>2]|0)+1}if((c[(c[o>>2]|0)+80>>2]|0)<=1){hi(2,1,0,c[m>>2]|0,c[n>>2]|0);hi(2,0,0,c[m>>2]|0,c[n>>2]|0);d=c[(c[o>>2]|0)+84>>2]|0;hi(c[l>>2]|0,d,((d|0)<0)<<31>>31,c[m>>2]|0,c[n>>2]|0);i=k;return}if((c[p>>2]|0)>=50?(c[(c[o>>2]|0)+80>>2]|0)>=16:0){re(t,c[p>>2]|0);c[u>>2]=t;c[v>>2]=0;qz((c[c[u>>2]>>2]|0)+(c[v>>2]<<2)|0,c[w>>2]|0,c[p>>2]<<2|0)|0;d=c[p>>2]|0;c[r>>2]=t;c[x>>2]=0;Tl(d,(c[c[r>>2]>>2]|0)+(c[x>>2]<<2)|0)|0;c[y>>2]=t;c[z>>2]=0;Ml((c[c[y>>2]>>2]|0)+(c[z>>2]<<2)|0,c[p>>2]|0,c[A>>2]|0,c[o>>2]|0);we(t)}else Ml(c[w>>2]|0,c[p>>2]|0,c[A>>2]|0,c[o>>2]|0);Wl(c[o>>2]|0,c[p>>2]|0,(c[o>>2]|0)+26|0);q=c[o>>2]|0;p=c[p>>2]|0;if((c[(c[o>>2]|0)+80>>2]|0)<=4){Ak(q,p,c[l>>2]|0,c[m>>2]|0,c[n>>2]|0);i=k;return}else{Bk(q,p,c[m>>2]|0,c[n>>2]|0);i=k;return}}function Mi(a,b,f,g){a=a|0;b=b|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;p=i;i=i+48|0;o=p+36|0;h=p+16|0;m=p;n=p+28|0;k=p+32|0;l=p+40|0;r=p+12|0;j=p+24|0;s=p+20|0;t=p+8|0;q=p+4|0;c[r>>2]=a;c[j>>2]=b;c[s>>2]=f;c[t>>2]=g;if((c[(c[j>>2]|0)+12>>2]|0)!=0){a=c[j>>2]|0;a=a+12|0;b=c[a>>2]|0;b=b+ -1|0;c[a>>2]=b;i=p;return}a=(c[j>>2]|0)+4|0;c[a>>2]=(c[a>>2]|0)+1;a=c[(c[j>>2]|0)+4>>2]|0;c[k>>2]=(c[c[j>>2]>>2]|0)+4;c[l>>2]=a;c[(c[j>>2]|0)+8>>2]=d[(c[c[k>>2]>>2]|0)+(c[l>>2]|0)>>0];a=c[(c[j>>2]|0)+4>>2]|0;c[m>>2]=(c[c[j>>2]>>2]|0)+28;c[n>>2]=a;c[(c[j>>2]|0)+12>>2]=c[(c[c[m>>2]>>2]|0)+(c[n>>2]<<2)>>2];a=c[(c[j>>2]|0)+4>>2]|0;c[o>>2]=(c[c[j>>2]>>2]|0)+16;c[h>>2]=a;c[q>>2]=c[(c[c[o>>2]>>2]|0)+(c[h>>2]<<2)>>2];hi(d[(c[r>>2]|0)+(c[q>>2]|0)>>0]|0,e[(c[r>>2]|0)+258+(c[q>>2]<<1)>>1]|0,0,c[s>>2]|0,c[t>>2]|0);Di((c[r>>2]|0)+796|0,c[(c[j>>2]|0)+12>>2]|0,c[s>>2]|0,c[t>>2]|0);a=c[j>>2]|0;a=a+12|0;b=c[a>>2]|0;b=b+ -1|0;c[a>>2]=b;i=p;return}function Ni(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;k=i;i=i+160|0;n=k+80|0;j=k+72|0;m=k+16|0;r=k+24|0;o=k+104|0;l=k+152|0;B=k+20|0;t=k+100|0;z=k+84|0;A=k+68|0;y=k;v=k+44|0;w=k+48|0;x=k+153|0;H=k+64|0;u=k+144|0;K=k+92|0;N=k+88|0;M=k+40|0;O=k+116|0;L=k+120|0;I=k+124|0;J=k+128|0;C=k+132|0;D=k+136|0;E=k+140|0;q=k+108|0;F=k+96|0;G=k+112|0;p=k+52|0;s=k+28|0;c[I>>2]=b;c[J>>2]=d;c[C>>2]=e;c[D>>2]=f;c[E>>2]=g;c[q>>2]=h;h=c[J>>2]|0;c[O>>2]=c[q>>2];c[L>>2]=h;h=c[O>>2]|0;if((h|0)!=(c[L>>2]|0)){b=c[L>>2]|0;c[N>>2]=h;c[M>>2]=b;b=c[N>>2]|0;O=c[M>>2]|0;a[k+8>>0]=a[k+154>>0]|0;c[k+148>>2]=b;c[k+76>>2]=O;yk(h,c[c[L>>2]>>2]|0,c[(c[L>>2]|0)+4>>2]|0)}O=(c[q>>2]|0)+12|0;b=c[I>>2]|0;c[O+0>>2]=c[b+0>>2];c[O+4>>2]=c[b+4>>2];c[O+8>>2]=c[b+8>>2];c[K>>2]=c[J>>2];O=c[K>>2]|0;if((c[O>>2]|0)==(c[O+4>>2]|0)){i=k;return}ri(c[q>>2]|0,c[(c[q>>2]|0)+12>>2]|0,c[(c[q>>2]|0)+16>>2]|0);_d(c[q>>2]|0,(c[C>>2]|0)+(c[D>>2]&c[E>>2])|0,(c[q>>2]|0)+24|0,(c[q>>2]|0)+64|0,(c[q>>2]|0)+104|0);Ei((c[q>>2]|0)+24|0);Ei((c[q>>2]|0)+64|0);Ei((c[q>>2]|0)+104|0);Oi((c[q>>2]|0)+144|0,c[(c[q>>2]|0)+24>>2]|0,(c[q>>2]|0)+20|0);c[F>>2]=c[(c[q>>2]|0)+24>>2]<<6;c[G>>2]=c[(c[q>>2]|0)+104>>2]<<2;Pi(p,c[F>>2]|0);vg((c[q>>2]|0)+192|0,c[(c[q>>2]|0)+64>>2]|0);Qi(s,c[G>>2]|0);nm(c[q>>2]|0,(c[q>>2]|0)+24|0,(c[q>>2]|0)+64|0,(c[q>>2]|0)+104|0,c[C>>2]|0,c[D>>2]|0,c[E>>2]|0,(c[q>>2]|0)+144|0,p,(c[q>>2]|0)+192|0,s);c[H>>2]=(c[q>>2]|0)+180;c[u>>2]=p;C=c[H>>2]|0;if((C|0)!=(c[u>>2]|0)){b=c[u>>2]|0;c[v>>2]=C;c[w>>2]=b;b=c[v>>2]|0;O=c[w>>2]|0;a[y+0>>0]=a[x+0>>0]|0;c[z>>2]=b;c[A>>2]=O;sk(C,c[c[u>>2]>>2]|0,c[(c[u>>2]|0)+4>>2]|0)}dh(p,64,c[(c[q>>2]|0)+24>>2]|0,256,(c[q>>2]|0)+180|0,(c[q>>2]|0)+156|0);c[B>>2]=(c[q>>2]|0)+204;c[t>>2]=s;u=c[B>>2]|0;if((u|0)!=(c[t>>2]|0)){b=c[t>>2]|0;c[r>>2]=u;c[o>>2]=b;b=c[r>>2]|0;O=c[o>>2]|0;a[m+0>>0]=a[l+0>>0]|0;c[n>>2]=b;c[j>>2]=O;qk(u,c[c[t>>2]>>2]|0,c[(c[t>>2]|0)+4>>2]|0)}ve(s,4,c[(c[q>>2]|0)+104>>2]|0,256,(c[q>>2]|0)+204|0,(c[q>>2]|0)+168|0);oe(s);Zg(p);i=k;return}function Oi(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;q=i;i=i+80|0;o=q+20|0;j=q+36|0;h=q+32|0;p=q;f=q+16|0;g=q+8|0;r=q+72|0;n=q+28|0;m=q+64|0;l=q+68|0;x=q+40|0;k=q+44|0;v=q+48|0;w=q+52|0;y=q+56|0;z=q+60|0;t=q+4|0;s=q+24|0;u=q+12|0;c[z>>2]=b;c[t>>2]=d;c[s>>2]=e;e=c[z>>2]|0;c[y>>2]=e;b=c[y>>2]|0;c[u>>2]=((c[b+4>>2]|0)-(c[b>>2]|0)|0)/4|0;if((c[u>>2]|0)>>>0<(c[t>>2]|0)>>>0){wk(e,(c[t>>2]|0)-(c[u>>2]|0)|0,c[s>>2]|0);i=q;return}if(!((c[u>>2]|0)>>>0>(c[t>>2]|0)>>>0)){i=q;return}s=(c[e>>2]|0)+(c[t>>2]<<2)|0;c[v>>2]=e;c[w>>2]=s;s=c[w>>2]|0;c[x>>2]=c[v>>2];c[k>>2]=s;s=c[x>>2]|0;while(1){if((c[k>>2]|0)==(c[s+4>>2]|0))break;c[l>>2]=s;c[m>>2]=(c[l>>2]|0)+8;c[n>>2]=c[m>>2];z=c[n>>2]|0;b=s+4|0;y=(c[b>>2]|0)+ -4|0;c[b>>2]=y;c[o>>2]=y;y=c[o>>2]|0;c[f>>2]=z;c[g>>2]=y;y=c[f>>2]|0;z=c[g>>2]|0;a[p+0>>0]=a[r+0>>0]|0;c[j>>2]=y;c[h>>2]=z}i=q;return}function Pi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;vk(c[f>>2]|0,c[e>>2]|0);i=d;return}function Qi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;uk(c[f>>2]|0,c[e>>2]|0);i=d;return}function Ri(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;b=i;i=i+32|0;h=b+8|0;j=b+16|0;g=b+20|0;f=b+24|0;d=b+4|0;e=b;k=b+12|0;c[f>>2]=a;c[d>>2]=0;c[e>>2]=0;while(1){l=c[e>>2]|0;c[g>>2]=c[f>>2];a=c[g>>2]|0;if(!(l>>>0<(((c[a+4>>2]|0)-(c[a>>2]|0)|0)/32|0)>>>0))break;l=c[e>>2]|0;c[h>>2]=c[f>>2];c[j>>2]=l;c[k>>2]=(c[c[h>>2]>>2]|0)+(c[j>>2]<<5);c[d>>2]=(c[d>>2]|0)+((c[c[k>>2]>>2]|0)+(c[(c[k>>2]|0)+4>>2]|0));c[e>>2]=(c[e>>2]|0)+1}i=b;return c[d>>2]|0}function Si(b,f,g,h,j,k,l){b=b|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0;n=i;i=i+3392|0;L=n+1272|0;M=n+3368|0;N=n+3360|0;m=n+3352|0;I=n+3344|0;J=n+1248|0;F=n+1252|0;G=n+1256|0;U=n+1260|0;V=n+1244|0;Y=n+84|0;Z=n+88|0;ga=n+92|0;ha=n+96|0;ia=n+100|0;ea=n+168|0;fa=n+108|0;da=n;aa=n+116|0;ba=n+120|0;ca=n+3388|0;ka=n+128|0;la=n+132|0;Q=n+136|0;R=n+140|0;W=n+144|0;Kb=n+148|0;Lb=n+152|0;Ib=n+156|0;Jb=n+160|0;Hb=n+164|0;Nb=n+104|0;Rb=n+172|0;Sb=n+176|0;Pb=n+180|0;Qb=n+112|0;Ob=n+188|0;Ub=n+192|0;Yb=n+196|0;Zb=n+200|0;Wb=n+204|0;Xb=n+208|0;Vb=n+212|0;$b=n+216|0;ic=n+220|0;hc=n+224|0;fc=n+228|0;gc=n+232|0;ec=n+236|0;cc=n+240|0;dc=n+244|0;ac=n+248|0;bc=n+252|0;Gb=n+256|0;Fb=n+260|0;Mb=n+264|0;Tb=n+268|0;_b=n+272|0;Eb=n+276|0;Db=n+280|0;cb=n+284|0;db=n+288|0;ab=n+292|0;bb=n+48|0;$a=n+308|0;fb=n+312|0;jb=n+316|0;kb=n+320|0;hb=n+324|0;ib=n+328|0;gb=n+332|0;mb=n+184|0;qb=n+1232|0;rb=n+3332|0;ob=n+3340|0;pb=n+3348|0;nb=n+3356|0;tb=n+3364|0;Cb=n+3372|0;Bb=n+3380|0;zb=n+1264|0;Ab=n+1268|0;yb=n+3384|0;wb=n+1276|0;xb=n+1280|0;ub=n+1284|0;vb=n+1288|0;_a=n+1292|0;Za=n+1296|0;eb=n+1300|0;lb=n+1304|0;sb=n+1308|0;Ya=n+1312|0;Xa=n+1316|0;wa=n+1320|0;xa=n+1324|0;ua=n+1328|0;va=n+1332|0;ta=n+1336|0;za=n+1340|0;Da=n+1344|0;Ea=n+1348|0;Ba=n+1352|0;Ca=n+1356|0;Aa=n+1360|0;Ga=n+1364|0;Ka=n+1368|0;La=n+1372|0;Ia=n+1376|0;Ja=n+1380|0;Ha=n+1384|0;na=n+1388|0;Wa=n+1392|0;Va=n+1396|0;Ta=n+1400|0;Ua=n+1404|0;Na=n+1408|0;Qa=n+1412|0;Ra=n+1416|0;Oa=n+1420|0;Pa=n+1424|0;sa=n+1428|0;ra=n+1432|0;ya=n+1436|0;Fa=n+1440|0;Ma=n+1444|0;qa=n+1448|0;pa=n+16|0;oa=n+1456|0;Sa=n+1460|0;lc=n+1464|0;mc=n+1468|0;E=n+1472|0;oc=n+3389|0;x=n+1480|0;y=n+1484|0;u=n+1488|0;r=n+1492|0;s=n+1496|0;nc=n+1500|0;v=n+1504|0;z=n+1512|0;S=n+2408|0;p=n+336|0;jc=n+3320|0;kc=n+3324|0;o=n+72|0;O=n+296|0;ma=n+4|0;A=n+32|0;T=n+3304|0;q=n+56|0;P=n+1452|0;t=n+24|0;C=n+3328|0;B=n+1236|0;w=n+3390|0;D=n+3391|0;H=n+3336|0;K=n+3376|0;X=n+1240|0;_=n+20|0;ja=n+1476|0;$=n+124|0;c[E>>2]=b;a[oc>>0]=f&1;c[x>>2]=g;c[y>>2]=h;c[u>>2]=j;c[r>>2]=k;c[s>>2]=l;c[nc>>2]=Ri(c[E>>2]|0)|0;c[v>>2]=(c[c[u>>2]>>2]|0)+(c[nc>>2]|0);ki(c[nc>>2]|0,a[oc>>0]&1,0,c[r>>2]|0,c[s>>2]|0);if((c[nc>>2]|0)==0){i=n;return}Fi((c[E>>2]|0)+24|0,z,c[r>>2]|0,c[s>>2]|0);Fi((c[E>>2]|0)+64|0,S,c[r>>2]|0,c[s>>2]|0);Fi((c[E>>2]|0)+104|0,p,c[r>>2]|0,c[s>>2]|0);oc=c[(c[E>>2]|0)+16>>2]|0;hi(2,oc,((oc|0)<0)<<31>>31,c[r>>2]|0,c[s>>2]|0);oc=c[(c[E>>2]|0)+12>>2]>>c[(c[E>>2]|0)+16>>2];hi(4,oc,((oc|0)<0)<<31>>31,c[r>>2]|0,c[s>>2]|0);c[jc>>2]=16+(c[(c[E>>2]|0)+12>>2]|0)+(48<<c[(c[E>>2]|0)+16>>2]);c[kc>>2]=0;while(1){l=c[E>>2]|0;if((c[kc>>2]|0)>=(c[(c[E>>2]|0)+24>>2]|0))break;oc=c[kc>>2]|0;c[lc>>2]=l+144;c[mc>>2]=oc;oc=c[(c[c[lc>>2]>>2]|0)+(c[mc>>2]<<2)>>2]|0;hi(2,oc,((oc|0)<0)<<31>>31,c[r>>2]|0,c[s>>2]|0);c[kc>>2]=(c[kc>>2]|0)+1}c[Sa>>2]=(c[E>>2]|0)+180;oc=c[Sa>>2]|0;Bi(l+156|0,((c[oc+4>>2]|0)-(c[oc>>2]|0)|0)/1040|0,c[r>>2]|0,c[s>>2]|0);oc=(c[E>>2]|0)+168|0;c[oa>>2]=(c[E>>2]|0)+204;nc=c[oa>>2]|0;Bi(oc,((c[nc+4>>2]|0)-(c[nc>>2]|0)|0)/2096|0,c[r>>2]|0,c[s>>2]|0);c[pa>>2]=o;c[qa>>2]=c[pa>>2];c[ra>>2]=c[qa>>2];nc=c[ra>>2]|0;c[sa>>2]=nc;c[ua>>2]=ta;c[va>>2]=-1;oc=c[va>>2]|0;c[wa>>2]=c[ua>>2];c[xa>>2]=oc;c[c[wa>>2]>>2]=0;c[ya>>2]=c[ta>>2];c[za>>2]=ya;c[nc>>2]=0;c[Ba>>2]=Aa;c[Ca>>2]=-1;oc=c[Ca>>2]|0;c[Da>>2]=c[Ba>>2];c[Ea>>2]=oc;c[c[Da>>2]>>2]=0;c[Fa>>2]=c[Aa>>2];c[Ga>>2]=Fa;c[nc+4>>2]=0;c[Ia>>2]=Ha;c[Ja>>2]=-1;oc=c[Ja>>2]|0;c[Ka>>2]=c[Ia>>2];c[La>>2]=oc;c[c[Ka>>2]>>2]=0;c[Ma>>2]=c[Ha>>2];c[na>>2]=Ma;c[Oa>>2]=nc+8;c[Pa>>2]=0;nc=c[Pa>>2]|0;c[Qa>>2]=c[Oa>>2];c[Ra>>2]=nc;nc=c[Qa>>2]|0;c[Na>>2]=Ra;oc=c[c[Na>>2]>>2]|0;c[Ta>>2]=nc;c[Ua>>2]=oc;oc=c[Ta>>2]|0;c[Va>>2]=oc;c[Wa>>2]=Ua;c[oc>>2]=c[c[Wa>>2]>>2];c[Xa>>2]=O;c[Ya>>2]=c[Xa>>2];c[Za>>2]=c[Ya>>2];oc=c[Za>>2]|0;c[_a>>2]=oc;c[ab>>2]=$a;c[bb>>2]=-1;nc=c[bb>>2]|0;c[cb>>2]=c[ab>>2];c[db>>2]=nc;c[c[cb>>2]>>2]=0;c[eb>>2]=c[$a>>2];c[fb>>2]=eb;c[oc>>2]=0;c[hb>>2]=gb;c[ib>>2]=-1;nc=c[ib>>2]|0;c[jb>>2]=c[hb>>2];c[kb>>2]=nc;c[c[jb>>2]>>2]=0;c[lb>>2]=c[gb>>2];c[mb>>2]=lb;c[oc+4>>2]=0;c[ob>>2]=nb;c[pb>>2]=-1;nc=c[pb>>2]|0;c[qb>>2]=c[ob>>2];c[rb>>2]=nc;c[c[qb>>2]>>2]=0;c[sb>>2]=c[nb>>2];c[tb>>2]=sb;c[ub>>2]=oc+8;c[vb>>2]=0;oc=c[vb>>2]|0;c[wb>>2]=c[ub>>2];c[xb>>2]=oc;oc=c[wb>>2]|0;c[yb>>2]=xb;nc=c[c[yb>>2]>>2]|0;c[zb>>2]=oc;c[Ab>>2]=nc;nc=c[zb>>2]|0;c[Bb>>2]=nc;c[Cb>>2]=Ab;c[nc>>2]=c[c[Cb>>2]>>2];c[Db>>2]=ma;c[Eb>>2]=c[Db>>2];c[Fb>>2]=c[Eb>>2];nc=c[Fb>>2]|0;c[Gb>>2]=nc;c[Ib>>2]=Hb;c[Jb>>2]=-1;oc=c[Jb>>2]|0;c[Kb>>2]=c[Ib>>2];c[Lb>>2]=oc;c[c[Kb>>2]>>2]=0;c[Mb>>2]=c[Hb>>2];c[Nb>>2]=Mb;c[nc>>2]=0;c[Pb>>2]=Ob;c[Qb>>2]=-1;oc=c[Qb>>2]|0;c[Rb>>2]=c[Pb>>2];c[Sb>>2]=oc;c[c[Rb>>2]>>2]=0;c[Tb>>2]=c[Ob>>2];c[Ub>>2]=Tb;c[nc+4>>2]=0;c[Wb>>2]=Vb;c[Xb>>2]=-1;oc=c[Xb>>2]|0;c[Yb>>2]=c[Wb>>2];c[Zb>>2]=oc;c[c[Yb>>2]>>2]=0;c[_b>>2]=c[Vb>>2];c[$b>>2]=_b;c[ac>>2]=nc+8;c[bc>>2]=0;nc=c[bc>>2]|0;c[cc>>2]=c[ac>>2];c[dc>>2]=nc;nc=c[cc>>2]|0;c[ec>>2]=dc;oc=c[c[ec>>2]>>2]|0;c[fc>>2]=nc;c[gc>>2]=oc;oc=c[fc>>2]|0;c[hc>>2]=oc;c[ic>>2]=gc;c[oc>>2]=c[c[ic>>2]>>2];Ti((c[E>>2]|0)+180|0,256,o,c[r>>2]|0,c[s>>2]|0);Ui((c[E>>2]|0)+192|0,704,O,c[r>>2]|0,c[s>>2]|0);Vi((c[E>>2]|0)+204|0,c[jc>>2]|0,ma,c[r>>2]|0,c[s>>2]|0);Wi(A,(c[E>>2]|0)+24|0);Wi(T,(c[E>>2]|0)+64|0);Wi(q,(c[E>>2]|0)+104|0);c[P>>2]=0;while(1){nc=c[P>>2]|0;c[W>>2]=c[E>>2];oc=c[W>>2]|0;if(!(nc>>>0<(((c[oc+4>>2]|0)-(c[oc>>2]|0)|0)/32|0)>>>0))break;oc=c[P>>2]|0;c[Q>>2]=c[E>>2];c[R>>2]=oc;c[t>>2]=(c[c[Q>>2]>>2]|0)+(c[R>>2]<<5);Mi(S,T,c[r>>2]|0,c[s>>2]|0);oc=c[t>>2]|0;nc=c[T+8>>2]|0;c[U>>2]=O;c[V>>2]=nc;ni(oc,(c[c[U>>2]>>2]|0)+((c[V>>2]|0)*2132|0)|0,c[r>>2]|0,c[s>>2]|0);c[C>>2]=0;while(1){if(!((c[C>>2]|0)>>>0<(c[c[t>>2]>>2]|0)>>>0))break;Mi(z,A,c[r>>2]|0,c[s>>2]|0);c[B>>2]=c[A+8>>2];if((c[c[u>>2]>>2]|0)>>>0>0)na=d[(c[x>>2]|0)+((c[c[u>>2]>>2]|0)-1&c[y>>2])>>0]|0;else na=0;a[w>>0]=na;if((c[c[u>>2]>>2]|0)>>>0>1)na=d[(c[x>>2]|0)+((c[c[u>>2]>>2]|0)-2&c[y>>2])>>0]|0;else na=0;a[D>>0]=na;b=c[A+8>>2]<<6;oc=a[w>>0]|0;nc=a[D>>0]|0;f=c[A+8>>2]|0;c[F>>2]=(c[E>>2]|0)+144;c[G>>2]=f;c[H>>2]=b+((Xi(oc,nc,c[(c[c[F>>2]>>2]|0)+(c[G>>2]<<2)>>2]|0)|0)&255);nc=c[H>>2]|0;c[I>>2]=(c[E>>2]|0)+156;c[J>>2]=nc;c[B>>2]=c[(c[c[I>>2]>>2]|0)+(c[J>>2]<<2)>>2];c[K>>2]=d[(c[x>>2]|0)+(c[c[u>>2]>>2]&c[y>>2])>>0];nc=c[K>>2]|0;oc=c[B>>2]|0;c[L>>2]=o;c[M>>2]=oc;nc=d[(c[c[L>>2]>>2]|0)+((c[M>>2]|0)*788|0)+nc>>0]|0;oc=c[K>>2]|0;b=c[B>>2]|0;c[N>>2]=o;c[m>>2]=b;hi(nc,e[(c[c[N>>2]>>2]|0)+((c[m>>2]|0)*788|0)+256+(oc<<1)>>1]|0,0,c[r>>2]|0,c[s>>2]|0);oc=c[u>>2]|0;c[oc>>2]=(c[oc>>2]|0)+1;c[C>>2]=(c[C>>2]|0)+1}if((c[c[u>>2]>>2]|0)>>>0<(c[v>>2]|0)>>>0?(e[(c[t>>2]|0)+20>>1]|0|0)!=65535:0){Mi(p,q,c[r>>2]|0,c[s>>2]|0);if((c[(c[t>>2]|0)+8>>2]|0)>>>0>4)na=3;else na=(c[(c[t>>2]|0)+8>>2]|0)-2|0;c[X>>2]=(c[q+8>>2]<<2)+na;oc=c[X>>2]|0;c[Y>>2]=(c[E>>2]|0)+168;c[Z>>2]=oc;c[_>>2]=c[(c[c[Y>>2]>>2]|0)+(c[Z>>2]<<2)>>2];oc=c[u>>2]|0;c[$>>2]=4194288;c[aa>>2]=oc;c[ba>>2]=$;oc=c[aa>>2]|0;nc=c[ba>>2]|0;a[da+0>>0]=a[ca+0>>0]|0;c[ea>>2]=oc;c[fa>>2]=nc;nc=c[fa>>2]|0;oc=c[ea>>2]|0;c[ga>>2]=da;c[ha>>2]=nc;c[ia>>2]=oc;c[ja>>2]=c[((c[c[ha>>2]>>2]|0)>>>0<(c[c[ia>>2]>>2]|0)>>>0?c[fa>>2]|0:c[ea>>2]|0)>>2];oc=c[t>>2]|0;nc=c[_>>2]|0;c[ka>>2]=ma;c[la>>2]=nc;oi(oc,(c[c[ka>>2]>>2]|0)+((c[la>>2]|0)*1580|0)|0,c[r>>2]|0,c[s>>2]|0)}oc=c[u>>2]|0;c[oc>>2]=(c[oc>>2]|0)+(c[(c[t>>2]|0)+4>>2]|0);c[P>>2]=(c[P>>2]|0)+1}Yi(ma);Zi(O);_i(o);i=n;return}function Ti(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;o=i;i=i+48|0;l=o;m=o+8|0;p=o+36|0;q=o+16|0;k=o+32|0;t=o+40|0;j=o+44|0;n=o+24|0;g=o+20|0;r=o+12|0;s=o+4|0;h=o+28|0;c[j>>2]=a;c[n>>2]=b;c[g>>2]=d;c[r>>2]=e;c[s>>2]=f;b=c[g>>2]|0;c[t>>2]=c[j>>2];a=c[t>>2]|0;ck(b,((c[a+4>>2]|0)-(c[a>>2]|0)|0)/1040|0);c[h>>2]=0;while(1){a=c[h>>2]|0;c[k>>2]=c[j>>2];t=c[k>>2]|0;if(!(a>>>0<(((c[t+4>>2]|0)-(c[t>>2]|0)|0)/1040|0)>>>0))break;a=c[h>>2]|0;c[l>>2]=c[j>>2];c[m>>2]=a;a=(c[c[l>>2]>>2]|0)+((c[m>>2]|0)*1040|0)|0;t=c[n>>2]|0;b=c[h>>2]|0;c[p>>2]=c[g>>2];c[q>>2]=b;dk(a,15,t,(c[c[p>>2]>>2]|0)+((c[q>>2]|0)*788|0)|0,c[r>>2]|0,c[s>>2]|0);c[h>>2]=(c[h>>2]|0)+1}i=o;return}function Ui(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;o=i;i=i+48|0;l=o;m=o+8|0;p=o+36|0;q=o+16|0;k=o+32|0;t=o+40|0;j=o+44|0;n=o+24|0;g=o+20|0;r=o+12|0;s=o+4|0;h=o+28|0;c[j>>2]=a;c[n>>2]=b;c[g>>2]=d;c[r>>2]=e;c[s>>2]=f;b=c[g>>2]|0;c[t>>2]=c[j>>2];a=c[t>>2]|0;Rj(b,((c[a+4>>2]|0)-(c[a>>2]|0)|0)/2832|0);c[h>>2]=0;while(1){a=c[h>>2]|0;c[k>>2]=c[j>>2];t=c[k>>2]|0;if(!(a>>>0<(((c[t+4>>2]|0)-(c[t>>2]|0)|0)/2832|0)>>>0))break;a=c[h>>2]|0;c[l>>2]=c[j>>2];c[m>>2]=a;a=(c[c[l>>2]>>2]|0)+((c[m>>2]|0)*2832|0)|0;t=c[n>>2]|0;b=c[h>>2]|0;c[p>>2]=c[g>>2];c[q>>2]=b;Sj(a,15,t,(c[c[p>>2]>>2]|0)+((c[q>>2]|0)*2132|0)|0,c[r>>2]|0,c[s>>2]|0);c[h>>2]=(c[h>>2]|0)+1}i=o;return}function Vi(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;o=i;i=i+48|0;l=o;m=o+8|0;p=o+36|0;q=o+16|0;k=o+32|0;t=o+40|0;j=o+44|0;n=o+24|0;g=o+20|0;r=o+12|0;s=o+4|0;h=o+28|0;c[j>>2]=a;c[n>>2]=b;c[g>>2]=d;c[r>>2]=e;c[s>>2]=f;b=c[g>>2]|0;c[t>>2]=c[j>>2];a=c[t>>2]|0;zj(b,((c[a+4>>2]|0)-(c[a>>2]|0)|0)/2096|0);c[h>>2]=0;while(1){a=c[h>>2]|0;c[k>>2]=c[j>>2];t=c[k>>2]|0;if(!(a>>>0<(((c[t+4>>2]|0)-(c[t>>2]|0)|0)/2096|0)>>>0))break;a=c[h>>2]|0;c[l>>2]=c[j>>2];c[m>>2]=a;a=(c[c[l>>2]>>2]|0)+((c[m>>2]|0)*2096|0)|0;t=c[n>>2]|0;b=c[h>>2]|0;c[p>>2]=c[g>>2];c[q>>2]=b;Aj(a,15,t,(c[c[p>>2]>>2]|0)+((c[q>>2]|0)*1580|0)|0,c[r>>2]|0,c[s>>2]|0);c[h>>2]=(c[h>>2]|0)+1}i=o;return}function Wi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;Hl(c[f>>2]|0,c[e>>2]|0);i=d;return}function Xi(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+16|0;h=g+6|0;k=g+5|0;j=g+4|0;l=g;a[k>>0]=b;a[j>>0]=e;c[l>>2]=f;f=c[l>>2]|0;if((f|0)==2){a[h>>0]=d[129912+(d[k>>0]|0)>>0]|0|(d[(d[j>>0]|0)+130168>>0]|0);l=a[h>>0]|0;i=g;return l|0}else if((f|0)==3){a[h>>0]=(c[130424+((d[k>>0]|0)<<2)>>2]<<3)+(c[130424+((d[j>>0]|0)<<2)>>2]|0);l=a[h>>0]|0;i=g;return l|0}else if((f|0)==0){a[h>>0]=(d[k>>0]|0)&63;l=a[h>>0]|0;i=g;return l|0}else if((f|0)==1){a[h>>0]=(d[k>>0]|0)>>2;l=a[h>>0]|0;i=g;return l|0}else{a[h>>0]=0;l=a[h>>0]|0;i=g;return l|0}return 0}function Yi(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Fl(c[d>>2]|0);i=b;return}function Zi(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Dl(c[d>>2]|0);i=b;return}function _i(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Bl(c[d>>2]|0);i=b;return}function $i(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=i;i=i+80|0;h=e+20|0;g=e+24|0;f=e+44|0;k=e+60|0;m=e+4|0;j=e+40|0;l=e+48|0;n=e+56|0;o=e+64|0;p=e+68|0;r=e+28|0;q=e;s=e+32|0;t=e+36|0;u=e+8|0;w=e+12|0;v=e+52|0;y=e+16|0;c[y>>2]=b;b=c[y>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=22;y=b+8|0;x=Gx(8)|0;c[x+0>>2]=0;c[x+4>>2]=0;aj(x);c[w>>2]=y;c[v>>2]=x;v=c[v>>2]|0;c[t>>2]=c[w>>2];c[u>>2]=v;t=c[t>>2]|0;c[s>>2]=u;s=c[c[s>>2]>>2]|0;c[r>>2]=t;c[q>>2]=s;q=c[q>>2]|0;c[o>>2]=c[r>>2];c[p>>2]=q;o=c[o>>2]|0;c[n>>2]=p;n=c[c[n>>2]>>2]|0;c[j>>2]=o;c[l>>2]=n;j=c[j>>2]|0;c[m>>2]=j;c[k>>2]=l;c[j>>2]=c[c[k>>2]>>2];c[b+32>>2]=0;c[b+36>>2]=0;bj(b+40|0,23,21);cj(b+56|0,8388608);c[b+68>>2]=0;c[b+72>>2]=Hx(4194304)|0;c[b+16>>2]=16;c[b+20>>2]=15;c[b+24>>2]=11;c[b+28>>2]=4;a[c[b+72>>2]>>0]=0;j=c[d>>2]|0;if((j|0)==0)c[b+12>>2]=0;else if((j|0)==1)c[b+12>>2]=1;c[f>>2]=b+8;c[g>>2]=c[f>>2];c[h>>2]=c[g>>2];dj(c[c[h>>2]>>2]|0,c[b+12>>2]|0);if((c[d>>2]|0)!=0){i=e;return}ej(b);i=e;return}function aj(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Al(c[d>>2]|0);i=b;return}function bj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;h=e+8|0;g=e+4|0;f=e;c[h>>2]=a;c[g>>2]=b;c[f>>2]=d;zl(c[h>>2]|0,c[g>>2]|0,c[f>>2]|0);i=e;return}function cj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;uj(c[f>>2]|0,c[e>>2]|0);i=d;return}function dj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;d=i;i=i+96|0;f=d+32|0;p=d+28|0;k=d;l=d+84|0;h=d+56|0;j=d+8|0;n=d+12|0;o=d+48|0;A=d+64|0;m=d+72|0;g=d+80|0;r=d+88|0;q=d+92|0;s=d+36|0;v=d+40|0;t=d+44|0;u=d+52|0;y=d+60|0;x=d+16|0;z=d+4|0;w=d+20|0;e=d+68|0;C=d+24|0;B=d+76|0;c[C>>2]=a;c[B>>2]=b;a=c[C>>2]|0;b=c[B>>2]|0;if((b|0)==1){e=Gx(33620008)|0;ul(e);c[A>>2]=a+4;c[m>>2]=e;e=c[A>>2]|0;c[o>>2]=e;c[n>>2]=c[o>>2];c[g>>2]=c[c[n>>2]>>2];C=c[m>>2]|0;c[l>>2]=e;c[k>>2]=c[l>>2];c[c[k>>2]>>2]=C;if((c[g>>2]|0)==0){i=d;return}c[p>>2]=e;c[f>>2]=c[p>>2];e=c[g>>2]|0;c[h>>2]=c[f>>2];c[j>>2]=e;e=c[j>>2]|0;if((e|0)==0){i=d;return}Ix(e);i=d;return}else if((b|0)==0){f=Gx(33620008)|0;tl(f);c[z>>2]=a;c[w>>2]=f;f=c[z>>2]|0;c[x>>2]=f;c[y>>2]=c[x>>2];c[e>>2]=c[c[y>>2]>>2];C=c[w>>2]|0;c[v>>2]=f;c[s>>2]=c[v>>2];c[c[s>>2]>>2]=C;if((c[e>>2]|0)==0){i=d;return}c[q>>2]=f;c[r>>2]=c[q>>2];e=c[e>>2]|0;c[t>>2]=c[r>>2];c[u>>2]=e;e=c[u>>2]|0;if((e|0)==0){i=d;return}Ix(e);i=d;return}else{i=d;return}}function ej(a){a=a|0;var b=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;p=i;i=i+96|0;o=p+84|0;f=p+56|0;g=p+44|0;u=p+32|0;t=p+76|0;s=p+8|0;x=p+12|0;w=p+64|0;v=p+72|0;r=p+80|0;q=p+88|0;e=p+36|0;b=p+40|0;y=p+48|0;j=p;h=p+60|0;k=p+16|0;l=p+68|0;m=p+4|0;n=p+20|0;c[y>>2]=a;a=c[y>>2]|0;c[p+52>>2]=121;if((c[32450]|0)!=0){a=a+8|0;c[g>>2]=a;a=c[g>>2]|0;c[f>>2]=a;a=c[f>>2]|0;c[o>>2]=a;a=c[o>>2]|0;a=c[a>>2]|0;y=c[32450]|0;kj(a,y);i=p;return}y=Gx(40)|0;ij(y);c[32450]=y;c[j>>2]=120;while(1){if((c[j>>2]|0)<0)break;c[h>>2]=24;while(1){if((c[h>>2]|0)<4)break;c[k>>2]=1<<c[129808+(c[h>>2]<<2)>>2];c[l>>2]=(c[k>>2]|0)-1;while(1){if((c[l>>2]|0)<0)break;y=da(c[j>>2]|0,c[k>>2]|0)|0;c[m>>2]=y+(c[l>>2]|0);qi(n,c[h>>2]|0,c[m>>2]|0);c[b>>2]=n;y=c[b>>2]|0;c[e>>2]=y;c[q>>2]=c[e>>2];c[r>>2]=c[q>>2];if(((d[c[r>>2]>>0]|0)&1|0)!=0){c[s>>2]=y;c[t>>2]=c[s>>2];c[u>>2]=c[t>>2];y=c[(c[u>>2]|0)+4>>2]|0}else{c[v>>2]=y;c[w>>2]=c[v>>2];c[x>>2]=c[w>>2];y=(d[c[x>>2]>>0]|0)>>1}if(y>>>0>=4)jj(c[32450]|0,n,c[h>>2]|0,c[m>>2]|0);Kn(n);c[l>>2]=(c[l>>2]|0)+ -1}c[h>>2]=(c[h>>2]|0)+ -1}c[j>>2]=(c[j>>2]|0)+ -1}a=a+8|0;c[g>>2]=a;a=c[g>>2]|0;c[f>>2]=a;a=c[f>>2]|0;c[o>>2]=a;a=c[o>>2]|0;a=c[a>>2]|0;y=c[32450]|0;kj(a,y);i=p;return}function fj(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;sl(c[d>>2]|0);i=b;return}function gj(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;rl(c[d>>2]|0);i=b;return}function hj(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;b=i;i=i+64|0;e=b+16|0;h=b+12|0;m=b+44|0;l=b+36|0;g=b+40|0;k=b+48|0;j=b+52|0;n=b+20|0;d=b;f=b+28|0;p=b+4|0;o=b+24|0;q=b+8|0;c[q>>2]=a;a=c[q>>2]|0;q=c[a+72>>2]|0;if((q|0)!=0)Jx(q);fj(a+56|0);gj(a+40|0);c[o>>2]=a+8;c[p>>2]=c[o>>2];c[n>>2]=c[p>>2];c[d>>2]=0;n=c[n>>2]|0;c[j>>2]=n;c[k>>2]=c[j>>2];c[f>>2]=c[c[k>>2]>>2];q=c[d>>2]|0;c[l>>2]=n;c[m>>2]=c[l>>2];c[c[m>>2]>>2]=q;if((c[f>>2]|0)==0){i=b;return}c[h>>2]=n;c[e>>2]=c[h>>2];d=c[f>>2]|0;c[b+32>>2]=c[e>>2];c[g>>2]=d;d=c[g>>2]|0;if((d|0)==0){i=b;return}sj(d);Ix(d);i=b;return}function ij(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;hl(c[d>>2]|0);i=b;return}function jj(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0;h=i;i=i+480|0;fa=h+224|0;ga=h+208|0;ha=h+412|0;ia=h+408|0;ja=h+144|0;ka=h+80|0;na=h+424|0;ma=h+456|0;oa=h+220|0;pa=h+140|0;qa=h+88|0;ra=h+76|0;W=h+72|0;V=h+64|0;U=h+68|0;Z=h+400|0;Y=h+284|0;X=h+264|0;ba=h+148|0;aa=h+136|0;$=h+132|0;_=h+92|0;ca=h+96|0;G=h+100|0;F=h+104|0;Q=h+108|0;L=h+112|0;da=h+116|0;J=h+120|0;I=h+124|0;H=h+128|0;T=h+396|0;S=h+372|0;R=h+280|0;K=h+272|0;P=h+260|0;N=h+256|0;O=h+152|0;ta=h+156|0;ua=h+160|0;va=h+164|0;wa=h+168|0;ya=h+172|0;xa=h+16|0;Aa=h+180|0;za=h+48|0;v=h+188|0;A=h+192|0;z=h+196|0;y=h+420|0;x=h+428|0;w=h+436|0;D=h+444|0;C=h+452|0;B=h+460|0;E=h+464|0;o=h+228|0;s=h+232|0;n=h+236|0;m=h+240|0;l=h+244|0;k=h+248|0;r=h+252|0;q=h+392|0;p=h+380|0;u=h+368|0;Da=h+364|0;Ca=h;Fa=h+276|0;Ea=h+40|0;La=h+288|0;Ha=h+292|0;Ia=h+296|0;Ja=h+300|0;Ka=h+304|0;Oa=h+308|0;Pa=h+312|0;Qa=h+316|0;Ra=h+320|0;Na=h+324|0;Sa=h+328|0;Ma=h+332|0;Ta=h+336|0;Ga=h+340|0;Ua=h+344|0;Va=h+348|0;Wa=h+352|0;Xa=h+176|0;Za=h+356|0;Ya=h+24|0;$a=h+360|0;_a=h+8|0;cb=h+184|0;bb=h+32|0;eb=h+376|0;db=h+56|0;hb=h+384|0;gb=h+388|0;fb=h+404|0;kb=h+84|0;t=h+60|0;ib=h+416|0;jb=h+200|0;ea=h+204|0;la=h+432|0;ab=h+212|0;sa=h+440|0;Ba=h+268|0;j=h+216|0;M=h+448|0;c[kb>>2]=b;c[t>>2]=e;c[ib>>2]=f;c[jb>>2]=g;f=c[kb>>2]|0;c[ea>>2]=(c[jb>>2]<<6)+(c[ib>>2]|0);g=c[t>>2]|0;c[hb>>2]=f;c[gb>>2]=g;gl(fb,c[hb>>2]|0,c[gb>>2]|0);a[db+0>>0]=a[fb+0>>0]|0;a[db+1>>0]=a[fb+1>>0]|0;a[db+2>>0]=a[fb+2>>0]|0;a[db+3>>0]=a[fb+3>>0]|0;c[eb>>2]=ab;g=c[eb>>2]|0;a[bb+0>>0]=a[db+0>>0]|0;a[bb+1>>0]=a[db+1>>0]|0;a[bb+2>>0]=a[db+2>>0]|0;a[bb+3>>0]=a[db+3>>0]|0;c[cb>>2]=g;g=c[cb>>2]|0;c[g+0>>2]=c[bb+0>>2];a[_a+0>>0]=a[ab+0>>0]|0;a[_a+1>>0]=a[ab+1>>0]|0;a[_a+2>>0]=a[ab+2>>0]|0;a[_a+3>>0]=a[ab+3>>0]|0;c[$a>>2]=la;g=c[$a>>2]|0;a[Ya+0>>0]=a[_a+0>>0]|0;a[Ya+1>>0]=a[_a+1>>0]|0;a[Ya+2>>0]=a[_a+2>>0]|0;a[Ya+3>>0]=a[_a+3>>0]|0;c[Za>>2]=g;c[Wa>>2]=c[Za>>2];c[Xa>>2]=Ya;g=c[Xa>>2]|0;c[Ua>>2]=c[Wa>>2];c[Va>>2]=g;c[c[Ua>>2]>>2]=c[c[Va>>2]>>2];c[Ta>>2]=f;c[Sa>>2]=c[Ta>>2];c[Qa>>2]=Na;c[Ra>>2]=-1;g=c[Ra>>2]|0;c[Oa>>2]=c[Qa>>2];c[Pa>>2]=g;c[c[Oa>>2]>>2]=0;c[Ma>>2]=c[Na>>2];c[La>>2]=Ma;c[Ja>>2]=Ga;c[Ka>>2]=0;g=c[Ka>>2]|0;c[Ha>>2]=c[Ja>>2];c[Ia>>2]=g;c[c[Ha>>2]>>2]=c[Ia>>2];a[Ea+0>>0]=a[Ga+0>>0]|0;a[Ea+1>>0]=a[Ga+1>>0]|0;a[Ea+2>>0]=a[Ga+2>>0]|0;a[Ea+3>>0]=a[Ga+3>>0]|0;c[Fa>>2]=Ba;g=c[Fa>>2]|0;a[Ca+0>>0]=a[Ea+0>>0]|0;a[Ca+1>>0]=a[Ea+1>>0]|0;a[Ca+2>>0]=a[Ea+2>>0]|0;a[Ca+3>>0]=a[Ea+3>>0]|0;c[Da>>2]=g;g=c[Da>>2]|0;c[g+0>>2]=c[Ca+0>>2];a[za+0>>0]=a[Ba+0>>0]|0;a[za+1>>0]=a[Ba+1>>0]|0;a[za+2>>0]=a[Ba+2>>0]|0;a[za+3>>0]=a[Ba+3>>0]|0;c[Aa>>2]=sa;g=c[Aa>>2]|0;a[xa+0>>0]=a[za+0>>0]|0;a[xa+1>>0]=a[za+1>>0]|0;a[xa+2>>0]=a[za+2>>0]|0;a[xa+3>>0]=a[za+3>>0]|0;c[ya>>2]=g;c[va>>2]=c[ya>>2];c[wa>>2]=xa;g=c[wa>>2]|0;c[ta>>2]=c[va>>2];c[ua>>2]=g;c[c[ta>>2]>>2]=c[c[ua>>2]>>2];c[qa>>2]=la;c[ra>>2]=sa;g=c[ra>>2]|0;c[oa>>2]=c[qa>>2];c[pa>>2]=g;g=c[pa>>2]|0;c[na>>2]=c[oa>>2];c[ma>>2]=g;if((c[c[na>>2]>>2]|0)==(c[c[ma>>2]>>2]|0)^1?(kb=c[ea>>2]|0,c[ka>>2]=la,c[ja>>2]=c[ka>>2],c[ia>>2]=(c[c[ja>>2]>>2]|0)+8,c[ha>>2]=c[ia>>2],c[ga>>2]=c[ha>>2],c[fa>>2]=c[ga>>2],(kb|0)>=(c[(c[fa>>2]|0)+12>>2]|0)):0){i=h;return}kb=c[ea>>2]|0;c[(Xk(f,c[t>>2]|0)|0)>>2]=kb;c[j>>2]=0;c[M>>2]=0;while(1){if((c[M>>2]|0)>=4)break;ea=c[M>>2]|0;c[_>>2]=c[t>>2];fa=c[_>>2]|0;c[$>>2]=fa;c[aa>>2]=c[$>>2];c[ba>>2]=c[aa>>2];if((d[c[ba>>2]>>0]&1|0)!=0){c[U>>2]=fa;c[V>>2]=c[U>>2];c[W>>2]=c[V>>2];fa=c[(c[W>>2]|0)+4>>2]|0}else{c[X>>2]=fa;c[Y>>2]=c[X>>2];c[Z>>2]=c[Y>>2];fa=d[c[Z>>2]>>0]>>1}if(!(ea>>>0<fa>>>0))break;ea=c[M>>2]|0;c[N>>2]=c[t>>2];c[O>>2]=ea;c[P>>2]=c[N>>2];c[K>>2]=c[P>>2];ea=c[K>>2]|0;c[R>>2]=ea;c[S>>2]=c[R>>2];c[T>>2]=c[S>>2];if((d[c[T>>2]>>0]&1|0)!=0){c[Q>>2]=ea;c[F>>2]=c[Q>>2];c[G>>2]=c[F>>2];ea=c[(c[G>>2]|0)+8>>2]|0}else{c[H>>2]=ea;c[I>>2]=c[H>>2];c[J>>2]=c[I>>2];c[da>>2]=(c[J>>2]|0)+1;c[L>>2]=c[da>>2];ea=c[L>>2]|0}c[ca>>2]=ea;c[j>>2]=(c[j>>2]|0)+(a[(c[ca>>2]|0)+(c[O>>2]|0)>>0]<<(c[M>>2]<<3));c[M>>2]=(c[M>>2]|0)+1}F=c[(Yk(f+20|0,j)|0)>>2]|0;c[E>>2]=c[t>>2];E=c[E>>2]|0;c[B>>2]=E;c[C>>2]=c[B>>2];c[D>>2]=c[C>>2];if((d[c[D>>2]>>0]&1|0)!=0){c[z>>2]=E;c[A>>2]=c[z>>2];c[v>>2]=c[A>>2];v=c[(c[v>>2]|0)+4>>2]|0}else{c[w>>2]=E;c[x>>2]=c[w>>2];c[y>>2]=c[x>>2];v=d[c[y>>2]>>0]>>1}if(!(F>>>0<v>>>0)){i=h;return}c[u>>2]=c[t>>2];t=c[u>>2]|0;c[p>>2]=t;c[q>>2]=c[p>>2];c[r>>2]=c[q>>2];if((d[c[r>>2]>>0]&1|0)!=0){c[n>>2]=t;c[s>>2]=c[n>>2];c[o>>2]=c[s>>2];k=c[(c[o>>2]|0)+4>>2]|0}else{c[k>>2]=t;c[l>>2]=c[k>>2];c[m>>2]=c[l>>2];k=d[c[m>>2]>>0]>>1}c[(Yk(f+20|0,j)|0)>>2]=k;i=h;return}function kj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;k=i;i=i+64|0;l=k+16|0;e=k+12|0;d=k+44|0;g=k+36|0;f=k+32|0;j=k+40|0;m=k+48|0;n=k+52|0;o=k+20|0;p=k;q=k+28|0;r=k+4|0;s=k+24|0;h=k+8|0;c[s>>2]=a;c[h>>2]=b;b=c[s>>2]|0;c[r>>2]=b;c[q>>2]=c[r>>2];c[p>>2]=c[q>>2];if((c[c[p>>2]>>2]|0)!=0){c[o>>2]=b;c[n>>2]=c[o>>2];c[m>>2]=c[n>>2];Vk(c[c[m>>2]>>2]|0,c[h>>2]|0)}c[d>>2]=b+4;c[e>>2]=c[d>>2];c[l>>2]=c[e>>2];if((c[c[l>>2]>>2]|0)==0){i=k;return}c[j>>2]=b+4;c[f>>2]=c[j>>2];c[g>>2]=c[f>>2];Wk(c[c[g>>2]>>2]|0,c[h>>2]|0);i=k;return}function lj(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;e=b;c[e>>2]=a;e=c[e>>2]|0;d=e+68|0;a=c[e+72>>2]|0;if((c[e+4>>2]|0)==16){hi(1,0,0,d,a);i=b;return}else{hi(1,1,0,d,a);d=(c[e+4>>2]|0)-17|0;hi(3,d,((d|0)<0)<<31>>31,e+68|0,c[e+72>>2]|0);i=b;return}}function mj(b,e,f,g,h,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0;m=i;i=i+464|0;A=m+100|0;l=m+204|0;y=m+4|0;w=m+180|0;x=m+88|0;D=m+92|0;E=m+12|0;B=m+168|0;C=m+16|0;_=m+20|0;$=m+28|0;aa=m+32|0;Z=m+36|0;V=m+164|0;W=m+48|0;X=m+52|0;U=m+56|0;Q=m+64|0;R=m+200|0;S=m+208|0;P=m+216|0;G=m+96|0;I=m+104|0;H=m+108|0;J=m+160|0;L=m+112|0;K=m+116|0;M=m+120|0;N=m+124|0;ba=m+132|0;Y=m+136|0;T=m+140|0;O=m+144|0;ca=m+148|0;da=m+152|0;ea=m+156|0;q=m+8|0;s=m;t=m+448|0;o=m+176|0;n=m+68|0;F=m+449|0;v=m+188|0;k=m+76|0;p=m+212|0;z=m+224|0;u=m+72|0;r=m+172|0;c[ea>>2]=b;c[q>>2]=e;c[s>>2]=f;a[t>>0]=g&1;c[o>>2]=h;c[n>>2]=j;j=c[ea>>2]|0;a[F>>0]=0;c[da>>2]=v;c[ca>>2]=c[da>>2];c[ba>>2]=c[ca>>2];e=c[ba>>2]|0;c[m+128>>2]=e;c[$>>2]=Z;c[aa>>2]=-1;b=c[aa>>2]|0;c[_>>2]=c[$>>2];c[m+24>>2]=b;c[c[_>>2]>>2]=0;c[Y>>2]=c[Z>>2];c[m+40>>2]=Y;c[e>>2]=0;c[W>>2]=U;c[X>>2]=-1;b=c[X>>2]|0;c[V>>2]=c[W>>2];c[m+44>>2]=b;c[c[V>>2]>>2]=0;c[T>>2]=c[U>>2];c[m+60>>2]=T;c[e+4>>2]=0;c[R>>2]=P;c[S>>2]=-1;b=c[S>>2]|0;c[Q>>2]=c[R>>2];c[m+184>>2]=b;c[c[Q>>2]>>2]=0;c[O>>2]=c[P>>2];c[m+440>>2]=O;c[M>>2]=e+8;c[N>>2]=0;e=c[N>>2]|0;c[L>>2]=c[M>>2];c[K>>2]=e;e=c[L>>2]|0;c[J>>2]=K;b=c[c[J>>2]>>2]|0;c[I>>2]=e;c[H>>2]=b;b=c[I>>2]|0;c[m+444>>2]=b;c[G>>2]=H;c[b>>2]=c[c[G>>2]>>2];if((c[q>>2]|0)>>>0>0){nj(j+40|0,c[s>>2]|0,c[q>>2]|0);ea=c[j+36>>2]&8388607;ea=(oj(j+40|0)|0)+ea|0;a[F>>0]=(ji(ea,c[q>>2]|0,.75)|0)&1;ea=a[F>>0]&1;g=c[j+36>>2]|0;h=c[q>>2]|0;F=oj(j+40|0)|0;f=j+56|0;if(ea){c[B>>2]=f;c[C>>2]=0;qm(g,h,8388607,8388607,F,(c[c[B>>2]>>2]|0)+(c[C>>2]<<2)|0)}else{c[D>>2]=f;c[E>>2]=0;tm(g,h,8388607,8388607,F,(c[c[D>>2]>>2]|0)+(c[E>>2]<<2)|0)}ba=c[q>>2]|0;ca=c[j+36>>2]|0;da=oj(j+40|0)|0;c[w>>2]=j+56;c[x>>2]=0;ea=(c[c[w>>2]>>2]|0)+(c[x>>2]<<2)|0;c[y>>2]=j+8;c[l>>2]=c[y>>2];c[A>>2]=c[l>>2];hd(ba,ca,da,ea,8388607,4194288,c[c[A>>2]>>2]|0,c[j+12>>2]|0,v);pi(v,c[j+36>>2]|0,4194288,j+16|0,j+32|0)}c[k>>2]=(c[j>>2]|0)==1?12:0;c[k+4>>2]=(c[j>>2]|0)==1?1:0;c[k+8>>2]=3;c[p>>2]=c[j+68>>2];pj(z);da=oj(j+40|0)|0;Ni(k,v,da,c[j+36>>2]|0,8388607,z);da=a[t>>0]&1;ea=oj(j+40|0)|0;Si(z,da,ea,8388607,j+36|0,j+68|0,c[j+72>>2]|0);ea=c[j+68>>2]|0;c[u>>2]=(a[t>>0]&1?ea+7|0:ea)>>3;c[u>>2]=(c[u>>2]|0)-(c[p>>2]>>3);if(((c[q>>2]|0)+4|0)>>>0<(c[u>>2]|0)>>>0){c[j+68>>2]=c[p>>2];ea=(c[j+72>>2]|0)+(c[j+68>>2]>>3)|0;a[ea>>0]=(d[ea>>0]|0)&(1<<(c[j+68>>2]&7))-1;ki(c[q>>2]|0,0,1,j+68|0,c[j+72>>2]|0);c[r>>2]=(c[j+68>>2]|0)+7>>3;qz(c[n>>2]|0,c[j+72>>2]|0,c[r>>2]|0)|0;qz((c[n>>2]|0)+(c[r>>2]|0)|0,c[s>>2]|0,c[q>>2]|0)|0;c[c[o>>2]>>2]=(c[r>>2]|0)+(c[q>>2]|0);if(a[t>>0]&1){a[(c[n>>2]|0)+(c[c[o>>2]>>2]|0)>>0]=3;ea=c[o>>2]|0;c[ea>>2]=(c[ea>>2]|0)+1}c[j+68>>2]=0;a[c[j+72>>2]>>0]=0;qj(z);ee(v);i=m;return}qz(c[n>>2]|0,c[j+72>>2]|0,c[u>>2]|0)|0;c[c[o>>2]>>2]=c[u>>2];if(a[t>>0]&1){c[j+68>>2]=0;a[c[j+72>>2]>>0]=0;qj(z);ee(v);i=m;return}else{ea=j+68|0;c[ea>>2]=(c[ea>>2]|0)-(c[u>>2]<<3);a[(c[j+72>>2]|0)+(c[j+68>>2]>>3)>>0]=a[(c[j+72>>2]|0)+(c[u>>2]|0)>>0]|0;qj(z);ee(v);i=m;return}}function nj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;o=i;i=i+64|0;n=o+24|0;f=o+8|0;k=o+20|0;l=o+32|0;g=o;q=o+44|0;p=o+48|0;s=o+36|0;j=o+40|0;m=o+28|0;h=o+12|0;r=o+4|0;c[s>>2]=b;c[j>>2]=d;c[m>>2]=e;e=c[s>>2]|0;c[h>>2]=c[e+8>>2]&(1<<c[e>>2])-1;Uk(e,c[j>>2]|0,c[m>>2]|0);b=(c[e+12>>2]|0)+(c[h>>2]|0)|0;d=c[j>>2]|0;if(((c[h>>2]|0)+(c[m>>2]|0)|0)>>>0<=1<<c[e>>2]>>>0){qz(b|0,d|0,c[m>>2]|0)|0;b=c[m>>2]|0;s=e+8|0;d=c[s>>2]|0;b=d+b|0;c[s>>2]=b;i=o;return}else{c[r>>2]=(1<<c[e>>2])+(1<<c[e+4>>2])-(c[h>>2]|0);c[q>>2]=m;c[p>>2]=r;s=c[q>>2]|0;r=c[p>>2]|0;a[g+0>>0]=a[o+52>>0]|0;c[k>>2]=s;c[l>>2]=r;r=c[l>>2]|0;s=c[k>>2]|0;c[o+16>>2]=g;c[n>>2]=r;c[f>>2]=s;qz(b|0,d|0,c[((c[c[n>>2]>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0?c[l>>2]|0:c[k>>2]|0)>>2]|0)|0;qz(c[e+12>>2]|0,(c[j>>2]|0)+((1<<c[e>>2])-(c[h>>2]|0))|0,(c[m>>2]|0)-((1<<c[e>>2])-(c[h>>2]|0))|0)|0;b=c[m>>2]|0;s=e+8|0;d=c[s>>2]|0;b=d+b|0;c[s>>2]=b;i=o;return}}function oj(a){a=a|0;var b=0,d=0;d=i;i=i+16|0;b=d;c[b>>2]=a;i=d;return c[(c[b>>2]|0)+12>>2]|0}function pj(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Rk(c[d>>2]|0);i=b;return}function qj(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Ok(c[d>>2]|0);i=b;return}function rj(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;r=i;i=i+144|0;v=r+16|0;j=r+36|0;x=r+12|0;h=r+8|0;k=r+32|0;l=r+40|0;n=r+48|0;u=r+124|0;w=r+20|0;s=r;q=r+28|0;o=r+4|0;p=r+128|0;t=r+44|0;m=r+24|0;c[x>>2]=d;c[h>>2]=e;c[k>>2]=f;c[l>>2]=g;if((c[x>>2]|0)==0){a[c[l>>2]>>0]=6;c[c[k>>2]>>2]=1;c[j>>2]=1;d=c[j>>2]|0;i=r;return d|0}c[u+0>>2]=c[b+0>>2];c[v+0>>2]=c[u+0>>2];$i(n,v);lj(n);c[w>>2]=2097152;c[s>>2]=c[c[k>>2]>>2];c[q>>2]=(c[h>>2]|0)+(c[x>>2]|0);c[c[k>>2]>>2]=0;while(1){if(!((c[h>>2]|0)>>>0<(c[q>>2]|0)>>>0))break;c[o>>2]=2097152;a[p>>0]=0;if((c[o>>2]|0)>=((c[q>>2]|0)-(c[h>>2]|0)|0)){c[o>>2]=(c[q>>2]|0)-(c[h>>2]|0);a[p>>0]=1}c[t>>2]=c[s>>2];mj(n,c[o>>2]|0,c[h>>2]|0,a[p>>0]&1,t,(c[l>>2]|0)+(c[c[k>>2]>>2]|0)|0);c[h>>2]=(c[h>>2]|0)+(c[o>>2]|0);d=c[k>>2]|0;c[d>>2]=(c[d>>2]|0)+(c[t>>2]|0);c[s>>2]=(c[s>>2]|0)-(c[t>>2]|0)}c[j>>2]=1;c[m>>2]=1;hj(n);d=c[j>>2]|0;i=r;return d|0}function sj(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;tj(c[d>>2]|0);i=b;return}function tj(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;b=i;i=i+112|0;e=b+100|0;h=b+92|0;n=b+32|0;m=b+36|0;g=b+84|0;d=b+8|0;l=b+12|0;k=b+60|0;s=b+16|0;j=b+20|0;f=b+80|0;r=b+88|0;q=b+96|0;u=b+104|0;p=b+40|0;x=b+56|0;z=b+44|0;t=b+52|0;A=b+4|0;B=b+64|0;w=b+72|0;y=b+24|0;v=b+76|0;C=b;D=b+68|0;E=b+28|0;c[E>>2]=a;a=c[E>>2]|0;c[D>>2]=a+4;c[C>>2]=c[D>>2];c[w>>2]=c[C>>2];c[y>>2]=0;w=c[w>>2]|0;c[B>>2]=w;c[A>>2]=c[B>>2];c[v>>2]=c[c[A>>2]>>2];y=c[y>>2]|0;c[z>>2]=w;c[x>>2]=c[z>>2];c[c[x>>2]>>2]=y;if((c[v>>2]|0)!=0?(c[p>>2]=w,c[u>>2]=c[p>>2],o=c[v>>2]|0,c[b+48>>2]=c[u>>2],c[t>>2]=o,o=c[t>>2]|0,(o|0)!=0):0)Ix(o);c[q>>2]=a;c[r>>2]=c[q>>2];c[s>>2]=c[r>>2];c[j>>2]=0;o=c[s>>2]|0;c[k>>2]=o;c[l>>2]=c[k>>2];c[f>>2]=c[c[l>>2]>>2];E=c[j>>2]|0;c[m>>2]=o;c[n>>2]=c[m>>2];c[c[n>>2]>>2]=E;if((c[f>>2]|0)==0){i=b;return}c[h>>2]=o;c[e>>2]=c[h>>2];E=c[f>>2]|0;c[g>>2]=c[e>>2];c[d>>2]=E;d=c[d>>2]|0;if((d|0)==0){i=b;return}Ix(d);i=b;return}function uj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;d=i;i=i+144|0;A=d+48|0;C=d+92|0;B=d+108|0;z=d+124|0;v=d+12|0;x=d+16|0;w=d+20|0;u=d+24|0;q=d+96|0;s=d+112|0;r=d+120|0;p=d+128|0;f=d+52|0;h=d+60|0;g=d+64|0;k=d+68|0;j=d+72|0;l=d+4|0;m=d;n=d+88|0;D=d+32|0;y=d+36|0;t=d+100|0;o=d+40|0;E=d+116|0;e=d+44|0;c[E>>2]=a;c[e>>2]=b;b=c[E>>2]|0;c[D>>2]=b;a=c[D>>2]|0;c[d+84>>2]=a;c[C>>2]=z;c[B>>2]=-1;B=c[B>>2]|0;c[A>>2]=c[C>>2];c[d+76>>2]=B;c[c[A>>2]>>2]=0;c[y>>2]=c[z>>2];c[d+8>>2]=y;c[a>>2]=0;c[x>>2]=u;c[w>>2]=-1;w=c[w>>2]|0;c[v>>2]=c[x>>2];c[d+80>>2]=w;c[c[v>>2]>>2]=0;c[t>>2]=c[u>>2];c[d+28>>2]=t;c[a+4>>2]=0;c[s>>2]=p;c[r>>2]=-1;r=c[r>>2]|0;c[q>>2]=c[s>>2];c[d+104>>2]=r;c[c[q>>2]>>2]=0;c[o>>2]=c[p>>2];c[d+132>>2]=o;c[m>>2]=a+8;c[n>>2]=0;a=c[n>>2]|0;c[j>>2]=c[m>>2];c[l>>2]=a;j=c[j>>2]|0;c[k>>2]=l;a=c[c[k>>2]>>2]|0;c[h>>2]=j;c[g>>2]=a;a=c[h>>2]|0;c[d+56>>2]=a;c[f>>2]=g;c[a>>2]=c[c[f>>2]>>2];if(!((c[e>>2]|0)>>>0>0)){i=d;return}vj(b,c[e>>2]|0);wj(b,c[e>>2]|0);i=d;return}function vj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;k=i;i=i+64|0;d=k+36|0;e=k+8|0;l=k+32|0;j=k+40|0;f=k+48|0;g=k+16|0;m=k;n=k+24|0;o=k+4|0;p=k+28|0;h=k+20|0;c[p>>2]=a;c[h>>2]=b;b=c[p>>2]|0;a=c[h>>2]|0;if(a>>>0>(yj(b)|0)>>>0)Zt(b);else{c[o>>2]=b;c[n>>2]=(c[o>>2]|0)+8;c[m>>2]=c[n>>2];p=c[h>>2]|0;c[e>>2]=c[m>>2];c[l>>2]=p;p=c[l>>2]|0;c[k+44>>2]=c[e>>2];c[d>>2]=p;c[k+12>>2]=0;p=Gx(c[d>>2]<<2)|0;c[b+4>>2]=p;c[b>>2]=p;p=(c[b>>2]|0)+(c[h>>2]<<2)|0;c[g>>2]=b;c[f>>2]=(c[g>>2]|0)+8;c[j>>2]=c[f>>2];c[c[j>>2]>>2]=p;i=k;return}}function wj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;d=i;i=i+48|0;h=d+28|0;j=d+16|0;k=d+4|0;l=d+8|0;m=d+32|0;n=d;o=d+12|0;e=d+24|0;f=d+20|0;c[o>>2]=a;c[e>>2]=b;a=c[o>>2]|0;c[n>>2]=a;c[m>>2]=(c[n>>2]|0)+8;c[l>>2]=c[m>>2];c[f>>2]=c[l>>2];do{o=c[f>>2]|0;c[h>>2]=c[a+4>>2];b=c[h>>2]|0;c[j>>2]=o;c[k>>2]=b;b=c[k>>2]|0;if((b|0)!=0)g[b>>2]=0.0;o=a+4|0;c[o>>2]=(c[o>>2]|0)+4;c[e>>2]=(c[e>>2]|0)+ -1}while((c[e>>2]|0)>>>0>0);i=d;return}function xj(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=i;i=i+144|0;w=d+48|0;B=d+8|0;C=d+84|0;A=d;x=d+16|0;y=d+4|0;z=d+132|0;v=d+80|0;u=d+44|0;t=d+20|0;E=d+24|0;e=d+28|0;D=d+32|0;g=d+36|0;f=d+40|0;s=d+76|0;l=d+124|0;k=d+128|0;j=d+52|0;h=d+56|0;p=d+64|0;q=d+68|0;r=d+92|0;m=d+96|0;n=d+100|0;o=d+104|0;I=d+108|0;K=d+116|0;J=d+120|0;H=d+88|0;F=d+72|0;G=d+12|0;c[F>>2]=b;b=c[F>>2]|0;F=c[b>>2]|0;c[K>>2]=H;c[J>>2]=-1;J=c[J>>2]|0;c[I>>2]=c[K>>2];c[d+112>>2]=J;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[d+60>>2]=G;if((F|0)==0){i=d;return}c[D>>2]=b;K=c[D>>2]|0;D=c[K>>2]|0;c[E>>2]=K;c[e>>2]=D;D=c[E>>2]|0;while(1){if((c[e>>2]|0)==(c[D+4>>2]|0))break;c[t>>2]=D;c[u>>2]=(c[t>>2]|0)+8;c[v>>2]=c[u>>2];K=c[v>>2]|0;I=D+4|0;J=(c[I>>2]|0)+ -4|0;c[I>>2]=J;c[w>>2]=J;J=c[w>>2]|0;c[x>>2]=K;c[y>>2]=J;J=c[x>>2]|0;K=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=J;c[C>>2]=K}c[s>>2]=b;c[f>>2]=(c[s>>2]|0)+8;c[g>>2]=c[f>>2];I=c[g>>2]|0;K=c[b>>2]|0;c[h>>2]=b;J=c[h>>2]|0;c[j>>2]=J;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];J=((c[c[l>>2]>>2]|0)-(c[J>>2]|0)|0)/4|0;c[m>>2]=I;c[n>>2]=K;c[o>>2]=J;J=c[n>>2]|0;K=c[o>>2]|0;c[p>>2]=c[m>>2];c[q>>2]=J;c[r>>2]=K;Ix(c[q>>2]|0);i=d;return}function yj(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+80|0;q=h+44|0;r=h+40|0;s=h+8|0;u=h+12|0;t=h+76|0;k=h+36|0;g=h+16|0;f=h+20|0;d=h+68|0;e=h+32|0;l=h;n=h+48|0;j=h+52|0;m=h+77|0;v=h+60|0;w=h+64|0;x=h+28|0;y=h+24|0;p=h+56|0;o=h+72|0;c[y>>2]=b;c[x>>2]=c[y>>2];c[w>>2]=(c[x>>2]|0)+8;c[v>>2]=c[w>>2];c[u>>2]=c[v>>2];b=c[u>>2]|0;a[s+0>>0]=a[t+0>>0]|0;c[r>>2]=b;c[q>>2]=c[r>>2];c[p>>2]=1073741823;c[o>>2]=4294967295/2|0;c[n>>2]=p;c[j>>2]=o;b=c[n>>2]|0;j=c[j>>2]|0;a[l+0>>0]=a[m+0>>0]|0;c[d>>2]=b;c[e>>2]=j;j=c[e>>2]|0;b=c[d>>2]|0;c[k>>2]=l;c[g>>2]=j;c[f>>2]=b;i=h;return c[((c[c[g>>2]>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0?c[e>>2]|0:c[d>>2]|0)>>2]|0}function zj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;o=i;i=i+80|0;m=o+36|0;n=o+4|0;g=o+28|0;q=o;e=o+32|0;f=o+8|0;p=o+68|0;l=o+24|0;k=o+60|0;j=o+64|0;v=o+40|0;h=o+44|0;t=o+48|0;u=o+52|0;w=o+56|0;x=o+16|0;s=o+20|0;r=o+12|0;c[x>>2]=b;c[s>>2]=d;d=c[x>>2]|0;c[w>>2]=d;b=c[w>>2]|0;c[r>>2]=((c[b+4>>2]|0)-(c[b>>2]|0)|0)/1580|0;if((c[r>>2]|0)>>>0<(c[s>>2]|0)>>>0){Ij(d,(c[s>>2]|0)-(c[r>>2]|0)|0);i=o;return}if(!((c[r>>2]|0)>>>0>(c[s>>2]|0)>>>0)){i=o;return}r=(c[d>>2]|0)+((c[s>>2]|0)*1580|0)|0;c[t>>2]=d;c[u>>2]=r;r=c[u>>2]|0;c[v>>2]=c[t>>2];c[h>>2]=r;r=c[v>>2]|0;while(1){if((c[h>>2]|0)==(c[r+4>>2]|0))break;c[j>>2]=r;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];x=c[l>>2]|0;b=r+4|0;w=(c[b>>2]|0)+ -1580|0;c[b>>2]=w;c[m>>2]=w;w=c[m>>2]|0;c[e>>2]=x;c[f>>2]=w;w=c[e>>2]|0;x=c[f>>2]|0;a[q+0>>0]=a[p+0>>0]|0;c[n>>2]=w;c[g>>2]=x}i=o;return}function Aj(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;l=i;i=i+80|0;u=l+28|0;v=l+24|0;s=l+52|0;o=l+60|0;p=l+40|0;q=l+48|0;r=l+56|0;w=l+64|0;n=l+68|0;j=l;m=l+36|0;h=l+4|0;y=l+32|0;k=l+8|0;x=l+44|0;t=l+12|0;c[r>>2]=a;c[w>>2]=b;c[n>>2]=d;c[j>>2]=e;c[m>>2]=f;c[h>>2]=g;lz(c[j>>2]|0,0,520)|0;lz((c[j>>2]|0)+520|0,0,1040)|0;a=(c[j>>2]|0)+1564|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[(c[j>>2]|0)+1560>>2]=0;c[y>>2]=(c[n>>2]|0)-1;c[k>>2]=0;while(1){if((c[y>>2]|0)==0)break;c[y>>2]=c[y>>2]>>1;c[k>>2]=(c[k>>2]|0)+1}c[x>>2]=0;while(1){if(!((c[x>>2]|0)>>>0<(c[n>>2]|0)>>>0))break;if((c[(c[r>>2]|0)+(c[x>>2]<<2)>>2]|0)>0){if((c[(c[j>>2]|0)+1560>>2]|0)<4)c[(c[j>>2]|0)+1564+(c[(c[j>>2]|0)+1560>>2]<<2)>>2]=c[x>>2];a=(c[j>>2]|0)+1560|0;c[a>>2]=(c[a>>2]|0)+1}c[x>>2]=(c[x>>2]|0)+1}if((c[(c[j>>2]|0)+1560>>2]|0)<=1){hi(2,1,0,c[m>>2]|0,c[h>>2]|0);hi(2,0,0,c[m>>2]|0,c[h>>2]|0);a=c[(c[j>>2]|0)+1564>>2]|0;hi(c[k>>2]|0,a,((a|0)<0)<<31>>31,c[m>>2]|0,c[h>>2]|0);i=l;return}if((c[n>>2]|0)>=50?(c[(c[j>>2]|0)+1560>>2]|0)>=16:0){re(t,c[n>>2]|0);c[p>>2]=t;c[q>>2]=0;qz((c[c[p>>2]>>2]|0)+(c[q>>2]<<2)|0,c[r>>2]|0,c[n>>2]<<2|0)|0;a=c[n>>2]|0;c[s>>2]=t;c[o>>2]=0;Tl(a,(c[c[s>>2]>>2]|0)+(c[o>>2]<<2)|0)|0;c[u>>2]=t;c[v>>2]=0;Ml((c[c[u>>2]>>2]|0)+(c[v>>2]<<2)|0,c[n>>2]|0,c[w>>2]|0,c[j>>2]|0);we(t)}else Ml(c[r>>2]|0,c[n>>2]|0,c[w>>2]|0,c[j>>2]|0);Wl(c[j>>2]|0,c[n>>2]|0,(c[j>>2]|0)+520|0);o=c[j>>2]|0;n=c[n>>2]|0;if((c[(c[j>>2]|0)+1560>>2]|0)<=4){Bj(o,n,c[k>>2]|0,c[m>>2]|0,c[h>>2]|0);i=l;return}else{Cj(o,n,c[m>>2]|0,c[h>>2]|0);i=l;return}}function Bj(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;p=i;i=i+64|0;j=p+52|0;m=p;n=p+44|0;o=p+48|0;r=p+56|0;l=p+16|0;h=p+40|0;q=p+36|0;s=p+8|0;k=p+4|0;c[j>>2]=a;c[p+32>>2]=b;c[m>>2]=e;c[n>>2]=f;c[o>>2]=g;c[r>>2]=c[j>>2];c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[(c[j>>2]|0)+1560>>2]|0))break;c[l+(c[h>>2]<<2)>>2]=c[(c[j>>2]|0)+1564+(c[h>>2]<<2)>>2];c[h>>2]=(c[h>>2]|0)+1}c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[(c[j>>2]|0)+1560>>2]|0))break;c[q>>2]=(c[h>>2]|0)+1;while(1){if((c[q>>2]|0)>=(c[(c[j>>2]|0)+1560>>2]|0))break;if((d[(c[r>>2]|0)+(c[l+(c[q>>2]<<2)>>2]|0)>>0]|0|0)<(d[(c[r>>2]|0)+(c[l+(c[h>>2]<<2)>>2]|0)>>0]|0|0)){c[s>>2]=c[l+(c[h>>2]<<2)>>2];c[l+(c[h>>2]<<2)>>2]=c[l+(c[q>>2]<<2)>>2];c[l+(c[q>>2]<<2)>>2]=c[s>>2]}c[q>>2]=(c[q>>2]|0)+1}c[h>>2]=(c[h>>2]|0)+1}hi(2,1,0,c[n>>2]|0,c[o>>2]|0);a=(c[(c[j>>2]|0)+1560>>2]|0)-1|0;hi(2,a,((a|0)<0)<<31>>31,c[n>>2]|0,c[o>>2]|0);c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[(c[j>>2]|0)+1560>>2]|0))break;a=c[l+(c[k>>2]<<2)>>2]|0;hi(c[m>>2]|0,a,((a|0)<0)<<31>>31,c[n>>2]|0,c[o>>2]|0);c[k>>2]=(c[k>>2]|0)+1}if((c[(c[j>>2]|0)+1560>>2]|0)!=4){i=p;return}if((((d[(c[r>>2]|0)+(c[l>>2]|0)>>0]|0|0)==2?(d[(c[r>>2]|0)+(c[l+4>>2]|0)>>0]|0|0)==2:0)?(d[(c[r>>2]|0)+(c[l+8>>2]|0)>>0]|0|0)==2:0)?(d[(c[r>>2]|0)+(c[l+12>>2]|0)>>0]|0|0)==2:0){hi(1,0,0,c[n>>2]|0,c[o>>2]|0);i=p;return}hi(1,1,0,c[n>>2]|0,c[o>>2]|0);i=p;return}function Cj(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;p=i;i=i+1232|0;s=p+188|0;q=p+164|0;m=p+176|0;g=p+172|0;r=p+180|0;l=p+192|0;o=p+712|0;h=p+184|0;k=p;n=p+168|0;j=p+88|0;c[s>>2]=a;c[q>>2]=b;c[m>>2]=e;c[g>>2]=f;c[r>>2]=c[s>>2];c[h>>2]=0;Ul(c[r>>2]|0,c[q>>2]|0,l,o,h);Dj(k);e=k+0|0;f=e+72|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));c[n>>2]=0;while(1){if((c[n>>2]|0)>=(c[h>>2]|0))break;Ej(k,d[l+(c[n>>2]|0)>>0]|0);c[n>>2]=(c[n>>2]|0)+1}e=j+0|0;f=e+76|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));Fj(k,5,18,j);li(j,c[m>>2]|0,c[g>>2]|0);mi(l,o,c[h>>2]|0,j,c[m>>2]|0,c[g>>2]|0);i=p;return}function Dj(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Gj(c[d>>2]|0);i=b;return}function Ej(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;a=c[f>>2]|0;b=a+(c[e>>2]<<2)|0;c[b>>2]=(c[b>>2]|0)+1;a=a+72|0;c[a>>2]=(c[a>>2]|0)+1;i=d;return}function Fj(d,e,f,g){d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0;j=i;i=i+96|0;n=j+88|0;h=j+84|0;k=j+80|0;m=j+76|0;o=j+72|0;l=j;c[n>>2]=d;c[h>>2]=e;c[k>>2]=f;c[m>>2]=g;f=(c[m>>2]|0)+0|0;g=f+18|0;do{a[f>>0]=0;f=f+1|0}while((f|0)<(g|0));f=(c[m>>2]|0)+18|0;g=f+36|0;do{b[f>>1]=0;f=f+2|0}while((f|0)<(g|0));d=(c[m>>2]|0)+60|0;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[(c[m>>2]|0)+56>>2]=0;if((c[(c[n>>2]|0)+72>>2]|0)==0){i=j;return}c[o>>2]=0;while(1){if((c[o>>2]|0)>=18)break;if((c[(c[n>>2]|0)+(c[o>>2]<<2)>>2]|0)>0){if((c[(c[m>>2]|0)+56>>2]|0)<4)c[(c[m>>2]|0)+60+(c[(c[m>>2]|0)+56>>2]<<2)>>2]=c[o>>2];d=(c[m>>2]|0)+56|0;c[d>>2]=(c[d>>2]|0)+1}c[o>>2]=(c[o>>2]|0)+1}if((c[k>>2]|0)>=50?(c[(c[m>>2]|0)+56>>2]|0)>=16:0){f=l+0|0;n=(c[n>>2]|0)+0|0;g=f+72|0;do{c[f>>2]=c[n>>2];f=f+4|0;n=n+4|0}while((f|0)<(g|0));Tl(c[k>>2]|0,l)|0;Ml(l,c[k>>2]|0,c[h>>2]|0,c[m>>2]|0)}else Ml(c[n>>2]|0,c[k>>2]|0,c[h>>2]|0,c[m>>2]|0);Wl(c[m>>2]|0,c[k>>2]|0,(c[m>>2]|0)+18|0);i=j;return}function Gj(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Hj(c[d>>2]|0);i=b;return}function Hj(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b;c[d>>2]=a;d=c[d>>2]|0;e=d+0|0;a=e+72|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(a|0));c[d+72>>2]=0;i=b;return}function Ij(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;t=i;i=i+144|0;h=t+60|0;u=t+48|0;v=t+124|0;e=t+116|0;f=t+8|0;r=t;o=t+84|0;q=t+52|0;A=t+40|0;z=t+104|0;y=t+112|0;x=t+120|0;w=t+128|0;g=t+132|0;F=t+136|0;p=t+64|0;l=t+68|0;m=t+72|0;n=t+76|0;E=t+16|0;D=t+88|0;C=t+96|0;B=t+4|0;G=t+92|0;H=t+44|0;I=t+100|0;J=t+108|0;s=t+12|0;k=t+80|0;j=t+20|0;c[J>>2]=b;c[s>>2]=d;d=c[J>>2]|0;c[I>>2]=d;c[H>>2]=(c[I>>2]|0)+8;c[G>>2]=c[H>>2];if((((c[c[G>>2]>>2]|0)-(c[d+4>>2]|0)|0)/1580|0)>>>0>=(c[s>>2]|0)>>>0){Jj(d,c[s>>2]|0);i=t;return}c[B>>2]=d;c[C>>2]=(c[B>>2]|0)+8;c[D>>2]=c[C>>2];c[k>>2]=c[D>>2];c[E>>2]=d;B=c[E>>2]|0;B=(((c[B+4>>2]|0)-(c[B>>2]|0)|0)/1580|0)+(c[s>>2]|0)|0;c[F>>2]=d;c[p>>2]=B;B=c[F>>2]|0;c[l>>2]=Pj(B)|0;if((c[p>>2]|0)>>>0>(c[l>>2]|0)>>>0)Zt(B);c[w>>2]=B;c[x>>2]=c[w>>2];J=c[x>>2]|0;c[y>>2]=J;c[z>>2]=(c[y>>2]|0)+8;c[A>>2]=c[z>>2];c[m>>2]=((c[c[A>>2]>>2]|0)-(c[J>>2]|0)|0)/1580|0;if((c[m>>2]|0)>>>0>=(((c[l>>2]|0)>>>0)/2|0)>>>0)c[g>>2]=c[l>>2];else{c[n>>2]=c[m>>2]<<1;c[o>>2]=n;c[q>>2]=p;J=c[o>>2]|0;I=c[q>>2]|0;a[r+0>>0]=a[t+140>>0]|0;c[e>>2]=J;c[f>>2]=I;I=c[e>>2]|0;J=c[f>>2]|0;c[t+56>>2]=r;c[u>>2]=I;c[v>>2]=J;c[g>>2]=c[((c[c[u>>2]>>2]|0)>>>0<(c[c[v>>2]>>2]|0)>>>0?c[f>>2]|0:c[e>>2]|0)>>2]}I=c[g>>2]|0;c[h>>2]=d;J=c[h>>2]|0;Kj(j,I,((c[J+4>>2]|0)-(c[J>>2]|0)|0)/1580|0,c[k>>2]|0);Lj(j,c[s>>2]|0);Mj(d,j);Nj(j);i=t;return}function Jj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;g=d+28|0;h=d+16|0;j=d+4|0;k=d+8|0;l=d+32|0;m=d;n=d+12|0;e=d+24|0;f=d+20|0;c[n>>2]=a;c[e>>2]=b;a=c[n>>2]|0;c[m>>2]=a;c[l>>2]=(c[m>>2]|0)+8;c[k>>2]=c[l>>2];c[f>>2]=c[k>>2];do{n=c[f>>2]|0;c[g>>2]=c[a+4>>2];b=c[g>>2]|0;c[h>>2]=n;c[j>>2]=b;b=c[j>>2]|0;if((b|0)!=0)lz(b|0,0,1580)|0;n=a+4|0;c[n>>2]=(c[n>>2]|0)+1580;c[e>>2]=(c[e>>2]|0)+ -1}while((c[e>>2]|0)>>>0>0);i=d;return}function Kj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;k=f+12|0;j=f+8|0;h=f+4|0;g=f;c[k>>2]=a;c[j>>2]=b;c[h>>2]=d;c[g>>2]=e;Qj(c[k>>2]|0,c[j>>2]|0,c[h>>2]|0,c[g>>2]|0);i=f;return}function Lj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;g=d+28|0;h=d+16|0;j=d+4|0;k=d+8|0;l=d+32|0;m=d;n=d+12|0;e=d+24|0;f=d+20|0;c[n>>2]=a;c[e>>2]=b;a=c[n>>2]|0;c[m>>2]=a;c[l>>2]=(c[m>>2]|0)+12;c[k>>2]=c[l>>2];c[f>>2]=c[(c[k>>2]|0)+4>>2];do{n=c[f>>2]|0;c[g>>2]=c[a+8>>2];b=c[g>>2]|0;c[h>>2]=n;c[j>>2]=b;b=c[j>>2]|0;if((b|0)!=0)lz(b|0,0,1580)|0;n=a+8|0;c[n>>2]=(c[n>>2]|0)+1580;c[e>>2]=(c[e>>2]|0)+ -1}while((c[e>>2]|0)>>>0>0);i=d;return}function Mj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=i;i=i+144|0;F=d+108|0;H=d+88|0;G=d+80|0;E=d+48|0;C=d+8|0;z=d+12|0;D=d+84|0;B=d+16|0;y=d+20|0;A=d+24|0;w=d+28|0;t=d+32|0;x=d+104|0;v=d+112|0;s=d+120|0;u=d+128|0;m=d+136|0;q=d+52|0;r=d+56|0;n=d+60|0;o=d+64|0;p=d+68|0;k=d+72|0;g=d+76|0;l=d+4|0;j=d;f=d+92|0;h=d+96|0;K=d+100|0;J=d+40|0;I=d+116|0;L=d+44|0;e=d+124|0;c[L>>2]=a;c[e>>2]=b;a=c[L>>2]|0;c[I>>2]=a;c[J>>2]=(c[I>>2]|0)+8;c[K>>2]=c[J>>2];J=c[a>>2]|0;I=c[a+4>>2]|0;b=(c[e>>2]|0)+4|0;c[d+132>>2]=c[K>>2];c[F>>2]=J;c[H>>2]=I;c[G>>2]=b;c[E>>2]=((c[H>>2]|0)-(c[F>>2]|0)|0)/1580|0;b=c[G>>2]|0;c[b>>2]=(c[b>>2]|0)+((0-(c[E>>2]|0)|0)*1580|0);qz(c[c[G>>2]>>2]|0,c[F>>2]|0,(c[E>>2]|0)*1580|0)|0;b=(c[e>>2]|0)+4|0;c[B>>2]=a;c[y>>2]=b;c[D>>2]=c[B>>2];c[A>>2]=c[c[D>>2]>>2];c[C>>2]=c[y>>2];c[c[B>>2]>>2]=c[c[C>>2]>>2];c[z>>2]=A;c[c[y>>2]>>2]=c[c[z>>2]>>2];b=(c[e>>2]|0)+8|0;c[v>>2]=a+4;c[s>>2]=b;c[x>>2]=c[v>>2];c[u>>2]=c[c[x>>2]>>2];c[w>>2]=c[s>>2];c[c[v>>2]>>2]=c[c[w>>2]>>2];c[t>>2]=u;c[c[s>>2]>>2]=c[c[t>>2]>>2];c[r>>2]=a;c[q>>2]=(c[r>>2]|0)+8;c[m>>2]=c[q>>2];m=c[m>>2]|0;c[p>>2]=c[e>>2];c[o>>2]=(c[p>>2]|0)+12;c[n>>2]=c[o>>2];b=c[n>>2]|0;c[j>>2]=m;c[f>>2]=b;c[l>>2]=c[j>>2];c[h>>2]=c[c[l>>2]>>2];c[k>>2]=c[f>>2];c[c[j>>2]>>2]=c[c[k>>2]>>2];c[g>>2]=h;c[c[f>>2]>>2]=c[c[g>>2]>>2];c[c[e>>2]>>2]=c[(c[e>>2]|0)+4>>2];c[d+36>>2]=a;i=d;return}function Nj(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Oj(c[d>>2]|0);i=b;return}function Oj(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;r=i;i=i+128|0;l=r+72|0;k=r+44|0;j=r+12|0;h=r+104|0;g=r+24|0;f=r+16|0;q=r+20|0;p=r+76|0;d=r+52|0;e=r+28|0;m=r+32|0;n=r+36|0;o=r+40|0;w=r+108|0;B=r+112|0;C=r+116|0;A=r;x=r+56|0;y=r+60|0;z=r+120|0;v=r+68|0;u=r+88|0;t=r+92|0;E=r+96|0;s=r+100|0;G=r+8|0;F=r+80|0;I=r+84|0;H=r+121|0;J=r+48|0;D=r+64|0;c[D>>2]=b;D=c[D>>2]|0;c[J>>2]=D;J=c[J>>2]|0;b=c[J+4>>2]|0;c[F>>2]=J;c[I>>2]=b;F=c[F>>2]|0;b=c[I>>2]|0;a[G+0>>0]=a[H+0>>0]|0;c[E>>2]=F;c[s>>2]=b;b=c[E>>2]|0;while(1){if((c[s>>2]|0)==(c[b+8>>2]|0))break;c[t>>2]=b;c[u>>2]=(c[t>>2]|0)+12;c[v>>2]=c[u>>2];J=c[(c[v>>2]|0)+4>>2]|0;H=b+8|0;I=(c[H>>2]|0)+ -1580|0;c[H>>2]=I;c[w>>2]=I;I=c[w>>2]|0;c[x>>2]=J;c[y>>2]=I;I=c[x>>2]|0;J=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=I;c[C>>2]=J}if((c[D>>2]|0)==0){i=r;return}c[q>>2]=D;c[f>>2]=(c[q>>2]|0)+12;c[g>>2]=c[f>>2];H=c[(c[g>>2]|0)+4>>2]|0;J=c[D>>2]|0;c[h>>2]=D;I=c[h>>2]|0;c[j>>2]=I;c[k>>2]=(c[j>>2]|0)+12;c[l>>2]=c[k>>2];I=((c[c[l>>2]>>2]|0)-(c[I>>2]|0)|0)/1580|0;c[m>>2]=H;c[n>>2]=J;c[o>>2]=I;I=c[n>>2]|0;J=c[o>>2]|0;c[p>>2]=c[m>>2];c[d>>2]=I;c[e>>2]=J;Ix(c[d>>2]|0);i=r;return}function Pj(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+80|0;q=h+44|0;r=h+40|0;s=h+8|0;u=h+12|0;t=h+76|0;k=h+36|0;g=h+16|0;f=h+20|0;d=h+68|0;e=h+32|0;l=h;n=h+48|0;j=h+52|0;m=h+77|0;v=h+60|0;w=h+64|0;x=h+28|0;y=h+24|0;p=h+56|0;o=h+72|0;c[y>>2]=b;c[x>>2]=c[y>>2];c[w>>2]=(c[x>>2]|0)+8;c[v>>2]=c[w>>2];c[u>>2]=c[v>>2];b=c[u>>2]|0;a[s+0>>0]=a[t+0>>0]|0;c[r>>2]=b;c[q>>2]=c[r>>2];c[p>>2]=2718333;c[o>>2]=4294967295/2|0;c[n>>2]=p;c[j>>2]=o;b=c[n>>2]|0;j=c[j>>2]|0;a[l+0>>0]=a[m+0>>0]|0;c[d>>2]=b;c[e>>2]=j;j=c[e>>2]|0;b=c[d>>2]|0;c[k>>2]=l;c[g>>2]=j;c[f>>2]=b;i=h;return c[((c[c[g>>2]>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0?c[e>>2]|0:c[d>>2]|0)>>2]|0}function Qj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;q=i;i=i+176|0;C=q+64|0;x=q+60|0;z=q;B=q+148|0;A=q+156|0;y=q+56|0;E=q+12|0;G=q+112|0;F=q+16|0;D=q+20|0;H=q+24|0;J=q+28|0;I=q+32|0;p=q+36|0;g=q+40|0;r=q+108|0;m=q+144|0;n=q+160|0;f=q+164|0;u=q+68|0;v=q+76|0;w=q+80|0;t=q+84|0;o=q+92|0;h=q+96|0;j=q+100|0;N=q+104|0;O=q+124|0;P=q+44|0;M=q+8|0;Q=q+48|0;k=q+132|0;l=q+52|0;K=q+140|0;L=q+120|0;s=q+116|0;c[Q>>2]=a;c[k>>2]=b;c[l>>2]=d;c[K>>2]=e;e=c[Q>>2]|0;c[O>>2]=M;c[P>>2]=-1;b=c[P>>2]|0;c[N>>2]=c[O>>2];c[q+4>>2]=b;c[c[N>>2]>>2]=0;c[L>>2]=c[M>>2];c[q+128>>2]=L;b=c[K>>2]|0;c[H>>2]=e+12;c[J>>2]=0;c[I>>2]=b;b=c[J>>2]|0;d=c[I>>2]|0;c[G>>2]=c[H>>2];c[F>>2]=b;c[D>>2]=d;d=c[G>>2]|0;c[E>>2]=F;b=c[c[E>>2]>>2]|0;c[C>>2]=c[D>>2];a=c[C>>2]|0;c[B>>2]=d;c[A>>2]=b;c[y>>2]=a;a=c[B>>2]|0;c[z>>2]=A;c[a>>2]=c[c[z>>2]>>2];c[x>>2]=c[y>>2];c[a+4>>2]=c[x>>2];if((c[k>>2]|0)!=0){c[r>>2]=e;c[g>>2]=(c[r>>2]|0)+12;c[p>>2]=c[g>>2];Q=c[k>>2]|0;c[n>>2]=c[(c[p>>2]|0)+4>>2];c[f>>2]=Q;Q=c[f>>2]|0;c[q+136>>2]=c[n>>2];c[m>>2]=Q;c[q+152>>2]=0;Q=Gx((c[m>>2]|0)*1580|0)|0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P*1580|0)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P*1580|0)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}else{c[v>>2]=t;c[w>>2]=-1;Q=c[w>>2]|0;c[u>>2]=c[v>>2];c[q+72>>2]=Q;c[c[u>>2]>>2]=0;c[s>>2]=c[t>>2];c[q+88>>2]=s;Q=0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P*1580|0)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P*1580|0)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}}function Rj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;o=i;i=i+80|0;m=o+36|0;n=o+4|0;g=o+28|0;q=o;e=o+32|0;f=o+8|0;p=o+68|0;l=o+24|0;k=o+60|0;j=o+64|0;v=o+40|0;h=o+44|0;t=o+48|0;u=o+52|0;w=o+56|0;x=o+16|0;s=o+20|0;r=o+12|0;c[x>>2]=b;c[s>>2]=d;d=c[x>>2]|0;c[w>>2]=d;b=c[w>>2]|0;c[r>>2]=((c[b+4>>2]|0)-(c[b>>2]|0)|0)/2132|0;if((c[r>>2]|0)>>>0<(c[s>>2]|0)>>>0){Vj(d,(c[s>>2]|0)-(c[r>>2]|0)|0);i=o;return}if(!((c[r>>2]|0)>>>0>(c[s>>2]|0)>>>0)){i=o;return}r=(c[d>>2]|0)+((c[s>>2]|0)*2132|0)|0;c[t>>2]=d;c[u>>2]=r;r=c[u>>2]|0;c[v>>2]=c[t>>2];c[h>>2]=r;r=c[v>>2]|0;while(1){if((c[h>>2]|0)==(c[r+4>>2]|0))break;c[j>>2]=r;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];x=c[l>>2]|0;b=r+4|0;w=(c[b>>2]|0)+ -2132|0;c[b>>2]=w;c[m>>2]=w;w=c[m>>2]|0;c[e>>2]=x;c[f>>2]=w;w=c[e>>2]|0;x=c[f>>2]|0;a[q+0>>0]=a[p+0>>0]|0;c[n>>2]=w;c[g>>2]=x}i=o;return}function Sj(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;l=i;i=i+80|0;u=l+28|0;v=l+24|0;s=l+52|0;o=l+60|0;p=l+40|0;q=l+48|0;r=l+56|0;w=l+64|0;n=l+68|0;j=l;m=l+36|0;h=l+4|0;y=l+32|0;k=l+8|0;x=l+44|0;t=l+12|0;c[r>>2]=a;c[w>>2]=b;c[n>>2]=d;c[j>>2]=e;c[m>>2]=f;c[h>>2]=g;lz(c[j>>2]|0,0,704)|0;lz((c[j>>2]|0)+704|0,0,1408)|0;a=(c[j>>2]|0)+2116|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[(c[j>>2]|0)+2112>>2]=0;c[y>>2]=(c[n>>2]|0)-1;c[k>>2]=0;while(1){if((c[y>>2]|0)==0)break;c[y>>2]=c[y>>2]>>1;c[k>>2]=(c[k>>2]|0)+1}c[x>>2]=0;while(1){if(!((c[x>>2]|0)>>>0<(c[n>>2]|0)>>>0))break;if((c[(c[r>>2]|0)+(c[x>>2]<<2)>>2]|0)>0){if((c[(c[j>>2]|0)+2112>>2]|0)<4)c[(c[j>>2]|0)+2116+(c[(c[j>>2]|0)+2112>>2]<<2)>>2]=c[x>>2];a=(c[j>>2]|0)+2112|0;c[a>>2]=(c[a>>2]|0)+1}c[x>>2]=(c[x>>2]|0)+1}if((c[(c[j>>2]|0)+2112>>2]|0)<=1){hi(2,1,0,c[m>>2]|0,c[h>>2]|0);hi(2,0,0,c[m>>2]|0,c[h>>2]|0);a=c[(c[j>>2]|0)+2116>>2]|0;hi(c[k>>2]|0,a,((a|0)<0)<<31>>31,c[m>>2]|0,c[h>>2]|0);i=l;return}if((c[n>>2]|0)>=50?(c[(c[j>>2]|0)+2112>>2]|0)>=16:0){re(t,c[n>>2]|0);c[p>>2]=t;c[q>>2]=0;qz((c[c[p>>2]>>2]|0)+(c[q>>2]<<2)|0,c[r>>2]|0,c[n>>2]<<2|0)|0;a=c[n>>2]|0;c[s>>2]=t;c[o>>2]=0;Tl(a,(c[c[s>>2]>>2]|0)+(c[o>>2]<<2)|0)|0;c[u>>2]=t;c[v>>2]=0;Ml((c[c[u>>2]>>2]|0)+(c[v>>2]<<2)|0,c[n>>2]|0,c[w>>2]|0,c[j>>2]|0);we(t)}else Ml(c[r>>2]|0,c[n>>2]|0,c[w>>2]|0,c[j>>2]|0);Wl(c[j>>2]|0,c[n>>2]|0,(c[j>>2]|0)+704|0);o=c[j>>2]|0;n=c[n>>2]|0;if((c[(c[j>>2]|0)+2112>>2]|0)<=4){Tj(o,n,c[k>>2]|0,c[m>>2]|0,c[h>>2]|0);i=l;return}else{Uj(o,n,c[m>>2]|0,c[h>>2]|0);i=l;return}}function Tj(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;p=i;i=i+64|0;j=p+52|0;m=p;n=p+44|0;o=p+48|0;r=p+56|0;l=p+16|0;h=p+40|0;q=p+36|0;s=p+8|0;k=p+4|0;c[j>>2]=a;c[p+32>>2]=b;c[m>>2]=e;c[n>>2]=f;c[o>>2]=g;c[r>>2]=c[j>>2];c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[(c[j>>2]|0)+2112>>2]|0))break;c[l+(c[h>>2]<<2)>>2]=c[(c[j>>2]|0)+2116+(c[h>>2]<<2)>>2];c[h>>2]=(c[h>>2]|0)+1}c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[(c[j>>2]|0)+2112>>2]|0))break;c[q>>2]=(c[h>>2]|0)+1;while(1){if((c[q>>2]|0)>=(c[(c[j>>2]|0)+2112>>2]|0))break;if((d[(c[r>>2]|0)+(c[l+(c[q>>2]<<2)>>2]|0)>>0]|0|0)<(d[(c[r>>2]|0)+(c[l+(c[h>>2]<<2)>>2]|0)>>0]|0|0)){c[s>>2]=c[l+(c[h>>2]<<2)>>2];c[l+(c[h>>2]<<2)>>2]=c[l+(c[q>>2]<<2)>>2];c[l+(c[q>>2]<<2)>>2]=c[s>>2]}c[q>>2]=(c[q>>2]|0)+1}c[h>>2]=(c[h>>2]|0)+1}hi(2,1,0,c[n>>2]|0,c[o>>2]|0);a=(c[(c[j>>2]|0)+2112>>2]|0)-1|0;hi(2,a,((a|0)<0)<<31>>31,c[n>>2]|0,c[o>>2]|0);c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[(c[j>>2]|0)+2112>>2]|0))break;a=c[l+(c[k>>2]<<2)>>2]|0;hi(c[m>>2]|0,a,((a|0)<0)<<31>>31,c[n>>2]|0,c[o>>2]|0);c[k>>2]=(c[k>>2]|0)+1}if((c[(c[j>>2]|0)+2112>>2]|0)!=4){i=p;return}if((((d[(c[r>>2]|0)+(c[l>>2]|0)>>0]|0|0)==2?(d[(c[r>>2]|0)+(c[l+4>>2]|0)>>0]|0|0)==2:0)?(d[(c[r>>2]|0)+(c[l+8>>2]|0)>>0]|0|0)==2:0)?(d[(c[r>>2]|0)+(c[l+12>>2]|0)>>0]|0|0)==2:0){hi(1,0,0,c[n>>2]|0,c[o>>2]|0);i=p;return}hi(1,1,0,c[n>>2]|0,c[o>>2]|0);i=p;return}function Uj(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;p=i;i=i+1600|0;s=p+188|0;q=p+164|0;m=p+176|0;g=p+172|0;r=p+180|0;l=p+192|0;o=p+896|0;h=p+184|0;k=p;n=p+168|0;j=p+88|0;c[s>>2]=a;c[q>>2]=b;c[m>>2]=e;c[g>>2]=f;c[r>>2]=c[s>>2];c[h>>2]=0;Ul(c[r>>2]|0,c[q>>2]|0,l,o,h);Dj(k);e=k+0|0;f=e+72|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));c[n>>2]=0;while(1){if((c[n>>2]|0)>=(c[h>>2]|0))break;Ej(k,d[l+(c[n>>2]|0)>>0]|0);c[n>>2]=(c[n>>2]|0)+1}e=j+0|0;f=e+76|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));Fj(k,5,18,j);li(j,c[m>>2]|0,c[g>>2]|0);mi(l,o,c[h>>2]|0,j,c[m>>2]|0,c[g>>2]|0);i=p;return}function Vj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;t=i;i=i+144|0;h=t+60|0;u=t+48|0;v=t+124|0;e=t+116|0;f=t+8|0;r=t;o=t+84|0;q=t+52|0;A=t+40|0;z=t+104|0;y=t+112|0;x=t+120|0;w=t+128|0;g=t+132|0;F=t+136|0;p=t+64|0;l=t+68|0;m=t+72|0;n=t+76|0;E=t+16|0;D=t+88|0;C=t+96|0;B=t+4|0;G=t+92|0;H=t+44|0;I=t+100|0;J=t+108|0;s=t+12|0;k=t+80|0;j=t+20|0;c[J>>2]=b;c[s>>2]=d;d=c[J>>2]|0;c[I>>2]=d;c[H>>2]=(c[I>>2]|0)+8;c[G>>2]=c[H>>2];if((((c[c[G>>2]>>2]|0)-(c[d+4>>2]|0)|0)/2132|0)>>>0>=(c[s>>2]|0)>>>0){Wj(d,c[s>>2]|0);i=t;return}c[B>>2]=d;c[C>>2]=(c[B>>2]|0)+8;c[D>>2]=c[C>>2];c[k>>2]=c[D>>2];c[E>>2]=d;B=c[E>>2]|0;B=(((c[B+4>>2]|0)-(c[B>>2]|0)|0)/2132|0)+(c[s>>2]|0)|0;c[F>>2]=d;c[p>>2]=B;B=c[F>>2]|0;c[l>>2]=ak(B)|0;if((c[p>>2]|0)>>>0>(c[l>>2]|0)>>>0)Zt(B);c[w>>2]=B;c[x>>2]=c[w>>2];J=c[x>>2]|0;c[y>>2]=J;c[z>>2]=(c[y>>2]|0)+8;c[A>>2]=c[z>>2];c[m>>2]=((c[c[A>>2]>>2]|0)-(c[J>>2]|0)|0)/2132|0;if((c[m>>2]|0)>>>0>=(((c[l>>2]|0)>>>0)/2|0)>>>0)c[g>>2]=c[l>>2];else{c[n>>2]=c[m>>2]<<1;c[o>>2]=n;c[q>>2]=p;J=c[o>>2]|0;I=c[q>>2]|0;a[r+0>>0]=a[t+140>>0]|0;c[e>>2]=J;c[f>>2]=I;I=c[e>>2]|0;J=c[f>>2]|0;c[t+56>>2]=r;c[u>>2]=I;c[v>>2]=J;c[g>>2]=c[((c[c[u>>2]>>2]|0)>>>0<(c[c[v>>2]>>2]|0)>>>0?c[f>>2]|0:c[e>>2]|0)>>2]}I=c[g>>2]|0;c[h>>2]=d;J=c[h>>2]|0;Xj(j,I,((c[J+4>>2]|0)-(c[J>>2]|0)|0)/2132|0,c[k>>2]|0);Yj(j,c[s>>2]|0);Zj(d,j);_j(j);i=t;return}function Wj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;g=d+28|0;h=d+16|0;j=d+4|0;k=d+8|0;l=d+32|0;m=d;n=d+12|0;e=d+24|0;f=d+20|0;c[n>>2]=a;c[e>>2]=b;a=c[n>>2]|0;c[m>>2]=a;c[l>>2]=(c[m>>2]|0)+8;c[k>>2]=c[l>>2];c[f>>2]=c[k>>2];do{n=c[f>>2]|0;c[g>>2]=c[a+4>>2];b=c[g>>2]|0;c[h>>2]=n;c[j>>2]=b;b=c[j>>2]|0;if((b|0)!=0)lz(b|0,0,2132)|0;n=a+4|0;c[n>>2]=(c[n>>2]|0)+2132;c[e>>2]=(c[e>>2]|0)+ -1}while((c[e>>2]|0)>>>0>0);i=d;return}function Xj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;k=f+12|0;j=f+8|0;h=f+4|0;g=f;c[k>>2]=a;c[j>>2]=b;c[h>>2]=d;c[g>>2]=e;bk(c[k>>2]|0,c[j>>2]|0,c[h>>2]|0,c[g>>2]|0);i=f;return}function Yj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;g=d+28|0;h=d+16|0;j=d+4|0;k=d+8|0;l=d+32|0;m=d;n=d+12|0;e=d+24|0;f=d+20|0;c[n>>2]=a;c[e>>2]=b;a=c[n>>2]|0;c[m>>2]=a;c[l>>2]=(c[m>>2]|0)+12;c[k>>2]=c[l>>2];c[f>>2]=c[(c[k>>2]|0)+4>>2];do{n=c[f>>2]|0;c[g>>2]=c[a+8>>2];b=c[g>>2]|0;c[h>>2]=n;c[j>>2]=b;b=c[j>>2]|0;if((b|0)!=0)lz(b|0,0,2132)|0;n=a+8|0;c[n>>2]=(c[n>>2]|0)+2132;c[e>>2]=(c[e>>2]|0)+ -1}while((c[e>>2]|0)>>>0>0);i=d;return}function Zj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=i;i=i+144|0;F=d+108|0;H=d+88|0;G=d+80|0;E=d+48|0;C=d+8|0;z=d+12|0;D=d+84|0;B=d+16|0;y=d+20|0;A=d+24|0;w=d+28|0;t=d+32|0;x=d+104|0;v=d+112|0;s=d+120|0;u=d+128|0;m=d+136|0;q=d+52|0;r=d+56|0;n=d+60|0;o=d+64|0;p=d+68|0;k=d+72|0;g=d+76|0;l=d+4|0;j=d;f=d+92|0;h=d+96|0;K=d+100|0;J=d+40|0;I=d+116|0;L=d+44|0;e=d+124|0;c[L>>2]=a;c[e>>2]=b;a=c[L>>2]|0;c[I>>2]=a;c[J>>2]=(c[I>>2]|0)+8;c[K>>2]=c[J>>2];J=c[a>>2]|0;I=c[a+4>>2]|0;b=(c[e>>2]|0)+4|0;c[d+132>>2]=c[K>>2];c[F>>2]=J;c[H>>2]=I;c[G>>2]=b;c[E>>2]=((c[H>>2]|0)-(c[F>>2]|0)|0)/2132|0;b=c[G>>2]|0;c[b>>2]=(c[b>>2]|0)+((0-(c[E>>2]|0)|0)*2132|0);qz(c[c[G>>2]>>2]|0,c[F>>2]|0,(c[E>>2]|0)*2132|0)|0;b=(c[e>>2]|0)+4|0;c[B>>2]=a;c[y>>2]=b;c[D>>2]=c[B>>2];c[A>>2]=c[c[D>>2]>>2];c[C>>2]=c[y>>2];c[c[B>>2]>>2]=c[c[C>>2]>>2];c[z>>2]=A;c[c[y>>2]>>2]=c[c[z>>2]>>2];b=(c[e>>2]|0)+8|0;c[v>>2]=a+4;c[s>>2]=b;c[x>>2]=c[v>>2];c[u>>2]=c[c[x>>2]>>2];c[w>>2]=c[s>>2];c[c[v>>2]>>2]=c[c[w>>2]>>2];c[t>>2]=u;c[c[s>>2]>>2]=c[c[t>>2]>>2];c[r>>2]=a;c[q>>2]=(c[r>>2]|0)+8;c[m>>2]=c[q>>2];m=c[m>>2]|0;c[p>>2]=c[e>>2];c[o>>2]=(c[p>>2]|0)+12;c[n>>2]=c[o>>2];b=c[n>>2]|0;c[j>>2]=m;c[f>>2]=b;c[l>>2]=c[j>>2];c[h>>2]=c[c[l>>2]>>2];c[k>>2]=c[f>>2];c[c[j>>2]>>2]=c[c[k>>2]>>2];c[g>>2]=h;c[c[f>>2]>>2]=c[c[g>>2]>>2];c[c[e>>2]>>2]=c[(c[e>>2]|0)+4>>2];c[d+36>>2]=a;i=d;return}function _j(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;$j(c[d>>2]|0);i=b;return}function $j(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;r=i;i=i+128|0;l=r+72|0;k=r+44|0;j=r+12|0;h=r+104|0;g=r+24|0;f=r+16|0;q=r+20|0;p=r+76|0;d=r+52|0;e=r+28|0;m=r+32|0;n=r+36|0;o=r+40|0;w=r+108|0;B=r+112|0;C=r+116|0;A=r;x=r+56|0;y=r+60|0;z=r+120|0;v=r+68|0;u=r+88|0;t=r+92|0;E=r+96|0;s=r+100|0;G=r+8|0;F=r+80|0;I=r+84|0;H=r+121|0;J=r+48|0;D=r+64|0;c[D>>2]=b;D=c[D>>2]|0;c[J>>2]=D;J=c[J>>2]|0;b=c[J+4>>2]|0;c[F>>2]=J;c[I>>2]=b;F=c[F>>2]|0;b=c[I>>2]|0;a[G+0>>0]=a[H+0>>0]|0;c[E>>2]=F;c[s>>2]=b;b=c[E>>2]|0;while(1){if((c[s>>2]|0)==(c[b+8>>2]|0))break;c[t>>2]=b;c[u>>2]=(c[t>>2]|0)+12;c[v>>2]=c[u>>2];J=c[(c[v>>2]|0)+4>>2]|0;H=b+8|0;I=(c[H>>2]|0)+ -2132|0;c[H>>2]=I;c[w>>2]=I;I=c[w>>2]|0;c[x>>2]=J;c[y>>2]=I;I=c[x>>2]|0;J=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=I;c[C>>2]=J}if((c[D>>2]|0)==0){i=r;return}c[q>>2]=D;c[f>>2]=(c[q>>2]|0)+12;c[g>>2]=c[f>>2];H=c[(c[g>>2]|0)+4>>2]|0;J=c[D>>2]|0;c[h>>2]=D;I=c[h>>2]|0;c[j>>2]=I;c[k>>2]=(c[j>>2]|0)+12;c[l>>2]=c[k>>2];I=((c[c[l>>2]>>2]|0)-(c[I>>2]|0)|0)/2132|0;c[m>>2]=H;c[n>>2]=J;c[o>>2]=I;I=c[n>>2]|0;J=c[o>>2]|0;c[p>>2]=c[m>>2];c[d>>2]=I;c[e>>2]=J;Ix(c[d>>2]|0);i=r;return}function ak(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+80|0;q=h+44|0;r=h+40|0;s=h+8|0;u=h+12|0;t=h+76|0;k=h+36|0;g=h+16|0;f=h+20|0;d=h+68|0;e=h+32|0;l=h;n=h+48|0;j=h+52|0;m=h+77|0;v=h+60|0;w=h+64|0;x=h+28|0;y=h+24|0;p=h+56|0;o=h+72|0;c[y>>2]=b;c[x>>2]=c[y>>2];c[w>>2]=(c[x>>2]|0)+8;c[v>>2]=c[w>>2];c[u>>2]=c[v>>2];b=c[u>>2]|0;a[s+0>>0]=a[t+0>>0]|0;c[r>>2]=b;c[q>>2]=c[r>>2];c[p>>2]=2014524;c[o>>2]=4294967295/2|0;c[n>>2]=p;c[j>>2]=o;b=c[n>>2]|0;j=c[j>>2]|0;a[l+0>>0]=a[m+0>>0]|0;c[d>>2]=b;c[e>>2]=j;j=c[e>>2]|0;b=c[d>>2]|0;c[k>>2]=l;c[g>>2]=j;c[f>>2]=b;i=h;return c[((c[c[g>>2]>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0?c[e>>2]|0:c[d>>2]|0)>>2]|0}function bk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;q=i;i=i+176|0;C=q+64|0;x=q+60|0;z=q;B=q+148|0;A=q+156|0;y=q+56|0;E=q+12|0;G=q+112|0;F=q+16|0;D=q+20|0;H=q+24|0;J=q+28|0;I=q+32|0;p=q+36|0;g=q+40|0;r=q+108|0;m=q+144|0;n=q+160|0;f=q+164|0;u=q+68|0;v=q+76|0;w=q+80|0;t=q+84|0;o=q+92|0;h=q+96|0;j=q+100|0;N=q+104|0;O=q+124|0;P=q+44|0;M=q+8|0;Q=q+48|0;k=q+132|0;l=q+52|0;K=q+140|0;L=q+120|0;s=q+116|0;c[Q>>2]=a;c[k>>2]=b;c[l>>2]=d;c[K>>2]=e;e=c[Q>>2]|0;c[O>>2]=M;c[P>>2]=-1;b=c[P>>2]|0;c[N>>2]=c[O>>2];c[q+4>>2]=b;c[c[N>>2]>>2]=0;c[L>>2]=c[M>>2];c[q+128>>2]=L;b=c[K>>2]|0;c[H>>2]=e+12;c[J>>2]=0;c[I>>2]=b;b=c[J>>2]|0;d=c[I>>2]|0;c[G>>2]=c[H>>2];c[F>>2]=b;c[D>>2]=d;d=c[G>>2]|0;c[E>>2]=F;b=c[c[E>>2]>>2]|0;c[C>>2]=c[D>>2];a=c[C>>2]|0;c[B>>2]=d;c[A>>2]=b;c[y>>2]=a;a=c[B>>2]|0;c[z>>2]=A;c[a>>2]=c[c[z>>2]>>2];c[x>>2]=c[y>>2];c[a+4>>2]=c[x>>2];if((c[k>>2]|0)!=0){c[r>>2]=e;c[g>>2]=(c[r>>2]|0)+12;c[p>>2]=c[g>>2];Q=c[k>>2]|0;c[n>>2]=c[(c[p>>2]|0)+4>>2];c[f>>2]=Q;Q=c[f>>2]|0;c[q+136>>2]=c[n>>2];c[m>>2]=Q;c[q+152>>2]=0;Q=Gx((c[m>>2]|0)*2132|0)|0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P*2132|0)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P*2132|0)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}else{c[v>>2]=t;c[w>>2]=-1;Q=c[w>>2]|0;c[u>>2]=c[v>>2];c[q+72>>2]=Q;c[c[u>>2]>>2]=0;c[s>>2]=c[t>>2];c[q+88>>2]=s;Q=0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P*2132|0)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P*2132|0)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}}function ck(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;o=i;i=i+80|0;m=o+36|0;n=o+4|0;g=o+28|0;q=o;e=o+32|0;f=o+8|0;p=o+68|0;l=o+24|0;k=o+60|0;j=o+64|0;v=o+40|0;h=o+44|0;t=o+48|0;u=o+52|0;w=o+56|0;x=o+16|0;s=o+20|0;r=o+12|0;c[x>>2]=b;c[s>>2]=d;d=c[x>>2]|0;c[w>>2]=d;b=c[w>>2]|0;c[r>>2]=((c[b+4>>2]|0)-(c[b>>2]|0)|0)/788|0;if((c[r>>2]|0)>>>0<(c[s>>2]|0)>>>0){gk(d,(c[s>>2]|0)-(c[r>>2]|0)|0);i=o;return}if(!((c[r>>2]|0)>>>0>(c[s>>2]|0)>>>0)){i=o;return}r=(c[d>>2]|0)+((c[s>>2]|0)*788|0)|0;c[t>>2]=d;c[u>>2]=r;r=c[u>>2]|0;c[v>>2]=c[t>>2];c[h>>2]=r;r=c[v>>2]|0;while(1){if((c[h>>2]|0)==(c[r+4>>2]|0))break;c[j>>2]=r;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];x=c[l>>2]|0;b=r+4|0;w=(c[b>>2]|0)+ -788|0;c[b>>2]=w;c[m>>2]=w;w=c[m>>2]|0;c[e>>2]=x;c[f>>2]=w;w=c[e>>2]|0;x=c[f>>2]|0;a[q+0>>0]=a[p+0>>0]|0;c[n>>2]=w;c[g>>2]=x}i=o;return}function dk(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;l=i;i=i+80|0;u=l+28|0;v=l+24|0;s=l+52|0;o=l+60|0;p=l+40|0;q=l+48|0;r=l+56|0;w=l+64|0;n=l+68|0;j=l;m=l+36|0;h=l+4|0;y=l+32|0;k=l+8|0;x=l+44|0;t=l+12|0;c[r>>2]=a;c[w>>2]=b;c[n>>2]=d;c[j>>2]=e;c[m>>2]=f;c[h>>2]=g;lz(c[j>>2]|0,0,256)|0;lz((c[j>>2]|0)+256|0,0,512)|0;a=(c[j>>2]|0)+772|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[(c[j>>2]|0)+768>>2]=0;c[y>>2]=(c[n>>2]|0)-1;c[k>>2]=0;while(1){if((c[y>>2]|0)==0)break;c[y>>2]=c[y>>2]>>1;c[k>>2]=(c[k>>2]|0)+1}c[x>>2]=0;while(1){if(!((c[x>>2]|0)>>>0<(c[n>>2]|0)>>>0))break;if((c[(c[r>>2]|0)+(c[x>>2]<<2)>>2]|0)>0){if((c[(c[j>>2]|0)+768>>2]|0)<4)c[(c[j>>2]|0)+772+(c[(c[j>>2]|0)+768>>2]<<2)>>2]=c[x>>2];a=(c[j>>2]|0)+768|0;c[a>>2]=(c[a>>2]|0)+1}c[x>>2]=(c[x>>2]|0)+1}if((c[(c[j>>2]|0)+768>>2]|0)<=1){hi(2,1,0,c[m>>2]|0,c[h>>2]|0);hi(2,0,0,c[m>>2]|0,c[h>>2]|0);a=c[(c[j>>2]|0)+772>>2]|0;hi(c[k>>2]|0,a,((a|0)<0)<<31>>31,c[m>>2]|0,c[h>>2]|0);i=l;return}if((c[n>>2]|0)>=50?(c[(c[j>>2]|0)+768>>2]|0)>=16:0){re(t,c[n>>2]|0);c[p>>2]=t;c[q>>2]=0;qz((c[c[p>>2]>>2]|0)+(c[q>>2]<<2)|0,c[r>>2]|0,c[n>>2]<<2|0)|0;a=c[n>>2]|0;c[s>>2]=t;c[o>>2]=0;Tl(a,(c[c[s>>2]>>2]|0)+(c[o>>2]<<2)|0)|0;c[u>>2]=t;c[v>>2]=0;Ml((c[c[u>>2]>>2]|0)+(c[v>>2]<<2)|0,c[n>>2]|0,c[w>>2]|0,c[j>>2]|0);we(t)}else Ml(c[r>>2]|0,c[n>>2]|0,c[w>>2]|0,c[j>>2]|0);Wl(c[j>>2]|0,c[n>>2]|0,(c[j>>2]|0)+256|0);o=c[j>>2]|0;n=c[n>>2]|0;if((c[(c[j>>2]|0)+768>>2]|0)<=4){ek(o,n,c[k>>2]|0,c[m>>2]|0,c[h>>2]|0);i=l;return}else{fk(o,n,c[m>>2]|0,c[h>>2]|0);i=l;return}}function ek(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;p=i;i=i+64|0;j=p+52|0;m=p;n=p+44|0;o=p+48|0;r=p+56|0;l=p+16|0;h=p+40|0;q=p+36|0;s=p+8|0;k=p+4|0;c[j>>2]=a;c[p+32>>2]=b;c[m>>2]=e;c[n>>2]=f;c[o>>2]=g;c[r>>2]=c[j>>2];c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[(c[j>>2]|0)+768>>2]|0))break;c[l+(c[h>>2]<<2)>>2]=c[(c[j>>2]|0)+772+(c[h>>2]<<2)>>2];c[h>>2]=(c[h>>2]|0)+1}c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[(c[j>>2]|0)+768>>2]|0))break;c[q>>2]=(c[h>>2]|0)+1;while(1){if((c[q>>2]|0)>=(c[(c[j>>2]|0)+768>>2]|0))break;if((d[(c[r>>2]|0)+(c[l+(c[q>>2]<<2)>>2]|0)>>0]|0|0)<(d[(c[r>>2]|0)+(c[l+(c[h>>2]<<2)>>2]|0)>>0]|0|0)){c[s>>2]=c[l+(c[h>>2]<<2)>>2];c[l+(c[h>>2]<<2)>>2]=c[l+(c[q>>2]<<2)>>2];c[l+(c[q>>2]<<2)>>2]=c[s>>2]}c[q>>2]=(c[q>>2]|0)+1}c[h>>2]=(c[h>>2]|0)+1}hi(2,1,0,c[n>>2]|0,c[o>>2]|0);a=(c[(c[j>>2]|0)+768>>2]|0)-1|0;hi(2,a,((a|0)<0)<<31>>31,c[n>>2]|0,c[o>>2]|0);c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[(c[j>>2]|0)+768>>2]|0))break;a=c[l+(c[k>>2]<<2)>>2]|0;hi(c[m>>2]|0,a,((a|0)<0)<<31>>31,c[n>>2]|0,c[o>>2]|0);c[k>>2]=(c[k>>2]|0)+1}if((c[(c[j>>2]|0)+768>>2]|0)!=4){i=p;return}if((((d[(c[r>>2]|0)+(c[l>>2]|0)>>0]|0|0)==2?(d[(c[r>>2]|0)+(c[l+4>>2]|0)>>0]|0|0)==2:0)?(d[(c[r>>2]|0)+(c[l+8>>2]|0)>>0]|0|0)==2:0)?(d[(c[r>>2]|0)+(c[l+12>>2]|0)>>0]|0|0)==2:0){hi(1,0,0,c[n>>2]|0,c[o>>2]|0);i=p;return}hi(1,1,0,c[n>>2]|0,c[o>>2]|0);i=p;return}function fk(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;p=i;i=i+704|0;s=p+188|0;q=p+164|0;m=p+176|0;g=p+172|0;r=p+180|0;l=p+192|0;o=p+448|0;h=p+184|0;k=p;n=p+168|0;j=p+88|0;c[s>>2]=a;c[q>>2]=b;c[m>>2]=e;c[g>>2]=f;c[r>>2]=c[s>>2];c[h>>2]=0;Ul(c[r>>2]|0,c[q>>2]|0,l,o,h);Dj(k);e=k+0|0;f=e+72|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));c[n>>2]=0;while(1){if((c[n>>2]|0)>=(c[h>>2]|0))break;Ej(k,d[l+(c[n>>2]|0)>>0]|0);c[n>>2]=(c[n>>2]|0)+1}e=j+0|0;f=e+76|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));Fj(k,5,18,j);li(j,c[m>>2]|0,c[g>>2]|0);mi(l,o,c[h>>2]|0,j,c[m>>2]|0,c[g>>2]|0);i=p;return}function gk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;t=i;i=i+144|0;h=t+60|0;u=t+48|0;v=t+124|0;e=t+116|0;f=t+8|0;r=t;o=t+84|0;q=t+52|0;A=t+40|0;z=t+104|0;y=t+112|0;x=t+120|0;w=t+128|0;g=t+132|0;F=t+136|0;p=t+64|0;l=t+68|0;m=t+72|0;n=t+76|0;E=t+16|0;D=t+88|0;C=t+96|0;B=t+4|0;G=t+92|0;H=t+44|0;I=t+100|0;J=t+108|0;s=t+12|0;k=t+80|0;j=t+20|0;c[J>>2]=b;c[s>>2]=d;d=c[J>>2]|0;c[I>>2]=d;c[H>>2]=(c[I>>2]|0)+8;c[G>>2]=c[H>>2];if((((c[c[G>>2]>>2]|0)-(c[d+4>>2]|0)|0)/788|0)>>>0>=(c[s>>2]|0)>>>0){hk(d,c[s>>2]|0);i=t;return}c[B>>2]=d;c[C>>2]=(c[B>>2]|0)+8;c[D>>2]=c[C>>2];c[k>>2]=c[D>>2];c[E>>2]=d;B=c[E>>2]|0;B=(((c[B+4>>2]|0)-(c[B>>2]|0)|0)/788|0)+(c[s>>2]|0)|0;c[F>>2]=d;c[p>>2]=B;B=c[F>>2]|0;c[l>>2]=nk(B)|0;if((c[p>>2]|0)>>>0>(c[l>>2]|0)>>>0)Zt(B);c[w>>2]=B;c[x>>2]=c[w>>2];J=c[x>>2]|0;c[y>>2]=J;c[z>>2]=(c[y>>2]|0)+8;c[A>>2]=c[z>>2];c[m>>2]=((c[c[A>>2]>>2]|0)-(c[J>>2]|0)|0)/788|0;if((c[m>>2]|0)>>>0>=(((c[l>>2]|0)>>>0)/2|0)>>>0)c[g>>2]=c[l>>2];else{c[n>>2]=c[m>>2]<<1;c[o>>2]=n;c[q>>2]=p;J=c[o>>2]|0;I=c[q>>2]|0;a[r+0>>0]=a[t+140>>0]|0;c[e>>2]=J;c[f>>2]=I;I=c[e>>2]|0;J=c[f>>2]|0;c[t+56>>2]=r;c[u>>2]=I;c[v>>2]=J;c[g>>2]=c[((c[c[u>>2]>>2]|0)>>>0<(c[c[v>>2]>>2]|0)>>>0?c[f>>2]|0:c[e>>2]|0)>>2]}I=c[g>>2]|0;c[h>>2]=d;J=c[h>>2]|0;ik(j,I,((c[J+4>>2]|0)-(c[J>>2]|0)|0)/788|0,c[k>>2]|0);jk(j,c[s>>2]|0);kk(d,j);lk(j);i=t;return}function hk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;g=d+28|0;h=d+16|0;j=d+4|0;k=d+8|0;l=d+32|0;m=d;n=d+12|0;e=d+24|0;f=d+20|0;c[n>>2]=a;c[e>>2]=b;a=c[n>>2]|0;c[m>>2]=a;c[l>>2]=(c[m>>2]|0)+8;c[k>>2]=c[l>>2];c[f>>2]=c[k>>2];do{n=c[f>>2]|0;c[g>>2]=c[a+4>>2];b=c[g>>2]|0;c[h>>2]=n;c[j>>2]=b;b=c[j>>2]|0;if((b|0)!=0)lz(b|0,0,788)|0;n=a+4|0;c[n>>2]=(c[n>>2]|0)+788;c[e>>2]=(c[e>>2]|0)+ -1}while((c[e>>2]|0)>>>0>0);i=d;return}function ik(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;k=f+12|0;j=f+8|0;h=f+4|0;g=f;c[k>>2]=a;c[j>>2]=b;c[h>>2]=d;c[g>>2]=e;ok(c[k>>2]|0,c[j>>2]|0,c[h>>2]|0,c[g>>2]|0);i=f;return}function jk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;g=d+28|0;h=d+16|0;j=d+4|0;k=d+8|0;l=d+32|0;m=d;n=d+12|0;e=d+24|0;f=d+20|0;c[n>>2]=a;c[e>>2]=b;a=c[n>>2]|0;c[m>>2]=a;c[l>>2]=(c[m>>2]|0)+12;c[k>>2]=c[l>>2];c[f>>2]=c[(c[k>>2]|0)+4>>2];do{n=c[f>>2]|0;c[g>>2]=c[a+8>>2];b=c[g>>2]|0;c[h>>2]=n;c[j>>2]=b;b=c[j>>2]|0;if((b|0)!=0)lz(b|0,0,788)|0;n=a+8|0;c[n>>2]=(c[n>>2]|0)+788;c[e>>2]=(c[e>>2]|0)+ -1}while((c[e>>2]|0)>>>0>0);i=d;return}function kk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=i;i=i+144|0;F=d+108|0;H=d+88|0;G=d+80|0;E=d+48|0;C=d+8|0;z=d+12|0;D=d+84|0;B=d+16|0;y=d+20|0;A=d+24|0;w=d+28|0;t=d+32|0;x=d+104|0;v=d+112|0;s=d+120|0;u=d+128|0;m=d+136|0;q=d+52|0;r=d+56|0;n=d+60|0;o=d+64|0;p=d+68|0;k=d+72|0;g=d+76|0;l=d+4|0;j=d;f=d+92|0;h=d+96|0;K=d+100|0;J=d+40|0;I=d+116|0;L=d+44|0;e=d+124|0;c[L>>2]=a;c[e>>2]=b;a=c[L>>2]|0;c[I>>2]=a;c[J>>2]=(c[I>>2]|0)+8;c[K>>2]=c[J>>2];J=c[a>>2]|0;I=c[a+4>>2]|0;b=(c[e>>2]|0)+4|0;c[d+132>>2]=c[K>>2];c[F>>2]=J;c[H>>2]=I;c[G>>2]=b;c[E>>2]=((c[H>>2]|0)-(c[F>>2]|0)|0)/788|0;b=c[G>>2]|0;c[b>>2]=(c[b>>2]|0)+((0-(c[E>>2]|0)|0)*788|0);qz(c[c[G>>2]>>2]|0,c[F>>2]|0,(c[E>>2]|0)*788|0)|0;b=(c[e>>2]|0)+4|0;c[B>>2]=a;c[y>>2]=b;c[D>>2]=c[B>>2];c[A>>2]=c[c[D>>2]>>2];c[C>>2]=c[y>>2];c[c[B>>2]>>2]=c[c[C>>2]>>2];c[z>>2]=A;c[c[y>>2]>>2]=c[c[z>>2]>>2];b=(c[e>>2]|0)+8|0;c[v>>2]=a+4;c[s>>2]=b;c[x>>2]=c[v>>2];c[u>>2]=c[c[x>>2]>>2];c[w>>2]=c[s>>2];c[c[v>>2]>>2]=c[c[w>>2]>>2];c[t>>2]=u;c[c[s>>2]>>2]=c[c[t>>2]>>2];c[r>>2]=a;c[q>>2]=(c[r>>2]|0)+8;c[m>>2]=c[q>>2];m=c[m>>2]|0;c[p>>2]=c[e>>2];c[o>>2]=(c[p>>2]|0)+12;c[n>>2]=c[o>>2];b=c[n>>2]|0;c[j>>2]=m;c[f>>2]=b;c[l>>2]=c[j>>2];c[h>>2]=c[c[l>>2]>>2];c[k>>2]=c[f>>2];c[c[j>>2]>>2]=c[c[k>>2]>>2];c[g>>2]=h;c[c[f>>2]>>2]=c[c[g>>2]>>2];c[c[e>>2]>>2]=c[(c[e>>2]|0)+4>>2];c[d+36>>2]=a;i=d;return}function lk(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;mk(c[d>>2]|0);i=b;return}function mk(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;r=i;i=i+128|0;l=r+72|0;k=r+44|0;j=r+12|0;h=r+104|0;g=r+24|0;f=r+16|0;q=r+20|0;p=r+76|0;d=r+52|0;e=r+28|0;m=r+32|0;n=r+36|0;o=r+40|0;w=r+108|0;B=r+112|0;C=r+116|0;A=r;x=r+56|0;y=r+60|0;z=r+120|0;v=r+68|0;u=r+88|0;t=r+92|0;E=r+96|0;s=r+100|0;G=r+8|0;F=r+80|0;I=r+84|0;H=r+121|0;J=r+48|0;D=r+64|0;c[D>>2]=b;D=c[D>>2]|0;c[J>>2]=D;J=c[J>>2]|0;b=c[J+4>>2]|0;c[F>>2]=J;c[I>>2]=b;F=c[F>>2]|0;b=c[I>>2]|0;a[G+0>>0]=a[H+0>>0]|0;c[E>>2]=F;c[s>>2]=b;b=c[E>>2]|0;while(1){if((c[s>>2]|0)==(c[b+8>>2]|0))break;c[t>>2]=b;c[u>>2]=(c[t>>2]|0)+12;c[v>>2]=c[u>>2];J=c[(c[v>>2]|0)+4>>2]|0;H=b+8|0;I=(c[H>>2]|0)+ -788|0;c[H>>2]=I;c[w>>2]=I;I=c[w>>2]|0;c[x>>2]=J;c[y>>2]=I;I=c[x>>2]|0;J=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=I;c[C>>2]=J}if((c[D>>2]|0)==0){i=r;return}c[q>>2]=D;c[f>>2]=(c[q>>2]|0)+12;c[g>>2]=c[f>>2];H=c[(c[g>>2]|0)+4>>2]|0;J=c[D>>2]|0;c[h>>2]=D;I=c[h>>2]|0;c[j>>2]=I;c[k>>2]=(c[j>>2]|0)+12;c[l>>2]=c[k>>2];I=((c[c[l>>2]>>2]|0)-(c[I>>2]|0)|0)/788|0;c[m>>2]=H;c[n>>2]=J;c[o>>2]=I;I=c[n>>2]|0;J=c[o>>2]|0;c[p>>2]=c[m>>2];c[d>>2]=I;c[e>>2]=J;Ix(c[d>>2]|0);i=r;return}function nk(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+80|0;q=h+44|0;r=h+40|0;s=h+8|0;u=h+12|0;t=h+76|0;k=h+36|0;g=h+16|0;f=h+20|0;d=h+68|0;e=h+32|0;l=h;n=h+48|0;j=h+52|0;m=h+77|0;v=h+60|0;w=h+64|0;x=h+28|0;y=h+24|0;p=h+56|0;o=h+72|0;c[y>>2]=b;c[x>>2]=c[y>>2];c[w>>2]=(c[x>>2]|0)+8;c[v>>2]=c[w>>2];c[u>>2]=c[v>>2];b=c[u>>2]|0;a[s+0>>0]=a[t+0>>0]|0;c[r>>2]=b;c[q>>2]=c[r>>2];c[p>>2]=5450466;c[o>>2]=4294967295/2|0;c[n>>2]=p;c[j>>2]=o;b=c[n>>2]|0;j=c[j>>2]|0;a[l+0>>0]=a[m+0>>0]|0;c[d>>2]=b;c[e>>2]=j;j=c[e>>2]|0;b=c[d>>2]|0;c[k>>2]=l;c[g>>2]=j;c[f>>2]=b;i=h;return c[((c[c[g>>2]>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0?c[e>>2]|0:c[d>>2]|0)>>2]|0}function ok(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;q=i;i=i+176|0;C=q+64|0;x=q+60|0;z=q;B=q+148|0;A=q+156|0;y=q+56|0;E=q+12|0;G=q+112|0;F=q+16|0;D=q+20|0;H=q+24|0;J=q+28|0;I=q+32|0;p=q+36|0;g=q+40|0;r=q+108|0;m=q+144|0;n=q+160|0;f=q+164|0;u=q+68|0;v=q+76|0;w=q+80|0;t=q+84|0;o=q+92|0;h=q+96|0;j=q+100|0;N=q+104|0;O=q+124|0;P=q+44|0;M=q+8|0;Q=q+48|0;k=q+132|0;l=q+52|0;K=q+140|0;L=q+120|0;s=q+116|0;c[Q>>2]=a;c[k>>2]=b;c[l>>2]=d;c[K>>2]=e;e=c[Q>>2]|0;c[O>>2]=M;c[P>>2]=-1;b=c[P>>2]|0;c[N>>2]=c[O>>2];c[q+4>>2]=b;c[c[N>>2]>>2]=0;c[L>>2]=c[M>>2];c[q+128>>2]=L;b=c[K>>2]|0;c[H>>2]=e+12;c[J>>2]=0;c[I>>2]=b;b=c[J>>2]|0;d=c[I>>2]|0;c[G>>2]=c[H>>2];c[F>>2]=b;c[D>>2]=d;d=c[G>>2]|0;c[E>>2]=F;b=c[c[E>>2]>>2]|0;c[C>>2]=c[D>>2];a=c[C>>2]|0;c[B>>2]=d;c[A>>2]=b;c[y>>2]=a;a=c[B>>2]|0;c[z>>2]=A;c[a>>2]=c[c[z>>2]>>2];c[x>>2]=c[y>>2];c[a+4>>2]=c[x>>2];if((c[k>>2]|0)!=0){c[r>>2]=e;c[g>>2]=(c[r>>2]|0)+12;c[p>>2]=c[g>>2];Q=c[k>>2]|0;c[n>>2]=c[(c[p>>2]|0)+4>>2];c[f>>2]=Q;Q=c[f>>2]|0;c[q+136>>2]=c[n>>2];c[m>>2]=Q;c[q+152>>2]=0;Q=Gx((c[m>>2]|0)*788|0)|0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P*788|0)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P*788|0)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}else{c[v>>2]=t;c[w>>2]=-1;Q=c[w>>2]|0;c[u>>2]=c[v>>2];c[q+72>>2]=Q;c[c[u>>2]>>2]=0;c[s>>2]=c[t>>2];c[q+88>>2]=s;Q=0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P*788|0)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P*788|0)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}}function pk(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;u=i;i=i+144|0;l=u+16|0;j=u+8|0;f=u+108|0;g=u+24|0;q=u+104|0;n=u+112|0;h=u+116|0;m=u+120|0;o=u;p=u+96|0;k=u+124|0;r=u+100|0;s=u+12|0;t=u+4|0;c[l>>2]=b;c[j>>2]=e;c[f>>2]=1;b=g+0|0;e=b+72|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(e|0));c[q>>2]=0;c[n>>2]=8;c[h>>2]=0;a:while(1){if((c[h>>2]|0)>=(c[j>>2]|0))break;c[m>>2]=d[(c[l>>2]|0)+(c[h>>2]|0)>>0];if((c[m>>2]|0)>(c[f>>2]|0))c[f>>2]=c[m>>2];c[o>>2]=1;c[p>>2]=(c[h>>2]|0)+1;while(1){if((c[p>>2]|0)<(c[j>>2]|0))b=(d[(c[l>>2]|0)+(c[p>>2]|0)>>0]|0|0)==(c[m>>2]|0);else b=0;e=c[o>>2]|0;if(!b)break;c[o>>2]=e+1;c[p>>2]=(c[p>>2]|0)+1}c[h>>2]=(c[h>>2]|0)+e;if((c[h>>2]|0)==(c[j>>2]|0)?(c[m>>2]|0)==0:0)break;if((c[m>>2]|0)==0){e=c[o>>2]|0;if((c[o>>2]|0)<3){c[g>>2]=(c[g>>2]|0)+e;continue}c[o>>2]=e-2;while(1){if((c[o>>2]|0)<=0)continue a;b=g+68|0;c[b>>2]=(c[b>>2]|0)+1;c[o>>2]=c[o>>2]>>3}}c[q>>2]=c[h>>2];if((c[m>>2]|0)!=(c[n>>2]|0)){b=g+(c[m>>2]<<2)|0;c[b>>2]=(c[b>>2]|0)+1;c[o>>2]=(c[o>>2]|0)+ -1}c[n>>2]=c[m>>2];e=c[o>>2]|0;if((c[o>>2]|0)<3){b=g+(c[m>>2]<<2)|0;c[b>>2]=(c[b>>2]|0)+e;continue}c[o>>2]=e-2;while(1){if((c[o>>2]|0)<=0)continue a;b=g+64|0;c[b>>2]=(c[b>>2]|0)+1;c[o>>2]=c[o>>2]>>2}}b=k+0|0;e=b+18|0;do{a[b>>0]=0;b=b+1|0}while((b|0)<(e|0));Ml(g,18,7,k);b=k+16|0;a[b>>0]=(d[b>>0]|0)+2;b=k+17|0;a[b>>0]=(d[b>>0]|0)+3;c[r>>2]=0;c[s>>2]=18+(c[f>>2]<<1);c[t>>2]=0;while(1){if((c[t>>2]|0)>=18)break;b=da(c[g+(c[t>>2]<<2)>>2]|0,d[k+(c[t>>2]|0)>>0]|0)|0;c[s>>2]=(c[s>>2]|0)+b;c[r>>2]=(c[r>>2]|0)+(c[g+(c[t>>2]<<2)>>2]|0);c[t>>2]=(c[t>>2]|0)+1}i=u;return c[s>>2]|0}function qk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0;f=i;i=i+288|0;g=f+132|0;D=f+140|0;C=f+116|0;E=f+24|0;K=f+232|0;j=f+64|0;M=f+272|0;I=f+188|0;H=f+112|0;G=f+60|0;T=f+56|0;F=f+40|0;R=f+44|0;S=f+48|0;Y=f+52|0;Z=f+204|0;N=f+120|0;$=f+108|0;aa=f+96|0;ba=f+68|0;X=f+72|0;U=f+76|0;V=f+80|0;W=f+84|0;ia=f+88|0;ja=f+92|0;ha=f;ea=f+228|0;fa=f+236|0;ga=f+274|0;da=f+252|0;u=f+260|0;v=f+264|0;w=f+124|0;s=f+128|0;t=f+268|0;r=f+8|0;n=f+136|0;p=f+256|0;q=f+275|0;B=f+148|0;A=f+152|0;z=f+156|0;y=f+160|0;x=f+164|0;L=f+168|0;P=f+172|0;o=f+176|0;k=f+180|0;l=f+184|0;m=f+240|0;ka=f+192|0;la=f+196|0;ma=f+32|0;na=f+220|0;oa=f+28|0;pa=f+100|0;qa=f+224|0;ra=f+104|0;sa=f+16|0;va=f+216|0;ua=f+212|0;ta=f+276|0;wa=f+36|0;J=f+200|0;h=f+208|0;_=f+144|0;O=f+244|0;ca=f+273|0;Q=f+248|0;c[wa>>2]=b;c[J>>2]=d;c[h>>2]=e;e=c[wa>>2]|0;b=c[h>>2]|0;c[va>>2]=c[J>>2];c[ua>>2]=b;b=c[va>>2]|0;d=c[ua>>2]|0;a[sa+0>>0]=a[ta+0>>0]|0;c[qa>>2]=b;c[ra>>2]=d;c[_>>2]=((c[ra>>2]|0)-(c[qa>>2]|0)|0)/2096|0;d=c[_>>2]|0;c[pa>>2]=e;c[oa>>2]=c[pa>>2];b=c[oa>>2]|0;c[na>>2]=b;c[ma>>2]=(c[na>>2]|0)+8;c[la>>2]=c[ma>>2];if(!(d>>>0<=(((c[c[la>>2]>>2]|0)-(c[b>>2]|0)|0)/2096|0)>>>0)){rk(e);g=c[_>>2]|0;c[P>>2]=e;c[o>>2]=g;g=c[P>>2]|0;c[k>>2]=_e(g)|0;if((c[o>>2]|0)>>>0>(c[k>>2]|0)>>>0)Zt(g);c[x>>2]=g;c[y>>2]=c[x>>2];wa=c[y>>2]|0;c[z>>2]=wa;c[A>>2]=(c[z>>2]|0)+8;c[B>>2]=c[A>>2];c[l>>2]=((c[c[B>>2]>>2]|0)-(c[wa>>2]|0)|0)/2096|0;if((c[l>>2]|0)>>>0>=(((c[k>>2]|0)>>>0)/2|0)>>>0)c[L>>2]=c[k>>2];else{c[m>>2]=c[l>>2]<<1;c[n>>2]=m;c[p>>2]=o;wa=c[n>>2]|0;va=c[p>>2]|0;a[r+0>>0]=a[q+0>>0]|0;c[s>>2]=wa;c[t>>2]=va;va=c[s>>2]|0;wa=c[t>>2]|0;c[u>>2]=r;c[v>>2]=va;c[w>>2]=wa;c[L>>2]=c[((c[c[v>>2]>>2]|0)>>>0<(c[c[w>>2]>>2]|0)>>>0?c[t>>2]|0:c[s>>2]|0)>>2]}Ye(e,c[L>>2]|0);Ze(e,c[J>>2]|0,c[h>>2]|0);i=f;return}c[O>>2]=c[h>>2];a[ca>>0]=0;va=c[_>>2]|0;c[ka>>2]=e;wa=c[ka>>2]|0;if(va>>>0>(((c[wa+4>>2]|0)-(c[wa>>2]|0)|0)/2096|0)>>>0){a[ca>>0]=1;c[O>>2]=c[J>>2];c[da>>2]=e;va=c[da>>2]|0;va=((c[va+4>>2]|0)-(c[va>>2]|0)|0)/2096|0;c[ea>>2]=O;c[fa>>2]=va;va=c[ea>>2]|0;wa=c[fa>>2]|0;a[ha+0>>0]=a[ga+0>>0]|0;c[ia>>2]=va;c[ja>>2]=wa;wa=c[ia>>2]|0;c[wa>>2]=(c[wa>>2]|0)+((c[ja>>2]|0)*2096|0)}va=c[O>>2]|0;ua=c[e>>2]|0;c[U>>2]=c[J>>2];c[V>>2]=va;c[W>>2]=ua;c[X>>2]=c[U>>2];ua=c[X>>2]|0;c[Y>>2]=c[V>>2];va=c[Y>>2]|0;c[Z>>2]=c[W>>2];wa=c[Z>>2]|0;c[N>>2]=ua;c[$>>2]=va;c[aa>>2]=wa;c[ba>>2]=((c[$>>2]|0)-(c[N>>2]|0)|0)/2096|0;sz(c[aa>>2]|0,c[N>>2]|0,(c[ba>>2]|0)*2096|0)|0;c[Q>>2]=(c[aa>>2]|0)+((c[ba>>2]|0)*2096|0);if(a[ca>>0]&1){Ze(e,c[O>>2]|0,c[h>>2]|0);i=f;return}h=c[Q>>2]|0;c[R>>2]=e;c[S>>2]=h;h=c[S>>2]|0;c[T>>2]=c[R>>2];c[F>>2]=h;h=c[T>>2]|0;while(1){if((c[F>>2]|0)==(c[h+4>>2]|0))break;c[G>>2]=h;c[H>>2]=(c[G>>2]|0)+8;c[I>>2]=c[H>>2];wa=c[I>>2]|0;ua=h+4|0;va=(c[ua>>2]|0)+ -2096|0;c[ua>>2]=va;c[g>>2]=va;va=c[g>>2]|0;c[K>>2]=wa;c[j>>2]=va;va=c[K>>2]|0;wa=c[j>>2]|0;a[E+0>>0]=a[M+0>>0]|0;c[D>>2]=va;c[C>>2]=wa}i=f;return}function rk(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;d=i;i=i+192|0;z=d+72|0;I=d+164|0;N=d+156|0;O=d+64|0;M=d;J=d+60|0;K=d+12|0;L=d+184|0;H=d+44|0;G=d+20|0;F=d+24|0;Q=d+28|0;E=d+32|0;P=d+36|0;R=d+40|0;h=d+124|0;g=d+68|0;f=d+48|0;n=d+144|0;m=d+152|0;l=d+160|0;k=d+168|0;j=d+176|0;r=d+76|0;s=d+80|0;t=d+84|0;o=d+88|0;p=d+92|0;q=d+96|0;x=d+100|0;y=d+120|0;v=d+104|0;w=d+108|0;u=d+112|0;A=d+116|0;D=d+8|0;C=d+16|0;B=d+140|0;V=d+52|0;X=d+132|0;W=d+56|0;U=d+148|0;S=d+4|0;T=d+172|0;e=d+128|0;c[S>>2]=b;b=c[S>>2]|0;S=c[b>>2]|0;c[X>>2]=U;c[W>>2]=-1;W=c[W>>2]|0;c[V>>2]=c[X>>2];c[d+136>>2]=W;c[c[V>>2]>>2]=0;c[T>>2]=c[U>>2];c[d+180>>2]=T;if((S|0)==0){i=d;return}c[R>>2]=b;R=c[R>>2]|0;c[P>>2]=R;X=c[P>>2]|0;P=c[X>>2]|0;c[Q>>2]=X;c[E>>2]=P;P=c[Q>>2]|0;while(1){if((c[E>>2]|0)==(c[P+4>>2]|0))break;c[F>>2]=P;c[G>>2]=(c[F>>2]|0)+8;c[H>>2]=c[G>>2];X=c[H>>2]|0;V=P+4|0;W=(c[V>>2]|0)+ -2096|0;c[V>>2]=W;c[I>>2]=W;W=c[I>>2]|0;c[J>>2]=X;c[K>>2]=W;W=c[J>>2]|0;X=c[K>>2]|0;a[M+0>>0]=a[L+0>>0]|0;c[N>>2]=W;c[O>>2]=X}c[z>>2]=R;c[f>>2]=b;c[g>>2]=(c[f>>2]|0)+8;c[h>>2]=c[g>>2];V=c[h>>2]|0;X=c[b>>2]|0;c[j>>2]=b;c[k>>2]=c[j>>2];W=c[k>>2]|0;c[l>>2]=W;c[m>>2]=(c[l>>2]|0)+8;c[n>>2]=c[m>>2];W=((c[c[n>>2]>>2]|0)-(c[W>>2]|0)|0)/2096|0;c[o>>2]=V;c[p>>2]=X;c[q>>2]=W;W=c[p>>2]|0;X=c[q>>2]|0;c[r>>2]=c[o>>2];c[s>>2]=W;c[t>>2]=X;Ix(c[s>>2]|0);c[v>>2]=u;c[w>>2]=-1;X=c[w>>2]|0;c[x>>2]=c[v>>2];c[y>>2]=X;c[c[x>>2]>>2]=0;c[e>>2]=c[u>>2];c[A>>2]=e;c[B>>2]=b;c[C>>2]=(c[B>>2]|0)+8;c[D>>2]=c[C>>2];c[c[D>>2]>>2]=0;c[b+4>>2]=0;c[b>>2]=0;i=d;return}function sk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0;f=i;i=i+288|0;g=f+132|0;D=f+140|0;C=f+116|0;E=f+24|0;K=f+232|0;j=f+64|0;M=f+272|0;I=f+188|0;H=f+112|0;G=f+60|0;T=f+56|0;F=f+40|0;R=f+44|0;S=f+48|0;Y=f+52|0;Z=f+204|0;N=f+120|0;$=f+108|0;aa=f+96|0;ba=f+68|0;X=f+72|0;U=f+76|0;V=f+80|0;W=f+84|0;ia=f+88|0;ja=f+92|0;ha=f;ea=f+228|0;fa=f+236|0;ga=f+274|0;da=f+252|0;u=f+260|0;v=f+264|0;w=f+124|0;s=f+128|0;t=f+268|0;r=f+8|0;n=f+136|0;p=f+256|0;q=f+275|0;B=f+148|0;A=f+152|0;z=f+156|0;y=f+160|0;x=f+164|0;L=f+168|0;P=f+172|0;o=f+176|0;k=f+180|0;l=f+184|0;m=f+240|0;ka=f+192|0;la=f+196|0;ma=f+32|0;na=f+220|0;oa=f+28|0;pa=f+100|0;qa=f+224|0;ra=f+104|0;sa=f+16|0;va=f+216|0;ua=f+212|0;ta=f+276|0;wa=f+36|0;J=f+200|0;h=f+208|0;_=f+144|0;O=f+244|0;ca=f+273|0;Q=f+248|0;c[wa>>2]=b;c[J>>2]=d;c[h>>2]=e;e=c[wa>>2]|0;b=c[h>>2]|0;c[va>>2]=c[J>>2];c[ua>>2]=b;b=c[va>>2]|0;d=c[ua>>2]|0;a[sa+0>>0]=a[ta+0>>0]|0;c[qa>>2]=b;c[ra>>2]=d;c[_>>2]=((c[ra>>2]|0)-(c[qa>>2]|0)|0)/1040|0;d=c[_>>2]|0;c[pa>>2]=e;c[oa>>2]=c[pa>>2];b=c[oa>>2]|0;c[na>>2]=b;c[ma>>2]=(c[na>>2]|0)+8;c[la>>2]=c[ma>>2];if(!(d>>>0<=(((c[c[la>>2]>>2]|0)-(c[b>>2]|0)|0)/1040|0)>>>0)){tk(e);g=c[_>>2]|0;c[P>>2]=e;c[o>>2]=g;g=c[P>>2]|0;c[k>>2]=nh(g)|0;if((c[o>>2]|0)>>>0>(c[k>>2]|0)>>>0)Zt(g);c[x>>2]=g;c[y>>2]=c[x>>2];wa=c[y>>2]|0;c[z>>2]=wa;c[A>>2]=(c[z>>2]|0)+8;c[B>>2]=c[A>>2];c[l>>2]=((c[c[B>>2]>>2]|0)-(c[wa>>2]|0)|0)/1040|0;if((c[l>>2]|0)>>>0>=(((c[k>>2]|0)>>>0)/2|0)>>>0)c[L>>2]=c[k>>2];else{c[m>>2]=c[l>>2]<<1;c[n>>2]=m;c[p>>2]=o;wa=c[n>>2]|0;va=c[p>>2]|0;a[r+0>>0]=a[q+0>>0]|0;c[s>>2]=wa;c[t>>2]=va;va=c[s>>2]|0;wa=c[t>>2]|0;c[u>>2]=r;c[v>>2]=va;c[w>>2]=wa;c[L>>2]=c[((c[c[v>>2]>>2]|0)>>>0<(c[c[w>>2]>>2]|0)>>>0?c[t>>2]|0:c[s>>2]|0)>>2]}lh(e,c[L>>2]|0);mh(e,c[J>>2]|0,c[h>>2]|0);i=f;return}c[O>>2]=c[h>>2];a[ca>>0]=0;va=c[_>>2]|0;c[ka>>2]=e;wa=c[ka>>2]|0;if(va>>>0>(((c[wa+4>>2]|0)-(c[wa>>2]|0)|0)/1040|0)>>>0){a[ca>>0]=1;c[O>>2]=c[J>>2];c[da>>2]=e;va=c[da>>2]|0;va=((c[va+4>>2]|0)-(c[va>>2]|0)|0)/1040|0;c[ea>>2]=O;c[fa>>2]=va;va=c[ea>>2]|0;wa=c[fa>>2]|0;a[ha+0>>0]=a[ga+0>>0]|0;c[ia>>2]=va;c[ja>>2]=wa;wa=c[ia>>2]|0;c[wa>>2]=(c[wa>>2]|0)+((c[ja>>2]|0)*1040|0)}va=c[O>>2]|0;ua=c[e>>2]|0;c[U>>2]=c[J>>2];c[V>>2]=va;c[W>>2]=ua;c[X>>2]=c[U>>2];ua=c[X>>2]|0;c[Y>>2]=c[V>>2];va=c[Y>>2]|0;c[Z>>2]=c[W>>2];wa=c[Z>>2]|0;c[N>>2]=ua;c[$>>2]=va;c[aa>>2]=wa;c[ba>>2]=((c[$>>2]|0)-(c[N>>2]|0)|0)/1040|0;sz(c[aa>>2]|0,c[N>>2]|0,(c[ba>>2]|0)*1040|0)|0;c[Q>>2]=(c[aa>>2]|0)+((c[ba>>2]|0)*1040|0);if(a[ca>>0]&1){mh(e,c[O>>2]|0,c[h>>2]|0);i=f;return}h=c[Q>>2]|0;c[R>>2]=e;c[S>>2]=h;h=c[S>>2]|0;c[T>>2]=c[R>>2];c[F>>2]=h;h=c[T>>2]|0;while(1){if((c[F>>2]|0)==(c[h+4>>2]|0))break;c[G>>2]=h;c[H>>2]=(c[G>>2]|0)+8;c[I>>2]=c[H>>2];wa=c[I>>2]|0;ua=h+4|0;va=(c[ua>>2]|0)+ -1040|0;c[ua>>2]=va;c[g>>2]=va;va=c[g>>2]|0;c[K>>2]=wa;c[j>>2]=va;va=c[K>>2]|0;wa=c[j>>2]|0;a[E+0>>0]=a[M+0>>0]|0;c[D>>2]=va;c[C>>2]=wa}i=f;return}function tk(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;d=i;i=i+192|0;z=d+72|0;I=d+164|0;N=d+156|0;O=d+64|0;M=d;J=d+60|0;K=d+12|0;L=d+184|0;H=d+44|0;G=d+20|0;F=d+24|0;Q=d+28|0;E=d+32|0;P=d+36|0;R=d+40|0;h=d+124|0;g=d+68|0;f=d+48|0;n=d+144|0;m=d+152|0;l=d+160|0;k=d+168|0;j=d+176|0;r=d+76|0;s=d+80|0;t=d+84|0;o=d+88|0;p=d+92|0;q=d+96|0;x=d+100|0;y=d+120|0;v=d+104|0;w=d+108|0;u=d+112|0;A=d+116|0;D=d+8|0;C=d+16|0;B=d+140|0;V=d+52|0;X=d+132|0;W=d+56|0;U=d+148|0;S=d+4|0;T=d+172|0;e=d+128|0;c[S>>2]=b;b=c[S>>2]|0;S=c[b>>2]|0;c[X>>2]=U;c[W>>2]=-1;W=c[W>>2]|0;c[V>>2]=c[X>>2];c[d+136>>2]=W;c[c[V>>2]>>2]=0;c[T>>2]=c[U>>2];c[d+180>>2]=T;if((S|0)==0){i=d;return}c[R>>2]=b;R=c[R>>2]|0;c[P>>2]=R;X=c[P>>2]|0;P=c[X>>2]|0;c[Q>>2]=X;c[E>>2]=P;P=c[Q>>2]|0;while(1){if((c[E>>2]|0)==(c[P+4>>2]|0))break;c[F>>2]=P;c[G>>2]=(c[F>>2]|0)+8;c[H>>2]=c[G>>2];X=c[H>>2]|0;V=P+4|0;W=(c[V>>2]|0)+ -1040|0;c[V>>2]=W;c[I>>2]=W;W=c[I>>2]|0;c[J>>2]=X;c[K>>2]=W;W=c[J>>2]|0;X=c[K>>2]|0;a[M+0>>0]=a[L+0>>0]|0;c[N>>2]=W;c[O>>2]=X}c[z>>2]=R;c[f>>2]=b;c[g>>2]=(c[f>>2]|0)+8;c[h>>2]=c[g>>2];V=c[h>>2]|0;X=c[b>>2]|0;c[j>>2]=b;c[k>>2]=c[j>>2];W=c[k>>2]|0;c[l>>2]=W;c[m>>2]=(c[l>>2]|0)+8;c[n>>2]=c[m>>2];W=((c[c[n>>2]>>2]|0)-(c[W>>2]|0)|0)/1040|0;c[o>>2]=V;c[p>>2]=X;c[q>>2]=W;W=c[p>>2]|0;X=c[q>>2]|0;c[r>>2]=c[o>>2];c[s>>2]=W;c[t>>2]=X;Ix(c[s>>2]|0);c[v>>2]=u;c[w>>2]=-1;X=c[w>>2]|0;c[x>>2]=c[v>>2];c[y>>2]=X;c[c[x>>2]>>2]=0;c[e>>2]=c[u>>2];c[A>>2]=e;c[B>>2]=b;c[C>>2]=(c[B>>2]|0)+8;c[D>>2]=c[C>>2];c[c[D>>2]>>2]=0;c[b+4>>2]=0;c[b>>2]=0;i=d;return}



function qr(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0;o=i;i=i+16|0;k=o+12|0;l=o+8|0;n=o+4|0;m=o;p=d+8|0;p=Yb[c[(c[p>>2]|0)+20>>2]&63](p)|0;c[n>>2]=c[e>>2];c[m>>2]=c[f>>2];f=a[p>>0]|0;if((f&1)==0){f=(f&255)>>>1;e=p+1|0;p=p+1|0}else{q=c[p+8>>2]|0;f=c[p+4>>2]|0;e=q;p=q}q=e+f|0;c[l+0>>2]=c[n+0>>2];c[k+0>>2]=c[m+0>>2];lr(b,d,l,k,g,h,j,p,q);i=o;return}function rr(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;j=i;i=i+16|0;k=j+8|0;m=j+4|0;l=j;jo(m,f);f=Pu(m,263504)|0;nn(c[m>>2]|0)|0;h=h+24|0;c[l>>2]=c[e>>2];c[k+0>>2]=c[l+0>>2];sr(b,h,d,k,g,f);c[a>>2]=c[d>>2];i=j;return}function sr(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;h=i;i=i+16|0;j=h+4|0;k=h;a=a+8|0;a=Yb[c[c[a>>2]>>2]&63](a)|0;c[k>>2]=c[e>>2];e=a+168|0;c[j+0>>2]=c[k+0>>2];f=(Jp(d,j,a,e,g,f,0)|0)-a|0;if((f|0)>=168){i=h;return}c[b>>2]=((f|0)/12|0|0)%7|0;i=h;return}function tr(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;j=i;i=i+16|0;k=j+8|0;m=j+4|0;l=j;jo(m,f);f=Pu(m,263504)|0;nn(c[m>>2]|0)|0;h=h+16|0;c[l>>2]=c[e>>2];c[k+0>>2]=c[l+0>>2];ur(b,h,d,k,g,f);c[a>>2]=c[d>>2];i=j;return}function ur(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;h=i;i=i+16|0;j=h+4|0;k=h;a=a+8|0;a=Yb[c[(c[a>>2]|0)+4>>2]&63](a)|0;c[k>>2]=c[e>>2];e=a+288|0;c[j+0>>2]=c[k+0>>2];f=(Jp(d,j,a,e,g,f,0)|0)-a|0;if((f|0)>=288){i=h;return}c[b>>2]=((f|0)/12|0|0)%12|0;i=h;return}function vr(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;b=i;i=i+16|0;j=b+8|0;l=b+4|0;k=b;jo(l,f);f=Pu(l,263504)|0;nn(c[l>>2]|0)|0;h=h+20|0;c[k>>2]=c[e>>2];c[j+0>>2]=c[k+0>>2];wr(0,h,d,j,g,f);c[a>>2]=c[d>>2];i=b;return}function wr(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=Kr(d,h,f,g,4)|0;if((c[f>>2]&4|0)!=0){i=a;return}if((g|0)<69)f=g+2e3|0;else f=(g+ -69|0)>>>0<31?g+1900|0:g;c[b>>2]=f+ -1900;i=a;return}function xr(b,d,e,f,g,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;n=i;i=i+176|0;l=n+156|0;m=n+148|0;$=n;P=n+56|0;y=n+60|0;o=n+116|0;q=n+12|0;p=n+108|0;Y=n+16|0;G=n+20|0;V=n+24|0;F=n+28|0;X=n+32|0;U=n+36|0;W=n+40|0;x=n+104|0;Q=n+128|0;K=n+136|0;u=n+144|0;O=n+152|0;I=n+160|0;J=n+64|0;_=n+68|0;w=n+72|0;v=n+76|0;T=n+80|0;R=n+84|0;S=n+88|0;H=n+92|0;L=n+96|0;N=n+100|0;M=n+4|0;C=n+120|0;E=n+44|0;D=n+124|0;t=n+8|0;r=n+48|0;s=n+132|0;z=n+52|0;A=n+140|0;B=n+112|0;c[h>>2]=0;jo($,g);Z=Pu($,263504)|0;nn(c[$>>2]|0)|0;do switch(k<<24>>24|0){case 101:case 100:{c[Y>>2]=c[f>>2];c[l+0>>2]=c[Y+0>>2];yr(0,j+12|0,e,l,h,Z);break};case 70:{c[U>>2]=c[e>>2];c[W>>2]=c[f>>2];c[m+0>>2]=c[U+0>>2];c[l+0>>2]=c[W+0>>2];lr(X,d,m,l,g,h,j,262424,262432|0);c[e>>2]=c[X>>2];break};case 82:{c[R>>2]=c[e>>2];c[S>>2]=c[f>>2];c[m+0>>2]=c[R+0>>2];c[l+0>>2]=c[S+0>>2];lr(T,d,m,l,g,h,j,262448,262453|0);c[e>>2]=c[T>>2];break};case 83:{c[H>>2]=c[f>>2];c[l+0>>2]=c[H+0>>2];Gr(0,j,e,l,h,Z);break};case 68:{c[V>>2]=c[e>>2];c[F>>2]=c[f>>2];c[m+0>>2]=c[V+0>>2];c[l+0>>2]=c[F+0>>2];lr(G,d,m,l,g,h,j,262416,262424|0);c[e>>2]=c[G>>2];break};case 65:case 97:{c[P>>2]=c[f>>2];c[l+0>>2]=c[P+0>>2];sr(d,j+24|0,e,l,h,Z);break};case 114:{c[w>>2]=c[e>>2];c[v>>2]=c[f>>2];c[m+0>>2]=c[w+0>>2];c[l+0>>2]=c[v+0>>2];lr(_,d,m,l,g,h,j,262432,262443|0);c[e>>2]=c[_>>2];break};case 72:{c[x>>2]=c[f>>2];c[l+0>>2]=c[x+0>>2];zr(0,j+8|0,e,l,h,Z);break};case 104:case 66:case 98:{c[y>>2]=c[f>>2];c[l+0>>2]=c[y+0>>2];ur(d,j+16|0,e,l,h,Z);break};case 121:{c[z>>2]=c[f>>2];c[l+0>>2]=c[z+0>>2];wr(0,j+20|0,e,l,h,Z);break};case 89:{c[A>>2]=c[f>>2];c[l+0>>2]=c[A+0>>2];Ir(0,j+20|0,e,l,h,Z);break};case 37:{c[B>>2]=c[f>>2];c[l+0>>2]=c[B+0>>2];Jr(0,e,l,h,Z);break};case 119:{c[C>>2]=c[f>>2];c[l+0>>2]=c[C+0>>2];Hr(0,j+24|0,e,l,h,Z);break};case 120:{$=c[(c[d>>2]|0)+20>>2]|0;c[E>>2]=c[e>>2];c[D>>2]=c[f>>2];c[m+0>>2]=c[E+0>>2];c[l+0>>2]=c[D+0>>2];Tb[$&63](b,d,m,l,g,h,j);i=n;return};case 88:{o=d+8|0;o=Yb[c[(c[o>>2]|0)+24>>2]&63](o)|0;c[r>>2]=c[e>>2];c[s>>2]=c[f>>2];f=a[o>>0]|0;if((f&1)==0){p=o+1|0;q=o+1|0;o=(f&255)>>>1}else{q=c[o+8>>2]|0;p=q;o=c[o+4>>2]|0}c[m+0>>2]=c[r+0>>2];c[l+0>>2]=c[s+0>>2];lr(t,d,m,l,g,h,j,q,p+o|0);c[e>>2]=c[t>>2];break};case 116:case 110:{c[I>>2]=c[f>>2];c[l+0>>2]=c[I+0>>2];Er(0,e,l,h,Z);break};case 112:{c[J>>2]=c[f>>2];c[l+0>>2]=c[J+0>>2];Fr(d,j+8|0,e,l,h,Z);break};case 106:{c[K>>2]=c[f>>2];c[l+0>>2]=c[K+0>>2];Br(0,j+28|0,e,l,h,Z);break};case 84:{c[N>>2]=c[e>>2];c[M>>2]=c[f>>2];c[m+0>>2]=c[N+0>>2];c[l+0>>2]=c[M+0>>2];lr(L,d,m,l,g,h,j,262456,262464|0);c[e>>2]=c[L>>2];break};case 77:{c[O>>2]=c[f>>2];c[l+0>>2]=c[O+0>>2];Dr(0,j+4|0,e,l,h,Z);break};case 109:{c[u>>2]=c[f>>2];c[l+0>>2]=c[u+0>>2];Cr(0,j+16|0,e,l,h,Z);break};case 73:{c[Q>>2]=c[f>>2];c[l+0>>2]=c[Q+0>>2];Ar(0,j+8|0,e,l,h,Z);break};case 99:{r=d+8|0;r=Yb[c[(c[r>>2]|0)+12>>2]&63](r)|0;c[q>>2]=c[e>>2];c[p>>2]=c[f>>2];s=a[r>>0]|0;if((s&1)==0){t=(s&255)>>>1;s=r+1|0;r=r+1|0}else{$=c[r+8>>2]|0;t=c[r+4>>2]|0;s=$;r=$}c[m+0>>2]=c[q+0>>2];c[l+0>>2]=c[p+0>>2];lr(o,d,m,l,g,h,j,s,r+t|0);c[e>>2]=c[o>>2];break};default:c[h>>2]=c[h>>2]|4}while(0);c[b>>2]=c[e>>2];i=n;return}function yr(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=Kr(d,h,f,g,2)|0;d=c[f>>2]|0;if((d&4|0)==0?(g+ -1|0)>>>0<31:0){c[b>>2]=g;i=a;return}c[f>>2]=d|4;i=a;return}function zr(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=Kr(d,h,f,g,2)|0;d=c[f>>2]|0;if((d&4|0)==0&(g|0)<24){c[b>>2]=g;i=a;return}else{c[f>>2]=d|4;i=a;return}}function Ar(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=Kr(d,h,f,g,2)|0;d=c[f>>2]|0;if((d&4|0)==0?(g+ -1|0)>>>0<12:0){c[b>>2]=g;i=a;return}c[f>>2]=d|4;i=a;return}function Br(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=Kr(d,h,f,g,3)|0;d=c[f>>2]|0;if((d&4|0)==0&(g|0)<366){c[b>>2]=g;i=a;return}else{c[f>>2]=d|4;i=a;return}}function Cr(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=Kr(d,h,f,g,2)|0;d=c[f>>2]|0;if((d&4|0)==0&(g|0)<13){c[b>>2]=g+ -1;i=a;return}else{c[f>>2]=d|4;i=a;return}}function Dr(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=Kr(d,h,f,g,2)|0;d=c[f>>2]|0;if((d&4|0)==0&(g|0)<60){c[b>>2]=g;i=a;return}else{c[f>>2]=d|4;i=a;return}}function Er(a,e,f,g,h){a=a|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;a=i;h=h+8|0;a:while(1){k=c[e>>2]|0;do if((k|0)!=0){if((c[k+12>>2]|0)==(c[k+16>>2]|0))if((Yb[c[(c[k>>2]|0)+36>>2]&63](k)|0)==-1){c[e>>2]=0;k=0;break}else{k=c[e>>2]|0;break}}else k=0;while(0);l=(k|0)==0;k=c[f>>2]|0;do if((k|0)!=0){if((c[k+12>>2]|0)!=(c[k+16>>2]|0))if(l)break;else break a;if(!((Yb[c[(c[k>>2]|0)+36>>2]&63](k)|0)==-1))if(l)break;else break a;else{c[f>>2]=0;j=12;break}}else j=12;while(0);if((j|0)==12){j=0;if(l){k=0;break}else k=0}m=c[e>>2]|0;l=c[m+12>>2]|0;if((l|0)==(c[m+16>>2]|0))l=Yb[c[(c[m>>2]|0)+36>>2]&63](m)|0;else l=d[l>>0]|0;if(!((l&255)<<24>>24>-1))break;if((b[(c[h>>2]|0)+(l<<24>>24<<1)>>1]&8192)==0)break;k=c[e>>2]|0;m=k+12|0;l=c[m>>2]|0;if((l|0)==(c[k+16>>2]|0)){Yb[c[(c[k>>2]|0)+40>>2]&63](k)|0;continue}else{c[m>>2]=l+1;continue}}h=c[e>>2]|0;do if((h|0)!=0){if((c[h+12>>2]|0)==(c[h+16>>2]|0))if((Yb[c[(c[h>>2]|0)+36>>2]&63](h)|0)==-1){c[e>>2]=0;h=0;break}else{h=c[e>>2]|0;break}}else h=0;while(0);e=(h|0)==0;do if((k|0)!=0){if((c[k+12>>2]|0)==(c[k+16>>2]|0)?(Yb[c[(c[k>>2]|0)+36>>2]&63](k)|0)==-1:0){c[f>>2]=0;j=32;break}if(e){i=a;return}}else j=32;while(0);if((j|0)==32?!e:0){i=a;return}c[g>>2]=c[g>>2]|2;i=a;return}function Fr(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j+4|0;l=j;b=b+8|0;b=Yb[c[(c[b>>2]|0)+8>>2]&63](b)|0;m=a[b>>0]|0;if((m&1)==0)m=(m&255)>>>1;else m=c[b+4>>2]|0;n=a[b+12>>0]|0;if((n&1)==0)n=(n&255)>>>1;else n=c[b+16>>2]|0;if((m|0)==(0-n|0)){c[g>>2]=c[g>>2]|4;i=j;return}c[l>>2]=c[f>>2];n=b+24|0;c[k+0>>2]=c[l+0>>2];n=Jp(e,k,b,n,h,g,0)|0;h=n-b|0;if((n|0)==(b|0)?(c[d>>2]|0)==12:0){c[d>>2]=0;i=j;return}if((h|0)!=12){i=j;return}h=c[d>>2]|0;if((h|0)>=12){i=j;return}c[d>>2]=h+12;i=j;return}function Gr(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=Kr(d,h,f,g,2)|0;d=c[f>>2]|0;if((d&4|0)==0&(g|0)<61){c[b>>2]=g;i=a;return}else{c[f>>2]=d|4;i=a;return}}function Hr(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=Kr(d,h,f,g,1)|0;d=c[f>>2]|0;if((d&4|0)==0&(g|0)<7){c[b>>2]=g;i=a;return}else{c[f>>2]=d|4;i=a;return}}function Ir(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=Kr(d,h,f,g,4)|0;if((c[f>>2]&4|0)!=0){i=a;return}c[b>>2]=g+ -1900;i=a;return}function Jr(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0;a=i;j=c[b>>2]|0;do if((j|0)!=0){if((c[j+12>>2]|0)==(c[j+16>>2]|0))if((Yb[c[(c[j>>2]|0)+36>>2]&63](j)|0)==-1){c[b>>2]=0;j=0;break}else{j=c[b>>2]|0;break}}else j=0;while(0);k=(j|0)==0;j=c[e>>2]|0;do if((j|0)!=0){if((c[j+12>>2]|0)==(c[j+16>>2]|0)?(Yb[c[(c[j>>2]|0)+36>>2]&63](j)|0)==-1:0){c[e>>2]=0;h=11;break}if(!k)h=12}else h=11;while(0);if((h|0)==11)if(k)h=12;else j=0;if((h|0)==12){c[f>>2]=c[f>>2]|6;i=a;return}l=c[b>>2]|0;k=c[l+12>>2]|0;if((k|0)==(c[l+16>>2]|0))k=Yb[c[(c[l>>2]|0)+36>>2]&63](l)|0;else k=d[k>>0]|0;if(!((Sb[c[(c[g>>2]|0)+36>>2]&31](g,k&255,0)|0)<<24>>24==37)){c[f>>2]=c[f>>2]|4;i=a;return}l=c[b>>2]|0;k=l+12|0;g=c[k>>2]|0;if((g|0)==(c[l+16>>2]|0))Yb[c[(c[l>>2]|0)+40>>2]&63](l)|0;else c[k>>2]=g+1;g=c[b>>2]|0;do if((g|0)!=0){if((c[g+12>>2]|0)==(c[g+16>>2]|0))if((Yb[c[(c[g>>2]|0)+36>>2]&63](g)|0)==-1){c[b>>2]=0;g=0;break}else{g=c[b>>2]|0;break}}else g=0;while(0);b=(g|0)==0;do if((j|0)!=0){if((c[j+12>>2]|0)==(c[j+16>>2]|0)?(Yb[c[(c[j>>2]|0)+36>>2]&63](j)|0)==-1:0){c[e>>2]=0;h=31;break}if(b){i=a;return}}else h=31;while(0);if((h|0)==31?!b:0){i=a;return}c[f>>2]=c[f>>2]|2;i=a;return}function Kr(a,e,f,g,h){a=a|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;j=i;m=c[a>>2]|0;do if((m|0)!=0){if((c[m+12>>2]|0)==(c[m+16>>2]|0))if((Yb[c[(c[m>>2]|0)+36>>2]&63](m)|0)==-1){c[a>>2]=0;m=0;break}else{m=c[a>>2]|0;break}}else m=0;while(0);n=(m|0)==0;m=c[e>>2]|0;do if((m|0)!=0){if((c[m+12>>2]|0)==(c[m+16>>2]|0)?(Yb[c[(c[m>>2]|0)+36>>2]&63](m)|0)==-1:0){c[e>>2]=0;l=11;break}if(!n)l=12}else l=11;while(0);if((l|0)==11)if(n)l=12;else m=0;if((l|0)==12){c[f>>2]=c[f>>2]|6;q=0;i=j;return q|0}l=c[a>>2]|0;n=c[l+12>>2]|0;if((n|0)==(c[l+16>>2]|0))n=Yb[c[(c[l>>2]|0)+36>>2]&63](l)|0;else n=d[n>>0]|0;l=n&255;if(l<<24>>24>-1?(k=g+8|0,!((b[(c[k>>2]|0)+(n<<24>>24<<1)>>1]&2048)==0)):0){l=(Sb[c[(c[g>>2]|0)+36>>2]&31](g,l,0)|0)<<24>>24;p=c[a>>2]|0;o=p+12|0;n=c[o>>2]|0;if((n|0)==(c[p+16>>2]|0)){Yb[c[(c[p>>2]|0)+40>>2]&63](p)|0;n=m;o=m;m=l}else{c[o>>2]=n+1;n=m;o=m;m=l}while(1){m=m+ -48|0;l=h+ -1|0;h=c[a>>2]|0;do if((h|0)!=0){if((c[h+12>>2]|0)==(c[h+16>>2]|0))if((Yb[c[(c[h>>2]|0)+36>>2]&63](h)|0)==-1){c[a>>2]=0;h=0;break}else{h=c[a>>2]|0;break}}else h=0;while(0);p=(h|0)==0;if((o|0)!=0)if((c[o+12>>2]|0)==(c[o+16>>2]|0))if((Yb[c[(c[o>>2]|0)+36>>2]&63](o)|0)==-1){c[e>>2]=0;h=0;o=0}else{h=n;o=n}else h=n;else{h=n;o=0}n=c[a>>2]|0;if(!((p^(o|0)==0)&(l|0)>0)){l=40;break}p=c[n+12>>2]|0;if((p|0)==(c[n+16>>2]|0))p=Yb[c[(c[n>>2]|0)+36>>2]&63](n)|0;else p=d[p>>0]|0;n=p&255;if(!(n<<24>>24>-1)){l=52;break}if((b[(c[k>>2]|0)+(p<<24>>24<<1)>>1]&2048)==0){l=52;break}m=((Sb[c[(c[g>>2]|0)+36>>2]&31](g,n,0)|0)<<24>>24)+(m*10|0)|0;n=c[a>>2]|0;q=n+12|0;p=c[q>>2]|0;if((p|0)==(c[n+16>>2]|0)){Yb[c[(c[n>>2]|0)+40>>2]&63](n)|0;n=h;h=l;continue}else{c[q>>2]=p+1;n=h;h=l;continue}}if((l|0)==40){do if((n|0)!=0){if((c[n+12>>2]|0)==(c[n+16>>2]|0))if((Yb[c[(c[n>>2]|0)+36>>2]&63](n)|0)==-1){c[a>>2]=0;n=0;break}else{n=c[a>>2]|0;break}}else n=0;while(0);g=(n|0)==0;do if((h|0)!=0){if((c[h+12>>2]|0)==(c[h+16>>2]|0)?(Yb[c[(c[h>>2]|0)+36>>2]&63](h)|0)==-1:0){c[e>>2]=0;l=50;break}if(g){q=m;i=j;return q|0}}else l=50;while(0);if((l|0)==50?!g:0){q=m;i=j;return q|0}c[f>>2]=c[f>>2]|2;q=m;i=j;return q|0}else if((l|0)==52){i=j;return m|0}}c[f>>2]=c[f>>2]|4;q=0;i=j;return q|0}function Lr(a,b,d,e,f,g,h,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;m=i;i=i+32|0;q=m+20|0;p=m+16|0;y=m+12|0;s=m+8|0;r=m+4|0;o=m;jo(y,f);n=Pu(y,263496)|0;nn(c[y>>2]|0)|0;c[g>>2]=0;a:do if((j|0)!=(k|0)){t=0;b:while(1){while(1){if((t|0)!=0){l=64;break a}t=c[d>>2]|0;if((t|0)!=0){u=c[t+12>>2]|0;if((u|0)==(c[t+16>>2]|0))u=Yb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else u=c[u>>2]|0;if((u|0)==-1){c[d>>2]=0;t=0;v=1}else v=0}else{t=0;v=1}u=c[e>>2]|0;do if((u|0)!=0){w=c[u+12>>2]|0;if((w|0)==(c[u+16>>2]|0))w=Yb[c[(c[u>>2]|0)+36>>2]&63](u)|0;else w=c[w>>2]|0;if(!((w|0)==-1))if(v)break;else{l=19;break b}else{c[e>>2]=0;l=17;break}}else l=17;while(0);if((l|0)==17){l=0;if(v){l=19;break b}else u=0}if((Sb[c[(c[n>>2]|0)+52>>2]&31](n,c[j>>2]|0,0)|0)<<24>>24==37){l=21;break}if(Sb[c[(c[n>>2]|0)+12>>2]&31](n,8192,c[j>>2]|0)|0){l=31;break}v=t+12|0;w=c[v>>2]|0;u=t+16|0;if((w|0)==(c[u>>2]|0))w=Yb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else w=c[w>>2]|0;y=fc[c[(c[n>>2]|0)+28>>2]&15](n,w)|0;if((y|0)==(fc[c[(c[n>>2]|0)+28>>2]&15](n,c[j>>2]|0)|0)){l=59;break}c[g>>2]=4;t=4}c:do if((l|0)==21){l=0;w=j+4|0;if((w|0)==(k|0)){l=22;break b}v=Sb[c[(c[n>>2]|0)+52>>2]&31](n,c[w>>2]|0,0)|0;if(v<<24>>24==48|v<<24>>24==69){w=j+8|0;if((w|0)==(k|0)){l=25;break b}j=Sb[c[(c[n>>2]|0)+52>>2]&31](n,c[w>>2]|0,0)|0}else{j=v;v=0}y=c[(c[b>>2]|0)+36>>2]|0;c[r>>2]=t;c[o>>2]=u;c[p+0>>2]=c[r+0>>2];c[q+0>>2]=c[o+0>>2];Xb[y&3](s,b,p,q,f,g,h,j,v);c[d>>2]=c[s>>2];j=w+4|0}else if((l|0)==31){while(1){l=0;j=j+4|0;if((j|0)==(k|0)){j=k;break}if(Sb[c[(c[n>>2]|0)+12>>2]&31](n,8192,c[j>>2]|0)|0)l=31;else break}v=u;w=u;while(1){if((t|0)!=0){u=c[t+12>>2]|0;if((u|0)==(c[t+16>>2]|0))u=Yb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else u=c[u>>2]|0;if((u|0)==-1){c[d>>2]=0;u=1;t=0}else u=0}else{u=1;t=0}do if((w|0)!=0){x=c[w+12>>2]|0;if((x|0)==(c[w+16>>2]|0))w=Yb[c[(c[w>>2]|0)+36>>2]&63](w)|0;else w=c[x>>2]|0;if(!((w|0)==-1))if(u^(v|0)==0){u=v;w=v;break}else break c;else{c[e>>2]=0;v=0;l=46;break}}else l=46;while(0);if((l|0)==46){l=0;if(u)break c;else{u=v;w=0}}x=t+12|0;y=c[x>>2]|0;v=t+16|0;if((y|0)==(c[v>>2]|0))y=Yb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else y=c[y>>2]|0;if(!(Sb[c[(c[n>>2]|0)+12>>2]&31](n,8192,y)|0))break c;y=c[x>>2]|0;if((y|0)==(c[v>>2]|0)){Yb[c[(c[t>>2]|0)+40>>2]&63](t)|0;v=u;continue}else{c[x>>2]=y+4;v=u;continue}}}else if((l|0)==59){l=0;w=c[v>>2]|0;if((w|0)==(c[u>>2]|0))Yb[c[(c[t>>2]|0)+40>>2]&63](t)|0;else c[v>>2]=w+4;j=j+4|0}while(0);if((j|0)==(k|0)){l=64;break a}t=c[g>>2]|0}if((l|0)==19){c[g>>2]=4;break}else if((l|0)==22){c[g>>2]=4;break}else if((l|0)==25){c[g>>2]=4;break}}else l=64;while(0);if((l|0)==64)t=c[d>>2]|0;if((t|0)!=0){n=c[t+12>>2]|0;if((n|0)==(c[t+16>>2]|0))n=Yb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else n=c[n>>2]|0;if((n|0)==-1){c[d>>2]=0;t=0;d=1}else d=0}else{t=0;d=1}o=c[e>>2]|0;do if((o|0)!=0){n=c[o+12>>2]|0;if((n|0)==(c[o+16>>2]|0))n=Yb[c[(c[o>>2]|0)+36>>2]&63](o)|0;else n=c[n>>2]|0;if((n|0)==-1){c[e>>2]=0;l=77;break}if(d){c[a>>2]=t;i=m;return}}else l=77;while(0);if((l|0)==77?!d:0){c[a>>2]=t;i=m;return}c[g>>2]=c[g>>2]|2;c[a>>2]=t;i=m;return}function Mr(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function Nr(a){a=a|0;return}function Or(a){a=a|0;return 2}function Pr(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j+12|0;l=j+8|0;n=j+4|0;m=j;c[n>>2]=c[d>>2];c[m>>2]=c[e>>2];c[l+0>>2]=c[n+0>>2];c[k+0>>2]=c[m+0>>2];Lr(a,b,l,k,f,g,h,262560,262592|0);i=j;return}function Qr(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0;o=i;i=i+16|0;k=o+12|0;l=o+8|0;n=o+4|0;m=o;p=d+8|0;p=Yb[c[(c[p>>2]|0)+20>>2]&63](p)|0;c[n>>2]=c[e>>2];c[m>>2]=c[f>>2];f=a[p>>0]|0;if((f&1)==0){f=(f&255)>>>1;e=p+4|0;p=p+4|0}else{q=c[p+8>>2]|0;f=c[p+4>>2]|0;e=q;p=q}q=e+(f<<2)|0;c[l+0>>2]=c[n+0>>2];c[k+0>>2]=c[m+0>>2];Lr(b,d,l,k,g,h,j,p,q);i=o;return}function Rr(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;j=i;i=i+16|0;k=j+8|0;m=j+4|0;l=j;jo(m,f);f=Pu(m,263496)|0;nn(c[m>>2]|0)|0;h=h+24|0;c[l>>2]=c[e>>2];c[k+0>>2]=c[l+0>>2];Sr(b,h,d,k,g,f);c[a>>2]=c[d>>2];i=j;return}function Sr(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;h=i;i=i+16|0;j=h+4|0;k=h;a=a+8|0;a=Yb[c[c[a>>2]>>2]&63](a)|0;c[k>>2]=c[e>>2];e=a+168|0;c[j+0>>2]=c[k+0>>2];f=(hq(d,j,a,e,g,f,0)|0)-a|0;if((f|0)>=168){i=h;return}c[b>>2]=((f|0)/12|0|0)%7|0;i=h;return}function Tr(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;j=i;i=i+16|0;k=j+8|0;m=j+4|0;l=j;jo(m,f);f=Pu(m,263496)|0;nn(c[m>>2]|0)|0;h=h+16|0;c[l>>2]=c[e>>2];c[k+0>>2]=c[l+0>>2];Ur(b,h,d,k,g,f);c[a>>2]=c[d>>2];i=j;return}function Ur(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;h=i;i=i+16|0;j=h+4|0;k=h;a=a+8|0;a=Yb[c[(c[a>>2]|0)+4>>2]&63](a)|0;c[k>>2]=c[e>>2];e=a+288|0;c[j+0>>2]=c[k+0>>2];f=(hq(d,j,a,e,g,f,0)|0)-a|0;if((f|0)>=288){i=h;return}c[b>>2]=((f|0)/12|0|0)%12|0;i=h;return}function Vr(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;b=i;i=i+16|0;j=b+8|0;l=b+4|0;k=b;jo(l,f);f=Pu(l,263496)|0;nn(c[l>>2]|0)|0;h=h+20|0;c[k>>2]=c[e>>2];c[j+0>>2]=c[k+0>>2];Wr(0,h,d,j,g,f);c[a>>2]=c[d>>2];i=b;return}function Wr(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=is(d,h,f,g,4)|0;if((c[f>>2]&4|0)!=0){i=a;return}if((g|0)<69)f=g+2e3|0;else f=(g+ -69|0)>>>0<31?g+1900|0:g;c[b>>2]=f+ -1900;i=a;return}function Xr(b,d,e,f,g,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;n=i;i=i+176|0;l=n+156|0;m=n+148|0;$=n;P=n+56|0;Q=n+60|0;t=n+116|0;q=n+12|0;p=n+108|0;X=n+16|0;U=n+20|0;W=n+24|0;V=n+28|0;Y=n+32|0;_=n+36|0;Z=n+40|0;v=n+104|0;u=n+128|0;w=n+136|0;x=n+144|0;y=n+152|0;A=n+160|0;z=n+64|0;B=n+68|0;D=n+72|0;C=n+76|0;E=n+80|0;G=n+84|0;F=n+88|0;K=n+92|0;H=n+96|0;J=n+100|0;I=n+4|0;N=n+120|0;M=n+44|0;L=n+124|0;o=n+8|0;s=n+48|0;r=n+132|0;T=n+52|0;S=n+140|0;R=n+112|0;c[h>>2]=0;jo($,g);O=Pu($,263496)|0;nn(c[$>>2]|0)|0;do switch(k<<24>>24|0){case 99:{o=d+8|0;o=Yb[c[(c[o>>2]|0)+12>>2]&63](o)|0;c[q>>2]=c[e>>2];c[p>>2]=c[f>>2];r=a[o>>0]|0;if((r&1)==0){r=(r&255)>>>1;s=o+4|0;o=o+4|0}else{$=c[o+8>>2]|0;r=c[o+4>>2]|0;s=$;o=$}c[m+0>>2]=c[q+0>>2];c[l+0>>2]=c[p+0>>2];Lr(t,d,m,l,g,h,j,s,o+(r<<2)|0);c[e>>2]=c[t>>2];break};case 65:case 97:{c[P>>2]=c[f>>2];c[l+0>>2]=c[P+0>>2];Sr(d,j+24|0,e,l,h,O);break};case 104:case 66:case 98:{c[Q>>2]=c[f>>2];c[l+0>>2]=c[Q+0>>2];Ur(d,j+16|0,e,l,h,O);break};case 68:{c[W>>2]=c[e>>2];c[V>>2]=c[f>>2];c[m+0>>2]=c[W+0>>2];c[l+0>>2]=c[V+0>>2];Lr(U,d,m,l,g,h,j,262592,262624|0);c[e>>2]=c[U>>2];break};case 101:case 100:{c[X>>2]=c[f>>2];c[l+0>>2]=c[X+0>>2];Yr(0,j+12|0,e,l,h,O);break};case 70:{c[_>>2]=c[e>>2];c[Z>>2]=c[f>>2];c[m+0>>2]=c[_+0>>2];c[l+0>>2]=c[Z+0>>2];Lr(Y,d,m,l,g,h,j,262624,262656|0);c[e>>2]=c[Y>>2];break};case 73:{c[u>>2]=c[f>>2];c[l+0>>2]=c[u+0>>2];_r(0,j+8|0,e,l,h,O);break};case 72:{c[v>>2]=c[f>>2];c[l+0>>2]=c[v+0>>2];Zr(0,j+8|0,e,l,h,O);break};case 106:{c[w>>2]=c[f>>2];c[l+0>>2]=c[w+0>>2];$r(0,j+28|0,e,l,h,O);break};case 109:{c[x>>2]=c[f>>2];c[l+0>>2]=c[x+0>>2];as(0,j+16|0,e,l,h,O);break};case 77:{c[y>>2]=c[f>>2];c[l+0>>2]=c[y+0>>2];bs(0,j+4|0,e,l,h,O);break};case 112:{c[z>>2]=c[f>>2];c[l+0>>2]=c[z+0>>2];ds(d,j+8|0,e,l,h,O);break};case 116:case 110:{c[A>>2]=c[f>>2];c[l+0>>2]=c[A+0>>2];cs(0,e,l,h,O);break};case 114:{c[D>>2]=c[e>>2];c[C>>2]=c[f>>2];c[m+0>>2]=c[D+0>>2];c[l+0>>2]=c[C+0>>2];Lr(B,d,m,l,g,h,j,262656,262700|0);c[e>>2]=c[B>>2];break};case 82:{c[G>>2]=c[e>>2];c[F>>2]=c[f>>2];c[m+0>>2]=c[G+0>>2];c[l+0>>2]=c[F+0>>2];Lr(E,d,m,l,g,h,j,262704,262724|0);c[e>>2]=c[E>>2];break};case 84:{c[J>>2]=c[e>>2];c[I>>2]=c[f>>2];c[m+0>>2]=c[J+0>>2];c[l+0>>2]=c[I+0>>2];Lr(H,d,m,l,g,h,j,262728,262760|0);c[e>>2]=c[H>>2];break};case 83:{c[K>>2]=c[f>>2];c[l+0>>2]=c[K+0>>2];es(0,j,e,l,h,O);break};case 120:{$=c[(c[d>>2]|0)+20>>2]|0;c[M>>2]=c[e>>2];c[L>>2]=c[f>>2];c[m+0>>2]=c[M+0>>2];c[l+0>>2]=c[L+0>>2];Tb[$&63](b,d,m,l,g,h,j);i=n;return};case 119:{c[N>>2]=c[f>>2];c[l+0>>2]=c[N+0>>2];fs(0,j+24|0,e,l,h,O);break};case 88:{t=d+8|0;t=Yb[c[(c[t>>2]|0)+24>>2]&63](t)|0;c[s>>2]=c[e>>2];c[r>>2]=c[f>>2];f=a[t>>0]|0;if((f&1)==0){p=t+4|0;q=t+4|0;t=(f&255)>>>1}else{q=c[t+8>>2]|0;p=q;t=c[t+4>>2]|0}c[m+0>>2]=c[s+0>>2];c[l+0>>2]=c[r+0>>2];Lr(o,d,m,l,g,h,j,p,q+(t<<2)|0);c[e>>2]=c[o>>2];break};case 37:{c[R>>2]=c[f>>2];c[l+0>>2]=c[R+0>>2];hs(0,e,l,h,O);break};case 89:{c[S>>2]=c[f>>2];c[l+0>>2]=c[S+0>>2];gs(0,j+20|0,e,l,h,O);break};case 121:{c[T>>2]=c[f>>2];c[l+0>>2]=c[T+0>>2];Wr(0,j+20|0,e,l,h,O);break};default:c[h>>2]=c[h>>2]|4}while(0);c[b>>2]=c[e>>2];i=n;return}function Yr(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=is(d,h,f,g,2)|0;d=c[f>>2]|0;if((d&4|0)==0?(g+ -1|0)>>>0<31:0){c[b>>2]=g;i=a;return}c[f>>2]=d|4;i=a;return}function Zr(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=is(d,h,f,g,2)|0;d=c[f>>2]|0;if((d&4|0)==0&(g|0)<24){c[b>>2]=g;i=a;return}else{c[f>>2]=d|4;i=a;return}}function _r(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=is(d,h,f,g,2)|0;d=c[f>>2]|0;if((d&4|0)==0?(g+ -1|0)>>>0<12:0){c[b>>2]=g;i=a;return}c[f>>2]=d|4;i=a;return}function $r(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=is(d,h,f,g,3)|0;d=c[f>>2]|0;if((d&4|0)==0&(g|0)<366){c[b>>2]=g;i=a;return}else{c[f>>2]=d|4;i=a;return}}function as(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=is(d,h,f,g,2)|0;d=c[f>>2]|0;if((d&4|0)==0&(g|0)<13){c[b>>2]=g+ -1;i=a;return}else{c[f>>2]=d|4;i=a;return}}function bs(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=is(d,h,f,g,2)|0;d=c[f>>2]|0;if((d&4|0)==0&(g|0)<60){c[b>>2]=g;i=a;return}else{c[f>>2]=d|4;i=a;return}}function cs(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;a=i;a:while(1){h=c[b>>2]|0;do if((h|0)!=0){j=c[h+12>>2]|0;if((j|0)==(c[h+16>>2]|0))h=Yb[c[(c[h>>2]|0)+36>>2]&63](h)|0;else h=c[j>>2]|0;if((h|0)==-1){c[b>>2]=0;h=1;break}else{h=(c[b>>2]|0)==0;break}}else h=1;while(0);j=c[d>>2]|0;do if((j|0)!=0){k=c[j+12>>2]|0;if((k|0)==(c[j+16>>2]|0))k=Yb[c[(c[j>>2]|0)+36>>2]&63](j)|0;else k=c[k>>2]|0;if(!((k|0)==-1))if(h)break;else{f=j;break a}else{c[d>>2]=0;g=15;break}}else g=15;while(0);if((g|0)==15){g=0;if(h){f=0;break}else j=0}h=c[b>>2]|0;k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0))h=Yb[c[(c[h>>2]|0)+36>>2]&63](h)|0;else h=c[k>>2]|0;if(!(Sb[c[(c[f>>2]|0)+12>>2]&31](f,8192,h)|0)){f=j;break}h=c[b>>2]|0;j=h+12|0;k=c[j>>2]|0;if((k|0)==(c[h+16>>2]|0)){Yb[c[(c[h>>2]|0)+40>>2]&63](h)|0;continue}else{c[j>>2]=k+4;continue}}h=c[b>>2]|0;do if((h|0)!=0){j=c[h+12>>2]|0;if((j|0)==(c[h+16>>2]|0))h=Yb[c[(c[h>>2]|0)+36>>2]&63](h)|0;else h=c[j>>2]|0;if((h|0)==-1){c[b>>2]=0;b=1;break}else{b=(c[b>>2]|0)==0;break}}else b=1;while(0);do if((f|0)!=0){h=c[f+12>>2]|0;if((h|0)==(c[f+16>>2]|0))f=Yb[c[(c[f>>2]|0)+36>>2]&63](f)|0;else f=c[h>>2]|0;if((f|0)==-1){c[d>>2]=0;g=37;break}if(b){i=a;return}}else g=37;while(0);if((g|0)==37?!b:0){i=a;return}c[e>>2]=c[e>>2]|2;i=a;return}function ds(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j+4|0;l=j;b=b+8|0;b=Yb[c[(c[b>>2]|0)+8>>2]&63](b)|0;m=a[b>>0]|0;if((m&1)==0)m=(m&255)>>>1;else m=c[b+4>>2]|0;n=a[b+12>>0]|0;if((n&1)==0)n=(n&255)>>>1;else n=c[b+16>>2]|0;if((m|0)==(0-n|0)){c[g>>2]=c[g>>2]|4;i=j;return}c[l>>2]=c[f>>2];n=b+24|0;c[k+0>>2]=c[l+0>>2];n=hq(e,k,b,n,h,g,0)|0;h=n-b|0;if((n|0)==(b|0)?(c[d>>2]|0)==12:0){c[d>>2]=0;i=j;return}if((h|0)!=12){i=j;return}h=c[d>>2]|0;if((h|0)>=12){i=j;return}c[d>>2]=h+12;i=j;return}function es(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=is(d,h,f,g,2)|0;d=c[f>>2]|0;if((d&4|0)==0&(g|0)<61){c[b>>2]=g;i=a;return}else{c[f>>2]=d|4;i=a;return}}function fs(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=is(d,h,f,g,1)|0;d=c[f>>2]|0;if((d&4|0)==0&(g|0)<7){c[b>>2]=g;i=a;return}else{c[f>>2]=d|4;i=a;return}}function gs(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=is(d,h,f,g,4)|0;if((c[f>>2]&4|0)!=0){i=a;return}c[b>>2]=g+ -1900;i=a;return}function hs(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;a=i;j=c[b>>2]|0;do if((j|0)!=0){h=c[j+12>>2]|0;if((h|0)==(c[j+16>>2]|0))h=Yb[c[(c[j>>2]|0)+36>>2]&63](j)|0;else h=c[h>>2]|0;if((h|0)==-1){c[b>>2]=0;j=1;break}else{j=(c[b>>2]|0)==0;break}}else j=1;while(0);h=c[d>>2]|0;do if((h|0)!=0){k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0))k=Yb[c[(c[h>>2]|0)+36>>2]&63](h)|0;else k=c[k>>2]|0;if(!((k|0)==-1))if(j)break;else{g=16;break}else{c[d>>2]=0;g=14;break}}else g=14;while(0);if((g|0)==14)if(j)g=16;else h=0;if((g|0)==16){c[e>>2]=c[e>>2]|6;i=a;return}k=c[b>>2]|0;j=c[k+12>>2]|0;if((j|0)==(c[k+16>>2]|0))j=Yb[c[(c[k>>2]|0)+36>>2]&63](k)|0;else j=c[j>>2]|0;if(!((Sb[c[(c[f>>2]|0)+52>>2]&31](f,j,0)|0)<<24>>24==37)){c[e>>2]=c[e>>2]|4;i=a;return}j=c[b>>2]|0;k=j+12|0;f=c[k>>2]|0;if((f|0)==(c[j+16>>2]|0))Yb[c[(c[j>>2]|0)+40>>2]&63](j)|0;else c[k>>2]=f+4;f=c[b>>2]|0;do if((f|0)!=0){j=c[f+12>>2]|0;if((j|0)==(c[f+16>>2]|0))f=Yb[c[(c[f>>2]|0)+36>>2]&63](f)|0;else f=c[j>>2]|0;if((f|0)==-1){c[b>>2]=0;b=1;break}else{b=(c[b>>2]|0)==0;break}}else b=1;while(0);do if((h|0)!=0){f=c[h+12>>2]|0;if((f|0)==(c[h+16>>2]|0))f=Yb[c[(c[h>>2]|0)+36>>2]&63](h)|0;else f=c[f>>2]|0;if((f|0)==-1){c[d>>2]=0;g=38;break}if(b){i=a;return}}else g=38;while(0);if((g|0)==38?!b:0){i=a;return}c[e>>2]=c[e>>2]|2;i=a;return}function is(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;h=i;k=c[a>>2]|0;do if((k|0)!=0){j=c[k+12>>2]|0;if((j|0)==(c[k+16>>2]|0))j=Yb[c[(c[k>>2]|0)+36>>2]&63](k)|0;else j=c[j>>2]|0;if((j|0)==-1){c[a>>2]=0;k=1;break}else{k=(c[a>>2]|0)==0;break}}else k=1;while(0);j=c[b>>2]|0;do if((j|0)!=0){l=c[j+12>>2]|0;if((l|0)==(c[j+16>>2]|0))l=Yb[c[(c[j>>2]|0)+36>>2]&63](j)|0;else l=c[l>>2]|0;if(!((l|0)==-1))if(k)break;else{g=16;break}else{c[b>>2]=0;g=14;break}}else g=14;while(0);if((g|0)==14)if(k)g=16;else j=0;if((g|0)==16){c[d>>2]=c[d>>2]|6;o=0;i=h;return o|0}k=c[a>>2]|0;l=c[k+12>>2]|0;if((l|0)==(c[k+16>>2]|0))k=Yb[c[(c[k>>2]|0)+36>>2]&63](k)|0;else k=c[l>>2]|0;if(!(Sb[c[(c[e>>2]|0)+12>>2]&31](e,2048,k)|0)){c[d>>2]=c[d>>2]|4;o=0;i=h;return o|0}m=(Sb[c[(c[e>>2]|0)+52>>2]&31](e,k,0)|0)<<24>>24;n=c[a>>2]|0;l=n+12|0;k=c[l>>2]|0;if((k|0)==(c[n+16>>2]|0)){Yb[c[(c[n>>2]|0)+40>>2]&63](n)|0;k=j;l=j;j=m}else{c[l>>2]=k+4;k=j;l=j;j=m}while(1){j=j+ -48|0;f=f+ -1|0;m=c[a>>2]|0;do if((m|0)!=0){n=c[m+12>>2]|0;if((n|0)==(c[m+16>>2]|0))m=Yb[c[(c[m>>2]|0)+36>>2]&63](m)|0;else m=c[n>>2]|0;if((m|0)==-1){c[a>>2]=0;n=1;break}else{n=(c[a>>2]|0)==0;break}}else n=1;while(0);do if((l|0)!=0){m=c[l+12>>2]|0;if((m|0)==(c[l+16>>2]|0))l=Yb[c[(c[l>>2]|0)+36>>2]&63](l)|0;else l=c[m>>2]|0;if((l|0)==-1){c[b>>2]=0;l=0;o=1;m=0;break}else{l=k;o=(k|0)==0;m=k;break}}else{l=k;o=1;m=0}while(0);k=c[a>>2]|0;if(!((n^o)&(f|0)>0))break;n=c[k+12>>2]|0;if((n|0)==(c[k+16>>2]|0))k=Yb[c[(c[k>>2]|0)+36>>2]&63](k)|0;else k=c[n>>2]|0;if(!(Sb[c[(c[e>>2]|0)+12>>2]&31](e,2048,k)|0)){g=63;break}j=((Sb[c[(c[e>>2]|0)+52>>2]&31](e,k,0)|0)<<24>>24)+(j*10|0)|0;n=c[a>>2]|0;k=n+12|0;o=c[k>>2]|0;if((o|0)==(c[n+16>>2]|0)){Yb[c[(c[n>>2]|0)+40>>2]&63](n)|0;k=l;l=m;continue}else{c[k>>2]=o+4;k=l;l=m;continue}}if((g|0)==63){i=h;return j|0}do if((k|0)!=0){e=c[k+12>>2]|0;if((e|0)==(c[k+16>>2]|0))e=Yb[c[(c[k>>2]|0)+36>>2]&63](k)|0;else e=c[e>>2]|0;if((e|0)==-1){c[a>>2]=0;a=1;break}else{a=(c[a>>2]|0)==0;break}}else a=1;while(0);do if((l|0)!=0){e=c[l+12>>2]|0;if((e|0)==(c[l+16>>2]|0))e=Yb[c[(c[l>>2]|0)+36>>2]&63](l)|0;else e=c[e>>2]|0;if((e|0)==-1){c[b>>2]=0;g=60;break}if(a){o=j;i=h;return o|0}}else g=60;while(0);if((g|0)==60?!a:0){o=j;i=h;return o|0}c[d>>2]=c[d>>2]|2;o=j;i=h;return o|0}function js(a){a=a|0;var b=0;b=i;ls(a+8|0);Ix(a);i=b;return}function ks(a){a=a|0;var b=0;b=i;ls(a+8|0);i=b;return}function ls(a){a=a|0;var b=0,d=0;b=i;d=c[a>>2]|0;if((d|0)==(dq()|0)){i=b;return}Cb(c[a>>2]|0);i=b;return}function ms(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0;g=i;i=i+112|0;f=g+4|0;l=g;c[l>>2]=f+100;ns(d+8|0,f,l,h,j,k);d=c[l>>2]|0;k=c[e>>2]|0;if((f|0)==(d|0)){l=k;c[b>>2]=l;i=g;return}else e=k;do{l=a[f>>0]|0;do if((e|0)!=0){j=e+24|0;h=c[j>>2]|0;if((h|0)==(c[e+28>>2]|0)){l=(fc[c[(c[e>>2]|0)+52>>2]&15](e,l&255)|0)==-1;k=l?0:k;e=l?0:e;break}else{c[j>>2]=h+1;a[h>>0]=l;break}}else e=0;while(0);f=f+1|0}while((f|0)!=(d|0));c[b>>2]=k;i=g;return}function ns(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;j=i;i=i+16|0;k=j;a[k>>0]=37;m=k+1|0;a[m>>0]=g;l=k+2|0;a[l>>0]=h;a[k+3>>0]=0;if(!(h<<24>>24==0)){a[m>>0]=h;a[l>>0]=g}c[e>>2]=d+(Wa(d|0,(c[e>>2]|0)-d|0,k|0,f|0,c[b>>2]|0)|0);i=j;return}function os(a){a=a|0;var b=0;b=i;ls(a+8|0);Ix(a);i=b;return}function ps(a){a=a|0;var b=0;b=i;ls(a+8|0);i=b;return}function qs(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0;f=i;i=i+416|0;e=f+8|0;k=f;c[k>>2]=e+400;rs(b+8|0,e,k,g,h,j);b=c[k>>2]|0;j=c[d>>2]|0;if((e|0)==(b|0)){k=j;c[a>>2]=k;i=f;return}else d=j;do{g=c[e>>2]|0;if((d|0)==0)d=0;else{h=d+24|0;k=c[h>>2]|0;if((k|0)==(c[d+28>>2]|0))g=fc[c[(c[d>>2]|0)+52>>2]&15](d,g)|0;else{c[h>>2]=k+4;c[k>>2]=g}k=(g|0)==-1;j=k?0:j;d=k?0:d}e=e+4|0}while((e|0)!=(b|0));c[a>>2]=j;i=f;return}function rs(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+128|0;l=h+16|0;m=h+12|0;j=h;k=h+8|0;c[m>>2]=l+100;ns(a,l,m,e,f,g);e=j;c[e>>2]=0;c[e+4>>2]=0;c[k>>2]=l;e=(c[d>>2]|0)-b>>2;g=_a(c[a>>2]|0)|0;a=nx(b,k,e,j)|0;if((g|0)!=0)_a(g|0)|0;if((a|0)==-1)nt(264384);else{c[d>>2]=b+(a<<2);i=h;return}}function ss(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function ts(a){a=a|0;return}function us(a){a=a|0;return 127}function vs(a){a=a|0;return 127}function ws(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function xs(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function ys(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function zs(a,b){a=a|0;b=b|0;b=i;In(a,1,45);i=b;return}function As(a){a=a|0;return 0}function Bs(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function Cs(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function Ds(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function Es(a){a=a|0;return}function Fs(a){a=a|0;return 127}function Gs(a){a=a|0;return 127}function Hs(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function Is(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function Js(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function Ks(a,b){a=a|0;b=b|0;b=i;In(a,1,45);i=b;return}function Ls(a){a=a|0;return 0}function Ms(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function Ns(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function Os(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function Ps(a){a=a|0;return}function Qs(a){a=a|0;return 2147483647}function Rs(a){a=a|0;return 2147483647}function Ss(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function Ts(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function Us(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function Vs(a,b){a=a|0;b=b|0;b=i;Xn(a,1,45);i=b;return}function Ws(a){a=a|0;return 0}function Xs(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function Ys(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function Zs(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function _s(a){a=a|0;return}function $s(a){a=a|0;return 2147483647}function at(a){a=a|0;return 2147483647}function bt(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function ct(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function dt(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function et(a,b){a=a|0;b=b|0;b=i;Xn(a,1,45);i=b;return}function ft(a){a=a|0;return 0}function gt(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function ht(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function it(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function jt(a){a=a|0;return}function kt(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;n=i;i=i+240|0;r=n;x=n+136|0;m=n+8|0;s=n+4|0;o=n+20|0;v=n+236|0;y=n+16|0;t=n+124|0;q=n+24|0;c[m>>2]=x;d=m+4|0;c[d>>2]=113;x=x+100|0;jo(o,h);w=Pu(o,263504)|0;a[v>>0]=0;c[y>>2]=c[f>>2];h=c[h+4>>2]|0;c[r+0>>2]=c[y+0>>2];do if(mt(e,r,g,o,h,j,v,w,m,s,x)|0){cc[c[(c[w>>2]|0)+32>>2]&7](w,263120,263130,t)|0;w=c[s>>2]|0;g=c[m>>2]|0;h=w-g|0;if((h|0)>98){h=Dy(h+2|0)|0;if((h|0)==0)Cy();else{p=h;u=h}}else{p=0;u=q}if((a[v>>0]|0)==0)h=u;else{a[u>>0]=45;h=u+1|0}if(g>>>0<w>>>0){u=t+10|0;v=t;do{w=a[g>>0]|0;x=t;while(1){if((a[x>>0]|0)==w<<24>>24)break;x=x+1|0;if((x|0)==(u|0)){x=u;break}}a[h>>0]=a[263120+(x-v)>>0]|0;g=g+1|0;h=h+1|0}while(g>>>0<(c[s>>2]|0)>>>0)}a[h>>0]=0;c[r>>2]=k;if((sx(q,263136,r)|0)==1){Ey(p);break}else nt(263144)}while(0);p=c[e>>2]|0;do if((p|0)!=0){if((c[p+12>>2]|0)==(c[p+16>>2]|0))if((Yb[c[(c[p>>2]|0)+36>>2]&63](p)|0)==-1){c[e>>2]=0;p=0;break}else{p=c[e>>2]|0;break}}else p=0;while(0);k=(p|0)==0;p=c[f>>2]|0;do if((p|0)!=0){if((c[p+12>>2]|0)!=(c[p+16>>2]|0))if(k)break;else{l=28;break}if(!((Yb[c[(c[p>>2]|0)+36>>2]&63](p)|0)==-1))if(k)break;else{l=28;break}else{c[f>>2]=0;l=26;break}}else l=26;while(0);if((l|0)==26?k:0)l=28;if((l|0)==28)c[j>>2]=c[j>>2]|2;c[b>>2]=c[e>>2];nn(c[o>>2]|0)|0;l=c[m>>2]|0;c[m>>2]=0;if((l|0)==0){i=n;return}Vb[c[d>>2]&127](l);i=n;return}function lt(a){a=a|0;return}function mt(e,f,g,h,j,k,l,m,n,o,p){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0;q=i;i=i+496|0;z=q+488|0;U=q+24|0;r=q+472|0;A=q+440|0;F=q+468|0;E=q+480|0;C=q+492|0;D=q+493|0;w=q;t=q+444|0;v=q+12|0;u=q+456|0;s=q+424|0;B=q+436|0;x=q+484|0;c[z>>2]=p;c[r>>2]=U;p=r+4|0;c[p>>2]=113;c[A>>2]=U;c[F>>2]=U+400;c[E>>2]=0;c[w+0>>2]=0;c[w+4>>2]=0;c[w+8>>2]=0;c[t+0>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;c[v+0>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;c[u+0>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;c[s+0>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;qt(g,h,E,C,D,w,t,v,u,B);c[o>>2]=c[n>>2];H=m+8|0;J=u+1|0;G=u+4|0;m=u+8|0;g=v+1|0;I=v+4|0;h=v+8|0;T=(j&512|0)!=0;L=t+1|0;N=t+8|0;R=t+4|0;M=s+1|0;K=s+8|0;S=s+4|0;Q=E+3|0;O=w+4|0;P=0;j=0;a:while(1){V=c[e>>2]|0;do if((V|0)!=0){if((c[V+12>>2]|0)==(c[V+16>>2]|0))if((Yb[c[(c[V>>2]|0)+36>>2]&63](V)|0)==-1){c[e>>2]=0;V=0;break}else{V=c[e>>2]|0;break}}else V=0;while(0);W=(V|0)==0;V=c[f>>2]|0;do if((V|0)!=0){if((c[V+12>>2]|0)!=(c[V+16>>2]|0))if(W)break;else{y=250;break a}if(!((Yb[c[(c[V>>2]|0)+36>>2]&63](V)|0)==-1))if(W)break;else{y=250;break a}else{c[f>>2]=0;y=12;break}}else y=12;while(0);if((y|0)==12){y=0;if(W){V=0;y=250;break}else V=0}b:do switch(a[E+P>>0]|0){case 0:{y=27;break};case 2:{if(!((j|0)!=0|P>>>0<2)){if((P|0)==2)W=(a[Q>>0]|0)!=0;else W=0;if(!(T|W)){j=0;break b}}Z=a[t>>0]|0;X=(Z&1)==0;W=X?L:c[N>>2]|0;c:do if((P|0)!=0?(d[E+(P+ -1)>>0]|0)<2:0){_=(Z&255)>>>1;Y=c[N>>2]|0;$=c[R>>2]|0;while(1){if((W|0)==((X?L:Y)+(X?_:$)|0))break;aa=a[W>>0]|0;if(!(aa<<24>>24>-1))break;if((b[(c[H>>2]|0)+(aa<<24>>24<<1)>>1]&8192)==0)break;else W=W+1|0}ba=W-(X?L:Y)|0;_=a[s>>0]|0;$=(_&1)==0;if($)aa=(_&255)>>>1;else aa=c[S>>2]|0;d:do if(!(ba>>>0>aa>>>0)){if($){$=s+(((_&255)>>>1)-ba)+1|0;aa=(_&255)>>>1;_=M}else{_=c[K>>2]|0;aa=c[S>>2]|0;$=_+(aa-ba)|0}_=_+aa|0;if(($|0)==(_|0)){_=V;$=V;break c}else aa=X?L:Y;while(1){if((a[$>>0]|0)!=(a[aa>>0]|0))break d;$=$+1|0;if(($|0)==(_|0)){_=V;$=V;break c}else aa=aa+1|0}}while(0);_=V;$=V;W=X?L:Y}else{_=V;$=V}while(0);e:while(1){if((Z&1)==0){X=(Z&255)>>>1;V=L}else{X=c[R>>2]|0;V=c[N>>2]|0}if((W|0)==(V+X|0)){V=_;break}V=c[e>>2]|0;do if((V|0)!=0){if((c[V+12>>2]|0)==(c[V+16>>2]|0))if((Yb[c[(c[V>>2]|0)+36>>2]&63](V)|0)==-1){c[e>>2]=0;V=0;break}else{V=c[e>>2]|0;break}}else V=0;while(0);X=(V|0)==0;do if(($|0)!=0){if((c[$+12>>2]|0)!=(c[$+16>>2]|0))if(X){V=_;break}else{V=_;break e}if(!((Yb[c[(c[$>>2]|0)+36>>2]&63]($)|0)==-1))if(X^(_|0)==0){V=_;$=_;break}else{V=_;break e}else{c[f>>2]=0;V=0;y=149;break}}else{V=_;y=149}while(0);if((y|0)==149){y=0;if(X)break;else $=0}Y=c[e>>2]|0;X=c[Y+12>>2]|0;if((X|0)==(c[Y+16>>2]|0))X=Yb[c[(c[Y>>2]|0)+36>>2]&63](Y)|0;else X=d[X>>0]|0;if(!((X&255)<<24>>24==(a[W>>0]|0)))break;X=c[e>>2]|0;Y=X+12|0;Z=c[Y>>2]|0;if((Z|0)==(c[X+16>>2]|0))Yb[c[(c[X>>2]|0)+40>>2]&63](X)|0;else c[Y>>2]=Z+1;_=V;Z=a[t>>0]|0;W=W+1|0}if(T){X=a[t>>0]|0;if((X&1)==0){X=(X&255)>>>1;Y=L}else{X=c[R>>2]|0;Y=c[N>>2]|0}if((W|0)!=(Y+X|0)){y=164;break a}}break};case 1:{if((P|0)==3){y=250;break a}y=c[e>>2]|0;W=c[y+12>>2]|0;if((W|0)==(c[y+16>>2]|0))y=Yb[c[(c[y>>2]|0)+36>>2]&63](y)|0;else y=d[W>>0]|0;if(!((y&255)<<24>>24>-1)){y=26;break a}if((b[(c[H>>2]|0)+(y<<24>>24<<1)>>1]&8192)==0){y=26;break a}W=c[e>>2]|0;X=W+12|0;y=c[X>>2]|0;if((y|0)==(c[W+16>>2]|0))y=Yb[c[(c[W>>2]|0)+40>>2]&63](W)|0;else{c[X>>2]=y+1;y=d[y>>0]|0}Sn(s,y&255);y=27;break};case 4:{W=a[D>>0]|0;Z=V;Y=V;X=0;f:while(1){V=c[e>>2]|0;do if((V|0)!=0){if((c[V+12>>2]|0)==(c[V+16>>2]|0))if((Yb[c[(c[V>>2]|0)+36>>2]&63](V)|0)==-1){c[e>>2]=0;V=0;break}else{V=c[e>>2]|0;break}}else V=0;while(0);_=(V|0)==0;do if((Y|0)!=0){if((c[Y+12>>2]|0)!=(c[Y+16>>2]|0))if(_){V=Z;break}else{V=Z;break f}if(!((Yb[c[(c[Y>>2]|0)+36>>2]&63](Y)|0)==-1))if(_^(Z|0)==0){V=Z;Y=Z;break}else{V=Z;break f}else{c[f>>2]=0;V=0;y=175;break}}else{V=Z;y=175}while(0);if((y|0)==175){y=0;if(_)break;else Y=0}Z=c[e>>2]|0;_=c[Z+12>>2]|0;if((_|0)==(c[Z+16>>2]|0))_=Yb[c[(c[Z>>2]|0)+36>>2]&63](Z)|0;else _=d[_>>0]|0;Z=_&255;if(Z<<24>>24>-1?!((b[(c[H>>2]|0)+(_<<24>>24<<1)>>1]&2048)==0):0){_=c[o>>2]|0;if((_|0)==(c[z>>2]|0)){rt(n,o,z);_=c[o>>2]|0}c[o>>2]=_+1;a[_>>0]=Z;X=X+1|0}else{_=a[w>>0]|0;if((_&1)==0)_=(_&255)>>>1;else _=c[O>>2]|0;if(!((X|0)!=0&(_|0)!=0&Z<<24>>24==W<<24>>24))break;if((U|0)==(c[F>>2]|0)){st(r,A,F);U=c[A>>2]|0}ba=U+4|0;c[A>>2]=ba;c[U>>2]=X;U=ba;X=0}$=c[e>>2]|0;_=$+12|0;Z=c[_>>2]|0;if((Z|0)==(c[$+16>>2]|0)){Yb[c[(c[$>>2]|0)+40>>2]&63]($)|0;Z=V;continue}else{c[_>>2]=Z+1;Z=V;continue}}if(!((X|0)==0?1:(c[r>>2]|0)==(U|0))){if((U|0)==(c[F>>2]|0)){st(r,A,F);U=c[A>>2]|0}ba=U+4|0;c[A>>2]=ba;c[U>>2]=X;U=ba}W=c[B>>2]|0;if((W|0)>0){X=c[e>>2]|0;do if((X|0)!=0){if((c[X+12>>2]|0)==(c[X+16>>2]|0))if((Yb[c[(c[X>>2]|0)+36>>2]&63](X)|0)==-1){c[e>>2]=0;X=0;break}else{X=c[e>>2]|0;break}}else X=0;while(0);X=(X|0)==0;do if((V|0)!=0){if((c[V+12>>2]|0)!=(c[V+16>>2]|0))if(X)break;else{y=216;break a}if(!((Yb[c[(c[V>>2]|0)+36>>2]&63](V)|0)==-1))if(X^(V|0)==0)break;else{y=216;break a}else{c[f>>2]=0;y=210;break}}else y=210;while(0);if((y|0)==210){y=0;if(X){y=216;break a}else V=0}X=c[e>>2]|0;Y=c[X+12>>2]|0;if((Y|0)==(c[X+16>>2]|0))X=Yb[c[(c[X>>2]|0)+36>>2]&63](X)|0;else X=d[Y>>0]|0;if(!((X&255)<<24>>24==(a[C>>0]|0))){y=216;break a}X=c[e>>2]|0;Y=X+12|0;Z=c[Y>>2]|0;if((Z|0)==(c[X+16>>2]|0)){Yb[c[(c[X>>2]|0)+40>>2]&63](X)|0;Y=V;X=V}else{c[Y>>2]=Z+1;Y=V;X=V}while(1){V=c[e>>2]|0;do if((V|0)!=0){if((c[V+12>>2]|0)==(c[V+16>>2]|0))if((Yb[c[(c[V>>2]|0)+36>>2]&63](V)|0)==-1){c[e>>2]=0;V=0;break}else{V=c[e>>2]|0;break}}else V=0;while(0);Z=(V|0)==0;do if((X|0)!=0){if((c[X+12>>2]|0)!=(c[X+16>>2]|0))if(Z){V=Y;break}else{y=237;break a}if(!((Yb[c[(c[X>>2]|0)+36>>2]&63](X)|0)==-1))if(Z^(Y|0)==0){V=Y;X=Y;break}else{y=237;break a}else{c[f>>2]=0;V=0;y=230;break}}else{V=Y;y=230}while(0);if((y|0)==230){y=0;if(Z){y=237;break a}else X=0}Y=c[e>>2]|0;Z=c[Y+12>>2]|0;if((Z|0)==(c[Y+16>>2]|0))Y=Yb[c[(c[Y>>2]|0)+36>>2]&63](Y)|0;else Y=d[Z>>0]|0;if(!((Y&255)<<24>>24>-1)){y=237;break a}if((b[(c[H>>2]|0)+(Y<<24>>24<<1)>>1]&2048)==0){y=237;break a}if((c[o>>2]|0)==(c[z>>2]|0))rt(n,o,z);Y=c[e>>2]|0;Z=c[Y+12>>2]|0;if((Z|0)==(c[Y+16>>2]|0))Y=Yb[c[(c[Y>>2]|0)+36>>2]&63](Y)|0;else Y=d[Z>>0]|0;_=c[o>>2]|0;c[o>>2]=_+1;a[_>>0]=Y;W=W+ -1|0;c[B>>2]=W;_=c[e>>2]|0;Z=_+12|0;Y=c[Z>>2]|0;if((Y|0)==(c[_+16>>2]|0))Yb[c[(c[_>>2]|0)+40>>2]&63](_)|0;else c[Z>>2]=Y+1;if((W|0)<=0)break;else Y=V}}if((c[o>>2]|0)==(c[n>>2]|0)){y=248;break a}break};case 3:{W=a[v>>0]|0;Y=(W&1)==0;if(Y)_=(W&255)>>>1;else _=c[I>>2]|0;X=a[u>>0]|0;Z=(X&1)==0;if(Z)$=(X&255)>>>1;else $=c[G>>2]|0;if((_|0)!=(0-$|0)){if(Y)_=(W&255)>>>1;else _=c[I>>2]|0;if((_|0)!=0){if(Z)Z=(X&255)>>>1;else Z=c[G>>2]|0;if((Z|0)!=0){Y=c[e>>2]|0;X=c[Y+12>>2]|0;if((X|0)==(c[Y+16>>2]|0)){Y=Yb[c[(c[Y>>2]|0)+36>>2]&63](Y)|0;W=a[v>>0]|0}else Y=d[X>>0]|0;Z=c[e>>2]|0;$=Z+12|0;_=c[$>>2]|0;X=(_|0)==(c[Z+16>>2]|0);if((Y&255)<<24>>24==(a[((W&1)==0?g:c[h>>2]|0)>>0]|0)){if(X)Yb[c[(c[Z>>2]|0)+40>>2]&63](Z)|0;else c[$>>2]=_+1;W=a[v>>0]|0;if((W&1)==0)W=(W&255)>>>1;else W=c[I>>2]|0;j=W>>>0>1?v:j;break b}if(X)W=Yb[c[(c[Z>>2]|0)+36>>2]&63](Z)|0;else W=d[_>>0]|0;if(!((W&255)<<24>>24==(a[((a[u>>0]&1)==0?J:c[m>>2]|0)>>0]|0))){y=113;break a}Y=c[e>>2]|0;X=Y+12|0;W=c[X>>2]|0;if((W|0)==(c[Y+16>>2]|0))Yb[c[(c[Y>>2]|0)+40>>2]&63](Y)|0;else c[X>>2]=W+1;a[l>>0]=1;W=a[u>>0]|0;if((W&1)==0)W=(W&255)>>>1;else W=c[G>>2]|0;j=W>>>0>1?u:j;break b}}if(Y)Z=(W&255)>>>1;else Z=c[I>>2]|0;_=c[e>>2]|0;Y=c[_+12>>2]|0;$=(Y|0)==(c[_+16>>2]|0);if((Z|0)==0){if($){W=Yb[c[(c[_>>2]|0)+36>>2]&63](_)|0;X=a[u>>0]|0}else W=d[Y>>0]|0;if(!((W&255)<<24>>24==(a[((X&1)==0?J:c[m>>2]|0)>>0]|0)))break b;X=c[e>>2]|0;W=X+12|0;Y=c[W>>2]|0;if((Y|0)==(c[X+16>>2]|0))Yb[c[(c[X>>2]|0)+40>>2]&63](X)|0;else c[W>>2]=Y+1;a[l>>0]=1;W=a[u>>0]|0;if((W&1)==0)W=(W&255)>>>1;else W=c[G>>2]|0;j=W>>>0>1?u:j;break b}if($){X=Yb[c[(c[_>>2]|0)+36>>2]&63](_)|0;W=a[v>>0]|0}else X=d[Y>>0]|0;if(!((X&255)<<24>>24==(a[((W&1)==0?g:c[h>>2]|0)>>0]|0))){a[l>>0]=1;break b}Y=c[e>>2]|0;X=Y+12|0;W=c[X>>2]|0;if((W|0)==(c[Y+16>>2]|0))Yb[c[(c[Y>>2]|0)+40>>2]&63](Y)|0;else c[X>>2]=W+1;W=a[v>>0]|0;if((W&1)==0)W=(W&255)>>>1;else W=c[I>>2]|0;j=W>>>0>1?v:j}break};default:{}}while(0);g:do if((y|0)==27){y=0;if((P|0)==3){y=250;break a}else{X=V;W=V}while(1){V=c[e>>2]|0;do if((V|0)!=0){if((c[V+12>>2]|0)==(c[V+16>>2]|0))if((Yb[c[(c[V>>2]|0)+36>>2]&63](V)|0)==-1){c[e>>2]=0;V=0;break}else{V=c[e>>2]|0;break}}else V=0;while(0);Y=(V|0)==0;do if((W|0)!=0){if((c[W+12>>2]|0)!=(c[W+16>>2]|0))if(Y){V=X;break}else{V=X;break g}if(!((Yb[c[(c[W>>2]|0)+36>>2]&63](W)|0)==-1))if(Y^(X|0)==0){V=X;W=X;break}else{V=X;break g}else{c[f>>2]=0;V=0;y=38;break}}else{V=X;y=38}while(0);if((y|0)==38){y=0;if(Y)break g;else W=0}X=c[e>>2]|0;Y=c[X+12>>2]|0;if((Y|0)==(c[X+16>>2]|0))X=Yb[c[(c[X>>2]|0)+36>>2]&63](X)|0;else X=d[Y>>0]|0;if(!((X&255)<<24>>24>-1))break g;if((b[(c[H>>2]|0)+(X<<24>>24<<1)>>1]&8192)==0)break g;Z=c[e>>2]|0;X=Z+12|0;Y=c[X>>2]|0;if((Y|0)==(c[Z+16>>2]|0))X=Yb[c[(c[Z>>2]|0)+40>>2]&63](Z)|0;else{c[X>>2]=Y+1;X=d[Y>>0]|0}Sn(s,X&255);X=V}}while(0);P=P+1|0;if(!(P>>>0<4)){y=250;break}}h:do if((y|0)==26){c[k>>2]=c[k>>2]|4;k=0}else if((y|0)==113){c[k>>2]=c[k>>2]|4;k=0}else if((y|0)==164){c[k>>2]=c[k>>2]|4;k=0}else if((y|0)==216){c[k>>2]=c[k>>2]|4;k=0}else if((y|0)==237){c[k>>2]=c[k>>2]|4;k=0}else if((y|0)==248){c[k>>2]=c[k>>2]|4;k=0}else if((y|0)==250){i:do if((j|0)!=0){n=j+1|0;A=j+8|0;z=j+4|0;l=V;D=V;B=1;j:while(1){C=a[j>>0]|0;if((C&1)==0)C=(C&255)>>>1;else C=c[z>>2]|0;if(!(B>>>0<C>>>0))break i;C=c[e>>2]|0;do if((C|0)!=0){if((c[C+12>>2]|0)==(c[C+16>>2]|0))if((Yb[c[(c[C>>2]|0)+36>>2]&63](C)|0)==-1){c[e>>2]=0;C=0;break}else{C=c[e>>2]|0;break}}else C=0;while(0);E=(C|0)==0;do if((D|0)!=0){if((c[D+12>>2]|0)!=(c[D+16>>2]|0))if(E){C=l;break}else break j;if(!((Yb[c[(c[D>>2]|0)+36>>2]&63](D)|0)==-1))if(E^(l|0)==0){C=l;D=l;break}else break j;else{c[f>>2]=0;C=0;y=266;break}}else{C=l;y=266}while(0);if((y|0)==266){y=0;if(E)break;else D=0}E=c[e>>2]|0;l=c[E+12>>2]|0;if((l|0)==(c[E+16>>2]|0))E=Yb[c[(c[E>>2]|0)+36>>2]&63](E)|0;else E=d[l>>0]|0;if((a[j>>0]&1)==0)l=n;else l=c[A>>2]|0;if(!((E&255)<<24>>24==(a[l+B>>0]|0)))break;B=B+1|0;l=c[e>>2]|0;o=l+12|0;E=c[o>>2]|0;if((E|0)==(c[l+16>>2]|0)){Yb[c[(c[l>>2]|0)+40>>2]&63](l)|0;l=C;continue}else{c[o>>2]=E+1;l=C;continue}}c[k>>2]=c[k>>2]|4;k=0;break h}while(0);f=c[r>>2]|0;if((f|0)!=(U|0)?(c[x>>2]=0,tt(w,f,U,x),(c[x>>2]|0)!=0):0){c[k>>2]=c[k>>2]|4;k=0}else k=1}while(0);Kn(s);Kn(u);Kn(v);Kn(t);Kn(w);s=c[r>>2]|0;c[r>>2]=0;if((s|0)==0){i=q;return k|0}Vb[c[p>>2]&127](s);i=q;return k|0}function nt(a){a=a|0;var b=0;b=Na(8)|0;qn(b,a);Bb(b|0,272120,100)}function ot(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;d=i;i=i+144|0;u=d;t=d+28|0;n=d+8|0;q=d+24|0;p=d+20|0;r=d+128|0;v=d+16|0;c[n>>2]=t;l=n+4|0;c[l>>2]=113;t=t+100|0;jo(p,h);s=Pu(p,263504)|0;a[r>>0]=0;o=c[f>>2]|0;c[v>>2]=o;h=c[h+4>>2]|0;c[u+0>>2]=c[v+0>>2];if(mt(e,u,g,p,h,j,r,s,n,q,t)|0){if((a[k>>0]&1)==0){a[k+1>>0]=0;a[k>>0]=0}else{a[c[k+8>>2]>>0]=0;c[k+4>>2]=0}if((a[r>>0]|0)!=0)Sn(k,fc[c[(c[s>>2]|0)+28>>2]&15](s,45)|0);h=fc[c[(c[s>>2]|0)+28>>2]&15](s,48)|0;r=c[n>>2]|0;q=c[q>>2]|0;g=q+ -1|0;a:do if(r>>>0<g>>>0)while(1){s=r+1|0;if(!((a[r>>0]|0)==h<<24>>24))break a;if(s>>>0<g>>>0)r=s;else{r=s;break}}while(0);pt(k,r,q)|0}k=c[e>>2]|0;do if((k|0)!=0){if((c[k+12>>2]|0)==(c[k+16>>2]|0))if((Yb[c[(c[k>>2]|0)+36>>2]&63](k)|0)==-1){c[e>>2]=0;k=0;break}else{k=c[e>>2]|0;break}}else k=0;while(0);k=(k|0)==0;do if((o|0)!=0){if((c[o+12>>2]|0)!=(c[o+16>>2]|0))if(k)break;else{m=23;break}if(!((Yb[c[(c[o>>2]|0)+36>>2]&63](o)|0)==-1))if(k^(o|0)==0)break;else{m=23;break}else{c[f>>2]=0;m=21;break}}else m=21;while(0);if((m|0)==21?k:0)m=23;if((m|0)==23)c[j>>2]=c[j>>2]|2;c[b>>2]=c[e>>2];nn(c[p>>2]|0)|0;b=c[n>>2]|0;c[n>>2]=0;if((b|0)==0){i=d;return}Vb[c[l>>2]&127](b);i=d;return}function pt(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;j=d;g=a[b>>0]|0;if((g&1)==0){k=g;l=10;g=(g&255)>>>1}else{l=c[b>>2]|0;k=l&255;l=(l&-2)+ -1|0;g=c[b+4>>2]|0}h=e-j|0;if((e|0)==(d|0)){i=f;return b|0}if((l-g|0)>>>0<h>>>0){Vn(b,l,g+h-l|0,g,g,0,0);k=a[b>>0]|0}if((k&1)==0)k=b+1|0;else k=c[b+8>>2]|0;j=e+(g-j)|0;l=k+g|0;while(1){a[l>>0]=a[d>>0]|0;d=d+1|0;if((d|0)==(e|0))break;else l=l+1|0}a[k+j>>0]=0;e=g+h|0;if((a[b>>0]&1)==0){a[b>>0]=e<<1;i=f;return b|0}else{c[b+4>>2]=e;i=f;return b|0}return 0}function qt(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;n=i;i=i+112|0;v=n;u=n+40|0;t=n+76|0;s=n+4|0;q=n+88|0;r=n+100|0;p=n+28|0;o=n+64|0;x=n+52|0;w=n+16|0;if(b){o=Pu(d,262944)|0;Wb[c[(c[o>>2]|0)+44>>2]&63](v,o);b=c[v>>2]|0;a[e>>0]=b;a[e+1>>0]=b>>8;a[e+2>>0]=b>>16;a[e+3>>0]=b>>24;Wb[c[(c[o>>2]|0)+32>>2]&63](u,o);if((a[l>>0]&1)==0){a[l+1>>0]=0;a[l>>0]=0}else{a[c[l+8>>2]>>0]=0;c[l+4>>2]=0}Qn(l,0);c[l+0>>2]=c[u+0>>2];c[l+4>>2]=c[u+4>>2];c[l+8>>2]=c[u+8>>2];c[u+0>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;Kn(u);Wb[c[(c[o>>2]|0)+28>>2]&63](t,o);if((a[k>>0]&1)==0){a[k+1>>0]=0;a[k>>0]=0}else{a[c[k+8>>2]>>0]=0;c[k+4>>2]=0}Qn(k,0);c[k+0>>2]=c[t+0>>2];c[k+4>>2]=c[t+4>>2];c[k+8>>2]=c[t+8>>2];c[t+0>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;Kn(t);a[f>>0]=Yb[c[(c[o>>2]|0)+12>>2]&63](o)|0;a[g>>0]=Yb[c[(c[o>>2]|0)+16>>2]&63](o)|0;Wb[c[(c[o>>2]|0)+20>>2]&63](s,o);if((a[h>>0]&1)==0){a[h+1>>0]=0;a[h>>0]=0}else{a[c[h+8>>2]>>0]=0;c[h+4>>2]=0}Qn(h,0);c[h+0>>2]=c[s+0>>2];c[h+4>>2]=c[s+4>>2];c[h+8>>2]=c[s+8>>2];c[s+0>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;Kn(s);Wb[c[(c[o>>2]|0)+24>>2]&63](q,o);if((a[j>>0]&1)==0){a[j+1>>0]=0;a[j>>0]=0}else{a[c[j+8>>2]>>0]=0;c[j+4>>2]=0}Qn(j,0);c[j+0>>2]=c[q+0>>2];c[j+4>>2]=c[q+4>>2];c[j+8>>2]=c[q+8>>2];c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;Kn(q);b=Yb[c[(c[o>>2]|0)+36>>2]&63](o)|0;c[m>>2]=b;i=n;return}else{q=Pu(d,262880)|0;Wb[c[(c[q>>2]|0)+44>>2]&63](r,q);b=c[r>>2]|0;a[e>>0]=b;a[e+1>>0]=b>>8;a[e+2>>0]=b>>16;a[e+3>>0]=b>>24;Wb[c[(c[q>>2]|0)+32>>2]&63](p,q);if((a[l>>0]&1)==0){a[l+1>>0]=0;a[l>>0]=0}else{a[c[l+8>>2]>>0]=0;c[l+4>>2]=0}Qn(l,0);c[l+0>>2]=c[p+0>>2];c[l+4>>2]=c[p+4>>2];c[l+8>>2]=c[p+8>>2];c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;Kn(p);Wb[c[(c[q>>2]|0)+28>>2]&63](o,q);if((a[k>>0]&1)==0){a[k+1>>0]=0;a[k>>0]=0}else{a[c[k+8>>2]>>0]=0;c[k+4>>2]=0}Qn(k,0);c[k+0>>2]=c[o+0>>2];c[k+4>>2]=c[o+4>>2];c[k+8>>2]=c[o+8>>2];c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;Kn(o);a[f>>0]=Yb[c[(c[q>>2]|0)+12>>2]&63](q)|0;a[g>>0]=Yb[c[(c[q>>2]|0)+16>>2]&63](q)|0;Wb[c[(c[q>>2]|0)+20>>2]&63](x,q);if((a[h>>0]&1)==0){a[h+1>>0]=0;a[h>>0]=0}else{a[c[h+8>>2]>>0]=0;c[h+4>>2]=0}Qn(h,0);c[h+0>>2]=c[x+0>>2];c[h+4>>2]=c[x+4>>2];c[h+8>>2]=c[x+8>>2];c[x+0>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;Kn(x);Wb[c[(c[q>>2]|0)+24>>2]&63](w,q);if((a[j>>0]&1)==0){a[j+1>>0]=0;a[j>>0]=0}else{a[c[j+8>>2]>>0]=0;c[j+4>>2]=0}Qn(j,0);c[j+0>>2]=c[w+0>>2];c[j+4>>2]=c[w+4>>2];c[j+8>>2]=c[w+8>>2];c[w+0>>2]=0;c[w+4>>2]=0;c[w+8>>2]=0;Kn(w);b=Yb[c[(c[q>>2]|0)+36>>2]&63](q)|0;c[m>>2]=b;i=n;return}}function rt(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;f=a+4|0;k=(c[f>>2]|0)!=113;j=c[a>>2]|0;g=j;h=(c[d>>2]|0)-g|0;h=h>>>0<2147483647?h<<1:-1;g=(c[b>>2]|0)-g|0;j=Gy(k?j:0,h)|0;if((j|0)==0)Cy();if(!k){k=c[a>>2]|0;c[a>>2]=j;if((k|0)!=0){Vb[c[f>>2]&127](k);j=c[a>>2]|0}}else c[a>>2]=j;c[f>>2]=114;c[b>>2]=j+g;c[d>>2]=(c[a>>2]|0)+h;i=e;return}function st(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;g=i;h=a+4|0;j=(c[h>>2]|0)!=113;k=c[a>>2]|0;e=k;f=(c[d>>2]|0)-e|0;f=f>>>0<2147483647?f<<1:-1;e=(c[b>>2]|0)-e>>2;if(!j)k=0;k=Gy(k,f)|0;if((k|0)==0)Cy();if(!j){j=c[a>>2]|0;c[a>>2]=k;if((j|0)!=0){Vb[c[h>>2]&127](j);k=c[a>>2]|0}}else c[a>>2]=k;c[h>>2]=114;c[b>>2]=k+(e<<2);c[d>>2]=(c[a>>2]|0)+(f>>>2<<2);i=g;return}function tt(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;g=i;k=a[b>>0]|0;if((k&1)==0)j=(k&255)>>>1;else j=c[b+4>>2]|0;if((j|0)==0){i=g;return}if((d|0)!=(e|0)?(h=e+ -4|0,h>>>0>d>>>0):0){j=d;do{k=c[j>>2]|0;c[j>>2]=c[h>>2];c[h>>2]=k;j=j+4|0;h=h+ -4|0}while(j>>>0<h>>>0);k=a[b>>0]|0}if((k&1)==0){h=b+1|0;b=(k&255)>>>1}else{h=c[b+8>>2]|0;b=c[b+4>>2]|0}e=e+ -4|0;k=a[h>>0]|0;j=k<<24>>24<1|k<<24>>24==127;a:do if(e>>>0>d>>>0){b=h+b|0;while(1){if(!j?(k<<24>>24|0)!=(c[d>>2]|0):0)break;h=(b-h|0)>1?h+1|0:h;d=d+4|0;k=a[h>>0]|0;j=k<<24>>24<1|k<<24>>24==127;if(!(d>>>0<e>>>0))break a}c[f>>2]=4;i=g;return}while(0);if(j){i=g;return}j=c[e>>2]|0;if(!(k<<24>>24>>>0<j>>>0|(j|0)==0)){i=g;return}c[f>>2]=4;i=g;return}function ut(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function vt(a){a=a|0;return}function wt(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;n=i;i=i+576|0;r=n;x=n+64|0;m=n+56|0;s=n+48|0;o=n+468|0;v=n+572|0;y=n+464|0;t=n+8|0;q=n+472|0;c[m>>2]=x;d=m+4|0;c[d>>2]=113;x=x+400|0;jo(o,h);w=Pu(o,263496)|0;a[v>>0]=0;c[y>>2]=c[f>>2];h=c[h+4>>2]|0;c[r+0>>2]=c[y+0>>2];do if(xt(e,r,g,o,h,j,v,w,m,s,x)|0){cc[c[(c[w>>2]|0)+48>>2]&7](w,263200,263210,t)|0;w=c[s>>2]|0;h=c[m>>2]|0;g=w-h|0;if((g|0)>392){g=Dy((g>>2)+2|0)|0;if((g|0)==0)Cy();else{p=g;u=g}}else{p=0;u=q}if((a[v>>0]|0)==0)g=u;else{a[u>>0]=45;g=u+1|0}if(h>>>0<w>>>0){u=t+40|0;v=t;do{w=c[h>>2]|0;x=t;while(1){if((c[x>>2]|0)==(w|0))break;x=x+4|0;if((x|0)==(u|0)){x=u;break}}a[g>>0]=a[263200+(x-v>>2)>>0]|0;h=h+4|0;g=g+1|0}while(h>>>0<(c[s>>2]|0)>>>0)}a[g>>0]=0;c[r>>2]=k;if((sx(q,263136,r)|0)==1){Ey(p);break}else nt(263144)}while(0);p=c[e>>2]|0;do if((p|0)!=0){k=c[p+12>>2]|0;if((k|0)==(c[p+16>>2]|0))p=Yb[c[(c[p>>2]|0)+36>>2]&63](p)|0;else p=c[k>>2]|0;if((p|0)==-1){c[e>>2]=0;p=1;break}else{p=(c[e>>2]|0)==0;break}}else p=1;while(0);k=c[f>>2]|0;do if((k|0)!=0){q=c[k+12>>2]|0;if((q|0)==(c[k+16>>2]|0))k=Yb[c[(c[k>>2]|0)+36>>2]&63](k)|0;else k=c[q>>2]|0;if(!((k|0)==-1))if(p)break;else{l=31;break}else{c[f>>2]=0;l=29;break}}else l=29;while(0);if((l|0)==29?p:0)l=31;if((l|0)==31)c[j>>2]=c[j>>2]|2;c[b>>2]=c[e>>2];nn(c[o>>2]|0)|0;l=c[m>>2]|0;c[m>>2]=0;if((l|0)==0){i=n;return}Vb[c[d>>2]&127](l);i=n;return}function xt(b,e,f,g,h,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;q=i;i=i+512|0;D=q+500|0;P=q+96|0;p=q+40|0;E=q+20|0;A=q+12|0;C=q+88|0;B=q+496|0;z=q+504|0;v=q+24|0;u=q+48|0;t=q;s=q+72|0;r=q+60|0;y=q+16|0;w=q+84|0;c[D>>2]=o;c[p>>2]=P;o=p+4|0;c[o>>2]=113;c[E>>2]=P;c[A>>2]=P+400;c[C>>2]=0;c[v+0>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;c[u+0>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;c[t+0>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;c[s+0>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;c[r+0>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;At(f,g,C,B,z,v,u,t,s,y);c[n>>2]=c[m>>2];G=s+4|0;F=s+8|0;g=t+4|0;f=t+8|0;K=(h&512|0)!=0;M=u+4|0;L=u+8|0;I=r+4|0;H=r+8|0;J=C+3|0;N=v+4|0;O=0;h=0;a:while(1){Q=c[b>>2]|0;do if((Q|0)!=0){R=c[Q+12>>2]|0;if((R|0)==(c[Q+16>>2]|0))Q=Yb[c[(c[Q>>2]|0)+36>>2]&63](Q)|0;else Q=c[R>>2]|0;if((Q|0)==-1){c[b>>2]=0;R=1;break}else{R=(c[b>>2]|0)==0;break}}else R=1;while(0);Q=c[e>>2]|0;do if((Q|0)!=0){S=c[Q+12>>2]|0;if((S|0)==(c[Q+16>>2]|0))S=Yb[c[(c[Q>>2]|0)+36>>2]&63](Q)|0;else S=c[S>>2]|0;if(!((S|0)==-1))if(R)break;else{x=268;break a}else{c[e>>2]=0;x=15;break}}else x=15;while(0);if((x|0)==15){x=0;if(R){Q=0;x=268;break}else Q=0}b:do switch(a[C+O>>0]|0){case 1:{if((O|0)==3){x=268;break a}R=c[b>>2]|0;x=c[R+12>>2]|0;if((x|0)==(c[R+16>>2]|0))x=Yb[c[(c[R>>2]|0)+36>>2]&63](R)|0;else x=c[x>>2]|0;if(!(Sb[c[(c[l>>2]|0)+12>>2]&31](l,8192,x)|0)){x=28;break a}x=c[b>>2]|0;S=x+12|0;R=c[S>>2]|0;if((R|0)==(c[x+16>>2]|0))x=Yb[c[(c[x>>2]|0)+40>>2]&63](x)|0;else{c[S>>2]=R+4;x=c[R>>2]|0}co(r,x);x=29;break};case 4:{R=c[z>>2]|0;U=Q;T=Q;S=0;c:while(1){Q=c[b>>2]|0;do if((Q|0)!=0){V=c[Q+12>>2]|0;if((V|0)==(c[Q+16>>2]|0))Q=Yb[c[(c[Q>>2]|0)+36>>2]&63](Q)|0;else Q=c[V>>2]|0;if((Q|0)==-1){c[b>>2]=0;V=1;break}else{V=(c[b>>2]|0)==0;break}}else V=1;while(0);do if((T|0)!=0){Q=c[T+12>>2]|0;if((Q|0)==(c[T+16>>2]|0))Q=Yb[c[(c[T>>2]|0)+36>>2]&63](T)|0;else Q=c[Q>>2]|0;if(!((Q|0)==-1))if(V^(U|0)==0){Q=U;T=U;break}else{Q=U;break c}else{c[e>>2]=0;Q=0;x=189;break}}else{Q=U;x=189}while(0);if((x|0)==189){x=0;if(V)break;else T=0}U=c[b>>2]|0;V=c[U+12>>2]|0;if((V|0)==(c[U+16>>2]|0))U=Yb[c[(c[U>>2]|0)+36>>2]&63](U)|0;else U=c[V>>2]|0;if(Sb[c[(c[l>>2]|0)+12>>2]&31](l,2048,U)|0){V=c[n>>2]|0;if((V|0)==(c[D>>2]|0)){Bt(m,n,D);V=c[n>>2]|0}c[n>>2]=V+4;c[V>>2]=U;S=S+1|0}else{V=a[v>>0]|0;if((V&1)==0)V=(V&255)>>>1;else V=c[N>>2]|0;if(!((S|0)!=0&(V|0)!=0&(U|0)==(R|0)))break;if((P|0)==(c[A>>2]|0)){st(p,E,A);P=c[E>>2]|0}X=P+4|0;c[E>>2]=X;c[P>>2]=S;P=X;S=0}W=c[b>>2]|0;V=W+12|0;U=c[V>>2]|0;if((U|0)==(c[W+16>>2]|0)){Yb[c[(c[W>>2]|0)+40>>2]&63](W)|0;U=Q;continue}else{c[V>>2]=U+4;U=Q;continue}}if(!((S|0)==0?1:(c[p>>2]|0)==(P|0))){if((P|0)==(c[A>>2]|0)){st(p,E,A);P=c[E>>2]|0}X=P+4|0;c[E>>2]=X;c[P>>2]=S;P=X}R=c[y>>2]|0;if((R|0)>0){T=c[b>>2]|0;do if((T|0)!=0){S=c[T+12>>2]|0;if((S|0)==(c[T+16>>2]|0))S=Yb[c[(c[T>>2]|0)+36>>2]&63](T)|0;else S=c[S>>2]|0;if((S|0)==-1){c[b>>2]=0;S=1;break}else{S=(c[b>>2]|0)==0;break}}else S=1;while(0);do if((Q|0)!=0){T=c[Q+12>>2]|0;if((T|0)==(c[Q+16>>2]|0))T=Yb[c[(c[Q>>2]|0)+36>>2]&63](Q)|0;else T=c[T>>2]|0;if(!((T|0)==-1))if(S)break;else{x=232;break a}else{c[e>>2]=0;x=226;break}}else x=226;while(0);if((x|0)==226){x=0;if(S){x=232;break a}else Q=0}T=c[b>>2]|0;S=c[T+12>>2]|0;if((S|0)==(c[T+16>>2]|0))S=Yb[c[(c[T>>2]|0)+36>>2]&63](T)|0;else S=c[S>>2]|0;if((S|0)!=(c[B>>2]|0)){x=232;break a}U=c[b>>2]|0;T=U+12|0;S=c[T>>2]|0;if((S|0)==(c[U+16>>2]|0)){Yb[c[(c[U>>2]|0)+40>>2]&63](U)|0;S=Q;T=Q}else{c[T>>2]=S+4;S=Q;T=Q}while(1){U=c[b>>2]|0;do if((U|0)!=0){Q=c[U+12>>2]|0;if((Q|0)==(c[U+16>>2]|0))Q=Yb[c[(c[U>>2]|0)+36>>2]&63](U)|0;else Q=c[Q>>2]|0;if((Q|0)==-1){c[b>>2]=0;U=1;break}else{U=(c[b>>2]|0)==0;break}}else U=1;while(0);do if((T|0)!=0){Q=c[T+12>>2]|0;if((Q|0)==(c[T+16>>2]|0))Q=Yb[c[(c[T>>2]|0)+36>>2]&63](T)|0;else Q=c[Q>>2]|0;if(!((Q|0)==-1))if(U^(S|0)==0){Q=S;T=S;break}else{x=255;break a}else{c[e>>2]=0;Q=0;x=249;break}}else{Q=S;x=249}while(0);if((x|0)==249){x=0;if(U){x=255;break a}else T=0}S=c[b>>2]|0;U=c[S+12>>2]|0;if((U|0)==(c[S+16>>2]|0))S=Yb[c[(c[S>>2]|0)+36>>2]&63](S)|0;else S=c[U>>2]|0;if(!(Sb[c[(c[l>>2]|0)+12>>2]&31](l,2048,S)|0)){x=255;break a}if((c[n>>2]|0)==(c[D>>2]|0))Bt(m,n,D);S=c[b>>2]|0;U=c[S+12>>2]|0;if((U|0)==(c[S+16>>2]|0))S=Yb[c[(c[S>>2]|0)+36>>2]&63](S)|0;else S=c[U>>2]|0;V=c[n>>2]|0;c[n>>2]=V+4;c[V>>2]=S;R=R+ -1|0;c[y>>2]=R;V=c[b>>2]|0;S=V+12|0;U=c[S>>2]|0;if((U|0)==(c[V+16>>2]|0))Yb[c[(c[V>>2]|0)+40>>2]&63](V)|0;else c[S>>2]=U+4;if((R|0)<=0)break;else S=Q}}if((c[n>>2]|0)==(c[m>>2]|0)){x=266;break a}break};case 3:{R=a[t>>0]|0;T=(R&1)==0;if(T)W=(R&255)>>>1;else W=c[g>>2]|0;S=a[s>>0]|0;U=(S&1)==0;if(U)V=(S&255)>>>1;else V=c[G>>2]|0;if((W|0)!=(0-V|0)){if(T)V=(R&255)>>>1;else V=c[g>>2]|0;if((V|0)!=0){if(U)U=(S&255)>>>1;else U=c[G>>2]|0;if((U|0)!=0){T=c[b>>2]|0;S=c[T+12>>2]|0;if((S|0)==(c[T+16>>2]|0)){W=Yb[c[(c[T>>2]|0)+36>>2]&63](T)|0;R=a[t>>0]|0}else W=c[S>>2]|0;V=c[b>>2]|0;T=V+12|0;U=c[T>>2]|0;S=(U|0)==(c[V+16>>2]|0);if((W|0)==(c[((R&1)==0?g:c[f>>2]|0)>>2]|0)){if(S)Yb[c[(c[V>>2]|0)+40>>2]&63](V)|0;else c[T>>2]=U+4;R=a[t>>0]|0;if((R&1)==0)R=(R&255)>>>1;else R=c[g>>2]|0;h=R>>>0>1?t:h;break b}if(S)R=Yb[c[(c[V>>2]|0)+36>>2]&63](V)|0;else R=c[U>>2]|0;if((R|0)!=(c[((a[s>>0]&1)==0?G:c[F>>2]|0)>>2]|0)){x=117;break a}R=c[b>>2]|0;S=R+12|0;T=c[S>>2]|0;if((T|0)==(c[R+16>>2]|0))Yb[c[(c[R>>2]|0)+40>>2]&63](R)|0;else c[S>>2]=T+4;a[k>>0]=1;R=a[s>>0]|0;if((R&1)==0)R=(R&255)>>>1;else R=c[G>>2]|0;h=R>>>0>1?s:h;break b}}if(T)W=(R&255)>>>1;else W=c[g>>2]|0;V=c[b>>2]|0;T=c[V+12>>2]|0;U=(T|0)==(c[V+16>>2]|0);if((W|0)==0){if(U){R=Yb[c[(c[V>>2]|0)+36>>2]&63](V)|0;S=a[s>>0]|0}else R=c[T>>2]|0;if((R|0)!=(c[((S&1)==0?G:c[F>>2]|0)>>2]|0))break b;R=c[b>>2]|0;S=R+12|0;T=c[S>>2]|0;if((T|0)==(c[R+16>>2]|0))Yb[c[(c[R>>2]|0)+40>>2]&63](R)|0;else c[S>>2]=T+4;a[k>>0]=1;R=a[s>>0]|0;if((R&1)==0)R=(R&255)>>>1;else R=c[G>>2]|0;h=R>>>0>1?s:h;break b}if(U){S=Yb[c[(c[V>>2]|0)+36>>2]&63](V)|0;R=a[t>>0]|0}else S=c[T>>2]|0;if((S|0)!=(c[((R&1)==0?g:c[f>>2]|0)>>2]|0)){a[k>>0]=1;break b}R=c[b>>2]|0;S=R+12|0;T=c[S>>2]|0;if((T|0)==(c[R+16>>2]|0))Yb[c[(c[R>>2]|0)+40>>2]&63](R)|0;else c[S>>2]=T+4;R=a[t>>0]|0;if((R&1)==0)R=(R&255)>>>1;else R=c[g>>2]|0;h=R>>>0>1?t:h}break};case 0:{x=29;break};case 2:{if(!((h|0)!=0|O>>>0<2)){if((O|0)==2)R=(a[J>>0]|0)!=0;else R=0;if(!(K|R)){h=0;break b}}U=a[u>>0]|0;R=(U&1)==0?M:c[L>>2]|0;d:do if((O|0)!=0?(d[C+(O+ -1)>>0]|0)<2:0){while(1){if((U&1)==0){T=(U&255)>>>1;S=M}else{T=c[M>>2]|0;S=c[L>>2]|0}if((R|0)==(S+(T<<2)|0))break;if(!(Sb[c[(c[l>>2]|0)+12>>2]&31](l,8192,c[R>>2]|0)|0)){x=130;break}U=a[u>>0]|0;R=R+4|0}if((x|0)==130){x=0;U=a[u>>0]|0}T=(U&1)==0;X=R-(T?M:c[L>>2]|0)>>2;V=a[r>>0]|0;S=(V&1)==0;if(S)W=(V&255)>>>1;else W=c[I>>2]|0;e:do if(!(X>>>0>W>>>0)){if(S){S=I+(((V&255)>>>1)-X<<2)|0;W=(V&255)>>>1;V=I}else{V=c[H>>2]|0;W=c[I>>2]|0;S=V+(W-X<<2)|0}V=V+(W<<2)|0;if((S|0)==(V|0)){S=Q;break d}else W=T?M:c[L>>2]|0;while(1){if((c[S>>2]|0)!=(c[W>>2]|0))break e;S=S+4|0;if((S|0)==(V|0)){S=Q;break d}W=W+4|0}}while(0);S=Q;R=T?M:c[L>>2]|0}else S=Q;while(0);f:while(1){if((U&1)==0){T=(U&255)>>>1;U=M}else{T=c[M>>2]|0;U=c[L>>2]|0}if((R|0)==(U+(T<<2)|0)){Q=S;break}T=c[b>>2]|0;do if((T|0)!=0){U=c[T+12>>2]|0;if((U|0)==(c[T+16>>2]|0))T=Yb[c[(c[T>>2]|0)+36>>2]&63](T)|0;else T=c[U>>2]|0;if((T|0)==-1){c[b>>2]=0;T=1;break}else{T=(c[b>>2]|0)==0;break}}else T=1;while(0);do if((Q|0)!=0){U=c[Q+12>>2]|0;if((U|0)==(c[Q+16>>2]|0))Q=Yb[c[(c[Q>>2]|0)+36>>2]&63](Q)|0;else Q=c[U>>2]|0;if(!((Q|0)==-1))if(T^(S|0)==0){Q=S;T=S;break}else{Q=S;break f}else{c[e>>2]=0;Q=0;x=160;break}}else{Q=S;x=160}while(0);if((x|0)==160){x=0;if(T)break;else T=0}U=c[b>>2]|0;S=c[U+12>>2]|0;if((S|0)==(c[U+16>>2]|0))S=Yb[c[(c[U>>2]|0)+36>>2]&63](U)|0;else S=c[S>>2]|0;if((S|0)!=(c[R>>2]|0))break;V=c[b>>2]|0;U=V+12|0;S=c[U>>2]|0;if((S|0)==(c[V+16>>2]|0))Yb[c[(c[V>>2]|0)+40>>2]&63](V)|0;else c[U>>2]=S+4;S=Q;U=a[u>>0]|0;Q=T;R=R+4|0}if(K){S=a[u>>0]|0;if((S&1)==0){T=(S&255)>>>1;S=M}else{T=c[M>>2]|0;S=c[L>>2]|0}if((R|0)!=(S+(T<<2)|0)){x=175;break a}}break};default:{}}while(0);g:do if((x|0)==29){x=0;if((O|0)==3){x=268;break a}else{R=Q;S=Q}while(1){Q=c[b>>2]|0;do if((Q|0)!=0){T=c[Q+12>>2]|0;if((T|0)==(c[Q+16>>2]|0))Q=Yb[c[(c[Q>>2]|0)+36>>2]&63](Q)|0;else Q=c[T>>2]|0;if((Q|0)==-1){c[b>>2]=0;T=1;break}else{T=(c[b>>2]|0)==0;break}}else T=1;while(0);do if((S|0)!=0){Q=c[S+12>>2]|0;if((Q|0)==(c[S+16>>2]|0))Q=Yb[c[(c[S>>2]|0)+36>>2]&63](S)|0;else Q=c[Q>>2]|0;if(!((Q|0)==-1))if(T^(R|0)==0){Q=R;S=R;break}else{Q=R;break g}else{c[e>>2]=0;Q=0;x=43;break}}else{Q=R;x=43}while(0);if((x|0)==43){x=0;if(T)break g;else S=0}R=c[b>>2]|0;T=c[R+12>>2]|0;if((T|0)==(c[R+16>>2]|0))R=Yb[c[(c[R>>2]|0)+36>>2]&63](R)|0;else R=c[T>>2]|0;if(!(Sb[c[(c[l>>2]|0)+12>>2]&31](l,8192,R)|0))break g;R=c[b>>2]|0;T=R+12|0;U=c[T>>2]|0;if((U|0)==(c[R+16>>2]|0))R=Yb[c[(c[R>>2]|0)+40>>2]&63](R)|0;else{c[T>>2]=U+4;R=c[U>>2]|0}co(r,R);R=Q}}while(0);O=O+1|0;if(!(O>>>0<4)){x=268;break}}h:do if((x|0)==28){c[j>>2]=c[j>>2]|4;j=0}else if((x|0)==117){c[j>>2]=c[j>>2]|4;j=0}else if((x|0)==175){c[j>>2]=c[j>>2]|4;j=0}else if((x|0)==232){c[j>>2]=c[j>>2]|4;j=0}else if((x|0)==255){c[j>>2]=c[j>>2]|4;j=0}else if((x|0)==266){c[j>>2]=c[j>>2]|4;j=0}else if((x|0)==268){i:do if((h|0)!=0){m=h+4|0;y=h+8|0;k=Q;A=Q;z=1;j:while(1){B=a[h>>0]|0;if((B&1)==0)B=(B&255)>>>1;else B=c[m>>2]|0;if(!(z>>>0<B>>>0))break i;B=c[b>>2]|0;do if((B|0)!=0){C=c[B+12>>2]|0;if((C|0)==(c[B+16>>2]|0))B=Yb[c[(c[B>>2]|0)+36>>2]&63](B)|0;else B=c[C>>2]|0;if((B|0)==-1){c[b>>2]=0;B=1;break}else{B=(c[b>>2]|0)==0;break}}else B=1;while(0);do if((A|0)!=0){C=c[A+12>>2]|0;if((C|0)==(c[A+16>>2]|0))A=Yb[c[(c[A>>2]|0)+36>>2]&63](A)|0;else A=c[C>>2]|0;if(!((A|0)==-1))if(B^(k|0)==0){B=k;A=k;break}else break j;else{c[e>>2]=0;k=0;x=287;break}}else x=287;while(0);if((x|0)==287){x=0;if(B)break;else{B=k;A=0}}k=c[b>>2]|0;C=c[k+12>>2]|0;if((C|0)==(c[k+16>>2]|0))C=Yb[c[(c[k>>2]|0)+36>>2]&63](k)|0;else C=c[C>>2]|0;if((a[h>>0]&1)==0)k=m;else k=c[y>>2]|0;if((C|0)!=(c[k+(z<<2)>>2]|0))break;z=z+1|0;k=c[b>>2]|0;C=k+12|0;n=c[C>>2]|0;if((n|0)==(c[k+16>>2]|0)){Yb[c[(c[k>>2]|0)+40>>2]&63](k)|0;k=B;continue}else{c[C>>2]=n+4;k=B;continue}}c[j>>2]=c[j>>2]|4;j=0;break h}while(0);e=c[p>>2]|0;if((e|0)!=(P|0)?(c[w>>2]=0,tt(v,e,P,w),(c[w>>2]|0)!=0):0){c[j>>2]=c[j>>2]|4;j=0}else j=1}while(0);Zn(r);Zn(s);Zn(t);Zn(u);Kn(v);r=c[p>>2]|0;c[p>>2]=0;if((r|0)==0){i=q;return j|0}Vb[c[o>>2]&127](r);i=q;return j|0}function yt(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;d=i;i=i+432|0;u=d+4|0;t=d+16|0;n=d+8|0;q=d+420|0;o=d;r=d+424|0;v=d+416|0;c[n>>2]=t;m=n+4|0;c[m>>2]=113;t=t+400|0;jo(o,h);s=Pu(o,263496)|0;a[r>>0]=0;p=c[f>>2]|0;c[v>>2]=p;h=c[h+4>>2]|0;c[u+0>>2]=c[v+0>>2];if(xt(e,u,g,o,h,j,r,s,n,q,t)|0){if((a[k>>0]&1)==0){c[k+4>>2]=0;a[k>>0]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}if((a[r>>0]|0)!=0)co(k,fc[c[(c[s>>2]|0)+44>>2]&15](s,45)|0);g=fc[c[(c[s>>2]|0)+44>>2]&15](s,48)|0;r=c[n>>2]|0;q=c[q>>2]|0;h=q+ -4|0;a:do if(r>>>0<h>>>0){s=r;while(1){r=s+4|0;if((c[s>>2]|0)!=(g|0)){r=s;break a}if(r>>>0<h>>>0)s=r;else break}}while(0);zt(k,r,q)|0}k=c[e>>2]|0;do if((k|0)!=0){q=c[k+12>>2]|0;if((q|0)==(c[k+16>>2]|0))k=Yb[c[(c[k>>2]|0)+36>>2]&63](k)|0;else k=c[q>>2]|0;if((k|0)==-1){c[e>>2]=0;k=1;break}else{k=(c[e>>2]|0)==0;break}}else k=1;while(0);do if((p|0)!=0){q=c[p+12>>2]|0;if((q|0)==(c[p+16>>2]|0))p=Yb[c[(c[p>>2]|0)+36>>2]&63](p)|0;else p=c[q>>2]|0;if(!((p|0)==-1))if(k)break;else{l=26;break}else{c[f>>2]=0;l=24;break}}else l=24;while(0);if((l|0)==24?k:0)l=26;if((l|0)==26)c[j>>2]=c[j>>2]|2;c[b>>2]=c[e>>2];nn(c[o>>2]|0)|0;e=c[n>>2]|0;c[n>>2]=0;if((e|0)==0){i=d;return}Vb[c[m>>2]&127](e);i=d;return}function zt(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;j=d;g=a[b>>0]|0;if((g&1)==0){k=g;l=1;h=(g&255)>>>1}else{l=c[b>>2]|0;k=l&255;l=(l&-2)+ -1|0;h=c[b+4>>2]|0}g=e-j>>2;if((g|0)==0){i=f;return b|0}if((l-h|0)>>>0<g>>>0){fo(b,l,h+g-l|0,h,h,0,0);k=a[b>>0]|0}if((k&1)==0)k=b+4|0;else k=c[b+8>>2]|0;l=k+(h<<2)|0;if((d|0)!=(e|0)){j=h+((e+ -4+(0-j)|0)>>>2)+1|0;while(1){c[l>>2]=c[d>>2];d=d+4|0;if((d|0)==(e|0))break;else l=l+4|0}l=k+(j<<2)|0}c[l>>2]=0;g=h+g|0;if((a[b>>0]&1)==0){a[b>>0]=g<<1;i=f;return b|0}else{c[b+4>>2]=g;i=f;return b|0}return 0}function At(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;n=i;i=i+112|0;v=n;u=n+40|0;t=n+76|0;s=n+4|0;q=n+88|0;r=n+100|0;p=n+28|0;o=n+64|0;x=n+52|0;w=n+16|0;if(b){o=Pu(d,263072)|0;Wb[c[(c[o>>2]|0)+44>>2]&63](v,o);b=c[v>>2]|0;a[e>>0]=b;a[e+1>>0]=b>>8;a[e+2>>0]=b>>16;a[e+3>>0]=b>>24;Wb[c[(c[o>>2]|0)+32>>2]&63](u,o);if((a[l>>0]&1)==0){c[l+4>>2]=0;a[l>>0]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}bo(l,0);c[l+0>>2]=c[u+0>>2];c[l+4>>2]=c[u+4>>2];c[l+8>>2]=c[u+8>>2];c[u+0>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;Zn(u);Wb[c[(c[o>>2]|0)+28>>2]&63](t,o);if((a[k>>0]&1)==0){c[k+4>>2]=0;a[k>>0]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}bo(k,0);c[k+0>>2]=c[t+0>>2];c[k+4>>2]=c[t+4>>2];c[k+8>>2]=c[t+8>>2];c[t+0>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;Zn(t);c[f>>2]=Yb[c[(c[o>>2]|0)+12>>2]&63](o)|0;c[g>>2]=Yb[c[(c[o>>2]|0)+16>>2]&63](o)|0;Wb[c[(c[o>>2]|0)+20>>2]&63](s,o);if((a[h>>0]&1)==0){a[h+1>>0]=0;a[h>>0]=0}else{a[c[h+8>>2]>>0]=0;c[h+4>>2]=0}Qn(h,0);c[h+0>>2]=c[s+0>>2];c[h+4>>2]=c[s+4>>2];c[h+8>>2]=c[s+8>>2];c[s+0>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;Kn(s);Wb[c[(c[o>>2]|0)+24>>2]&63](q,o);if((a[j>>0]&1)==0){c[j+4>>2]=0;a[j>>0]=0}else{c[c[j+8>>2]>>2]=0;c[j+4>>2]=0}bo(j,0);c[j+0>>2]=c[q+0>>2];c[j+4>>2]=c[q+4>>2];c[j+8>>2]=c[q+8>>2];c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;Zn(q);b=Yb[c[(c[o>>2]|0)+36>>2]&63](o)|0;c[m>>2]=b;i=n;return}else{q=Pu(d,263008)|0;Wb[c[(c[q>>2]|0)+44>>2]&63](r,q);b=c[r>>2]|0;a[e>>0]=b;a[e+1>>0]=b>>8;a[e+2>>0]=b>>16;a[e+3>>0]=b>>24;Wb[c[(c[q>>2]|0)+32>>2]&63](p,q);if((a[l>>0]&1)==0){c[l+4>>2]=0;a[l>>0]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}bo(l,0);c[l+0>>2]=c[p+0>>2];c[l+4>>2]=c[p+4>>2];c[l+8>>2]=c[p+8>>2];c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;Zn(p);Wb[c[(c[q>>2]|0)+28>>2]&63](o,q);if((a[k>>0]&1)==0){c[k+4>>2]=0;a[k>>0]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}bo(k,0);c[k+0>>2]=c[o+0>>2];c[k+4>>2]=c[o+4>>2];c[k+8>>2]=c[o+8>>2];c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;Zn(o);c[f>>2]=Yb[c[(c[q>>2]|0)+12>>2]&63](q)|0;c[g>>2]=Yb[c[(c[q>>2]|0)+16>>2]&63](q)|0;Wb[c[(c[q>>2]|0)+20>>2]&63](x,q);if((a[h>>0]&1)==0){a[h+1>>0]=0;a[h>>0]=0}else{a[c[h+8>>2]>>0]=0;c[h+4>>2]=0}Qn(h,0);c[h+0>>2]=c[x+0>>2];c[h+4>>2]=c[x+4>>2];c[h+8>>2]=c[x+8>>2];c[x+0>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;Kn(x);Wb[c[(c[q>>2]|0)+24>>2]&63](w,q);if((a[j>>0]&1)==0){c[j+4>>2]=0;a[j>>0]=0}else{c[c[j+8>>2]>>2]=0;c[j+4>>2]=0}bo(j,0);c[j+0>>2]=c[w+0>>2];c[j+4>>2]=c[w+4>>2];c[j+8>>2]=c[w+8>>2];c[w+0>>2]=0;c[w+4>>2]=0;c[w+8>>2]=0;Zn(w);b=Yb[c[(c[q>>2]|0)+36>>2]&63](q)|0;c[m>>2]=b;i=n;return}}function Bt(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;g=i;h=a+4|0;j=(c[h>>2]|0)!=113;k=c[a>>2]|0;e=k;f=(c[d>>2]|0)-e|0;f=f>>>0<2147483647?f<<1:-1;e=(c[b>>2]|0)-e>>2;if(!j)k=0;k=Gy(k,f)|0;if((k|0)==0)Cy();if(!j){j=c[a>>2]|0;c[a>>2]=k;if((j|0)!=0){Vb[c[h>>2]&127](j);k=c[a>>2]|0}}else c[a>>2]=k;c[h>>2]=114;c[b>>2]=k+(e<<2);c[d>>2]=(c[a>>2]|0)+(f>>>2<<2);i=g;return}function Ct(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function Dt(a){a=a|0;return}function Et(b,d,e,f,g,j,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;l=+l;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;A=i;i=i+384|0;s=A;H=A+72|0;F=A+40|0;E=A+172|0;t=A+36|0;v=A+64|0;w=A+272|0;C=A+376|0;B=A+52|0;d=A+20|0;z=A+8|0;G=A+48|0;D=A+276|0;x=A+32|0;u=A+44|0;y=A+68|0;c[F>>2]=H;h[k>>3]=l;c[s>>2]=c[k>>2];c[s+4>>2]=c[k+4>>2];H=$y(H,100,263256,s)|0;if(H>>>0>99){E=dq()|0;h[k>>3]=l;c[s>>2]=c[k>>2];c[s+4>>2]=c[k+4>>2];E=Wq(F,E,263256,s)|0;H=c[F>>2]|0;if((H|0)==0)Cy();I=Dy(E)|0;if((I|0)==0)Cy();else{m=I;p=H;r=I;q=E}}else{m=0;p=0;r=E;q=H}jo(t,g);E=Pu(t,263504)|0;I=c[F>>2]|0;cc[c[(c[E>>2]|0)+32>>2]&7](E,I,I+q|0,r)|0;if((q|0)==0)F=0;else F=(a[c[F>>2]>>0]|0)==45;c[v>>2]=0;c[B+0>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[z+0>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;Ft(f,F,t,v,w,C,B,d,z,G);f=c[G>>2]|0;if((q|0)>(f|0)){G=a[z>>0]|0;if((G&1)==0)G=(G&255)>>>1;else G=c[z+4>>2]|0;H=a[d>>0]|0;if((H&1)==0)H=(H&255)>>>1;else H=c[d+4>>2]|0;G=G+(q-f<<1|1)+H|0}else{G=a[z>>0]|0;if((G&1)==0)G=(G&255)>>>1;else G=c[z+4>>2]|0;H=a[d>>0]|0;if((H&1)==0)H=(H&255)>>>1;else H=c[d+4>>2]|0;G=G+2+H|0}G=G+f|0;if(G>>>0>100){D=Dy(G)|0;if((D|0)==0)Cy();else{n=D;o=D}}else{n=0;o=D}Gt(o,x,u,c[g+4>>2]|0,r,r+q|0,E,F,v,a[w>>0]|0,a[C>>0]|0,B,d,z,f);c[y>>2]=c[e>>2];H=c[x>>2]|0;I=c[u>>2]|0;c[s+0>>2]=c[y+0>>2];Qq(b,s,o,H,I,g,j);Ey(n);Kn(z);Kn(d);Kn(B);nn(c[t>>2]|0)|0;Ey(m);Ey(p);i=A;return}function Ft(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;n=i;i=i+112|0;w=n;v=n+16|0;y=n+92|0;x=n+40|0;u=n+80|0;s=n+96|0;q=n+108|0;p=n+56|0;t=n+52|0;r=n+28|0;o=n+4|0;z=n+68|0;if(b){o=Pu(e,262944)|0;p=c[o>>2]|0;if(d){Wb[c[p+44>>2]&63](w,o);b=c[w>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;Wb[c[(c[o>>2]|0)+32>>2]&63](v,o);if((a[l>>0]&1)==0){a[l+1>>0]=0;a[l>>0]=0}else{a[c[l+8>>2]>>0]=0;c[l+4>>2]=0}Qn(l,0);c[l+0>>2]=c[v+0>>2];c[l+4>>2]=c[v+4>>2];c[l+8>>2]=c[v+8>>2];c[v+0>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;Kn(v)}else{Wb[c[p+40>>2]&63](y,o);b=c[y>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;Wb[c[(c[o>>2]|0)+28>>2]&63](x,o);if((a[l>>0]&1)==0){a[l+1>>0]=0;a[l>>0]=0}else{a[c[l+8>>2]>>0]=0;c[l+4>>2]=0}Qn(l,0);c[l+0>>2]=c[x+0>>2];c[l+4>>2]=c[x+4>>2];c[l+8>>2]=c[x+8>>2];c[x+0>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;Kn(x)}a[g>>0]=Yb[c[(c[o>>2]|0)+12>>2]&63](o)|0;a[h>>0]=Yb[c[(c[o>>2]|0)+16>>2]&63](o)|0;Wb[c[(c[o>>2]|0)+20>>2]&63](u,o);if((a[j>>0]&1)==0){a[j+1>>0]=0;a[j>>0]=0}else{a[c[j+8>>2]>>0]=0;c[j+4>>2]=0}Qn(j,0);c[j+0>>2]=c[u+0>>2];c[j+4>>2]=c[u+4>>2];c[j+8>>2]=c[u+8>>2];c[u+0>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;Kn(u);Wb[c[(c[o>>2]|0)+24>>2]&63](s,o);if((a[k>>0]&1)==0){a[k+1>>0]=0;a[k>>0]=0}else{a[c[k+8>>2]>>0]=0;c[k+4>>2]=0}Qn(k,0);c[k+0>>2]=c[s+0>>2];c[k+4>>2]=c[s+4>>2];c[k+8>>2]=c[s+8>>2];c[s+0>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;Kn(s);b=Yb[c[(c[o>>2]|0)+36>>2]&63](o)|0;c[m>>2]=b;i=n;return}else{s=Pu(e,262880)|0;u=c[s>>2]|0;if(d){Wb[c[u+44>>2]&63](q,s);b=c[q>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;Wb[c[(c[s>>2]|0)+32>>2]&63](p,s);if((a[l>>0]&1)==0){a[l+1>>0]=0;a[l>>0]=0}else{a[c[l+8>>2]>>0]=0;c[l+4>>2]=0}Qn(l,0);c[l+0>>2]=c[p+0>>2];c[l+4>>2]=c[p+4>>2];c[l+8>>2]=c[p+8>>2];c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;Kn(p)}else{Wb[c[u+40>>2]&63](t,s);b=c[t>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;Wb[c[(c[s>>2]|0)+28>>2]&63](r,s);if((a[l>>0]&1)==0){a[l+1>>0]=0;a[l>>0]=0}else{a[c[l+8>>2]>>0]=0;c[l+4>>2]=0}Qn(l,0);c[l+0>>2]=c[r+0>>2];c[l+4>>2]=c[r+4>>2];c[l+8>>2]=c[r+8>>2];c[r+0>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;Kn(r)}a[g>>0]=Yb[c[(c[s>>2]|0)+12>>2]&63](s)|0;a[h>>0]=Yb[c[(c[s>>2]|0)+16>>2]&63](s)|0;Wb[c[(c[s>>2]|0)+20>>2]&63](o,s);if((a[j>>0]&1)==0){a[j+1>>0]=0;a[j>>0]=0}else{a[c[j+8>>2]>>0]=0;c[j+4>>2]=0}Qn(j,0);c[j+0>>2]=c[o+0>>2];c[j+4>>2]=c[o+4>>2];c[j+8>>2]=c[o+8>>2];c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;Kn(o);Wb[c[(c[s>>2]|0)+24>>2]&63](z,s);if((a[k>>0]&1)==0){a[k+1>>0]=0;a[k>>0]=0}else{a[c[k+8>>2]>>0]=0;c[k+4>>2]=0}Qn(k,0);c[k+0>>2]=c[z+0>>2];c[k+4>>2]=c[z+4>>2];c[k+8>>2]=c[z+8>>2];c[z+0>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;Kn(z);b=Yb[c[(c[s>>2]|0)+36>>2]&63](s)|0;c[m>>2]=b;i=n;return}}function Gt(d,e,f,g,h,j,k,l,m,n,o,p,q,r,s){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;s=s|0;var t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;t=i;c[f>>2]=d;v=r+1|0;w=r+8|0;u=r+4|0;C=(g&512|0)==0;F=q+1|0;D=q+8|0;E=q+4|0;A=(s|0)>0;x=p+1|0;y=p+8|0;I=p+4|0;B=k+8|0;z=0-s|0;J=0;do{switch(a[m+J>>0]|0){case 1:{c[e>>2]=c[f>>2];P=fc[c[(c[k>>2]|0)+28>>2]&15](k,32)|0;Q=c[f>>2]|0;c[f>>2]=Q+1;a[Q>>0]=P;break};case 2:{K=a[q>>0]|0;L=(K&1)==0;if(L)M=(K&255)>>>1;else M=c[E>>2]|0;if(!((M|0)==0|C)){if(L){L=F;K=(K&255)>>>1}else{L=c[D>>2]|0;K=c[E>>2]|0}K=L+K|0;M=c[f>>2]|0;if((L|0)!=(K|0))do{a[M>>0]=a[L>>0]|0;L=L+1|0;M=M+1|0}while((L|0)!=(K|0));c[f>>2]=M}break};case 3:{L=a[r>>0]|0;K=(L&1)==0;if(K)L=(L&255)>>>1;else L=c[u>>2]|0;if((L|0)!=0){if(K)K=v;else K=c[w>>2]|0;P=a[K>>0]|0;Q=c[f>>2]|0;c[f>>2]=Q+1;a[Q>>0]=P}break};case 4:{K=c[f>>2]|0;h=l?h+1|0:h;a:do if(h>>>0<j>>>0){L=h;while(1){N=a[L>>0]|0;if(!(N<<24>>24>-1))break a;M=L+1|0;if((b[(c[B>>2]|0)+(N<<24>>24<<1)>>1]&2048)==0)break a;if(M>>>0<j>>>0)L=M;else{L=M;break}}}else L=h;while(0);M=L;if(A){if(L>>>0>h>>>0){N=h+(0-M)|0;N=N>>>0<z>>>0?z:N;M=N+s|0;O=K;P=L;Q=s;while(1){P=P+ -1|0;R=a[P>>0]|0;c[f>>2]=O+1;a[O>>0]=R;Q=Q+ -1|0;O=(Q|0)>0;if(!(P>>>0>h>>>0&O))break;O=c[f>>2]|0}L=L+N|0;if(O)G=32;else N=0}else{M=s;G=32}if((G|0)==32){G=0;N=fc[c[(c[k>>2]|0)+28>>2]&15](k,48)|0}O=c[f>>2]|0;c[f>>2]=O+1;if((M|0)>0)do{a[O>>0]=N;M=M+ -1|0;O=c[f>>2]|0;c[f>>2]=O+1}while((M|0)>0);a[O>>0]=n}if((L|0)==(h|0)){Q=fc[c[(c[k>>2]|0)+28>>2]&15](k,48)|0;R=c[f>>2]|0;c[f>>2]=R+1;a[R>>0]=Q}else{N=a[p>>0]|0;M=(N&1)==0;if(M)N=(N&255)>>>1;else N=c[I>>2]|0;if((N|0)==0){M=-1;N=0;O=0}else{if(M)M=x;else M=c[y>>2]|0;M=a[M>>0]|0;N=0;O=0}while(1){if((O|0)==(M|0)){P=c[f>>2]|0;c[f>>2]=P+1;a[P>>0]=o;N=N+1|0;P=a[p>>0]|0;O=(P&1)==0;if(O)P=(P&255)>>>1;else P=c[I>>2]|0;if(N>>>0<P>>>0){if(O)M=x;else M=c[y>>2]|0;if((a[M+N>>0]|0)==127){M=-1;O=0}else{if(O)M=x;else M=c[y>>2]|0;M=a[M+N>>0]|0;O=0}}else O=0}L=L+ -1|0;Q=a[L>>0]|0;R=c[f>>2]|0;c[f>>2]=R+1;a[R>>0]=Q;if((L|0)==(h|0))break;else O=O+1|0}}L=c[f>>2]|0;if((K|0)!=(L|0)?(H=L+ -1|0,H>>>0>K>>>0):0){L=H;do{R=a[K>>0]|0;a[K>>0]=a[L>>0]|0;a[L>>0]=R;K=K+1|0;L=L+ -1|0}while(K>>>0<L>>>0)}break};case 0:{c[e>>2]=c[f>>2];break};default:{}}J=J+1|0}while((J|0)!=4);k=a[r>>0]|0;y=(k&1)==0;if(y)x=(k&255)>>>1;else x=c[u>>2]|0;if(x>>>0>1){if(y)u=(k&255)>>>1;else{v=c[w>>2]|0;u=c[u>>2]|0}w=v+1|0;u=v+u|0;v=c[f>>2]|0;if((w|0)!=(u|0))do{a[v>>0]=a[w>>0]|0;w=w+1|0;v=v+1|0}while((w|0)!=(u|0));c[f>>2]=v}g=g&176;if((g|0)==32){c[e>>2]=c[f>>2];i=t;return}else if((g|0)==16){i=t;return}else{c[e>>2]=d;i=t;return}}function Ht(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;s=i;i=i+176|0;q=s+20|0;r=s+24|0;w=s+12|0;x=s+64|0;d=s+65|0;m=s;n=s+52|0;o=s+32|0;A=s+28|0;y=s+68|0;t=s+44|0;u=s+48|0;p=s+16|0;jo(r,g);v=Pu(r,263504)|0;B=a[j>>0]|0;z=(B&1)==0;if(z)B=(B&255)>>>1;else B=c[j+4>>2]|0;if((B|0)==0)z=0;else{if(z)z=j+1|0;else z=c[j+8>>2]|0;z=a[z>>0]|0;z=z<<24>>24==(fc[c[(c[v>>2]|0)+28>>2]&15](v,45)|0)<<24>>24}c[w>>2]=0;c[m+0>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;c[n+0>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;Ft(f,z,r,w,x,d,m,n,o,A);f=a[j>>0]|0;C=(f&1)==0;if(C)B=(f&255)>>>1;else B=c[j+4>>2]|0;A=c[A>>2]|0;if((B|0)>(A|0)){if(C)B=(f&255)>>>1;else B=c[j+4>>2]|0;C=a[o>>0]|0;if((C&1)==0)C=(C&255)>>>1;else C=c[o+4>>2]|0;D=a[n>>0]|0;if((D&1)==0)D=(D&255)>>>1;else D=c[n+4>>2]|0;B=C+(B-A<<1|1)+D|0}else{B=a[o>>0]|0;if((B&1)==0)B=(B&255)>>>1;else B=c[o+4>>2]|0;C=a[n>>0]|0;if((C&1)==0)C=(C&255)>>>1;else C=c[n+4>>2]|0;B=B+2+C|0}B=B+A|0;if(B>>>0>100){y=Dy(B)|0;if((y|0)==0)Cy();else{l=y;k=y}}else{l=y;k=0}if((f&1)==0){y=j+1|0;j=(f&255)>>>1}else{y=c[j+8>>2]|0;j=c[j+4>>2]|0}Gt(l,t,u,c[g+4>>2]|0,y,y+j|0,v,z,w,a[x>>0]|0,a[d>>0]|0,m,n,o,A);c[p>>2]=c[e>>2];C=c[t>>2]|0;D=c[u>>2]|0;c[q+0>>2]=c[p+0>>2];Qq(b,q,l,C,D,g,h);Ey(k);Kn(o);Kn(n);Kn(m);nn(c[r>>2]|0)|0;i=s;return}function It(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function Jt(a){a=a|0;return}function Kt(b,d,e,f,g,j,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;l=+l;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;t=i;i=i+992|0;s=t;H=t+880|0;F=t+416|0;E=t+8|0;u=t+420|0;w=t+408|0;x=t+412|0;C=t+872|0;B=t+432|0;d=t+444|0;z=t+456|0;G=t+468|0;D=t+472|0;A=t+424|0;v=t+428|0;y=t+876|0;c[F>>2]=H;h[k>>3]=l;c[s>>2]=c[k>>2];c[s+4>>2]=c[k+4>>2];H=$y(H,100,263256,s)|0;if(H>>>0>99){E=dq()|0;h[k>>3]=l;c[s>>2]=c[k>>2];c[s+4>>2]=c[k+4>>2];E=Wq(F,E,263256,s)|0;H=c[F>>2]|0;if((H|0)==0)Cy();I=Dy(E<<2)|0;if((I|0)==0)Cy();else{o=I;n=H;r=I;q=E}}else{o=0;n=0;r=E;q=H}jo(u,g);E=Pu(u,263496)|0;I=c[F>>2]|0;cc[c[(c[E>>2]|0)+48>>2]&7](E,I,I+q|0,r)|0;if((q|0)==0)F=0;else F=(a[c[F>>2]>>0]|0)==45;c[w>>2]=0;c[B+0>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[z+0>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;Lt(f,F,u,w,x,C,B,d,z,G);f=c[G>>2]|0;if((q|0)>(f|0)){G=a[z>>0]|0;if((G&1)==0)G=(G&255)>>>1;else G=c[z+4>>2]|0;H=a[d>>0]|0;if((H&1)==0)H=(H&255)>>>1;else H=c[d+4>>2]|0;G=G+(q-f<<1|1)+H|0}else{G=a[z>>0]|0;if((G&1)==0)G=(G&255)>>>1;else G=c[z+4>>2]|0;H=a[d>>0]|0;if((H&1)==0)H=(H&255)>>>1;else H=c[d+4>>2]|0;G=G+2+H|0}G=G+f|0;if(G>>>0>100){D=Dy(G<<2)|0;if((D|0)==0)Cy();else{p=D;m=D}}else{p=0;m=D}Mt(m,A,v,c[g+4>>2]|0,r,r+(q<<2)|0,E,F,w,c[x>>2]|0,c[C>>2]|0,B,d,z,f);c[y>>2]=c[e>>2];H=c[A>>2]|0;I=c[v>>2]|0;c[s+0>>2]=c[y+0>>2];dr(b,s,m,H,I,g,j);if((p|0)!=0)Ey(p);Zn(z);Zn(d);Kn(B);nn(c[u>>2]|0)|0;if((o|0)==0){Ey(n);i=t;return}Ey(o);Ey(n);i=t;return}function Lt(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;n=i;i=i+112|0;w=n;v=n+16|0;y=n+92|0;x=n+40|0;u=n+80|0;s=n+96|0;q=n+108|0;p=n+56|0;t=n+52|0;r=n+28|0;o=n+4|0;z=n+68|0;if(b){o=Pu(e,263072)|0;p=c[o>>2]|0;if(d){Wb[c[p+44>>2]&63](w,o);b=c[w>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;Wb[c[(c[o>>2]|0)+32>>2]&63](v,o);if((a[l>>0]&1)==0){c[l+4>>2]=0;a[l>>0]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}bo(l,0);c[l+0>>2]=c[v+0>>2];c[l+4>>2]=c[v+4>>2];c[l+8>>2]=c[v+8>>2];c[v+0>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;Zn(v)}else{Wb[c[p+40>>2]&63](y,o);b=c[y>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;Wb[c[(c[o>>2]|0)+28>>2]&63](x,o);if((a[l>>0]&1)==0){c[l+4>>2]=0;a[l>>0]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}bo(l,0);c[l+0>>2]=c[x+0>>2];c[l+4>>2]=c[x+4>>2];c[l+8>>2]=c[x+8>>2];c[x+0>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;Zn(x)}c[g>>2]=Yb[c[(c[o>>2]|0)+12>>2]&63](o)|0;c[h>>2]=Yb[c[(c[o>>2]|0)+16>>2]&63](o)|0;Wb[c[(c[o>>2]|0)+20>>2]&63](u,o);if((a[j>>0]&1)==0){a[j+1>>0]=0;a[j>>0]=0}else{a[c[j+8>>2]>>0]=0;c[j+4>>2]=0}Qn(j,0);c[j+0>>2]=c[u+0>>2];c[j+4>>2]=c[u+4>>2];c[j+8>>2]=c[u+8>>2];c[u+0>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;Kn(u);Wb[c[(c[o>>2]|0)+24>>2]&63](s,o);if((a[k>>0]&1)==0){c[k+4>>2]=0;a[k>>0]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}bo(k,0);c[k+0>>2]=c[s+0>>2];c[k+4>>2]=c[s+4>>2];c[k+8>>2]=c[s+8>>2];c[s+0>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;Zn(s);b=Yb[c[(c[o>>2]|0)+36>>2]&63](o)|0;c[m>>2]=b;i=n;return}else{s=Pu(e,263008)|0;u=c[s>>2]|0;if(d){Wb[c[u+44>>2]&63](q,s);b=c[q>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;Wb[c[(c[s>>2]|0)+32>>2]&63](p,s);if((a[l>>0]&1)==0){c[l+4>>2]=0;a[l>>0]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}bo(l,0);c[l+0>>2]=c[p+0>>2];c[l+4>>2]=c[p+4>>2];c[l+8>>2]=c[p+8>>2];c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;Zn(p)}else{Wb[c[u+40>>2]&63](t,s);b=c[t>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;Wb[c[(c[s>>2]|0)+28>>2]&63](r,s);if((a[l>>0]&1)==0){c[l+4>>2]=0;a[l>>0]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}bo(l,0);c[l+0>>2]=c[r+0>>2];c[l+4>>2]=c[r+4>>2];c[l+8>>2]=c[r+8>>2];c[r+0>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;Zn(r)}c[g>>2]=Yb[c[(c[s>>2]|0)+12>>2]&63](s)|0;c[h>>2]=Yb[c[(c[s>>2]|0)+16>>2]&63](s)|0;Wb[c[(c[s>>2]|0)+20>>2]&63](o,s);if((a[j>>0]&1)==0){a[j+1>>0]=0;a[j>>0]=0}else{a[c[j+8>>2]>>0]=0;c[j+4>>2]=0}Qn(j,0);c[j+0>>2]=c[o+0>>2];c[j+4>>2]=c[o+4>>2];c[j+8>>2]=c[o+8>>2];c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;Kn(o);Wb[c[(c[s>>2]|0)+24>>2]&63](z,s);if((a[k>>0]&1)==0){c[k+4>>2]=0;a[k>>0]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}bo(k,0);c[k+0>>2]=c[z+0>>2];c[k+4>>2]=c[z+4>>2];c[k+8>>2]=c[z+8>>2];c[z+0>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;Zn(z);b=Yb[c[(c[s>>2]|0)+36>>2]&63](s)|0;c[m>>2]=b;i=n;return}}function Mt(b,d,e,f,g,h,j,k,l,m,n,o,p,q,r){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;var s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;s=i;c[e>>2]=b;t=q+4|0;u=q+8|0;y=(f&512|0)==0;w=p+4|0;x=p+8|0;v=(r|0)>0;z=o+1|0;C=o+8|0;D=o+4|0;E=0;do{switch(a[l+E>>0]|0){case 3:{G=a[q>>0]|0;F=(G&1)==0;if(F)G=(G&255)>>>1;else G=c[t>>2]|0;if((G|0)!=0){if(F)F=t;else F=c[u>>2]|0;L=c[F>>2]|0;M=c[e>>2]|0;c[e>>2]=M+4;c[M>>2]=L}break};case 2:{F=a[p>>0]|0;H=(F&1)==0;if(H)G=(F&255)>>>1;else G=c[w>>2]|0;if(!((G|0)==0|y)){if(H){I=w;H=(F&255)>>>1}else{I=c[x>>2]|0;H=c[w>>2]|0}F=I+(H<<2)|0;G=c[e>>2]|0;if((I|0)!=(F|0)){H=(I+(H+ -1<<2)+(0-I)|0)>>>2;J=G;while(1){c[J>>2]=c[I>>2];I=I+4|0;if((I|0)==(F|0))break;J=J+4|0}G=G+(H+1<<2)|0}c[e>>2]=G}break};case 0:{c[d>>2]=c[e>>2];break};case 4:{F=c[e>>2]|0;g=k?g+4|0:g;a:do if(g>>>0<h>>>0){G=g;while(1){H=G+4|0;if(!(Sb[c[(c[j>>2]|0)+12>>2]&31](j,2048,c[G>>2]|0)|0))break a;if(H>>>0<h>>>0)G=H;else{G=H;break}}}else G=g;while(0);if(v){if(G>>>0>g>>>0){H=r;J=c[e>>2]|0;do{G=G+ -4|0;I=J;J=J+4|0;c[I>>2]=c[G>>2];H=H+ -1|0;I=(H|0)>0}while(G>>>0>g>>>0&I);c[e>>2]=J;if(I)A=34;else{L=c[e>>2]|0;c[e>>2]=L+4}}else{H=r;A=34}if((A|0)==34){A=0;J=fc[c[(c[j>>2]|0)+44>>2]&15](j,48)|0;L=c[e>>2]|0;M=L+4|0;c[e>>2]=M;if((H|0)>0){I=L;K=H;while(1){c[I>>2]=J;K=K+ -1|0;if((K|0)<=0)break;else{I=M;M=M+4|0}}c[e>>2]=L+(H+1<<2);L=L+(H<<2)|0}}c[L>>2]=m}if((G|0)==(g|0)){K=fc[c[(c[j>>2]|0)+44>>2]&15](j,48)|0;M=c[e>>2]|0;L=M+4|0;c[e>>2]=L;c[M>>2]=K}else{I=a[o>>0]|0;H=(I&1)==0;if(H)I=(I&255)>>>1;else I=c[D>>2]|0;if((I|0)==0){H=-1;J=0;K=0}else{if(H)H=z;else H=c[C>>2]|0;H=a[H>>0]|0;J=0;K=0}while(1){I=c[e>>2]|0;if((K|0)==(H|0)){K=I+4|0;c[e>>2]=K;c[I>>2]=n;J=J+1|0;L=a[o>>0]|0;I=(L&1)==0;if(I)L=(L&255)>>>1;else L=c[D>>2]|0;if(J>>>0<L>>>0){if(I)H=z;else H=c[C>>2]|0;if((a[H+J>>0]|0)==127){I=K;H=-1;K=0}else{if(I)H=z;else H=c[C>>2]|0;I=K;H=a[H+J>>0]|0;K=0}}else{I=K;K=0}}G=G+ -4|0;M=c[G>>2]|0;L=I+4|0;c[e>>2]=L;c[I>>2]=M;if((G|0)==(g|0))break;else K=K+1|0}}if((F|0)!=(L|0)?(B=L+ -4|0,B>>>0>F>>>0):0){G=B;do{M=c[F>>2]|0;c[F>>2]=c[G>>2];c[G>>2]=M;F=F+4|0;G=G+ -4|0}while(F>>>0<G>>>0)}break};case 1:{c[d>>2]=c[e>>2];L=fc[c[(c[j>>2]|0)+44>>2]&15](j,32)|0;M=c[e>>2]|0;c[e>>2]=M+4;c[M>>2]=L;break};default:{}}E=E+1|0}while((E|0)!=4);v=a[q>>0]|0;m=(v&1)==0;if(m)q=(v&255)>>>1;else q=c[t>>2]|0;if(q>>>0>1){if(m){m=t;q=(v&255)>>>1}else{m=c[u>>2]|0;q=c[t>>2]|0}v=m+4|0;t=m+(q<<2)|0;u=c[e>>2]|0;if((v|0)!=(t|0)){m=(m+(q+ -1<<2)+(0-v)|0)>>>2;q=u;while(1){c[q>>2]=c[v>>2];v=v+4|0;if((v|0)==(t|0))break;else q=q+4|0}u=u+(m+1<<2)|0}c[e>>2]=u}f=f&176;if((f|0)==32){c[d>>2]=c[e>>2];i=s;return}else if((f|0)==16){i=s;return}else{c[d>>2]=b;i=s;return}}function Nt(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;t=i;i=i+480|0;q=t+456|0;s=t+440|0;w=t+12|0;x=t+8|0;d=t+436|0;m=t+444|0;n=t+460|0;o=t+16|0;A=t;y=t+32|0;r=t+4|0;u=t+432|0;p=t+28|0;jo(s,g);v=Pu(s,263496)|0;B=a[j>>0]|0;z=(B&1)==0;if(z)B=(B&255)>>>1;else B=c[j+4>>2]|0;if((B|0)==0)z=0;else{if(z)z=j+4|0;else z=c[j+8>>2]|0;z=c[z>>2]|0;z=(z|0)==(fc[c[(c[v>>2]|0)+44>>2]&15](v,45)|0)}c[w>>2]=0;c[m+0>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;c[n+0>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;Lt(f,z,s,w,x,d,m,n,o,A);f=a[j>>0]|0;C=(f&1)==0;if(C)B=(f&255)>>>1;else B=c[j+4>>2]|0;A=c[A>>2]|0;if((B|0)>(A|0)){if(C)B=(f&255)>>>1;else B=c[j+4>>2]|0;C=a[o>>0]|0;if((C&1)==0)C=(C&255)>>>1;else C=c[o+4>>2]|0;D=a[n>>0]|0;if((D&1)==0)D=(D&255)>>>1;else D=c[n+4>>2]|0;B=C+(B-A<<1|1)+D|0}else{B=a[o>>0]|0;if((B&1)==0)B=(B&255)>>>1;else B=c[o+4>>2]|0;C=a[n>>0]|0;if((C&1)==0)C=(C&255)>>>1;else C=c[n+4>>2]|0;B=B+2+C|0}B=B+A|0;if(B>>>0>100){y=Dy(B<<2)|0;if((y|0)==0)Cy();else{l=y;k=y}}else{l=0;k=y}if((f&1)==0){y=j+4|0;j=(f&255)>>>1}else{y=c[j+8>>2]|0;j=c[j+4>>2]|0}Mt(k,r,u,c[g+4>>2]|0,y,y+(j<<2)|0,v,z,w,c[x>>2]|0,c[d>>2]|0,m,n,o,A);c[p>>2]=c[e>>2];C=c[r>>2]|0;D=c[u>>2]|0;c[q+0>>2]=c[p+0>>2];dr(b,q,k,C,D,g,h);if((l|0)==0){Zn(o);Zn(n);Kn(m);D=c[s>>2]|0;nn(D)|0;i=t;return}Ey(l);Zn(o);Zn(n);Kn(m);D=c[s>>2]|0;nn(D)|0;i=t;return}function Ot(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function Pt(a){a=a|0;return}function Qt(b,d,e){b=b|0;d=d|0;e=e|0;b=i;if((a[d>>0]&1)==0)d=d+1|0;else d=c[d+8>>2]|0;e=Pb(d|0,1)|0;i=b;return e>>>((e|0)!=(-1|0)&1)|0}function Rt(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;d=i;i=i+16|0;j=d;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;l=a[h>>0]|0;if((l&1)==0){m=(l&255)>>>1;l=h+1|0;h=h+1|0}else{n=c[h+8>>2]|0;m=c[h+4>>2]|0;l=n;h=n}h=h+m|0;if(l>>>0<h>>>0){do{Sn(j,a[l>>0]|0);l=l+1|0}while((l|0)!=(h|0));e=(e|0)==-1?-1:e<<1;if((a[j>>0]&1)==0)k=9;else h=c[j+8>>2]|0}else{e=(e|0)==-1?-1:e<<1;k=9}if((k|0)==9)h=j+1|0;g=$a(e|0,f|0,g|0,h|0)|0;c[b+0>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;n=mz(g|0)|0;f=g+n|0;if((n|0)<=0){Kn(j);i=d;return}do{Sn(b,a[g>>0]|0);g=g+1|0}while((g|0)!=(f|0));Kn(j);i=d;return}function St(a,b){a=a|0;b=b|0;a=i;Gb(((b|0)==-1?-1:b<<1)|0)|0;i=a;return}function Tt(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function Ut(a){a=a|0;return}function Vt(b,d,e){b=b|0;d=d|0;e=e|0;b=i;if((a[d>>0]&1)==0)d=d+1|0;else d=c[d+8>>2]|0;e=Pb(d|0,1)|0;i=b;return e>>>((e|0)!=(-1|0)&1)|0}function Wt(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;j=i;i=i+176|0;o=j;n=j+40|0;m=j+168|0;l=j+172|0;d=j+16|0;p=j+8|0;k=j+32|0;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[p+4>>2]=0;c[p>>2]=265160;s=a[h>>0]|0;if((s&1)==0){q=h+4|0;r=h+4|0;h=(s&255)>>>1}else{r=c[h+8>>2]|0;q=r;h=c[h+4>>2]|0}h=q+(h<<2)|0;s=o;c[s>>2]=0;c[s+4>>2]=0;a:do if(r>>>0<h>>>0){q=n+32|0;s=265160|0;while(1){c[l>>2]=r;t=(bc[c[s+12>>2]&15](p,o,r,h,l,n,q,m)|0)==2;s=c[l>>2]|0;if(t|(s|0)==(r|0))break;if(n>>>0<(c[m>>2]|0)>>>0){r=n;do{Sn(d,a[r>>0]|0);r=r+1|0}while(r>>>0<(c[m>>2]|0)>>>0);r=c[l>>2]|0}else r=s;if(!(r>>>0<h>>>0))break a;s=c[p>>2]|0}nt(264384)}while(0);if((a[d>>0]&1)==0)p=d+1|0;else p=c[d+8>>2]|0;p=$a(((e|0)==-1?-1:e<<1)|0,f|0,g|0,p|0)|0;c[b+0>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[k+4>>2]=0;c[k>>2]=265264;t=mz(p|0)|0;g=p+t|0;s=o;c[s>>2]=0;c[s+4>>2]=0;if((t|0)<=0){Kn(d);i=j;return}e=g;f=n+128|0;h=265264|0;while(1){c[l>>2]=p;t=(bc[c[h+16>>2]&15](k,o,p,(e-p|0)>32?p+32|0:g,l,n,f,m)|0)==2;h=c[l>>2]|0;if(t|(h|0)==(p|0)){b=20;break}if(n>>>0<(c[m>>2]|0)>>>0){p=n;do{co(b,c[p>>2]|0);p=p+4|0}while(p>>>0<(c[m>>2]|0)>>>0);p=c[l>>2]|0}else p=h;if(!(p>>>0<g>>>0)){b=25;break}h=c[k>>2]|0}if((b|0)==20)nt(264384);else if((b|0)==25){Kn(d);i=j;return}}function Xt(a,b){a=a|0;b=b|0;a=i;Gb(((b|0)==-1?-1:b<<1)|0)|0;i=a;return}function Yt(a){a=a|0;var b=0,d=0;b=i;c[a>>2]=263592;a=a+8|0;d=c[a>>2]|0;if((d|0)==(dq()|0)){i=b;return}Cb(c[a>>2]|0);i=b;return}function Zt(a){a=a|0;a=Na(8)|0;on(a,263384);c[a>>2]=272040;Bb(a|0,272080,98)}function _t(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;c[b+4>>2]=d+ -1;c[b>>2]=263424;f=b+8|0;Zw(f,28);Hn(b+144|0,263408,1);f=c[f>>2]|0;d=b+12|0;g=c[d>>2]|0;if((g|0)!=(f|0))c[d>>2]=g+(~((g+ -4+(0-f)|0)>>>2)<<2);c[67079]=0;c[67078]=261872;$t(b,268312);c[67077]=0;c[67076]=261912;au(b,268304);hv(268288,0,0,1);bu(b,268288);c[67071]=0;c[67070]=264480;cu(b,268280);c[67069]=0;c[67068]=264696;du(b,268272);Av(268256,1);eu(b,268256);c[67063]=0;c[67062]=264920;fu(b,268248);c[67061]=0;c[67060]=265040;gu(b,268240);c[67055]=0;c[67054]=263672;a[268224]=46;a[268225]=44;c[67057]=0;c[67058]=0;c[67059]=0;hu(b,268216);c[67047]=0;c[67046]=263712;c[67048]=46;c[67049]=44;c[67050]=0;c[67051]=0;c[67052]=0;iu(b,268184);c[67045]=0;c[67044]=261952;ju(b,268176);c[67043]=0;c[67042]=262072;ku(b,268168);c[67041]=0;c[67040]=262144;lu(b,268160);c[67039]=0;c[67038]=262240;mu(b,268152);c[67037]=0;c[67036]=262832;nu(b,268144);c[67035]=0;c[67034]=262896;ou(b,268136);c[67033]=0;c[67032]=262960;pu(b,268128);c[67031]=0;c[67030]=263024;qu(b,268120);c[67029]=0;c[67028]=263088;ru(b,268112);c[67027]=0;c[67026]=263168;su(b,268104);c[67025]=0;c[67024]=263224;tu(b,268096);c[67023]=0;c[67022]=263272;uu(b,268088);c[67019]=0;c[67018]=262320;c[67020]=262368;vu(b,268072);c[67015]=0;c[67014]=262472;c[67016]=262520;wu(b,268056);c[67011]=0;c[67010]=264416;c[67012]=dq()|0;c[67010]=262768;xu(b,268040);c[67007]=0;c[67006]=264416;c[67008]=dq()|0;c[67006]=262800;yu(b,268024);c[67005]=0;c[67004]=263312;zu(b,268016);c[67003]=0;c[67002]=263352;Au(b,268008);i=e;return}function $t(a,b){a=a|0;b=b|0;var c=0;c=i;Cu(a,b,Ou(261896)|0);i=c;return}function au(a,b){a=a|0;b=b|0;var c=0;c=i;Cu(a,b,Ou(261936)|0);i=c;return}function bu(a,b){a=a|0;b=b|0;var c=0;c=i;Cu(a,b,Ou(263504)|0);i=c;return}function cu(a,b){a=a|0;b=b|0;var c=0;c=i;Cu(a,b,Ou(263496)|0);i=c;return}function du(a,b){a=a|0;b=b|0;var c=0;c=i;Cu(a,b,Ou(263568)|0);i=c;return}function eu(a,b){a=a|0;b=b|0;var c=0;c=i;Cu(a,b,Ou(263576)|0);i=c;return}function fu(a,b){a=a|0;b=b|0;var c=0;c=i;Cu(a,b,Ou(263632)|0);i=c;return}function gu(a,b){a=a|0;b=b|0;var c=0;c=i;Cu(a,b,Ou(263640)|0);i=c;return}function hu(a,b){a=a|0;b=b|0;var c=0;c=i;Cu(a,b,Ou(263648)|0);i=c;return}function iu(a,b){a=a|0;b=b|0;var c=0;c=i;Cu(a,b,Ou(263656)|0);i=c;return}function ju(a,b){a=a|0;b=b|0;var c=0;c=i;Cu(a,b,Ou(262008)|0);i=c;return}function ku(a,b){a=a|0;b=b|0;var c=0;c=i;Cu(a,b,Ou(262128)|0);i=c;return}function lu(a,b){a=a|0;b=b|0;var c=0;c=i;Cu(a,b,Ou(262192)|0);i=c;return}function mu(a,b){a=a|0;b=b|0;var c=0;c=i;Cu(a,b,Ou(262288)|0);i=c;return}function nu(a,b){a=a|0;b=b|0;var c=0;c=i;Cu(a,b,Ou(262880)|0);i=c;return}function ou(a,b){a=a|0;b=b|0;var c=0;c=i;Cu(a,b,Ou(262944)|0);i=c;return}function pu(a,b){a=a|0;b=b|0;var c=0;c=i;Cu(a,b,Ou(263008)|0);i=c;return}function qu(a,b){a=a|0;b=b|0;var c=0;c=i;Cu(a,b,Ou(263072)|0);i=c;return}function ru(a,b){a=a|0;b=b|0;var c=0;c=i;Cu(a,b,Ou(263112)|0);i=c;return}function su(a,b){a=a|0;b=b|0;var c=0;c=i;Cu(a,b,Ou(263192)|0);i=c;return}function tu(a,b){a=a|0;b=b|0;var c=0;c=i;Cu(a,b,Ou(263248)|0);i=c;return}function uu(a,b){a=a|0;b=b|0;var c=0;c=i;Cu(a,b,Ou(263296)|0);i=c;return}function vu(a,b){a=a|0;b=b|0;var c=0;c=i;Cu(a,b,Ou(262400)|0);i=c;return}function wu(a,b){a=a|0;b=b|0;var c=0;c=i;Cu(a,b,Ou(262552)|0);i=c;return}function xu(a,b){a=a|0;b=b|0;var c=0;c=i;Cu(a,b,Ou(262784)|0);i=c;return}function yu(a,b){a=a|0;b=b|0;var c=0;c=i;Cu(a,b,Ou(262816)|0);i=c;return}function zu(a,b){a=a|0;b=b|0;var c=0;c=i;Cu(a,b,Ou(263336)|0);i=c;return}function Au(a,b){a=a|0;b=b|0;var c=0;c=i;Cu(a,b,Ou(263376)|0);i=c;return}function Bu(){var b=0;b=i;if((a[263456]|0)==0?(Ha(263456)|0)!=0:0){Iu()|0;c[65862]=263440;Sa(263456)}i=b;return c[65862]|0}function Cu(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;mn(b);f=a+8|0;g=c[f>>2]|0;if(!((c[a+12>>2]|0)-g>>2>>>0>d>>>0)){Fu(f,d+1|0);g=c[f>>2]|0}a=c[g+(d<<2)>>2]|0;if((a|0)==0){a=g;a=a+(d<<2)|0;c[a>>2]=b;i=e;return}nn(a)|0;a=c[f>>2]|0;a=a+(d<<2)|0;c[a>>2]=b;i=e;return}function Du(a){a=a|0;var b=0;b=i;Eu(a);Ix(a);i=b;return}function Eu(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;c[a>>2]=263424;e=a+8|0;d=a+12|0;h=c[d>>2]|0;f=c[e>>2]|0;if((h|0)!=(f|0)){g=0;do{j=c[f+(g<<2)>>2]|0;if((j|0)!=0){nn(j)|0;h=c[d>>2]|0;f=c[e>>2]|0}g=g+1|0}while(g>>>0<h-f>>2>>>0)}Kn(a+144|0);_w(e);i=b;return}function Fu(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;f=a+4|0;e=c[f>>2]|0;h=c[a>>2]|0;g=e-h>>2;if(g>>>0<b>>>0){Sw(a,b-g|0);i=d;return}if(!(g>>>0>b>>>0)){i=d;return}b=h+(b<<2)|0;if((e|0)==(b|0)){i=d;return}c[f>>2]=e+(~((e+ -4+(0-b)|0)>>>2)<<2);i=d;return}function Gu(a,b){a=a|0;b=b|0;var d=0;d=i;if(Hu(a,b)|0){i=d;return c[(c[a+8>>2]|0)+(b<<2)>>2]|0}else{a=Na(4)|0;ay(a);Bb(a|0,272280,104)}return 0}function Hu(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=c[a+8>>2]|0;if(!((c[a+12>>2]|0)-e>>2>>>0>b>>>0)){a=0;i=d;return a|0}a=(c[e+(b<<2)>>2]|0)!=0;i=d;return a|0}function Iu(){var a=0;a=i;_t(267848,1);c[65860]=267848;i=a;return 263440}function Ju(){var a=0,b=0;a=i;b=c[(Bu()|0)>>2]|0;c[65866]=b;mn(b);i=a;return 263464}function Ku(){var b=0;b=i;if((a[263480]|0)==0?(Ha(263480)|0)!=0:0){Ju()|0;c[65868]=263464;Sa(263480)}i=b;return c[65868]|0}function Lu(a){a=a|0;var b=0,d=0;b=i;d=c[(Ku()|0)>>2]|0;c[a>>2]=d;mn(d);i=b;return}function Mu(a,b){a=a|0;b=b|0;var d=0;d=i;b=c[b>>2]|0;c[a>>2]=b;mn(b);i=d;return}function Nu(a){a=a|0;var b=0;b=i;nn(c[a>>2]|0)|0;i=b;return}function Ou(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;if(!((c[a>>2]|0)==-1)){c[d>>2]=a;c[d+4>>2]=115;c[d+8>>2]=0;Dn(a,d,116)}i=b;return(c[a+4>>2]|0)+ -1|0}function Pu(a,b){a=a|0;b=b|0;var d=0;d=i;a=c[a>>2]|0;a=Gu(a,Ou(b)|0)|0;i=d;return a|0}function Qu(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function Ru(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Vb[c[(c[a>>2]|0)+4>>2]&127](a);i=b;return}function Su(a){a=a|0;var b=0;b=c[65872]|0;c[65872]=b+1;c[a+4>>2]=b+1;return}function Tu(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function Uu(a,c,d){a=a|0;c=c|0;d=d|0;a=i;if(!(d>>>0<128)){c=0;i=a;return c|0}c=(b[(Vu()|0)+(d<<1)>>1]&c)<<16>>16!=0;i=a;return c|0}function Vu(){var a=0,b=0;b=i;a=c[(qb()|0)>>2]|0;i=b;return a|0}function Wu(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;a=i;if((d|0)==(e|0)){j=d;i=a;return j|0}g=((e+ -4+(0-d)|0)>>>2)+1|0;h=d;while(1){j=c[h>>2]|0;if(j>>>0<128)j=b[(Vu()|0)+(j<<1)>>1]|0;else j=0;b[f>>1]=j;h=h+4|0;if((h|0)==(e|0))break;else f=f+2|0}j=d+(g<<2)|0;i=a;return j|0}function Xu(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0;a=i;a:do if((e|0)==(f|0))f=e;else do{g=c[e>>2]|0;if(g>>>0<128?!((b[(Vu()|0)+(g<<1)>>1]&d)<<16>>16==0):0){f=e;break a}e=e+4|0}while((e|0)!=(f|0));while(0);i=a;return f|0}function Yu(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0;a=i;a:do if((e|0)==(f|0))f=e;else do{g=c[e>>2]|0;if(!(g>>>0<128)){f=e;break a}if((b[(Vu()|0)+(g<<1)>>1]&d)<<16>>16==0){f=e;break a}e=e+4|0}while((e|0)!=(f|0));while(0);i=a;return f|0}function Zu(a,b){a=a|0;b=b|0;a=i;if(!(b>>>0<128)){i=a;return b|0}b=c[(_u()|0)+(b<<2)>>2]|0;i=a;return b|0}function _u(){var a=0,b=0;b=i;a=c[(Qa()|0)>>2]|0;i=b;return a|0}function $u(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;a=i;if((b|0)==(d|0)){g=b;i=a;return g|0}e=((d+ -4+(0-b)|0)>>>2)+1|0;f=b;do{g=c[f>>2]|0;if(g>>>0<128)g=c[(_u()|0)+(g<<2)>>2]|0;c[f>>2]=g;f=f+4|0}while((f|0)!=(d|0));g=b+(e<<2)|0;i=a;return g|0}function av(a,b){a=a|0;b=b|0;a=i;if(!(b>>>0<128)){i=a;return b|0}b=c[(bv()|0)+(b<<2)>>2]|0;i=a;return b|0}function bv(){var a=0,b=0;b=i;a=c[(kb()|0)>>2]|0;i=b;return a|0}



function io(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;g=c[a+40>>2]|0;if((g|0)==0){i=d;return}e=a+32|0;f=a+36|0;do{g=g+ -1|0;_b[c[(c[e>>2]|0)+(g<<2)>>2]&3](b,a,c[(c[f>>2]|0)+(g<<2)>>2]|0)}while((g|0)!=0);i=d;return}function jo(a,b){a=a|0;b=b|0;var c=0;c=i;Mu(a,b+28|0);i=c;return}function ko(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;c[a+24>>2]=b;c[a+16>>2]=(b|0)==0&1;c[a+20>>2]=0;c[a+4>>2]=4098;c[a+12>>2]=0;c[a+8>>2]=6;b=a+28|0;e=a+32|0;a=e+40|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(a|0));Lu(b);i=d;return}function lo(a){a=a|0;var b=0;b=i;c[a>>2]=260744;Nu(a+4|0);Ix(a);i=b;return}function mo(a){a=a|0;var b=0;b=i;c[a>>2]=260744;Nu(a+4|0);i=b;return}function no(a){a=a|0;var b=0;b=i;c[a>>2]=260744;Nu(a+4|0);i=b;return}function oo(a){a=a|0;var b=0;b=i;c[a>>2]=260744;Lu(a+4|0);a=a+8|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[a+16>>2]=0;c[a+20>>2]=0;i=b;return}function po(a,b){a=a|0;b=b|0;return}function qo(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function ro(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}function so(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=a;c[e>>2]=0;c[e+4>>2]=0;e=a+8|0;c[e>>2]=-1;c[e+4>>2]=-1;return}function to(a){a=a|0;return 0}function uo(a){a=a|0;return 0}function vo(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;if((e|0)<=0){k=0;i=f;return k|0}g=b+12|0;h=b+16|0;j=0;while(1){k=c[g>>2]|0;if(k>>>0<(c[h>>2]|0)>>>0){c[g>>2]=k+1;k=a[k>>0]|0}else{k=Yb[c[(c[b>>2]|0)+40>>2]&63](b)|0;if((k|0)==-1){e=8;break}k=k&255}a[d>>0]=k;j=j+1|0;if((j|0)<(e|0))d=d+1|0;else{e=8;break}}if((e|0)==8){i=f;return j|0}return 0}function wo(a){a=a|0;return-1}function xo(a){a=a|0;var b=0,e=0;b=i;if((Yb[c[(c[a>>2]|0)+36>>2]&63](a)|0)==-1){a=-1;i=b;return a|0}e=a+12|0;a=c[e>>2]|0;c[e>>2]=a+1;a=d[a>>0]|0;i=b;return a|0}function yo(a,b){a=a|0;b=b|0;return-1}function zo(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;if((f|0)<=0){l=0;i=g;return l|0}j=b+24|0;h=b+28|0;k=0;while(1){l=c[j>>2]|0;if(!(l>>>0<(c[h>>2]|0)>>>0)){if((fc[c[(c[b>>2]|0)+52>>2]&15](b,d[e>>0]|0)|0)==-1){h=7;break}}else{m=a[e>>0]|0;c[j>>2]=l+1;a[l>>0]=m}k=k+1|0;if((k|0)<(f|0))e=e+1|0;else{h=7;break}}if((h|0)==7){i=g;return k|0}return 0}function Ao(a,b){a=a|0;b=b|0;return-1}function Bo(a){a=a|0;var b=0;b=i;c[a>>2]=260808;Nu(a+4|0);Ix(a);i=b;return}function Co(a){a=a|0;var b=0;b=i;c[a>>2]=260808;Nu(a+4|0);i=b;return}function Do(a){a=a|0;var b=0;b=i;c[a>>2]=260808;Nu(a+4|0);i=b;return}function Eo(a){a=a|0;var b=0;b=i;c[a>>2]=260808;Lu(a+4|0);a=a+8|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[a+16>>2]=0;c[a+20>>2]=0;i=b;return}function Fo(a,b){a=a|0;b=b|0;return}function Go(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function Ho(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}function Io(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=a;c[e>>2]=0;c[e+4>>2]=0;e=a+8|0;c[e>>2]=-1;c[e+4>>2]=-1;return}function Jo(a){a=a|0;return 0}function Ko(a){a=a|0;return 0}function Lo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;if((d|0)<=0){j=0;i=e;return j|0}f=a+12|0;g=a+16|0;h=0;while(1){j=c[f>>2]|0;if(!(j>>>0<(c[g>>2]|0)>>>0)){j=Yb[c[(c[a>>2]|0)+40>>2]&63](a)|0;if((j|0)==-1){a=8;break}}else{c[f>>2]=j+4;j=c[j>>2]|0}c[b>>2]=j;h=h+1|0;if((h|0)>=(d|0)){a=8;break}b=b+4|0}if((a|0)==8){i=e;return h|0}return 0}function Mo(a){a=a|0;return-1}function No(a){a=a|0;var b=0,d=0;b=i;if((Yb[c[(c[a>>2]|0)+36>>2]&63](a)|0)==-1){a=-1;i=b;return a|0}d=a+12|0;a=c[d>>2]|0;c[d>>2]=a+4;a=c[a>>2]|0;i=b;return a|0}function Oo(a,b){a=a|0;b=b|0;return-1}function Po(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;if((d|0)<=0){j=0;i=e;return j|0}g=a+24|0;f=a+28|0;h=0;while(1){j=c[g>>2]|0;if(!(j>>>0<(c[f>>2]|0)>>>0)){if((fc[c[(c[a>>2]|0)+52>>2]&15](a,c[b>>2]|0)|0)==-1){f=8;break}}else{k=c[b>>2]|0;c[g>>2]=j+4;c[j>>2]=k}h=h+1|0;if((h|0)>=(d|0)){f=8;break}b=b+4|0}if((f|0)==8){i=e;return h|0}return 0}function Qo(a,b){a=a|0;b=b|0;return-1}function Ro(a){a=a|0;var b=0;b=i;ho(a+8|0);Ix(a);i=b;return}function So(a){a=a|0;var b=0;b=i;ho(a+8|0);i=b;return}function To(a){a=a|0;var b=0;b=i;Ro(a+(c[(c[a>>2]|0)+ -12>>2]|0)|0);i=b;return}function Uo(a){a=a|0;var b=0;b=i;ho(a+((c[(c[a>>2]|0)+ -12>>2]|0)+8)|0);i=b;return}function Vo(b){b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d;if((c[b+((c[(c[b>>2]|0)+ -12>>2]|0)+24)>>2]|0)==0){i=d;return b|0}ep(e,b);if((a[e>>0]|0)!=0?(f=c[b+((c[(c[b>>2]|0)+ -12>>2]|0)+24)>>2]|0,(Yb[c[(c[f>>2]|0)+24>>2]&63](f)|0)==-1):0){f=c[(c[b>>2]|0)+ -12>>2]|0;go(b+f|0,c[b+(f+16)>>2]|1)}fp(e);i=d;return b|0}function Wo(a){a=a|0;var b=0;b=a+16|0;c[b>>2]=c[b>>2]|1;if((c[a+20>>2]&1|0)==0)return;else Eb()}function Xo(a){a=a|0;var b=0;b=i;ho(a+8|0);Ix(a);i=b;return}function Yo(a){a=a|0;var b=0;b=i;ho(a+8|0);i=b;return}function Zo(a){a=a|0;var b=0;b=i;Xo(a+(c[(c[a>>2]|0)+ -12>>2]|0)|0);i=b;return}function _o(a){a=a|0;var b=0;b=i;ho(a+((c[(c[a>>2]|0)+ -12>>2]|0)+8)|0);i=b;return}function $o(b){b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d;if((c[b+((c[(c[b>>2]|0)+ -12>>2]|0)+24)>>2]|0)==0){i=d;return b|0}kp(e,b);if((a[e>>0]|0)!=0?(f=c[b+((c[(c[b>>2]|0)+ -12>>2]|0)+24)>>2]|0,(Yb[c[(c[f>>2]|0)+24>>2]&63](f)|0)==-1):0){f=c[(c[b>>2]|0)+ -12>>2]|0;go(b+f|0,c[b+(f+16)>>2]|1)}lp(e);i=d;return b|0}function ap(a){a=a|0;var b=0;b=i;ho(a+4|0);Ix(a);i=b;return}function bp(a){a=a|0;var b=0;b=i;ho(a+4|0);i=b;return}function cp(a){a=a|0;var b=0;b=i;ap(a+(c[(c[a>>2]|0)+ -12>>2]|0)|0);i=b;return}function dp(a){a=a|0;var b=0;b=i;ho(a+((c[(c[a>>2]|0)+ -12>>2]|0)+4)|0);i=b;return}function ep(b,d){b=b|0;d=d|0;var e=0,f=0;e=i;a[b>>0]=0;c[b+4>>2]=d;f=c[(c[d>>2]|0)+ -12>>2]|0;if((c[d+(f+16)>>2]|0)!=0){i=e;return}f=c[d+(f+72)>>2]|0;if((f|0)!=0)Vo(f)|0;a[b>>0]=1;i=e;return}function fp(a){a=a|0;var b=0,d=0,e=0;b=i;a=a+4|0;d=c[a>>2]|0;e=c[(c[d>>2]|0)+ -12>>2]|0;if((c[d+(e+24)>>2]|0)==0){i=b;return}if((c[d+(e+16)>>2]|0)!=0){i=b;return}if((c[d+(e+4)>>2]&8192|0)==0){i=b;return}if(fb()|0){i=b;return}e=c[a>>2]|0;e=c[e+((c[(c[e>>2]|0)+ -12>>2]|0)+24)>>2]|0;if(!((Yb[c[(c[e>>2]|0)+24>>2]&63](e)|0)==-1)){i=b;return}d=c[a>>2]|0;e=c[(c[d>>2]|0)+ -12>>2]|0;go(d+e|0,c[d+(e+16)>>2]|1);i=b;return}function gp(a){a=a|0;var b=0;b=i;ho(a+4|0);Ix(a);i=b;return}function hp(a){a=a|0;var b=0;b=i;ho(a+4|0);i=b;return}function ip(a){a=a|0;var b=0;b=i;gp(a+(c[(c[a>>2]|0)+ -12>>2]|0)|0);i=b;return}function jp(a){a=a|0;var b=0;b=i;ho(a+((c[(c[a>>2]|0)+ -12>>2]|0)+4)|0);i=b;return}function kp(b,d){b=b|0;d=d|0;var e=0,f=0;e=i;a[b>>0]=0;c[b+4>>2]=d;f=c[(c[d>>2]|0)+ -12>>2]|0;if((c[d+(f+16)>>2]|0)!=0){i=e;return}f=c[d+(f+72)>>2]|0;if((f|0)!=0)$o(f)|0;a[b>>0]=1;i=e;return}function lp(a){a=a|0;var b=0,d=0,e=0;b=i;a=a+4|0;d=c[a>>2]|0;e=c[(c[d>>2]|0)+ -12>>2]|0;if((c[d+(e+24)>>2]|0)==0){i=b;return}if((c[d+(e+16)>>2]|0)!=0){i=b;return}if((c[d+(e+4)>>2]&8192|0)==0){i=b;return}if(fb()|0){i=b;return}e=c[a>>2]|0;e=c[e+((c[(c[e>>2]|0)+ -12>>2]|0)+24)>>2]|0;if(!((Yb[c[(c[e>>2]|0)+24>>2]&63](e)|0)==-1)){i=b;return}d=c[a>>2]|0;e=c[(c[d>>2]|0)+ -12>>2]|0;go(d+e|0,c[d+(e+16)>>2]|1);i=b;return}function mp(a){a=a|0;return 261024}function np(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=i;if((c|0)==1){Hn(a,261040,35);i=d;return}else{wn(a,b,c);i=d;return}}function op(){var b=0;b=i;if((a[261088]|0)==0?(Ha(261088)|0)!=0:0){c[65270]=261784;Lb(35,261080,o|0)|0;Sa(261088)}i=b;return 261080}function pp(a){a=a|0;return}function qp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e+8|0;g=e;j=d;h=c[j+4>>2]|0;d=g;c[d>>2]=c[j>>2];c[d+4>>2]=h;c[f+0>>2]=c[g+0>>2];c[f+4>>2]=c[g+4>>2];yn(a,f,b);c[a>>2]=261104;i=e;return}function rp(a){a=a|0;var b=0;b=i;An(a);Ix(a);i=b;return}function sp(a){a=a|0;var b=0;b=i;An(a);i=b;return}function tp(a){a=a|0;var b=0;b=i;ho(a);Ix(a);i=b;return}function up(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function vp(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function wp(a){a=a|0;return}function xp(a){a=a|0;return}function yp(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;b=i;a:do if((e|0)==(f|0))g=6;else while(1){if((c|0)==(d|0)){d=-1;break a}h=a[c>>0]|0;j=a[e>>0]|0;if(h<<24>>24<j<<24>>24){d=-1;break a}if(j<<24>>24<h<<24>>24){d=1;break a}c=c+1|0;e=e+1|0;if((e|0)==(f|0)){g=6;break}}while(0);if((g|0)==6)d=(c|0)!=(d|0)&1;i=b;return d|0}function zp(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;b=i;Jn(a,c,d);i=b;return}function Ap(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0;b=i;if((c|0)==(d|0)){e=0;i=b;return e|0}else e=0;do{e=(a[c>>0]|0)+(e<<4)|0;f=e&-268435456;e=(f>>>24|f)^e;c=c+1|0}while((c|0)!=(d|0));i=b;return e|0}function Bp(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function Cp(a){a=a|0;return}function Dp(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;a=i;a:do if((e|0)==(f|0))g=6;else while(1){if((b|0)==(d|0)){d=-1;break a}h=c[b>>2]|0;j=c[e>>2]|0;if((h|0)<(j|0)){d=-1;break a}if((j|0)<(h|0)){d=1;break a}b=b+4|0;e=e+4|0;if((e|0)==(f|0)){g=6;break}}while(0);if((g|0)==6)d=(b|0)!=(d|0)&1;i=a;return d|0}function Ep(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;b=i;Yn(a,c,d);i=b;return}function Fp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;a=i;if((b|0)==(d|0)){e=0;i=a;return e|0}else e=0;do{e=(c[b>>2]|0)+(e<<4)|0;f=e&-268435456;e=(f>>>24|f)^e;b=b+4|0}while((b|0)!=(d|0));i=a;return e|0}function Gp(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function Hp(a){a=a|0;return}function Ip(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;k=i;i=i+64|0;s=k;n=k+16|0;l=k+52|0;r=k+4|0;o=k+56|0;p=k+60|0;m=k+12|0;u=k+48|0;q=k+24|0;t=k+8|0;if((c[g+4>>2]&1|0)!=0){jo(m,g);d=Pu(m,263504)|0;nn(c[m>>2]|0)|0;jo(u,g);g=Pu(u,263648)|0;nn(c[u>>2]|0)|0;Wb[c[(c[g>>2]|0)+24>>2]&63](q,g);Wb[c[(c[g>>2]|0)+28>>2]&63](q+12|0,g);c[t>>2]=c[f>>2];g=q+24|0;c[s+0>>2]=c[t+0>>2];a[j>>0]=(Jp(e,s,q,g,d,h,1)|0)==(q|0)&1;c[b>>2]=c[e>>2];Kn(q+12|0);Kn(q);i=k;return}c[l>>2]=-1;m=c[(c[d>>2]|0)+16>>2]|0;c[o>>2]=c[e>>2];c[p>>2]=c[f>>2];c[n+0>>2]=c[o+0>>2];c[s+0>>2]=c[p+0>>2];Tb[m&63](r,d,n,s,g,h,l);m=c[r>>2]|0;c[e>>2]=m;l=c[l>>2]|0;if((l|0)==1)a[j>>0]=1;else if((l|0)==0)a[j>>0]=0;else{a[j>>0]=1;c[h>>2]=4}c[b>>2]=m;i=k;return}function Jp(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;m=i;i=i+112|0;p=m;s=(g-f|0)/12|0;if(s>>>0>100){p=Dy(s)|0;if((p|0)==0)Cy();else{o=p;l=p}}else{o=p;l=0}p=(f|0)==(g|0);if(p)u=0;else{q=f;u=0;r=o;while(1){t=a[q>>0]|0;if((t&1)==0)t=(t&255)>>>1;else t=c[q+4>>2]|0;if((t|0)==0){a[r>>0]=2;u=u+1|0;s=s+ -1|0}else a[r>>0]=1;q=q+12|0;if((q|0)==(g|0))break;else r=r+1|0}}q=0;a:while(1){r=c[b>>2]|0;do if((r|0)!=0){if((c[r+12>>2]|0)==(c[r+16>>2]|0))if((Yb[c[(c[r>>2]|0)+36>>2]&63](r)|0)==-1){c[b>>2]=0;r=0;break}else{r=c[b>>2]|0;break}}else r=0;while(0);w=(r|0)==0;t=c[e>>2]|0;if((t|0)!=0){if((c[t+12>>2]|0)==(c[t+16>>2]|0)?(Yb[c[(c[t>>2]|0)+36>>2]&63](t)|0)==-1:0){c[e>>2]=0;t=0}}else t=0;r=(t|0)==0;v=c[b>>2]|0;if(!((w^r)&(s|0)!=0))break;r=c[v+12>>2]|0;if((r|0)==(c[v+16>>2]|0))r=Yb[c[(c[v>>2]|0)+36>>2]&63](v)|0;else r=d[r>>0]|0;t=r&255;if(!k)t=fc[c[(c[h>>2]|0)+12>>2]&15](h,t)|0;r=q+1|0;if(p){q=r;continue}else{x=0;v=f;w=o}while(1){do if((a[w>>0]|0)==1){if((a[v>>0]&1)==0)y=v+1|0;else y=c[v+8>>2]|0;y=a[y+q>>0]|0;if(!k)y=fc[c[(c[h>>2]|0)+12>>2]&15](h,y)|0;if(!(t<<24>>24==y<<24>>24)){a[w>>0]=0;s=s+ -1|0;break}x=a[v>>0]|0;if((x&1)==0)x=(x&255)>>>1;else x=c[v+4>>2]|0;if((x|0)==(r|0)){a[w>>0]=2;x=1;u=u+1|0;s=s+ -1|0}else x=1}while(0);v=v+12|0;if((v|0)==(g|0))break;w=w+1|0}if(!x){q=r;continue}q=c[b>>2]|0;t=q+12|0;v=c[t>>2]|0;if((v|0)==(c[q+16>>2]|0))Yb[c[(c[q>>2]|0)+40>>2]&63](q)|0;else c[t>>2]=v+1;if((u+s|0)>>>0<2){q=r;continue}else{t=f;q=o}while(1){if((a[q>>0]|0)==2){v=a[t>>0]|0;if((v&1)==0)v=(v&255)>>>1;else v=c[t+4>>2]|0;if((v|0)!=(r|0)){a[q>>0]=0;u=u+ -1|0}}t=t+12|0;if((t|0)==(g|0)){q=r;continue a}else q=q+1|0}}do if((v|0)!=0){if((c[v+12>>2]|0)==(c[v+16>>2]|0))if((Yb[c[(c[v>>2]|0)+36>>2]&63](v)|0)==-1){c[b>>2]=0;v=0;break}else{v=c[b>>2]|0;break}}else v=0;while(0);h=(v|0)==0;do if(!r){if((c[t+12>>2]|0)!=(c[t+16>>2]|0))if(h)break;else{n=68;break}if(!((Yb[c[(c[t>>2]|0)+36>>2]&63](t)|0)==-1))if(h)break;else{n=68;break}else{c[e>>2]=0;n=66;break}}else n=66;while(0);if((n|0)==66?h:0)n=68;if((n|0)==68)c[j>>2]=c[j>>2]|2;b:do if(!p)if((a[o>>0]|0)==2)g=f;else while(1){f=f+12|0;o=o+1|0;if((f|0)==(g|0)){n=73;break b}if((a[o>>0]|0)==2){g=f;break}}else n=73;while(0);if((n|0)==73)c[j>>2]=c[j>>2]|4;if((l|0)==0){i=m;return g|0}Ey(l);i=m;return g|0}function Kp(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];Lp(a,0,k,j,f,g,h);i=b;return}function Lp(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;n=i;i=i+224|0;v=n+198|0;u=n+196|0;m=n+16|0;e=n+4|0;t=n+192|0;q=n+32|0;p=n;r=n+28|0;s=tw(h)|0;Cq(m,h,v,u);c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;On(e,10,0);if((a[e>>0]&1)==0){A=e+1|0;w=e+8|0;h=A}else{A=e+8|0;w=A;h=e+1|0;A=c[A>>2]|0}c[t>>2]=A;c[p>>2]=q;c[r>>2]=0;x=e+4|0;y=a[u>>0]|0;u=c[f>>2]|0;a:while(1){if((u|0)!=0){if((c[u+12>>2]|0)==(c[u+16>>2]|0)?(Yb[c[(c[u>>2]|0)+36>>2]&63](u)|0)==-1:0){c[f>>2]=0;u=0}}else u=0;B=(u|0)==0;z=c[g>>2]|0;do if((z|0)!=0){if((c[z+12>>2]|0)!=(c[z+16>>2]|0))if(B)break;else break a;if(!((Yb[c[(c[z>>2]|0)+36>>2]&63](z)|0)==-1))if(B)break;else break a;else{c[g>>2]=0;l=14;break}}else l=14;while(0);if((l|0)==14){l=0;if(B){z=0;break}else z=0}B=a[e>>0]|0;C=(B&1)==0;if(C)D=(B&255)>>>1;else D=c[x>>2]|0;if(((c[t>>2]|0)-A|0)==(D|0)){if(C){C=(B&255)>>>1;A=(B&255)>>>1}else{A=c[x>>2]|0;C=A}On(e,A<<1,0);if((a[e>>0]&1)==0)A=10;else A=(c[e>>2]&-2)+ -1|0;On(e,A,0);if((a[e>>0]&1)==0)A=h;else A=c[w>>2]|0;c[t>>2]=A+C}B=u+12|0;D=c[B>>2]|0;C=u+16|0;if((D|0)==(c[C>>2]|0))D=Yb[c[(c[u>>2]|0)+36>>2]&63](u)|0;else D=d[D>>0]|0;if((bq(D&255,s,A,t,r,y,m,q,p,v)|0)!=0)break;z=c[B>>2]|0;if((z|0)==(c[C>>2]|0)){Yb[c[(c[u>>2]|0)+40>>2]&63](u)|0;continue}else{c[B>>2]=z+1;continue}}v=a[m>>0]|0;if((v&1)==0)v=(v&255)>>>1;else v=c[m+4>>2]|0;if((v|0)!=0?(o=c[p>>2]|0,(o-q|0)<160):0){D=c[r>>2]|0;c[p>>2]=o+4;c[o>>2]=D}c[k>>2]=Qw(A,c[t>>2]|0,j,s)|0;tt(m,q,c[p>>2]|0,j);if((u|0)!=0){if((c[u+12>>2]|0)==(c[u+16>>2]|0)?(Yb[c[(c[u>>2]|0)+36>>2]&63](u)|0)==-1:0){c[f>>2]=0;u=0}}else u=0;f=(u|0)==0;do if((z|0)!=0){if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){if(!f)break;c[b>>2]=u;Kn(e);Kn(m);i=n;return}if((Yb[c[(c[z>>2]|0)+36>>2]&63](z)|0)==-1){c[g>>2]=0;l=50;break}if(f^(z|0)==0){c[b>>2]=u;Kn(e);Kn(m);i=n;return}}else l=50;while(0);if((l|0)==50?!f:0){c[b>>2]=u;Kn(e);Kn(m);i=n;return}c[j>>2]=c[j>>2]|2;c[b>>2]=u;Kn(e);Kn(m);i=n;return}function Mp(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];Np(a,0,k,j,f,g,h);i=b;return}function Np(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;n=i;i=i+224|0;v=n+198|0;u=n+196|0;m=n+16|0;e=n+4|0;t=n+192|0;q=n+32|0;p=n;r=n+28|0;s=tw(h)|0;Cq(m,h,v,u);c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;On(e,10,0);if((a[e>>0]&1)==0){A=e+1|0;w=e+8|0;h=A}else{A=e+8|0;w=A;h=e+1|0;A=c[A>>2]|0}c[t>>2]=A;c[p>>2]=q;c[r>>2]=0;x=e+4|0;y=a[u>>0]|0;u=c[f>>2]|0;a:while(1){if((u|0)!=0){if((c[u+12>>2]|0)==(c[u+16>>2]|0)?(Yb[c[(c[u>>2]|0)+36>>2]&63](u)|0)==-1:0){c[f>>2]=0;u=0}}else u=0;B=(u|0)==0;z=c[g>>2]|0;do if((z|0)!=0){if((c[z+12>>2]|0)!=(c[z+16>>2]|0))if(B)break;else break a;if(!((Yb[c[(c[z>>2]|0)+36>>2]&63](z)|0)==-1))if(B)break;else break a;else{c[g>>2]=0;l=14;break}}else l=14;while(0);if((l|0)==14){l=0;if(B){z=0;break}else z=0}B=a[e>>0]|0;C=(B&1)==0;if(C)D=(B&255)>>>1;else D=c[x>>2]|0;if(((c[t>>2]|0)-A|0)==(D|0)){if(C){C=(B&255)>>>1;A=(B&255)>>>1}else{A=c[x>>2]|0;C=A}On(e,A<<1,0);if((a[e>>0]&1)==0)A=10;else A=(c[e>>2]&-2)+ -1|0;On(e,A,0);if((a[e>>0]&1)==0)A=h;else A=c[w>>2]|0;c[t>>2]=A+C}B=u+12|0;D=c[B>>2]|0;C=u+16|0;if((D|0)==(c[C>>2]|0))D=Yb[c[(c[u>>2]|0)+36>>2]&63](u)|0;else D=d[D>>0]|0;if((bq(D&255,s,A,t,r,y,m,q,p,v)|0)!=0)break;z=c[B>>2]|0;if((z|0)==(c[C>>2]|0)){Yb[c[(c[u>>2]|0)+40>>2]&63](u)|0;continue}else{c[B>>2]=z+1;continue}}v=a[m>>0]|0;if((v&1)==0)v=(v&255)>>>1;else v=c[m+4>>2]|0;if((v|0)!=0?(o=c[p>>2]|0,(o-q|0)<160):0){D=c[r>>2]|0;c[p>>2]=o+4;c[o>>2]=D}C=Pw(A,c[t>>2]|0,j,s)|0;D=k;c[D>>2]=C;c[D+4>>2]=H;tt(m,q,c[p>>2]|0,j);if((u|0)!=0){if((c[u+12>>2]|0)==(c[u+16>>2]|0)?(Yb[c[(c[u>>2]|0)+36>>2]&63](u)|0)==-1:0){c[f>>2]=0;u=0}}else u=0;f=(u|0)==0;do if((z|0)!=0){if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){if(!f)break;c[b>>2]=u;Kn(e);Kn(m);i=n;return}if((Yb[c[(c[z>>2]|0)+36>>2]&63](z)|0)==-1){c[g>>2]=0;l=50;break}if(f^(z|0)==0){c[b>>2]=u;Kn(e);Kn(m);i=n;return}}else l=50;while(0);if((l|0)==50?!f:0){c[b>>2]=u;Kn(e);Kn(m);i=n;return}c[j>>2]=c[j>>2]|2;c[b>>2]=u;Kn(e);Kn(m);i=n;return}function Op(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];Pp(a,0,k,j,f,g,h);i=b;return}function Pp(e,f,g,h,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;o=i;i=i+224|0;w=o+198|0;v=o+196|0;n=o+16|0;f=o+4|0;u=o+192|0;r=o+32|0;q=o;s=o+28|0;t=tw(j)|0;Cq(n,j,w,v);c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;On(f,10,0);if((a[f>>0]&1)==0){B=f+1|0;x=f+8|0;j=B}else{B=f+8|0;x=B;j=f+1|0;B=c[B>>2]|0}c[u>>2]=B;c[q>>2]=r;c[s>>2]=0;y=f+4|0;z=a[v>>0]|0;v=c[g>>2]|0;a:while(1){if((v|0)!=0){if((c[v+12>>2]|0)==(c[v+16>>2]|0)?(Yb[c[(c[v>>2]|0)+36>>2]&63](v)|0)==-1:0){c[g>>2]=0;v=0}}else v=0;C=(v|0)==0;A=c[h>>2]|0;do if((A|0)!=0){if((c[A+12>>2]|0)!=(c[A+16>>2]|0))if(C)break;else break a;if(!((Yb[c[(c[A>>2]|0)+36>>2]&63](A)|0)==-1))if(C)break;else break a;else{c[h>>2]=0;m=14;break}}else m=14;while(0);if((m|0)==14){m=0;if(C){A=0;break}else A=0}C=a[f>>0]|0;D=(C&1)==0;if(D)E=(C&255)>>>1;else E=c[y>>2]|0;if(((c[u>>2]|0)-B|0)==(E|0)){if(D){D=(C&255)>>>1;B=(C&255)>>>1}else{B=c[y>>2]|0;D=B}On(f,B<<1,0);if((a[f>>0]&1)==0)B=10;else B=(c[f>>2]&-2)+ -1|0;On(f,B,0);if((a[f>>0]&1)==0)B=j;else B=c[x>>2]|0;c[u>>2]=B+D}C=v+12|0;E=c[C>>2]|0;D=v+16|0;if((E|0)==(c[D>>2]|0))E=Yb[c[(c[v>>2]|0)+36>>2]&63](v)|0;else E=d[E>>0]|0;if((bq(E&255,t,B,u,s,z,n,r,q,w)|0)!=0)break;A=c[C>>2]|0;if((A|0)==(c[D>>2]|0)){Yb[c[(c[v>>2]|0)+40>>2]&63](v)|0;continue}else{c[C>>2]=A+1;continue}}w=a[n>>0]|0;if((w&1)==0)w=(w&255)>>>1;else w=c[n+4>>2]|0;if((w|0)!=0?(p=c[q>>2]|0,(p-r|0)<160):0){E=c[s>>2]|0;c[q>>2]=p+4;c[p>>2]=E}b[l>>1]=Ow(B,c[u>>2]|0,k,t)|0;tt(n,r,c[q>>2]|0,k);if((v|0)!=0){if((c[v+12>>2]|0)==(c[v+16>>2]|0)?(Yb[c[(c[v>>2]|0)+36>>2]&63](v)|0)==-1:0){c[g>>2]=0;v=0}}else v=0;g=(v|0)==0;do if((A|0)!=0){if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){if(!g)break;c[e>>2]=v;Kn(f);Kn(n);i=o;return}if((Yb[c[(c[A>>2]|0)+36>>2]&63](A)|0)==-1){c[h>>2]=0;m=50;break}if(g^(A|0)==0){c[e>>2]=v;Kn(f);Kn(n);i=o;return}}else m=50;while(0);if((m|0)==50?!g:0){c[e>>2]=v;Kn(f);Kn(n);i=o;return}c[k>>2]=c[k>>2]|2;c[e>>2]=v;Kn(f);Kn(n);i=o;return}function Qp(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];Rp(a,0,k,j,f,g,h);i=b;return}function Rp(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;n=i;i=i+224|0;v=n+198|0;u=n+196|0;m=n+16|0;e=n+4|0;t=n+192|0;q=n+32|0;p=n;r=n+28|0;s=tw(h)|0;Cq(m,h,v,u);c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;On(e,10,0);if((a[e>>0]&1)==0){A=e+1|0;w=e+8|0;h=A}else{A=e+8|0;w=A;h=e+1|0;A=c[A>>2]|0}c[t>>2]=A;c[p>>2]=q;c[r>>2]=0;x=e+4|0;y=a[u>>0]|0;u=c[f>>2]|0;a:while(1){if((u|0)!=0){if((c[u+12>>2]|0)==(c[u+16>>2]|0)?(Yb[c[(c[u>>2]|0)+36>>2]&63](u)|0)==-1:0){c[f>>2]=0;u=0}}else u=0;B=(u|0)==0;z=c[g>>2]|0;do if((z|0)!=0){if((c[z+12>>2]|0)!=(c[z+16>>2]|0))if(B)break;else break a;if(!((Yb[c[(c[z>>2]|0)+36>>2]&63](z)|0)==-1))if(B)break;else break a;else{c[g>>2]=0;l=14;break}}else l=14;while(0);if((l|0)==14){l=0;if(B){z=0;break}else z=0}B=a[e>>0]|0;C=(B&1)==0;if(C)D=(B&255)>>>1;else D=c[x>>2]|0;if(((c[t>>2]|0)-A|0)==(D|0)){if(C){C=(B&255)>>>1;A=(B&255)>>>1}else{A=c[x>>2]|0;C=A}On(e,A<<1,0);if((a[e>>0]&1)==0)A=10;else A=(c[e>>2]&-2)+ -1|0;On(e,A,0);if((a[e>>0]&1)==0)A=h;else A=c[w>>2]|0;c[t>>2]=A+C}B=u+12|0;D=c[B>>2]|0;C=u+16|0;if((D|0)==(c[C>>2]|0))D=Yb[c[(c[u>>2]|0)+36>>2]&63](u)|0;else D=d[D>>0]|0;if((bq(D&255,s,A,t,r,y,m,q,p,v)|0)!=0)break;z=c[B>>2]|0;if((z|0)==(c[C>>2]|0)){Yb[c[(c[u>>2]|0)+40>>2]&63](u)|0;continue}else{c[B>>2]=z+1;continue}}v=a[m>>0]|0;if((v&1)==0)v=(v&255)>>>1;else v=c[m+4>>2]|0;if((v|0)!=0?(o=c[p>>2]|0,(o-q|0)<160):0){D=c[r>>2]|0;c[p>>2]=o+4;c[o>>2]=D}c[k>>2]=Nw(A,c[t>>2]|0,j,s)|0;tt(m,q,c[p>>2]|0,j);if((u|0)!=0){if((c[u+12>>2]|0)==(c[u+16>>2]|0)?(Yb[c[(c[u>>2]|0)+36>>2]&63](u)|0)==-1:0){c[f>>2]=0;u=0}}else u=0;f=(u|0)==0;do if((z|0)!=0){if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){if(!f)break;c[b>>2]=u;Kn(e);Kn(m);i=n;return}if((Yb[c[(c[z>>2]|0)+36>>2]&63](z)|0)==-1){c[g>>2]=0;l=50;break}if(f^(z|0)==0){c[b>>2]=u;Kn(e);Kn(m);i=n;return}}else l=50;while(0);if((l|0)==50?!f:0){c[b>>2]=u;Kn(e);Kn(m);i=n;return}c[j>>2]=c[j>>2]|2;c[b>>2]=u;Kn(e);Kn(m);i=n;return}function Sp(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];Tp(a,0,k,j,f,g,h);i=b;return}function Tp(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;n=i;i=i+224|0;v=n+198|0;u=n+196|0;m=n+16|0;e=n+4|0;t=n+192|0;q=n+32|0;p=n;r=n+28|0;s=tw(h)|0;Cq(m,h,v,u);c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;On(e,10,0);if((a[e>>0]&1)==0){A=e+1|0;w=e+8|0;h=A}else{A=e+8|0;w=A;h=e+1|0;A=c[A>>2]|0}c[t>>2]=A;c[p>>2]=q;c[r>>2]=0;x=e+4|0;y=a[u>>0]|0;u=c[f>>2]|0;a:while(1){if((u|0)!=0){if((c[u+12>>2]|0)==(c[u+16>>2]|0)?(Yb[c[(c[u>>2]|0)+36>>2]&63](u)|0)==-1:0){c[f>>2]=0;u=0}}else u=0;B=(u|0)==0;z=c[g>>2]|0;do if((z|0)!=0){if((c[z+12>>2]|0)!=(c[z+16>>2]|0))if(B)break;else break a;if(!((Yb[c[(c[z>>2]|0)+36>>2]&63](z)|0)==-1))if(B)break;else break a;else{c[g>>2]=0;l=14;break}}else l=14;while(0);if((l|0)==14){l=0;if(B){z=0;break}else z=0}B=a[e>>0]|0;C=(B&1)==0;if(C)D=(B&255)>>>1;else D=c[x>>2]|0;if(((c[t>>2]|0)-A|0)==(D|0)){if(C){C=(B&255)>>>1;A=(B&255)>>>1}else{A=c[x>>2]|0;C=A}On(e,A<<1,0);if((a[e>>0]&1)==0)A=10;else A=(c[e>>2]&-2)+ -1|0;On(e,A,0);if((a[e>>0]&1)==0)A=h;else A=c[w>>2]|0;c[t>>2]=A+C}B=u+12|0;D=c[B>>2]|0;C=u+16|0;if((D|0)==(c[C>>2]|0))D=Yb[c[(c[u>>2]|0)+36>>2]&63](u)|0;else D=d[D>>0]|0;if((bq(D&255,s,A,t,r,y,m,q,p,v)|0)!=0)break;z=c[B>>2]|0;if((z|0)==(c[C>>2]|0)){Yb[c[(c[u>>2]|0)+40>>2]&63](u)|0;continue}else{c[B>>2]=z+1;continue}}v=a[m>>0]|0;if((v&1)==0)v=(v&255)>>>1;else v=c[m+4>>2]|0;if((v|0)!=0?(o=c[p>>2]|0,(o-q|0)<160):0){D=c[r>>2]|0;c[p>>2]=o+4;c[o>>2]=D}c[k>>2]=Mw(A,c[t>>2]|0,j,s)|0;tt(m,q,c[p>>2]|0,j);if((u|0)!=0){if((c[u+12>>2]|0)==(c[u+16>>2]|0)?(Yb[c[(c[u>>2]|0)+36>>2]&63](u)|0)==-1:0){c[f>>2]=0;u=0}}else u=0;f=(u|0)==0;do if((z|0)!=0){if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){if(!f)break;c[b>>2]=u;Kn(e);Kn(m);i=n;return}if((Yb[c[(c[z>>2]|0)+36>>2]&63](z)|0)==-1){c[g>>2]=0;l=50;break}if(f^(z|0)==0){c[b>>2]=u;Kn(e);Kn(m);i=n;return}}else l=50;while(0);if((l|0)==50?!f:0){c[b>>2]=u;Kn(e);Kn(m);i=n;return}c[j>>2]=c[j>>2]|2;c[b>>2]=u;Kn(e);Kn(m);i=n;return}function Up(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];Vp(a,0,k,j,f,g,h);i=b;return}function Vp(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;n=i;i=i+224|0;v=n+198|0;u=n+196|0;m=n+16|0;e=n+4|0;t=n+192|0;q=n+32|0;p=n;r=n+28|0;s=tw(h)|0;Cq(m,h,v,u);c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;On(e,10,0);if((a[e>>0]&1)==0){A=e+1|0;w=e+8|0;h=A}else{A=e+8|0;w=A;h=e+1|0;A=c[A>>2]|0}c[t>>2]=A;c[p>>2]=q;c[r>>2]=0;x=e+4|0;y=a[u>>0]|0;u=c[f>>2]|0;a:while(1){if((u|0)!=0){if((c[u+12>>2]|0)==(c[u+16>>2]|0)?(Yb[c[(c[u>>2]|0)+36>>2]&63](u)|0)==-1:0){c[f>>2]=0;u=0}}else u=0;B=(u|0)==0;z=c[g>>2]|0;do if((z|0)!=0){if((c[z+12>>2]|0)!=(c[z+16>>2]|0))if(B)break;else break a;if(!((Yb[c[(c[z>>2]|0)+36>>2]&63](z)|0)==-1))if(B)break;else break a;else{c[g>>2]=0;l=14;break}}else l=14;while(0);if((l|0)==14){l=0;if(B){z=0;break}else z=0}B=a[e>>0]|0;C=(B&1)==0;if(C)D=(B&255)>>>1;else D=c[x>>2]|0;if(((c[t>>2]|0)-A|0)==(D|0)){if(C){C=(B&255)>>>1;A=(B&255)>>>1}else{A=c[x>>2]|0;C=A}On(e,A<<1,0);if((a[e>>0]&1)==0)A=10;else A=(c[e>>2]&-2)+ -1|0;On(e,A,0);if((a[e>>0]&1)==0)A=h;else A=c[w>>2]|0;c[t>>2]=A+C}B=u+12|0;D=c[B>>2]|0;C=u+16|0;if((D|0)==(c[C>>2]|0))D=Yb[c[(c[u>>2]|0)+36>>2]&63](u)|0;else D=d[D>>0]|0;if((bq(D&255,s,A,t,r,y,m,q,p,v)|0)!=0)break;z=c[B>>2]|0;if((z|0)==(c[C>>2]|0)){Yb[c[(c[u>>2]|0)+40>>2]&63](u)|0;continue}else{c[B>>2]=z+1;continue}}v=a[m>>0]|0;if((v&1)==0)v=(v&255)>>>1;else v=c[m+4>>2]|0;if((v|0)!=0?(o=c[p>>2]|0,(o-q|0)<160):0){D=c[r>>2]|0;c[p>>2]=o+4;c[o>>2]=D}C=Lw(A,c[t>>2]|0,j,s)|0;D=k;c[D>>2]=C;c[D+4>>2]=H;tt(m,q,c[p>>2]|0,j);if((u|0)!=0){if((c[u+12>>2]|0)==(c[u+16>>2]|0)?(Yb[c[(c[u>>2]|0)+36>>2]&63](u)|0)==-1:0){c[f>>2]=0;u=0}}else u=0;f=(u|0)==0;do if((z|0)!=0){if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){if(!f)break;c[b>>2]=u;Kn(e);Kn(m);i=n;return}if((Yb[c[(c[z>>2]|0)+36>>2]&63](z)|0)==-1){c[g>>2]=0;l=50;break}if(f^(z|0)==0){c[b>>2]=u;Kn(e);Kn(m);i=n;return}}else l=50;while(0);if((l|0)==50?!f:0){c[b>>2]=u;Kn(e);Kn(m);i=n;return}c[j>>2]=c[j>>2]|2;c[b>>2]=u;Kn(e);Kn(m);i=n;return}function Wp(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];Xp(a,0,k,j,f,g,h);i=b;return}function Xp(b,e,f,h,j,k,l){b=b|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;o=i;i=i+256|0;w=o+208|0;A=o+200|0;x=o+240|0;n=o;e=o+188|0;r=o+184|0;s=o+16|0;u=o+176|0;t=o+180|0;q=o+241|0;v=o+242|0;Dq(n,j,w,A,x);c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;On(e,10,0);if((a[e>>0]&1)==0){D=e+1|0;z=e+8|0;y=D}else{D=e+8|0;z=D;y=e+1|0;D=c[D>>2]|0}c[r>>2]=D;c[u>>2]=s;c[t>>2]=0;a[q>>0]=1;a[v>>0]=69;j=e+4|0;A=a[A>>0]|0;B=a[x>>0]|0;x=c[f>>2]|0;a:while(1){if((x|0)!=0){if((c[x+12>>2]|0)==(c[x+16>>2]|0)?(Yb[c[(c[x>>2]|0)+36>>2]&63](x)|0)==-1:0){c[f>>2]=0;x=0}}else x=0;E=(x|0)==0;C=c[h>>2]|0;do if((C|0)!=0){if((c[C+12>>2]|0)!=(c[C+16>>2]|0))if(E)break;else break a;if(!((Yb[c[(c[C>>2]|0)+36>>2]&63](C)|0)==-1))if(E)break;else break a;else{c[h>>2]=0;m=14;break}}else m=14;while(0);if((m|0)==14){m=0;if(E){C=0;break}else C=0}E=a[e>>0]|0;G=(E&1)==0;if(G)F=(E&255)>>>1;else F=c[j>>2]|0;if(((c[r>>2]|0)-D|0)==(F|0)){if(G){F=(E&255)>>>1;D=(E&255)>>>1}else{D=c[j>>2]|0;F=D}On(e,D<<1,0);if((a[e>>0]&1)==0)D=10;else D=(c[e>>2]&-2)+ -1|0;On(e,D,0);if((a[e>>0]&1)==0)D=y;else D=c[z>>2]|0;c[r>>2]=D+F}F=x+12|0;G=c[F>>2]|0;E=x+16|0;if((G|0)==(c[E>>2]|0))G=Yb[c[(c[x>>2]|0)+36>>2]&63](x)|0;else G=d[G>>0]|0;if((Eq(G&255,q,v,D,r,A,B,n,s,u,t,w)|0)!=0)break;C=c[F>>2]|0;if((C|0)==(c[E>>2]|0)){Yb[c[(c[x>>2]|0)+40>>2]&63](x)|0;continue}else{c[F>>2]=C+1;continue}}v=a[n>>0]|0;if((v&1)==0)v=(v&255)>>>1;else v=c[n+4>>2]|0;if(((v|0)!=0?(a[q>>0]|0)!=0:0)?(p=c[u>>2]|0,(p-s|0)<160):0){G=c[t>>2]|0;c[u>>2]=p+4;c[p>>2]=G}g[l>>2]=+Kw(D,c[r>>2]|0,k);tt(n,s,c[u>>2]|0,k);if((x|0)!=0){if((c[x+12>>2]|0)==(c[x+16>>2]|0)?(Yb[c[(c[x>>2]|0)+36>>2]&63](x)|0)==-1:0){c[f>>2]=0;x=0}}else x=0;p=(x|0)==0;do if((C|0)!=0){if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(!p)break;c[b>>2]=x;Kn(e);Kn(n);i=o;return}if((Yb[c[(c[C>>2]|0)+36>>2]&63](C)|0)==-1){c[h>>2]=0;m=51;break}if(p^(C|0)==0){c[b>>2]=x;Kn(e);Kn(n);i=o;return}}else m=51;while(0);if((m|0)==51?!p:0){c[b>>2]=x;Kn(e);Kn(n);i=o;return}c[k>>2]=c[k>>2]|2;c[b>>2]=x;Kn(e);Kn(n);i=o;return}function Yp(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];Zp(a,0,k,j,f,g,h);i=b;return}function Zp(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;o=i;i=i+256|0;w=o+208|0;A=o+200|0;x=o+240|0;n=o;e=o+188|0;r=o+184|0;s=o+16|0;u=o+176|0;t=o+180|0;q=o+241|0;v=o+242|0;Dq(n,j,w,A,x);c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;On(e,10,0);if((a[e>>0]&1)==0){D=e+1|0;z=e+8|0;y=D}else{D=e+8|0;z=D;y=e+1|0;D=c[D>>2]|0}c[r>>2]=D;c[u>>2]=s;c[t>>2]=0;a[q>>0]=1;a[v>>0]=69;j=e+4|0;A=a[A>>0]|0;B=a[x>>0]|0;x=c[f>>2]|0;a:while(1){if((x|0)!=0){if((c[x+12>>2]|0)==(c[x+16>>2]|0)?(Yb[c[(c[x>>2]|0)+36>>2]&63](x)|0)==-1:0){c[f>>2]=0;x=0}}else x=0;E=(x|0)==0;C=c[g>>2]|0;do if((C|0)!=0){if((c[C+12>>2]|0)!=(c[C+16>>2]|0))if(E)break;else break a;if(!((Yb[c[(c[C>>2]|0)+36>>2]&63](C)|0)==-1))if(E)break;else break a;else{c[g>>2]=0;m=14;break}}else m=14;while(0);if((m|0)==14){m=0;if(E){C=0;break}else C=0}E=a[e>>0]|0;G=(E&1)==0;if(G)F=(E&255)>>>1;else F=c[j>>2]|0;if(((c[r>>2]|0)-D|0)==(F|0)){if(G){F=(E&255)>>>1;D=(E&255)>>>1}else{D=c[j>>2]|0;F=D}On(e,D<<1,0);if((a[e>>0]&1)==0)D=10;else D=(c[e>>2]&-2)+ -1|0;On(e,D,0);if((a[e>>0]&1)==0)D=y;else D=c[z>>2]|0;c[r>>2]=D+F}F=x+12|0;G=c[F>>2]|0;E=x+16|0;if((G|0)==(c[E>>2]|0))G=Yb[c[(c[x>>2]|0)+36>>2]&63](x)|0;else G=d[G>>0]|0;if((Eq(G&255,q,v,D,r,A,B,n,s,u,t,w)|0)!=0)break;C=c[F>>2]|0;if((C|0)==(c[E>>2]|0)){Yb[c[(c[x>>2]|0)+40>>2]&63](x)|0;continue}else{c[F>>2]=C+1;continue}}v=a[n>>0]|0;if((v&1)==0)v=(v&255)>>>1;else v=c[n+4>>2]|0;if(((v|0)!=0?(a[q>>0]|0)!=0:0)?(p=c[u>>2]|0,(p-s|0)<160):0){G=c[t>>2]|0;c[u>>2]=p+4;c[p>>2]=G}h[l>>3]=+Jw(D,c[r>>2]|0,k);tt(n,s,c[u>>2]|0,k);if((x|0)!=0){if((c[x+12>>2]|0)==(c[x+16>>2]|0)?(Yb[c[(c[x>>2]|0)+36>>2]&63](x)|0)==-1:0){c[f>>2]=0;x=0}}else x=0;p=(x|0)==0;do if((C|0)!=0){if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(!p)break;c[b>>2]=x;Kn(e);Kn(n);i=o;return}if((Yb[c[(c[C>>2]|0)+36>>2]&63](C)|0)==-1){c[g>>2]=0;m=51;break}if(p^(C|0)==0){c[b>>2]=x;Kn(e);Kn(n);i=o;return}}else m=51;while(0);if((m|0)==51?!p:0){c[b>>2]=x;Kn(e);Kn(n);i=o;return}c[k>>2]=c[k>>2]|2;c[b>>2]=x;Kn(e);Kn(n);i=o;return}function _p(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];$p(a,0,k,j,f,g,h);i=b;return}function $p(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;o=i;i=i+256|0;w=o+208|0;A=o+200|0;x=o+240|0;n=o;e=o+188|0;r=o+184|0;s=o+16|0;u=o+176|0;t=o+180|0;q=o+241|0;v=o+242|0;Dq(n,j,w,A,x);c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;On(e,10,0);if((a[e>>0]&1)==0){D=e+1|0;z=e+8|0;y=D}else{D=e+8|0;z=D;y=e+1|0;D=c[D>>2]|0}c[r>>2]=D;c[u>>2]=s;c[t>>2]=0;a[q>>0]=1;a[v>>0]=69;j=e+4|0;A=a[A>>0]|0;B=a[x>>0]|0;x=c[f>>2]|0;a:while(1){if((x|0)!=0){if((c[x+12>>2]|0)==(c[x+16>>2]|0)?(Yb[c[(c[x>>2]|0)+36>>2]&63](x)|0)==-1:0){c[f>>2]=0;x=0}}else x=0;E=(x|0)==0;C=c[g>>2]|0;do if((C|0)!=0){if((c[C+12>>2]|0)!=(c[C+16>>2]|0))if(E)break;else break a;if(!((Yb[c[(c[C>>2]|0)+36>>2]&63](C)|0)==-1))if(E)break;else break a;else{c[g>>2]=0;m=14;break}}else m=14;while(0);if((m|0)==14){m=0;if(E){C=0;break}else C=0}E=a[e>>0]|0;G=(E&1)==0;if(G)F=(E&255)>>>1;else F=c[j>>2]|0;if(((c[r>>2]|0)-D|0)==(F|0)){if(G){F=(E&255)>>>1;D=(E&255)>>>1}else{D=c[j>>2]|0;F=D}On(e,D<<1,0);if((a[e>>0]&1)==0)D=10;else D=(c[e>>2]&-2)+ -1|0;On(e,D,0);if((a[e>>0]&1)==0)D=y;else D=c[z>>2]|0;c[r>>2]=D+F}F=x+12|0;G=c[F>>2]|0;E=x+16|0;if((G|0)==(c[E>>2]|0))G=Yb[c[(c[x>>2]|0)+36>>2]&63](x)|0;else G=d[G>>0]|0;if((Eq(G&255,q,v,D,r,A,B,n,s,u,t,w)|0)!=0)break;C=c[F>>2]|0;if((C|0)==(c[E>>2]|0)){Yb[c[(c[x>>2]|0)+40>>2]&63](x)|0;continue}else{c[F>>2]=C+1;continue}}v=a[n>>0]|0;if((v&1)==0)v=(v&255)>>>1;else v=c[n+4>>2]|0;if(((v|0)!=0?(a[q>>0]|0)!=0:0)?(p=c[u>>2]|0,(p-s|0)<160):0){G=c[t>>2]|0;c[u>>2]=p+4;c[p>>2]=G}h[l>>3]=+Iw(D,c[r>>2]|0,k);tt(n,s,c[u>>2]|0,k);if((x|0)!=0){if((c[x+12>>2]|0)==(c[x+16>>2]|0)?(Yb[c[(c[x>>2]|0)+36>>2]&63](x)|0)==-1:0){c[f>>2]=0;x=0}}else x=0;p=(x|0)==0;do if((C|0)!=0){if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(!p)break;c[b>>2]=x;Kn(e);Kn(n);i=o;return}if((Yb[c[(c[C>>2]|0)+36>>2]&63](C)|0)==-1){c[g>>2]=0;m=51;break}if(p^(C|0)==0){c[b>>2]=x;Kn(e);Kn(n);i=o;return}}else m=51;while(0);if((m|0)==51?!p:0){c[b>>2]=x;Kn(e);Kn(n);i=o;return}c[k>>2]=c[k>>2]|2;c[b>>2]=x;Kn(e);Kn(n);i=o;return}function aq(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;n=i;i=i+240|0;o=n;p=n+208|0;e=n+188|0;A=n+200|0;m=n+8|0;s=n+4|0;r=n+24|0;q=n+184|0;t=n+204|0;c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;jo(A,h);z=Pu(A,263504)|0;cc[c[(c[z>>2]|0)+32>>2]&7](z,262016,262042|0,p)|0;nn(c[A>>2]|0)|0;c[m+0>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;On(m,10,0);if((a[m>>0]&1)==0){x=m+1|0;h=m+8|0;u=x}else{x=m+8|0;h=x;u=m+1|0;x=c[x>>2]|0}c[s>>2]=x;c[q>>2]=r;c[t>>2]=0;v=m+4|0;w=c[f>>2]|0;a:while(1){if((w|0)!=0){if((c[w+12>>2]|0)==(c[w+16>>2]|0)?(Yb[c[(c[w>>2]|0)+36>>2]&63](w)|0)==-1:0){c[f>>2]=0;w=0}}else w=0;y=(w|0)==0;z=c[g>>2]|0;do if((z|0)!=0){if((c[z+12>>2]|0)!=(c[z+16>>2]|0))if(y)break;else break a;if(!((Yb[c[(c[z>>2]|0)+36>>2]&63](z)|0)==-1))if(y)break;else break a;else{c[g>>2]=0;l=14;break}}else l=14;while(0);if((l|0)==14?(l=0,y):0)break;y=a[m>>0]|0;z=(y&1)==0;if(z)A=(y&255)>>>1;else A=c[v>>2]|0;if(((c[s>>2]|0)-x|0)==(A|0)){if(z){z=(y&255)>>>1;x=(y&255)>>>1}else{x=c[v>>2]|0;z=x}On(m,x<<1,0);if((a[m>>0]&1)==0)x=10;else x=(c[m>>2]&-2)+ -1|0;On(m,x,0);if((a[m>>0]&1)==0)x=u;else x=c[h>>2]|0;c[s>>2]=x+z}z=w+12|0;A=c[z>>2]|0;y=w+16|0;if((A|0)==(c[y>>2]|0))A=Yb[c[(c[w>>2]|0)+36>>2]&63](w)|0;else A=d[A>>0]|0;if((bq(A&255,16,x,s,t,0,e,r,q,p)|0)!=0)break;A=c[z>>2]|0;if((A|0)==(c[y>>2]|0)){Yb[c[(c[w>>2]|0)+40>>2]&63](w)|0;continue}else{c[z>>2]=A+1;continue}}a[x+3>>0]=0;A=dq()|0;c[o>>2]=k;if((cq(x,A,262056,o)|0)!=1)c[j>>2]=4;o=c[f>>2]|0;if((o|0)!=0){if((c[o+12>>2]|0)==(c[o+16>>2]|0)?(Yb[c[(c[o>>2]|0)+36>>2]&63](o)|0)==-1:0){c[f>>2]=0;o=0}}else o=0;k=(o|0)==0;f=c[g>>2]|0;do if((f|0)!=0){if((c[f+12>>2]|0)!=(c[f+16>>2]|0)){if(!k)break;c[b>>2]=o;Kn(m);Kn(e);i=n;return}if((Yb[c[(c[f>>2]|0)+36>>2]&63](f)|0)==-1){c[g>>2]=0;l=46;break}if(k^(f|0)==0){c[b>>2]=o;Kn(m);Kn(e);i=n;return}}else l=46;while(0);if((l|0)==46?!k:0){c[b>>2]=o;Kn(m);Kn(e);i=n;return}c[j>>2]=c[j>>2]|2;c[b>>2]=o;Kn(m);Kn(e);i=n;return}function bq(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0;n=i;p=c[f>>2]|0;o=(p|0)==(e|0);do if(o){q=(a[m+24>>0]|0)==b<<24>>24;if(!q?!((a[m+25>>0]|0)==b<<24>>24):0)break;c[f>>2]=e+1;a[e>>0]=q?43:45;c[g>>2]=0;q=0;i=n;return q|0}while(0);q=a[j>>0]|0;if((q&1)==0)j=(q&255)>>>1;else j=c[j+4>>2]|0;if((j|0)!=0?b<<24>>24==h<<24>>24:0){o=c[l>>2]|0;if((o-k|0)>=160){q=0;i=n;return q|0}q=c[g>>2]|0;c[l>>2]=o+4;c[o>>2]=q;c[g>>2]=0;q=0;i=n;return q|0}l=m+26|0;k=m;while(1){if((a[k>>0]|0)==b<<24>>24)break;k=k+1|0;if((k|0)==(l|0)){k=l;break}}m=k-m|0;if((m|0)>23){q=-1;i=n;return q|0}if((d|0)==10|(d|0)==8){if((m|0)>=(d|0)){q=-1;i=n;return q|0}}else if((d|0)==16?(m|0)>=22:0){if(o){q=-1;i=n;return q|0}if((p-e|0)>=3){q=-1;i=n;return q|0}if((a[p+ -1>>0]|0)!=48){q=-1;i=n;return q|0}c[g>>2]=0;q=a[262016+m>>0]|0;c[f>>2]=p+1;a[p>>0]=q;q=0;i=n;return q|0}q=a[262016+m>>0]|0;c[f>>2]=p+1;a[p>>0]=q;c[g>>2]=(c[g>>2]|0)+1;q=0;i=n;return q|0}function cq(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;c[g>>2]=e;b=_a(b|0)|0;d=vx(a,d,g)|0;if((b|0)==0){i=f;return d|0}_a(b|0)|0;i=f;return d|0}function dq(){var b=0;b=i;if((a[263400]|0)==0?(Ha(263400)|0)!=0:0){c[65848]=ab(2147483647,263408,0)|0;Sa(263400)}i=b;return c[65848]|0}function eq(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function fq(a){a=a|0;return}function gq(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;k=i;i=i+64|0;s=k;n=k+16|0;l=k+52|0;r=k+4|0;o=k+56|0;p=k+60|0;m=k+12|0;u=k+48|0;q=k+24|0;t=k+8|0;if((c[g+4>>2]&1|0)!=0){jo(m,g);d=Pu(m,263496)|0;nn(c[m>>2]|0)|0;jo(u,g);g=Pu(u,263656)|0;nn(c[u>>2]|0)|0;Wb[c[(c[g>>2]|0)+24>>2]&63](q,g);Wb[c[(c[g>>2]|0)+28>>2]&63](q+12|0,g);c[t>>2]=c[f>>2];g=q+24|0;c[s+0>>2]=c[t+0>>2];a[j>>0]=(hq(e,s,q,g,d,h,1)|0)==(q|0)&1;c[b>>2]=c[e>>2];Zn(q+12|0);Zn(q);i=k;return}c[l>>2]=-1;m=c[(c[d>>2]|0)+16>>2]|0;c[o>>2]=c[e>>2];c[p>>2]=c[f>>2];c[n+0>>2]=c[o+0>>2];c[s+0>>2]=c[p+0>>2];Tb[m&63](r,d,n,s,g,h,l);m=c[r>>2]|0;c[e>>2]=m;l=c[l>>2]|0;if((l|0)==0)a[j>>0]=0;else if((l|0)==1)a[j>>0]=1;else{a[j>>0]=1;c[h>>2]=4}c[b>>2]=m;i=k;return}function hq(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;k=i;i=i+112|0;o=k;r=(f-e|0)/12|0;if(r>>>0>100){o=Dy(r)|0;if((o|0)==0)Cy();else{n=o;m=o}}else{n=o;m=0}o=(e|0)==(f|0);if(o)s=0;else{p=e;s=0;q=n;while(1){t=a[p>>0]|0;if((t&1)==0)t=(t&255)>>>1;else t=c[p+4>>2]|0;if((t|0)==0){a[q>>0]=2;s=s+1|0;r=r+ -1|0}else a[q>>0]=1;p=p+12|0;if((p|0)==(f|0))break;else q=q+1|0}}p=0;a:while(1){t=c[b>>2]|0;do if((t|0)!=0){q=c[t+12>>2]|0;if((q|0)==(c[t+16>>2]|0))q=Yb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else q=c[q>>2]|0;if((q|0)==-1){c[b>>2]=0;t=1;break}else{t=(c[b>>2]|0)==0;break}}else t=1;while(0);q=c[d>>2]|0;if((q|0)!=0){u=c[q+12>>2]|0;if((u|0)==(c[q+16>>2]|0))u=Yb[c[(c[q>>2]|0)+36>>2]&63](q)|0;else u=c[u>>2]|0;if((u|0)==-1){c[d>>2]=0;q=0;v=1}else v=0}else{q=0;v=1}u=c[b>>2]|0;if(!((t^v)&(r|0)!=0))break;q=c[u+12>>2]|0;if((q|0)==(c[u+16>>2]|0))t=Yb[c[(c[u>>2]|0)+36>>2]&63](u)|0;else t=c[q>>2]|0;if(!j)t=fc[c[(c[g>>2]|0)+28>>2]&15](g,t)|0;q=p+1|0;if(o){p=q;continue}else{w=0;u=e;v=n}while(1){do if((a[v>>0]|0)==1){if((a[u>>0]&1)==0)x=u+4|0;else x=c[u+8>>2]|0;x=c[x+(p<<2)>>2]|0;if(!j)x=fc[c[(c[g>>2]|0)+28>>2]&15](g,x)|0;if((t|0)!=(x|0)){a[v>>0]=0;r=r+ -1|0;break}w=a[u>>0]|0;if((w&1)==0)w=(w&255)>>>1;else w=c[u+4>>2]|0;if((w|0)==(q|0)){a[v>>0]=2;w=1;s=s+1|0;r=r+ -1|0}else w=1}while(0);u=u+12|0;if((u|0)==(f|0))break;v=v+1|0}if(!w){p=q;continue}t=c[b>>2]|0;p=t+12|0;u=c[p>>2]|0;if((u|0)==(c[t+16>>2]|0))Yb[c[(c[t>>2]|0)+40>>2]&63](t)|0;else c[p>>2]=u+4;if((s+r|0)>>>0<2){p=q;continue}else{t=e;p=n}while(1){if((a[p>>0]|0)==2){u=a[t>>0]|0;if((u&1)==0)u=(u&255)>>>1;else u=c[t+4>>2]|0;if((u|0)!=(q|0)){a[p>>0]=0;s=s+ -1|0}}t=t+12|0;if((t|0)==(f|0)){p=q;continue a}else p=p+1|0}}do if((u|0)!=0){j=c[u+12>>2]|0;if((j|0)==(c[u+16>>2]|0))j=Yb[c[(c[u>>2]|0)+36>>2]&63](u)|0;else j=c[j>>2]|0;if((j|0)==-1){c[b>>2]=0;b=1;break}else{b=(c[b>>2]|0)==0;break}}else b=1;while(0);do if((q|0)!=0){j=c[q+12>>2]|0;if((j|0)==(c[q+16>>2]|0))j=Yb[c[(c[q>>2]|0)+36>>2]&63](q)|0;else j=c[j>>2]|0;if(!((j|0)==-1))if(b)break;else{l=75;break}else{c[d>>2]=0;l=73;break}}else l=73;while(0);if((l|0)==73?b:0)l=75;if((l|0)==75)c[h>>2]=c[h>>2]|2;b:do if(!o)if((a[n>>0]|0)==2)f=e;else while(1){e=e+12|0;n=n+1|0;if((e|0)==(f|0)){l=80;break b}if((a[n>>0]|0)==2){f=e;break}}else l=80;while(0);if((l|0)==80)c[h>>2]=c[h>>2]|4;if((m|0)==0){i=k;return f|0}Ey(m);i=k;return f|0}function iq(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];jq(a,0,k,j,f,g,h);i=b;return}function jq(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;l=i;i=i+304|0;u=l+160|0;t=l+280|0;m=l+264|0;d=l+284|0;r=l+300|0;s=l;o=l+276|0;p=l+296|0;q=tw(g)|0;Fq(m,g,u,t);c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;On(d,10,0);if((a[d>>0]&1)==0){z=d+1|0;g=d+8|0;w=z}else{z=d+8|0;g=z;w=d+1|0;z=c[z>>2]|0}c[r>>2]=z;c[o>>2]=s;c[p>>2]=0;v=d+4|0;x=c[t>>2]|0;t=c[e>>2]|0;a:while(1){if((t|0)!=0){y=c[t+12>>2]|0;if((y|0)==(c[t+16>>2]|0))y=Yb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else y=c[y>>2]|0;if((y|0)==-1){c[e>>2]=0;t=0;A=1}else A=0}else{t=0;A=1}y=c[f>>2]|0;do if((y|0)!=0){B=c[y+12>>2]|0;if((B|0)==(c[y+16>>2]|0))B=Yb[c[(c[y>>2]|0)+36>>2]&63](y)|0;else B=c[B>>2]|0;if(!((B|0)==-1))if(A)break;else break a;else{c[f>>2]=0;k=17;break}}else k=17;while(0);if((k|0)==17){k=0;if(A){y=0;break}else y=0}A=a[d>>0]|0;B=(A&1)==0;if(B)C=(A&255)>>>1;else C=c[v>>2]|0;if(((c[r>>2]|0)-z|0)==(C|0)){if(B){B=(A&255)>>>1;z=(A&255)>>>1}else{z=c[v>>2]|0;B=z}On(d,z<<1,0);if((a[d>>0]&1)==0)z=10;else z=(c[d>>2]&-2)+ -1|0;On(d,z,0);if((a[d>>0]&1)==0)z=w;else z=c[g>>2]|0;c[r>>2]=z+B}B=t+12|0;C=c[B>>2]|0;A=t+16|0;if((C|0)==(c[A>>2]|0))C=Yb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else C=c[C>>2]|0;if((Bq(C,q,z,r,p,x,m,s,o,u)|0)!=0)break;y=c[B>>2]|0;if((y|0)==(c[A>>2]|0)){Yb[c[(c[t>>2]|0)+40>>2]&63](t)|0;continue}else{c[B>>2]=y+4;continue}}u=a[m>>0]|0;if((u&1)==0)u=(u&255)>>>1;else u=c[m+4>>2]|0;if((u|0)!=0?(n=c[o>>2]|0,(n-s|0)<160):0){C=c[p>>2]|0;c[o>>2]=n+4;c[n>>2]=C}c[j>>2]=Qw(z,c[r>>2]|0,h,q)|0;tt(m,s,c[o>>2]|0,h);if((t|0)!=0){j=c[t+12>>2]|0;if((j|0)==(c[t+16>>2]|0))j=Yb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else j=c[j>>2]|0;if((j|0)==-1){c[e>>2]=0;t=0;e=1}else e=0}else{t=0;e=1}do if((y|0)!=0){j=c[y+12>>2]|0;if((j|0)==(c[y+16>>2]|0))j=Yb[c[(c[y>>2]|0)+36>>2]&63](y)|0;else j=c[j>>2]|0;if((j|0)==-1){c[f>>2]=0;k=56;break}if(e){c[b>>2]=t;Kn(d);Kn(m);i=l;return}}else k=56;while(0);if((k|0)==56?!e:0){c[b>>2]=t;Kn(d);Kn(m);i=l;return}c[h>>2]=c[h>>2]|2;c[b>>2]=t;Kn(d);Kn(m);i=l;return}function kq(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];lq(a,0,k,j,f,g,h);i=b;return}function lq(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;l=i;i=i+304|0;u=l+160|0;t=l+280|0;m=l+264|0;d=l+284|0;r=l+300|0;s=l;o=l+276|0;p=l+296|0;q=tw(g)|0;Fq(m,g,u,t);c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;On(d,10,0);if((a[d>>0]&1)==0){z=d+1|0;g=d+8|0;w=z}else{z=d+8|0;g=z;w=d+1|0;z=c[z>>2]|0}c[r>>2]=z;c[o>>2]=s;c[p>>2]=0;v=d+4|0;x=c[t>>2]|0;t=c[e>>2]|0;a:while(1){if((t|0)!=0){y=c[t+12>>2]|0;if((y|0)==(c[t+16>>2]|0))y=Yb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else y=c[y>>2]|0;if((y|0)==-1){c[e>>2]=0;t=0;A=1}else A=0}else{t=0;A=1}y=c[f>>2]|0;do if((y|0)!=0){B=c[y+12>>2]|0;if((B|0)==(c[y+16>>2]|0))B=Yb[c[(c[y>>2]|0)+36>>2]&63](y)|0;else B=c[B>>2]|0;if(!((B|0)==-1))if(A)break;else break a;else{c[f>>2]=0;k=17;break}}else k=17;while(0);if((k|0)==17){k=0;if(A){y=0;break}else y=0}A=a[d>>0]|0;B=(A&1)==0;if(B)C=(A&255)>>>1;else C=c[v>>2]|0;if(((c[r>>2]|0)-z|0)==(C|0)){if(B){B=(A&255)>>>1;z=(A&255)>>>1}else{z=c[v>>2]|0;B=z}On(d,z<<1,0);if((a[d>>0]&1)==0)z=10;else z=(c[d>>2]&-2)+ -1|0;On(d,z,0);if((a[d>>0]&1)==0)z=w;else z=c[g>>2]|0;c[r>>2]=z+B}B=t+12|0;C=c[B>>2]|0;A=t+16|0;if((C|0)==(c[A>>2]|0))C=Yb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else C=c[C>>2]|0;if((Bq(C,q,z,r,p,x,m,s,o,u)|0)!=0)break;y=c[B>>2]|0;if((y|0)==(c[A>>2]|0)){Yb[c[(c[t>>2]|0)+40>>2]&63](t)|0;continue}else{c[B>>2]=y+4;continue}}u=a[m>>0]|0;if((u&1)==0)u=(u&255)>>>1;else u=c[m+4>>2]|0;if((u|0)!=0?(n=c[o>>2]|0,(n-s|0)<160):0){C=c[p>>2]|0;c[o>>2]=n+4;c[n>>2]=C}B=Pw(z,c[r>>2]|0,h,q)|0;C=j;c[C>>2]=B;c[C+4>>2]=H;tt(m,s,c[o>>2]|0,h);if((t|0)!=0){j=c[t+12>>2]|0;if((j|0)==(c[t+16>>2]|0))j=Yb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else j=c[j>>2]|0;if((j|0)==-1){c[e>>2]=0;t=0;e=1}else e=0}else{t=0;e=1}do if((y|0)!=0){j=c[y+12>>2]|0;if((j|0)==(c[y+16>>2]|0))j=Yb[c[(c[y>>2]|0)+36>>2]&63](y)|0;else j=c[j>>2]|0;if((j|0)==-1){c[f>>2]=0;k=56;break}if(e){c[b>>2]=t;Kn(d);Kn(m);i=l;return}}else k=56;while(0);if((k|0)==56?!e:0){c[b>>2]=t;Kn(d);Kn(m);i=l;return}c[h>>2]=c[h>>2]|2;c[b>>2]=t;Kn(d);Kn(m);i=l;return}function mq(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];nq(a,0,k,j,f,g,h);i=b;return}function nq(d,e,f,g,h,j,k){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;m=i;i=i+304|0;v=m+160|0;u=m+280|0;n=m+264|0;e=m+284|0;s=m+300|0;t=m;p=m+276|0;q=m+296|0;r=tw(h)|0;Fq(n,h,v,u);c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;On(e,10,0);if((a[e>>0]&1)==0){A=e+1|0;h=e+8|0;x=A}else{A=e+8|0;h=A;x=e+1|0;A=c[A>>2]|0}c[s>>2]=A;c[p>>2]=t;c[q>>2]=0;w=e+4|0;y=c[u>>2]|0;u=c[f>>2]|0;a:while(1){if((u|0)!=0){z=c[u+12>>2]|0;if((z|0)==(c[u+16>>2]|0))z=Yb[c[(c[u>>2]|0)+36>>2]&63](u)|0;else z=c[z>>2]|0;if((z|0)==-1){c[f>>2]=0;u=0;B=1}else B=0}else{u=0;B=1}z=c[g>>2]|0;do if((z|0)!=0){C=c[z+12>>2]|0;if((C|0)==(c[z+16>>2]|0))C=Yb[c[(c[z>>2]|0)+36>>2]&63](z)|0;else C=c[C>>2]|0;if(!((C|0)==-1))if(B)break;else break a;else{c[g>>2]=0;l=17;break}}else l=17;while(0);if((l|0)==17){l=0;if(B){z=0;break}else z=0}B=a[e>>0]|0;C=(B&1)==0;if(C)D=(B&255)>>>1;else D=c[w>>2]|0;if(((c[s>>2]|0)-A|0)==(D|0)){if(C){C=(B&255)>>>1;A=(B&255)>>>1}else{A=c[w>>2]|0;C=A}On(e,A<<1,0);if((a[e>>0]&1)==0)A=10;else A=(c[e>>2]&-2)+ -1|0;On(e,A,0);if((a[e>>0]&1)==0)A=x;else A=c[h>>2]|0;c[s>>2]=A+C}C=u+12|0;D=c[C>>2]|0;B=u+16|0;if((D|0)==(c[B>>2]|0))D=Yb[c[(c[u>>2]|0)+36>>2]&63](u)|0;else D=c[D>>2]|0;if((Bq(D,r,A,s,q,y,n,t,p,v)|0)!=0)break;z=c[C>>2]|0;if((z|0)==(c[B>>2]|0)){Yb[c[(c[u>>2]|0)+40>>2]&63](u)|0;continue}else{c[C>>2]=z+4;continue}}v=a[n>>0]|0;if((v&1)==0)v=(v&255)>>>1;else v=c[n+4>>2]|0;if((v|0)!=0?(o=c[p>>2]|0,(o-t|0)<160):0){D=c[q>>2]|0;c[p>>2]=o+4;c[o>>2]=D}b[k>>1]=Ow(A,c[s>>2]|0,j,r)|0;tt(n,t,c[p>>2]|0,j);if((u|0)!=0){k=c[u+12>>2]|0;if((k|0)==(c[u+16>>2]|0))k=Yb[c[(c[u>>2]|0)+36>>2]&63](u)|0;else k=c[k>>2]|0;if((k|0)==-1){c[f>>2]=0;u=0;f=1}else f=0}else{u=0;f=1}do if((z|0)!=0){k=c[z+12>>2]|0;if((k|0)==(c[z+16>>2]|0))k=Yb[c[(c[z>>2]|0)+36>>2]&63](z)|0;else k=c[k>>2]|0;if((k|0)==-1){c[g>>2]=0;l=56;break}if(f){c[d>>2]=u;Kn(e);Kn(n);i=m;return}}else l=56;while(0);if((l|0)==56?!f:0){c[d>>2]=u;Kn(e);Kn(n);i=m;return}c[j>>2]=c[j>>2]|2;c[d>>2]=u;Kn(e);Kn(n);i=m;return}function oq(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];pq(a,0,k,j,f,g,h);i=b;return}function pq(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;l=i;i=i+304|0;u=l+160|0;t=l+280|0;m=l+264|0;d=l+284|0;r=l+300|0;s=l;o=l+276|0;p=l+296|0;q=tw(g)|0;Fq(m,g,u,t);c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;On(d,10,0);if((a[d>>0]&1)==0){z=d+1|0;g=d+8|0;w=z}else{z=d+8|0;g=z;w=d+1|0;z=c[z>>2]|0}c[r>>2]=z;c[o>>2]=s;c[p>>2]=0;v=d+4|0;x=c[t>>2]|0;t=c[e>>2]|0;a:while(1){if((t|0)!=0){y=c[t+12>>2]|0;if((y|0)==(c[t+16>>2]|0))y=Yb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else y=c[y>>2]|0;if((y|0)==-1){c[e>>2]=0;t=0;A=1}else A=0}else{t=0;A=1}y=c[f>>2]|0;do if((y|0)!=0){B=c[y+12>>2]|0;if((B|0)==(c[y+16>>2]|0))B=Yb[c[(c[y>>2]|0)+36>>2]&63](y)|0;else B=c[B>>2]|0;if(!((B|0)==-1))if(A)break;else break a;else{c[f>>2]=0;k=17;break}}else k=17;while(0);if((k|0)==17){k=0;if(A){y=0;break}else y=0}A=a[d>>0]|0;B=(A&1)==0;if(B)C=(A&255)>>>1;else C=c[v>>2]|0;if(((c[r>>2]|0)-z|0)==(C|0)){if(B){B=(A&255)>>>1;z=(A&255)>>>1}else{z=c[v>>2]|0;B=z}On(d,z<<1,0);if((a[d>>0]&1)==0)z=10;else z=(c[d>>2]&-2)+ -1|0;On(d,z,0);if((a[d>>0]&1)==0)z=w;else z=c[g>>2]|0;c[r>>2]=z+B}B=t+12|0;C=c[B>>2]|0;A=t+16|0;if((C|0)==(c[A>>2]|0))C=Yb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else C=c[C>>2]|0;if((Bq(C,q,z,r,p,x,m,s,o,u)|0)!=0)break;y=c[B>>2]|0;if((y|0)==(c[A>>2]|0)){Yb[c[(c[t>>2]|0)+40>>2]&63](t)|0;continue}else{c[B>>2]=y+4;continue}}u=a[m>>0]|0;if((u&1)==0)u=(u&255)>>>1;else u=c[m+4>>2]|0;if((u|0)!=0?(n=c[o>>2]|0,(n-s|0)<160):0){C=c[p>>2]|0;c[o>>2]=n+4;c[n>>2]=C}c[j>>2]=Nw(z,c[r>>2]|0,h,q)|0;tt(m,s,c[o>>2]|0,h);if((t|0)!=0){j=c[t+12>>2]|0;if((j|0)==(c[t+16>>2]|0))j=Yb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else j=c[j>>2]|0;if((j|0)==-1){c[e>>2]=0;t=0;e=1}else e=0}else{t=0;e=1}do if((y|0)!=0){j=c[y+12>>2]|0;if((j|0)==(c[y+16>>2]|0))j=Yb[c[(c[y>>2]|0)+36>>2]&63](y)|0;else j=c[j>>2]|0;if((j|0)==-1){c[f>>2]=0;k=56;break}if(e){c[b>>2]=t;Kn(d);Kn(m);i=l;return}}else k=56;while(0);if((k|0)==56?!e:0){c[b>>2]=t;Kn(d);Kn(m);i=l;return}c[h>>2]=c[h>>2]|2;c[b>>2]=t;Kn(d);Kn(m);i=l;return}function qq(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];rq(a,0,k,j,f,g,h);i=b;return}function rq(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;l=i;i=i+304|0;u=l+160|0;t=l+280|0;m=l+264|0;d=l+284|0;r=l+300|0;s=l;o=l+276|0;p=l+296|0;q=tw(g)|0;Fq(m,g,u,t);c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;On(d,10,0);if((a[d>>0]&1)==0){z=d+1|0;g=d+8|0;w=z}else{z=d+8|0;g=z;w=d+1|0;z=c[z>>2]|0}c[r>>2]=z;c[o>>2]=s;c[p>>2]=0;v=d+4|0;x=c[t>>2]|0;t=c[e>>2]|0;a:while(1){if((t|0)!=0){y=c[t+12>>2]|0;if((y|0)==(c[t+16>>2]|0))y=Yb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else y=c[y>>2]|0;if((y|0)==-1){c[e>>2]=0;t=0;A=1}else A=0}else{t=0;A=1}y=c[f>>2]|0;do if((y|0)!=0){B=c[y+12>>2]|0;if((B|0)==(c[y+16>>2]|0))B=Yb[c[(c[y>>2]|0)+36>>2]&63](y)|0;else B=c[B>>2]|0;if(!((B|0)==-1))if(A)break;else break a;else{c[f>>2]=0;k=17;break}}else k=17;while(0);if((k|0)==17){k=0;if(A){y=0;break}else y=0}A=a[d>>0]|0;B=(A&1)==0;if(B)C=(A&255)>>>1;else C=c[v>>2]|0;if(((c[r>>2]|0)-z|0)==(C|0)){if(B){B=(A&255)>>>1;z=(A&255)>>>1}else{z=c[v>>2]|0;B=z}On(d,z<<1,0);if((a[d>>0]&1)==0)z=10;else z=(c[d>>2]&-2)+ -1|0;On(d,z,0);if((a[d>>0]&1)==0)z=w;else z=c[g>>2]|0;c[r>>2]=z+B}B=t+12|0;C=c[B>>2]|0;A=t+16|0;if((C|0)==(c[A>>2]|0))C=Yb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else C=c[C>>2]|0;if((Bq(C,q,z,r,p,x,m,s,o,u)|0)!=0)break;y=c[B>>2]|0;if((y|0)==(c[A>>2]|0)){Yb[c[(c[t>>2]|0)+40>>2]&63](t)|0;continue}else{c[B>>2]=y+4;continue}}u=a[m>>0]|0;if((u&1)==0)u=(u&255)>>>1;else u=c[m+4>>2]|0;if((u|0)!=0?(n=c[o>>2]|0,(n-s|0)<160):0){C=c[p>>2]|0;c[o>>2]=n+4;c[n>>2]=C}c[j>>2]=Mw(z,c[r>>2]|0,h,q)|0;tt(m,s,c[o>>2]|0,h);if((t|0)!=0){j=c[t+12>>2]|0;if((j|0)==(c[t+16>>2]|0))j=Yb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else j=c[j>>2]|0;if((j|0)==-1){c[e>>2]=0;t=0;e=1}else e=0}else{t=0;e=1}do if((y|0)!=0){j=c[y+12>>2]|0;if((j|0)==(c[y+16>>2]|0))j=Yb[c[(c[y>>2]|0)+36>>2]&63](y)|0;else j=c[j>>2]|0;if((j|0)==-1){c[f>>2]=0;k=56;break}if(e){c[b>>2]=t;Kn(d);Kn(m);i=l;return}}else k=56;while(0);if((k|0)==56?!e:0){c[b>>2]=t;Kn(d);Kn(m);i=l;return}c[h>>2]=c[h>>2]|2;c[b>>2]=t;Kn(d);Kn(m);i=l;return}function sq(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];tq(a,0,k,j,f,g,h);i=b;return}function tq(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;l=i;i=i+304|0;u=l+160|0;t=l+280|0;m=l+264|0;d=l+284|0;r=l+300|0;s=l;o=l+276|0;p=l+296|0;q=tw(g)|0;Fq(m,g,u,t);c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;On(d,10,0);if((a[d>>0]&1)==0){z=d+1|0;g=d+8|0;w=z}else{z=d+8|0;g=z;w=d+1|0;z=c[z>>2]|0}c[r>>2]=z;c[o>>2]=s;c[p>>2]=0;v=d+4|0;x=c[t>>2]|0;t=c[e>>2]|0;a:while(1){if((t|0)!=0){y=c[t+12>>2]|0;if((y|0)==(c[t+16>>2]|0))y=Yb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else y=c[y>>2]|0;if((y|0)==-1){c[e>>2]=0;t=0;A=1}else A=0}else{t=0;A=1}y=c[f>>2]|0;do if((y|0)!=0){B=c[y+12>>2]|0;if((B|0)==(c[y+16>>2]|0))B=Yb[c[(c[y>>2]|0)+36>>2]&63](y)|0;else B=c[B>>2]|0;if(!((B|0)==-1))if(A)break;else break a;else{c[f>>2]=0;k=17;break}}else k=17;while(0);if((k|0)==17){k=0;if(A){y=0;break}else y=0}A=a[d>>0]|0;B=(A&1)==0;if(B)C=(A&255)>>>1;else C=c[v>>2]|0;if(((c[r>>2]|0)-z|0)==(C|0)){if(B){B=(A&255)>>>1;z=(A&255)>>>1}else{z=c[v>>2]|0;B=z}On(d,z<<1,0);if((a[d>>0]&1)==0)z=10;else z=(c[d>>2]&-2)+ -1|0;On(d,z,0);if((a[d>>0]&1)==0)z=w;else z=c[g>>2]|0;c[r>>2]=z+B}B=t+12|0;C=c[B>>2]|0;A=t+16|0;if((C|0)==(c[A>>2]|0))C=Yb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else C=c[C>>2]|0;if((Bq(C,q,z,r,p,x,m,s,o,u)|0)!=0)break;y=c[B>>2]|0;if((y|0)==(c[A>>2]|0)){Yb[c[(c[t>>2]|0)+40>>2]&63](t)|0;continue}else{c[B>>2]=y+4;continue}}u=a[m>>0]|0;if((u&1)==0)u=(u&255)>>>1;else u=c[m+4>>2]|0;if((u|0)!=0?(n=c[o>>2]|0,(n-s|0)<160):0){C=c[p>>2]|0;c[o>>2]=n+4;c[n>>2]=C}B=Lw(z,c[r>>2]|0,h,q)|0;C=j;c[C>>2]=B;c[C+4>>2]=H;tt(m,s,c[o>>2]|0,h);if((t|0)!=0){j=c[t+12>>2]|0;if((j|0)==(c[t+16>>2]|0))j=Yb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else j=c[j>>2]|0;if((j|0)==-1){c[e>>2]=0;t=0;e=1}else e=0}else{t=0;e=1}do if((y|0)!=0){j=c[y+12>>2]|0;if((j|0)==(c[y+16>>2]|0))j=Yb[c[(c[y>>2]|0)+36>>2]&63](y)|0;else j=c[j>>2]|0;if((j|0)==-1){c[f>>2]=0;k=56;break}if(e){c[b>>2]=t;Kn(d);Kn(m);i=l;return}}else k=56;while(0);if((k|0)==56?!e:0){c[b>>2]=t;Kn(d);Kn(m);i=l;return}c[h>>2]=c[h>>2]|2;c[b>>2]=t;Kn(d);Kn(m);i=l;return}function uq(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];vq(a,0,k,j,f,g,h);i=b;return}function vq(b,d,e,f,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;n=i;i=i+352|0;v=n+208|0;z=n+184|0;w=n+4|0;d=n+8|0;m=n+196|0;q=n;r=n+24|0;t=n+192|0;p=n+188|0;s=n+337|0;u=n+336|0;Gq(d,h,v,z,w);c[m+0>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;On(m,10,0);if((a[m>>0]&1)==0){C=m+1|0;h=m+8|0;y=C}else{C=m+8|0;h=C;y=m+1|0;C=c[C>>2]|0}c[q>>2]=C;c[t>>2]=r;c[p>>2]=0;a[s>>0]=1;a[u>>0]=69;x=m+4|0;z=c[z>>2]|0;A=c[w>>2]|0;w=c[e>>2]|0;a:while(1){if((w|0)!=0){B=c[w+12>>2]|0;if((B|0)==(c[w+16>>2]|0))B=Yb[c[(c[w>>2]|0)+36>>2]&63](w)|0;else B=c[B>>2]|0;if((B|0)==-1){c[e>>2]=0;w=0;D=1}else D=0}else{w=0;D=1}B=c[f>>2]|0;do if((B|0)!=0){E=c[B+12>>2]|0;if((E|0)==(c[B+16>>2]|0))E=Yb[c[(c[B>>2]|0)+36>>2]&63](B)|0;else E=c[E>>2]|0;if(!((E|0)==-1))if(D)break;else break a;else{c[f>>2]=0;l=17;break}}else l=17;while(0);if((l|0)==17){l=0;if(D){B=0;break}else B=0}D=a[m>>0]|0;F=(D&1)==0;if(F)E=(D&255)>>>1;else E=c[x>>2]|0;if(((c[q>>2]|0)-C|0)==(E|0)){if(F){E=(D&255)>>>1;C=(D&255)>>>1}else{C=c[x>>2]|0;E=C}On(m,C<<1,0);if((a[m>>0]&1)==0)C=10;else C=(c[m>>2]&-2)+ -1|0;On(m,C,0);if((a[m>>0]&1)==0)C=y;else C=c[h>>2]|0;c[q>>2]=C+E}D=w+12|0;F=c[D>>2]|0;E=w+16|0;if((F|0)==(c[E>>2]|0))F=Yb[c[(c[w>>2]|0)+36>>2]&63](w)|0;else F=c[F>>2]|0;if((Hq(F,s,u,C,q,z,A,d,r,t,p,v)|0)!=0)break;B=c[D>>2]|0;if((B|0)==(c[E>>2]|0)){Yb[c[(c[w>>2]|0)+40>>2]&63](w)|0;continue}else{c[D>>2]=B+4;continue}}u=a[d>>0]|0;if((u&1)==0)u=(u&255)>>>1;else u=c[d+4>>2]|0;if(((u|0)!=0?(a[s>>0]|0)!=0:0)?(o=c[t>>2]|0,(o-r|0)<160):0){F=c[p>>2]|0;c[t>>2]=o+4;c[o>>2]=F}g[k>>2]=+Kw(C,c[q>>2]|0,j);tt(d,r,c[t>>2]|0,j);if((w|0)!=0){k=c[w+12>>2]|0;if((k|0)==(c[w+16>>2]|0))k=Yb[c[(c[w>>2]|0)+36>>2]&63](w)|0;else k=c[k>>2]|0;if((k|0)==-1){c[e>>2]=0;w=0;e=1}else e=0}else{w=0;e=1}do if((B|0)!=0){k=c[B+12>>2]|0;if((k|0)==(c[B+16>>2]|0))k=Yb[c[(c[B>>2]|0)+36>>2]&63](B)|0;else k=c[k>>2]|0;if((k|0)==-1){c[f>>2]=0;l=57;break}if(e){c[b>>2]=w;Kn(m);Kn(d);i=n;return}}else l=57;while(0);if((l|0)==57?!e:0){c[b>>2]=w;Kn(m);Kn(d);i=n;return}c[j>>2]=c[j>>2]|2;c[b>>2]=w;Kn(m);Kn(d);i=n;return}function wq(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];xq(a,0,k,j,f,g,h);i=b;return}function xq(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;n=i;i=i+352|0;v=n+208|0;z=n+184|0;w=n+4|0;d=n+8|0;m=n+196|0;q=n;r=n+24|0;t=n+192|0;p=n+188|0;s=n+337|0;u=n+336|0;Gq(d,g,v,z,w);c[m+0>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;On(m,10,0);if((a[m>>0]&1)==0){C=m+1|0;g=m+8|0;y=C}else{C=m+8|0;g=C;y=m+1|0;C=c[C>>2]|0}c[q>>2]=C;c[t>>2]=r;c[p>>2]=0;a[s>>0]=1;a[u>>0]=69;x=m+4|0;z=c[z>>2]|0;A=c[w>>2]|0;w=c[e>>2]|0;a:while(1){if((w|0)!=0){B=c[w+12>>2]|0;if((B|0)==(c[w+16>>2]|0))B=Yb[c[(c[w>>2]|0)+36>>2]&63](w)|0;else B=c[B>>2]|0;if((B|0)==-1){c[e>>2]=0;w=0;D=1}else D=0}else{w=0;D=1}B=c[f>>2]|0;do if((B|0)!=0){E=c[B+12>>2]|0;if((E|0)==(c[B+16>>2]|0))E=Yb[c[(c[B>>2]|0)+36>>2]&63](B)|0;else E=c[E>>2]|0;if(!((E|0)==-1))if(D)break;else break a;else{c[f>>2]=0;l=17;break}}else l=17;while(0);if((l|0)==17){l=0;if(D){B=0;break}else B=0}D=a[m>>0]|0;F=(D&1)==0;if(F)E=(D&255)>>>1;else E=c[x>>2]|0;if(((c[q>>2]|0)-C|0)==(E|0)){if(F){E=(D&255)>>>1;C=(D&255)>>>1}else{C=c[x>>2]|0;E=C}On(m,C<<1,0);if((a[m>>0]&1)==0)C=10;else C=(c[m>>2]&-2)+ -1|0;On(m,C,0);if((a[m>>0]&1)==0)C=y;else C=c[g>>2]|0;c[q>>2]=C+E}D=w+12|0;F=c[D>>2]|0;E=w+16|0;if((F|0)==(c[E>>2]|0))F=Yb[c[(c[w>>2]|0)+36>>2]&63](w)|0;else F=c[F>>2]|0;if((Hq(F,s,u,C,q,z,A,d,r,t,p,v)|0)!=0)break;B=c[D>>2]|0;if((B|0)==(c[E>>2]|0)){Yb[c[(c[w>>2]|0)+40>>2]&63](w)|0;continue}else{c[D>>2]=B+4;continue}}u=a[d>>0]|0;if((u&1)==0)u=(u&255)>>>1;else u=c[d+4>>2]|0;if(((u|0)!=0?(a[s>>0]|0)!=0:0)?(o=c[t>>2]|0,(o-r|0)<160):0){F=c[p>>2]|0;c[t>>2]=o+4;c[o>>2]=F}h[k>>3]=+Jw(C,c[q>>2]|0,j);tt(d,r,c[t>>2]|0,j);if((w|0)!=0){k=c[w+12>>2]|0;if((k|0)==(c[w+16>>2]|0))k=Yb[c[(c[w>>2]|0)+36>>2]&63](w)|0;else k=c[k>>2]|0;if((k|0)==-1){c[e>>2]=0;w=0;e=1}else e=0}else{w=0;e=1}do if((B|0)!=0){k=c[B+12>>2]|0;if((k|0)==(c[B+16>>2]|0))k=Yb[c[(c[B>>2]|0)+36>>2]&63](B)|0;else k=c[k>>2]|0;if((k|0)==-1){c[f>>2]=0;l=57;break}if(e){c[b>>2]=w;Kn(m);Kn(d);i=n;return}}else l=57;while(0);if((l|0)==57?!e:0){c[b>>2]=w;Kn(m);Kn(d);i=n;return}c[j>>2]=c[j>>2]|2;c[b>>2]=w;Kn(m);Kn(d);i=n;return}function yq(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];zq(a,0,k,j,f,g,h);i=b;return}function zq(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;n=i;i=i+352|0;v=n+208|0;z=n+184|0;w=n+4|0;d=n+8|0;m=n+196|0;q=n;r=n+24|0;t=n+192|0;p=n+188|0;s=n+337|0;u=n+336|0;Gq(d,g,v,z,w);c[m+0>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;On(m,10,0);if((a[m>>0]&1)==0){C=m+1|0;g=m+8|0;y=C}else{C=m+8|0;g=C;y=m+1|0;C=c[C>>2]|0}c[q>>2]=C;c[t>>2]=r;c[p>>2]=0;a[s>>0]=1;a[u>>0]=69;x=m+4|0;z=c[z>>2]|0;A=c[w>>2]|0;w=c[e>>2]|0;a:while(1){if((w|0)!=0){B=c[w+12>>2]|0;if((B|0)==(c[w+16>>2]|0))B=Yb[c[(c[w>>2]|0)+36>>2]&63](w)|0;else B=c[B>>2]|0;if((B|0)==-1){c[e>>2]=0;w=0;D=1}else D=0}else{w=0;D=1}B=c[f>>2]|0;do if((B|0)!=0){E=c[B+12>>2]|0;if((E|0)==(c[B+16>>2]|0))E=Yb[c[(c[B>>2]|0)+36>>2]&63](B)|0;else E=c[E>>2]|0;if(!((E|0)==-1))if(D)break;else break a;else{c[f>>2]=0;l=17;break}}else l=17;while(0);if((l|0)==17){l=0;if(D){B=0;break}else B=0}D=a[m>>0]|0;F=(D&1)==0;if(F)E=(D&255)>>>1;else E=c[x>>2]|0;if(((c[q>>2]|0)-C|0)==(E|0)){if(F){E=(D&255)>>>1;C=(D&255)>>>1}else{C=c[x>>2]|0;E=C}On(m,C<<1,0);if((a[m>>0]&1)==0)C=10;else C=(c[m>>2]&-2)+ -1|0;On(m,C,0);if((a[m>>0]&1)==0)C=y;else C=c[g>>2]|0;c[q>>2]=C+E}D=w+12|0;F=c[D>>2]|0;E=w+16|0;if((F|0)==(c[E>>2]|0))F=Yb[c[(c[w>>2]|0)+36>>2]&63](w)|0;else F=c[F>>2]|0;if((Hq(F,s,u,C,q,z,A,d,r,t,p,v)|0)!=0)break;B=c[D>>2]|0;if((B|0)==(c[E>>2]|0)){Yb[c[(c[w>>2]|0)+40>>2]&63](w)|0;continue}else{c[D>>2]=B+4;continue}}u=a[d>>0]|0;if((u&1)==0)u=(u&255)>>>1;else u=c[d+4>>2]|0;if(((u|0)!=0?(a[s>>0]|0)!=0:0)?(o=c[t>>2]|0,(o-r|0)<160):0){F=c[p>>2]|0;c[t>>2]=o+4;c[o>>2]=F}h[k>>3]=+Iw(C,c[q>>2]|0,j);tt(d,r,c[t>>2]|0,j);if((w|0)!=0){k=c[w+12>>2]|0;if((k|0)==(c[w+16>>2]|0))k=Yb[c[(c[w>>2]|0)+36>>2]&63](w)|0;else k=c[k>>2]|0;if((k|0)==-1){c[e>>2]=0;w=0;e=1}else e=0}else{w=0;e=1}do if((B|0)!=0){k=c[B+12>>2]|0;if((k|0)==(c[B+16>>2]|0))k=Yb[c[(c[B>>2]|0)+36>>2]&63](B)|0;else k=c[k>>2]|0;if((k|0)==-1){c[f>>2]=0;l=57;break}if(e){c[b>>2]=w;Kn(m);Kn(d);i=n;return}}else l=57;while(0);if((l|0)==57?!e:0){c[b>>2]=w;Kn(m);Kn(d);i=n;return}c[j>>2]=c[j>>2]|2;c[b>>2]=w;Kn(m);Kn(d);i=n;return}function Aq(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;m=i;i=i+320|0;n=m;o=m+200|0;l=m+188|0;z=m+8|0;d=m+176|0;p=m+4|0;q=m+16|0;s=m+304|0;r=m+308|0;c[l+0>>2]=0;c[l+4>>2]=0;c[l+8>>2]=0;jo(z,g);y=Pu(z,263496)|0;cc[c[(c[y>>2]|0)+48>>2]&7](y,262016,262042|0,o)|0;nn(c[z>>2]|0)|0;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;On(d,10,0);if((a[d>>0]&1)==0){w=d+1|0;u=d+8|0;g=w}else{w=d+8|0;u=w;g=d+1|0;w=c[w>>2]|0}c[p>>2]=w;c[s>>2]=q;c[r>>2]=0;t=d+4|0;v=c[e>>2]|0;a:while(1){if((v|0)!=0){x=c[v+12>>2]|0;if((x|0)==(c[v+16>>2]|0))x=Yb[c[(c[v>>2]|0)+36>>2]&63](v)|0;else x=c[x>>2]|0;if((x|0)==-1){c[e>>2]=0;v=0;x=1}else x=0}else{v=0;x=1}y=c[f>>2]|0;do if((y|0)!=0){z=c[y+12>>2]|0;if((z|0)==(c[y+16>>2]|0))y=Yb[c[(c[y>>2]|0)+36>>2]&63](y)|0;else y=c[z>>2]|0;if(!((y|0)==-1))if(x)break;else break a;else{c[f>>2]=0;k=17;break}}else k=17;while(0);if((k|0)==17?(k=0,x):0)break;x=a[d>>0]|0;y=(x&1)==0;if(y)z=(x&255)>>>1;else z=c[t>>2]|0;if(((c[p>>2]|0)-w|0)==(z|0)){if(y){y=(x&255)>>>1;w=(x&255)>>>1}else{w=c[t>>2]|0;y=w}On(d,w<<1,0);if((a[d>>0]&1)==0)w=10;else w=(c[d>>2]&-2)+ -1|0;On(d,w,0);if((a[d>>0]&1)==0)w=g;else w=c[u>>2]|0;c[p>>2]=w+y}y=v+12|0;z=c[y>>2]|0;x=v+16|0;if((z|0)==(c[x>>2]|0))z=Yb[c[(c[v>>2]|0)+36>>2]&63](v)|0;else z=c[z>>2]|0;if((Bq(z,16,w,p,r,0,l,q,s,o)|0)!=0)break;z=c[y>>2]|0;if((z|0)==(c[x>>2]|0)){Yb[c[(c[v>>2]|0)+40>>2]&63](v)|0;continue}else{c[y>>2]=z+4;continue}}a[w+3>>0]=0;z=dq()|0;c[n>>2]=j;if((cq(w,z,262056,n)|0)!=1)c[h>>2]=4;j=c[e>>2]|0;if((j|0)!=0){n=c[j+12>>2]|0;if((n|0)==(c[j+16>>2]|0))n=Yb[c[(c[j>>2]|0)+36>>2]&63](j)|0;else n=c[n>>2]|0;if((n|0)==-1){c[e>>2]=0;e=0;j=1}else{e=j;j=0}}else{e=0;j=1}n=c[f>>2]|0;do if((n|0)!=0){o=c[n+12>>2]|0;if((o|0)==(c[n+16>>2]|0))n=Yb[c[(c[n>>2]|0)+36>>2]&63](n)|0;else n=c[o>>2]|0;if((n|0)==-1){c[f>>2]=0;k=52;break}if(j){c[b>>2]=e;Kn(d);Kn(l);i=m;return}}else k=52;while(0);if((k|0)==52?!j:0){c[b>>2]=e;Kn(d);Kn(l);i=m;return}c[h>>2]=c[h>>2]|2;c[b>>2]=e;Kn(d);Kn(l);i=m;return}function Bq(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0;n=i;p=c[f>>2]|0;o=(p|0)==(e|0);do if(o){q=(c[m+96>>2]|0)==(b|0);if(!q?(c[m+100>>2]|0)!=(b|0):0)break;c[f>>2]=e+1;a[e>>0]=q?43:45;c[g>>2]=0;q=0;i=n;return q|0}while(0);q=a[j>>0]|0;if((q&1)==0)j=(q&255)>>>1;else j=c[j+4>>2]|0;if((j|0)!=0&(b|0)==(h|0)){o=c[l>>2]|0;if((o-k|0)>=160){q=0;i=n;return q|0}q=c[g>>2]|0;c[l>>2]=o+4;c[o>>2]=q;c[g>>2]=0;q=0;i=n;return q|0}l=m+104|0;k=m;while(1){if((c[k>>2]|0)==(b|0))break;k=k+4|0;if((k|0)==(l|0)){k=l;break}}b=k-m|0;m=b>>2;if((b|0)>92){q=-1;i=n;return q|0}if((d|0)==16){if((b|0)>=88){if(o){q=-1;i=n;return q|0}if((p-e|0)>=3){q=-1;i=n;return q|0}if((a[p+ -1>>0]|0)!=48){q=-1;i=n;return q|0}c[g>>2]=0;q=a[262016+m>>0]|0;c[f>>2]=p+1;a[p>>0]=q;q=0;i=n;return q|0}}else if((d|0)==10|(d|0)==8?(m|0)>=(d|0):0){q=-1;i=n;return q|0}q=a[262016+m>>0]|0;c[f>>2]=p+1;a[p>>0]=q;c[g>>2]=(c[g>>2]|0)+1;q=0;i=n;return q|0}function Cq(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;i=i+16|0;h=g;jo(h,d);d=Pu(h,263504)|0;cc[c[(c[d>>2]|0)+32>>2]&7](d,262016,262042|0,e)|0;d=Pu(h,263648)|0;a[f>>0]=Yb[c[(c[d>>2]|0)+16>>2]&63](d)|0;Wb[c[(c[d>>2]|0)+20>>2]&63](b,d);nn(c[h>>2]|0)|0;i=g;return}function Dq(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;h=i;i=i+16|0;j=h;jo(j,d);d=Pu(j,263504)|0;cc[c[(c[d>>2]|0)+32>>2]&7](d,262016,262048|0,e)|0;d=Pu(j,263648)|0;a[f>>0]=Yb[c[(c[d>>2]|0)+12>>2]&63](d)|0;a[g>>0]=Yb[c[(c[d>>2]|0)+16>>2]&63](d)|0;Wb[c[(c[d>>2]|0)+20>>2]&63](b,d);nn(c[j>>2]|0)|0;i=h;return}function Eq(b,e,f,g,h,j,k,l,m,n,o,p){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0;q=i;if(b<<24>>24==j<<24>>24){if((a[e>>0]|0)==0){k=-1;i=q;return k|0}a[e>>0]=0;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=46;h=a[l>>0]|0;if((h&1)==0)h=(h&255)>>>1;else h=c[l+4>>2]|0;if((h|0)==0){k=0;i=q;return k|0}h=c[n>>2]|0;if((h-m|0)>=160){k=0;i=q;return k|0}k=c[o>>2]|0;c[n>>2]=h+4;c[h>>2]=k;k=0;i=q;return k|0}if(b<<24>>24==k<<24>>24){j=a[l>>0]|0;if((j&1)==0)j=(j&255)>>>1;else j=c[l+4>>2]|0;if((j|0)!=0){if((a[e>>0]|0)==0){k=-1;i=q;return k|0}h=c[n>>2]|0;if((h-m|0)>=160){k=0;i=q;return k|0}k=c[o>>2]|0;c[n>>2]=h+4;c[h>>2]=k;c[o>>2]=0;k=0;i=q;return k|0}}j=p+32|0;k=p;do{if((a[k>>0]|0)==b<<24>>24){j=k;break}k=k+1|0}while((k|0)!=(j|0));b=j-p|0;if((b|0)>31){k=-1;i=q;return k|0}p=a[262016+b>>0]|0;if((b|0)==24|(b|0)==25){o=c[h>>2]|0;if((o|0)!=(g|0)?(d[o+ -1>>0]&95|0)!=(d[f>>0]&127|0):0){k=-1;i=q;return k|0}c[h>>2]=o+1;a[o>>0]=p;k=0;i=q;return k|0}else if((b|0)==23|(b|0)==22){a[f>>0]=80;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=p;k=0;i=q;return k|0}else{g=p&95;if((g|0)==(a[f>>0]|0)?(a[f>>0]=g|128,(a[e>>0]|0)!=0):0){a[e>>0]=0;f=a[l>>0]|0;if((f&1)==0)l=(f&255)>>>1;else l=c[l+4>>2]|0;if((l|0)!=0?(r=c[n>>2]|0,(r-m|0)<160):0){k=c[o>>2]|0;c[n>>2]=r+4;c[r>>2]=k}}k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=p;if((b|0)>21){k=0;i=q;return k|0}c[o>>2]=(c[o>>2]|0)+1;k=0;i=q;return k|0}return 0}function Fq(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;jo(g,b);b=Pu(g,263496)|0;cc[c[(c[b>>2]|0)+48>>2]&7](b,262016,262042|0,d)|0;b=Pu(g,263656)|0;c[e>>2]=Yb[c[(c[b>>2]|0)+16>>2]&63](b)|0;Wb[c[(c[b>>2]|0)+20>>2]&63](a,b);nn(c[g>>2]|0)|0;i=f;return}function Gq(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;i=i+16|0;h=g;jo(h,b);b=Pu(h,263496)|0;cc[c[(c[b>>2]|0)+48>>2]&7](b,262016,262048|0,d)|0;b=Pu(h,263656)|0;c[e>>2]=Yb[c[(c[b>>2]|0)+12>>2]&63](b)|0;c[f>>2]=Yb[c[(c[b>>2]|0)+16>>2]&63](b)|0;Wb[c[(c[b>>2]|0)+20>>2]&63](a,b);nn(c[h>>2]|0)|0;i=g;return}function Hq(b,e,f,g,h,j,k,l,m,n,o,p){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0;q=i;if((b|0)==(j|0)){if((a[e>>0]|0)==0){k=-1;i=q;return k|0}a[e>>0]=0;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=46;h=a[l>>0]|0;if((h&1)==0)h=(h&255)>>>1;else h=c[l+4>>2]|0;if((h|0)==0){k=0;i=q;return k|0}h=c[n>>2]|0;if((h-m|0)>=160){k=0;i=q;return k|0}k=c[o>>2]|0;c[n>>2]=h+4;c[h>>2]=k;k=0;i=q;return k|0}if((b|0)==(k|0)){j=a[l>>0]|0;if((j&1)==0)j=(j&255)>>>1;else j=c[l+4>>2]|0;if((j|0)!=0){if((a[e>>0]|0)==0){k=-1;i=q;return k|0}h=c[n>>2]|0;if((h-m|0)>=160){k=0;i=q;return k|0}k=c[o>>2]|0;c[n>>2]=h+4;c[h>>2]=k;c[o>>2]=0;k=0;i=q;return k|0}}j=p+128|0;k=p;do{if((c[k>>2]|0)==(b|0)){j=k;break}k=k+4|0}while((k|0)!=(j|0));b=j-p|0;j=b>>2;if((b|0)>124){k=-1;i=q;return k|0}p=a[262016+j>>0]|0;if((j|0)==23|(j|0)==22)a[f>>0]=80;else if(!((j|0)==24|(j|0)==25)){g=p&95;if((g|0)==(a[f>>0]|0)?(a[f>>0]=g|128,(a[e>>0]|0)!=0):0){a[e>>0]=0;f=a[l>>0]|0;if((f&1)==0)l=(f&255)>>>1;else l=c[l+4>>2]|0;if((l|0)!=0?(r=c[n>>2]|0,(r-m|0)<160):0){k=c[o>>2]|0;c[n>>2]=r+4;c[r>>2]=k}}}else{o=c[h>>2]|0;if((o|0)!=(g|0)?(d[o+ -1>>0]&95|0)!=(d[f>>0]&127|0):0){k=-1;i=q;return k|0}c[h>>2]=o+1;a[o>>0]=p;k=0;i=q;return k|0}k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=p;if((b|0)>84){k=0;i=q;return k|0}c[o>>2]=(c[o>>2]|0)+1;k=0;i=q;return k|0}function Iq(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function Jq(a){a=a|0;return}function Kq(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0;k=i;i=i+32|0;m=k+20|0;n=k+16|0;l=k+12|0;j=k;if((c[f+4>>2]&1|0)==0){l=c[(c[d>>2]|0)+24>>2]|0;c[n>>2]=c[e>>2];o=h&1;c[m+0>>2]=c[n+0>>2];ec[l&15](b,d,m,f,g,o);i=k;return}jo(l,f);g=Pu(l,263648)|0;nn(c[l>>2]|0)|0;l=c[g>>2]|0;if(h)Wb[c[l+24>>2]&63](j,g);else Wb[c[l+28>>2]&63](j,g);f=a[j>>0]|0;if((f&1)==0){h=j+1|0;l=j+8|0;m=h}else{m=j+8|0;l=m;m=c[m>>2]|0;h=j+1|0}g=j+4|0;while(1){if((f&1)==0){f=(f&255)>>>1;d=h}else{f=c[g>>2]|0;d=c[l>>2]|0}if((m|0)==(d+f|0))break;d=a[m>>0]|0;o=c[e>>2]|0;do if((o|0)!=0){n=o+24|0;f=c[n>>2]|0;if((f|0)!=(c[o+28>>2]|0)){c[n>>2]=f+1;a[f>>0]=d;break}if((fc[c[(c[o>>2]|0)+52>>2]&15](o,d&255)|0)==-1)c[e>>2]=0}while(0);f=a[j>>0]|0;m=m+1|0}c[b>>2]=c[e>>2];Kn(j);i=k;return}function Lq(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;i=i+64|0;k=d;p=d+20|0;q=d+28|0;j=d+40|0;n=d+12|0;m=d+4|0;o=d+8|0;l=d+16|0;a[p+0>>0]=a[262296]|0;a[p+1>>0]=a[262297]|0;a[p+2>>0]=a[262298]|0;a[p+3>>0]=a[262299]|0;a[p+4>>0]=a[262300]|0;a[p+5>>0]=a[262301]|0;Mq(p+1|0,262200,1,c[f+4>>2]|0);r=dq()|0;c[k>>2]=h;h=q+(Nq(q,12,r,p,k)|0)|0;p=Oq(q,h,f)|0;jo(o,f);Pq(q,p,h,j,n,m,o);nn(c[o>>2]|0)|0;c[l>>2]=c[e>>2];e=c[n>>2]|0;h=c[m>>2]|0;c[k+0>>2]=c[l+0>>2];Qq(b,k,j,e,h,f,g);i=d;return}function Mq(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;if((e&2048|0)!=0){a[b>>0]=43;b=b+1|0}if((e&512|0)!=0){a[b>>0]=35;b=b+1|0}g=a[c>>0]|0;if(!(g<<24>>24==0))while(1){c=c+1|0;h=b+1|0;a[b>>0]=g;g=a[c>>0]|0;if(g<<24>>24==0){b=h;break}else b=h}c=e&74;if((c|0)==64){a[b>>0]=111;i=f;return}else if((c|0)==8)if((e&16384|0)==0){a[b>>0]=120;i=f;return}else{a[b>>0]=88;i=f;return}else if(d){a[b>>0]=100;i=f;return}else{a[b>>0]=117;i=f;return}}function Nq(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;i=i+16|0;h=g;c[h>>2]=f;d=_a(d|0)|0;e=cz(a,b,e,h)|0;if((d|0)==0){i=g;return e|0}_a(d|0)|0;i=g;return e|0}function Oq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;g=i;e=c[e+4>>2]&176;do if((e|0)!=32)if((e|0)==16){e=a[b>>0]|0;if(e<<24>>24==43|e<<24>>24==45){d=b+1|0;break}if((d-b|0)>1&e<<24>>24==48?(e=a[b+1>>0]|0,e<<24>>24==88|e<<24>>24==120):0)d=b+2|0;else f=7}else f=7;while(0);if((f|0)==7)d=b;i=g;return d|0}function Pq(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;l=i;i=i+16|0;k=l;n=Pu(j,263504)|0;o=Pu(j,263648)|0;Wb[c[(c[o>>2]|0)+20>>2]&63](k,o);j=a[k>>0]|0;if((j&1)==0)j=(j&255)>>>1;else j=c[k+4>>2]|0;if((j|0)!=0){c[h>>2]=f;j=a[b>>0]|0;if(j<<24>>24==43|j<<24>>24==45){v=fc[c[(c[n>>2]|0)+28>>2]&15](n,j)|0;j=c[h>>2]|0;c[h>>2]=j+1;a[j>>0]=v;j=b+1|0}else j=b;if(((e-j|0)>1?(a[j>>0]|0)==48:0)?(q=j+1|0,v=a[q>>0]|0,v<<24>>24==88|v<<24>>24==120):0){v=fc[c[(c[n>>2]|0)+28>>2]&15](n,48)|0;u=c[h>>2]|0;c[h>>2]=u+1;a[u>>0]=v;u=fc[c[(c[n>>2]|0)+28>>2]&15](n,a[q>>0]|0)|0;v=c[h>>2]|0;c[h>>2]=v+1;a[v>>0]=u;j=j+2|0}if((j|0)!=(e|0)?(p=e+ -1|0,p>>>0>j>>>0):0){q=j;do{v=a[q>>0]|0;a[q>>0]=a[p>>0]|0;a[p>>0]=v;q=q+1|0;p=p+ -1|0}while(q>>>0<p>>>0)}s=Yb[c[(c[o>>2]|0)+16>>2]&63](o)|0;if(j>>>0<e>>>0){o=k+1|0;r=k+4|0;q=k+8|0;u=0;t=0;p=j;while(1){v=(a[k>>0]&1)==0;if((a[(v?o:c[q>>2]|0)+t>>0]|0)!=0?(u|0)==(a[(v?o:c[q>>2]|0)+t>>0]|0):0){u=c[h>>2]|0;c[h>>2]=u+1;a[u>>0]=s;u=a[k>>0]|0;if((u&1)==0)v=(u&255)>>>1;else v=c[r>>2]|0;u=0;t=(t>>>0<(v+ -1|0)>>>0&1)+t|0}w=fc[c[(c[n>>2]|0)+28>>2]&15](n,a[p>>0]|0)|0;v=c[h>>2]|0;c[h>>2]=v+1;a[v>>0]=w;p=p+1|0;if(!(p>>>0<e>>>0))break;else u=u+1|0}}n=f+(j-b)|0;j=c[h>>2]|0;if((n|0)!=(j|0)?(m=j+ -1|0,m>>>0>n>>>0):0)do{w=a[n>>0]|0;a[n>>0]=a[m>>0]|0;a[m>>0]=w;n=n+1|0;m=m+ -1|0}while(n>>>0<m>>>0)}else{cc[c[(c[n>>2]|0)+32>>2]&7](n,b,e,f)|0;c[h>>2]=f+(e-b)}if((d|0)==(e|0)){w=c[h>>2]|0;c[g>>2]=w;Kn(k);i=l;return}else{w=f+(d-b)|0;c[g>>2]=w;Kn(k);i=l;return}}function Qq(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0;l=i;i=i+16|0;m=l;k=c[d>>2]|0;if((k|0)==0){c[b>>2]=0;i=l;return}p=e;n=g-p|0;h=h+12|0;o=c[h>>2]|0;n=(o|0)>(n|0)?o-n|0:0;o=f;p=o-p|0;if((p|0)>0?(Sb[c[(c[k>>2]|0)+48>>2]&31](k,e,p)|0)!=(p|0):0){c[d>>2]=0;c[b>>2]=0;i=l;return}do if((n|0)>0){In(m,n,j);if((a[m>>0]&1)==0)e=m+1|0;else e=c[m+8>>2]|0;if((Sb[c[(c[k>>2]|0)+48>>2]&31](k,e,n)|0)==(n|0)){Kn(m);break}c[d>>2]=0;c[b>>2]=0;Kn(m);i=l;return}while(0);m=g-o|0;if((m|0)>0?(Sb[c[(c[k>>2]|0)+48>>2]&31](k,f,m)|0)!=(m|0):0){c[d>>2]=0;c[b>>2]=0;i=l;return}c[h>>2]=0;c[b>>2]=k;i=l;return}function Rq(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=i;i=i+96|0;k=b;q=b+8|0;p=b+32|0;j=b+54|0;n=b+16|0;m=b+24|0;o=b+20|0;l=b+28|0;r=q;c[r>>2]=37;c[r+4>>2]=0;Mq(q+1|0,262208,1,c[e+4>>2]|0);r=dq()|0;s=k;c[s>>2]=g;c[s+4>>2]=h;h=p+(Nq(p,22,r,q,k)|0)|0;g=Oq(p,h,e)|0;jo(o,e);Pq(p,g,h,j,n,m,o);nn(c[o>>2]|0)|0;c[l>>2]=c[d>>2];h=c[n>>2]|0;g=c[m>>2]|0;c[k+0>>2]=c[l+0>>2];Qq(a,k,j,h,g,e,f);i=b;return}function Sq(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;i=i+64|0;k=d;p=d+20|0;q=d+28|0;j=d+40|0;n=d+12|0;m=d+4|0;o=d+8|0;l=d+16|0;a[p+0>>0]=a[262296]|0;a[p+1>>0]=a[262297]|0;a[p+2>>0]=a[262298]|0;a[p+3>>0]=a[262299]|0;a[p+4>>0]=a[262300]|0;a[p+5>>0]=a[262301]|0;Mq(p+1|0,262200,0,c[f+4>>2]|0);r=dq()|0;c[k>>2]=h;h=q+(Nq(q,12,r,p,k)|0)|0;p=Oq(q,h,f)|0;jo(o,f);Pq(q,p,h,j,n,m,o);nn(c[o>>2]|0)|0;c[l>>2]=c[e>>2];e=c[n>>2]|0;h=c[m>>2]|0;c[k+0>>2]=c[l+0>>2];Qq(b,k,j,e,h,f,g);i=d;return}function Tq(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=i;i=i+112|0;k=b;q=b+8|0;p=b+32|0;j=b+55|0;n=b+16|0;m=b+24|0;o=b+20|0;l=b+28|0;r=q;c[r>>2]=37;c[r+4>>2]=0;Mq(q+1|0,262208,0,c[e+4>>2]|0);r=dq()|0;s=k;c[s>>2]=g;c[s+4>>2]=h;h=p+(Nq(p,23,r,q,k)|0)|0;g=Oq(p,h,e)|0;jo(o,e);Pq(p,g,h,j,n,m,o);nn(c[o>>2]|0)|0;c[l>>2]=c[d>>2];h=c[n>>2]|0;g=c[m>>2]|0;c[k+0>>2]=c[l+0>>2];Qq(a,k,j,h,g,e,f);i=b;return}function Uq(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=+g;var j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;p=i;i=i+144|0;s=p+8|0;z=p;x=p+44|0;y=p+36|0;w=p+74|0;u=p+20|0;b=p+32|0;q=p+28|0;r=p+24|0;t=p+40|0;B=z;c[B>>2]=37;c[B+4>>2]=0;B=Vq(z+1|0,262216,c[e+4>>2]|0)|0;c[y>>2]=x;A=dq()|0;if(B){c[s>>2]=c[e+8>>2];B=s+4|0;h[k>>3]=g;c[B>>2]=c[k>>2];c[B+4>>2]=c[k+4>>2];A=Nq(x,30,A,z,s)|0}else{h[k>>3]=g;c[s>>2]=c[k>>2];c[s+4>>2]=c[k+4>>2];A=Nq(x,30,A,z,s)|0}if((A|0)>29){B=dq()|0;c[s>>2]=c[e+8>>2];A=s+4|0;h[k>>3]=g;c[A>>2]=c[k>>2];c[A+4>>2]=c[k+4>>2];z=Wq(y,B,z,s)|0;y=c[y>>2]|0;if((y|0)==0)Cy();else{j=y;l=y;v=z}}else{j=0;l=c[y>>2]|0;v=A}z=l+v|0;y=Oq(l,z,e)|0;if((l|0)!=(x|0)){v=Dy(v<<1)|0;if((v|0)==0)Cy();else{m=v;o=l;n=v}}else{m=0;o=x;n=w}jo(q,e);Xq(o,y,z,n,u,b,q);nn(c[q>>2]|0)|0;c[t>>2]=c[d>>2];A=c[u>>2]|0;B=c[b>>2]|0;c[s+0>>2]=c[t+0>>2];Qq(r,s,n,A,B,e,f);B=c[r>>2]|0;c[d>>2]=B;c[a>>2]=B;if((m|0)!=0)Ey(m);if((j|0)==0){i=p;return}Ey(j);i=p;return}function Vq(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;if((d&2048|0)!=0){a[b>>0]=43;b=b+1|0}if((d&1024|0)!=0){a[b>>0]=35;b=b+1|0}f=d&260;h=d>>>14;d=(f|0)==260;if(d)g=0;else{a[b>>0]=46;a[b+1>>0]=42;b=b+2|0;g=1}j=a[c>>0]|0;if(!(j<<24>>24==0))while(1){c=c+1|0;k=b+1|0;a[b>>0]=j;j=a[c>>0]|0;if(j<<24>>24==0){b=k;break}else b=k}do if((f|0)==4)if((h&1|0)==0){a[b>>0]=102;break}else{a[b>>0]=70;break}else if((f|0)==256)if((h&1|0)==0){a[b>>0]=101;break}else{a[b>>0]=69;break}else{f=(h&1|0)!=0;if(d)if(f){a[b>>0]=65;break}else{a[b>>0]=97;break}else if(f){a[b>>0]=71;break}else{a[b>>0]=103;break}}while(0);i=e;return g|0}function Wq(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;c[g>>2]=e;b=_a(b|0)|0;d=tx(a,d,g)|0;if((b|0)==0){i=f;return d|0}_a(b|0)|0;i=f;return d|0}function Xq(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;k=i;i=i+16|0;l=k;m=Pu(j,263504)|0;n=Pu(j,263648)|0;Wb[c[(c[n>>2]|0)+20>>2]&63](l,n);c[h>>2]=f;j=a[b>>0]|0;if(j<<24>>24==43|j<<24>>24==45){y=fc[c[(c[m>>2]|0)+28>>2]&15](m,j)|0;t=c[h>>2]|0;c[h>>2]=t+1;a[t>>0]=y;t=b+1|0}else t=b;j=e;a:do if(((j-t|0)>1?(a[t>>0]|0)==48:0)?(p=t+1|0,y=a[p>>0]|0,y<<24>>24==88|y<<24>>24==120):0){y=fc[c[(c[m>>2]|0)+28>>2]&15](m,48)|0;x=c[h>>2]|0;c[h>>2]=x+1;a[x>>0]=y;t=t+2|0;x=fc[c[(c[m>>2]|0)+28>>2]&15](m,a[p>>0]|0)|0;y=c[h>>2]|0;c[h>>2]=y+1;a[y>>0]=x;if(t>>>0<e>>>0){q=t;while(1){y=a[q>>0]|0;u=q+1|0;if((ix(y<<24>>24,dq()|0)|0)==0){p=t;break a}if(u>>>0<e>>>0)q=u;else{p=t;q=u;break}}}else{p=t;q=t}}else s=4;while(0);b:do if((s|0)==4)if(t>>>0<e>>>0){q=t;while(1){y=a[q>>0]|0;s=q+1|0;if((hx(y<<24>>24,dq()|0)|0)==0){p=t;break b}if(s>>>0<e>>>0)q=s;else{p=t;q=s;break}}}else{p=t;q=t}while(0);s=a[l>>0]|0;if((s&1)==0)s=(s&255)>>>1;else s=c[l+4>>2]|0;if((s|0)!=0){if((p|0)!=(q|0)?(r=q+ -1|0,r>>>0>p>>>0):0){s=p;do{y=a[s>>0]|0;a[s>>0]=a[r>>0]|0;a[r>>0]=y;s=s+1|0;r=r+ -1|0}while(s>>>0<r>>>0)}v=Yb[c[(c[n>>2]|0)+16>>2]&63](n)|0;if(p>>>0<q>>>0){t=l+1|0;u=l+4|0;s=l+8|0;x=0;w=0;r=p;while(1){y=(a[l>>0]&1)==0;if((a[(y?t:c[s>>2]|0)+w>>0]|0)>0?(x|0)==(a[(y?t:c[s>>2]|0)+w>>0]|0):0){x=c[h>>2]|0;c[h>>2]=x+1;a[x>>0]=v;x=a[l>>0]|0;if((x&1)==0)y=(x&255)>>>1;else y=c[u>>2]|0;x=0;w=(w>>>0<(y+ -1|0)>>>0&1)+w|0}z=fc[c[(c[m>>2]|0)+28>>2]&15](m,a[r>>0]|0)|0;y=c[h>>2]|0;c[h>>2]=y+1;a[y>>0]=z;r=r+1|0;if(!(r>>>0<q>>>0))break;else x=x+1|0}}r=f+(p-b)|0;p=c[h>>2]|0;if((r|0)!=(p|0)?(o=p+ -1|0,o>>>0>r>>>0):0)do{z=a[r>>0]|0;a[r>>0]=a[o>>0]|0;a[o>>0]=z;r=r+1|0;o=o+ -1|0}while(r>>>0<o>>>0)}else{cc[c[(c[m>>2]|0)+32>>2]&7](m,p,q,c[h>>2]|0)|0;c[h>>2]=(c[h>>2]|0)+(q-p)}c:do if(q>>>0<e>>>0){while(1){o=a[q>>0]|0;if(o<<24>>24==46)break;y=fc[c[(c[m>>2]|0)+28>>2]&15](m,o)|0;z=c[h>>2]|0;c[h>>2]=z+1;a[z>>0]=y;q=q+1|0;if(!(q>>>0<e>>>0))break c}y=Yb[c[(c[n>>2]|0)+12>>2]&63](n)|0;z=c[h>>2]|0;c[h>>2]=z+1;a[z>>0]=y;q=q+1|0}while(0);cc[c[(c[m>>2]|0)+32>>2]&7](m,q,e,c[h>>2]|0)|0;m=(c[h>>2]|0)+(j-q)|0;c[h>>2]=m;if((d|0)==(e|0)){z=m;c[g>>2]=z;Kn(l);i=k;return}z=f+(d-b)|0;c[g>>2]=z;Kn(l);i=k;return}function Yq(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=+g;var j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;t=i;i=i+144|0;r=t+8|0;A=t;x=t+44|0;y=t+36|0;w=t+74|0;b=t+20|0;p=t+32|0;v=t+28|0;s=t+24|0;q=t+40|0;z=A;c[z>>2]=37;c[z+4>>2]=0;z=Vq(A+1|0,262224,c[e+4>>2]|0)|0;c[y>>2]=x;B=dq()|0;if(z){c[r>>2]=c[e+8>>2];C=r+4|0;h[k>>3]=g;c[C>>2]=c[k>>2];c[C+4>>2]=c[k+4>>2];B=Nq(x,30,B,A,r)|0}else{h[k>>3]=g;c[r>>2]=c[k>>2];c[r+4>>2]=c[k+4>>2];B=Nq(x,30,B,A,r)|0}if((B|0)>29){B=dq()|0;if(z){c[r>>2]=c[e+8>>2];z=r+4|0;h[k>>3]=g;c[z>>2]=c[k>>2];c[z+4>>2]=c[k+4>>2];z=Wq(y,B,A,r)|0}else{h[k>>3]=g;c[r>>2]=c[k>>2];c[r+4>>2]=c[k+4>>2];z=Wq(y,B,A,r)|0}y=c[y>>2]|0;if((y|0)==0)Cy();else{o=y;n=y;u=z}}else{o=0;n=c[y>>2]|0;u=B}z=n+u|0;y=Oq(n,z,e)|0;if((n|0)!=(x|0)){u=Dy(u<<1)|0;if((u|0)==0)Cy();else{j=u;m=n;l=u}}else{j=0;m=x;l=w}jo(v,e);Xq(m,y,z,l,b,p,v);nn(c[v>>2]|0)|0;c[q>>2]=c[d>>2];B=c[b>>2]|0;C=c[p>>2]|0;c[r+0>>2]=c[q+0>>2];Qq(s,r,l,B,C,e,f);c[a>>2]=c[s>>2];Ey(j);Ey(o);i=t;return}function Zq(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;l=i;i=i+80|0;j=l;n=l+72|0;m=l+52|0;d=l+12|0;q=l+8|0;k=l+4|0;a[n+0>>0]=a[262304]|0;a[n+1>>0]=a[262305]|0;a[n+2>>0]=a[262306]|0;a[n+3>>0]=a[262307]|0;a[n+4>>0]=a[262308]|0;a[n+5>>0]=a[262309]|0;o=dq()|0;c[j>>2]=h;n=Nq(m,20,o,n,j)|0;o=m+n|0;h=Oq(m,o,f)|0;jo(q,f);p=Pu(q,263504)|0;nn(c[q>>2]|0)|0;cc[c[(c[p>>2]|0)+32>>2]&7](p,m,o,d)|0;n=d+n|0;if((h|0)==(o|0)){q=n;p=c[e>>2]|0;c[k>>2]=p;c[j+0>>2]=c[k+0>>2];Qq(b,j,d,q,n,f,g);i=l;return}q=d+(h-m)|0;p=c[e>>2]|0;c[k>>2]=p;c[j+0>>2]=c[k+0>>2];Qq(b,j,d,q,n,f,g);i=l;return}function _q(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function $q(a){a=a|0;return}function ar(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+32|0;m=j+20|0;n=j+16|0;l=j+12|0;k=j;if((c[f+4>>2]&1|0)==0){k=c[(c[d>>2]|0)+24>>2]|0;c[n>>2]=c[e>>2];l=h&1;c[m+0>>2]=c[n+0>>2];ec[k&15](b,d,m,f,g,l);i=j;return}jo(l,f);f=Pu(l,263656)|0;nn(c[l>>2]|0)|0;l=c[f>>2]|0;if(h)Wb[c[l+24>>2]&63](k,f);else Wb[c[l+28>>2]&63](k,f);m=a[k>>0]|0;if((m&1)==0){f=k+4|0;h=f;l=k+8|0}else{f=k+8|0;h=k+4|0;l=f;f=c[f>>2]|0}while(1){if((m&1)==0){m=(m&255)>>>1;d=h}else{m=c[h>>2]|0;d=c[l>>2]|0}if((f|0)==(d+(m<<2)|0))break;d=c[f>>2]|0;g=c[e>>2]|0;if((g|0)!=0){m=g+24|0;n=c[m>>2]|0;if((n|0)==(c[g+28>>2]|0))d=fc[c[(c[g>>2]|0)+52>>2]&15](g,d)|0;else{c[m>>2]=n+4;c[n>>2]=d}if((d|0)==-1)c[e>>2]=0}m=a[k>>0]|0;f=f+4|0}c[b>>2]=c[e>>2];Zn(k);i=j;return}function br(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;i=i+128|0;k=d;p=d+104|0;q=d+112|0;j=d+8|0;n=d+4|0;m=d+96|0;o=d+92|0;l=d+100|0;a[p+0>>0]=a[262296]|0;a[p+1>>0]=a[262297]|0;a[p+2>>0]=a[262298]|0;a[p+3>>0]=a[262299]|0;a[p+4>>0]=a[262300]|0;a[p+5>>0]=a[262301]|0;Mq(p+1|0,262200,1,c[f+4>>2]|0);r=dq()|0;c[k>>2]=h;h=q+(Nq(q,12,r,p,k)|0)|0;p=Oq(q,h,f)|0;jo(o,f);cr(q,p,h,j,n,m,o);nn(c[o>>2]|0)|0;c[l>>2]=c[e>>2];e=c[n>>2]|0;h=c[m>>2]|0;c[k+0>>2]=c[l+0>>2];dr(b,k,j,e,h,f,g);i=d;return}function cr(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;l=i;i=i+16|0;k=l;n=Pu(j,263496)|0;p=Pu(j,263656)|0;Wb[c[(c[p>>2]|0)+20>>2]&63](k,p);j=a[k>>0]|0;if((j&1)==0)j=(j&255)>>>1;else j=c[k+4>>2]|0;if((j|0)!=0){c[h>>2]=f;j=a[b>>0]|0;if(j<<24>>24==43|j<<24>>24==45){v=fc[c[(c[n>>2]|0)+44>>2]&15](n,j)|0;j=c[h>>2]|0;c[h>>2]=j+4;c[j>>2]=v;j=b+1|0}else j=b;if(((e-j|0)>1?(a[j>>0]|0)==48:0)?(q=j+1|0,v=a[q>>0]|0,v<<24>>24==88|v<<24>>24==120):0){v=fc[c[(c[n>>2]|0)+44>>2]&15](n,48)|0;u=c[h>>2]|0;c[h>>2]=u+4;c[u>>2]=v;u=fc[c[(c[n>>2]|0)+44>>2]&15](n,a[q>>0]|0)|0;v=c[h>>2]|0;c[h>>2]=v+4;c[v>>2]=u;j=j+2|0}if((j|0)!=(e|0)?(o=e+ -1|0,o>>>0>j>>>0):0){q=j;do{v=a[q>>0]|0;a[q>>0]=a[o>>0]|0;a[o>>0]=v;q=q+1|0;o=o+ -1|0}while(q>>>0<o>>>0)}s=Yb[c[(c[p>>2]|0)+16>>2]&63](p)|0;if(j>>>0<e>>>0){o=k+1|0;r=k+4|0;q=k+8|0;t=0;u=0;p=j;while(1){v=(a[k>>0]&1)==0;if((a[(v?o:c[q>>2]|0)+u>>0]|0)!=0?(t|0)==(a[(v?o:c[q>>2]|0)+u>>0]|0):0){t=c[h>>2]|0;c[h>>2]=t+4;c[t>>2]=s;t=a[k>>0]|0;if((t&1)==0)v=(t&255)>>>1;else v=c[r>>2]|0;t=0;u=(u>>>0<(v+ -1|0)>>>0&1)+u|0}x=fc[c[(c[n>>2]|0)+44>>2]&15](n,a[p>>0]|0)|0;w=c[h>>2]|0;v=w+4|0;c[h>>2]=v;c[w>>2]=x;p=p+1|0;if(!(p>>>0<e>>>0))break;else t=t+1|0}}else v=c[h>>2]|0;n=f+(j-b<<2)|0;if((n|0)!=(v|0)?(m=v+ -4|0,m>>>0>n>>>0):0)do{x=c[n>>2]|0;c[n>>2]=c[m>>2];c[m>>2]=x;n=n+4|0;m=m+ -4|0}while(n>>>0<m>>>0)}else{cc[c[(c[n>>2]|0)+48>>2]&7](n,b,e,f)|0;v=f+(e-b<<2)|0;c[h>>2]=v}if((d|0)==(e|0)){x=v;c[g>>2]=x;Kn(k);i=l;return}x=f+(d-b<<2)|0;c[g>>2]=x;Kn(k);i=l;return}function dr(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0;l=i;i=i+16|0;m=l;k=c[d>>2]|0;if((k|0)==0){c[b>>2]=0;i=l;return}q=e;n=g-q>>2;h=h+12|0;o=c[h>>2]|0;n=(o|0)>(n|0)?o-n|0:0;o=f;q=o-q|0;p=q>>2;if((q|0)>0?(Sb[c[(c[k>>2]|0)+48>>2]&31](k,e,p)|0)!=(p|0):0){c[d>>2]=0;c[b>>2]=0;i=l;return}do if((n|0)>0){Xn(m,n,j);if((a[m>>0]&1)==0)e=m+4|0;else e=c[m+8>>2]|0;if((Sb[c[(c[k>>2]|0)+48>>2]&31](k,e,n)|0)==(n|0)){Zn(m);break}c[d>>2]=0;c[b>>2]=0;Zn(m);i=l;return}while(0);q=g-o|0;m=q>>2;if((q|0)>0?(Sb[c[(c[k>>2]|0)+48>>2]&31](k,f,m)|0)!=(m|0):0){c[d>>2]=0;c[b>>2]=0;i=l;return}c[h>>2]=0;c[b>>2]=k;i=l;return}function er(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=i;i=i+224|0;k=b;q=b+8|0;p=b+196|0;j=b+24|0;n=b+20|0;m=b+16|0;o=b+188|0;l=b+192|0;r=q;c[r>>2]=37;c[r+4>>2]=0;Mq(q+1|0,262208,1,c[e+4>>2]|0);r=dq()|0;s=k;c[s>>2]=g;c[s+4>>2]=h;h=p+(Nq(p,22,r,q,k)|0)|0;g=Oq(p,h,e)|0;jo(o,e);cr(p,g,h,j,n,m,o);nn(c[o>>2]|0)|0;c[l>>2]=c[d>>2];h=c[n>>2]|0;g=c[m>>2]|0;c[k+0>>2]=c[l+0>>2];dr(a,k,j,h,g,e,f);i=b;return}function fr(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;i=i+128|0;k=d;p=d+104|0;q=d+112|0;j=d+8|0;n=d+4|0;m=d+96|0;o=d+92|0;l=d+100|0;a[p+0>>0]=a[262296]|0;a[p+1>>0]=a[262297]|0;a[p+2>>0]=a[262298]|0;a[p+3>>0]=a[262299]|0;a[p+4>>0]=a[262300]|0;a[p+5>>0]=a[262301]|0;Mq(p+1|0,262200,0,c[f+4>>2]|0);r=dq()|0;c[k>>2]=h;h=q+(Nq(q,12,r,p,k)|0)|0;p=Oq(q,h,f)|0;jo(o,f);cr(q,p,h,j,n,m,o);nn(c[o>>2]|0)|0;c[l>>2]=c[e>>2];e=c[n>>2]|0;h=c[m>>2]|0;c[k+0>>2]=c[l+0>>2];dr(b,k,j,e,h,f,g);i=d;return}function gr(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=i;i=i+240|0;k=b;q=b+8|0;p=b+204|0;j=b+24|0;n=b+20|0;m=b+16|0;o=b+196|0;l=b+200|0;r=q;c[r>>2]=37;c[r+4>>2]=0;Mq(q+1|0,262208,0,c[e+4>>2]|0);r=dq()|0;s=k;c[s>>2]=g;c[s+4>>2]=h;h=p+(Nq(p,23,r,q,k)|0)|0;g=Oq(p,h,e)|0;jo(o,e);cr(p,g,h,j,n,m,o);nn(c[o>>2]|0)|0;c[l>>2]=c[d>>2];h=c[n>>2]|0;g=c[m>>2]|0;c[k+0>>2]=c[l+0>>2];dr(a,k,j,h,g,e,f);i=b;return}function hr(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=+g;var j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;r=i;i=i+320|0;u=r;z=r+16|0;w=r+276|0;y=r+36|0;x=r+44|0;p=r+24|0;b=r+32|0;s=r+40|0;t=r+28|0;v=r+272|0;B=z;c[B>>2]=37;c[B+4>>2]=0;B=Vq(z+1|0,262216,c[e+4>>2]|0)|0;c[y>>2]=w;A=dq()|0;if(B){c[u>>2]=c[e+8>>2];B=u+4|0;h[k>>3]=g;c[B>>2]=c[k>>2];c[B+4>>2]=c[k+4>>2];A=Nq(w,30,A,z,u)|0}else{h[k>>3]=g;c[u>>2]=c[k>>2];c[u+4>>2]=c[k+4>>2];A=Nq(w,30,A,z,u)|0}if((A|0)>29){B=dq()|0;c[u>>2]=c[e+8>>2];A=u+4|0;h[k>>3]=g;c[A>>2]=c[k>>2];c[A+4>>2]=c[k+4>>2];z=Wq(y,B,z,u)|0;y=c[y>>2]|0;if((y|0)==0)Cy();else{j=y;l=y;q=z}}else{j=0;l=c[y>>2]|0;q=A}z=l+q|0;y=Oq(l,z,e)|0;if((l|0)!=(w|0)){q=Dy(q<<3)|0;if((q|0)==0)Cy();else{m=q;o=l;n=q}}else{m=0;o=w;n=x}jo(s,e);ir(o,y,z,n,p,b,s);nn(c[s>>2]|0)|0;c[v>>2]=c[d>>2];A=c[p>>2]|0;B=c[b>>2]|0;c[u+0>>2]=c[v+0>>2];dr(t,u,n,A,B,e,f);B=c[t>>2]|0;c[d>>2]=B;c[a>>2]=B;if((m|0)==0){Ey(j);i=r;return}Ey(m);Ey(j);i=r;return}function ir(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;k=i;i=i+16|0;l=k;m=Pu(j,263496)|0;n=Pu(j,263656)|0;Wb[c[(c[n>>2]|0)+20>>2]&63](l,n);c[h>>2]=f;j=a[b>>0]|0;if(j<<24>>24==43|j<<24>>24==45){y=fc[c[(c[m>>2]|0)+44>>2]&15](m,j)|0;t=c[h>>2]|0;c[h>>2]=t+4;c[t>>2]=y;t=b+1|0}else t=b;j=e;a:do if(((j-t|0)>1?(a[t>>0]|0)==48:0)?(p=t+1|0,y=a[p>>0]|0,y<<24>>24==88|y<<24>>24==120):0){y=fc[c[(c[m>>2]|0)+44>>2]&15](m,48)|0;x=c[h>>2]|0;c[h>>2]=x+4;c[x>>2]=y;t=t+2|0;x=fc[c[(c[m>>2]|0)+44>>2]&15](m,a[p>>0]|0)|0;y=c[h>>2]|0;c[h>>2]=y+4;c[y>>2]=x;if(t>>>0<e>>>0){q=t;while(1){y=a[q>>0]|0;u=q+1|0;if((ix(y<<24>>24,dq()|0)|0)==0){p=t;break a}if(u>>>0<e>>>0)q=u;else{p=t;q=u;break}}}else{p=t;q=t}}else s=4;while(0);b:do if((s|0)==4)if(t>>>0<e>>>0){q=t;while(1){y=a[q>>0]|0;s=q+1|0;if((hx(y<<24>>24,dq()|0)|0)==0){p=t;break b}if(s>>>0<e>>>0)q=s;else{p=t;q=s;break}}}else{p=t;q=t}while(0);s=a[l>>0]|0;if((s&1)==0)s=(s&255)>>>1;else s=c[l+4>>2]|0;if((s|0)!=0){if((p|0)!=(q|0)?(r=q+ -1|0,r>>>0>p>>>0):0){s=p;do{y=a[s>>0]|0;a[s>>0]=a[r>>0]|0;a[r>>0]=y;s=s+1|0;r=r+ -1|0}while(s>>>0<r>>>0)}u=Yb[c[(c[n>>2]|0)+16>>2]&63](n)|0;if(p>>>0<q>>>0){r=l+1|0;t=l+4|0;s=l+8|0;x=0;w=0;v=p;while(1){y=(a[l>>0]&1)==0;if((a[(y?r:c[s>>2]|0)+w>>0]|0)>0?(x|0)==(a[(y?r:c[s>>2]|0)+w>>0]|0):0){x=c[h>>2]|0;c[h>>2]=x+4;c[x>>2]=u;x=a[l>>0]|0;if((x&1)==0)y=(x&255)>>>1;else y=c[t>>2]|0;x=0;w=(w>>>0<(y+ -1|0)>>>0&1)+w|0}A=fc[c[(c[m>>2]|0)+44>>2]&15](m,a[v>>0]|0)|0;z=c[h>>2]|0;y=z+4|0;c[h>>2]=y;c[z>>2]=A;v=v+1|0;if(!(v>>>0<q>>>0))break;else x=x+1|0}}else y=c[h>>2]|0;p=f+(p-b<<2)|0;if((p|0)!=(y|0)?(o=y+ -4|0,o>>>0>p>>>0):0)do{A=c[p>>2]|0;c[p>>2]=c[o>>2];c[o>>2]=A;p=p+4|0;o=o+ -4|0}while(p>>>0<o>>>0)}else{cc[c[(c[m>>2]|0)+48>>2]&7](m,p,q,c[h>>2]|0)|0;y=(c[h>>2]|0)+(q-p<<2)|0;c[h>>2]=y}c:do if(q>>>0<e>>>0){while(1){o=a[q>>0]|0;if(o<<24>>24==46)break;z=fc[c[(c[m>>2]|0)+44>>2]&15](m,o)|0;A=c[h>>2]|0;y=A+4|0;c[h>>2]=y;c[A>>2]=z;q=q+1|0;if(!(q>>>0<e>>>0))break c}z=Yb[c[(c[n>>2]|0)+12>>2]&63](n)|0;A=c[h>>2]|0;y=A+4|0;c[h>>2]=y;c[A>>2]=z;q=q+1|0}while(0);cc[c[(c[m>>2]|0)+48>>2]&7](m,q,e,y)|0;m=(c[h>>2]|0)+(j-q<<2)|0;c[h>>2]=m;if((d|0)==(e|0)){A=m;c[g>>2]=A;Kn(l);i=k;return}A=f+(d-b<<2)|0;c[g>>2]=A;Kn(l);i=k;return}function jr(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=+g;var j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;s=i;i=i+320|0;v=s;A=s+16|0;x=s+276|0;y=s+36|0;w=s+44|0;p=s+24|0;b=s+32|0;t=s+40|0;u=s+28|0;r=s+272|0;z=A;c[z>>2]=37;c[z+4>>2]=0;z=Vq(A+1|0,262224,c[e+4>>2]|0)|0;c[y>>2]=x;B=dq()|0;if(z){c[v>>2]=c[e+8>>2];C=v+4|0;h[k>>3]=g;c[C>>2]=c[k>>2];c[C+4>>2]=c[k+4>>2];B=Nq(x,30,B,A,v)|0}else{h[k>>3]=g;c[v>>2]=c[k>>2];c[v+4>>2]=c[k+4>>2];B=Nq(x,30,B,A,v)|0}if((B|0)>29){B=dq()|0;if(z){c[v>>2]=c[e+8>>2];z=v+4|0;h[k>>3]=g;c[z>>2]=c[k>>2];c[z+4>>2]=c[k+4>>2];z=Wq(y,B,A,v)|0}else{h[k>>3]=g;c[v>>2]=c[k>>2];c[v+4>>2]=c[k+4>>2];z=Wq(y,B,A,v)|0}y=c[y>>2]|0;if((y|0)==0)Cy();else{j=y;l=y;q=z}}else{j=0;l=c[y>>2]|0;q=B}z=l+q|0;y=Oq(l,z,e)|0;if((l|0)!=(x|0)){q=Dy(q<<3)|0;if((q|0)==0)Cy();else{m=q;o=l;n=q}}else{m=0;o=x;n=w}jo(t,e);ir(o,y,z,n,p,b,t);nn(c[t>>2]|0)|0;c[r>>2]=c[d>>2];B=c[p>>2]|0;C=c[b>>2]|0;c[v+0>>2]=c[r+0>>2];dr(u,v,n,B,C,e,f);C=c[u>>2]|0;c[d>>2]=C;c[a>>2]=C;if((m|0)==0){Ey(j);i=s;return}Ey(m);Ey(j);i=s;return}function kr(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;l=i;i=i+192|0;j=l;n=l+180|0;m=l+160|0;d=l+12|0;q=l+8|0;k=l+4|0;a[n+0>>0]=a[262304]|0;a[n+1>>0]=a[262305]|0;a[n+2>>0]=a[262306]|0;a[n+3>>0]=a[262307]|0;a[n+4>>0]=a[262308]|0;a[n+5>>0]=a[262309]|0;o=dq()|0;c[j>>2]=h;n=Nq(m,20,o,n,j)|0;o=m+n|0;h=Oq(m,o,f)|0;jo(q,f);p=Pu(q,263496)|0;nn(c[q>>2]|0)|0;cc[c[(c[p>>2]|0)+48>>2]&7](p,m,o,d)|0;n=d+(n<<2)|0;if((h|0)==(o|0)){q=n;p=c[e>>2]|0;c[k>>2]=p;c[j+0>>2]=c[k+0>>2];dr(b,j,d,q,n,f,g);i=l;return}q=d+(h-m<<2)|0;p=c[e>>2]|0;c[k>>2]=p;c[j+0>>2]=c[k+0>>2];dr(b,j,d,q,n,f,g);i=l;return}function lr(e,f,g,h,j,k,l,m,n){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;p=i;i=i+32|0;t=p+20|0;r=p+16|0;D=p+12|0;w=p+8|0;s=p+4|0;q=p;jo(D,j);v=Pu(D,263504)|0;nn(c[D>>2]|0)|0;c[k>>2]=0;a:do if((m|0)!=(n|0)){x=v+8|0;y=0;b:while(1){while(1){if((y|0)!=0){o=60;break a}y=c[g>>2]|0;if((y|0)!=0){if((c[y+12>>2]|0)==(c[y+16>>2]|0)?(Yb[c[(c[y>>2]|0)+36>>2]&63](y)|0)==-1:0){c[g>>2]=0;y=0}}else y=0;A=(y|0)==0;z=c[h>>2]|0;do if((z|0)!=0){if((c[z+12>>2]|0)==(c[z+16>>2]|0)?(Yb[c[(c[z>>2]|0)+36>>2]&63](z)|0)==-1:0){c[h>>2]=0;o=14;break}if(!A){o=15;break b}}else o=14;while(0);if((o|0)==14){o=0;if(A){o=15;break b}else z=0}if((Sb[c[(c[v>>2]|0)+36>>2]&31](v,a[m>>0]|0,0)|0)<<24>>24==37){o=17;break}A=a[m>>0]|0;if(A<<24>>24>-1?(u=c[x>>2]|0,!((b[u+(A<<24>>24<<1)>>1]&8192)==0)):0){o=28;break}z=y+12|0;B=c[z>>2]|0;A=y+16|0;if((B|0)==(c[A>>2]|0))B=Yb[c[(c[y>>2]|0)+36>>2]&63](y)|0;else B=d[B>>0]|0;D=fc[c[(c[v>>2]|0)+12>>2]&15](v,B&255)|0;if(D<<24>>24==(fc[c[(c[v>>2]|0)+12>>2]&15](v,a[m>>0]|0)|0)<<24>>24){o=55;break}c[k>>2]=4;y=4}c:do if((o|0)==17){o=0;B=m+1|0;if((B|0)==(n|0)){o=18;break b}A=Sb[c[(c[v>>2]|0)+36>>2]&31](v,a[B>>0]|0,0)|0;if(A<<24>>24==48|A<<24>>24==69){B=m+2|0;if((B|0)==(n|0)){o=21;break b}m=Sb[c[(c[v>>2]|0)+36>>2]&31](v,a[B>>0]|0,0)|0}else{m=A;A=0}D=c[(c[f>>2]|0)+36>>2]|0;c[s>>2]=y;c[q>>2]=z;c[r+0>>2]=c[s+0>>2];c[t+0>>2]=c[q+0>>2];Xb[D&3](w,f,r,t,j,k,l,m,A);c[g>>2]=c[w>>2];m=B+1|0}else if((o|0)==28){while(1){o=0;m=m+1|0;if((m|0)==(n|0)){m=n;break}A=a[m>>0]|0;if(!(A<<24>>24>-1))break;if((b[u+(A<<24>>24<<1)>>1]&8192)==0)break;else o=28}B=z;A=z;while(1){if((y|0)!=0){if((c[y+12>>2]|0)==(c[y+16>>2]|0)?(Yb[c[(c[y>>2]|0)+36>>2]&63](y)|0)==-1:0){c[g>>2]=0;y=0}}else y=0;C=(y|0)==0;do if((A|0)!=0){if((c[A+12>>2]|0)!=(c[A+16>>2]|0))if(C){z=B;break}else break c;if(!((Yb[c[(c[A>>2]|0)+36>>2]&63](A)|0)==-1))if(C^(B|0)==0){z=B;A=B;break}else break c;else{c[h>>2]=0;z=0;o=41;break}}else{z=B;o=41}while(0);if((o|0)==41){o=0;if(C)break c;else A=0}C=y+12|0;D=c[C>>2]|0;B=y+16|0;if((D|0)==(c[B>>2]|0))D=Yb[c[(c[y>>2]|0)+36>>2]&63](y)|0;else D=d[D>>0]|0;if(!((D&255)<<24>>24>-1))break c;if((b[(c[x>>2]|0)+(D<<24>>24<<1)>>1]&8192)==0)break c;D=c[C>>2]|0;if((D|0)==(c[B>>2]|0)){Yb[c[(c[y>>2]|0)+40>>2]&63](y)|0;B=z;continue}else{c[C>>2]=D+1;B=z;continue}}}else if((o|0)==55){o=0;B=c[z>>2]|0;if((B|0)==(c[A>>2]|0))Yb[c[(c[y>>2]|0)+40>>2]&63](y)|0;else c[z>>2]=B+1;m=m+1|0}while(0);if((m|0)==(n|0)){o=60;break a}y=c[k>>2]|0}if((o|0)==15){c[k>>2]=4;break}else if((o|0)==18){c[k>>2]=4;break}else if((o|0)==21){c[k>>2]=4;break}}else o=60;while(0);if((o|0)==60)y=c[g>>2]|0;if((y|0)!=0){if((c[y+12>>2]|0)==(c[y+16>>2]|0)?(Yb[c[(c[y>>2]|0)+36>>2]&63](y)|0)==-1:0){c[g>>2]=0;y=0}}else y=0;g=(y|0)==0;l=c[h>>2]|0;do if((l|0)!=0){if((c[l+12>>2]|0)==(c[l+16>>2]|0)?(Yb[c[(c[l>>2]|0)+36>>2]&63](l)|0)==-1:0){c[h>>2]=0;o=70;break}if(g){c[e>>2]=y;i=p;return}}else o=70;while(0);if((o|0)==70?!g:0){c[e>>2]=y;i=p;return}c[k>>2]=c[k>>2]|2;c[e>>2]=y;i=p;return}function mr(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function nr(a){a=a|0;return}function or(a){a=a|0;return 2}function pr(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j+12|0;l=j+8|0;n=j+4|0;m=j;c[n>>2]=c[d>>2];c[m>>2]=c[e>>2];c[l+0>>2]=c[n+0>>2];c[k+0>>2]=c[m+0>>2];lr(a,b,l,k,f,g,h,262408,262416|0);i=j;return}



function cv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;a=i;if((b|0)==(d|0)){g=b;i=a;return g|0}e=((d+ -4+(0-b)|0)>>>2)+1|0;f=b;do{g=c[f>>2]|0;if(g>>>0<128)g=c[(bv()|0)+(g<<2)>>2]|0;c[f>>2]=g;f=f+4|0}while((f|0)!=(d|0));g=b+(e<<2)|0;i=a;return g|0}function dv(a,b){a=a|0;b=b|0;return b<<24>>24|0}function ev(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;b=i;if((d|0)==(e|0)){f=d;i=b;return f|0}while(1){c[f>>2]=a[d>>0];d=d+1|0;if((d|0)==(e|0))break;else f=f+4|0}i=b;return e|0}function fv(a,b,c){a=a|0;b=b|0;c=c|0;return(b>>>0<128?b&255:c)|0}function gv(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;b=i;if((d|0)==(e|0)){j=d;i=b;return j|0}h=((e+ -4+(0-d)|0)>>>2)+1|0;j=d;while(1){k=c[j>>2]|0;a[g>>0]=k>>>0<128?k&255:f;j=j+4|0;if((j|0)==(e|0))break;else g=g+1|0}k=d+(h<<2)|0;i=b;return k|0}function hv(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;g=i;c[b+4>>2]=f+ -1;c[b>>2]=263520;f=b+8|0;c[f>>2]=d;a[b+12>>0]=e&1;if((d|0)!=0){i=g;return}c[f>>2]=Vu()|0;i=g;return}function iv(a){a=a|0;var b=0;b=i;jv(a);Ix(a);i=b;return}function jv(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=263520;e=c[b+8>>2]|0;if((e|0)==0){i=d;return}if((a[b+12>>0]|0)==0){i=d;return}Jx(e);i=d;return}function kv(a,b){a=a|0;b=b|0;a=i;if(!(b<<24>>24>-1)){i=a;return b|0}b=c[(_u()|0)+((b&255)<<2)>>2]&255;i=a;return b|0}function lv(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;b=i;if((d|0)==(e|0)){f=d;i=b;return f|0}do{f=a[d>>0]|0;if(f<<24>>24>-1)f=c[(_u()|0)+(f<<24>>24<<2)>>2]&255;a[d>>0]=f;d=d+1|0}while((d|0)!=(e|0));i=b;return e|0}function mv(a,b){a=a|0;b=b|0;a=i;if(!(b<<24>>24>-1)){i=a;return b|0}b=c[(bv()|0)+(b<<24>>24<<2)>>2]&255;i=a;return b|0}function nv(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;b=i;if((d|0)==(e|0)){f=d;i=b;return f|0}do{f=a[d>>0]|0;if(f<<24>>24>-1)f=c[(bv()|0)+(f<<24>>24<<2)>>2]&255;a[d>>0]=f;d=d+1|0}while((d|0)!=(e|0));i=b;return e|0}function ov(a,b){a=a|0;b=b|0;return b|0}function pv(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;b=i;if((c|0)==(d|0)){e=c;i=b;return e|0}while(1){a[e>>0]=a[c>>0]|0;c=c+1|0;if((c|0)==(d|0))break;else e=e+1|0}i=b;return d|0}function qv(a,b,c){a=a|0;b=b|0;c=c|0;return(b<<24>>24>-1?b:c)|0}function rv(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0;b=i;if((c|0)==(d|0)){f=c;i=b;return f|0}while(1){g=a[c>>0]|0;a[f>>0]=g<<24>>24>-1?g:e;c=c+1|0;if((c|0)==(d|0))break;else f=f+1|0}i=b;return d|0}function sv(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function tv(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function uv(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function vv(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function wv(a){a=a|0;return 1}function xv(a){a=a|0;return 1}function yv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;b=d-c|0;return(b>>>0<e>>>0?b:e)|0}function zv(a){a=a|0;return 1}function Av(a,b){a=a|0;b=b|0;var d=0;d=i;c[a+4>>2]=b+ -1;c[a>>2]=263592;c[a+8>>2]=dq()|0;i=d;return}function Bv(a){a=a|0;var b=0;b=i;Yt(a);Ix(a);i=b;return}function Cv(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;l=i;i=i+16|0;m=l;n=l+8|0;o=(e|0)==(f|0);a:do if(!o){p=e;while(1){if((c[p>>2]|0)==0)break;p=p+4|0;if((p|0)==(f|0)){p=f;break}}c[k>>2]=h;c[g>>2]=e;if(!(o|(h|0)==(j|0))){o=j;b=b+8|0;while(1){s=d;q=c[s+4>>2]|0;r=m;c[r>>2]=c[s>>2];c[r+4>>2]=q;r=_a(c[b>>2]|0)|0;q=px(h,g,p-e>>2,o-h|0,d)|0;if((r|0)!=0)_a(r|0)|0;if((q|0)==-1){n=10;break}else if((q|0)==0){g=1;n=33;break}h=(c[k>>2]|0)+q|0;c[k>>2]=h;if((h|0)==(j|0)){n=31;break}if((p|0)==(f|0)){e=c[g>>2]|0;p=f}else{p=_a(c[b>>2]|0)|0;e=Vy(n,0,d)|0;if((p|0)!=0)_a(p|0)|0;if((e|0)==-1){g=2;n=33;break}p=c[k>>2]|0;if(e>>>0>(o-p|0)>>>0){g=1;n=33;break}b:do if((e|0)!=0){h=n;while(1){s=a[h>>0]|0;c[k>>2]=p+1;a[p>>0]=s;e=e+ -1|0;if((e|0)==0)break b;p=c[k>>2]|0;h=h+1|0}}while(0);e=(c[g>>2]|0)+4|0;c[g>>2]=e;c:do if((e|0)==(f|0))p=f;else{p=e;while(1){if((c[p>>2]|0)==0)break c;p=p+4|0;if((p|0)==(f|0)){p=f;break}}}while(0);h=c[k>>2]|0}if((e|0)==(f|0)|(h|0)==(j|0))break a}if((n|0)==10){c[k>>2]=h;d:do if((e|0)!=(c[g>>2]|0))do{n=c[e>>2]|0;f=_a(c[b>>2]|0)|0;n=Vy(h,n,m)|0;if((f|0)!=0)_a(f|0)|0;if((n|0)==-1)break d;h=(c[k>>2]|0)+n|0;c[k>>2]=h;e=e+4|0}while((e|0)!=(c[g>>2]|0));while(0);c[g>>2]=e;s=2;i=l;return s|0}else if((n|0)==31){e=c[g>>2]|0;break}else if((n|0)==33){i=l;return g|0}}}else{c[k>>2]=h;c[g>>2]=e}while(0);s=(e|0)!=(f|0)&1;i=l;return s|0}function Dv(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0;l=i;i=i+16|0;m=l;n=(e|0)==(f|0);a:do if(!n){o=e;while(1){if((a[o>>0]|0)==0)break;o=o+1|0;if((o|0)==(f|0)){o=f;break}}c[k>>2]=h;c[g>>2]=e;if(!(n|(h|0)==(j|0))){n=j;b=b+8|0;p=h;while(1){r=d;q=c[r+4>>2]|0;h=m;c[h>>2]=c[r>>2];c[h+4>>2]=q;h=o;q=_a(c[b>>2]|0)|0;r=mx(p,g,h-e|0,n-p>>2,d)|0;if((q|0)!=0)_a(q|0)|0;if((r|0)==0){f=2;d=32;break}else if((r|0)==-1){d=10;break}p=(c[k>>2]|0)+(r<<2)|0;c[k>>2]=p;if((p|0)==(j|0)){d=30;break}e=c[g>>2]|0;if((o|0)==(f|0))o=f;else{h=_a(c[b>>2]|0)|0;o=kx(p,e,1,d)|0;if((h|0)!=0)_a(h|0)|0;if((o|0)!=0){f=2;d=32;break}c[k>>2]=(c[k>>2]|0)+4;e=(c[g>>2]|0)+1|0;c[g>>2]=e;b:do if((e|0)==(f|0))o=f;else{o=e;while(1){if((a[o>>0]|0)==0)break b;o=o+1|0;if((o|0)==(f|0)){o=f;break}}}while(0);p=c[k>>2]|0}if((e|0)==(f|0)|(p|0)==(j|0))break a}if((d|0)==10){c[k>>2]=p;c:do if((e|0)!=(c[g>>2]|0)){while(1){d=_a(c[b>>2]|0)|0;j=kx(p,e,h-e|0,m)|0;if((d|0)!=0)_a(d|0)|0;if((j|0)==-2){d=16;break}else if((j|0)==0)e=e+1|0;else if((j|0)==-1){d=15;break}else e=e+j|0;p=(c[k>>2]|0)+4|0;c[k>>2]=p;if((e|0)==(c[g>>2]|0))break c}if((d|0)==15){c[g>>2]=e;r=2;i=l;return r|0}else if((d|0)==16){c[g>>2]=e;r=1;i=l;return r|0}}while(0);c[g>>2]=e;r=(e|0)!=(f|0)&1;i=l;return r|0}else if((d|0)==30){e=c[g>>2]|0;break}else if((d|0)==32){i=l;return f|0}}}else{c[k>>2]=h;c[g>>2]=e}while(0);r=(e|0)!=(f|0)&1;i=l;return r|0}function Ev(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;h=i;i=i+16|0;j=h;c[g>>2]=e;b=_a(c[b+8>>2]|0)|0;d=Vy(j,0,d)|0;if((b|0)!=0)_a(b|0)|0;if((d|0)==0|(d|0)==-1){e=2;i=h;return e|0}d=d+ -1|0;b=c[g>>2]|0;if(d>>>0>(f-b|0)>>>0){e=1;i=h;return e|0}if((d|0)==0){e=0;i=h;return e|0}else f=b;while(1){e=a[j>>0]|0;c[g>>2]=f+1;a[f>>0]=e;d=d+ -1|0;if((d|0)==0){g=0;break}f=c[g>>2]|0;j=j+1|0}i=h;return g|0}function Fv(a){a=a|0;var b=0,d=0,e=0;b=i;a=a+8|0;e=_a(c[a>>2]|0)|0;d=ox(0,0,4)|0;if((e|0)!=0)_a(e|0)|0;if((d|0)==0){a=c[a>>2]|0;if((a|0)!=0){a=_a(a|0)|0;if((a|0)==0)a=0;else{_a(a|0)|0;a=0}}else a=1}else a=-1;i=b;return a|0}function Gv(a){a=a|0;return 0}function Hv(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;if((f|0)==0|(d|0)==(e|0)){m=0;i=g;return m|0}h=e;a=a+8|0;k=0;j=0;while(1){m=_a(c[a>>2]|0)|0;l=jx(d,h-d|0,b)|0;if((m|0)!=0)_a(m|0)|0;if((l|0)==0){m=1;d=d+1|0}else if((l|0)==-2|(l|0)==-1){f=9;break}else{m=l;d=d+l|0}k=m+k|0;j=j+1|0;if(j>>>0>=f>>>0|(d|0)==(e|0)){f=9;break}}if((f|0)==9){i=g;return k|0}return 0}function Iv(a){a=a|0;var b=0;b=i;a=c[a+8>>2]|0;if((a|0)!=0){a=_a(a|0)|0;if((a|0)==0)a=4;else{_a(a|0)|0;a=4}}else a=1;i=b;return a|0}function Jv(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function Kv(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;a=i;i=i+16|0;l=a+4|0;k=a;c[l>>2]=d;c[k>>2]=g;b=Lv(d,e,l,g,h,k,1114111,0)|0;c[f>>2]=d+((c[l>>2]|0)-d>>1<<1);c[j>>2]=g+((c[k>>2]|0)-g);i=a;return b|0}function Lv(d,f,g,h,j,k,l,m){d=d|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0;n=i;c[g>>2]=d;c[k>>2]=h;do if((m&2|0)!=0)if((j-h|0)<3){p=1;i=n;return p|0}else{c[k>>2]=h+1;a[h>>0]=-17;p=c[k>>2]|0;c[k>>2]=p+1;a[p>>0]=-69;p=c[k>>2]|0;c[k>>2]=p+1;a[p>>0]=-65;break}while(0);h=f;o=c[g>>2]|0;if(!(o>>>0<f>>>0)){p=0;i=n;return p|0}a:while(1){d=b[o>>1]|0;m=d&65535;if(m>>>0>l>>>0){l=2;f=26;break}do if((d&65535)<128){m=c[k>>2]|0;if((j-m|0)<1){l=1;f=26;break a}c[k>>2]=m+1;a[m>>0]=d}else{if((d&65535)<2048){d=c[k>>2]|0;if((j-d|0)<2){l=1;f=26;break a}c[k>>2]=d+1;a[d>>0]=m>>>6|192;p=c[k>>2]|0;c[k>>2]=p+1;a[p>>0]=m&63|128;break}if((d&65535)<55296){d=c[k>>2]|0;if((j-d|0)<3){l=1;f=26;break a}c[k>>2]=d+1;a[d>>0]=m>>>12|224;p=c[k>>2]|0;c[k>>2]=p+1;a[p>>0]=m>>>6&63|128;p=c[k>>2]|0;c[k>>2]=p+1;a[p>>0]=m&63|128;break}if(!((d&65535)<56320)){if((d&65535)<57344){l=2;f=26;break a}d=c[k>>2]|0;if((j-d|0)<3){l=1;f=26;break a}c[k>>2]=d+1;a[d>>0]=m>>>12|224;p=c[k>>2]|0;c[k>>2]=p+1;a[p>>0]=m>>>6&63|128;p=c[k>>2]|0;c[k>>2]=p+1;a[p>>0]=m&63|128;break}if((h-o|0)<4){l=1;f=26;break a}p=o+2|0;d=e[p>>1]|0;if((d&64512|0)!=56320){l=2;f=26;break a}if((j-(c[k>>2]|0)|0)<4){l=1;f=26;break a}o=m&960;if(((o<<10)+65536|m<<10&64512|d&1023)>>>0>l>>>0){l=2;f=26;break a}c[g>>2]=p;o=(o>>>6)+1|0;p=c[k>>2]|0;c[k>>2]=p+1;a[p>>0]=o>>>2|240;p=c[k>>2]|0;c[k>>2]=p+1;a[p>>0]=m>>>2&15|o<<4&48|128;p=c[k>>2]|0;c[k>>2]=p+1;a[p>>0]=m<<4&48|d>>>6&15|128;p=c[k>>2]|0;c[k>>2]=p+1;a[p>>0]=d&63|128}while(0);o=(c[g>>2]|0)+2|0;c[g>>2]=o;if(!(o>>>0<f>>>0)){l=0;f=26;break}}if((f|0)==26){i=n;return l|0}return 0}function Mv(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;a=i;i=i+16|0;l=a+4|0;k=a;c[l>>2]=d;c[k>>2]=g;b=Nv(d,e,l,g,h,k,1114111,0)|0;c[f>>2]=d+((c[l>>2]|0)-d);c[j>>2]=g+((c[k>>2]|0)-g>>1<<1);i=a;return b|0}function Nv(e,f,g,h,j,k,l,m){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0;n=i;c[g>>2]=e;c[k>>2]=h;p=c[g>>2]|0;if(((((m&4|0)!=0?(f-p|0)>2:0)?(a[p>>0]|0)==-17:0)?(a[p+1>>0]|0)==-69:0)?(a[p+2>>0]|0)==-65:0){p=p+3|0;c[g>>2]=p}a:do if(p>>>0<f>>>0){e=f;h=j;m=c[k>>2]|0;b:while(1){if(!(m>>>0<j>>>0))break a;q=a[p>>0]|0;o=q&255;if(o>>>0>l>>>0){f=2;g=41;break}do if(q<<24>>24>-1){b[m>>1]=q&255;c[g>>2]=p+1}else{if((q&255)<194){f=2;g=41;break b}if((q&255)<224){if((e-p|0)<2){f=1;g=41;break b}q=d[p+1>>0]|0;if((q&192|0)!=128){f=2;g=41;break b}o=q&63|o<<6&1984;if(o>>>0>l>>>0){f=2;g=41;break b}b[m>>1]=o;c[g>>2]=p+2;break}if((q&255)<240){if((e-p|0)<3){f=1;g=41;break b}q=a[p+1>>0]|0;r=a[p+2>>0]|0;if((o|0)==237){if(!((q&-32)<<24>>24==-128)){f=2;g=41;break b}}else if((o|0)==224){if(!((q&-32)<<24>>24==-96)){f=2;g=41;break b}}else if(!((q&-64)<<24>>24==-128)){f=2;g=41;break b}r=r&255;if((r&192|0)!=128){f=2;g=41;break b}o=(q&255)<<6&4032|o<<12|r&63;if((o&65535)>>>0>l>>>0){f=2;g=41;break b}b[m>>1]=o;c[g>>2]=p+3;break}if(!((q&255)<245)){f=2;g=41;break b}if((e-p|0)<4){f=1;g=41;break b}q=a[p+1>>0]|0;r=a[p+2>>0]|0;s=a[p+3>>0]|0;if((o|0)==244){if(!((q&-16)<<24>>24==-128)){f=2;g=41;break b}}else if((o|0)==240){if(!((q+112<<24>>24&255)<48)){f=2;g=41;break b}}else if(!((q&-64)<<24>>24==-128)){f=2;g=41;break b}p=r&255;if((p&192|0)!=128){f=2;g=41;break b}r=s&255;if((r&192|0)!=128){f=2;g=41;break b}if((h-m|0)<4){f=1;g=41;break b}o=o&7;s=q&255;q=p<<6;r=r&63;if((s<<12&258048|o<<18|q&4032|r)>>>0>l>>>0){f=2;g=41;break b}b[m>>1]=s<<2&60|p>>>4&3|((s>>>4&3|o<<2)<<6)+16320|55296;s=m+2|0;c[k>>2]=s;b[s>>1]=r|q&960|56320;c[g>>2]=(c[g>>2]|0)+4}while(0);m=(c[k>>2]|0)+2|0;c[k>>2]=m;p=c[g>>2]|0;if(!(p>>>0<f>>>0))break a}if((g|0)==41){i=n;return f|0}}while(0);s=p>>>0<f>>>0&1;i=n;return s|0}function Ov(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function Pv(a){a=a|0;return 0}function Qv(a){a=a|0;return 0}function Rv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;a=i;b=Sv(c,d,e,1114111,0)|0;i=a;return b|0}function Sv(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=i;if((((g&4|0)!=0?(c-b|0)>2:0)?(a[b>>0]|0)==-17:0)?(a[b+1>>0]|0)==-69:0)k=(a[b+2>>0]|0)==-65?b+3|0:b;else k=b;a:do if(k>>>0<c>>>0&(e|0)!=0){g=c;j=0;b:while(1){m=a[k>>0]|0;l=m&255;if(l>>>0>f>>>0)break a;do if(m<<24>>24>-1)k=k+1|0;else{if((m&255)<194)break a;if((m&255)<224){if((g-k|0)<2)break a;m=d[k+1>>0]|0;if((m&192|0)!=128)break a;if((m&63|l<<6&1984)>>>0>f>>>0)break a;k=k+2|0;break}if((m&255)<240){n=k;if((g-n|0)<3)break a;m=a[k+1>>0]|0;o=a[k+2>>0]|0;if((l|0)==224){if(!((m&-32)<<24>>24==-96)){f=21;break b}}else if((l|0)==237){if(!((m&-32)<<24>>24==-128)){f=23;break b}}else if(!((m&-64)<<24>>24==-128)){f=25;break b}n=o&255;if((n&192|0)!=128)break a;if(((m&255)<<6&4032|l<<12&61440|n&63)>>>0>f>>>0)break a;k=k+3|0;break}if(!((m&255)<245))break a;o=k;if((g-o|0)<4)break a;if((e-j|0)>>>0<2)break a;m=a[k+1>>0]|0;p=a[k+2>>0]|0;n=a[k+3>>0]|0;if((l|0)==240){if(!((m+112<<24>>24&255)<48)){f=34;break b}}else if((l|0)==244){if(!((m&-16)<<24>>24==-128)){f=36;break b}}else if(!((m&-64)<<24>>24==-128)){f=38;break b}o=p&255;if((o&192|0)!=128)break a;n=n&255;if((n&192|0)!=128)break a;if(((m&255)<<12&258048|l<<18&1835008|o<<6&4032|n&63)>>>0>f>>>0)break a;k=k+4|0;j=j+1|0}while(0);j=j+1|0;if(!(k>>>0<c>>>0&j>>>0<e>>>0))break a}if((f|0)==21){p=n-b|0;i=h;return p|0}else if((f|0)==23){p=n-b|0;i=h;return p|0}else if((f|0)==25){p=n-b|0;i=h;return p|0}else if((f|0)==34){p=o-b|0;i=h;return p|0}else if((f|0)==36){p=o-b|0;i=h;return p|0}else if((f|0)==38){p=o-b|0;i=h;return p|0}}while(0);p=k-b|0;i=h;return p|0}function Tv(a){a=a|0;return 4}function Uv(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function Vv(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;a=i;i=i+16|0;l=a+4|0;k=a;c[l>>2]=d;c[k>>2]=g;b=Wv(d,e,l,g,h,k,1114111,0)|0;c[f>>2]=d+((c[l>>2]|0)-d>>2<<2);c[j>>2]=g+((c[k>>2]|0)-g);i=a;return b|0}function Wv(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0;l=i;c[e>>2]=b;c[h>>2]=f;do if((k&2|0)!=0)if((g-f|0)<3){k=1;i=l;return k|0}else{c[h>>2]=f+1;a[f>>0]=-17;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=-69;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=-65;break}while(0);b=c[e>>2]|0;if(!(b>>>0<d>>>0)){k=0;i=l;return k|0}a:while(1){b=c[b>>2]|0;if((b&-2048|0)==55296|b>>>0>j>>>0){e=2;j=19;break}do if(!(b>>>0<128)){if(b>>>0<2048){f=c[h>>2]|0;if((g-f|0)<2){e=1;j=19;break a}c[h>>2]=f+1;a[f>>0]=b>>>6|192;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=b&63|128;break}k=c[h>>2]|0;f=g-k|0;if(b>>>0<65536){if((f|0)<3){e=1;j=19;break a}c[h>>2]=k+1;a[k>>0]=b>>>12|224;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=b>>>6&63|128;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=b&63|128;break}else{if((f|0)<4){e=1;j=19;break a}c[h>>2]=k+1;a[k>>0]=b>>>18|240;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=b>>>12&63|128;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=b>>>6&63|128;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=b&63|128;break}}else{f=c[h>>2]|0;if((g-f|0)<1){e=1;j=19;break a}c[h>>2]=f+1;a[f>>0]=b}while(0);b=(c[e>>2]|0)+4|0;c[e>>2]=b;if(!(b>>>0<d>>>0)){e=0;j=19;break}}if((j|0)==19){i=l;return e|0}return 0}function Xv(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;a=i;i=i+16|0;l=a+4|0;k=a;c[l>>2]=d;c[k>>2]=g;b=Yv(d,e,l,g,h,k,1114111,0)|0;c[f>>2]=d+((c[l>>2]|0)-d);c[j>>2]=g+((c[k>>2]|0)-g>>2<<2);i=a;return b|0}function Yv(b,e,f,g,h,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0;m=i;c[f>>2]=b;c[j>>2]=g;b=c[f>>2]|0;if(((((l&4|0)!=0?(e-b|0)>2:0)?(a[b>>0]|0)==-17:0)?(a[b+1>>0]|0)==-69:0)?(a[b+2>>0]|0)==-65:0){b=b+3|0;c[f>>2]=b}a:do if(b>>>0<e>>>0){l=e;g=c[j>>2]|0;b:while(1){if(!(g>>>0<h>>>0))break a;o=a[b>>0]|0;n=o&255;do if(o<<24>>24>-1){if(n>>>0>k>>>0){e=2;j=40;break b}c[g>>2]=n;c[f>>2]=b+1}else{if((o&255)<194){e=2;j=40;break b}if((o&255)<224){if((l-b|0)<2){e=1;j=40;break b}o=d[b+1>>0]|0;if((o&192|0)!=128){e=2;j=40;break b}n=o&63|n<<6&1984;if(n>>>0>k>>>0){e=2;j=40;break b}c[g>>2]=n;c[f>>2]=b+2;break}if((o&255)<240){if((l-b|0)<3){e=1;j=40;break b}o=a[b+1>>0]|0;p=a[b+2>>0]|0;if((n|0)==224){if(!((o&-32)<<24>>24==-96)){e=2;j=40;break b}}else if((n|0)==237){if(!((o&-32)<<24>>24==-128)){e=2;j=40;break b}}else if(!((o&-64)<<24>>24==-128)){e=2;j=40;break b}p=p&255;if((p&192|0)!=128){e=2;j=40;break b}n=(o&255)<<6&4032|n<<12&61440|p&63;if(n>>>0>k>>>0){e=2;j=40;break b}c[g>>2]=n;c[f>>2]=b+3;break}if(!((o&255)<245)){e=2;j=40;break b}if((l-b|0)<4){e=1;j=40;break b}o=a[b+1>>0]|0;p=a[b+2>>0]|0;q=a[b+3>>0]|0;if((n|0)==240){if(!((o+112<<24>>24&255)<48)){e=2;j=40;break b}}else if((n|0)==244){if(!((o&-16)<<24>>24==-128)){e=2;j=40;break b}}else if(!((o&-64)<<24>>24==-128)){e=2;j=40;break b}p=p&255;if((p&192|0)!=128){e=2;j=40;break b}q=q&255;if((q&192|0)!=128){e=2;j=40;break b}n=(o&255)<<12&258048|n<<18&1835008|p<<6&4032|q&63;if(n>>>0>k>>>0){e=2;j=40;break b}c[g>>2]=n;c[f>>2]=b+4}while(0);g=(c[j>>2]|0)+4|0;c[j>>2]=g;b=c[f>>2]|0;if(!(b>>>0<e>>>0))break a}if((j|0)==40){i=m;return e|0}}while(0);q=b>>>0<e>>>0&1;i=m;return q|0}function Zv(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function _v(a){a=a|0;return 0}function $v(a){a=a|0;return 0}function aw(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;a=i;b=bw(c,d,e,1114111,0)|0;i=a;return b|0}function bw(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=i;if((((g&4|0)!=0?(c-b|0)>2:0)?(a[b>>0]|0)==-17:0)?(a[b+1>>0]|0)==-69:0)k=(a[b+2>>0]|0)==-65?b+3|0:b;else k=b;a:do if(k>>>0<c>>>0&(e|0)!=0){g=c;j=1;b:while(1){m=a[k>>0]|0;l=m&255;do if(m<<24>>24>-1){if(l>>>0>f>>>0)break a;k=k+1|0}else{if((m&255)<194)break a;if((m&255)<224){if((g-k|0)<2)break a;m=d[k+1>>0]|0;if((m&192|0)!=128)break a;if((m&63|l<<6&1984)>>>0>f>>>0)break a;k=k+2|0;break}if((m&255)<240){m=k;if((g-m|0)<3)break a;n=a[k+1>>0]|0;o=a[k+2>>0]|0;if((l|0)==237){if(!((n&-32)<<24>>24==-128)){f=23;break b}}else if((l|0)==224){if(!((n&-32)<<24>>24==-96)){f=21;break b}}else if(!((n&-64)<<24>>24==-128)){f=25;break b}m=o&255;if((m&192|0)!=128)break a;if(((n&255)<<6&4032|l<<12&61440|m&63)>>>0>f>>>0)break a;k=k+3|0;break}if(!((m&255)<245))break a;o=k;if((g-o|0)<4)break a;m=a[k+1>>0]|0;p=a[k+2>>0]|0;n=a[k+3>>0]|0;if((l|0)==244){if(!((m&-16)<<24>>24==-128)){f=35;break b}}else if((l|0)==240){if(!((m+112<<24>>24&255)<48)){f=33;break b}}else if(!((m&-64)<<24>>24==-128)){f=37;break b}o=p&255;if((o&192|0)!=128)break a;n=n&255;if((n&192|0)!=128)break a;if(((m&255)<<12&258048|l<<18&1835008|o<<6&4032|n&63)>>>0>f>>>0)break a;k=k+4|0}while(0);if(!(k>>>0<c>>>0&j>>>0<e>>>0))break a;j=j+1|0}if((f|0)==21){p=m-b|0;i=h;return p|0}else if((f|0)==23){p=m-b|0;i=h;return p|0}else if((f|0)==25){p=m-b|0;i=h;return p|0}else if((f|0)==33){p=o-b|0;i=h;return p|0}else if((f|0)==35){p=o-b|0;i=h;return p|0}else if((f|0)==37){p=o-b|0;i=h;return p|0}}while(0);p=k-b|0;i=h;return p|0}function cw(a){a=a|0;return 4}function dw(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function ew(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function fw(a){a=a|0;var b=0;b=i;gw(a);Ix(a);i=b;return}function gw(a){a=a|0;var b=0;b=i;c[a>>2]=263672;Kn(a+12|0);i=b;return}function hw(a){a=a|0;var b=0;b=i;iw(a);Ix(a);i=b;return}function iw(a){a=a|0;var b=0;b=i;c[a>>2]=263712;Kn(a+16|0);i=b;return}function jw(b){b=b|0;return a[b+8>>0]|0}function kw(a){a=a|0;return c[a+8>>2]|0}function lw(b){b=b|0;return a[b+9>>0]|0}function mw(a){a=a|0;return c[a+12>>2]|0}function nw(a,b){a=a|0;b=b|0;var c=0;c=i;Fn(a,b+12|0);i=c;return}function ow(a,b){a=a|0;b=b|0;var c=0;c=i;Fn(a,b+16|0);i=c;return}function pw(a,b){a=a|0;b=b|0;b=i;Hn(a,263744,4);i=b;return}function qw(a,b){a=a|0;b=b|0;b=i;Wn(a,263752,xx(263752)|0);i=b;return}function rw(a,b){a=a|0;b=b|0;b=i;Hn(a,263776,5);i=b;return}function sw(a,b){a=a|0;b=b|0;b=i;Wn(a,263784,xx(263784)|0);i=b;return}function tw(a){a=a|0;var b=0;b=i;a=c[a+4>>2]&74;if((a|0)==64)a=8;else if((a|0)==0)a=0;else if((a|0)==8)a=16;else a=10;i=b;return a|0}function uw(b){b=b|0;var d=0;b=i;if((a[263816]|0)!=0){d=c[65952]|0;i=b;return d|0}if((Ha(263816)|0)==0){d=c[65952]|0;i=b;return d|0}if((a[271016]|0)==0?(Ha(271016)|0)!=0:0){lz(270848,0,168)|0;Lb(117,0,o|0)|0;Sa(271016)}Mn(270848,271024)|0;Mn(270860,271032)|0;Mn(270872,271040)|0;Mn(270884,271048)|0;Mn(270896,271064)|0;Mn(270908,271080)|0;Mn(270920,271088)|0;Mn(270932,271104)|0;Mn(270944,271112)|0;Mn(270956,271120)|0;Mn(270968,271128)|0;Mn(270980,271136)|0;Mn(270992,271144)|0;Mn(271004,271152)|0;c[65952]=270848;Sa(263816);d=c[65952]|0;i=b;return d|0}function vw(b){b=b|0;var d=0;b=i;if((a[263832]|0)!=0){d=c[65956]|0;i=b;return d|0}if((Ha(263832)|0)==0){d=c[65956]|0;i=b;return d|0}if((a[270480]|0)==0?(Ha(270480)|0)!=0:0){lz(270312,0,168)|0;Lb(118,0,o|0)|0;Sa(270480)}$n(270312,270488)|0;$n(270324,270520)|0;$n(270336,270552)|0;$n(270348,270584)|0;$n(270360,270624)|0;$n(270372,270664)|0;$n(270384,270696)|0;$n(270396,270736)|0;$n(270408,270752)|0;$n(270420,270768)|0;$n(270432,270784)|0;$n(270444,270800)|0;$n(270456,270816)|0;$n(270468,270832)|0;c[65956]=270312;Sa(263832);d=c[65956]|0;i=b;return d|0}function ww(b){b=b|0;var d=0;b=i;if((a[263848]|0)!=0){d=c[65960]|0;i=b;return d|0}if((Ha(263848)|0)==0){d=c[65960]|0;i=b;return d|0}if((a[270088]|0)==0?(Ha(270088)|0)!=0:0){lz(269800,0,288)|0;Lb(119,0,o|0)|0;Sa(270088)}Mn(269800,270096)|0;Mn(269812,270104)|0;Mn(269824,270120)|0;Mn(269836,270128)|0;Mn(269848,270136)|0;Mn(269860,270144)|0;Mn(269872,270152)|0;Mn(269884,270160)|0;Mn(269896,270168)|0;Mn(269908,270184)|0;Mn(269920,270192)|0;Mn(269932,270208)|0;Mn(269944,270224)|0;Mn(269956,270232)|0;Mn(269968,270240)|0;Mn(269980,270248)|0;Mn(269992,270136)|0;Mn(270004,270256)|0;Mn(270016,270264)|0;Mn(270028,270272)|0;Mn(270040,270280)|0;Mn(270052,270288)|0;Mn(270064,270296)|0;Mn(270076,270304)|0;c[65960]=269800;Sa(263848);d=c[65960]|0;i=b;return d|0}function xw(b){b=b|0;var d=0;b=i;if((a[263864]|0)!=0){d=c[65964]|0;i=b;return d|0}if((Ha(263864)|0)==0){d=c[65964]|0;i=b;return d|0}if((a[269248]|0)==0?(Ha(269248)|0)!=0:0){lz(268960,0,288)|0;Lb(120,0,o|0)|0;Sa(269248)}$n(268960,269256)|0;$n(268972,269288)|0;$n(268984,269328)|0;$n(268996,269352)|0;$n(269008,269672)|0;$n(269020,269376)|0;$n(269032,269400)|0;$n(269044,269424)|0;$n(269056,269456)|0;$n(269068,269496)|0;$n(269080,269528)|0;$n(269092,269568)|0;$n(269104,269608)|0;$n(269116,269624)|0;$n(269128,269640)|0;$n(269140,269656)|0;$n(269152,269672)|0;$n(269164,269688)|0;$n(269176,269704)|0;$n(269188,269720)|0;$n(269200,269736)|0;$n(269212,269752)|0;$n(269224,269768)|0;$n(269236,269784)|0;c[65964]=268960;Sa(263864);d=c[65964]|0;i=b;return d|0}function yw(b){b=b|0;var d=0;b=i;if((a[263880]|0)!=0){d=c[65968]|0;i=b;return d|0}if((Ha(263880)|0)==0){d=c[65968]|0;i=b;return d|0}if((a[268936]|0)==0?(Ha(268936)|0)!=0:0){lz(268648,0,288)|0;Lb(121,0,o|0)|0;Sa(268936)}Mn(268648,268944)|0;Mn(268660,268952)|0;c[65968]=268648;Sa(263880);d=c[65968]|0;i=b;return d|0}function zw(b){b=b|0;var d=0;b=i;if((a[263896]|0)!=0){d=c[65972]|0;i=b;return d|0}if((Ha(263896)|0)==0){d=c[65972]|0;i=b;return d|0}if((a[268608]|0)==0?(Ha(268608)|0)!=0:0){lz(268320,0,288)|0;Lb(122,0,o|0)|0;Sa(268608)}$n(268320,268616)|0;$n(268332,268632)|0;c[65972]=268320;Sa(263896);d=c[65972]|0;i=b;return d|0}function Aw(b){b=b|0;b=i;if((a[263920]|0)!=0){i=b;return 263904}if((Ha(263920)|0)==0){i=b;return 263904}Hn(263904,263928,8);Lb(123,263904,o|0)|0;Sa(263920);i=b;return 263904}function Bw(b){b=b|0;b=i;if((a[263960]|0)!=0){i=b;return 263944}if((Ha(263960)|0)==0){i=b;return 263944}Wn(263944,263968,xx(263968)|0);Lb(124,263944,o|0)|0;Sa(263960);i=b;return 263944}function Cw(b){b=b|0;b=i;if((a[264024]|0)!=0){i=b;return 264008}if((Ha(264024)|0)==0){i=b;return 264008}Hn(264008,264032,8);Lb(123,264008,o|0)|0;Sa(264024);i=b;return 264008}function Dw(b){b=b|0;b=i;if((a[264064]|0)!=0){i=b;return 264048}if((Ha(264064)|0)==0){i=b;return 264048}Wn(264048,264072,xx(264072)|0);Lb(124,264048,o|0)|0;Sa(264064);i=b;return 264048}function Ew(b){b=b|0;b=i;if((a[264128]|0)!=0){i=b;return 264112}if((Ha(264128)|0)==0){i=b;return 264112}Hn(264112,264136,20);Lb(123,264112,o|0)|0;Sa(264128);i=b;return 264112}function Fw(b){b=b|0;b=i;if((a[264176]|0)!=0){i=b;return 264160}if((Ha(264176)|0)==0){i=b;return 264160}Wn(264160,264184,xx(264184)|0);Lb(124,264160,o|0)|0;Sa(264176);i=b;return 264160}function Gw(b){b=b|0;b=i;if((a[264288]|0)!=0){i=b;return 264272}if((Ha(264288)|0)==0){i=b;return 264272}Hn(264272,264296,11);Lb(123,264272,o|0)|0;Sa(264288);i=b;return 264272}function Hw(b){b=b|0;b=i;if((a[264328]|0)!=0){i=b;return 264312}if((Ha(264328)|0)==0){i=b;return 264312}Wn(264312,264336,xx(264336)|0);Lb(124,264312,o|0)|0;Sa(264328);i=b;return 264312}function Iw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0.0;e=i;i=i+16|0;f=e;do if((a|0)!=(b|0)){g=vb()|0;h=c[g>>2]|0;c[g>>2]=0;j=+ez(a,f,dq()|0);a=c[g>>2]|0;if((a|0)==0)c[g>>2]=h;if((c[f>>2]|0)!=(b|0)){c[d>>2]=4;j=0.0;break}if((a|0)==34)c[d>>2]=4}else{c[d>>2]=4;j=0.0}while(0);i=e;return+j}function Jw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0.0;e=i;i=i+16|0;f=e;do if((a|0)!=(b|0)){g=vb()|0;h=c[g>>2]|0;c[g>>2]=0;j=+ez(a,f,dq()|0);a=c[g>>2]|0;if((a|0)==0)c[g>>2]=h;if((c[f>>2]|0)!=(b|0)){c[d>>2]=4;j=0.0;break}if((a|0)==34)c[d>>2]=4}else{c[d>>2]=4;j=0.0}while(0);i=e;return+j}function Kw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0.0;e=i;i=i+16|0;f=e;if((a|0)==(b|0)){c[d>>2]=4;j=0.0;i=e;return+j}g=vb()|0;h=c[g>>2]|0;c[g>>2]=0;j=+ez(a,f,dq()|0);a=c[g>>2]|0;if((a|0)==0)c[g>>2]=h;if((c[f>>2]|0)!=(b|0)){c[d>>2]=4;j=0.0;i=e;return+j}if((a|0)==34)c[d>>2]=4;i=e;return+j}function Lw(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;g=i;i=i+16|0;h=g;do if((b|0)!=(d|0)){if((a[b>>0]|0)==45){c[e>>2]=4;e=0;f=0;break}j=vb()|0;k=c[j>>2]|0;c[j>>2]=0;f=fx(b,h,f,dq()|0)|0;b=c[j>>2]|0;if((b|0)==0)c[j>>2]=k;if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;e=0;f=0;break}if((b|0)==34){c[e>>2]=4;e=-1;f=-1}else e=H}else{c[e>>2]=4;e=0;f=0}while(0);H=e;i=g;return f|0}function Mw(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+16|0;h=g;do if((b|0)!=(d|0)){if((a[b>>0]|0)==45){c[e>>2]=4;l=0;break}j=vb()|0;k=c[j>>2]|0;c[j>>2]=0;l=fx(b,h,f,dq()|0)|0;b=H;f=c[j>>2]|0;if((f|0)==0)c[j>>2]=k;if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;l=0;break}if((f|0)==34|(b>>>0>0|(b|0)==0&l>>>0>4294967295)){c[e>>2]=4;l=-1;break}else break}else{c[e>>2]=4;l=0}while(0);i=g;return l|0}function Nw(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+16|0;h=g;do if((b|0)!=(d|0)){if((a[b>>0]|0)==45){c[e>>2]=4;l=0;break}j=vb()|0;k=c[j>>2]|0;c[j>>2]=0;l=fx(b,h,f,dq()|0)|0;b=H;f=c[j>>2]|0;if((f|0)==0)c[j>>2]=k;if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;l=0;break}if((f|0)==34|(b>>>0>0|(b|0)==0&l>>>0>4294967295)){c[e>>2]=4;l=-1;break}else break}else{c[e>>2]=4;l=0}while(0);i=g;return l|0}function Ow(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+16|0;h=g;do if((b|0)!=(d|0)){if((a[b>>0]|0)==45){c[e>>2]=4;e=0;break}j=vb()|0;k=c[j>>2]|0;c[j>>2]=0;l=fx(b,h,f,dq()|0)|0;b=H;f=c[j>>2]|0;if((f|0)==0)c[j>>2]=k;if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;e=0;break}if((f|0)==34|(b>>>0>0|(b|0)==0&l>>>0>65535)){c[e>>2]=4;e=-1;break}else{e=l&65535;break}}else{c[e>>2]=4;e=0}while(0);i=g;return e|0}function Pw(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;j=i;i=i+16|0;g=j;if((a|0)==(b|0)){c[d>>2]=4;e=0;k=0;H=e;i=j;return k|0}h=vb()|0;f=c[h>>2]|0;c[h>>2]=0;e=gx(a,g,e,dq()|0)|0;a=H;k=c[h>>2]|0;if((k|0)==0)c[h>>2]=f;if((c[g>>2]|0)!=(b|0)){c[d>>2]=4;e=0;k=0;H=e;i=j;return k|0}if((k|0)==34){c[d>>2]=4;k=(a|0)>0|(a|0)==0&e>>>0>0;H=k?2147483647:-2147483648;i=j;return(k?-1:0)|0}else{k=e;H=a;i=j;return k|0}return 0}function Qw(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;g=f;a:do if((a|0)==(b|0)){c[d>>2]=4;a=0}else{h=vb()|0;j=c[h>>2]|0;c[h>>2]=0;a=gx(a,g,e,dq()|0)|0;e=H;k=c[h>>2]|0;if((k|0)==0)c[h>>2]=j;if((c[g>>2]|0)!=(b|0)){c[d>>2]=4;a=0;break}do if((k|0)==34){c[d>>2]=4;if((e|0)>0|(e|0)==0&a>>>0>0){a=2147483647;break a}}else{if((e|0)<-1|(e|0)==-1&a>>>0<2147483648){c[d>>2]=4;break}if((e|0)>0|(e|0)==0&a>>>0>2147483647){c[d>>2]=4;a=2147483647;break a}else break a}while(0);a=-2147483648}while(0);i=f;return a|0}function Rw(a){a=a|0;var b=0,e=0,f=0;b=i;f=a+4|0;e=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;f=f+4|0;f=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;a=(c[a>>2]|0)+(f>>1)|0;if((f&1|0)==0){f=e;Vb[f&127](a);i=b;return}else{f=c[(c[a>>2]|0)+e>>2]|0;Vb[f&127](a);i=b;return}}function Sw(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;e=i;i=i+32|0;d=e;g=c[a+8>>2]|0;f=c[a+4>>2]|0;if(!(g-f>>2>>>0<b>>>0)){Tw(a,b);i=e;return}j=c[a>>2]|0;f=f-j>>2;h=f+b|0;if(h>>>0>1073741823)Zt(0);g=g-j|0;if(g>>2>>>0<536870911){g=g>>1;g=g>>>0<h>>>0?h:g}else g=1073741823;Xw(d,g,f,a+16|0);Uw(d,b);Vw(a,d);Ww(d);i=e;return}function Tw(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;a=a+4|0;e=c[a>>2]|0;do{if((e|0)==0)e=0;else{c[e>>2]=0;e=c[a>>2]|0}e=e+4|0;c[a>>2]=e;b=b+ -1|0}while((b|0)!=0);i=d;return}function Uw(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;a=a+8|0;e=c[a>>2]|0;do{if((e|0)==0)e=0;else{c[e>>2]=0;e=c[a>>2]|0}e=e+4|0;c[a>>2]=e;b=b+ -1|0}while((b|0)!=0);i=d;return}function Vw(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;f=c[a>>2]|0;h=a+4|0;e=b+4|0;g=(c[h>>2]|0)-f|0;j=(c[e>>2]|0)+(0-(g>>2)<<2)|0;c[e>>2]=j;qz(j|0,f|0,g|0)|0;g=c[a>>2]|0;c[a>>2]=c[e>>2];c[e>>2]=g;g=b+8|0;f=c[h>>2]|0;c[h>>2]=c[g>>2];c[g>>2]=f;g=a+8|0;a=b+12|0;f=c[g>>2]|0;c[g>>2]=c[a>>2];c[a>>2]=f;c[b>>2]=c[e>>2];i=d;return}function Ww(b){b=b|0;var d=0,e=0,f=0,g=0;d=i;f=c[b+4>>2]|0;e=b+8|0;g=c[e>>2]|0;if((g|0)!=(f|0))c[e>>2]=g+(~((g+ -4+(0-f)|0)>>>2)<<2);e=c[b>>2]|0;if((e|0)==0){i=d;return}b=c[b+16>>2]|0;if((b|0)==(e|0)){a[b+112>>0]=0;i=d;return}else{Ix(e);i=d;return}}function Xw(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;h=b+12|0;c[h>>2]=0;c[b+16>>2]=f;do if((d|0)!=0){j=f+112|0;if((a[j>>0]|0)==0&d>>>0<29){a[j>>0]=1;break}else{f=Gx(d<<2)|0;break}}else f=0;while(0);c[b>>2]=f;j=f+(e<<2)|0;c[b+8>>2]=j;c[b+4>>2]=j;c[h>>2]=f+(d<<2);i=g;return}function Yw(b,d){b=b|0;d=d|0;var e=0,f=0;e=i;if(d>>>0>1073741823)Zt(0);f=b+128|0;if((a[f>>0]|0)==0&d>>>0<29){a[f>>0]=1;f=b+16|0}else f=Gx(d<<2)|0;c[b+4>>2]=f;c[b>>2]=f;c[b+8>>2]=f+(d<<2);i=e;return}function Zw(b,d){b=b|0;d=d|0;var e=0;e=i;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;a[b+128>>0]=0;if((d|0)==0){i=e;return}Yw(b,d);Tw(b,d);i=e;return}function _w(b){b=b|0;var d=0,e=0,f=0,g=0;d=i;e=c[b>>2]|0;if((e|0)==0){i=d;return}f=b+4|0;g=c[f>>2]|0;if((g|0)!=(e|0))c[f>>2]=g+(~((g+ -4+(0-e)|0)>>>2)<<2);if((b+16|0)==(e|0)){a[b+128>>0]=0;i=d;return}else{Ix(e);i=d;return}}function $w(a){a=a|0;a=i;Zn(268596|0);Zn(268584|0);Zn(268572|0);Zn(268560|0);Zn(268548|0);Zn(268536|0);Zn(268524|0);Zn(268512|0);Zn(268500|0);Zn(268488|0);Zn(268476|0);Zn(268464|0);Zn(268452|0);Zn(268440|0);Zn(268428|0);Zn(268416|0);Zn(268404|0);Zn(268392|0);Zn(268380|0);Zn(268368|0);Zn(268356|0);Zn(268344|0);Zn(268332|0);Zn(268320);i=a;return}function ax(a){a=a|0;a=i;Kn(268924|0);Kn(268912|0);Kn(268900|0);Kn(268888|0);Kn(268876|0);Kn(268864|0);Kn(268852|0);Kn(268840|0);Kn(268828|0);Kn(268816|0);Kn(268804|0);Kn(268792|0);Kn(268780|0);Kn(268768|0);Kn(268756|0);Kn(268744|0);Kn(268732|0);Kn(268720|0);Kn(268708|0);Kn(268696|0);Kn(268684|0);Kn(268672|0);Kn(268660|0);Kn(268648);i=a;return}function bx(a){a=a|0;a=i;Zn(269236|0);Zn(269224|0);Zn(269212|0);Zn(269200|0);Zn(269188|0);Zn(269176|0);Zn(269164|0);Zn(269152|0);Zn(269140|0);Zn(269128|0);Zn(269116|0);Zn(269104|0);Zn(269092|0);Zn(269080|0);Zn(269068|0);Zn(269056|0);Zn(269044|0);Zn(269032|0);Zn(269020|0);Zn(269008|0);Zn(268996|0);Zn(268984|0);Zn(268972|0);Zn(268960);i=a;return}function cx(a){a=a|0;a=i;Kn(270076|0);Kn(270064|0);Kn(270052|0);Kn(270040|0);Kn(270028|0);Kn(270016|0);Kn(270004|0);Kn(269992|0);Kn(269980|0);Kn(269968|0);Kn(269956|0);Kn(269944|0);Kn(269932|0);Kn(269920|0);Kn(269908|0);Kn(269896|0);Kn(269884|0);Kn(269872|0);Kn(269860|0);Kn(269848|0);Kn(269836|0);Kn(269824|0);Kn(269812|0);Kn(269800);i=a;return}function dx(a){a=a|0;a=i;Zn(270468|0);Zn(270456|0);Zn(270444|0);Zn(270432|0);Zn(270420|0);Zn(270408|0);Zn(270396|0);Zn(270384|0);Zn(270372|0);Zn(270360|0);Zn(270348|0);Zn(270336|0);Zn(270324|0);Zn(270312);i=a;return}function ex(a){a=a|0;a=i;Kn(271004|0);Kn(270992|0);Kn(270980|0);Kn(270968|0);Kn(270956|0);Kn(270944|0);Kn(270932|0);Kn(270920|0);Kn(270908|0);Kn(270896|0);Kn(270884|0);Kn(270872|0);Kn(270860|0);Kn(270848);i=a;return}function fx(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=i;d=fz(a,b,c)|0;i=e;return d|0}function gx(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=i;d=gz(a,b,c)|0;i=e;return d|0}function hx(a,b){a=a|0;b=b|0;return(a+ -48|0)>>>0<10|0}function ix(a,b){a=a|0;b=b|0;var c=0;c=i;b=Ky(a)|0;i=c;return b|0}function jx(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=i;a=kx(0,a,b,(c|0)!=0?c:271368)|0;i=d;return a|0}function kx(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+16|0;h=g;c[h>>2]=b;f=(f|0)==0?271376:f;k=c[f>>2]|0;a:do if((d|0)==0){if((k|0)==0){k=0;i=g;return k|0}}else{if((b|0)==0)c[h>>2]=h;else h=b;if((e|0)==0){k=-2;i=g;return k|0}do if((k|0)==0){b=a[d>>0]|0;j=b&255;if(b<<24>>24>-1){c[h>>2]=j;k=b<<24>>24!=0&1;i=g;return k|0}else{b=j+ -194|0;if(b>>>0>50)break a;k=c[271160+(b<<2)>>2]|0;b=e+ -1|0;d=d+1|0;break}}else b=e;while(0);b:do if((b|0)!=0){j=a[d>>0]|0;l=(j&255)>>>3;if((l+ -16|l+(k>>26))>>>0>7)break a;while(1){d=d+1|0;k=(j&255)+ -128|k<<6;b=b+ -1|0;if((k|0)>=0)break;if((b|0)==0)break b;j=a[d>>0]|0;if(((j&255)+ -128|0)>>>0>63)break a}c[f>>2]=0;c[h>>2]=k;l=e-b|0;i=g;return l|0}while(0);c[f>>2]=k;l=-2;i=g;return l|0}while(0);c[f>>2]=0;c[(vb()|0)>>2]=84;l=-1;i=g;return l|0}function lx(a){a=a|0;if((a|0)==0)a=1;else a=(c[a>>2]|0)==0;return a&1|0}function mx(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;h=i;i=i+1040|0;k=h+8|0;g=h;l=c[b>>2]|0;c[g>>2]=l;j=(a|0)!=0;m=j?e:256;e=j?a:k;a:do if((l|0)==0|(m|0)==0){k=l;a=0}else{a=0;while(1){n=d>>>2;o=n>>>0>=m>>>0;if(!(o|d>>>0>131)){k=l;break a}l=o?m:n;d=d-l|0;l=nx(e,g,l,f)|0;if((l|0)==-1)break;if((e|0)==(k|0))e=k;else{m=m-l|0;e=e+(l<<2)|0}a=l+a|0;l=c[g>>2]|0;if((l|0)==0|(m|0)==0){k=l;break a}}k=c[g>>2]|0;a=-1;m=0}while(0);b:do if((k|0)!=0?!((m|0)==0|(d|0)==0):0){while(1){l=kx(e,k,d,f)|0;if((l+2|0)>>>0<3)break;k=(c[g>>2]|0)+l|0;c[g>>2]=k;m=m+ -1|0;a=a+1|0;if((m|0)==0|(d|0)==(l|0))break b;else{d=d-l|0;e=e+4|0}}if((l|0)==0){c[g>>2]=0;break}else if((l|0)==-1){a=-1;break}else{c[f>>2]=0;break}}while(0);if(!j){i=h;return a|0}c[b>>2]=c[g>>2];i=h;return a|0}function nx(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;h=i;k=c[e>>2]|0;if((g|0)!=0?(l=c[g>>2]|0,(l|0)!=0):0)if((b|0)==0){j=f;g=16}else{c[g>>2]=0;j=f;g=37}else if((b|0)==0){j=f;g=7}else{j=f;g=6}a:while(1)if((g|0)==6){if((j|0)==0){g=26;break}while(1){l=a[k>>0]|0;do if(((l&255)+ -1|0)>>>0<127?(k&3|0)==0&j>>>0>4:0){while(1){l=c[k>>2]|0;if(((l+ -16843009|l)&-2139062144|0)!=0){g=31;break}c[b>>2]=l&255;c[b+4>>2]=d[k+1>>0];c[b+8>>2]=d[k+2>>0];n=k+4|0;m=b+16|0;c[b+12>>2]=d[k+3>>0];j=j+ -4|0;if(j>>>0>4){k=n;b=m}else{g=32;break}}if((g|0)==31){l=l&255;break}else if((g|0)==32){l=a[n>>0]|0;k=n;b=m;break}}while(0);g=l&255;if(!((g+ -1|0)>>>0<127))break;k=k+1|0;c[b>>2]=g;j=j+ -1|0;if((j|0)==0){g=26;break a}else b=b+4|0}g=g+ -194|0;if(g>>>0>50){g=48;break}l=c[271160+(g<<2)>>2]|0;k=k+1|0;g=37;continue}else if((g|0)==7){g=a[k>>0]|0;if(((g&255)+ -1|0)>>>0<127?(k&3|0)==0:0){g=c[k>>2]|0;if(((g+ -16843009|g)&-2139062144|0)==0)do{k=k+4|0;j=j+ -4|0;g=c[k>>2]|0}while(((g+ -16843009|g)&-2139062144|0)==0);g=g&255}g=g&255;if((g+ -1|0)>>>0<127){k=k+1|0;j=j+ -1|0;g=7;continue}g=g+ -194|0;if(g>>>0>50){g=48;break}l=c[271160+(g<<2)>>2]|0;k=k+1|0;g=16;continue}else if((g|0)==16){n=(d[k>>0]|0)>>>3;if((n+ -16|n+(l>>26))>>>0>7){g=17;break}g=k+1|0;if((l&33554432|0)!=0){if(((d[g>>0]|0)+ -128|0)>>>0>63){g=20;break}g=k+2|0;if((l&524288|0)==0)k=g;else{if(((d[g>>0]|0)+ -128|0)>>>0>63){g=23;break}k=k+3|0}}else k=g;j=j+ -1|0;g=7;continue}else if((g|0)==37){m=d[k>>0]|0;n=m>>>3;if((n+ -16|n+(l>>26))>>>0>7){g=38;break}g=k+1|0;l=m+ -128|l<<6;if((l|0)<0){m=(d[g>>0]|0)+ -128|0;if(m>>>0>63){g=41;break}g=k+2|0;l=m|l<<6;if((l|0)<0){g=(d[g>>0]|0)+ -128|0;if(g>>>0>63){g=44;break}l=g|l<<6;k=k+3|0}else k=g}else k=g;c[b>>2]=l;j=j+ -1|0;b=b+4|0;g=6;continue}if((g|0)==17){k=k+ -1|0;g=47}else if((g|0)==20){k=k+ -1|0;g=47}else if((g|0)==23){k=k+ -1|0;g=47}else if((g|0)==26){c[e>>2]=k;n=f;i=h;return n|0}else if((g|0)==38){k=k+ -1|0;g=47}else if((g|0)==41){k=k+ -1|0;g=47}else if((g|0)==44){k=k+ -1|0;g=47}if((g|0)==47)if((l|0)==0)g=48;if((g|0)==48)if((a[k>>0]|0)==0){if((b|0)!=0){c[b>>2]=0;c[e>>2]=0}n=f-j|0;i=h;return n|0}c[(vb()|0)>>2]=84;if((b|0)==0){n=-1;i=h;return n|0}c[e>>2]=k;n=-1;i=h;return n|0}function ox(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;i=i+16|0;h=g;c[h>>2]=b;if((e|0)==0){j=0;i=g;return j|0}do if((f|0)!=0){if((b|0)==0)c[h>>2]=h;else h=b;b=a[e>>0]|0;j=b&255;if(b<<24>>24>-1){c[h>>2]=j;j=b<<24>>24!=0&1;i=g;return j|0}j=j+ -194|0;if(!(j>>>0>50)){b=e+1|0;j=c[271160+(j<<2)>>2]|0;if(f>>>0<4?(j&-2147483648>>>((f*6|0)+ -6|0)|0)!=0:0)break;f=d[b>>0]|0;b=f>>>3;if(!((b+ -16|b+(j>>26))>>>0>7)){f=f+ -128|j<<6;if((f|0)>=0){c[h>>2]=f;j=2;i=g;return j|0}b=(d[e+2>>0]|0)+ -128|0;if(!(b>>>0>63)){f=b|f<<6;if((f|0)>=0){c[h>>2]=f;j=3;i=g;return j|0}e=(d[e+3>>0]|0)+ -128|0;if(!(e>>>0>63)){c[h>>2]=e|f<<6;j=4;i=g;return j|0}}}}}while(0);c[(vb()|0)>>2]=84;j=-1;i=g;return j|0}function px(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;h=i;i=i+272|0;j=h+8|0;g=h;k=c[b>>2]|0;c[g>>2]=k;f=(a|0)!=0;l=f?e:256;e=f?a:j;a:do if((k|0)==0|(l|0)==0){j=k;a=0}else{a=0;while(1){m=d>>>0>=l>>>0;if(!(m|d>>>0>32)){j=k;break a}k=m?l:d;d=d-k|0;k=qx(e,g,k,0)|0;if((k|0)==-1)break;if((e|0)==(j|0))e=j;else{l=l-k|0;e=e+k|0}a=k+a|0;k=c[g>>2]|0;if((k|0)==0|(l|0)==0){j=k;break a}}j=c[g>>2]|0;a=-1;l=0}while(0);b:do if((j|0)!=0?!((l|0)==0|(d|0)==0):0){while(1){k=Vy(e,c[j>>2]|0,0)|0;if((k+1|0)>>>0<2)break;j=(c[g>>2]|0)+4|0;c[g>>2]=j;d=d+ -1|0;a=a+1|0;if((l|0)==(k|0)|(d|0)==0)break b;else{l=l-k|0;e=e+k|0}}if((k|0)==0)c[g>>2]=0;else a=-1}while(0);if(!f){i=h;return a|0}c[b>>2]=c[g>>2];i=h;return a|0}function qx(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+16|0;f=g;if((b|0)==0){j=c[d>>2]|0;k=c[j>>2]|0;if((k|0)==0){m=0;i=g;return m|0}else h=0;while(1){if(k>>>0>127){k=Vy(f,k,0)|0;if((k|0)==-1){h=-1;j=26;break}}else k=1;h=k+h|0;j=j+4|0;k=c[j>>2]|0;if((k|0)==0){j=26;break}}if((j|0)==26){i=g;return h|0}}a:do if(e>>>0>3){l=c[d>>2]|0;k=e;while(1){m=c[l>>2]|0;if((m+ -1|0)>>>0>126){if((m|0)==0)break;m=Vy(b,m,0)|0;if((m|0)==-1){h=-1;j=26;break}k=k-m|0;b=b+m|0}else{a[b>>0]=m;l=c[d>>2]|0;k=k+ -1|0;b=b+1|0}l=l+4|0;c[d>>2]=l;if(!(k>>>0>3))break a}if((j|0)==26){i=g;return h|0}a[b>>0]=0;c[d>>2]=0;m=e-k|0;i=g;return m|0}else k=e;while(0);if((k|0)==0){m=e;i=g;return m|0}j=c[d>>2]|0;while(1){l=c[j>>2]|0;if((l+ -1|0)>>>0>126){if((l|0)==0){j=19;break}m=Vy(f,l,0)|0;if((m|0)==-1){h=-1;j=26;break}if(m>>>0>k>>>0){j=22;break}Vy(b,c[j>>2]|0,0)|0;l=k-m|0;m=b+m|0}else{a[b>>0]=l;j=c[d>>2]|0;l=k+ -1|0;m=b+1|0}j=j+4|0;c[d>>2]=j;if((l|0)==0){h=e;j=26;break}else{k=l;b=m}}if((j|0)==19){a[b>>0]=0;c[d>>2]=0;m=e-k|0;i=g;return m|0}else if((j|0)==22){m=e-k|0;i=g;return m|0}else if((j|0)==26){i=g;return h|0}return 0}function rx(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;f=a+84|0;g=c[f>>2]|0;h=d+256|0;j=hz(g,0,h)|0;if((j|0)!=0)h=j-g|0;j=h>>>0<d>>>0?h:d;qz(b|0,g|0,j|0)|0;c[a+4>>2]=g+j;h=g+h|0;c[a+8>>2]=h;c[f>>2]=h;i=e;return j|0}function sx(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;f=e;c[f>>2]=d;d=vx(a,b,f)|0;i=e;return d|0}function tx(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;j=e;f=Dy(240)|0;do if((f|0)!=0){c[j>>2]=c[d>>2];j=cz(f,240,b,j)|0;if(j>>>0<240){h=Gy(f,j+1|0)|0;c[a>>2]=(h|0)!=0?h:f;break}Ey(f);if((j|0)>=0?(h=j+1|0,g=Dy(h)|0,c[a>>2]=g,(g|0)!=0):0)j=cz(g,h,b,d)|0;else j=-1}else j=-1;while(0);i=e;return j|0}function ux(e,f,j){e=e|0;f=f|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0.0;l=i;i=i+304|0;n=l+16|0;z=l+8|0;p=l+33|0;t=l;o=l+32|0;B=a[f>>0]|0;if(B<<24>>24==0){N=0;i=l;return N|0}s=e+4|0;A=e+100|0;r=e+108|0;q=e+8|0;w=p+10|0;v=p+33|0;u=z+4|0;x=p+46|0;y=p+94|0;m=0;D=0;I=0;G=0;a:while(1){b:do if((Jy(B&255)|0)==0){C=(a[f>>0]|0)==37;c:do if(C){J=f+1|0;B=a[J>>0]|0;do if(B<<24>>24==42){B=0;J=f+2|0}else if(B<<24>>24==37)break c;else{C=(B&255)+ -48|0;if(C>>>0<10?(a[f+2>>0]|0)==36:0){c[n>>2]=c[j>>2];while(1){N=c[n>>2]|0;B=c[N>>2]|0;c[n>>2]=N+4;if(C>>>0>1)C=C+ -1|0;else break}J=f+3|0;break}N=c[j>>2]|0;B=c[N>>2]|0;c[j>>2]=N+4}while(0);F=a[J>>0]|0;C=F&255;if((C+ -48|0)>>>0<10){E=0;do{E=(E*10|0)+ -48+C|0;J=J+1|0;F=a[J>>0]|0;C=F&255}while((C+ -48|0)>>>0<10)}else E=0;if(F<<24>>24==109){J=J+1|0;F=a[J>>0]|0;C=(B|0)!=0&1;I=0;G=0}else C=0;f=J+1|0;switch(F&255|0){case 104:{F=(a[f>>0]|0)==104;f=F?J+2|0:f;F=F?-2:-1;break};case 106:{F=3;break};case 108:{F=(a[f>>0]|0)==108;f=F?J+2|0:f;F=F?3:1;break};case 116:case 122:{F=1;break};case 76:{F=2;break};case 110:case 112:case 67:case 83:case 91:case 99:case 115:case 88:case 71:case 70:case 69:case 65:case 103:case 102:case 101:case 97:case 120:case 117:case 111:case 105:case 100:{f=J;F=0;break};default:{k=162;break a}}L=d[f>>0]|0;J=(L&47|0)==3;L=J?L|32:L;J=J?1:F;if((L|0)!=91)if((L|0)==99)E=(E|0)<1?1:E;else if((L|0)==110){if((B|0)==0)break b;switch(J|0){case-2:{a[B>>0]=D;break b};case-1:{b[B>>1]=D;break b};case 0:{c[B>>2]=D;break b};case 1:{c[B>>2]=D;break b};case 3:{N=B;c[N>>2]=D;c[N+4>>2]=((D|0)<0)<<31>>31;break b};default:break b}}else{Oy(e,0);do{F=c[s>>2]|0;if(F>>>0<(c[A>>2]|0)>>>0){c[s>>2]=F+1;F=d[F>>0]|0}else F=Py(e)|0}while((Jy(F)|0)!=0);F=c[s>>2]|0;if((c[A>>2]|0)!=0){F=F+ -1|0;c[s>>2]=F}D=(c[r>>2]|0)+D+F-(c[q>>2]|0)|0}Oy(e,E);F=c[s>>2]|0;K=c[A>>2]|0;if(F>>>0<K>>>0)c[s>>2]=F+1;else{if((Py(e)|0)<0){k=162;break a}K=c[A>>2]|0}if((K|0)!=0)c[s>>2]=(c[s>>2]|0)+ -1;d:do switch(L|0){case 91:case 99:case 115:{F=(L|0)==99;e:do if((L&239|0)==99){lz(p|0,-1,257)|0;a[p>>0]=0;if((L|0)==115){a[v>>0]=0;a[w+0>>0]=0;a[w+1>>0]=0;a[w+2>>0]=0;a[w+3>>0]=0;a[w+4>>0]=0}}else{N=f+1|0;M=(a[N>>0]|0)==94;L=M&1;f=M?f+2|0:N;lz(p|0,M&1|0,257)|0;a[p>>0]=0;M=a[f>>0]|0;if(M<<24>>24==45){L=(L^1)&255;a[x>>0]=L;f=f+1|0}else if(M<<24>>24==93){L=(L^1)&255;a[y>>0]=L;f=f+1|0}else L=(L^1)&255;while(1){N=a[f>>0]|0;if(N<<24>>24==45){M=f+1|0;N=a[M>>0]|0;if(!(N<<24>>24==93|N<<24>>24==0)){f=a[f+ -1>>0]|0;if((f&255)<(N&255)){f=f&255;do{f=f+1|0;a[p+f>>0]=L;N=a[M>>0]|0}while((f|0)<(N&255|0));f=M}else f=M}else N=45}else if(N<<24>>24==93)break e;else if(N<<24>>24==0){k=162;break a}a[p+((N&255)+1)>>0]=L;f=f+1|0}}while(0);M=F?E+1|0:31;I=(J|0)==1;G=(C|0)!=0;f:do if(I){if(G){J=Dy(M<<2)|0;if((J|0)==0){I=0;G=J;k=162;break a}}else J=B;c[z>>2]=0;c[u>>2]=0;L=0;K=M;g:while(1){if((J|0)==0)while(1){M=c[s>>2]|0;if(M>>>0<(c[A>>2]|0)>>>0){c[s>>2]=M+1;M=d[M>>0]|0}else M=Py(e)|0;if((a[p+(M+1)>>0]|0)==0){J=0;break g}a[o>>0]=M;M=kx(t,o,1,z)|0;if((M|0)==-2)continue;else if((M|0)==-1){I=0;G=0;k=162;break a}if(G&(L|0)==(K|0))break}else{if(!G){k=98;break}while(1){while(1){M=c[s>>2]|0;if(M>>>0<(c[A>>2]|0)>>>0){c[s>>2]=M+1;M=d[M>>0]|0}else M=Py(e)|0;if((a[p+(M+1)>>0]|0)==0)break g;a[o>>0]=M;M=kx(t,o,1,z)|0;if((M|0)==-1){I=0;G=J;k=162;break a}else if(!((M|0)==-2))break}c[J+(L<<2)>>2]=c[t>>2];L=L+1|0;if((L|0)==(K|0)){L=K;break}}}K=K<<1|1;M=Gy(J,K<<2)|0;if((M|0)==0){I=0;G=J;k=162;break a}J=M}h:do if((k|0)==98)while(1){k=0;while(1){K=c[s>>2]|0;if(K>>>0<(c[A>>2]|0)>>>0){c[s>>2]=K+1;K=d[K>>0]|0}else K=Py(e)|0;if((a[p+(K+1)>>0]|0)==0)break h;a[o>>0]=K;K=kx(t,o,1,z)|0;if((K|0)==-1){C=0;I=0;G=J;k=162;break a}else if(!((K|0)==-2))break}c[J+(L<<2)>>2]=c[t>>2];L=L+1|0;k=98}while(0);if((lx(z)|0)==0){I=0;G=J;k=162;break a}else K=0}else{if(G){J=Dy(M)|0;if((J|0)==0){I=0;G=0;k=162;break a}else{L=0;K=M}while(1){do{M=c[s>>2]|0;if(M>>>0<(c[A>>2]|0)>>>0){c[s>>2]=M+1;M=d[M>>0]|0}else M=Py(e)|0;if((a[p+(M+1)>>0]|0)==0){K=J;J=0;break f}a[J+L>>0]=M;L=L+1|0}while((L|0)!=(K|0));M=K<<1|1;L=Gy(J,M)|0;if((L|0)==0){I=J;G=0;k=162;break a}else{N=K;K=M;J=L;L=N}}}if((B|0)==0)while(1){J=c[s>>2]|0;if(J>>>0<K>>>0){c[s>>2]=J+1;J=d[J>>0]|0}else J=Py(e)|0;if((a[p+(J+1)>>0]|0)==0){L=0;K=0;J=0;break f}K=c[A>>2]|0}else{L=0;while(1){J=c[s>>2]|0;if(J>>>0<K>>>0){c[s>>2]=J+1;J=d[J>>0]|0}else J=Py(e)|0;if((a[p+(J+1)>>0]|0)==0){K=B;J=0;break f}a[B+L>>0]=J;K=c[A>>2]|0;L=L+1|0}}}while(0);M=c[s>>2]|0;if((c[A>>2]|0)!=0){M=M+ -1|0;c[s>>2]=M}M=M-(c[q>>2]|0)+(c[r>>2]|0)|0;if((M|0)==0){I=K;G=J;break a}if(!((M|0)==(E|0)|F^1)){I=K;G=J;break a}do if(G)if(I){c[B>>2]=J;break}else{c[B>>2]=K;break}while(0);if(!F){if((J|0)!=0)c[J+(L<<2)>>2]=0;if((K|0)==0){I=0;G=J}else{a[K+L>>0]=0;I=K;G=J}}else{I=K;G=J}break};case 111:{E=8;k=144;break};case 117:case 100:{E=10;k=144;break};case 105:{E=0;k=144;break};case 120:case 88:case 112:{E=16;k=144;break};case 71:case 103:case 70:case 102:case 69:case 101:case 65:case 97:{O=+My(e,J,0);if((c[r>>2]|0)==((c[q>>2]|0)-(c[s>>2]|0)|0))break a;if((B|0)!=0)if((J|0)==1){h[B>>3]=O;break d}else if((J|0)==2){h[B>>3]=O;break d}else if((J|0)==0){g[B>>2]=O;break d}else break d;break};default:{}}while(0);i:do if((k|0)==144){k=0;E=Ly(e,E,0,-1,-1)|0;if((c[r>>2]|0)==((c[q>>2]|0)-(c[s>>2]|0)|0))break a;C=(B|0)==0;if(!((L|0)!=112|C)){c[B>>2]=E;break}if(!C)switch(J|0){case-2:{a[B>>0]=E;break i};case-1:{b[B>>1]=E;break i};case 0:{c[B>>2]=E;break i};case 1:{c[B>>2]=E;break i};case 3:{N=B;c[N>>2]=E;c[N+4>>2]=H;break i};default:break i}}while(0);m=((B|0)!=0&1)+m|0;D=(c[r>>2]|0)+D+(c[s>>2]|0)-(c[q>>2]|0)|0;break b}while(0);f=f+(C&1)|0;Oy(e,0);B=c[s>>2]|0;if(B>>>0<(c[A>>2]|0)>>>0){c[s>>2]=B+1;B=d[B>>0]|0}else B=Py(e)|0;if((B|0)!=(d[f>>0]|0)){k=19;break a}D=D+1|0}else{while(1){B=f+1|0;if((Jy(d[B>>0]|0)|0)==0)break;else f=B}Oy(e,0);do{B=c[s>>2]|0;if(B>>>0<(c[A>>2]|0)>>>0){c[s>>2]=B+1;B=d[B>>0]|0}else B=Py(e)|0}while((Jy(B)|0)!=0);B=c[s>>2]|0;if((c[A>>2]|0)!=0){B=B+ -1|0;c[s>>2]=B}D=(c[r>>2]|0)+D+B-(c[q>>2]|0)|0}while(0);f=f+1|0;B=a[f>>0]|0;if(B<<24>>24==0){k=165;break}}if((k|0)==165){i=l;return m|0}if((k|0)==19){if((c[A>>2]|0)!=0)c[s>>2]=(c[s>>2]|0)+ -1;if((B|0)<0){C=0;k=162}else{N=m;i=l;return N|0}}if((k|0)==162)m=(((m|0)==0)<<31>>31)+m|0;if((C|0)==0){N=m;i=l;return N|0}Ey(I);Ey(G);N=m;i=l;return N|0}function vx(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;g=i;i=i+112|0;f=g;h=f+0|0;e=h+112|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(e|0));c[f+32>>2]=26;c[f+44>>2]=a;c[f+76>>2]=-1;c[f+84>>2]=a;d=ux(f,b,d)|0;i=g;return d|0}function wx(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=i;a=rx(a,b,c)|0;i=d;return a|0}function xx(a){a=a|0;var b=0,d=0;b=i;d=a;while(1)if((c[d>>2]|0)==0)break;else d=d+4|0;i=b;return d-a>>2|0}function yx(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;if((d|0)==0){i=e;return a|0}else f=a;while(1){d=d+ -1|0;c[f>>2]=c[b>>2];if((d|0)==0)break;else{f=f+4|0;b=b+4|0}}i=e;return a|0}function zx(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;f=(d|0)==0;if(a-b>>2>>>0<d>>>0){if(f){i=e;return a|0}do{d=d+ -1|0;c[a+(d<<2)>>2]=c[b+(d<<2)>>2]}while((d|0)!=0);i=e;return a|0}else{if(f){i=e;return a|0}else f=a;while(1){d=d+ -1|0;c[f>>2]=c[b>>2];if((d|0)==0)break;else{f=f+4|0;b=b+4|0}}i=e;return a|0}return 0}function Ax(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;if((d|0)==0){i=e;return a|0}else f=a;while(1){d=d+ -1|0;c[f>>2]=b;if((d|0)==0)break;else f=f+4|0}i=e;return a|0}function Bx(a,b){a=a|0;b=b|0;var d=0;d=i;i=i+16|0;c[d>>2]=b;b=c[p>>2]|0;Ja(b|0,a|0,d|0)|0;Ab(10,b|0)|0;Fb()}function Cx(){var a=0,b=0,d=0,e=0,f=0;a=i;i=i+16|0;b=a;a=a+12|0;d=Dx()|0;if((d|0)==0)Bx(271552,b);d=c[d>>2]|0;if((d|0)==0)Bx(271552,b);f=d+48|0;e=c[f>>2]|0;f=c[f+4>>2]|0;if(!((e&-256|0)==1126902528&(f|0)==1129074247)){c[b>>2]=c[67848];Bx(271512,b)}if((e|0)==1126902529&(f|0)==1129074247)e=c[d+44>>2]|0;else e=d+80|0;c[a>>2]=e;f=c[d>>2]|0;d=c[f+4>>2]|0;if(Sb[c[(c[271944>>2]|0)+16>>2]&31](271944,f,a)|0){f=c[a>>2]|0;e=c[67848]|0;f=Yb[c[(c[f>>2]|0)+8>>2]&63](f)|0;c[b>>2]=e;c[b+4>>2]=d;c[b+8>>2]=f;Bx(271416,b)}else{c[b>>2]=c[67848];c[b+4>>2]=d;Bx(271464,b)}}function Dx(){var a=0,b=0;a=i;i=i+16|0;if((nb(271576,2)|0)==0){b=ib(c[67892]|0)|0;i=a;return b|0}else Bx(271584,a);return 0}function Ex(){var a=0;a=i;i=i+16|0;if((rb(271568,125)|0)==0){i=a;return}else Bx(271640,a)}function Fx(a){a=a|0;var b=0;b=i;i=i+16|0;Ey(a);if((xb(c[67892]|0,0)|0)==0){i=b;return}else Bx(271696,b)}function Gx(a){a=a|0;var b=0,d=0;b=i;a=(a|0)==0?1:a;d=Dy(a)|0;if((d|0)!=0){i=b;return d|0}while(1){d=Qx()|0;if((d|0)==0){a=4;break}ac[d&3]();d=Dy(a)|0;if((d|0)!=0){a=5;break}}if((a|0)==4){d=Na(4)|0;c[d>>2]=271760;Bb(d|0,271808,96)}else if((a|0)==5){i=b;return d|0}return 0}function Hx(a){a=a|0;var b=0;b=i;a=Gx(a)|0;i=b;return a|0}function Ix(a){a=a|0;var b=0;b=i;Ey(a);i=b;return}function Jx(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function Kx(a){a=a|0;c[a>>2]=271760;return}function Lx(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function Mx(a){a=a|0;return}function Nx(a){a=a|0;return 271776}function Ox(a){a=a|0;var b=0;b=i;i=i+16|0;ac[a&3]();Bx(271824,b)}function Px(){var a=0,b=0;b=Dx()|0;if(((b|0)!=0?(a=c[b>>2]|0,(a|0)!=0):0)?(b=a+48|0,(c[b>>2]&-256|0)==1126902528?(c[b+4>>2]|0)==1129074247:0):0)Ox(c[a+12>>2]|0);b=c[67846]|0;c[67846]=b+0;Ox(b)}function Qx(){var a=0;a=c[67980]|0;c[67980]=a+0;return a|0}function Rx(a){a=a|0;return}function Sx(a){a=a|0;var b=0;b=i;Tx(a);Ix(a);i=b;return}function Tx(a){a=a|0;var b=0;b=i;c[a>>2]=271960;_x(a+4|0);i=b;return}function Ux(a){a=a|0;return c[a+4>>2]|0}function Vx(a){a=a|0;var b=0;b=i;Wx(a);Ix(a);i=b;return}function Wx(a){a=a|0;var b=0;b=i;c[a>>2]=271984;_x(a+4|0);i=b;return}function Xx(a){a=a|0;return c[a+4>>2]|0}function Yx(a){a=a|0;var b=0;b=i;Tx(a);Ix(a);i=b;return}function Zx(a){a=a|0;var b=0;b=i;Wx(a);Ix(a);i=b;return}function _x(a){a=a|0;var b=0,d=0,e=0;b=i;e=(c[a>>2]|0)+ -4|0;d=c[e>>2]|0;c[e>>2]=d+ -1;if((d+ -1|0)>=0){i=b;return}Ix((c[a>>2]|0)+ -12|0);i=b;return}function $x(a){a=a|0;return}function ay(a){a=a|0;c[a>>2]=272208;return}function by(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function cy(a){a=a|0;return}function dy(a){a=a|0;return 272224}function ey(a){a=a|0;return}function fy(a){a=a|0;return}function gy(a){a=a|0;return}function hy(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function iy(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function jy(a){a=a|0;var b=0;b=i;Ix(a);i=b;return}function ky(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+64|0;f=e;if((a|0)==(b|0)){h=1;i=e;return h|0}if((b|0)==0){h=0;i=e;return h|0}b=qy(b,272336,272392,0)|0;if((b|0)==0){h=0;i=e;return h|0}h=f+0|0;g=h+56|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(g|0));c[f>>2]=b;c[f+8>>2]=a;c[f+12>>2]=-1;c[f+48>>2]=1;hc[c[(c[b>>2]|0)+28>>2]&7](b,f,c[d>>2]|0,1);if((c[f+24>>2]|0)!=1){h=0;i=e;return h|0}c[d>>2]=c[f+16>>2];h=1;i=e;return h|0}function ly(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;b=i;g=d+16|0;h=c[g>>2]|0;if((h|0)==0){c[g>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;i=b;return}if((h|0)!=(e|0)){h=d+36|0;c[h>>2]=(c[h>>2]|0)+1;c[d+24>>2]=2;a[d+54>>0]=1;i=b;return}e=d+24|0;if((c[e>>2]|0)!=2){i=b;return}c[e>>2]=f;i=b;return}function my(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;if((c[b+8>>2]|0)!=(a|0)){i=f;return}ly(0,b,d,e);i=f;return}function ny(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;if((a|0)==(c[b+8>>2]|0)){ly(0,b,d,e);i=f;return}else{a=c[a+8>>2]|0;hc[c[(c[a>>2]|0)+28>>2]&7](a,b,d,e);i=f;return}}function oy(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;g=c[a+4>>2]|0;h=g>>8;if((g&1|0)!=0)h=c[(c[d>>2]|0)+h>>2]|0;a=c[a>>2]|0;hc[c[(c[a>>2]|0)+28>>2]&7](a,b,d+h|0,(g&2|0)!=0?e:2);i=f;return}function py(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;if((b|0)==(c[d+8>>2]|0)){ly(0,d,e,f);i=g;return}j=c[b+12>>2]|0;h=b+(j<<3)+16|0;oy(b+16|0,d,e,f);if((j|0)<=1){i=g;return}j=d+54|0;b=b+24|0;while(1){oy(b,d,e,f);if((a[j>>0]|0)!=0){f=7;break}b=b+8|0;if(!(b>>>0<h>>>0)){f=7;break}}if((f|0)==7){i=g;return}}function qy(d,e,f,g){d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;h=i;i=i+64|0;j=h;k=c[d>>2]|0;l=d+(c[k+ -8>>2]|0)|0;k=c[k+ -4>>2]|0;c[j>>2]=f;c[j+4>>2]=d;c[j+8>>2]=e;c[j+12>>2]=g;n=j+16|0;o=j+20|0;e=j+24|0;m=j+28|0;g=j+32|0;d=j+40|0;p=(k|0)==(f|0);q=n+0|0;f=q+36|0;do{c[q>>2]=0;q=q+4|0}while((q|0)<(f|0));b[n+36>>1]=0;a[n+38>>0]=0;if(p){c[j+48>>2]=1;ec[c[(c[k>>2]|0)+20>>2]&15](k,j,l,l,1,0);q=(c[e>>2]|0)==1?l:0;i=h;return q|0}Ub[c[(c[k>>2]|0)+24>>2]&3](k,j,l,1,0);j=c[j+36>>2]|0;if((j|0)==0){if((c[d>>2]|0)!=1){q=0;i=h;return q|0}if((c[m>>2]|0)!=1){q=0;i=h;return q|0}q=(c[g>>2]|0)==1?c[o>>2]|0:0;i=h;return q|0}else if((j|0)==1){if((c[e>>2]|0)!=1){if((c[d>>2]|0)!=0){q=0;i=h;return q|0}if((c[m>>2]|0)!=1){q=0;i=h;return q|0}if((c[g>>2]|0)!=1){q=0;i=h;return q|0}}q=c[n>>2]|0;i=h;return q|0}else{q=0;i=h;return q|0}return 0}function ry(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;b=i;a[d+53>>0]=1;if((c[d+4>>2]|0)!=(f|0)){i=b;return}a[d+52>>0]=1;f=d+16|0;h=c[f>>2]|0;if((h|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((g|0)==1?(c[d+48>>2]|0)==1:0)){i=b;return}a[d+54>>0]=1;i=b;return}if((h|0)!=(e|0)){h=d+36|0;c[h>>2]=(c[h>>2]|0)+1;a[d+54>>0]=1;i=b;return}e=d+24|0;f=c[e>>2]|0;if((f|0)==2)c[e>>2]=g;else g=f;if(!((g|0)==1?(c[d+48>>2]|0)==1:0)){i=b;return}a[d+54>>0]=1;i=b;return}function sy(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;h=i;if((b|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)!=(e|0)){i=h;return}e=d+28|0;if((c[e>>2]|0)==1){i=h;return}c[e>>2]=f;i=h;return}if((b|0)!=(c[d>>2]|0)){u=c[b+12>>2]|0;m=b+(u<<3)+16|0;uy(b+16|0,d,e,f,g);n=b+24|0;if((u|0)<=1){i=h;return}p=c[b+8>>2]|0;if((p&2|0)==0?(o=d+36|0,(c[o>>2]|0)!=1):0){if((p&1|0)==0){q=d+54|0;p=n;while(1){if((a[q>>0]|0)!=0){p=43;break}if((c[o>>2]|0)==1){p=43;break}uy(p,d,e,f,g);p=p+8|0;if(!(p>>>0<m>>>0)){p=43;break}}if((p|0)==43){i=h;return}}p=d+24|0;q=d+54|0;r=n;while(1){if((a[q>>0]|0)!=0){p=43;break}if((c[o>>2]|0)==1?(c[p>>2]|0)==1:0){p=43;break}uy(r,d,e,f,g);r=r+8|0;if(!(r>>>0<m>>>0)){p=43;break}}if((p|0)==43){i=h;return}}o=d+54|0;while(1){if((a[o>>0]|0)!=0){p=43;break}uy(n,d,e,f,g);n=n+8|0;if(!(n>>>0<m>>>0)){p=43;break}}if((p|0)==43){i=h;return}}if((c[d+16>>2]|0)!=(e|0)?(j=d+20|0,(c[j>>2]|0)!=(e|0)):0){c[d+32>>2]=f;m=d+44|0;if((c[m>>2]|0)==4){i=h;return}u=c[b+12>>2]|0;t=b+(u<<3)+16|0;a:do if((u|0)>0){o=d+52|0;n=d+53|0;r=d+54|0;q=b+8|0;p=d+24|0;u=0;s=0;b=b+16|0;b:do{a[o>>0]=0;a[n>>0]=0;ty(b,d,e,e,1,g);if((a[r>>0]|0)!=0)break;do if((a[n>>0]|0)!=0){if((a[o>>0]|0)==0)if((c[q>>2]&1|0)==0){s=1;break b}else{s=1;break}if((c[p>>2]|0)==1){p=25;break a}if((c[q>>2]&2|0)==0){p=25;break a}else{u=1;s=1}}while(0);b=b+8|0}while(b>>>0<t>>>0);if(u){l=s;p=24}else{k=s;p=21}}else{k=0;p=21}while(0);if((p|0)==21){c[j>>2]=e;u=d+40|0;c[u>>2]=(c[u>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0){a[d+54>>0]=1;if(k)p=25;else p=26}else{l=k;p=24}}if((p|0)==24)if(l)p=25;else p=26;if((p|0)==25){c[m>>2]=3;i=h;return}else if((p|0)==26){c[m>>2]=4;i=h;return}}if((f|0)!=1){i=h;return}c[d+32>>2]=1;i=h;return}function ty(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;h=i;j=c[a+4>>2]|0;k=j>>8;if((j&1|0)!=0)k=c[(c[e>>2]|0)+k>>2]|0;a=c[a>>2]|0;ec[c[(c[a>>2]|0)+20>>2]&15](a,b,d,e+k|0,(j&2|0)!=0?f:2,g);i=h;return}function uy(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;h=c[a+4>>2]|0;j=h>>8;if((h&1|0)!=0)j=c[(c[d>>2]|0)+j>>2]|0;a=c[a>>2]|0;Ub[c[(c[a>>2]|0)+24>>2]&3](a,b,d+j|0,(h&2|0)!=0?e:2,f);i=g;return}function vy(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;if((b|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)!=(e|0)){i=h;return}j=d+28|0;if((c[j>>2]|0)==1){i=h;return}c[j>>2]=f;i=h;return}if((b|0)!=(c[d>>2]|0)){l=c[b+8>>2]|0;Ub[c[(c[l>>2]|0)+24>>2]&3](l,d,e,f,g);i=h;return}if((c[d+16>>2]|0)!=(e|0)?(k=d+20|0,(c[k>>2]|0)!=(e|0)):0){c[d+32>>2]=f;f=d+44|0;if((c[f>>2]|0)==4){i=h;return}l=d+52|0;a[l>>0]=0;m=d+53|0;a[m>>0]=0;b=c[b+8>>2]|0;ec[c[(c[b>>2]|0)+20>>2]&15](b,d,e,e,1,g);if((a[m>>0]|0)!=0){if((a[l>>0]|0)==0){b=1;j=13}}else{b=0;j=13}do if((j|0)==13){c[k>>2]=e;m=d+40|0;c[m>>2]=(c[m>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0){a[d+54>>0]=1;if(b)break}else j=16;if((j|0)==16?b:0)break;c[f>>2]=4;i=h;return}while(0);c[f>>2]=3;i=h;return}if((f|0)!=1){i=h;return}c[d+32>>2]=1;i=h;return}function wy(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;g=i;if((c[d+8>>2]|0)==(b|0)){if((c[d+4>>2]|0)!=(e|0)){i=g;return}d=d+28|0;if((c[d>>2]|0)==1){i=g;return}c[d>>2]=f;i=g;return}if((c[d>>2]|0)!=(b|0)){i=g;return}if((c[d+16>>2]|0)!=(e|0)?(h=d+20|0,(c[h>>2]|0)!=(e|0)):0){c[d+32>>2]=f;c[h>>2]=e;b=d+40|0;c[b>>2]=(c[b>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0)a[d+54>>0]=1;c[d+44>>2]=4;i=g;return}if((f|0)!=1){i=g;return}c[d+32>>2]=1;i=g;return}function xy(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;m=i;if((b|0)==(c[d+8>>2]|0)){ry(0,d,e,f,g);i=m;return}j=d+52|0;l=a[j>>0]|0;o=d+53|0;n=a[o>>0]|0;r=c[b+12>>2]|0;p=b+(r<<3)+16|0;a[j>>0]=0;a[o>>0]=0;ty(b+16|0,d,e,f,g,h);a:do if((r|0)>1){k=d+24|0;q=b+8|0;r=d+54|0;b=b+24|0;do{if((a[r>>0]|0)!=0)break a;if((a[j>>0]|0)==0){if((a[o>>0]|0)!=0?(c[q>>2]&1|0)==0:0)break a}else{if((c[k>>2]|0)==1)break a;if((c[q>>2]&2|0)==0)break a}a[j>>0]=0;a[o>>0]=0;ty(b,d,e,f,g,h);b=b+8|0}while(b>>>0<p>>>0)}while(0);a[j>>0]=l;a[o>>0]=n;i=m;return}function yy(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;h=i;if((a|0)==(c[b+8>>2]|0)){ry(0,b,d,e,f);i=h;return}else{a=c[a+8>>2]|0;ec[c[(c[a>>2]|0)+20>>2]&15](a,b,d,e,f,g);i=h;return}}function zy(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=i;if((c[b+8>>2]|0)!=(a|0)){i=g;return}ry(0,b,d,e,f);i=g;return}function Ay(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;f=e;c[f>>2]=c[d>>2];a=Sb[c[(c[a>>2]|0)+16>>2]&31](a,b,f)|0;b=a&1;if(!a){i=e;return b|0}c[d>>2]=c[f>>2];i=e;return b|0}function By(a){a=a|0;var b=0;b=i;if((a|0)==0)a=0;else a=(qy(a,272336,272504,0)|0)!=0;i=b;return a&1|0}function Cy(){var a=0;a=Na(4)|0;Kx(a);Bb(a|0,271808,96)}function Dy(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;b=i;do if(a>>>0<245){if(a>>>0<11)a=16;else a=a+11&-8;v=a>>>3;p=c[68188]|0;w=p>>>v;if((w&3|0)!=0){h=(w&1^1)+v|0;g=h<<1;e=272792+(g<<2)|0;g=272792+(g+2<<2)|0;j=c[g>>2]|0;d=j+8|0;f=c[d>>2]|0;do if((e|0)!=(f|0)){if(f>>>0<(c[68192]|0)>>>0)Fb();k=f+12|0;if((c[k>>2]|0)==(j|0)){c[k>>2]=e;c[g>>2]=f;break}else Fb()}else c[68188]=p&~(1<<h);while(0);H=h<<3;c[j+4>>2]=H|3;H=j+(H|4)|0;c[H>>2]=c[H>>2]|1;H=d;i=b;return H|0}if(a>>>0>(c[68190]|0)>>>0){if((w|0)!=0){h=2<<v;h=w<<v&(h|0-h);h=(h&0-h)+ -1|0;d=h>>>12&16;h=h>>>d;f=h>>>5&8;h=h>>>f;g=h>>>2&4;h=h>>>g;e=h>>>1&2;h=h>>>e;j=h>>>1&1;j=(f|d|g|e|j)+(h>>>j)|0;h=j<<1;e=272792+(h<<2)|0;h=272792+(h+2<<2)|0;g=c[h>>2]|0;d=g+8|0;f=c[d>>2]|0;do if((e|0)!=(f|0)){if(f>>>0<(c[68192]|0)>>>0)Fb();k=f+12|0;if((c[k>>2]|0)==(g|0)){c[k>>2]=e;c[h>>2]=f;break}else Fb()}else c[68188]=p&~(1<<j);while(0);h=j<<3;f=h-a|0;c[g+4>>2]=a|3;e=g+a|0;c[g+(a|4)>>2]=f|1;c[g+h>>2]=f;h=c[68190]|0;if((h|0)!=0){g=c[68193]|0;k=h>>>3;j=k<<1;h=272792+(j<<2)|0;l=c[68188]|0;k=1<<k;if((l&k|0)!=0){j=272792+(j+2<<2)|0;k=c[j>>2]|0;if(k>>>0<(c[68192]|0)>>>0)Fb();else{D=j;C=k}}else{c[68188]=l|k;D=272792+(j+2<<2)|0;C=h}c[D>>2]=g;c[C+12>>2]=g;c[g+8>>2]=C;c[g+12>>2]=h}c[68190]=f;c[68193]=e;H=d;i=b;return H|0}p=c[68189]|0;if((p|0)!=0){e=(p&0-p)+ -1|0;G=e>>>12&16;e=e>>>G;F=e>>>5&8;e=e>>>F;H=e>>>2&4;e=e>>>H;f=e>>>1&2;e=e>>>f;d=e>>>1&1;d=c[273056+((F|G|H|f|d)+(e>>>d)<<2)>>2]|0;e=(c[d+4>>2]&-8)-a|0;f=d;while(1){g=c[f+16>>2]|0;if((g|0)==0){g=c[f+20>>2]|0;if((g|0)==0)break}f=(c[g+4>>2]&-8)-a|0;H=f>>>0<e>>>0;e=H?f:e;f=g;d=H?g:d}h=c[68192]|0;if(d>>>0<h>>>0)Fb();f=d+a|0;if(!(d>>>0<f>>>0))Fb();g=c[d+24>>2]|0;k=c[d+12>>2]|0;do if((k|0)==(d|0)){k=d+20|0;j=c[k>>2]|0;if((j|0)==0){k=d+16|0;j=c[k>>2]|0;if((j|0)==0){B=0;break}}while(1){l=j+20|0;m=c[l>>2]|0;if((m|0)!=0){j=m;k=l;continue}m=j+16|0;l=c[m>>2]|0;if((l|0)==0)break;else{j=l;k=m}}if(k>>>0<h>>>0)Fb();else{c[k>>2]=0;B=j;break}}else{j=c[d+8>>2]|0;if(j>>>0<h>>>0)Fb();h=j+12|0;if((c[h>>2]|0)!=(d|0))Fb();l=k+8|0;if((c[l>>2]|0)==(d|0)){c[h>>2]=k;c[l>>2]=j;B=k;break}else Fb()}while(0);do if((g|0)!=0){h=c[d+28>>2]|0;j=273056+(h<<2)|0;if((d|0)==(c[j>>2]|0)){c[j>>2]=B;if((B|0)==0){c[68189]=c[68189]&~(1<<h);break}}else{if(g>>>0<(c[68192]|0)>>>0)Fb();h=g+16|0;if((c[h>>2]|0)==(d|0))c[h>>2]=B;else c[g+20>>2]=B;if((B|0)==0)break}if(B>>>0<(c[68192]|0)>>>0)Fb();c[B+24>>2]=g;g=c[d+16>>2]|0;do if((g|0)!=0)if(g>>>0<(c[68192]|0)>>>0)Fb();else{c[B+16>>2]=g;c[g+24>>2]=B;break}while(0);g=c[d+20>>2]|0;if((g|0)!=0)if(g>>>0<(c[68192]|0)>>>0)Fb();else{c[B+20>>2]=g;c[g+24>>2]=B;break}}while(0);if(e>>>0<16){H=e+a|0;c[d+4>>2]=H|3;H=d+(H+4)|0;c[H>>2]=c[H>>2]|1}else{c[d+4>>2]=a|3;c[d+(a|4)>>2]=e|1;c[d+(e+a)>>2]=e;h=c[68190]|0;if((h|0)!=0){g=c[68193]|0;l=h>>>3;j=l<<1;h=272792+(j<<2)|0;k=c[68188]|0;l=1<<l;if((k&l|0)!=0){j=272792+(j+2<<2)|0;k=c[j>>2]|0;if(k>>>0<(c[68192]|0)>>>0)Fb();else{A=j;z=k}}else{c[68188]=k|l;A=272792+(j+2<<2)|0;z=h}c[A>>2]=g;c[z+12>>2]=g;c[g+8>>2]=z;c[g+12>>2]=h}c[68190]=e;c[68193]=f}H=d+8|0;i=b;return H|0}}}else if(!(a>>>0>4294967231)){z=a+11|0;a=z&-8;B=c[68189]|0;if((B|0)!=0){A=0-a|0;z=z>>>8;if((z|0)!=0)if(a>>>0>16777215)C=31;else{G=(z+1048320|0)>>>16&8;H=z<<G;F=(H+520192|0)>>>16&4;H=H<<F;C=(H+245760|0)>>>16&2;C=14-(F|G|C)+(H<<C>>>15)|0;C=a>>>(C+7|0)&1|C<<1}else C=0;D=c[273056+(C<<2)>>2]|0;a:do if((D|0)==0){F=0;z=0}else{if((C|0)==31)z=0;else z=25-(C>>>1)|0;F=0;E=a<<z;z=0;while(1){H=c[D+4>>2]&-8;G=H-a|0;if(G>>>0<A>>>0)if((H|0)==(a|0)){A=G;F=D;z=D;break a}else{A=G;z=D}H=c[D+20>>2]|0;D=c[D+(E>>>31<<2)+16>>2]|0;F=(H|0)==0|(H|0)==(D|0)?F:H;if((D|0)==0)break;else E=E<<1}}while(0);if((F|0)==0&(z|0)==0){H=2<<C;B=B&(H|0-H);if((B|0)==0)break;H=(B&0-B)+ -1|0;D=H>>>12&16;H=H>>>D;C=H>>>5&8;H=H>>>C;E=H>>>2&4;H=H>>>E;G=H>>>1&2;H=H>>>G;F=H>>>1&1;F=c[273056+((C|D|E|G|F)+(H>>>F)<<2)>>2]|0}if((F|0)!=0)while(1){H=(c[F+4>>2]&-8)-a|0;B=H>>>0<A>>>0;A=B?H:A;z=B?F:z;B=c[F+16>>2]|0;if((B|0)!=0){F=B;continue}F=c[F+20>>2]|0;if((F|0)==0)break}if((z|0)!=0?A>>>0<((c[68190]|0)-a|0)>>>0:0){f=c[68192]|0;if(z>>>0<f>>>0)Fb();d=z+a|0;if(!(z>>>0<d>>>0))Fb();e=c[z+24>>2]|0;h=c[z+12>>2]|0;do if((h|0)==(z|0)){h=z+20|0;g=c[h>>2]|0;if((g|0)==0){h=z+16|0;g=c[h>>2]|0;if((g|0)==0){x=0;break}}while(1){j=g+20|0;k=c[j>>2]|0;if((k|0)!=0){g=k;h=j;continue}j=g+16|0;k=c[j>>2]|0;if((k|0)==0)break;else{g=k;h=j}}if(h>>>0<f>>>0)Fb();else{c[h>>2]=0;x=g;break}}else{g=c[z+8>>2]|0;if(g>>>0<f>>>0)Fb();f=g+12|0;if((c[f>>2]|0)!=(z|0))Fb();j=h+8|0;if((c[j>>2]|0)==(z|0)){c[f>>2]=h;c[j>>2]=g;x=h;break}else Fb()}while(0);do if((e|0)!=0){g=c[z+28>>2]|0;f=273056+(g<<2)|0;if((z|0)==(c[f>>2]|0)){c[f>>2]=x;if((x|0)==0){c[68189]=c[68189]&~(1<<g);break}}else{if(e>>>0<(c[68192]|0)>>>0)Fb();f=e+16|0;if((c[f>>2]|0)==(z|0))c[f>>2]=x;else c[e+20>>2]=x;if((x|0)==0)break}if(x>>>0<(c[68192]|0)>>>0)Fb();c[x+24>>2]=e;e=c[z+16>>2]|0;do if((e|0)!=0)if(e>>>0<(c[68192]|0)>>>0)Fb();else{c[x+16>>2]=e;c[e+24>>2]=x;break}while(0);e=c[z+20>>2]|0;if((e|0)!=0)if(e>>>0<(c[68192]|0)>>>0)Fb();else{c[x+20>>2]=e;c[e+24>>2]=x;break}}while(0);b:do if(!(A>>>0<16)){c[z+4>>2]=a|3;c[z+(a|4)>>2]=A|1;c[z+(A+a)>>2]=A;f=A>>>3;if(A>>>0<256){h=f<<1;e=272792+(h<<2)|0;g=c[68188]|0;f=1<<f;do if((g&f|0)==0){c[68188]=g|f;w=272792+(h+2<<2)|0;v=e}else{f=272792+(h+2<<2)|0;g=c[f>>2]|0;if(!(g>>>0<(c[68192]|0)>>>0)){w=f;v=g;break}Fb()}while(0);c[w>>2]=d;c[v+12>>2]=d;c[z+(a+8)>>2]=v;c[z+(a+12)>>2]=e;break}e=A>>>8;if((e|0)!=0)if(A>>>0>16777215)e=31;else{G=(e+1048320|0)>>>16&8;H=e<<G;F=(H+520192|0)>>>16&4;H=H<<F;e=(H+245760|0)>>>16&2;e=14-(F|G|e)+(H<<e>>>15)|0;e=A>>>(e+7|0)&1|e<<1}else e=0;f=273056+(e<<2)|0;c[z+(a+28)>>2]=e;c[z+(a+20)>>2]=0;c[z+(a+16)>>2]=0;h=c[68189]|0;g=1<<e;if((h&g|0)==0){c[68189]=h|g;c[f>>2]=d;c[z+(a+24)>>2]=f;c[z+(a+12)>>2]=d;c[z+(a+8)>>2]=d;break}f=c[f>>2]|0;if((e|0)==31)e=0;else e=25-(e>>>1)|0;c:do if((c[f+4>>2]&-8|0)!=(A|0)){e=A<<e;while(1){g=f+(e>>>31<<2)+16|0;h=c[g>>2]|0;if((h|0)==0)break;if((c[h+4>>2]&-8|0)==(A|0)){p=h;break c}else{e=e<<1;f=h}}if(g>>>0<(c[68192]|0)>>>0)Fb();else{c[g>>2]=d;c[z+(a+24)>>2]=f;c[z+(a+12)>>2]=d;c[z+(a+8)>>2]=d;break b}}else p=f;while(0);f=p+8|0;e=c[f>>2]|0;g=c[68192]|0;if(p>>>0<g>>>0)Fb();if(e>>>0<g>>>0)Fb();else{c[e+12>>2]=d;c[f>>2]=d;c[z+(a+8)>>2]=e;c[z+(a+12)>>2]=p;c[z+(a+24)>>2]=0;break}}else{H=A+a|0;c[z+4>>2]=H|3;H=z+(H+4)|0;c[H>>2]=c[H>>2]|1}while(0);H=z+8|0;i=b;return H|0}}}else a=-1;while(0);p=c[68190]|0;if(!(a>>>0>p>>>0)){e=p-a|0;d=c[68193]|0;if(e>>>0>15){c[68193]=d+a;c[68190]=e;c[d+(a+4)>>2]=e|1;c[d+p>>2]=e;c[d+4>>2]=a|3}else{c[68190]=0;c[68193]=0;c[d+4>>2]=p|3;H=d+(p+4)|0;c[H>>2]=c[H>>2]|1}H=d+8|0;i=b;return H|0}p=c[68191]|0;if(a>>>0<p>>>0){G=p-a|0;c[68191]=G;H=c[68194]|0;c[68194]=H+a;c[H+(a+4)>>2]=G|1;c[H+4>>2]=a|3;H=H+8|0;i=b;return H|0}do if((c[68306]|0)==0){p=gb(30)|0;if((p+ -1&p|0)==0){c[68308]=p;c[68307]=p;c[68309]=-1;c[68310]=-1;c[68311]=0;c[68299]=0;c[68306]=(Ib(0)|0)&-16^1431655768;break}else Fb()}while(0);w=a+48|0;p=c[68308]|0;x=a+47|0;z=p+x|0;p=0-p|0;v=z&p;if(!(v>>>0>a>>>0)){H=0;i=b;return H|0}A=c[68298]|0;if((A|0)!=0?(G=c[68296]|0,H=G+v|0,H>>>0<=G>>>0|H>>>0>A>>>0):0){H=0;i=b;return H|0}d:do if((c[68299]&4|0)==0){B=c[68194]|0;e:do if((B|0)!=0){A=273200|0;while(1){C=c[A>>2]|0;if(!(C>>>0>B>>>0)?(y=A+4|0,(C+(c[y>>2]|0)|0)>>>0>B>>>0):0)break;A=c[A+8>>2]|0;if((A|0)==0){o=182;break e}}if((A|0)!=0){B=z-(c[68191]|0)&p;if(B>>>0<2147483647){p=Za(B|0)|0;A=(p|0)==((c[A>>2]|0)+(c[y>>2]|0)|0);y=p;z=B;p=A?p:-1;A=A?B:0;o=191}else A=0}else o=182}else o=182;while(0);do if((o|0)==182){p=Za(0)|0;if((p|0)!=(-1|0)){z=p;A=c[68307]|0;y=A+ -1|0;if((y&z|0)==0)A=v;else A=v-z+(y+z&0-A)|0;y=c[68296]|0;z=y+A|0;if(A>>>0>a>>>0&A>>>0<2147483647){H=c[68298]|0;if((H|0)!=0?z>>>0<=y>>>0|z>>>0>H>>>0:0){A=0;break}y=Za(A|0)|0;o=(y|0)==(p|0);z=A;p=o?p:-1;A=o?A:0;o=191}else A=0}else A=0}while(0);f:do if((o|0)==191){o=0-z|0;if((p|0)!=(-1|0)){q=A;o=202;break d}do if((y|0)!=(-1|0)&z>>>0<2147483647&z>>>0<w>>>0?(u=c[68308]|0,u=x-z+u&0-u,u>>>0<2147483647):0)if((Za(u|0)|0)==(-1|0)){Za(o|0)|0;break f}else{z=u+z|0;break}while(0);if((y|0)!=(-1|0)){p=y;q=z;o=202;break d}}while(0);c[68299]=c[68299]|4;o=199}else{A=0;o=199}while(0);if((((o|0)==199?v>>>0<2147483647:0)?(t=Za(v|0)|0,s=Za(0)|0,(s|0)!=(-1|0)&(t|0)!=(-1|0)&t>>>0<s>>>0):0)?(r=s-t|0,q=r>>>0>(a+40|0)>>>0,q):0){p=t;q=q?r:A;o=202}if((o|0)==202){r=(c[68296]|0)+q|0;c[68296]=r;if(r>>>0>(c[68297]|0)>>>0)c[68297]=r;r=c[68194]|0;g:do if((r|0)!=0){v=273200|0;while(1){t=c[v>>2]|0;u=v+4|0;s=c[u>>2]|0;if((p|0)==(t+s|0)){o=214;break}w=c[v+8>>2]|0;if((w|0)==0)break;else v=w}if(((o|0)==214?(c[v+12>>2]&8|0)==0:0)?r>>>0>=t>>>0&r>>>0<p>>>0:0){c[u>>2]=s+q;d=(c[68191]|0)+q|0;e=r+8|0;if((e&7|0)==0)e=0;else e=0-e&7;H=d-e|0;c[68194]=r+e;c[68191]=H;c[r+(e+4)>>2]=H|1;c[r+(d+4)>>2]=40;c[68195]=c[68310];break}if(p>>>0<(c[68192]|0)>>>0)c[68192]=p;t=p+q|0;s=273200|0;while(1){if((c[s>>2]|0)==(t|0)){o=224;break}u=c[s+8>>2]|0;if((u|0)==0)break;else s=u}if((o|0)==224?(c[s+12>>2]&8|0)==0:0){c[s>>2]=p;h=s+4|0;c[h>>2]=(c[h>>2]|0)+q;h=p+8|0;if((h&7|0)==0)h=0;else h=0-h&7;j=p+(q+8)|0;if((j&7|0)==0)n=0;else n=0-j&7;o=p+(n+q)|0;j=h+a|0;k=p+j|0;m=o-(p+h)-a|0;c[p+(h+4)>>2]=a|3;h:do if((o|0)!=(c[68194]|0)){if((o|0)==(c[68193]|0)){H=(c[68190]|0)+m|0;c[68190]=H;c[68193]=k;c[p+(j+4)>>2]=H|1;c[p+(H+j)>>2]=H;break}r=q+4|0;t=c[p+(r+n)>>2]|0;if((t&3|0)==1){a=t&-8;s=t>>>3;i:do if(!(t>>>0<256)){l=c[p+((n|24)+q)>>2]|0;u=c[p+(q+12+n)>>2]|0;do if((u|0)==(o|0)){u=n|16;t=p+(r+u)|0;s=c[t>>2]|0;if((s|0)==0){t=p+(u+q)|0;s=c[t>>2]|0;if((s|0)==0){g=0;break}}while(1){u=s+20|0;v=c[u>>2]|0;if((v|0)!=0){s=v;t=u;continue}u=s+16|0;v=c[u>>2]|0;if((v|0)==0)break;else{s=v;t=u}}if(t>>>0<(c[68192]|0)>>>0)Fb();else{c[t>>2]=0;g=s;break}}else{t=c[p+((n|8)+q)>>2]|0;if(t>>>0<(c[68192]|0)>>>0)Fb();v=t+12|0;if((c[v>>2]|0)!=(o|0))Fb();s=u+8|0;if((c[s>>2]|0)==(o|0)){c[v>>2]=u;c[s>>2]=t;g=u;break}else Fb()}while(0);if((l|0)==0)break;t=c[p+(q+28+n)>>2]|0;s=273056+(t<<2)|0;do if((o|0)!=(c[s>>2]|0)){if(l>>>0<(c[68192]|0)>>>0)Fb();s=l+16|0;if((c[s>>2]|0)==(o|0))c[s>>2]=g;else c[l+20>>2]=g;if((g|0)==0)break i}else{c[s>>2]=g;if((g|0)!=0)break;c[68189]=c[68189]&~(1<<t);break i}while(0);if(g>>>0<(c[68192]|0)>>>0)Fb();c[g+24>>2]=l;l=n|16;o=c[p+(l+q)>>2]|0;do if((o|0)!=0)if(o>>>0<(c[68192]|0)>>>0)Fb();else{c[g+16>>2]=o;c[o+24>>2]=g;break}while(0);l=c[p+(r+l)>>2]|0;if((l|0)==0)break;if(l>>>0<(c[68192]|0)>>>0)Fb();else{c[g+20>>2]=l;c[l+24>>2]=g;break}}else{r=c[p+((n|8)+q)>>2]|0;g=c[p+(q+12+n)>>2]|0;t=272792+(s<<1<<2)|0;do if((r|0)!=(t|0)){if(r>>>0<(c[68192]|0)>>>0)Fb();if((c[r+12>>2]|0)==(o|0))break;Fb()}while(0);if((g|0)==(r|0)){c[68188]=c[68188]&~(1<<s);break}do if((g|0)==(t|0))l=g+8|0;else{if(g>>>0<(c[68192]|0)>>>0)Fb();s=g+8|0;if((c[s>>2]|0)==(o|0)){l=s;break}Fb()}while(0);c[r+12>>2]=g;c[l>>2]=r}while(0);o=p+((a|n)+q)|0;m=a+m|0}g=o+4|0;c[g>>2]=c[g>>2]&-2;c[p+(j+4)>>2]=m|1;c[p+(m+j)>>2]=m;g=m>>>3;if(m>>>0<256){m=g<<1;d=272792+(m<<2)|0;l=c[68188]|0;g=1<<g;do if((l&g|0)==0){c[68188]=l|g;f=272792+(m+2<<2)|0;e=d}else{l=272792+(m+2<<2)|0;g=c[l>>2]|0;if(!(g>>>0<(c[68192]|0)>>>0)){f=l;e=g;break}Fb()}while(0);c[f>>2]=k;c[e+12>>2]=k;c[p+(j+8)>>2]=e;c[p+(j+12)>>2]=d;break}e=m>>>8;do if((e|0)==0)e=0;else{if(m>>>0>16777215){e=31;break}G=(e+1048320|0)>>>16&8;H=e<<G;F=(H+520192|0)>>>16&4;H=H<<F;e=(H+245760|0)>>>16&2;e=14-(F|G|e)+(H<<e>>>15)|0;e=m>>>(e+7|0)&1|e<<1}while(0);l=273056+(e<<2)|0;c[p+(j+28)>>2]=e;c[p+(j+20)>>2]=0;c[p+(j+16)>>2]=0;f=c[68189]|0;g=1<<e;if((f&g|0)==0){c[68189]=f|g;c[l>>2]=k;c[p+(j+24)>>2]=l;c[p+(j+12)>>2]=k;c[p+(j+8)>>2]=k;break}l=c[l>>2]|0;if((e|0)==31)e=0;else e=25-(e>>>1)|0;j:do if((c[l+4>>2]&-8|0)!=(m|0)){e=m<<e;while(1){g=l+(e>>>31<<2)+16|0;f=c[g>>2]|0;if((f|0)==0)break;if((c[f+4>>2]&-8|0)==(m|0)){d=f;break j}else{e=e<<1;l=f}}if(g>>>0<(c[68192]|0)>>>0)Fb();else{c[g>>2]=k;c[p+(j+24)>>2]=l;c[p+(j+12)>>2]=k;c[p+(j+8)>>2]=k;break h}}else d=l;while(0);f=d+8|0;e=c[f>>2]|0;g=c[68192]|0;if(d>>>0<g>>>0)Fb();if(e>>>0<g>>>0)Fb();else{c[e+12>>2]=k;c[f>>2]=k;c[p+(j+8)>>2]=e;c[p+(j+12)>>2]=d;c[p+(j+24)>>2]=0;break}}else{H=(c[68191]|0)+m|0;c[68191]=H;c[68194]=k;c[p+(j+4)>>2]=H|1}while(0);H=p+(h|8)|0;i=b;return H|0}e=273200|0;while(1){d=c[e>>2]|0;if(!(d>>>0>r>>>0)?(n=c[e+4>>2]|0,m=d+n|0,m>>>0>r>>>0):0)break;e=c[e+8>>2]|0}e=d+(n+ -39)|0;if((e&7|0)==0)e=0;else e=0-e&7;d=d+(n+ -47+e)|0;d=d>>>0<(r+16|0)>>>0?r:d;e=d+8|0;f=p+8|0;if((f&7|0)==0)f=0;else f=0-f&7;H=q+ -40-f|0;c[68194]=p+f;c[68191]=H;c[p+(f+4)>>2]=H|1;c[p+(q+ -36)>>2]=40;c[68195]=c[68310];c[d+4>>2]=27;c[e+0>>2]=c[68300];c[e+4>>2]=c[68301];c[e+8>>2]=c[68302];c[e+12>>2]=c[68303];c[68300]=p;c[68301]=q;c[68303]=0;c[68302]=e;e=d+28|0;c[e>>2]=7;if((d+32|0)>>>0<m>>>0)do{H=e;e=e+4|0;c[e>>2]=7}while((H+8|0)>>>0<m>>>0);if((d|0)!=(r|0)){d=d-r|0;e=r+(d+4)|0;c[e>>2]=c[e>>2]&-2;c[r+4>>2]=d|1;c[r+d>>2]=d;e=d>>>3;if(d>>>0<256){g=e<<1;d=272792+(g<<2)|0;f=c[68188]|0;e=1<<e;do if((f&e|0)==0){c[68188]=f|e;k=272792+(g+2<<2)|0;j=d}else{f=272792+(g+2<<2)|0;e=c[f>>2]|0;if(!(e>>>0<(c[68192]|0)>>>0)){k=f;j=e;break}Fb()}while(0);c[k>>2]=r;c[j+12>>2]=r;c[r+8>>2]=j;c[r+12>>2]=d;break}e=d>>>8;if((e|0)!=0)if(d>>>0>16777215)e=31;else{G=(e+1048320|0)>>>16&8;H=e<<G;F=(H+520192|0)>>>16&4;H=H<<F;e=(H+245760|0)>>>16&2;e=14-(F|G|e)+(H<<e>>>15)|0;e=d>>>(e+7|0)&1|e<<1}else e=0;j=273056+(e<<2)|0;c[r+28>>2]=e;c[r+20>>2]=0;c[r+16>>2]=0;f=c[68189]|0;g=1<<e;if((f&g|0)==0){c[68189]=f|g;c[j>>2]=r;c[r+24>>2]=j;c[r+12>>2]=r;c[r+8>>2]=r;break}f=c[j>>2]|0;if((e|0)==31)e=0;else e=25-(e>>>1)|0;k:do if((c[f+4>>2]&-8|0)!=(d|0)){e=d<<e;while(1){j=f+(e>>>31<<2)+16|0;g=c[j>>2]|0;if((g|0)==0)break;if((c[g+4>>2]&-8|0)==(d|0)){h=g;break k}else{e=e<<1;f=g}}if(j>>>0<(c[68192]|0)>>>0)Fb();else{c[j>>2]=r;c[r+24>>2]=f;c[r+12>>2]=r;c[r+8>>2]=r;break g}}else h=f;while(0);f=h+8|0;e=c[f>>2]|0;d=c[68192]|0;if(h>>>0<d>>>0)Fb();if(e>>>0<d>>>0)Fb();else{c[e+12>>2]=r;c[f>>2]=r;c[r+8>>2]=e;c[r+12>>2]=h;c[r+24>>2]=0;break}}}else{H=c[68192]|0;if((H|0)==0|p>>>0<H>>>0)c[68192]=p;c[68300]=p;c[68301]=q;c[68303]=0;c[68197]=c[68306];c[68196]=-1;d=0;do{H=d<<1;G=272792+(H<<2)|0;c[272792+(H+3<<2)>>2]=G;c[272792+(H+2<<2)>>2]=G;d=d+1|0}while((d|0)!=32);d=p+8|0;if((d&7|0)==0)d=0;else d=0-d&7;H=q+ -40-d|0;c[68194]=p+d;c[68191]=H;c[p+(d+4)>>2]=H|1;c[p+(q+ -36)>>2]=40;c[68195]=c[68310]}while(0);d=c[68191]|0;if(d>>>0>a>>>0){G=d-a|0;c[68191]=G;H=c[68194]|0;c[68194]=H+a;c[H+(a+4)>>2]=G|1;c[H+4>>2]=a|3;H=H+8|0;i=b;return H|0}}c[(vb()|0)>>2]=12;H=0;i=b;return H|0}function Ey(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;b=i;if((a|0)==0){i=b;return}q=a+ -8|0;r=c[68192]|0;if(q>>>0<r>>>0)Fb();o=c[a+ -4>>2]|0;n=o&3;if((n|0)==1)Fb();j=o&-8;h=a+(j+ -8)|0;do if((o&1|0)==0){u=c[q>>2]|0;if((n|0)==0){i=b;return}q=-8-u|0;o=a+q|0;n=u+j|0;if(o>>>0<r>>>0)Fb();if((o|0)==(c[68193]|0)){d=a+(j+ -4)|0;if((c[d>>2]&3|0)!=3){d=o;m=n;break}c[68190]=n;c[d>>2]=c[d>>2]&-2;c[a+(q+4)>>2]=n|1;c[h>>2]=n;i=b;return}t=u>>>3;if(u>>>0<256){d=c[a+(q+8)>>2]|0;m=c[a+(q+12)>>2]|0;p=272792+(t<<1<<2)|0;if((d|0)!=(p|0)){if(d>>>0<r>>>0)Fb();if((c[d+12>>2]|0)!=(o|0))Fb()}if((m|0)==(d|0)){c[68188]=c[68188]&~(1<<t);d=o;m=n;break}if((m|0)!=(p|0)){if(m>>>0<r>>>0)Fb();p=m+8|0;if((c[p>>2]|0)==(o|0))s=p;else Fb()}else s=m+8|0;c[d+12>>2]=m;c[s>>2]=d;d=o;m=n;break}s=c[a+(q+24)>>2]|0;t=c[a+(q+12)>>2]|0;do if((t|0)==(o|0)){u=a+(q+20)|0;t=c[u>>2]|0;if((t|0)==0){u=a+(q+16)|0;t=c[u>>2]|0;if((t|0)==0){p=0;break}}while(1){w=t+20|0;v=c[w>>2]|0;if((v|0)!=0){t=v;u=w;continue}v=t+16|0;w=c[v>>2]|0;if((w|0)==0)break;else{t=w;u=v}}if(u>>>0<r>>>0)Fb();else{c[u>>2]=0;p=t;break}}else{u=c[a+(q+8)>>2]|0;if(u>>>0<r>>>0)Fb();r=u+12|0;if((c[r>>2]|0)!=(o|0))Fb();v=t+8|0;if((c[v>>2]|0)==(o|0)){c[r>>2]=t;c[v>>2]=u;p=t;break}else Fb()}while(0);if((s|0)!=0){t=c[a+(q+28)>>2]|0;r=273056+(t<<2)|0;if((o|0)==(c[r>>2]|0)){c[r>>2]=p;if((p|0)==0){c[68189]=c[68189]&~(1<<t);d=o;m=n;break}}else{if(s>>>0<(c[68192]|0)>>>0)Fb();r=s+16|0;if((c[r>>2]|0)==(o|0))c[r>>2]=p;else c[s+20>>2]=p;if((p|0)==0){d=o;m=n;break}}if(p>>>0<(c[68192]|0)>>>0)Fb();c[p+24>>2]=s;r=c[a+(q+16)>>2]|0;do if((r|0)!=0)if(r>>>0<(c[68192]|0)>>>0)Fb();else{c[p+16>>2]=r;c[r+24>>2]=p;break}while(0);q=c[a+(q+20)>>2]|0;if((q|0)!=0)if(q>>>0<(c[68192]|0)>>>0)Fb();else{c[p+20>>2]=q;c[q+24>>2]=p;d=o;m=n;break}else{d=o;m=n}}else{d=o;m=n}}else{d=q;m=j}while(0);if(!(d>>>0<h>>>0))Fb();n=a+(j+ -4)|0;o=c[n>>2]|0;if((o&1|0)==0)Fb();if((o&2|0)==0){if((h|0)==(c[68194]|0)){w=(c[68191]|0)+m|0;c[68191]=w;c[68194]=d;c[d+4>>2]=w|1;if((d|0)!=(c[68193]|0)){i=b;return}c[68193]=0;c[68190]=0;i=b;return}if((h|0)==(c[68193]|0)){w=(c[68190]|0)+m|0;c[68190]=w;c[68193]=d;c[d+4>>2]=w|1;c[d+w>>2]=w;i=b;return}m=(o&-8)+m|0;n=o>>>3;do if(!(o>>>0<256)){l=c[a+(j+16)>>2]|0;q=c[a+(j|4)>>2]|0;do if((q|0)==(h|0)){o=a+(j+12)|0;n=c[o>>2]|0;if((n|0)==0){o=a+(j+8)|0;n=c[o>>2]|0;if((n|0)==0){k=0;break}}while(1){p=n+20|0;q=c[p>>2]|0;if((q|0)!=0){n=q;o=p;continue}p=n+16|0;q=c[p>>2]|0;if((q|0)==0)break;else{n=q;o=p}}if(o>>>0<(c[68192]|0)>>>0)Fb();else{c[o>>2]=0;k=n;break}}else{o=c[a+j>>2]|0;if(o>>>0<(c[68192]|0)>>>0)Fb();p=o+12|0;if((c[p>>2]|0)!=(h|0))Fb();n=q+8|0;if((c[n>>2]|0)==(h|0)){c[p>>2]=q;c[n>>2]=o;k=q;break}else Fb()}while(0);if((l|0)!=0){n=c[a+(j+20)>>2]|0;o=273056+(n<<2)|0;if((h|0)==(c[o>>2]|0)){c[o>>2]=k;if((k|0)==0){c[68189]=c[68189]&~(1<<n);break}}else{if(l>>>0<(c[68192]|0)>>>0)Fb();n=l+16|0;if((c[n>>2]|0)==(h|0))c[n>>2]=k;else c[l+20>>2]=k;if((k|0)==0)break}if(k>>>0<(c[68192]|0)>>>0)Fb();c[k+24>>2]=l;h=c[a+(j+8)>>2]|0;do if((h|0)!=0)if(h>>>0<(c[68192]|0)>>>0)Fb();else{c[k+16>>2]=h;c[h+24>>2]=k;break}while(0);h=c[a+(j+12)>>2]|0;if((h|0)!=0)if(h>>>0<(c[68192]|0)>>>0)Fb();else{c[k+20>>2]=h;c[h+24>>2]=k;break}}}else{k=c[a+j>>2]|0;a=c[a+(j|4)>>2]|0;j=272792+(n<<1<<2)|0;if((k|0)!=(j|0)){if(k>>>0<(c[68192]|0)>>>0)Fb();if((c[k+12>>2]|0)!=(h|0))Fb()}if((a|0)==(k|0)){c[68188]=c[68188]&~(1<<n);break}if((a|0)!=(j|0)){if(a>>>0<(c[68192]|0)>>>0)Fb();j=a+8|0;if((c[j>>2]|0)==(h|0))l=j;else Fb()}else l=a+8|0;c[k+12>>2]=a;c[l>>2]=k}while(0);c[d+4>>2]=m|1;c[d+m>>2]=m;if((d|0)==(c[68193]|0)){c[68190]=m;i=b;return}}else{c[n>>2]=o&-2;c[d+4>>2]=m|1;c[d+m>>2]=m}h=m>>>3;if(m>>>0<256){a=h<<1;e=272792+(a<<2)|0;j=c[68188]|0;h=1<<h;if((j&h|0)!=0){h=272792+(a+2<<2)|0;a=c[h>>2]|0;if(a>>>0<(c[68192]|0)>>>0)Fb();else{f=h;g=a}}else{c[68188]=j|h;f=272792+(a+2<<2)|0;g=e}c[f>>2]=d;c[g+12>>2]=d;c[d+8>>2]=g;c[d+12>>2]=e;i=b;return}f=m>>>8;if((f|0)!=0)if(m>>>0>16777215)f=31;else{v=(f+1048320|0)>>>16&8;w=f<<v;u=(w+520192|0)>>>16&4;w=w<<u;f=(w+245760|0)>>>16&2;f=14-(u|v|f)+(w<<f>>>15)|0;f=m>>>(f+7|0)&1|f<<1}else f=0;g=273056+(f<<2)|0;c[d+28>>2]=f;c[d+20>>2]=0;c[d+16>>2]=0;a=c[68189]|0;h=1<<f;a:do if((a&h|0)!=0){g=c[g>>2]|0;if((f|0)==31)f=0;else f=25-(f>>>1)|0;b:do if((c[g+4>>2]&-8|0)!=(m|0)){f=m<<f;a=g;while(1){h=a+(f>>>31<<2)+16|0;g=c[h>>2]|0;if((g|0)==0)break;if((c[g+4>>2]&-8|0)==(m|0)){e=g;break b}else{f=f<<1;a=g}}if(h>>>0<(c[68192]|0)>>>0)Fb();else{c[h>>2]=d;c[d+24>>2]=a;c[d+12>>2]=d;c[d+8>>2]=d;break a}}else e=g;while(0);g=e+8|0;f=c[g>>2]|0;h=c[68192]|0;if(e>>>0<h>>>0)Fb();if(f>>>0<h>>>0)Fb();else{c[f+12>>2]=d;c[g>>2]=d;c[d+8>>2]=f;c[d+12>>2]=e;c[d+24>>2]=0;break}}else{c[68189]=a|h;c[g>>2]=d;c[d+24>>2]=g;c[d+12>>2]=d;c[d+8>>2]=d}while(0);w=(c[68196]|0)+ -1|0;c[68196]=w;if((w|0)==0)d=273208|0;else{i=b;return}while(1){d=c[d>>2]|0;if((d|0)==0)break;else d=d+8|0}c[68196]=-1;i=b;return}function Fy(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;if((a|0)!=0){e=da(b,a)|0;if((b|a)>>>0>65535)e=((e>>>0)/(a>>>0)|0|0)==(b|0)?e:-1}else e=0;a=Dy(e)|0;if((a|0)==0){i=d;return a|0}if((c[a+ -4>>2]&3|0)==0){i=d;return a|0}lz(a|0,0,e|0)|0;i=d;return a|0}function Gy(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;if((a|0)==0){e=Dy(b)|0;i=d;return e|0}if(b>>>0>4294967231){c[(vb()|0)>>2]=12;e=0;i=d;return e|0}if(b>>>0<11)e=16;else e=b+11&-8;e=Hy(a+ -8|0,e)|0;if((e|0)!=0){e=e+8|0;i=d;return e|0}e=Dy(b)|0;if((e|0)==0){e=0;i=d;return e|0}f=c[a+ -4>>2]|0;f=(f&-8)-((f&3|0)==0?8:4)|0;qz(e|0,a|0,(f>>>0<b>>>0?f:b)|0)|0;Ey(a);i=d;return e|0}function Hy(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=i;e=a+4|0;g=c[e>>2]|0;j=g&-8;f=a+j|0;l=c[68192]|0;if(a>>>0<l>>>0)Fb();n=g&3;if(!((n|0)!=1&a>>>0<f>>>0))Fb();h=a+(j|4)|0;o=c[h>>2]|0;if((o&1|0)==0)Fb();if((n|0)==0){if(b>>>0<256){q=0;i=d;return q|0}if(!(j>>>0<(b+4|0)>>>0)?!((j-b|0)>>>0>c[68308]<<1>>>0):0){q=a;i=d;return q|0}q=0;i=d;return q|0}if(!(j>>>0<b>>>0)){f=j-b|0;if(!(f>>>0>15)){q=a;i=d;return q|0}c[e>>2]=g&1|b|2;c[a+(b+4)>>2]=f|3;c[h>>2]=c[h>>2]|1;Iy(a+b|0,f);q=a;i=d;return q|0}if((f|0)==(c[68194]|0)){f=(c[68191]|0)+j|0;if(!(f>>>0>b>>>0)){q=0;i=d;return q|0}q=f-b|0;c[e>>2]=g&1|b|2;c[a+(b+4)>>2]=q|1;c[68194]=a+b;c[68191]=q;q=a;i=d;return q|0}if((f|0)==(c[68193]|0)){h=(c[68190]|0)+j|0;if(h>>>0<b>>>0){q=0;i=d;return q|0}f=h-b|0;if(f>>>0>15){c[e>>2]=g&1|b|2;c[a+(b+4)>>2]=f|1;c[a+h>>2]=f;q=a+(h+4)|0;c[q>>2]=c[q>>2]&-2;b=a+b|0}else{c[e>>2]=g&1|h|2;b=a+(h+4)|0;c[b>>2]=c[b>>2]|1;b=0;f=0}c[68190]=f;c[68193]=b;q=a;i=d;return q|0}if((o&2|0)!=0){q=0;i=d;return q|0}h=(o&-8)+j|0;if(h>>>0<b>>>0){q=0;i=d;return q|0}g=h-b|0;n=o>>>3;do if(!(o>>>0<256)){m=c[a+(j+24)>>2]|0;o=c[a+(j+12)>>2]|0;do if((o|0)==(f|0)){o=a+(j+20)|0;n=c[o>>2]|0;if((n|0)==0){o=a+(j+16)|0;n=c[o>>2]|0;if((n|0)==0){k=0;break}}while(1){q=n+20|0;p=c[q>>2]|0;if((p|0)!=0){n=p;o=q;continue}q=n+16|0;p=c[q>>2]|0;if((p|0)==0)break;else{n=p;o=q}}if(o>>>0<l>>>0)Fb();else{c[o>>2]=0;k=n;break}}else{n=c[a+(j+8)>>2]|0;if(n>>>0<l>>>0)Fb();p=n+12|0;if((c[p>>2]|0)!=(f|0))Fb();l=o+8|0;if((c[l>>2]|0)==(f|0)){c[p>>2]=o;c[l>>2]=n;k=o;break}else Fb()}while(0);if((m|0)!=0){l=c[a+(j+28)>>2]|0;n=273056+(l<<2)|0;if((f|0)==(c[n>>2]|0)){c[n>>2]=k;if((k|0)==0){c[68189]=c[68189]&~(1<<l);break}}else{if(m>>>0<(c[68192]|0)>>>0)Fb();l=m+16|0;if((c[l>>2]|0)==(f|0))c[l>>2]=k;else c[m+20>>2]=k;if((k|0)==0)break}if(k>>>0<(c[68192]|0)>>>0)Fb();c[k+24>>2]=m;f=c[a+(j+16)>>2]|0;do if((f|0)!=0)if(f>>>0<(c[68192]|0)>>>0)Fb();else{c[k+16>>2]=f;c[f+24>>2]=k;break}while(0);f=c[a+(j+20)>>2]|0;if((f|0)!=0)if(f>>>0<(c[68192]|0)>>>0)Fb();else{c[k+20>>2]=f;c[f+24>>2]=k;break}}}else{k=c[a+(j+8)>>2]|0;j=c[a+(j+12)>>2]|0;o=272792+(n<<1<<2)|0;if((k|0)!=(o|0)){if(k>>>0<l>>>0)Fb();if((c[k+12>>2]|0)!=(f|0))Fb()}if((j|0)==(k|0)){c[68188]=c[68188]&~(1<<n);break}if((j|0)!=(o|0)){if(j>>>0<l>>>0)Fb();l=j+8|0;if((c[l>>2]|0)==(f|0))m=l;else Fb()}else m=j+8|0;c[k+12>>2]=j;c[m>>2]=k}while(0);if(g>>>0<16){c[e>>2]=h|c[e>>2]&1|2;q=a+(h|4)|0;c[q>>2]=c[q>>2]|1;q=a;i=d;return q|0}else{c[e>>2]=c[e>>2]&1|b|2;c[a+(b+4)>>2]=g|3;q=a+(h|4)|0;c[q>>2]=c[q>>2]|1;Iy(a+b|0,g);q=a;i=d;return q|0}return 0}function Iy(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;d=i;h=a+b|0;l=c[a+4>>2]|0;do if((l&1|0)==0){p=c[a>>2]|0;if((l&3|0)==0){i=d;return}l=a+(0-p)|0;m=p+b|0;q=c[68192]|0;if(l>>>0<q>>>0)Fb();if((l|0)==(c[68193]|0)){e=a+(b+4)|0;if((c[e>>2]&3|0)!=3){e=l;n=m;break}c[68190]=m;c[e>>2]=c[e>>2]&-2;c[a+(4-p)>>2]=m|1;c[h>>2]=m;i=d;return}s=p>>>3;if(p>>>0<256){e=c[a+(8-p)>>2]|0;n=c[a+(12-p)>>2]|0;o=272792+(s<<1<<2)|0;if((e|0)!=(o|0)){if(e>>>0<q>>>0)Fb();if((c[e+12>>2]|0)!=(l|0))Fb()}if((n|0)==(e|0)){c[68188]=c[68188]&~(1<<s);e=l;n=m;break}if((n|0)!=(o|0)){if(n>>>0<q>>>0)Fb();o=n+8|0;if((c[o>>2]|0)==(l|0))r=o;else Fb()}else r=n+8|0;c[e+12>>2]=n;c[r>>2]=e;e=l;n=m;break}r=c[a+(24-p)>>2]|0;t=c[a+(12-p)>>2]|0;do if((t|0)==(l|0)){u=16-p|0;t=a+(u+4)|0;s=c[t>>2]|0;if((s|0)==0){t=a+u|0;s=c[t>>2]|0;if((s|0)==0){o=0;break}}while(1){u=s+20|0;v=c[u>>2]|0;if((v|0)!=0){s=v;t=u;continue}v=s+16|0;u=c[v>>2]|0;if((u|0)==0)break;else{s=u;t=v}}if(t>>>0<q>>>0)Fb();else{c[t>>2]=0;o=s;break}}else{s=c[a+(8-p)>>2]|0;if(s>>>0<q>>>0)Fb();u=s+12|0;if((c[u>>2]|0)!=(l|0))Fb();q=t+8|0;if((c[q>>2]|0)==(l|0)){c[u>>2]=t;c[q>>2]=s;o=t;break}else Fb()}while(0);if((r|0)!=0){q=c[a+(28-p)>>2]|0;s=273056+(q<<2)|0;if((l|0)==(c[s>>2]|0)){c[s>>2]=o;if((o|0)==0){c[68189]=c[68189]&~(1<<q);e=l;n=m;break}}else{if(r>>>0<(c[68192]|0)>>>0)Fb();q=r+16|0;if((c[q>>2]|0)==(l|0))c[q>>2]=o;else c[r+20>>2]=o;if((o|0)==0){e=l;n=m;break}}if(o>>>0<(c[68192]|0)>>>0)Fb();c[o+24>>2]=r;p=16-p|0;q=c[a+p>>2]|0;do if((q|0)!=0)if(q>>>0<(c[68192]|0)>>>0)Fb();else{c[o+16>>2]=q;c[q+24>>2]=o;break}while(0);p=c[a+(p+4)>>2]|0;if((p|0)!=0)if(p>>>0<(c[68192]|0)>>>0)Fb();else{c[o+20>>2]=p;c[p+24>>2]=o;e=l;n=m;break}else{e=l;n=m}}else{e=l;n=m}}else{e=a;n=b}while(0);l=c[68192]|0;if(h>>>0<l>>>0)Fb();m=a+(b+4)|0;o=c[m>>2]|0;if((o&2|0)==0){if((h|0)==(c[68194]|0)){v=(c[68191]|0)+n|0;c[68191]=v;c[68194]=e;c[e+4>>2]=v|1;if((e|0)!=(c[68193]|0)){i=d;return}c[68193]=0;c[68190]=0;i=d;return}if((h|0)==(c[68193]|0)){v=(c[68190]|0)+n|0;c[68190]=v;c[68193]=e;c[e+4>>2]=v|1;c[e+v>>2]=v;i=d;return}n=(o&-8)+n|0;m=o>>>3;do if(!(o>>>0<256)){k=c[a+(b+24)>>2]|0;m=c[a+(b+12)>>2]|0;do if((m|0)==(h|0)){o=a+(b+20)|0;m=c[o>>2]|0;if((m|0)==0){o=a+(b+16)|0;m=c[o>>2]|0;if((m|0)==0){j=0;break}}while(1){q=m+20|0;p=c[q>>2]|0;if((p|0)!=0){m=p;o=q;continue}p=m+16|0;q=c[p>>2]|0;if((q|0)==0)break;else{m=q;o=p}}if(o>>>0<l>>>0)Fb();else{c[o>>2]=0;j=m;break}}else{o=c[a+(b+8)>>2]|0;if(o>>>0<l>>>0)Fb();l=o+12|0;if((c[l>>2]|0)!=(h|0))Fb();p=m+8|0;if((c[p>>2]|0)==(h|0)){c[l>>2]=m;c[p>>2]=o;j=m;break}else Fb()}while(0);if((k|0)!=0){l=c[a+(b+28)>>2]|0;m=273056+(l<<2)|0;if((h|0)==(c[m>>2]|0)){c[m>>2]=j;if((j|0)==0){c[68189]=c[68189]&~(1<<l);break}}else{if(k>>>0<(c[68192]|0)>>>0)Fb();l=k+16|0;if((c[l>>2]|0)==(h|0))c[l>>2]=j;else c[k+20>>2]=j;if((j|0)==0)break}if(j>>>0<(c[68192]|0)>>>0)Fb();c[j+24>>2]=k;h=c[a+(b+16)>>2]|0;do if((h|0)!=0)if(h>>>0<(c[68192]|0)>>>0)Fb();else{c[j+16>>2]=h;c[h+24>>2]=j;break}while(0);h=c[a+(b+20)>>2]|0;if((h|0)!=0)if(h>>>0<(c[68192]|0)>>>0)Fb();else{c[j+20>>2]=h;c[h+24>>2]=j;break}}}else{j=c[a+(b+8)>>2]|0;a=c[a+(b+12)>>2]|0;b=272792+(m<<1<<2)|0;if((j|0)!=(b|0)){if(j>>>0<l>>>0)Fb();if((c[j+12>>2]|0)!=(h|0))Fb()}if((a|0)==(j|0)){c[68188]=c[68188]&~(1<<m);break}if((a|0)!=(b|0)){if(a>>>0<l>>>0)Fb();b=a+8|0;if((c[b>>2]|0)==(h|0))k=b;else Fb()}else k=a+8|0;c[j+12>>2]=a;c[k>>2]=j}while(0);c[e+4>>2]=n|1;c[e+n>>2]=n;if((e|0)==(c[68193]|0)){c[68190]=n;i=d;return}}else{c[m>>2]=o&-2;c[e+4>>2]=n|1;c[e+n>>2]=n}a=n>>>3;if(n>>>0<256){b=a<<1;h=272792+(b<<2)|0;j=c[68188]|0;a=1<<a;if((j&a|0)!=0){b=272792+(b+2<<2)|0;a=c[b>>2]|0;if(a>>>0<(c[68192]|0)>>>0)Fb();else{g=b;f=a}}else{c[68188]=j|a;g=272792+(b+2<<2)|0;f=h}c[g>>2]=e;c[f+12>>2]=e;c[e+8>>2]=f;c[e+12>>2]=h;i=d;return}f=n>>>8;if((f|0)!=0)if(n>>>0>16777215)f=31;else{u=(f+1048320|0)>>>16&8;v=f<<u;t=(v+520192|0)>>>16&4;v=v<<t;f=(v+245760|0)>>>16&2;f=14-(t|u|f)+(v<<f>>>15)|0;f=n>>>(f+7|0)&1|f<<1}else f=0;a=273056+(f<<2)|0;c[e+28>>2]=f;c[e+20>>2]=0;c[e+16>>2]=0;h=c[68189]|0;g=1<<f;if((h&g|0)==0){c[68189]=h|g;c[a>>2]=e;c[e+24>>2]=a;c[e+12>>2]=e;c[e+8>>2]=e;i=d;return}g=c[a>>2]|0;if((f|0)==31)f=0;else f=25-(f>>>1)|0;a:do if((c[g+4>>2]&-8|0)!=(n|0)){f=n<<f;a=g;while(1){h=a+(f>>>31<<2)+16|0;g=c[h>>2]|0;if((g|0)==0)break;if((c[g+4>>2]&-8|0)==(n|0))break a;else{f=f<<1;a=g}}if(h>>>0<(c[68192]|0)>>>0)Fb();c[h>>2]=e;c[e+24>>2]=a;c[e+12>>2]=e;c[e+8>>2]=e;i=d;return}while(0);f=g+8|0;a=c[f>>2]|0;h=c[68192]|0;if(g>>>0<h>>>0)Fb();if(a>>>0<h>>>0)Fb();c[a+12>>2]=e;c[f>>2]=e;c[e+8>>2]=a;c[e+12>>2]=g;c[e+24>>2]=0;i=d;return}function Jy(a){a=a|0;if((a|0)==32)a=1;else a=(a+ -9|0)>>>0<5;return a&1|0}function Ky(a){a=a|0;if((a+ -48|0)>>>0<10)a=1;else a=((a|32)+ -97|0)>>>0<6;return a&1|0}function Ly(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;j=i;if(e>>>0>36){c[(vb()|0)>>2]=22;s=0;t=0;H=s;i=j;return t|0}k=b+4|0;l=b+100|0;do{m=c[k>>2]|0;if(m>>>0<(c[l>>2]|0)>>>0){c[k>>2]=m+1;o=d[m>>0]|0}else o=Py(b)|0}while((Jy(o)|0)!=0);do if((o|0)==43|(o|0)==45){m=((o|0)==45)<<31>>31;n=c[k>>2]|0;if(n>>>0<(c[l>>2]|0)>>>0){c[k>>2]=n+1;o=d[n>>0]|0;break}else{o=Py(b)|0;break}}else m=0;while(0);n=(e|0)==0;do if((e&-17|0)==0&(o|0)==48){o=c[k>>2]|0;if(o>>>0<(c[l>>2]|0)>>>0){c[k>>2]=o+1;o=d[o>>0]|0}else o=Py(b)|0;if((o|32|0)!=120){f=n?8:e;e=32;break}e=c[k>>2]|0;if(e>>>0<(c[l>>2]|0)>>>0){c[k>>2]=e+1;o=d[e>>0]|0}else o=Py(b)|0;if((d[o+273249>>0]|0)>15){h=(c[l>>2]|0)==0;if(!h)c[k>>2]=(c[k>>2]|0)+ -1;if((f|0)==0){Oy(b,0);s=0;t=0;H=s;i=j;return t|0}if(h){s=0;t=0;H=s;i=j;return t|0}c[k>>2]=(c[k>>2]|0)+ -1;s=0;t=0;H=s;i=j;return t|0}else{f=16;e=47}}else{f=n?10:e;if((d[o+273249>>0]|0)>>>0<f>>>0)e=32;else{if((c[l>>2]|0)!=0)c[k>>2]=(c[k>>2]|0)+ -1;Oy(b,0);c[(vb()|0)>>2]=22;s=0;t=0;H=s;i=j;return t|0}}while(0);if((e|0)==32)if((f|0)==10){f=o+ -48|0;if(f>>>0<10){n=0;while(1){n=n+f|0;f=c[k>>2]|0;if(f>>>0<(c[l>>2]|0)>>>0){c[k>>2]=f+1;o=d[f>>0]|0}else o=Py(b)|0;f=o+ -48|0;if(!(f>>>0<10&n>>>0<429496729))break;n=n*10|0}p=0}else{n=0;p=0}f=o+ -48|0;if(f>>>0<10){do{s=yz(n|0,p|0,10,0)|0;r=H;q=((f|0)<0)<<31>>31;t=~q;if(r>>>0>t>>>0|(r|0)==(t|0)&s>>>0>~f>>>0)break;n=nz(s|0,r|0,f|0,q|0)|0;p=H;f=c[k>>2]|0;if(f>>>0<(c[l>>2]|0)>>>0){c[k>>2]=f+1;o=d[f>>0]|0}else o=Py(b)|0;f=o+ -48|0}while(f>>>0<10&(p>>>0<429496729|(p|0)==429496729&n>>>0<2576980378));if(!(f>>>0>9)){f=10;e=73}}}else e=47;a:do if((e|0)==47){if((f+ -1&f|0)==0){e=a[273512+((f*23|0)>>>5&7)>>0]|0;r=a[o+273249>>0]|0;n=r&255;if(n>>>0<f>>>0){o=n;n=0;do{n=o|n<<e;o=c[k>>2]|0;if(o>>>0<(c[l>>2]|0)>>>0){c[k>>2]=o+1;s=d[o>>0]|0}else s=Py(b)|0;r=a[s+273249>>0]|0;o=r&255}while(o>>>0<f>>>0&n>>>0<134217728);p=0}else{p=0;n=0;s=o}o=oz(-1,-1,e|0)|0;q=H;if((r&255)>>>0>=f>>>0|(p>>>0>q>>>0|(p|0)==(q|0)&n>>>0>o>>>0)){o=s;e=73;break}while(1){n=rz(n|0,p|0,e|0)|0;p=H;n=r&255|n;r=c[k>>2]|0;if(r>>>0<(c[l>>2]|0)>>>0){c[k>>2]=r+1;s=d[r>>0]|0}else s=Py(b)|0;r=a[s+273249>>0]|0;if((r&255)>>>0>=f>>>0|(p>>>0>q>>>0|(p|0)==(q|0)&n>>>0>o>>>0)){o=s;e=73;break a}}}r=a[o+273249>>0]|0;e=r&255;if(e>>>0<f>>>0){n=0;do{n=e+(da(n,f)|0)|0;e=c[k>>2]|0;if(e>>>0<(c[l>>2]|0)>>>0){c[k>>2]=e+1;q=d[e>>0]|0}else q=Py(b)|0;r=a[q+273249>>0]|0;e=r&255}while(e>>>0<f>>>0&n>>>0<119304647);p=0}else{n=0;p=0;q=o}if((r&255)>>>0<f>>>0){e=zz(-1,-1,f|0,0)|0;o=H;while(1){if(p>>>0>o>>>0|(p|0)==(o|0)&n>>>0>e>>>0){o=q;e=73;break a}t=yz(n|0,p|0,f|0,0)|0;s=H;r=r&255;if(s>>>0>4294967295|(s|0)==-1&t>>>0>~r>>>0){o=q;e=73;break a}n=nz(r|0,0,t|0,s|0)|0;p=H;q=c[k>>2]|0;if(q>>>0<(c[l>>2]|0)>>>0){c[k>>2]=q+1;q=d[q>>0]|0}else q=Py(b)|0;r=a[q+273249>>0]|0;if(!((r&255)>>>0<f>>>0)){o=q;e=73;break}}}else{o=q;e=73}}while(0);if((e|0)==73)if((d[o+273249>>0]|0)>>>0<f>>>0){do{e=c[k>>2]|0;if(e>>>0<(c[l>>2]|0)>>>0){c[k>>2]=e+1;e=d[e>>0]|0}else e=Py(b)|0}while((d[e+273249>>0]|0)>>>0<f>>>0);c[(vb()|0)>>2]=34;p=h;n=g}if((c[l>>2]|0)!=0)c[k>>2]=(c[k>>2]|0)+ -1;if(!(p>>>0<h>>>0|(p|0)==(h|0)&n>>>0<g>>>0)){if((g&1|0)==0&0==0&(m|0)==0){c[(vb()|0)>>2]=34;t=nz(g|0,h|0,-1,-1)|0;s=H;H=s;i=j;return t|0}if(p>>>0>h>>>0|(p|0)==(h|0)&n>>>0>g>>>0){c[(vb()|0)>>2]=34;s=h;t=g;H=s;i=j;return t|0}}t=((m|0)<0)<<31>>31;t=kz(n^m|0,p^t|0,m|0,t|0)|0;s=H;H=s;i=j;return t|0}



function My(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0,t=0,u=0,v=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,I=0.0,J=0,K=0.0,L=0.0,M=0.0,N=0.0;g=i;i=i+512|0;k=g;if((e|0)==2){e=53;h=-1074}else if((e|0)==0){e=24;h=-149}else if((e|0)==1){e=53;h=-1074}else{L=0.0;i=g;return+L}n=b+4|0;o=b+100|0;do{j=c[n>>2]|0;if(j>>>0<(c[o>>2]|0)>>>0){c[n>>2]=j+1;E=d[j>>0]|0}else E=Py(b)|0}while((Jy(E)|0)!=0);do if((E|0)==43|(E|0)==45){j=1-(((E|0)==45&1)<<1)|0;m=c[n>>2]|0;if(m>>>0<(c[o>>2]|0)>>>0){c[n>>2]=m+1;E=d[m>>0]|0;break}else{E=Py(b)|0;break}}else j=1;while(0);m=0;do{if((E|32|0)!=(a[273528+m>>0]|0))break;do if(m>>>0<7){p=c[n>>2]|0;if(p>>>0<(c[o>>2]|0)>>>0){c[n>>2]=p+1;E=d[p>>0]|0;break}else{E=Py(b)|0;break}}while(0);m=m+1|0}while(m>>>0<8);do if((m|0)==3)q=23;else if((m|0)!=8){p=(f|0)==0;if(!(m>>>0<4|p))if((m|0)==8)break;else{q=23;break}a:do if((m|0)==0){m=0;do{if((E|32|0)!=(a[273544+m>>0]|0))break a;do if(m>>>0<2){s=c[n>>2]|0;if(s>>>0<(c[o>>2]|0)>>>0){c[n>>2]=s+1;E=d[s>>0]|0;break}else{E=Py(b)|0;break}}while(0);m=m+1|0}while(m>>>0<3)}while(0);if((m|0)==0){do if((E|0)==48){m=c[n>>2]|0;if(m>>>0<(c[o>>2]|0)>>>0){c[n>>2]=m+1;m=d[m>>0]|0}else m=Py(b)|0;if((m|32|0)!=120){if((c[o>>2]|0)==0){E=48;break}c[n>>2]=(c[n>>2]|0)+ -1;E=48;break}k=c[n>>2]|0;if(k>>>0<(c[o>>2]|0)>>>0){c[n>>2]=k+1;A=d[k>>0]|0;y=0}else{A=Py(b)|0;y=0}while(1){if((A|0)==46){q=70;break}else if((A|0)!=48){k=0;m=0;s=0;t=0;v=0;z=0;I=1.0;u=0;r=0.0;break}k=c[n>>2]|0;if(k>>>0<(c[o>>2]|0)>>>0){c[n>>2]=k+1;A=d[k>>0]|0;y=1;continue}else{A=Py(b)|0;y=1;continue}}b:do if((q|0)==70){k=c[n>>2]|0;if(k>>>0<(c[o>>2]|0)>>>0){c[n>>2]=k+1;A=d[k>>0]|0}else A=Py(b)|0;if((A|0)==48){s=-1;t=-1;while(1){k=c[n>>2]|0;if(k>>>0<(c[o>>2]|0)>>>0){c[n>>2]=k+1;A=d[k>>0]|0}else A=Py(b)|0;if((A|0)!=48){k=0;m=0;y=1;v=1;z=0;I=1.0;u=0;r=0.0;break b}J=nz(s|0,t|0,-1,-1)|0;s=J;t=H}}else{k=0;m=0;s=0;t=0;v=1;z=0;I=1.0;u=0;r=0.0}}while(0);c:while(1){B=A+ -48|0;do if(!(B>>>0<10)){C=A|32;D=(A|0)==46;if(!((C+ -97|0)>>>0<6|D))break c;if(D)if((v|0)==0){s=m;t=k;v=1;break}else{A=46;break c}else{B=(A|0)>57?C+ -87|0:B;q=84;break}}else q=84;while(0);if((q|0)==84){q=0;do if(!((k|0)<0|(k|0)==0&m>>>0<8)){if((k|0)<0|(k|0)==0&m>>>0<14){L=I*.0625;K=L;r=r+L*+(B|0);break}if((B|0)!=0&(z|0)==0){z=1;K=I;r=r+I*.5}else K=I}else{K=I;u=B+(u<<4)|0}while(0);m=nz(m|0,k|0,1,0)|0;k=H;y=1;I=K}A=c[n>>2]|0;if(A>>>0<(c[o>>2]|0)>>>0){c[n>>2]=A+1;A=d[A>>0]|0;continue}else{A=Py(b)|0;continue}}if((y|0)==0){e=(c[o>>2]|0)==0;if(!e)c[n>>2]=(c[n>>2]|0)+ -1;if(!p){if(!e?(l=c[n>>2]|0,c[n>>2]=l+ -1,(v|0)!=0):0)c[n>>2]=l+ -2}else Oy(b,0);L=+(j|0)*0.0;i=g;return+L}q=(v|0)==0;l=q?m:s;q=q?k:t;if((k|0)<0|(k|0)==0&m>>>0<8)do{u=u<<4;m=nz(m|0,k|0,1,0)|0;k=H}while((k|0)<0|(k|0)==0&m>>>0<8);do if((A|32|0)==112){m=Ny(b,f)|0;k=H;if((m|0)==0&(k|0)==-2147483648)if(p){Oy(b,0);L=0.0;i=g;return+L}else{if((c[o>>2]|0)==0){m=0;k=0;break}c[n>>2]=(c[n>>2]|0)+ -1;m=0;k=0;break}}else if((c[o>>2]|0)==0){m=0;k=0}else{c[n>>2]=(c[n>>2]|0)+ -1;m=0;k=0}while(0);l=rz(l|0,q|0,2)|0;l=nz(l|0,H|0,-32,-1)|0;k=nz(l|0,H|0,m|0,k|0)|0;l=H;if((u|0)==0){L=+(j|0)*0.0;i=g;return+L}if((l|0)>0|(l|0)==0&k>>>0>(0-h|0)>>>0){c[(vb()|0)>>2]=34;L=+(j|0)*1.7976931348623157e+308*1.7976931348623157e+308;i=g;return+L}J=h+ -106|0;G=((J|0)<0)<<31>>31;if((l|0)<(G|0)|(l|0)==(G|0)&k>>>0<J>>>0){c[(vb()|0)>>2]=34;L=+(j|0)*2.2250738585072014e-308*2.2250738585072014e-308;i=g;return+L}if((u|0)>-1)do{u=u<<1;if(!(r>=.5))I=r;else{I=r+-1.0;u=u|1}r=r+I;k=nz(k|0,l|0,-1,-1)|0;l=H}while((u|0)>-1);h=kz(32,0,h|0,((h|0)<0)<<31>>31|0)|0;h=nz(k|0,l|0,h|0,H|0)|0;J=H;if(0>(J|0)|0==(J|0)&e>>>0>h>>>0)e=(h|0)<0?0:h;do if((e|0)<53){K=+(j|0);I=+Ca(+(+Sy(1.0,84-e|0)),+K);if(!((e|0)<32&r!=0.0))break;J=u&1;u=(J^1)+u|0;r=(J|0)==0?0.0:r}else{I=0.0;K=+(j|0)}while(0);r=K*r+(I+K*+(u>>>0))-I;if(!(r!=0.0))c[(vb()|0)>>2]=34;L=+Ty(r,k);i=g;return+L}while(0);m=h+e|0;l=0-m|0;B=0;while(1){if((E|0)==46){q=139;break}else if((E|0)!=48){A=0;z=0;D=0;break}s=c[n>>2]|0;if(s>>>0<(c[o>>2]|0)>>>0){c[n>>2]=s+1;E=d[s>>0]|0;B=1;continue}else{E=Py(b)|0;B=1;continue}}d:do if((q|0)==139){s=c[n>>2]|0;if(s>>>0<(c[o>>2]|0)>>>0){c[n>>2]=s+1;E=d[s>>0]|0}else E=Py(b)|0;if((E|0)==48){A=-1;z=-1;while(1){s=c[n>>2]|0;if(s>>>0<(c[o>>2]|0)>>>0){c[n>>2]=s+1;E=d[s>>0]|0}else E=Py(b)|0;if((E|0)!=48){B=1;D=1;break d}J=nz(A|0,z|0,-1,-1)|0;A=J;z=H}}else{A=0;z=0;D=1}}while(0);c[k>>2]=0;F=E+ -48|0;G=(E|0)==46;e:do if(F>>>0<10|G){s=k+496|0;C=0;y=0;v=0;u=0;t=0;while(1){do if(G)if((D|0)==0){A=C;z=y;D=1}else break e;else{J=nz(C|0,y|0,1,0)|0;y=H;G=(E|0)!=48;if((u|0)>=125){if(!G){C=J;break}c[s>>2]=c[s>>2]|1;C=J;break}B=k+(u<<2)|0;if((v|0)!=0)F=E+ -48+((c[B>>2]|0)*10|0)|0;c[B>>2]=F;v=v+1|0;F=(v|0)==9;C=J;B=1;v=F?0:v;u=(F&1)+u|0;t=G?J:t}while(0);E=c[n>>2]|0;if(E>>>0<(c[o>>2]|0)>>>0){c[n>>2]=E+1;E=d[E>>0]|0}else E=Py(b)|0;F=E+ -48|0;G=(E|0)==46;if(!(F>>>0<10|G)){q=162;break}}}else{C=0;y=0;v=0;u=0;t=0;q=162}while(0);if((q|0)==162){J=(D|0)==0;A=J?C:A;z=J?y:z}q=(B|0)!=0;if(q?(E|32|0)==101:0){s=Ny(b,f)|0;f=H;do if((s|0)==0&(f|0)==-2147483648)if(p){Oy(b,0);L=0.0;i=g;return+L}else{if((c[o>>2]|0)==0){s=0;f=0;break}c[n>>2]=(c[n>>2]|0)+ -1;s=0;f=0;break}while(0);A=nz(s|0,f|0,A|0,z|0)|0;z=H}else if((E|0)>-1?(c[o>>2]|0)!=0:0)c[n>>2]=(c[n>>2]|0)+ -1;if(!q){c[(vb()|0)>>2]=22;Oy(b,0);L=0.0;i=g;return+L}b=c[k>>2]|0;if((b|0)==0){L=+(j|0)*0.0;i=g;return+L}do if((A|0)==(C|0)&(z|0)==(y|0)&((y|0)<0|(y|0)==0&C>>>0<10)){if(!(e>>>0>30)?(b>>>e|0)!=0:0)break;L=+(j|0)*+(b>>>0);i=g;return+L}while(0);J=(h|0)/-2|0;G=((J|0)<0)<<31>>31;if((z|0)>(G|0)|(z|0)==(G|0)&A>>>0>J>>>0){c[(vb()|0)>>2]=34;L=+(j|0)*1.7976931348623157e+308*1.7976931348623157e+308;i=g;return+L}J=h+ -106|0;G=((J|0)<0)<<31>>31;if((z|0)<(G|0)|(z|0)==(G|0)&A>>>0<J>>>0){c[(vb()|0)>>2]=34;L=+(j|0)*2.2250738585072014e-308*2.2250738585072014e-308;i=g;return+L}if((v|0)!=0){if((v|0)<9){b=k+(u<<2)|0;n=c[b>>2]|0;do{n=n*10|0;v=v+1|0}while((v|0)!=9);c[b>>2]=n}u=u+1|0}do if((t|0)<9?(t|0)<=(A|0)&(A|0)<18:0){if((A|0)==9){L=+(j|0)*+((c[k>>2]|0)>>>0);i=g;return+L}if((A|0)<9){L=+(j|0)*+((c[k>>2]|0)>>>0)/+(c[273560+(8-A<<2)>>2]|0);i=g;return+L}J=e+27+(da(A,-3)|0)|0;b=c[k>>2]|0;if((J|0)<=30?(b>>>J|0)!=0:0)break;L=+(j|0)*+(b>>>0)*+(c[273560+(A+ -10<<2)>>2]|0);i=g;return+L}while(0);b=(A|0)%9|0;if((b|0)==0){n=0;o=0;b=A}else{b=(A|0)>-1?b:b+9|0;q=c[273560+(8-b<<2)>>2]|0;if((u|0)!=0){p=1e9/(q|0)|0;n=0;o=0;f=0;do{F=k+(f<<2)|0;G=c[F>>2]|0;J=((G>>>0)/(q>>>0)|0)+o|0;c[F>>2]=J;o=da((G>>>0)%(q>>>0)|0,p)|0;G=f;f=f+1|0;if((G|0)==(n|0)&(J|0)==0){n=f&127;A=A+ -9|0}}while((f|0)!=(u|0));if((o|0)!=0){c[k+(u<<2)>>2]=o;u=u+1|0}}else{n=0;u=0}o=0;b=9-b+A|0}f:while(1){f=k+(n<<2)|0;if((b|0)<18){do{q=0;f=u+127|0;while(1){f=f&127;p=k+(f<<2)|0;s=rz(c[p>>2]|0,0,29)|0;s=nz(s|0,H|0,q|0,0)|0;q=H;if(q>>>0>0|(q|0)==0&s>>>0>1e9){J=zz(s|0,q|0,1e9,0)|0;s=Az(s|0,q|0,1e9,0)|0;q=J}else q=0;c[p>>2]=s;p=(f|0)==(n|0);if(!((f|0)!=(u+127&127|0)|p))u=(s|0)==0?f:u;if(p)break;else f=f+ -1|0}o=o+ -29|0}while((q|0)==0)}else{if((b|0)!=18)break;do{if(!((c[f>>2]|0)>>>0<9007199)){b=18;break f}q=0;p=u+127|0;while(1){p=p&127;s=k+(p<<2)|0;t=rz(c[s>>2]|0,0,29)|0;t=nz(t|0,H|0,q|0,0)|0;q=H;if(q>>>0>0|(q|0)==0&t>>>0>1e9){J=zz(t|0,q|0,1e9,0)|0;t=Az(t|0,q|0,1e9,0)|0;q=J}else q=0;c[s>>2]=t;s=(p|0)==(n|0);if(!((p|0)!=(u+127&127|0)|s))u=(t|0)==0?p:u;if(s)break;else p=p+ -1|0}o=o+ -29|0}while((q|0)==0)}n=n+127&127;if((n|0)==(u|0)){J=u+127&127;u=k+((u+126&127)<<2)|0;c[u>>2]=c[u>>2]|c[k+(J<<2)>>2];u=J}c[k+(n<<2)>>2]=q;b=b+9|0}g:while(1){f=u+1&127;p=k+((u+127&127)<<2)|0;while(1){s=(b|0)==18;q=(b|0)>27?9:1;while(1){t=0;while(1){v=t+n&127;if((v|0)==(u|0)){t=2;break}z=c[k+(v<<2)>>2]|0;y=c[273552+(t<<2)>>2]|0;if(z>>>0<y>>>0){t=2;break}v=t+1|0;if(z>>>0>y>>>0)break;if((v|0)<2)t=v;else{t=v;break}}if((t|0)==2&s)break g;o=q+o|0;if((n|0)==(u|0))n=u;else break}s=(1<<q)+ -1|0;v=1e9>>>q;y=n;t=0;do{F=k+(n<<2)|0;G=c[F>>2]|0;J=(G>>>q)+t|0;c[F>>2]=J;t=da(G&s,v)|0;J=(n|0)==(y|0)&(J|0)==0;n=n+1&127;b=J?b+ -9|0:b;y=J?n:y}while((n|0)!=(u|0));if((t|0)==0){n=y;continue}if((f|0)!=(y|0))break;c[p>>2]=c[p>>2]|1;n=y}c[k+(u<<2)>>2]=t;n=y;u=f}b=n&127;if((b|0)==(u|0)){c[k+(f+ -1<<2)>>2]=0;u=f}I=+((c[k+(b<<2)>>2]|0)>>>0);b=n+1&127;if((b|0)==(u|0)){u=u+1&127;c[k+(u+ -1<<2)>>2]=0}r=+(j|0);K=r*(I*1.0e9+ +((c[k+(b<<2)>>2]|0)>>>0));j=o+53|0;h=j-h|0;if((h|0)<(e|0)){e=(h|0)<0?0:h;b=1}else b=0;if((e|0)<53){N=+Ca(+(+Sy(1.0,105-e|0)),+K);M=+Ia(+K,+(+Sy(1.0,53-e|0)));I=N;L=M;K=N+(K-M)}else{I=0.0;L=0.0}f=n+2&127;do if((f|0)!=(u|0)){k=c[k+(f<<2)>>2]|0;do if(!(k>>>0<5e8)){if(k>>>0>5e8){L=r*.75+L;break}if((n+3&127|0)==(u|0)){L=r*.5+L;break}else{L=r*.75+L;break}}else{if((k|0)==0?(n+3&127|0)==(u|0):0)break;L=r*.25+L}while(0);if((53-e|0)<=1)break;if(+Ia(+L,1.0)!=0.0)break;L=L+1.0}while(0);r=K+L-I;do if((j&2147483647|0)>(-2-m|0)){if(+S(+r)>=9007199254740992.0){b=(b|0)!=0&(e|0)==(h|0)?0:b;o=o+1|0;r=r*.5}if((o+50|0)<=(l|0)?!((b|0)!=0&L!=0.0):0)break;c[(vb()|0)>>2]=34}while(0);N=+Ty(r,o);i=g;return+N}else if((m|0)==3){e=c[n>>2]|0;if(e>>>0<(c[o>>2]|0)>>>0){c[n>>2]=e+1;e=d[e>>0]|0}else e=Py(b)|0;if((e|0)==40)e=1;else{if((c[o>>2]|0)==0){N=w;i=g;return+N}c[n>>2]=(c[n>>2]|0)+ -1;N=w;i=g;return+N}while(1){h=c[n>>2]|0;if(h>>>0<(c[o>>2]|0)>>>0){c[n>>2]=h+1;h=d[h>>0]|0}else h=Py(b)|0;if(!((h+ -48|0)>>>0<10|(h+ -65|0)>>>0<26)?!((h+ -97|0)>>>0<26|(h|0)==95):0)break;e=e+1|0}if((h|0)==41){N=w;i=g;return+N}h=(c[o>>2]|0)==0;if(!h)c[n>>2]=(c[n>>2]|0)+ -1;if(p){c[(vb()|0)>>2]=22;Oy(b,0);N=0.0;i=g;return+N}if((e|0)==0|h){N=w;i=g;return+N}do{e=e+ -1|0;c[n>>2]=(c[n>>2]|0)+ -1}while((e|0)!=0);r=w;i=g;return+r}else{if((c[o>>2]|0)!=0)c[n>>2]=(c[n>>2]|0)+ -1;c[(vb()|0)>>2]=22;Oy(b,0);N=0.0;i=g;return+N}}while(0);if((q|0)==23){e=(c[o>>2]|0)==0;if(!e)c[n>>2]=(c[n>>2]|0)+ -1;if(!(m>>>0<4|(f|0)==0|e))do{c[n>>2]=(c[n>>2]|0)+ -1;m=m+ -1|0}while(m>>>0>3)}N=+(j|0)*x;i=g;return+N}function Ny(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;g=a+4|0;h=c[g>>2]|0;f=a+100|0;if(h>>>0<(c[f>>2]|0)>>>0){c[g>>2]=h+1;j=d[h>>0]|0}else j=Py(a)|0;if((j|0)==43|(j|0)==45){h=(j|0)==45&1;j=c[g>>2]|0;if(j>>>0<(c[f>>2]|0)>>>0){c[g>>2]=j+1;j=d[j>>0]|0}else j=Py(a)|0;if(!((j+ -48|0)>>>0<10|(b|0)==0)?(c[f>>2]|0)!=0:0)c[g>>2]=(c[g>>2]|0)+ -1}else h=0;if((j+ -48|0)>>>0>9){if((c[f>>2]|0)==0){j=-2147483648;k=0;H=j;i=e;return k|0}c[g>>2]=(c[g>>2]|0)+ -1;j=-2147483648;k=0;H=j;i=e;return k|0}else b=0;while(1){b=j+ -48+b|0;j=c[g>>2]|0;if(j>>>0<(c[f>>2]|0)>>>0){c[g>>2]=j+1;j=d[j>>0]|0}else j=Py(a)|0;if(!((j+ -48|0)>>>0<10&(b|0)<214748364))break;b=b*10|0}k=((b|0)<0)<<31>>31;if((j+ -48|0)>>>0<10)do{k=yz(b|0,k|0,10,0)|0;b=H;j=nz(j|0,((j|0)<0)<<31>>31|0,-48,-1)|0;b=nz(j|0,H|0,k|0,b|0)|0;k=H;j=c[g>>2]|0;if(j>>>0<(c[f>>2]|0)>>>0){c[g>>2]=j+1;j=d[j>>0]|0}else j=Py(a)|0}while((j+ -48|0)>>>0<10&((k|0)<21474836|(k|0)==21474836&b>>>0<2061584302));if((j+ -48|0)>>>0<10)do{j=c[g>>2]|0;if(j>>>0<(c[f>>2]|0)>>>0){c[g>>2]=j+1;j=d[j>>0]|0}else j=Py(a)|0}while((j+ -48|0)>>>0<10);if((c[f>>2]|0)!=0)c[g>>2]=(c[g>>2]|0)+ -1;g=(h|0)!=0;h=kz(0,0,b|0,k|0)|0;j=g?H:k;k=g?h:b;H=j;i=e;return k|0}function Oy(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;c[a+104>>2]=b;f=c[a+8>>2]|0;e=c[a+4>>2]|0;g=f-e|0;c[a+108>>2]=g;if((b|0)!=0&(g|0)>(b|0)){c[a+100>>2]=e+b;i=d;return}else{c[a+100>>2]=f;i=d;return}}function Py(b){b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;f=i;j=b+104|0;l=c[j>>2]|0;if(!((l|0)!=0?(c[b+108>>2]|0)>=(l|0):0))k=3;if((k|0)==3?(e=Zy(b)|0,(e|0)>=0):0){k=c[j>>2]|0;j=c[b+8>>2]|0;if((k|0)!=0?(g=c[b+4>>2]|0,h=k-(c[b+108>>2]|0)+ -1|0,(j-g|0)>(h|0)):0)c[b+100>>2]=g+h;else c[b+100>>2]=j;g=c[b+4>>2]|0;if((j|0)!=0){l=b+108|0;c[l>>2]=j+1-g+(c[l>>2]|0)}b=g+ -1|0;if((d[b>>0]|0|0)==(e|0)){l=e;i=f;return l|0}a[b>>0]=e;l=e;i=f;return l|0}c[b+100>>2]=0;l=-1;i=f;return l|0}function Qy(a,b){a=+a;b=b|0;var d=0,e=0,f=0,g=0;d=i;h[k>>3]=a;f=c[k>>2]|0;e=c[k+4>>2]|0;g=oz(f|0,e|0,52)|0;g=g&2047;if((g|0)==0){if(a!=0.0){a=+Qy(a*18446744073709552000.0,b);e=(c[b>>2]|0)+ -64|0}else e=0;c[b>>2]=e;i=d;return+a}else if((g|0)==2047){i=d;return+a}else{c[b>>2]=g+ -1022;c[k>>2]=f;c[k+4>>2]=e&-2146435073|1071644672;a=+h[k>>3];i=d;return+a}return 0.0}function Ry(a,b){a=+a;b=b|0;var c=0;c=i;a=+Qy(a,b);i=c;return+a}function Sy(a,b){a=+a;b=b|0;var d=0,e=0;d=i;if((b|0)>1023){a=a*8.98846567431158e+307;e=b+ -1023|0;if((e|0)>1023){b=b+ -2046|0;b=(b|0)>1023?1023:b;a=a*8.98846567431158e+307}else b=e}else if((b|0)<-1022){a=a*2.2250738585072014e-308;e=b+1022|0;if((e|0)<-1022){b=b+2044|0;b=(b|0)<-1022?-1022:b;a=a*2.2250738585072014e-308}else b=e}b=rz(b+1023|0,0,52)|0;e=H;c[k>>2]=b;c[k+4>>2]=e;a=a*+h[k>>3];i=d;return+a}function Ty(a,b){a=+a;b=b|0;var c=0;c=i;a=+Sy(a,b);i=c;return+a}function Uy(a,b){a=a|0;b=b|0;var c=0;c=i;if((a|0)==0)a=0;else a=Vy(a,b,0)|0;i=c;return a|0}function Vy(b,d,e){b=b|0;d=d|0;e=e|0;e=i;if((b|0)==0){b=1;i=e;return b|0}if(d>>>0<128){a[b>>0]=d;b=1;i=e;return b|0}if(d>>>0<2048){a[b>>0]=d>>>6|192;a[b+1>>0]=d&63|128;b=2;i=e;return b|0}if(d>>>0<55296|(d+ -57344|0)>>>0<8192){a[b>>0]=d>>>12|224;a[b+1>>0]=d>>>6&63|128;a[b+2>>0]=d&63|128;b=3;i=e;return b|0}if((d+ -65536|0)>>>0<1048576){a[b>>0]=d>>>18|240;a[b+1>>0]=d>>>12&63|128;a[b+2>>0]=d>>>6&63|128;a[b+3>>0]=d&63|128;b=4;i=e;return b|0}else{c[(vb()|0)>>2]=84;b=-1;i=e;return b|0}return 0}function Wy(a){a=a|0;var b=0;b=(da(c[a>>2]|0,1103515245)|0)+12345|0;c[a>>2]=b;a=b>>>11^b;a=a<<7&-1658038656^a;a=a<<15&-272236544^a;return(a>>>18^a)>>>1|0}function Xy(b){b=b|0;var d=0,e=0,f=0;e=i;f=b+74|0;d=a[f>>0]|0;a[f>>0]=d+255|d;f=b+20|0;d=b+44|0;if((c[f>>2]|0)>>>0>(c[d>>2]|0)>>>0)Sb[c[b+36>>2]&31](b,0,0)|0;c[b+16>>2]=0;c[b+28>>2]=0;c[f>>2]=0;f=c[b>>2]|0;if((f&20|0)==0){f=c[d>>2]|0;c[b+8>>2]=f;c[b+4>>2]=f;f=0;i=e;return f|0}if((f&4|0)==0){f=-1;i=e;return f|0}c[b>>2]=f|32;f=-1;i=e;return f|0}function Yy(b){b=b|0;var d=0,e=0,f=0;d=i;e=b+74|0;f=a[e>>0]|0;a[e>>0]=f+255|f;e=c[b>>2]|0;if((e&8|0)==0){c[b+8>>2]=0;c[b+4>>2]=0;f=c[b+44>>2]|0;c[b+28>>2]=f;c[b+20>>2]=f;c[b+16>>2]=f+(c[b+48>>2]|0);f=0;i=d;return f|0}else{c[b>>2]=e|32;f=-1;i=d;return f|0}return 0}function Zy(a){a=a|0;var b=0,e=0;b=i;i=i+16|0;e=b;if((c[a+8>>2]|0)==0?(Xy(a)|0)!=0:0)a=-1;else if((Sb[c[a+32>>2]&31](a,e,1)|0)==1)a=d[e>>0]|0;else a=-1;i=b;return a|0}function _y(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;g=e+16|0;h=c[g>>2]|0;do if((h|0)==0)if((Yy(e)|0)==0){h=c[g>>2]|0;break}else{k=0;i=f;return k|0}while(0);g=e+20|0;j=c[g>>2]|0;if((h-j|0)>>>0<d>>>0){k=Sb[c[e+36>>2]&31](e,b,d)|0;i=f;return k|0}a:do if((a[e+75>>0]|0)>-1){h=d;while(1){if((h|0)==0){e=0;break a}k=h+ -1|0;if((a[b+k>>0]|0)==10)break;else h=k}if((Sb[c[e+36>>2]&31](e,b,h)|0)>>>0<h>>>0){k=h;i=f;return k|0}else{j=c[g>>2]|0;e=h;d=d-h|0;b=b+h|0;break}}else e=0;while(0);qz(j|0,b|0,d|0)|0;c[g>>2]=(c[g>>2]|0)+d;k=e+d|0;i=f;return k|0}function $y(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;c[g>>2]=e;e=cz(a,b,d,g)|0;i=f;return e|0}function az(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+224|0;j=e+120|0;g=e+80|0;f=e;h=e+136|0;k=g+0|0;l=k+40|0;do{c[k>>2]=0;k=k+4|0}while((k|0)<(l|0));c[j>>2]=c[d>>2];if((bz(0,b,j,f,g)|0)<0){o=-1;i=e;return o|0}k=a+48|0;if((c[k>>2]|0)==0){o=a+44|0;d=c[o>>2]|0;c[o>>2]=h;m=a+28|0;c[m>>2]=h;l=a+20|0;c[l>>2]=h;c[k>>2]=80;n=a+16|0;c[n>>2]=h+80;f=bz(a,b,j,f,g)|0;if((d|0)!=0){Sb[c[a+36>>2]&31](a,0,0)|0;f=(c[l>>2]|0)==0?-1:f;c[o>>2]=d;c[k>>2]=0;c[n>>2]=0;c[m>>2]=0;c[l>>2]=0}}else f=bz(a,b,j,f,g)|0;o=f;i=e;return o|0}function bz(e,f,g,j,l){e=e|0;f=f|0;g=g|0;j=j|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0.0,Za=0,_a=0,$a=0,ab=0.0,bb=0;o=i;i=i+864|0;A=o+16|0;q=o+8|0;u=o+560|0;v=u;t=o+840|0;r=o+584|0;M=o+520|0;S=o;F=o+852|0;L=(e|0)!=0;N=M+40|0;G=N;M=M+39|0;p=S+4|0;s=t+12|0;t=t+11|0;z=s;y=z-v|0;w=-2-v|0;x=z+2|0;B=A+288|0;C=u+9|0;D=C;E=u+8|0;Oa=0;La=0;ta=0;Pa=0;Ma=0;a:while(1){do if((ta|0)>-1)if((Pa|0)>(2147483647-ta|0)){c[(vb()|0)>>2]=75;ta=-1;break}else{ta=Pa+ta|0;break}while(0);Ja=a[f>>0]|0;if(Ja<<24>>24==0){Ha=344;break}else Ia=f;while(1){if(Ja<<24>>24==37){K=Ia;J=Ia;Ha=9;break}else if(Ja<<24>>24==0){ma=Ia;oa=Ia;break}$a=Ia+1|0;Ja=a[$a>>0]|0;Ia=$a}b:do if((Ha|0)==9)while(1){Ha=0;if((a[K+1>>0]|0)!=37){ma=K;oa=J;break b}oa=J+1|0;ma=K+2|0;if((a[ma>>0]|0)==37){K=ma;J=oa}else break}while(0);Pa=oa-f|0;if(L)_y(f,Pa,e)|0;if((oa|0)!=(f|0)){f=ma;continue}Ja=ma+1|0;Na=a[Ja>>0]|0;Qa=(Na<<24>>24)+ -48|0;if(Qa>>>0<10?(a[ma+2>>0]|0)==36:0){Ja=ma+3|0;Na=a[Ja>>0]|0;Ia=1}else{Qa=-1;Ia=Ma}Ka=Na<<24>>24;c:do if((Ka+ -32|0)>>>0<32){Ra=0;while(1){if((1<<Ka+ -32&75913|0)==0){Ka=Na;break c}Ra=1<<(Na<<24>>24)+ -32|Ra;Ja=Ja+1|0;Na=a[Ja>>0]|0;Ka=Na<<24>>24;if(!((Ka+ -32|0)>>>0<32)){Ka=Na;break}}}else{Ka=Na;Ra=0}while(0);do if(Ka<<24>>24==42){Ta=Ja+1|0;Ka=(a[Ta>>0]|0)+ -48|0;if(Ka>>>0<10?(a[Ja+2>>0]|0)==36:0){c[l+(Ka<<2)>>2]=10;Ia=1;Ja=Ja+3|0;Ka=c[j+((a[Ta>>0]|0)+ -48<<3)>>2]|0}else{if((Ia|0)!=0){m=-1;Ha=362;break a}if(!L){Ia=0;Ka=0;break}Ia=c[g>>2]|0;Ka=c[Ia>>2]|0;c[g>>2]=Ia+4;Ia=0;Ja=Ta}if((Ka|0)<0){Ra=Ra|8192;Ta=Ja;Ka=0-Ka|0}else Ta=Ja}else{Ka=Ka<<24>>24;if((Ka+ -48|0)>>>0<10){Ta=Ja;Ja=Ka;Ka=0;do{Ka=Ja+ -48+(Ka*10|0)|0;Ta=Ta+1|0;Ja=a[Ta>>0]|0}while((Ja+ -48|0)>>>0<10);if((Ka|0)<0){m=-1;Ha=362;break a}}else{Ta=Ja;Ka=0}}while(0);d:do if((a[Ta>>0]|0)==46){Na=Ta+1|0;Ja=a[Na>>0]|0;if(!(Ja<<24>>24==42)){Ja=Ja<<24>>24;if((Ja+ -48|0)>>>0<10){Ta=Na;Na=0}else{Ta=Na;Na=0;break}while(1){Na=Ja+ -48+(Na*10|0)|0;Ta=Ta+1|0;Ja=a[Ta>>0]|0;if(!((Ja+ -48|0)>>>0<10))break d}}Ja=Ta+2|0;Na=(a[Ja>>0]|0)+ -48|0;if(Na>>>0<10?(a[Ta+3>>0]|0)==36:0){c[l+(Na<<2)>>2]=10;Ta=Ta+4|0;Na=c[j+((a[Ja>>0]|0)+ -48<<3)>>2]|0;break}if((Ia|0)!=0){m=-1;Ha=362;break a}if(L){Ta=c[g>>2]|0;Na=c[Ta>>2]|0;c[g>>2]=Ta+4;Ta=Ja}else{Ta=Ja;Na=0}}else Na=-1;while(0);Sa=0;while(1){Ua=a[Ta>>0]|0;Va=(Ua<<24>>24)+ -65|0;if(Va>>>0>57){m=-1;Ha=362;break a}Ja=Ta+1|0;Wa=a[273592+(Sa*58|0)+Va>>0]|0;Va=Wa&255;if((Va+ -1|0)>>>0<8){Ta=Ja;Sa=Va}else break}if(Wa<<24>>24==0){m=-1;Ha=362;break}Xa=(Qa|0)>-1;e:do if(Wa<<24>>24==19)if(Xa){m=-1;Ha=362;break a}else{O=Oa;P=La;Ha=63}else{if(Xa){c[l+(Qa<<2)>>2]=Va;P=j+(Qa<<3)|0;O=c[P>>2]|0;P=c[P+4>>2]|0;Ha=63;break}if(!L){m=0;Ha=362;break a}if((Wa&255)>20){I=Ua;T=Oa;U=La}else do switch(Va|0){case 9:{R=c[g>>2]|0;Q=c[R>>2]|0;c[g>>2]=R+4;R=La;Ha=64;break e};case 10:{Q=c[g>>2]|0;R=c[Q>>2]|0;c[g>>2]=Q+4;Q=R;R=((R|0)<0)<<31>>31;Ha=64;break e};case 11:{R=c[g>>2]|0;Q=c[R>>2]|0;c[g>>2]=R+4;R=0;Ha=64;break e};case 12:{Ha=c[g>>2]|0;R=Ha;Q=c[R>>2]|0;R=c[R+4>>2]|0;c[g>>2]=Ha+8;Ha=64;break e};case 13:{Q=c[g>>2]|0;R=c[Q>>2]|0;c[g>>2]=Q+4;Q=R<<16>>16;R=(((R&65535)<<16>>16|0)<0)<<31>>31;Ha=64;break e};case 14:{R=c[g>>2]|0;Q=c[R>>2]|0;c[g>>2]=R+4;Q=Q&65535;R=0;Ha=64;break e};case 15:{Q=c[g>>2]|0;R=c[Q>>2]|0;c[g>>2]=Q+4;Q=R<<24>>24;R=(((R&255)<<24>>24|0)<0)<<31>>31;Ha=64;break e};case 16:{R=c[g>>2]|0;Q=c[R>>2]|0;c[g>>2]=R+4;Q=Q&255;R=0;Ha=64;break e};case 17:{Q=c[g>>2]|0;c[k>>2]=c[Q>>2];c[k+4>>2]=c[Q+4>>2];ab=+h[k>>3];c[g>>2]=Q+8;h[k>>3]=ab;Q=c[k>>2]|0;R=c[k+4>>2]|0;Ha=64;break e};case 18:{O=c[g>>2]|0;c[k>>2]=c[O>>2];c[k+4>>2]=c[O+4>>2];ab=+h[k>>3];c[g>>2]=O+8;h[k>>3]=ab;O=c[k>>2]|0;P=c[k+4>>2]|0;Ha=63;break e};default:{Q=Oa;R=La;Ha=64;break e}}while(0)}while(0);if((Ha|0)==63){Ha=0;if(L){Q=O;R=P;Ha=64}else{Oa=O;La=P;f=Ja;Ma=Ia;continue}}if((Ha|0)==64){Ha=0;I=a[Ta>>0]|0;T=Q;U=R}Oa=I<<24>>24;if((Sa|0)!=0)Oa=(Oa&15|0)==3?Oa&-33:Oa;Qa=Ra&-65537;La=(Ra&8192|0)==0?Ra:Qa;f:do switch(Oa|0){case 110:switch(Sa|0){case 6:{c[T>>2]=ta;Oa=T;La=U;f=Ja;Ma=Ia;continue a};case 7:{Oa=T;c[Oa>>2]=ta;c[Oa+4>>2]=((ta|0)<0)<<31>>31;Oa=T;La=U;f=Ja;Ma=Ia;continue a};case 2:{Oa=T;c[Oa>>2]=ta;c[Oa+4>>2]=((ta|0)<0)<<31>>31;Oa=T;La=U;f=Ja;Ma=Ia;continue a};case 3:{b[T>>1]=ta;Oa=T;La=U;f=Ja;Ma=Ia;continue a};case 4:{a[T>>0]=ta;Oa=T;La=U;f=Ja;Ma=Ia;continue a};case 0:{c[T>>2]=ta;Oa=T;La=U;f=Ja;Ma=Ia;continue a};case 1:{c[T>>2]=ta;Oa=T;La=U;f=Ja;Ma=Ia;continue a};default:{Oa=T;La=U;f=Ja;Ma=Ia;continue a}};case 112:{ba=La|8;ca=Na>>>0>8?Na:8;aa=120;Ha=77;break};case 88:case 120:{ba=La;ca=Na;aa=Oa;Ha=77;break};case 111:{za=T;Ga=(za|0)==0&(U|0)==0;if(Ga)Da=N;else{Ba=U;Da=N;do{Da=Da+ -1|0;a[Da>>0]=za&7|48;za=oz(za|0,Ba|0,3)|0;Ba=H}while(!((za|0)==0&(Ba|0)==0))}if((La&8|0)==0){za=T;Fa=U;Ca=La;Ea=Na;Ba=0;Ga=274056;Ha=94}else{za=T;Fa=U;Ca=La;Ea=Na;Ba=Ga&1^1;Ga=Ga?274056:274061;Ha=94}break};case 105:case 100:{if((U|0)<0){ea=kz(0,0,T|0,U|0)|0;fa=H;ga=1;ha=274056;Ha=89;break f}if((La&2048|0)==0){ha=La&1;ea=T;fa=U;ga=ha;ha=(ha|0)==0?274056:274058;Ha=89}else{ea=T;fa=U;ga=1;ha=274057;Ha=89}break};case 117:{ea=T;fa=U;ga=0;ha=274056;Ha=89;break};case 99:{a[M>>0]=T;la=T;ia=M;ka=U;na=Qa;ra=1;qa=0;pa=274056;sa=N;break};case 109:{Z=Kb(c[(vb()|0)>>2]|0)|0;Ha=99;break};case 115:{Z=(T|0)==0?274072:T;Ha=99;break};case 67:{c[S>>2]=T;c[p>>2]=0;Y=S;W=S;X=-1;Ha=104;break};case 83:{if((Na|0)==0){ua=T;va=T;wa=0;Ha=110}else{Y=T;W=T;X=Na;Ha=104}break};case 65:case 71:case 70:case 69:case 97:case 103:case 102:case 101:{c[k>>2]=T;c[k+4>>2]=U;Ya=+h[k>>3];c[q>>2]=0;if((U|0)>=0)if((La&2048|0)==0){Ma=La&1;f=Ma;Ma=(Ma|0)==0?274081:274086}else{f=1;Ma=274083}else{f=1;Ma=274080;Ya=-Ya}h[k>>3]=Ya;$a=c[k+4>>2]&2146435072;if(!($a>>>0<2146435072|($a|0)==2146435072&0<0)){Na=(Oa&32|0)!=0;if(Ya!=Ya|0.0!=0.0){f=0;Oa=Na?274120:274128}else Oa=Na?274104:274112;Pa=f+3|0;Na=(Pa|0)<(Ka|0);if((La&8192|0)==0&Na){Qa=Ka-Pa|0;lz(r|0,32,(Qa>>>0>256?256:Qa)|0)|0;if(Qa>>>0>255)do{_y(r,256,e)|0;Qa=Qa+ -256|0}while(Qa>>>0>255);_y(r,Qa,e)|0}_y(Ma,f,e)|0;_y(Oa,3,e)|0;if((La&73728|0)==8192&Na){La=Ka-Pa|0;lz(r|0,32,(La>>>0>256?256:La)|0)|0;if(La>>>0>255)do{_y(r,256,e)|0;La=La+ -256|0}while(La>>>0>255);_y(r,La,e)|0}Oa=T;La=U;f=Ja;Pa=Na?Ka:Pa;Ma=Ia;continue a}Ya=+Ry(Ya,q)*2.0;Qa=Ya!=0.0;if(Qa)c[q>>2]=(c[q>>2]|0)+ -1;Sa=Oa|32;if((Sa|0)==97){Qa=Oa&32;Ma=(Qa|0)==0?Ma:Ma+9|0;f=f|2;Pa=Na>>>0>11?0:12-Na|0;do if((Pa|0)!=0){ab=8.0;do{Pa=Pa+ -1|0;ab=ab*16.0}while((Pa|0)!=0);if((a[Ma>>0]|0)==45){Ya=-(ab+(-Ya-ab));break}else{Ya=Ya+ab-ab;break}}while(0);Sa=c[q>>2]|0;Sa=(Sa|0)<0?0-Sa|0:Sa;if((Sa|0)<0){Pa=Sa;Sa=((Sa|0)<0)<<31>>31;Ra=s;while(1){$a=Az(Pa|0,Sa|0,10,0)|0;Ra=Ra+ -1|0;a[Ra>>0]=$a|48;$a=Pa;Pa=zz(Pa|0,Sa|0,10,0)|0;if(!(Sa>>>0>9|(Sa|0)==9&$a>>>0>4294967295))break;else Sa=H}}else{Ra=s;Pa=Sa}if((Pa|0)!=0)while(1){Ra=Ra+ -1|0;a[Ra>>0]=(Pa>>>0)%10|0|48;if(Pa>>>0<10)break;else Pa=(Pa>>>0)/10|0}if((Ra|0)==(s|0)){a[t>>0]=48;Ra=t}a[Ra+ -1>>0]=(c[q>>2]>>31&2)+43;Pa=Ra+ -2|0;a[Pa>>0]=Oa+15;Oa=(La&8|0)==0;if((Na|0)>0)if(Oa){Ra=u;while(1){$a=~~Ya;Oa=Ra+1|0;a[Ra>>0]=d[274136+$a>>0]|Qa;Ya=(Ya- +($a|0))*16.0;if((Oa-v|0)==1){a[Oa>>0]=46;Oa=Ra+2|0}if(!(Ya!=0.0))break;else Ra=Oa}}else{Ra=u;while(1){$a=~~Ya;Oa=Ra+1|0;a[Ra>>0]=d[274136+$a>>0]|Qa;Ya=(Ya- +($a|0))*16.0;if((Oa-v|0)==1){a[Oa>>0]=46;Oa=Ra+2|0}if(!(Ya!=0.0))break;else Ra=Oa}}else if(Oa){Sa=u;while(1){Ra=~~Ya;Oa=Sa+1|0;a[Sa>>0]=d[274136+Ra>>0]|Qa;Ya=(Ya- +(Ra|0))*16.0;Ra=Ya!=0.0;if((Oa-v|0)==1&Ra){a[Oa>>0]=46;Oa=Sa+2|0}if(!Ra)break;else Sa=Oa}}else{Ra=u;while(1){$a=~~Ya;Oa=Ra+1|0;a[Ra>>0]=d[274136+$a>>0]|Qa;Ya=(Ya- +($a|0))*16.0;if((Oa-v|0)==1){a[Oa>>0]=46;Oa=Ra+2|0}if(!(Ya!=0.0))break;else Ra=Oa}}do if((Na|0)==0)Ha=173;else{if((w+Oa|0)>=(Na|0)){Ha=173;break}V=x+Na-Pa|0}while(0);if((Ha|0)==173){Ha=0;V=y-Pa+Oa|0}Na=V+f|0;La=La&73728;Qa=(Na|0)<(Ka|0);if((La|0)==0&Qa){Ra=Ka-Na|0;lz(r|0,32,(Ra>>>0>256?256:Ra)|0)|0;if(Ra>>>0>255)do{_y(r,256,e)|0;Ra=Ra+ -256|0}while(Ra>>>0>255);_y(r,Ra,e)|0}_y(Ma,f,e)|0;if((La|0)==65536&Qa){Ma=Ka-Na|0;lz(r|0,48,(Ma>>>0>256?256:Ma)|0)|0;if(Ma>>>0>255)do{_y(r,256,e)|0;Ma=Ma+ -256|0}while(Ma>>>0>255);_y(r,Ma,e)|0}f=Oa-v|0;_y(u,f,e)|0;Ma=z-Pa|0;f=V-Ma-f|0;if((f|0)>0){lz(r|0,48,(f>>>0>256?256:f)|0)|0;if(f>>>0>255)do{_y(r,256,e)|0;f=f+ -256|0}while(f>>>0>255);_y(r,f,e)|0}_y(Pa,Ma,e)|0;if((La|0)==8192&Qa){La=Ka-Na|0;lz(r|0,32,(La>>>0>256?256:La)|0)|0;if(La>>>0>255)do{_y(r,256,e)|0;La=La+ -256|0}while(La>>>0>255);_y(r,La,e)|0}Oa=T;La=U;f=Ja;Pa=Qa?Ka:Na;Ma=Ia;continue a}Pa=(Na|0)<0?6:Na;if(Qa){Na=(c[q>>2]|0)+ -28|0;c[q>>2]=Na;Ya=Ya*268435456.0}else Na=c[q>>2]|0;Na=(Na|0)<0?A:B;Qa=Na;do{$a=~~Ya>>>0;c[Qa>>2]=$a;Qa=Qa+4|0;Ya=(Ya- +($a>>>0))*1.0e9}while(Ya!=0.0);Wa=c[q>>2]|0;if((Wa|0)>0){Ra=Na;do{Ta=(Wa|0)>29?29:Wa;Va=Qa+ -4|0;do if(!(Va>>>0<Ra>>>0)){Ua=0;do{_a=rz(c[Va>>2]|0,0,Ta|0)|0;_a=nz(_a|0,H|0,Ua|0,0)|0;$a=H;Za=Az(_a|0,$a|0,1e9,0)|0;c[Va>>2]=Za;Ua=zz(_a|0,$a|0,1e9,0)|0;Va=Va+ -4|0}while(!(Va>>>0<Ra>>>0));if((Ua|0)==0)break;Ra=Ra+ -4|0;c[Ra>>2]=Ua}while(0);while(1){if(!(Qa>>>0>Ra>>>0))break;Ua=Qa+ -4|0;if((c[Ua>>2]|0)==0)Qa=Ua;else break}Wa=(c[q>>2]|0)-Ta|0;c[q>>2]=Wa}while((Wa|0)>0)}else Ra=Na;g:do if((Wa|0)<0){Ta=((Pa+25|0)/9|0)+1|0;if((Sa|0)==102){Va=Na;Ua=Na+(Ta<<2)|0;while(1){Wa=0-Wa|0;Wa=(Wa|0)>9?9:Wa;do if(Ra>>>0<Qa>>>0){_a=(1<<Wa)+ -1|0;$a=1e9>>>Wa;Xa=0;Za=Ra;do{bb=c[Za>>2]|0;c[Za>>2]=(bb>>>Wa)+Xa;Xa=da(bb&_a,$a)|0;Za=Za+4|0}while(Za>>>0<Qa>>>0);Ra=(c[Ra>>2]|0)==0?Ra+4|0:Ra;if((Xa|0)==0)break;c[Qa>>2]=Xa;Qa=Qa+4|0}else Ra=(c[Ra>>2]|0)==0?Ra+4|0:Ra;while(0);Qa=(Qa-Va>>2|0)>(Ta|0)?Ua:Qa;Wa=(c[q>>2]|0)+Wa|0;c[q>>2]=Wa;if((Wa|0)>=0)break g}}do{Ua=0-Wa|0;Ua=(Ua|0)>9?9:Ua;do if(Ra>>>0<Qa>>>0){Za=(1<<Ua)+ -1|0;Xa=1e9>>>Ua;Va=0;Wa=Ra;do{bb=c[Wa>>2]|0;c[Wa>>2]=(bb>>>Ua)+Va;Va=da(bb&Za,Xa)|0;Wa=Wa+4|0}while(Wa>>>0<Qa>>>0);Ra=(c[Ra>>2]|0)==0?Ra+4|0:Ra;if((Va|0)==0)break;c[Qa>>2]=Va;Qa=Qa+4|0}else Ra=(c[Ra>>2]|0)==0?Ra+4|0:Ra;while(0);if((Qa-Ra>>2|0)>(Ta|0))Qa=Ra+(Ta<<2)|0;Wa=(c[q>>2]|0)+Ua|0;c[q>>2]=Wa}while((Wa|0)<0)}while(0);Ta=Na;do if(Ra>>>0<Qa>>>0){Ua=(Ta-Ra>>2)*9|0;Va=c[Ra>>2]|0;if(Va>>>0<10)break;else Wa=10;do{Wa=Wa*10|0;Ua=Ua+1|0}while(!(Va>>>0<Wa>>>0))}else Ua=0;while(0);Va=(Sa|0)==103;Sa=Pa-((Sa|0)!=102?Ua:0)+((Va&(Pa|0)!=0)<<31>>31)|0;if((Sa|0)<(((Qa-Ta>>2)*9|0)+ -9|0)){Za=Sa+9216|0;Xa=(Za|0)/9|0;Sa=Na+(Xa+ -1023<<2)|0;Za=((Za|0)%9|0)+1|0;if((Za|0)<9){Wa=10;do{Wa=Wa*10|0;Za=Za+1|0}while((Za|0)!=9)}else Wa=10;Za=c[Sa>>2]|0;_a=(Za>>>0)%(Wa>>>0)|0;if((_a|0)==0?(Na+(Xa+ -1022<<2)|0)==(Qa|0):0){xa=Ra;ya=Sa;Aa=Ua}else Ha=233;do if((Ha|0)==233){Ha=0;Ya=(((Za>>>0)/(Wa>>>0)|0)&1|0)==0?9007199254740992.0:9007199254740994.0;xa=(Wa|0)/2|0;do if(_a>>>0<xa>>>0)ab=.5;else{if((_a|0)==(xa|0)?(Na+(Xa+ -1022<<2)|0)==(Qa|0):0){ab=1.0;break}ab=1.5}while(0);do if((f|0)!=0){if((a[Ma>>0]|0)!=45)break;Ya=Ya*-1.0;ab=ab*-1.0}while(0);xa=Za-_a|0;c[Sa>>2]=xa;if(!(Ya+ab!=Ya)){xa=Ra;ya=Sa;Aa=Ua;break}bb=xa+Wa|0;c[Sa>>2]=bb;if(bb>>>0>999999999){xa=Ra;while(1){ya=Sa+ -4|0;c[Sa>>2]=0;if(ya>>>0<xa>>>0){xa=xa+ -4|0;c[xa>>2]=0}bb=(c[ya>>2]|0)+1|0;c[ya>>2]=bb;if(bb>>>0>999999999)Sa=ya;else break}}else{xa=Ra;ya=Sa}Aa=(Ta-xa>>2)*9|0;Ra=c[xa>>2]|0;if(Ra>>>0<10)break;else Sa=10;do{Sa=Sa*10|0;Aa=Aa+1|0}while(!(Ra>>>0<Sa>>>0))}while(0);bb=ya+4|0;Ra=xa;Sa=Aa;Qa=Qa>>>0>bb>>>0?bb:Qa}else Sa=Ua;Xa=0-Sa|0;while(1){if(!(Qa>>>0>Ra>>>0)){Ua=0;break}Ua=Qa+ -4|0;if((c[Ua>>2]|0)==0)Qa=Ua;else{Ua=1;break}}do if(Va){Pa=((Pa|0)==0&1)+Pa|0;if((Pa|0)>(Sa|0)&(Sa|0)>-5){Pa=Pa+ -1-Sa|0;Oa=Oa+ -1|0}else{Pa=Pa+ -1|0;Oa=Oa+ -2|0}if((La&8|0)!=0)break;do if(Ua){Wa=c[Qa+ -4>>2]|0;if((Wa|0)==0){Za=9;break}if(((Wa>>>0)%10|0|0)==0){Va=10;Za=0}else{Za=0;break}do{Va=Va*10|0;Za=Za+1|0}while(((Wa>>>0)%(Va>>>0)|0|0)==0)}else Za=9;while(0);Ta=((Qa-Ta>>2)*9|0)+ -9|0;if((Oa|32|0)==102){bb=Ta-Za|0;bb=(bb|0)<0?0:bb;Pa=(Pa|0)<(bb|0)?Pa:bb;break}else{bb=Ta+Sa-Za|0;bb=(bb|0)<0?0:bb;Pa=(Pa|0)<(bb|0)?Pa:bb;break}}while(0);Va=(Pa|0)!=0;if(Va)Ta=1;else Ta=(La&8|0)!=0;Ta=Ta&1;Wa=(Oa|32|0)==102;if(Wa){Xa=0;Oa=(Sa|0)>0?Sa:0}else{_a=(Sa|0)<0?Xa:Sa;if((_a|0)<0){Xa=_a;_a=((_a|0)<0)<<31>>31;Za=s;while(1){bb=Az(Xa|0,_a|0,10,0)|0;Za=Za+ -1|0;a[Za>>0]=bb|48;bb=Xa;Xa=zz(Xa|0,_a|0,10,0)|0;if(!(_a>>>0>9|(_a|0)==9&bb>>>0>4294967295))break;else _a=H}}else{Za=s;Xa=_a}if((Xa|0)!=0)while(1){Za=Za+ -1|0;a[Za>>0]=(Xa>>>0)%10|0|48;if(Xa>>>0<10)break;else Xa=(Xa>>>0)/10|0}if((z-Za|0)<2)do{Za=Za+ -1|0;a[Za>>0]=48}while((z-Za|0)<2);a[Za+ -1>>0]=(Sa>>31&2)+43;bb=Za+ -2|0;a[bb>>0]=Oa;Xa=bb;Oa=z-bb|0}Ta=f+1+Pa+Ta+Oa|0;Oa=La&73728;Sa=(Ta|0)<(Ka|0);if((Oa|0)==0&Sa){Za=Ka-Ta|0;lz(r|0,32,(Za>>>0>256?256:Za)|0)|0;if(Za>>>0>255)do{_y(r,256,e)|0;Za=Za+ -256|0}while(Za>>>0>255);_y(r,Za,e)|0}_y(Ma,f,e)|0;if((Oa|0)==65536&Sa){Ma=Ka-Ta|0;lz(r|0,48,(Ma>>>0>256?256:Ma)|0)|0;if(Ma>>>0>255)do{_y(r,256,e)|0;Ma=Ma+ -256|0}while(Ma>>>0>255);_y(r,Ma,e)|0}do if(Wa){f=Ra>>>0>Na>>>0?Na:Ra;Ma=f;do{Ra=c[Ma>>2]|0;if((Ra|0)==0)Ua=C;else{Ua=C;while(1){Ua=Ua+ -1|0;a[Ua>>0]=(Ra>>>0)%10|0|48;if(Ra>>>0<10)break;else Ra=(Ra>>>0)/10|0}}do if((Ma|0)==(f|0)){if((Ua|0)!=(C|0))break;a[E>>0]=48;Ua=E}else{if(!(Ua>>>0>u>>>0))break;do{Ua=Ua+ -1|0;a[Ua>>0]=48}while(Ua>>>0>u>>>0)}while(0);_y(Ua,D-Ua|0,e)|0;Ma=Ma+4|0}while(!(Ma>>>0>Na>>>0));if(!Va?(La&8|0)==0:0)break;_y(274152,1,e)|0;if(Ma>>>0<Qa>>>0&(Pa|0)>0)do{Na=c[Ma>>2]|0;if((Na|0)!=0){La=C;while(1){La=La+ -1|0;a[La>>0]=(Na>>>0)%10|0|48;if(Na>>>0<10)break;else Na=(Na>>>0)/10|0}if(La>>>0>u>>>0){_=La;Ha=300}else ja=La}else{_=C;Ha=300}if((Ha|0)==300)while(1){Ha=0;ja=_+ -1|0;a[ja>>0]=48;if(ja>>>0>u>>>0)_=ja;else break}_y(ja,(Pa|0)>9?9:Pa,e)|0;Ma=Ma+4|0;Pa=Pa+ -9|0}while(Ma>>>0<Qa>>>0&(Pa|0)>0);if((Pa|0)<=0)break;lz(r|0,48,(Pa>>>0>256?256:Pa)|0)|0;if(Pa>>>0>255)do{_y(r,256,e)|0;Pa=Pa+ -256|0}while(Pa>>>0>255);_y(r,Pa,e)|0}else{Ma=Ua?Qa:Ra+4|0;do if((Pa|0)>-1){La=(La&8|0)!=0;Na=Ra;do{Qa=c[Na>>2]|0;if((Qa|0)!=0){f=C;while(1){f=f+ -1|0;a[f>>0]=(Qa>>>0)%10|0|48;if(Qa>>>0<10)break;else Qa=(Qa>>>0)/10|0}if((f|0)!=(C|0))$=f;else Ha=311}else Ha=311;if((Ha|0)==311){Ha=0;a[E>>0]=48;$=E}do if((Na|0)==(Ra|0)){f=$+1|0;_y($,1,e)|0;if(!((Pa|0)>0|La))break;_y(274152,1,e)|0}else{if($>>>0>u>>>0)f=$;else{f=$;break}do{f=f+ -1|0;a[f>>0]=48}while(f>>>0>u>>>0)}while(0);bb=D-f|0;_y(f,(bb|0)<(Pa|0)?bb:Pa,e)|0;Pa=Pa-bb|0;Na=Na+4|0}while(Na>>>0<Ma>>>0&(Pa|0)>-1);if((Pa|0)<=0)break;lz(r|0,48,(Pa>>>0>256?256:Pa)|0)|0;if(Pa>>>0>255)do{_y(r,256,e)|0;Pa=Pa+ -256|0}while(Pa>>>0>255);_y(r,Pa,e)|0}while(0);_y(Xa,z-Xa|0,e)|0}while(0);if((Oa|0)==8192&Sa){La=Ka-Ta|0;lz(r|0,32,(La>>>0>256?256:La)|0)|0;if(La>>>0>255)do{_y(r,256,e)|0;La=La+ -256|0}while(La>>>0>255);_y(r,La,e)|0}Oa=T;La=U;f=Ja;Pa=Sa?Ka:Ta;Ma=Ia;continue a};default:{la=T;ia=f;ka=U;na=La;ra=Na;qa=0;pa=274056;sa=N}}while(0);h:do if((Ha|0)==77){Ca=T;za=aa&32;if(!((Ca|0)==0&(U|0)==0)){Ba=U;Da=N;do{Da=Da+ -1|0;a[Da>>0]=d[274136+(Ca&15)>>0]|za;Ca=oz(Ca|0,Ba|0,4)|0;Ba=H}while(!((Ca|0)==0&(Ba|0)==0));if((ba&8|0)==0){za=T;Fa=U;Ca=ba;Ea=ca;Ba=0;Ga=274056;Ha=94}else{za=T;Fa=U;Ca=ba;Ea=ca;Ba=2;Ga=274056+(aa>>4)|0;Ha=94}}else{za=T;Da=N;Fa=U;Ca=ba;Ea=ca;Ba=0;Ga=274056;Ha=94}}else if((Ha|0)==89){za=ea;if(fa>>>0>0|(fa|0)==0&za>>>0>4294967295){Ba=fa;Da=N;while(1){bb=Az(za|0,Ba|0,10,0)|0;Da=Da+ -1|0;a[Da>>0]=bb|48;bb=za;za=zz(za|0,Ba|0,10,0)|0;if(!(Ba>>>0>9|(Ba|0)==9&bb>>>0>4294967295))break;else Ba=H}}else Da=N;if((za|0)==0){za=ea;Fa=fa;Ca=La;Ea=Na;Ba=ga;Ga=ha;Ha=94}else while(1){Da=Da+ -1|0;a[Da>>0]=(za>>>0)%10|0|48;if(za>>>0<10){za=ea;Fa=fa;Ca=La;Ea=Na;Ba=ga;Ga=ha;Ha=94;break}else za=(za>>>0)/10|0}}else if((Ha|0)==99){Ha=0;sa=hz(Z,0,Na)|0;if((sa|0)==0){la=T;ia=Z;ka=U;na=Qa;ra=Na;qa=0;pa=274056;sa=Z+Na|0;break}else{la=T;ia=Z;ka=U;na=Qa;ra=sa-Z|0;qa=0;pa=274056;break}}else if((Ha|0)==104){wa=0;va=0;ua=Y;while(1){Ha=c[ua>>2]|0;if((Ha|0)==0)break;va=Uy(F,Ha)|0;if(!((va|0)>-1)){m=-1;Ha=362;break a}Ha=va+wa|0;if(va>>>0>(X-wa|0)>>>0){ua=Y;va=W;Ha=110;break h}if(Ha>>>0<X>>>0){wa=Ha;ua=ua+4|0}else{wa=Ha;break}}if((va|0)<0){m=-1;Ha=362;break a}else{ua=Y;va=W;Ha=110}}while(0);if((Ha|0)==94){Ha=0;na=(Ea|0)>-1?Ca&-65537:Ca;ia=(za|0)==0&(Fa|0)==0;if(ia&(Ea|0)==0){la=za;ia=N;ka=Fa;ra=0;qa=Ba;pa=Ga;sa=N}else{ra=(ia&1)+(G-Da)|0;la=za;ia=Da;ka=Fa;ra=(Ea|0)>(ra|0)?Ea:ra;qa=Ba;pa=Ga;sa=N}}else if((Ha|0)==110){Ha=0;La=La&73728;Ma=(wa|0)<(Ka|0);if((La|0)==0&Ma){Na=Ka-wa|0;lz(r|0,32,(Na>>>0>256?256:Na)|0)|0;if(Na>>>0>255)do{_y(r,256,e)|0;Na=Na+ -256|0}while(Na>>>0>255);_y(r,Na,e)|0}i:do if((wa|0)!=0){f=0;Na=ua;while(1){Oa=c[Na>>2]|0;if((Oa|0)==0)break i;Oa=Uy(F,Oa)|0;f=Oa+f|0;if((f|0)>(wa|0))break i;_y(F,Oa,e)|0;if(!(f>>>0<wa>>>0))break;else Na=Na+4|0}}while(0);if((La|0)==8192&Ma){La=Ka-wa|0;lz(r|0,32,(La>>>0>256?256:La)|0)|0;if(La>>>0>255)do{_y(r,256,e)|0;La=La+ -256|0}while(La>>>0>255);_y(r,La,e)|0}Oa=va;La=U;f=Ja;Pa=Ma?Ka:wa;Ma=Ia;continue}Ma=sa-ia|0;f=(ra|0)<(Ma|0)?Ma:ra;La=qa+f|0;Pa=(Ka|0)<(La|0)?La:Ka;Ka=na&73728;Na=(La|0)<(Pa|0);if((Ka|0)==0&Na){Oa=Pa-La|0;lz(r|0,32,(Oa>>>0>256?256:Oa)|0)|0;if(Oa>>>0>255)do{_y(r,256,e)|0;Oa=Oa+ -256|0}while(Oa>>>0>255);_y(r,Oa,e)|0}_y(pa,qa,e)|0;if((Ka|0)==65536&Na){Oa=Pa-La|0;lz(r|0,48,(Oa>>>0>256?256:Oa)|0)|0;if(Oa>>>0>255)do{_y(r,256,e)|0;Oa=Oa+ -256|0}while(Oa>>>0>255);_y(r,Oa,e)|0}if((Ma|0)<(f|0)){f=f-Ma|0;lz(r|0,48,(f>>>0>256?256:f)|0)|0;if(f>>>0>255)do{_y(r,256,e)|0;f=f+ -256|0}while(f>>>0>255);_y(r,f,e)|0}_y(ia,Ma,e)|0;if(!((Ka|0)==8192&Na)){Oa=la;La=ka;f=Ja;Ma=Ia;continue}Ka=Pa-La|0;lz(r|0,32,(Ka>>>0>256?256:Ka)|0)|0;if(Ka>>>0>255)do{_y(r,256,e)|0;Ka=Ka+ -256|0}while(Ka>>>0>255);_y(r,Ka,e)|0;Oa=la;La=ka;f=Ja;Ma=Ia}if((Ha|0)==344){if((e|0)!=0){bb=ta;i=o;return bb|0}if((Ma|0)==0){bb=0;i=o;return bb|0}else p=1;while(1){q=c[l+(p<<2)>>2]|0;if((q|0)==0){n=p;break}r=j+(p<<3)|0;j:do if(!(q>>>0>20))do switch(q|0){case 9:{$a=c[g>>2]|0;bb=c[$a>>2]|0;c[g>>2]=$a+4;c[r>>2]=bb;break j};case 10:{bb=c[g>>2]|0;$a=c[bb>>2]|0;c[g>>2]=bb+4;bb=r;c[bb>>2]=$a;c[bb+4>>2]=(($a|0)<0)<<31>>31;break j};case 11:{bb=c[g>>2]|0;$a=c[bb>>2]|0;c[g>>2]=bb+4;bb=r;c[bb>>2]=$a;c[bb+4>>2]=0;break j};case 12:{bb=c[g>>2]|0;$a=bb;_a=c[$a>>2]|0;$a=c[$a+4>>2]|0;c[g>>2]=bb+8;bb=r;c[bb>>2]=_a;c[bb+4>>2]=$a;break j};case 15:{bb=c[g>>2]|0;$a=c[bb>>2]|0;c[g>>2]=bb+4;$a=($a&255)<<24>>24;bb=r;c[bb>>2]=$a;c[bb+4>>2]=(($a|0)<0)<<31>>31;break j};case 18:{bb=c[g>>2]|0;c[k>>2]=c[bb>>2];c[k+4>>2]=c[bb+4>>2];ab=+h[k>>3];c[g>>2]=bb+8;h[r>>3]=ab;break j};case 17:{bb=c[g>>2]|0;c[k>>2]=c[bb>>2];c[k+4>>2]=c[bb+4>>2];ab=+h[k>>3];c[g>>2]=bb+8;h[r>>3]=ab;break j};case 14:{bb=c[g>>2]|0;$a=c[bb>>2]|0;c[g>>2]=bb+4;bb=r;c[bb>>2]=$a&65535;c[bb+4>>2]=0;break j};case 13:{bb=c[g>>2]|0;$a=c[bb>>2]|0;c[g>>2]=bb+4;$a=($a&65535)<<16>>16;bb=r;c[bb>>2]=$a;c[bb+4>>2]=(($a|0)<0)<<31>>31;break j};case 16:{bb=c[g>>2]|0;$a=c[bb>>2]|0;c[g>>2]=bb+4;bb=r;c[bb>>2]=$a&255;c[bb+4>>2]=0;break j};default:break j}while(0);while(0);p=p+1|0;if((p|0)>=10){m=1;Ha=362;break}}if((Ha|0)==362){i=o;return m|0}while(1){if((c[l+(n<<2)>>2]|0)!=0){m=-1;Ha=362;break}n=n+1|0;if((n|0)>=10){m=1;Ha=362;break}}if((Ha|0)==362){i=o;return m|0}}else if((Ha|0)==362){i=o;return m|0}return 0}function cz(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+128|0;j=g+112|0;h=g;k=h+0|0;m=274160|0;l=k+112|0;do{c[k>>2]=c[m>>2];k=k+4|0;m=m+4|0}while((k|0)<(l|0));if((d+ -1|0)>>>0>2147483646)if((d|0)==0){d=1;b=j}else{c[(vb()|0)>>2]=75;m=-1;i=g;return m|0}m=-2-b|0;m=d>>>0>m>>>0?m:d;c[h+48>>2]=m;j=h+20|0;c[j>>2]=b;c[h+44>>2]=b;d=b+m|0;b=h+16|0;c[b>>2]=d;c[h+28>>2]=d;h=az(h,e,f)|0;if((m|0)==0){m=h;i=g;return m|0}m=c[j>>2]|0;a[m+(((m|0)==(c[b>>2]|0))<<31>>31)>>0]=0;m=h;i=g;return m|0}function dz(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;f=a+20|0;g=c[f>>2]|0;a=(c[a+16>>2]|0)-g|0;a=a>>>0>d>>>0?d:a;qz(g|0,b|0,a|0)|0;c[f>>2]=(c[f>>2]|0)+a;i=e;return d|0}function ez(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,g=0,h=0;d=i;i=i+112|0;e=d;h=e+0|0;g=h+112|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(g|0));g=e+4|0;c[g>>2]=a;h=e+8|0;c[h>>2]=-1;c[e+44>>2]=a;c[e+76>>2]=-1;Oy(e,0);f=+My(e,2,1);e=(c[g>>2]|0)-(c[h>>2]|0)+(c[e+108>>2]|0)|0;if((b|0)==0){i=d;return+f}if((e|0)!=0)a=a+e|0;c[b>>2]=a;i=d;return+f}function fz(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+112|0;g=e;c[g>>2]=0;f=g+4|0;c[f>>2]=a;c[g+44>>2]=a;if((a|0)<0)c[g+8>>2]=-1;else c[g+8>>2]=a+2147483647;c[g+76>>2]=-1;Oy(g,0);d=Ly(g,d,1,-1,-1)|0;h=H;if((b|0)==0){H=h;i=e;return d|0}c[b>>2]=a+((c[f>>2]|0)+(c[g+108>>2]|0)-(c[g+8>>2]|0));H=h;i=e;return d|0}function gz(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+112|0;g=e;c[g>>2]=0;f=g+4|0;c[f>>2]=a;c[g+44>>2]=a;if((a|0)<0)c[g+8>>2]=-1;else c[g+8>>2]=a+2147483647;c[g+76>>2]=-1;Oy(g,0);d=Ly(g,d,1,0,-2147483648)|0;h=H;if((b|0)==0){H=h;i=e;return d|0}c[b>>2]=a+((c[f>>2]|0)+(c[g+108>>2]|0)-(c[g+8>>2]|0));H=h;i=e;return d|0}function hz(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;g=d&255;j=(e|0)==0;a:do if((b&3|0)==0|j){h=e;e=5}else{h=d&255;while(1){if((a[b>>0]|0)==h<<24>>24){h=e;e=6;break a}b=b+1|0;j=e+ -1|0;e=(j|0)==0;if((b&3|0)==0|e){h=j;j=e;e=5;break}else e=j}}while(0);if((e|0)==5)if(j)h=0;else e=6;b:do if((e|0)==6){d=d&255;if(!((a[b>>0]|0)==d<<24>>24)){g=da(g,16843009)|0;c:do if(h>>>0>3)do{j=c[b>>2]^g;if(((j&-2139062144^-2139062144)&j+ -16843009|0)!=0)break c;b=b+4|0;h=h+ -4|0}while(h>>>0>3);while(0);if((h|0)==0)h=0;else while(1){if((a[b>>0]|0)==d<<24>>24)break b;b=b+1|0;h=h+ -1|0;if((h|0)==0){h=0;break}}}}while(0);i=f;return((h|0)!=0?b:0)|0}function iz(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;f=i;if((d|0)==0){h=0;i=f;return h|0}while(1){g=a[b>>0]|0;h=a[c>>0]|0;if(!(g<<24>>24==h<<24>>24))break;d=d+ -1|0;if((d|0)==0){b=0;e=5;break}else{b=b+1|0;c=c+1|0}}if((e|0)==5){i=f;return b|0}h=(g&255)-(h&255)|0;i=f;return h|0}function jz(){}function kz(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;b=b-d-(c>>>0>a>>>0|0)>>>0;return(H=b,a-c>>>0|0)|0}function lz(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b+e|0;if((e|0)>=20){d=d&255;i=b&3;h=d|d<<8|d<<16|d<<24;g=f&~3;if(i){i=b+4-i|0;while((b|0)<(i|0)){a[b>>0]=d;b=b+1|0}}while((b|0)<(g|0)){c[b>>2]=h;b=b+4|0}}while((b|0)<(f|0)){a[b>>0]=d;b=b+1|0}return b-e|0}function mz(b){b=b|0;var c=0;c=b;while(a[c>>0]|0)c=c+1|0;return c-b|0}function nz(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;c=a+c>>>0;return(H=b+d+(c>>>0<a>>>0|0)>>>0,c|0)|0}function oz(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){H=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}H=0;return b>>>c-32|0}function pz(b){b=b|0;var c=0;c=a[n+(b>>>24)>>0]|0;if((c|0)<8)return c|0;c=a[n+(b>>16&255)>>0]|0;if((c|0)<8)return c+8|0;c=a[n+(b>>8&255)>>0]|0;if((c|0)<8)return c+16|0;return(a[n+(b&255)>>0]|0)+24|0}function qz(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((e|0)>=4096)return cb(b|0,d|0,e|0)|0;f=b|0;if((b&3)==(d&3)){while(b&3){if((e|0)==0)return f|0;a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function rz(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){H=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}H=a<<c-32;return 0}function sz(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if((c|0)<(b|0)&(b|0)<(c+d|0)){e=b;c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b>>0]=a[c>>0]|0}b=e}else qz(b,c,d)|0;return b|0}function tz(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){H=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}H=(b|0)<0?-1:0;return b>>c-32|0}function uz(b){b=b|0;var c=0;c=a[m+(b&255)>>0]|0;if((c|0)<8)return c|0;c=a[m+(b>>8&255)>>0]|0;if((c|0)<8)return c+8|0;c=a[m+(b>>16&255)>>0]|0;if((c|0)<8)return c+16|0;return(a[m+(b>>>24)>>0]|0)+24|0}function vz(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;f=a&65535;d=b&65535;c=da(d,f)|0;e=a>>>16;d=(c>>>16)+(da(d,e)|0)|0;b=b>>>16;a=da(b,f)|0;return(H=(d>>>16)+(da(b,e)|0)+(((d&65535)+a|0)>>>16)|0,d+a<<16|c&65535|0)|0}function wz(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;j=b>>31|((b|0)<0?-1:0)<<1;i=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;f=d>>31|((d|0)<0?-1:0)<<1;e=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;h=kz(j^a,i^b,j,i)|0;g=H;b=f^j;a=e^i;a=kz((Bz(h,g,kz(f^c,e^d,f,e)|0,H,0)|0)^b,H^a,b,a)|0;return a|0}function xz(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+8|0;j=f|0;h=b>>31|((b|0)<0?-1:0)<<1;g=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;l=e>>31|((e|0)<0?-1:0)<<1;k=((e|0)<0?-1:0)>>31|((e|0)<0?-1:0)<<1;b=kz(h^a,g^b,h,g)|0;a=H;Bz(b,a,kz(l^d,k^e,l,k)|0,H,j)|0;a=kz(c[j>>2]^h,c[j+4>>2]^g,h,g)|0;b=H;i=f;return(H=b,a)|0}function yz(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;f=c;a=vz(e,f)|0;c=H;return(H=(da(b,f)|0)+(da(d,e)|0)+c|c&0,a|0|0)|0}function zz(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=Bz(a,b,c,d,0)|0;return a|0}function Az(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;g=i;i=i+8|0;f=g|0;Bz(a,b,d,e,f)|0;i=g;return(H=c[f+4>>2]|0,c[f>>2]|0)|0}function Bz(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=a;j=b;i=j;l=d;g=e;k=g;if((i|0)==0){g=(f|0)!=0;if((k|0)==0){if(g){c[f>>2]=(h>>>0)%(l>>>0);c[f+4>>2]=0}k=0;m=(h>>>0)/(l>>>0)>>>0;return(H=k,m)|0}else{if(!g){l=0;m=0;return(H=l,m)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;l=0;m=0;return(H=l,m)|0}}m=(k|0)==0;do if((l|0)!=0){if(!m){k=(pz(k|0)|0)-(pz(i|0)|0)|0;if(k>>>0<=31){m=k+1|0;l=31-k|0;a=k-31>>31;j=m;b=h>>>(m>>>0)&a|i<<l;a=i>>>(m>>>0)&a;k=0;l=h<<l;break}if((f|0)==0){l=0;m=0;return(H=l,m)|0}c[f>>2]=a|0;c[f+4>>2]=j|b&0;l=0;m=0;return(H=l,m)|0}k=l-1|0;if((k&l|0)!=0){l=(pz(l|0)|0)+33-(pz(i|0)|0)|0;p=64-l|0;m=32-l|0;n=m>>31;o=l-32|0;a=o>>31;j=l;b=m-1>>31&i>>>(o>>>0)|(i<<m|h>>>(l>>>0))&a;a=a&i>>>(l>>>0);k=h<<p&n;l=(i<<p|h>>>(o>>>0))&n|h<<m&l-33>>31;break}if((f|0)!=0){c[f>>2]=k&h;c[f+4>>2]=0}if((l|0)==1){o=j|b&0;p=a|0|0;return(H=o,p)|0}else{p=uz(l|0)|0;o=i>>>(p>>>0)|0;p=i<<32-p|h>>>(p>>>0)|0;return(H=o,p)|0}}else{if(m){if((f|0)!=0){c[f>>2]=(i>>>0)%(l>>>0);c[f+4>>2]=0}o=0;p=(i>>>0)/(l>>>0)>>>0;return(H=o,p)|0}if((h|0)==0){if((f|0)!=0){c[f>>2]=0;c[f+4>>2]=(i>>>0)%(k>>>0)}o=0;p=(i>>>0)/(k>>>0)>>>0;return(H=o,p)|0}l=k-1|0;if((l&k|0)==0){if((f|0)!=0){c[f>>2]=a|0;c[f+4>>2]=l&i|b&0}o=0;p=i>>>((uz(k|0)|0)>>>0);return(H=o,p)|0}k=(pz(k|0)|0)-(pz(i|0)|0)|0;if(k>>>0<=30){a=k+1|0;l=31-k|0;j=a;b=i<<l|h>>>(a>>>0);a=i>>>(a>>>0);k=0;l=h<<l;break}if((f|0)==0){o=0;p=0;return(H=o,p)|0}c[f>>2]=a|0;c[f+4>>2]=j|b&0;o=0;p=0;return(H=o,p)|0}while(0);if((j|0)==0){g=l;e=0;i=0}else{h=d|0|0;g=g|e&0;e=nz(h,g,-1,-1)|0;d=H;i=0;do{m=l;l=k>>>31|l<<1;k=i|k<<1;m=b<<1|m>>>31|0;n=b>>>31|a<<1|0;kz(e,d,m,n)|0;p=H;o=p>>31|((p|0)<0?-1:0)<<1;i=o&1;b=kz(m,n,o&h,(((p|0)<0?-1:0)>>31|((p|0)<0?-1:0)<<1)&g)|0;a=H;j=j-1|0}while((j|0)!=0);g=l;e=0}h=0;if((f|0)!=0){c[f>>2]=b;c[f+4>>2]=a}o=(k|0)>>>31|(g|h)<<1|(h<<1|k>>>31)&0|e;p=(k<<1|0>>>31)&-2|i;return(H=o,p)|0}function Cz(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Sb[a&31](b|0,c|0,d|0)|0}function Dz(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;Tb[a&63](b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function Ez(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;Ub[a&3](b|0,c|0,d|0,e|0,f|0)}function Fz(a,b){a=a|0;b=b|0;Vb[a&127](b|0)}function Gz(a,b,c){a=a|0;b=b|0;c=c|0;Wb[a&63](b|0,c|0)}function Hz(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;Xb[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0)}function Iz(a,b){a=a|0;b=b|0;return Yb[a&63](b|0)|0}function Jz(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=+h;Zb[a&3](b|0,c|0,d|0,e|0,f|0,g|0,+h)}function Kz(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;_b[a&3](b|0,c|0,d|0)}function Lz(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;$b[a&7](b|0,c|0,d|0,e|0,f|0,+g)}function Mz(a){a=a|0;ac[a&3]()}function Nz(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return bc[a&15](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)|0}function Oz(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return cc[a&7](b|0,c|0,d|0,e|0)|0}function Pz(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;dc[a&7](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function Qz(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ec[a&15](b|0,c|0,d|0,e|0,f|0,g|0)}function Rz(a,b,c){a=a|0;b=b|0;c=c|0;return fc[a&15](b|0,c|0)|0}function Sz(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return gc[a&15](b|0,c|0,d|0,e|0,f|0)|0}function Tz(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;hc[a&7](b|0,c|0,d|0,e|0)}function Uz(a,b,c){a=a|0;b=b|0;c=c|0;ea(0);return 0}function Vz(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ea(1)}function Wz(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ea(2)}function Xz(a){a=a|0;ea(3)}function Yz(a,b){a=a|0;b=b|0;ea(4)}function Zz(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;ea(5)}function _z(a){a=a|0;ea(6);return 0}function $z(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;ea(7)}function aA(a,b,c){a=a|0;b=b|0;c=c|0;ea(8)}function bA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;ea(9)}function cA(){ea(10)}function dA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;ea(11);return 0}function eA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ea(12);return 0}function fA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;ea(13)}function gA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ea(14)}function hA(a,b){a=a|0;b=b|0;ea(15);return 0}function iA(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ea(16);return 0}function jA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ea(17)}




// EMSCRIPTEN_END_FUNCS
var Sb=[Uz,Go,Lo,Mm,Po,qo,vo,$m,zo,un,vn,Ap,Fp,Qt,Vt,lv,nv,qv,Uu,$u,cv,fv,ky,dz,ad,cd,wx,Uz,Uz,Uz,Uz,Uz];var Tb=[Vz,Ip,Kp,Mp,Op,Qp,Sp,Up,Wp,Yp,_p,aq,gq,iq,kq,mq,oq,qq,sq,uq,wq,yq,Aq,Rq,Tq,er,gr,pr,qr,rr,tr,vr,Pr,Qr,Rr,Tr,Vr,Ht,Nt,Vz,Vz,Vz,Vz,Vz,Vz,Vz,Vz,Vz,Vz,Vz,Vz,Vz,Vz,Vz,Vz,Vz,Vz,Vz,Vz,Vz,Vz,Vz,Vz,Vz];var Ub=[Wz,wy,vy,sy];var Vb=[Xz,Im,Jm,Pm,Qm,Xm,Ym,cn,dn,An,zn,mo,lo,Co,Bo,So,Ro,Uo,To,Yo,Xo,_o,Zo,bp,ap,dp,cp,hp,gp,jp,ip,sp,rp,ho,tp,pp,up,wp,vp,Ru,Cp,Bp,Hp,Gp,fq,eq,Jq,Iq,$q,_q,nr,mr,Nr,Mr,ks,js,ps,os,ts,ss,Es,Ds,Ps,Os,_s,Zs,jt,it,vt,ut,Dt,Ct,Jt,It,Pt,Ot,Ut,Tt,Eu,Du,jv,iv,Yt,Bv,gw,fw,iw,hw,xp,Qu,Tu,sv,Jv,Uv,dw,ew,Mx,Lx,Tx,Sx,Wx,Vx,Yx,Zx,cy,by,ey,hy,fy,gy,iy,jy,Gm,lt,Ey,Su,Rw,ex,dx,cx,bx,ax,$w,Kn,Zn,Fx,Xz,Xz];var Wb=[Yz,Km,Rm,Zm,en,po,Fo,ws,xs,ys,zs,Bs,Cs,Hs,Is,Js,Ks,Ms,Ns,Ss,Ts,Us,Vs,Xs,Ys,bt,ct,dt,et,gt,ht,St,Xt,nw,pw,rw,ow,qw,sw,Yz,Yz,Yz,Yz,Yz,Yz,Yz,Yz,Yz,Yz,Yz,Yz,Yz,Yz,Yz,Yz,Yz,Yz,Yz,Yz,Yz,Yz,Yz,Yz,Yz];var Xb=[Zz,xr,Xr,Zz];var Yb=[_z,Lm,Ko,Mo,No,Jo,Sm,Tm,_m,uo,wo,xo,to,fn,gn,Xx,mp,or,uw,ww,yw,Ew,Gw,Aw,Cw,Or,vw,xw,zw,Fw,Hw,Bw,Dw,us,vs,As,Fs,Gs,Ls,Qs,Rs,Ws,$s,at,ft,Fv,Gv,Iv,jw,lw,kw,mw,wv,xv,zv,Pv,Qv,Tv,_v,$v,cw,Nx,Ux,dy];var Zb=[$z,Et,Kt,$z];var _b=[aA,tn,np,aA];var $b=[bA,Uq,Yq,hr,jr,bA,bA,bA];var ac=[cA,Cx,Ex,cA];var bc=[dA,Cv,Dv,tv,uv,Kv,Mv,Vv,Xv,dA,dA,dA,dA,dA,dA,dA];var cc=[eA,pv,Wu,Xu,Yu,ev,eA,eA];var dc=[fA,ms,qs,kt,ot,wt,yt,fA];var ec=[gA,Ho,ro,Kq,Lq,Sq,Zq,ar,br,fr,kr,Rt,Wt,zy,yy,xy];var fc=[hA,Oo,Nm,Um,Qo,yo,an,hn,Ao,kv,mv,ov,Zu,av,dv,Ol];var gc=[iA,yp,Dp,rv,Ev,Hv,gv,vv,yv,Ov,Rv,Zv,aw,iA,iA,iA];var hc=[jA,Io,so,zp,Ep,my,ny,py];return{___cxa_can_catch:Ay,_free:Ey,___cxa_is_pointer_type:By,_i64Add:nz,_memmove:sz,_decode:qc,_realloc:Gy,_i64Subtract:kz,_memset:lz,_malloc:Dy,_encode:ed,_memcpy:qz,_strlen:mz,_llvm_ctlz_i32:pz,_bitshift64Lshr:oz,_calloc:Fy,_bitshift64Shl:rz,__GLOBAL__I_a:kn,runPostSets:jz,stackAlloc:ic,stackSave:jc,stackRestore:kc,setThrew:lc,setTempRet0:oc,getTempRet0:pc,dynCall_iiii:Cz,dynCall_viiiiiii:Dz,dynCall_viiiii:Ez,dynCall_vi:Fz,dynCall_vii:Gz,dynCall_viiiiiiiii:Hz,dynCall_ii:Iz,dynCall_viiiiiid:Jz,dynCall_viii:Kz,dynCall_viiiiid:Lz,dynCall_v:Mz,dynCall_iiiiiiiii:Nz,dynCall_iiiii:Oz,dynCall_viiiiiiii:Pz,dynCall_viiiiii:Qz,dynCall_iii:Rz,dynCall_iiiiii:Sz,dynCall_viiii:Tz}
// EMSCRIPTEN_END_ASM

})({Math:Math,Int8Array:Int8Array,Int16Array:Int16Array,Int32Array:Int32Array,Uint8Array:Uint8Array,Uint16Array:Uint16Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array},{abort:D,assert:x,min:Aa,invoke_iiii:function(a,b,c,d){try{return u.dynCall_iiii(a,b,c,d)}catch(f){"number"!==typeof f&&"longjmp"!==f&&e(f),V.setThrew(1,0)}},invoke_viiiiiii:function(a,b,c,d,f,g,h,i){try{u.dynCall_viiiiiii(a,b,c,d,f,g,h,i)}catch(k){"number"!==typeof k&&
"longjmp"!==k&&e(k),V.setThrew(1,0)}},invoke_viiiii:function(a,b,c,d,f,g){try{u.dynCall_viiiii(a,b,c,d,f,g)}catch(h){"number"!==typeof h&&"longjmp"!==h&&e(h),V.setThrew(1,0)}},invoke_vi:function(a,b){try{u.dynCall_vi(a,b)}catch(c){"number"!==typeof c&&"longjmp"!==c&&e(c),V.setThrew(1,0)}},invoke_vii:function(a,b,c){try{u.dynCall_vii(a,b,c)}catch(d){"number"!==typeof d&&"longjmp"!==d&&e(d),V.setThrew(1,0)}},invoke_viiiiiiiii:function(a,b,c,d,f,g,h,i,k,m){try{u.dynCall_viiiiiiiii(a,b,c,d,f,g,h,i,k,
m)}catch(v){"number"!==typeof v&&"longjmp"!==v&&e(v),V.setThrew(1,0)}},invoke_ii:function(a,b){try{return u.dynCall_ii(a,b)}catch(c){"number"!==typeof c&&"longjmp"!==c&&e(c),V.setThrew(1,0)}},invoke_viiiiiid:function(a,b,c,d,f,g,h,i){try{u.dynCall_viiiiiid(a,b,c,d,f,g,h,i)}catch(k){"number"!==typeof k&&"longjmp"!==k&&e(k),V.setThrew(1,0)}},invoke_viii:function(a,b,c,d){try{u.dynCall_viii(a,b,c,d)}catch(f){"number"!==typeof f&&"longjmp"!==f&&e(f),V.setThrew(1,0)}},invoke_viiiiid:function(a,b,c,d,f,
g,h){try{u.dynCall_viiiiid(a,b,c,d,f,g,h)}catch(i){"number"!==typeof i&&"longjmp"!==i&&e(i),V.setThrew(1,0)}},invoke_v:function(a){try{u.dynCall_v(a)}catch(b){"number"!==typeof b&&"longjmp"!==b&&e(b),V.setThrew(1,0)}},invoke_iiiiiiiii:function(a,b,c,d,f,g,h,i,k){try{return u.dynCall_iiiiiiiii(a,b,c,d,f,g,h,i,k)}catch(m){"number"!==typeof m&&"longjmp"!==m&&e(m),V.setThrew(1,0)}},invoke_iiiii:function(a,b,c,d,f){try{return u.dynCall_iiiii(a,b,c,d,f)}catch(g){"number"!==typeof g&&"longjmp"!==g&&e(g),
V.setThrew(1,0)}},invoke_viiiiiiii:function(a,b,c,d,f,g,h,i,k){try{u.dynCall_viiiiiiii(a,b,c,d,f,g,h,i,k)}catch(m){"number"!==typeof m&&"longjmp"!==m&&e(m),V.setThrew(1,0)}},invoke_viiiiii:function(a,b,c,d,f,g,h){try{u.dynCall_viiiiii(a,b,c,d,f,g,h)}catch(i){"number"!==typeof i&&"longjmp"!==i&&e(i),V.setThrew(1,0)}},invoke_iii:function(a,b,c){try{return u.dynCall_iii(a,b,c)}catch(d){"number"!==typeof d&&"longjmp"!==d&&e(d),V.setThrew(1,0)}},invoke_iiiiii:function(a,b,c,d,f,g){try{return u.dynCall_iiiiii(a,
b,c,d,f,g)}catch(h){"number"!==typeof h&&"longjmp"!==h&&e(h),V.setThrew(1,0)}},invoke_viiii:function(a,b,c,d,f){try{u.dynCall_viiii(a,b,c,d,f)}catch(g){"number"!==typeof g&&"longjmp"!==g&&e(g),V.setThrew(1,0)}},_fabs:Tb,_strftime:Hb,_pthread_cond_wait:ca(0),_copysignl:function(){return oc.apply(p,arguments)},_send:function(a,b,c){return!j.fb(a)?(W(vb),-1):Ib(a,b,c)},_fread:Vb,_log2:function(a){return Math.log(a)/Math.LN2},_fmod:$b,___cxa_guard_acquire:function(a){return!I[a>>0]?I[a>>0]=1:0},_fmodl:function(){return $b.apply(p,
arguments)},_vfprintf:function(a,b,c){return Pb(a,b,J[c>>2])},_ungetc:function(a,b){b=G.T(b);if(!b)return-1;if(-1===a)return a;a=eb(a&255);b.Ta.push(a);b.Ha=r;return a},___assert_fail:function(a,b,c,d){pa=n;e("Assertion failed: "+B(a)+", at: "+[b?B(b):"unknown filename",c,d?B(d):"unknown function"]+" at "+La())},___cxa_free_exception:mc,___cxa_allocate_exception:function(a){return M(a)},___cxa_find_matching_catch:sb,_ceilf:ub,___ctype_toupper_loc:ec,_fflush:aa(),___cxa_guard_release:aa(),__addDays:Gb,
_pwrite:function(a,b,c,d){a=G.ma(a);if(!a)return W(vb),-1;try{return G.write(a,I,b,c,d)}catch(f){return G.na(f),-1}},_strerror_r:Ab,_strftime_l:function(a,b,c,d){return Hb(a,b,c,d)},_fprintf:Pb,__reallyNegative:Mb,_sbrk:ic,_uselocale:function(a){var b=Zb;a&&(Zb=a);return b},_catgets:function(a,b,c,d){return d},_newlocale:function(a,b,c){(a=b)&&(a=B(a));if(!("C"===a||"POSIX"===a||!a))return W(2),0;c||(c=kc(1,4));return c},___cxa_begin_catch:function(a){ob.ta--;qb.push(a);var b=rb(a);b&&U[b].U++;return a},
_emscripten_memcpy_big:function(a,b,c){N.set(N.subarray(b,b+c),a);return a},___cxa_end_catch:nc,___resumeException:function(a){pb||(pb=a);var b=rb(a);b&&(U[b].U=0);e(a+" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.")},__ZSt18uncaught_exceptionv:ob,_sysconf:function(a){switch(a){case 30:return 4096;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 79:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;
case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;
case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1E3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"===typeof navigator?navigator.hardwareConcurrency||1:1}W(wb);return-1},
___setErrNo:W,_pthread_getspecific:function(a){return Sb[a]||0},__arraySum:Db,___ctype_tolower_loc:fc,_fileno:Jb,_pthread_mutex_unlock:aa(),_pthread_once:Qb,_pread:function(a,b,c,d){a=G.ma(a);if(!a)return W(vb),-1;try{return G.pb(a,I,b,c,d)}catch(f){return G.na(f),-1}},_printf:function(a,b){var c=Nb(a,b),d=cb(c);"\n"===d[d.length-1]&&(d=d.substr(0,d.length-1));u.print(d);return c.length},___ctype_b_loc:Yb,_pthread_key_create:function(a){if(0==a)return wb;J[a>>2]=hc;Sb[hc]=0;hc++;return 0},_getc:function(){return Wb.apply(p,
arguments)},_write:Ib,__isLeapYear:Cb,___errno_location:function(){return zb},_recv:function(a,b,c){return!j.fb(a)?(W(vb),-1):Ub(a,b,c)},_pthread_setspecific:function(a,b){if(!(a in Sb))return wb;Sb[a]=b;return 0},_copysign:oc,_fgetc:Wb,_fputc:Rb,___cxa_throw:function(a,b,c){U[a]={Tb:a,Aa:a,type:b,Ea:c,U:0};pb=a;"uncaught_exception"in ob?ob.ta++:ob.ta=1;e(a+" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.")},
_freelocale:function(a){Ka(a)},_pthread_cond_broadcast:ca(0),___cxa_rethrow:function(){nc.Pa=n;var a=qb.pop();pb=a;e(a+" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.")},_abort:function(){u.abort()},_catclose:ca(0),_fwrite:Kb,_time:function(a){var b=Date.now()/1E3|0;a&&(J[a>>2]=b);return b},_pthread_mutex_lock:aa(),_strerror:Bb,___cxa_atexit:function(){return mb.apply(p,arguments)},_abs:Xb,
__formatString:Nb,_atexit:mb,_catopen:ca(-1),_read:Ub,STACKTOP:z,STACK_MAX:Qa,tempDoublePtr:T,ABORT:pa,cttz_i8:tc,ctlz_i8:cc,NaN:NaN,Infinity:Infinity,___dso_handle:pc,_stderr:qc,_stdin:rc,_stdout:sc},Q);u.___cxa_can_catch=V.___cxa_can_catch;Ka=u._free=V._free;u.___cxa_is_pointer_type=V.___cxa_is_pointer_type;var ac=u._i64Add=V._i64Add,lc=u._memmove=V._memmove;u._decode=V._decode;u._realloc=V._realloc;var nb=u._i64Subtract=V._i64Subtract,tb=u._memset=V._memset,M=u._malloc=V._malloc;u._encode=V._encode;
var gc=u._memcpy=V._memcpy,Lb=u._strlen=V._strlen,dc=u._llvm_ctlz_i32=V._llvm_ctlz_i32,bc=u._bitshift64Lshr=V._bitshift64Lshr,kc=u._calloc=V._calloc,jc=u._bitshift64Shl=V._bitshift64Shl,lb=u.__GLOBAL__I_a=V.__GLOBAL__I_a;u.runPostSets=V.runPostSets;u.dynCall_iiii=V.dynCall_iiii;u.dynCall_viiiiiii=V.dynCall_viiiiiii;u.dynCall_viiiii=V.dynCall_viiiii;u.dynCall_vi=V.dynCall_vi;u.dynCall_vii=V.dynCall_vii;u.dynCall_viiiiiiiii=V.dynCall_viiiiiiiii;u.dynCall_ii=V.dynCall_ii;u.dynCall_viiiiiid=V.dynCall_viiiiiid;
u.dynCall_viii=V.dynCall_viii;u.dynCall_viiiiid=V.dynCall_viiiiid;u.dynCall_v=V.dynCall_v;u.dynCall_iiiiiiiii=V.dynCall_iiiiiiiii;u.dynCall_iiiii=V.dynCall_iiiii;u.dynCall_viiiiiiii=V.dynCall_viiiiiiii;u.dynCall_viiiiii=V.dynCall_viiiiii;u.dynCall_iii=V.dynCall_iii;u.dynCall_iiiiii=V.dynCall_iiiiii;u.dynCall_viiii=V.dynCall_viiii;A.aa=V.stackAlloc;A.ba=V.stackSave;A.ra=V.stackRestore;A.rb=V.setTempRet0;A.gb=V.getTempRet0;var Ob;
function X(a,b){a!=p&&("number"==typeof a?this.C(a):b==p&&"string"!=typeof a?this.r(a,256):this.r(a,b))}function uc(){return new X(p)}function vc(a,b){var c=wc[a.charCodeAt(b)];return c==p?-1:c}function xc(a){var b=uc();b.J(a);return b}function Y(a,b){this.n=a|0;this.p=b|0}Y.wa={};Y.J=function(a){if(-128<=a&&128>a){var b=Y.wa[a];if(b)return b}b=new Y(a|0,0>a?-1:0);-128<=a&&128>a&&(Y.wa[a]=b);return b};
Y.C=function(a){return isNaN(a)||!isFinite(a)?Y.ZERO:a<=-Y.ya?Y.MIN_VALUE:a+1>=Y.ya?Y.MAX_VALUE:0>a?Y.C(-a).o():new Y(a%Y.H|0,a/Y.H|0)};Y.G=function(a,b){return new Y(a,b)};
Y.r=function(a,b){0==a.length&&e(Error("number format error: empty string"));var c=b||10;(2>c||36<c)&&e(Error("radix out of range: "+c));if("-"==a.charAt(0))return Y.r(a.substring(1),c).o();0<=a.indexOf("-")&&e(Error('number format error: interior "-" character: '+a));for(var d=Y.C(Math.pow(c,8)),f=Y.ZERO,g=0;g<a.length;g+=8){var h=Math.min(8,a.length-g),i=parseInt(a.substring(g,g+h),c);8>h?(h=Y.C(Math.pow(c,h)),f=f.multiply(h).add(Y.C(i))):(f=f.multiply(d),f=f.add(Y.C(i)))}return f};Y.fa=65536;
Y.Ab=16777216;Y.H=Y.fa*Y.fa;Y.Bb=Y.H/2;Y.Cb=Y.H*Y.fa;Y.Wa=Y.H*Y.H;Y.ya=Y.Wa/2;Y.ZERO=Y.J(0);Y.ONE=Y.J(1);Y.xa=Y.J(-1);Y.MAX_VALUE=Y.G(-1,2147483647);Y.MIN_VALUE=Y.G(0,-2147483648);Y.Va=Y.J(16777216);t=Y.prototype;t.da=function(){return this.p*Y.H+this.eb()};
t.toString=function(a){a=a||10;(2>a||36<a)&&e(Error("radix out of range: "+a));if(this.M())return"0";if(this.A()){if(this.B(Y.MIN_VALUE)){var b=Y.C(a),c=this.L(b),b=c.multiply(b).V(this);return c.toString(a)+b.n.toString(a)}return"-"+this.o().toString(a)}for(var c=Y.C(Math.pow(a,6)),b=this,d="";;){var f=b.L(c),g=b.V(f.multiply(c)).n.toString(a),b=f;if(b.M())return g+d;for(;6>g.length;)g="0"+g;d=""+g+d}};t.eb=function(){return 0<=this.n?this.n:Y.H+this.n};t.M=function(){return 0==this.p&&0==this.n};
t.A=function(){return 0>this.p};t.Ma=function(){return 1==(this.n&1)};t.B=function(a){return this.p==a.p&&this.n==a.n};t.Oa=function(){return 0>this.ja(Y.Va)};t.hb=function(a){return 0<this.ja(a)};t.ib=function(a){return 0<=this.ja(a)};t.ja=function(a){if(this.B(a))return 0;var b=this.A(),c=a.A();return b&&!c?-1:!b&&c?1:this.V(a).A()?-1:1};t.o=function(){return this.B(Y.MIN_VALUE)?Y.MIN_VALUE:this.lb().add(Y.ONE)};
t.add=function(a){var b=this.p>>>16,c=this.p&65535,d=this.n>>>16,f=a.p>>>16,g=a.p&65535,h=a.n>>>16,i;i=0+((this.n&65535)+(a.n&65535));a=0+(i>>>16);a+=d+h;d=0+(a>>>16);d+=c+g;c=0+(d>>>16);c=c+(b+f)&65535;return Y.G((a&65535)<<16|i&65535,c<<16|d&65535)};t.V=function(a){return this.add(a.o())};
t.multiply=function(a){if(this.M()||a.M())return Y.ZERO;if(this.B(Y.MIN_VALUE))return a.Ma()?Y.MIN_VALUE:Y.ZERO;if(a.B(Y.MIN_VALUE))return this.Ma()?Y.MIN_VALUE:Y.ZERO;if(this.A())return a.A()?this.o().multiply(a.o()):this.o().multiply(a).o();if(a.A())return this.multiply(a.o()).o();if(this.Oa()&&a.Oa())return Y.C(this.da()*a.da());var b=this.p>>>16,c=this.p&65535,d=this.n>>>16,f=this.n&65535,g=a.p>>>16,h=a.p&65535,i=a.n>>>16,a=a.n&65535,k,m,v,q;q=0+f*a;v=0+(q>>>16);v+=d*a;m=0+(v>>>16);v=(v&65535)+
f*i;m+=v>>>16;v&=65535;m+=c*a;k=0+(m>>>16);m=(m&65535)+d*i;k+=m>>>16;m&=65535;m+=f*h;k+=m>>>16;m&=65535;k=k+(b*a+c*i+d*h+f*g)&65535;return Y.G(v<<16|q&65535,k<<16|m)};
t.L=function(a){a.M()&&e(Error("division by zero"));if(this.M())return Y.ZERO;if(this.B(Y.MIN_VALUE)){if(a.B(Y.ONE)||a.B(Y.xa))return Y.MIN_VALUE;if(a.B(Y.MIN_VALUE))return Y.ONE;var b=this.sb().L(a).shiftLeft(1);if(b.B(Y.ZERO))return a.A()?Y.ONE:Y.xa;var c=this.V(a.multiply(b));return b.add(c.L(a))}if(a.B(Y.MIN_VALUE))return Y.ZERO;if(this.A())return a.A()?this.o().L(a.o()):this.o().L(a).o();if(a.A())return this.L(a.o()).o();for(var d=Y.ZERO,c=this;c.ib(a);){for(var b=Math.max(1,Math.floor(c.da()/
a.da())),f=Math.ceil(Math.log(b)/Math.LN2),f=48>=f?1:Math.pow(2,f-48),g=Y.C(b),h=g.multiply(a);h.A()||h.hb(c);)b-=f,g=Y.C(b),h=g.multiply(a);g.M()&&(g=Y.ONE);d=d.add(g);c=c.V(h)}return d};t.lb=function(){return Y.G(~this.n,~this.p)};t.shiftLeft=function(a){a&=63;if(0==a)return this;var b=this.n;return 32>a?Y.G(b<<a,this.p<<a|b>>>32-a):Y.G(0,b<<a-32)};t.sb=function(){var a;a=1;if(0==a)return this;var b=this.p;return 32>a?Y.G(this.n>>>a|b<<32-a,b>>a):Y.G(b>>a-32,0<=b?0:-1)};t=X.prototype;
t.ha=function(a,b,c,d){for(var f=0,g=0;0<=--d;){var h=a*this[f++]+b[c]+g,g=Math.floor(h/67108864);b[c++]=h&67108863}return g};t.k=26;t.F=67108863;t.Q=67108864;t.Ua=Math.pow(2,52);t.ua=26;t.va=0;var wc=[],yc,Z;yc=48;for(Z=0;9>=Z;++Z)wc[yc++]=Z;yc=97;for(Z=10;36>Z;++Z)wc[yc++]=Z;yc=65;for(Z=10;36>Z;++Z)wc[yc++]=Z;t=X.prototype;t.copyTo=function(a){for(var b=this.e-1;0<=b;--b)a[b]=this[b];a.e=this.e;a.g=this.g};t.J=function(a){this.e=1;this.g=0>a?-1:0;0<a?this[0]=a:-1>a?this[0]=a+DV:this.e=0};
t.r=function(a,b){var c;if(16==b)c=4;else if(8==b)c=3;else if(256==b)c=8;else if(2==b)c=1;else if(32==b)c=5;else if(4==b)c=2;else{this.cb(a,b);return}this.g=this.e=0;for(var d=a.length,f=r,g=0;0<=--d;){var h=8==c?a[d]&255:vc(a,d);0>h?"-"==a.charAt(d)&&(f=n):(f=r,0==g?this[this.e++]=h:g+c>this.k?(this[this.e-1]|=(h&(1<<this.k-g)-1)<<g,this[this.e++]=h>>this.k-g):this[this.e-1]|=h<<g,g+=c,g>=this.k&&(g-=this.k))}8==c&&0!=(a[0]&128)&&(this.g=-1,0<g&&(this[this.e-1]|=(1<<this.k-g)-1<<g));this.I();f&&
X.ZERO.D(this,this)};t.I=function(){for(var a=this.g&this.F;0<this.e&&this[this.e-1]==a;)--this.e};t.ka=function(a,b){var c;for(c=this.e-1;0<=c;--c)b[c+a]=this[c];for(c=a-1;0<=c;--c)b[c]=0;b.e=this.e+a;b.g=this.g};t.$a=function(a,b){for(var c=a;c<this.e;++c)b[c-a]=this[c];b.e=Math.max(this.e-a,0);b.g=this.g};
t.Na=function(a,b){var c=a%this.k,d=this.k-c,f=(1<<d)-1,g=Math.floor(a/this.k),h=this.g<<c&this.F,i;for(i=this.e-1;0<=i;--i)b[i+g+1]=this[i]>>d|h,h=(this[i]&f)<<c;for(i=g-1;0<=i;--i)b[i]=0;b[g]=h;b.e=this.e+g+1;b.g=this.g;b.I()};t.ob=function(a,b){b.g=this.g;var c=Math.floor(a/this.k);if(c>=this.e)b.e=0;else{var d=a%this.k,f=this.k-d,g=(1<<d)-1;b[0]=this[c]>>d;for(var h=c+1;h<this.e;++h)b[h-c-1]|=(this[h]&g)<<f,b[h-c]=this[h]>>d;0<d&&(b[this.e-c-1]|=(this.g&g)<<f);b.e=this.e-c;b.I()}};
t.D=function(a,b){for(var c=0,d=0,f=Math.min(a.e,this.e);c<f;)d+=this[c]-a[c],b[c++]=d&this.F,d>>=this.k;if(a.e<this.e){for(d-=a.g;c<this.e;)d+=this[c],b[c++]=d&this.F,d>>=this.k;d+=this.g}else{for(d+=this.g;c<a.e;)d-=a[c],b[c++]=d&this.F,d>>=this.k;d-=a.g}b.g=0>d?-1:0;-1>d?b[c++]=this.Q+d:0<d&&(b[c++]=d);b.e=c;b.I()};t.kb=function(a){var b=$.Sa,c=this.abs(),d=b.abs(),f=c.e;for(a.e=f+d.e;0<=--f;)a[f]=0;for(f=0;f<d.e;++f)a[f+c.e]=c.ha(d[f],a,f,c.e);a.g=0;a.I();this.g!=b.g&&X.ZERO.D(a,a)};
t.Fa=function(a,b,c){var d=a.abs();if(!(0>=d.e)){var f=this.abs();if(f.e<d.e)b!=p&&b.J(0),c!=p&&this.copyTo(c);else{c==p&&(c=uc());var g=uc(),h=this.g,a=a.g,i=d[d.e-1],k=1,m;if(0!=(m=i>>>16))i=m,k+=16;if(0!=(m=i>>8))i=m,k+=8;if(0!=(m=i>>4))i=m,k+=4;if(0!=(m=i>>2))i=m,k+=2;0!=i>>1&&(k+=1);i=this.k-k;0<i?(d.Na(i,g),f.Na(i,c)):(d.copyTo(g),f.copyTo(c));d=g.e;f=g[d-1];if(0!=f){m=f*(1<<this.ua)+(1<d?g[d-2]>>this.va:0);k=this.Ua/m;m=(1<<this.ua)/m;var v=1<<this.va,q=c.e,y=q-d,E=b==p?uc():b;g.ka(y,E);0<=
c.Z(E)&&(c[c.e++]=1,c.D(E,c));X.ONE.ka(d,E);for(E.D(g,g);g.e<d;)g[g.e++]=0;for(;0<=--y;){var F=c[--q]==f?this.F:Math.floor(c[q]*k+(c[q-1]+v)*m);if((c[q]+=g.ha(F,c,y,d))<F){g.ka(y,E);for(c.D(E,c);c[q]<--F;)c.D(E,c)}}b!=p&&(c.$a(d,b),h!=a&&X.ZERO.D(b,b));c.e=d;c.I();0<i&&c.ob(i,c);0>h&&X.ZERO.D(c,c)}}}};
t.toString=function(a){if(0>this.g)return"-"+this.o().toString(a);if(16==a)a=4;else if(8==a)a=3;else if(2==a)a=1;else if(32==a)a=5;else if(4==a)a=2;else return this.xb(a);var b=(1<<a)-1,c,d=r,f="",g=this.e,h=this.k-g*this.k%a;if(0<g--){if(h<this.k&&0<(c=this[g]>>h))d=n,f="0123456789abcdefghijklmnopqrstuvwxyz".charAt(c);for(;0<=g;)h<a?(c=(this[g]&(1<<h)-1)<<a-h,c|=this[--g]>>(h+=this.k-a)):(c=this[g]>>(h-=a)&b,0>=h&&(h+=this.k,--g)),0<c&&(d=n),d&&(f+="0123456789abcdefghijklmnopqrstuvwxyz".charAt(c))}return d?
f:"0"};t.o=function(){var a=uc();X.ZERO.D(this,a);return a};t.abs=function(){return 0>this.g?this.o():this};t.Z=function(a){var b=this.g-a.g;if(0!=b)return b;var c=this.e,b=c-a.e;if(0!=b)return 0>this.g?-b:b;for(;0<=--c;)if(0!=(b=this[c]-a[c]))return b;return 0};X.ZERO=xc(0);X.ONE=xc(1);t=X.prototype;
t.cb=function(a,b){this.J(0);b==p&&(b=10);for(var c=this.Ba(b),d=Math.pow(b,c),f=r,g=0,h=0,i=0;i<a.length;++i){var k=vc(a,i);0>k?"-"==a.charAt(i)&&0==this.qa()&&(f=n):(h=b*h+k,++g>=c&&(this.Da(d),this.Ca(h),h=g=0))}0<g&&(this.Da(Math.pow(b,g)),this.Ca(h));f&&X.ZERO.D(this,this)};t.Ba=function(a){return Math.floor(Math.LN2*this.k/Math.log(a))};t.qa=function(){return 0>this.g?-1:0>=this.e||1==this.e&&0>=this[0]?0:1};t.Da=function(a){this[this.e]=this.ha(a-1,this,0,this.e);++this.e;this.I()};
t.Ca=function(a){var b=0;if(0!=a){for(;this.e<=b;)this[this.e++]=0;for(this[b]+=a;this[b]>=this.Q;)this[b]-=this.Q,++b>=this.e&&(this[this.e++]=0),++this[b]}};t.xb=function(a){a==p&&(a=10);if(0==this.qa()||2>a||36<a)return"0";var b=this.Ba(a),b=Math.pow(a,b),c=xc(b),d=uc(),f=uc(),g="";for(this.Fa(c,d,f);0<d.qa();)g=(b+f.La()).toString(a).substr(1)+g,d.Fa(c,d,f);return f.La().toString(a)+g};
t.La=function(){if(0>this.g){if(1==this.e)return this[0]-this.Q;if(0==this.e)return-1}else{if(1==this.e)return this[0];if(0==this.e)return 0}return(this[1]&(1<<32-this.k)-1)<<this.k|this[0]};
t.ga=function(a,b){for(var c=0,d=0,f=Math.min(a.e,this.e);c<f;)d+=this[c]+a[c],b[c++]=d&this.F,d>>=this.k;if(a.e<this.e){for(d+=a.g;c<this.e;)d+=this[c],b[c++]=d&this.F,d>>=this.k;d+=this.g}else{for(d+=this.g;c<a.e;)d+=a[c],b[c++]=d&this.F,d>>=this.k;d+=a.g}b.g=0>d?-1:0;0<d?b[c++]=d:-1>d&&(b[c++]=this.Q+d);b.e=c;b.I()};
var $={abs:function(a,b){var c=new Y(a,b),c=c.A()?c.o():c;J[T>>2]=c.n;J[T+4>>2]=c.p},Ga:function(){$.ab||($.ab=n,$.Sa=new X,$.Sa.r("4294967296",10),$.sa=new X,$.sa.r("18446744073709551616",10),$.Vb=new X,$.Wb=new X)},Sb:function(a,b){var c=new X;c.r(b.toString(),10);var d=new X;c.kb(d);c=new X;c.r(a.toString(),10);var f=new X;c.ga(d,f);return f},stringify:function(a,b,c){a=(new Y(a,b)).toString();c&&"-"==a[0]&&($.Ga(),c=new X,c.r(a,10),a=new X,$.sa.ga(c,a),a=a.toString(10));return a},r:function(a,
b,c,d,f){$.Ga();var g=new X;g.r(a,b);a=new X;a.r(c,10);c=new X;c.r(d,10);f&&0>g.Z(X.ZERO)&&(d=new X,g.ga($.sa,d),g=d);d=r;0>g.Z(a)?(g=a,d=n):0<g.Z(c)&&(g=c,d=n);g=Y.r(g.toString());J[T>>2]=g.n;J[T+4>>2]=g.p;d&&e("range error")}};Ob=$;
if(S)if("function"===typeof u.locateFile?S=u.locateFile(S):u.memoryInitializerPrefixURL&&(S=u.memoryInitializerPrefixURL+S),ea||ha){var zc=u.readBinary(S);N.set(zc,Oa)}else jb(),Browser.Jb(S,function(a){N.set(a,Oa);kb()},function(){e("could not load memory initializer "+S)});function la(a){this.name="ExitStatus";this.message="Program terminated with exit("+a+")";this.status=a}la.prototype=Error();var Ac,Bc=p,ib=function Cc(){!u.calledRun&&Dc&&Ec();u.calledRun||(ib=Cc)};
u.callMain=u.Kb=function(a){function b(){for(var a=0;3>a;a++)d.push(0)}x(0==gb,"cannot call main when async dependencies remain! (listen on __ATMAIN__)");x(0==Ua.length,"cannot call main when preRun functions remain to be called");a=a||[];Za||(Za=n,Ta(Va));var c=a.length+1,d=[L(bb(u.thisProgram),"i8",Ga)];b();for(var f=0;f<c-1;f+=1)d.push(L(bb(a[f]),"i8",Ga)),b();d.push(0);d=L(d,"i32",Ga);Ac=z;try{var g=u._main(c,d,0);Fc(g)}catch(h){h instanceof la||("SimulateInfiniteLoop"==h?u.noExitRuntime=n:(h&&
("object"===typeof h&&h.stack)&&u.N("exception thrown: "+[h,h.stack]),e(h)))}finally{}};
function Ec(a){function b(){if(!u.calledRun&&(u.calledRun=n,!pa)){Za||(Za=n,Ta(Va));Ta(Wa);fa&&Bc!==p&&u.N("pre-main prep time: "+(Date.now()-Bc)+" ms");u._main&&Dc&&u.callMain(a);if(u.postRun)for("function"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;)ab(u.postRun.shift());Ta(Ya)}}a=a||u.arguments;Bc===p&&(Bc=Date.now());if(0<gb)u.N("run() called, but dependencies remain, so not running");else{if(u.preRun)for("function"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)$a(u.preRun.shift());
Ta(Ua);!(0<gb)&&!u.calledRun&&(u.setStatus?(u.setStatus("Running..."),setTimeout(function(){setTimeout(function(){u.setStatus("")},1);b()},1)):b())}}u.run=u.Ub=Ec;function Fc(a){u.noExitRuntime||(pa=n,z=Ac,Ta(Xa),ea?(process.stdout.once("drain",function(){process.exit(a)}),console.log(" "),setTimeout(function(){process.exit(a)},500)):ha&&"function"===typeof quit&&quit(a),e(new la(a)))}u.exit=u.Lb=Fc;
function D(a){a&&(u.print(a),u.N(a));pa=n;e("abort() at "+La()+"\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.")}u.abort=u.abort=D;if(u.preInit)for("function"==typeof u.preInit&&(u.preInit=[u.preInit]);0<u.preInit.length;)u.preInit.pop()();var Dc=n;u.noInitialRun&&(Dc=r);Ec();


}).call(this,require('_process'),"/node_modules/fontkit/node_modules/brotli/build")
},{"../src/read_memory":71,"_process":25,"fs":1,"path":24}],64:[function(require,module,exports){
(function (process,__dirname){
function e(a){throw a;}var j=void 0,m=!0,p=null,s=!1,t,v={};v.readBinary=require("../src/read_memory");v||(v=eval("(function() { try { return Module || {} } catch(e) { return {} } })()"));var aa={},w;for(w in v)v.hasOwnProperty(w)&&(aa[w]=v[w]);var ba="object"===typeof process&&"function"===typeof require,ca="object"===typeof window,da="function"===typeof importScripts,ea=!ca&&!ba&&!da;
if(ba){v.print||(v.print=function(a){process.stdout.write(a+"\n")});v.printErr||(v.printErr=function(a){process.stderr.write(a+"\n")});var fa=require("fs"),ga=require("path");v.read=function(a,c){var a=ga.normalize(a),b=fa.readFileSync(a);!b&&a!=ga.resolve(a)&&(a=path.join(__dirname,"..","src",a),b=fa.readFileSync(a));b&&!c&&(b=b.toString());return b};v.readBinary=function(a){return v.read(a,m)};v.load=function(a){ha(read(a))};v.thisProgram=process.argv[1].replace(/\\/g,"/");v.arguments=process.argv.slice(2);
"undefined"!==typeof module&&(module.exports=v);process.on("uncaughtException",function(a){a instanceof ia||e(a)})}else ea?(v.print||(v.print=print),"undefined"!=typeof printErr&&(v.printErr=printErr),v.read="undefined"!=typeof read?read:function(){e("no read() available (jsc?)")},v.readBinary=function(a){if("function"===typeof readbuffer)return new Uint8Array(readbuffer(a));a=read(a,"binary");y("object"===typeof a);return a},"undefined"!=typeof scriptArgs?v.arguments=scriptArgs:"undefined"!=typeof arguments&&
(v.arguments=arguments),this.Module=v,eval("if (typeof gc === 'function' && gc.toString().indexOf('[native code]') > 0) var gc = undefined")):ca||da?(v.read=function(a){var c=new XMLHttpRequest;c.open("GET",a,s);c.send(p);return c.responseText},"undefined"!=typeof arguments&&(v.arguments=arguments),"undefined"!==typeof console?(v.print||(v.print=function(a){console.log(a)}),v.printErr||(v.printErr=function(a){console.log(a)})):v.print||(v.print=function(){}),ca?window.Module=v:v.load=importScripts):
e("Unknown runtime environment. Where are we?");function ha(a){eval.call(p,a)}!v.load&&v.read&&(v.load=function(a){ha(v.read(a))});v.print||(v.print=function(){});v.printErr||(v.printErr=v.print);v.arguments||(v.arguments=[]);v.thisProgram||(v.thisProgram="./this.program");v.print=v.print;v.K=v.printErr;v.preRun=[];v.postRun=[];for(w in aa)aa.hasOwnProperty(w)&&(v[w]=aa[w]);
var B={Ya:function(a){ja=a},Na:function(){return ja},T:function(){return A},ga:function(a){A=a},ua:function(a){switch(a){case "i1":case "i8":return 1;case "i16":return 2;case "i32":return 4;case "i64":return 8;case "float":return 4;case "double":return 8;default:return"*"===a[a.length-1]?B.V:"i"===a[0]?(a=parseInt(a.substr(1)),y(0===a%8),a/8):0}},ta:function(a){return Math.max(B.ua(a),B.V)},bb:16,rb:function(a,c,b){return!b&&("i64"==a||"double"==a)?8:!a?Math.min(c,8):Math.min(c||(a?B.ta(a):0),B.V)},
ca:function(a,c,b){return b&&b.length?(b.splice||(b=Array.prototype.slice.call(b)),b.splice(0,0,c),v["dynCall_"+a].apply(p,b)):v["dynCall_"+a].call(p,c)},R:[],Ea:function(a){for(var c=0;c<B.R.length;c++)if(!B.R[c])return B.R[c]=a,2*(1+c);e("Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.")},Xa:function(a){B.R[(a-2)/2]=p},sb:function(a,c){B.$||(B.$={});var b=B.$[a];if(b)return b;for(var b=[],d=0;d<c;d++)b.push(String.fromCharCode(36)+d);d=E(a);'"'===d[0]&&
(d.indexOf('"',1)===d.length-1?d=d.substr(1,d.length-2):F("invalid EM_ASM input |"+d+"|. Please use EM_ASM(..code..) (no quotes) or EM_ASM({ ..code($0).. }, input) (to input values)"));try{var f=eval("(function(Module, FS) { return function("+b.join(",")+"){ "+d+" } })")(v,"undefined"!==typeof G?G:p)}catch(g){v.K("error in executing inline EM_ASM code: "+g+" on: \n\n"+d+"\n\nwith args |"+b+"| (make sure to use the right one out of EM_ASM, EM_ASM_ARGS, etc.)"),e(g)}return B.$[a]=f},N:function(a){B.N.ea||
(B.N.ea={});B.N.ea[a]||(B.N.ea[a]=1,v.K(a))},da:{},ub:function(a,c){y(c);B.da[c]||(B.da[c]={});var b=B.da[c];b[a]||(b[a]=function(){return B.ca(c,a,arguments)});return b[a]},na:function(){var a=[],c=0;this.Ua=function(b){b&=255;if(0==a.length){if(0==(b&128))return String.fromCharCode(b);a.push(b);c=192==(b&224)?1:224==(b&240)?2:3;return""}if(c&&(a.push(b),c--,0<c))return"";var b=a[0],d=a[1],f=a[2],g=a[3];2==a.length?b=String.fromCharCode((b&31)<<6|d&63):3==a.length?b=String.fromCharCode((b&15)<<12|
(d&63)<<6|f&63):(b=(b&7)<<18|(d&63)<<12|(f&63)<<6|g&63,b=String.fromCharCode(((b-65536)/1024|0)+55296,(b-65536)%1024+56320));a.length=0;return b};this.Va=function(a){for(var a=unescape(encodeURIComponent(a)),c=[],f=0;f<a.length;f++)c.push(a.charCodeAt(f));return c}},tb:function(){e("You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work")},S:function(a){var c=A;A=A+a|0;A=A+15&-16;return c},za:function(a){var c=H;H=H+a|0;H=H+15&-16;
return c},Q:function(a){var c=I;I=I+a|0;I=I+15&-16;I>=J&&F("Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value "+J+", (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.");return c},O:function(a,c){return Math.ceil(a/(c?c:16))*(c?c:16)},Ra:function(a,c,b){return b?+(a>>>0)+4294967296*+(c>>>0):+(a>>>0)+4294967296*+(c|0)},ab:8,V:4,gb:0};
v.Runtime=B;B.addFunction=B.Ea;B.removeFunction=B.Xa;var ka=s,la,ma,ja;function y(a,c){a||F("Assertion failed: "+c)}function na(a){var c=v["_"+a];if(!c)try{c=eval("_"+a)}catch(b){}y(c,"Cannot call unknown function "+a+" (perhaps LLVM optimizations or closure removed it?)");return c}var oa,pa;
(function(){function a(a){a=a.toString().match(f).slice(1);return{arguments:a[0],body:a[1],returnValue:a[2]}}var c=0,b={stackSave:function(){c=B.T()},stackRestore:function(){B.ga(c)},arrayToC:function(a){var b=B.S(a.length);qa(a,b);return b},stringToC:function(a){var b=0;a!==p&&(a!==j&&0!==a)&&(b=B.S((a.length<<2)+1),ra(a,b));return b}},d={string:b.stringToC,array:b.arrayToC};pa=function(a,g,f,i){var a=na(a),n=[];if(i)for(var u=0;u<i.length;u++){var C=d[f[u]];C?(0===c&&(c=B.T()),n[u]=C(i[u])):n[u]=
i[u]}f=a.apply(p,n);"string"===g&&(f=E(f));0!==c&&b.stackRestore();return f};var f=/^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/,g={},i;for(i in b)b.hasOwnProperty(i)&&(g[i]=a(b[i]));oa=function(b,c,d){var d=d||[],f=na(b),b=d.every(function(a){return"number"===a}),i="string"!==c;if(i&&b)return f;var u=d.map(function(a,b){return"$"+b}),c="(function("+u.join(",")+") {",C=d.length;if(!b)for(var c=c+(g.stackSave.body+";"),D=0;D<C;D++){var N=u[D],z=d[D];"number"!==z&&(z=g[z+
"ToC"],c+="var "+z.arguments+" = "+N+";",c+=z.body+";",c+=N+"="+z.returnValue+";")}d=a(function(){return f}).returnValue;c+="var ret = "+d+"("+u.join(",")+");";i||(d=a(function(){return E}).returnValue,c+="ret = "+d+"(ret);");b||(c+=g.stackRestore.body+";");return eval(c+"return ret})")}})();v.cwrap=oa;v.ccall=pa;
function sa(a,c,b){b=b||"i8";"*"===b.charAt(b.length-1)&&(b="i32");switch(b){case "i1":L[a>>0]=c;break;case "i8":L[a>>0]=c;break;case "i16":ta[a>>1]=c;break;case "i32":M[a>>2]=c;break;case "i64":ma=[c>>>0,(la=c,1<=+ua(la)?0<la?(va(+wa(la/4294967296),4294967295)|0)>>>0:~~+xa((la-+(~~la>>>0))/4294967296)>>>0:0)];M[a>>2]=ma[0];M[a+4>>2]=ma[1];break;case "float":ya[a>>2]=c;break;case "double":za[a>>3]=c;break;default:F("invalid type for setValue: "+b)}}v.setValue=sa;
function Aa(a,c){c=c||"i8";"*"===c.charAt(c.length-1)&&(c="i32");switch(c){case "i1":return L[a>>0];case "i8":return L[a>>0];case "i16":return ta[a>>1];case "i32":return M[a>>2];case "i64":return M[a>>2];case "float":return ya[a>>2];case "double":return za[a>>3];default:F("invalid type for setValue: "+c)}return p}v.getValue=Aa;var Ba=2,Ca=4;v.ALLOC_NORMAL=0;v.ALLOC_STACK=1;v.ALLOC_STATIC=Ba;v.ALLOC_DYNAMIC=3;v.ALLOC_NONE=Ca;
function O(a,c,b,d){var f,g;"number"===typeof a?(f=m,g=a):(f=s,g=a.length);var i="string"===typeof c?c:p,b=b==Ca?d:[Da,B.S,B.za,B.Q][b===j?Ba:b](Math.max(g,i?1:c.length));if(f){d=b;y(0==(b&3));for(a=b+(g&-4);d<a;d+=4)M[d>>2]=0;for(a=b+g;d<a;)L[d++>>0]=0;return b}if("i8"===i)return a.subarray||a.slice?P.set(a,b):P.set(new Uint8Array(a),b),b;for(var d=0,h,l;d<g;){var r=a[d];"function"===typeof r&&(r=B.vb(r));f=i||c[d];0===f?d++:("i64"==f&&(f="i32"),sa(b+d,r,f),l!==f&&(h=B.ua(f),l=f),d+=h)}return b}
v.allocate=O;function E(a,c){for(var b=s,d,f=0;;){d=P[a+f>>0];if(128<=d)b=m;else if(0==d&&!c)break;f++;if(c&&f==c)break}c||(c=f);var g="";if(!b){for(;0<c;)d=String.fromCharCode.apply(String,P.subarray(a,a+Math.min(c,1024))),g=g?g+d:d,a+=1024,c-=1024;return g}b=new B.na;for(f=0;f<c;f++)d=P[a+f>>0],g+=b.Ua(d);return g}v.Pointer_stringify=E;v.UTF16ToString=function(a){for(var c=0,b="";;){var d=ta[a+2*c>>1];if(0==d)return b;++c;b+=String.fromCharCode(d)}};
v.stringToUTF16=function(a,c){for(var b=0;b<a.length;++b)ta[c+2*b>>1]=a.charCodeAt(b);ta[c+2*a.length>>1]=0};v.UTF32ToString=function(a){for(var c=0,b="";;){var d=M[a+4*c>>2];if(0==d)return b;++c;65536<=d?(d-=65536,b+=String.fromCharCode(55296|d>>10,56320|d&1023)):b+=String.fromCharCode(d)}};v.stringToUTF32=function(a,c){for(var b=0,d=0;d<a.length;++d){var f=a.charCodeAt(d);if(55296<=f&&57343>=f)var g=a.charCodeAt(++d),f=65536+((f&1023)<<10)|g&1023;M[c+4*b>>2]=f;++b}M[c+4*b>>2]=0};
function Ea(a){function c(b,d,g){var d=d||Infinity,f="",i=[],q;if("N"===a[h]){h++;"K"===a[h]&&h++;for(q=[];"E"!==a[h];)if("S"===a[h]){h++;var n=a.indexOf("_",h);q.push(r[a.substring(h,n)||0]||"?");h=n+1}else if("C"===a[h])q.push(q[q.length-1]),h+=2;else{var n=parseInt(a.substr(h)),k=n.toString().length;if(!n||!k){h--;break}var W=a.substr(h+k,n);q.push(W);r.push(W);h+=k+n}h++;q=q.join("::");d--;if(0===d)return b?[q]:q}else if(("K"===a[h]||x&&"L"===a[h])&&h++,n=parseInt(a.substr(h)))k=n.toString().length,
q=a.substr(h+k,n),h+=k+n;x=s;"I"===a[h]?(h++,n=c(m),k=c(m,1,m),f+=k[0]+" "+q+"<"+n.join(", ")+">"):f=q;a:for(;h<a.length&&0<d--;)if(q=a[h++],q in l)i.push(l[q]);else switch(q){case "P":i.push(c(m,1,m)[0]+"*");break;case "R":i.push(c(m,1,m)[0]+"&");break;case "L":h++;n=a.indexOf("E",h)-h;i.push(a.substr(h,n));h+=n+2;break;case "A":n=parseInt(a.substr(h));h+=n.toString().length;"_"!==a[h]&&e("?");h++;i.push(c(m,1,m)[0]+" ["+n+"]");break;case "E":break a;default:f+="?"+q;break a}!g&&(1===i.length&&"void"===
i[0])&&(i=[]);return b?(f&&i.push(f+"?"),i):f+("("+i.join(", ")+")")}var b=!!v.___cxa_demangle;if(b)try{var d=Da(a.length);ra(a.substr(1),d);var f=Da(4),g=v.___cxa_demangle(d,0,0,f);if(0===Aa(f,"i32")&&g)return E(g)}catch(i){}finally{d&&Fa(d),f&&Fa(f),g&&Fa(g)}var h=3,l={v:"void",b:"bool",c:"char",s:"short",i:"int",l:"long",f:"float",d:"double",w:"wchar_t",a:"signed char",h:"unsigned char",t:"unsigned short",j:"unsigned int",m:"unsigned long",x:"long long",y:"unsigned long long",z:"..."},r=[],x=m,
d=a;try{if("Object._main"==a||"_main"==a)return"main()";"number"===typeof a&&(a=E(a));if("_"!==a[0]||"_"!==a[1]||"Z"!==a[2])return a;switch(a[3]){case "n":return"operator new()";case "d":return"operator delete()"}d=c()}catch(n){d+="?"}0<=d.indexOf("?")&&!b&&B.N("warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");return d}
function Ga(){var a;a:{a=Error();if(!a.stack){try{e(Error(0))}catch(c){a=c}if(!a.stack){a="(no stack trace available)";break a}}a=a.stack.toString()}return a.replace(/__Z[\w\d_]+/g,function(a){var c=Ea(a);return a===c?a:a+" ["+c+"]"})}v.stackTrace=function(){return Ga()};for(var L,P,ta,Ha,M,Ia,ya,za,Ja=0,H=0,Ka=0,A=0,La=0,Ma=0,I=0,Na=v.TOTAL_STACK||5242880,J=v.TOTAL_MEMORY||318767104,Q=65536;Q<J||Q<2*Na;)Q=16777216>Q?2*Q:Q+16777216;
Q!==J&&(v.K("increasing TOTAL_MEMORY to "+Q+" to be more reasonable"),J=Q);y("undefined"!==typeof Int32Array&&"undefined"!==typeof Float64Array&&!!(new Int32Array(1)).subarray&&!!(new Int32Array(1)).set,"JS engine does not provide full typed array support");var R=new ArrayBuffer(J);L=new Int8Array(R);ta=new Int16Array(R);M=new Int32Array(R);P=new Uint8Array(R);Ha=new Uint16Array(R);Ia=new Uint32Array(R);ya=new Float32Array(R);za=new Float64Array(R);M[0]=255;y(255===P[0]&&0===P[3],"Typed arrays 2 must be run on a little-endian system");
v.HEAP=j;v.HEAP8=L;v.HEAP16=ta;v.HEAP32=M;v.HEAPU8=P;v.HEAPU16=Ha;v.HEAPU32=Ia;v.HEAPF32=ya;v.HEAPF64=za;function Oa(a){for(;0<a.length;){var c=a.shift();if("function"==typeof c)c();else{var b=c.qb;"number"===typeof b?c.Z===j?B.ca("v",b):B.ca("vi",b,[c.Z]):b(c.Z===j?p:c.Z)}}}var Pa=[],Qa=[],Ra=[],Sa=[],Ta=[],Ua=s;function Va(a){Pa.unshift(a)}v.addOnPreRun=v.lb=Va;v.addOnInit=v.ib=function(a){Qa.unshift(a)};v.addOnPreMain=v.kb=function(a){Ra.unshift(a)};v.addOnExit=v.hb=function(a){Sa.unshift(a)};
function Wa(a){Ta.unshift(a)}v.addOnPostRun=v.jb=Wa;function Xa(a,c,b){a=(new B.na).Va(a);b&&(a.length=b);c||a.push(0);return a}v.intArrayFromString=Xa;function Ya(a){for(var c=[],b=0;b<a.length;b++){var d=a[b];255<d&&(d&=255);c.push(String.fromCharCode(d))}return c.join("")}v.intArrayToString=Ya;function ra(a,c,b){a=Xa(a,b);for(b=0;b<a.length;)L[c+b>>0]=a[b],b+=1}v.writeStringToMemory=ra;function qa(a,c){for(var b=0;b<a.length;b++)L[c+b>>0]=a[b]}v.writeArrayToMemory=qa;
v.writeAsciiToMemory=function(a,c,b){for(var d=0;d<a.length;d++)L[c+d>>0]=a.charCodeAt(d);b||(L[c+a.length>>0]=0)};function Za(a,c){return 0<=a?a:32>=c?2*Math.abs(1<<c-1)+a:Math.pow(2,c)+a}function $a(a,c){if(0>=a)return a;var b=32>=c?Math.abs(1<<c-1):Math.pow(2,c-1);if(a>=b&&(32>=c||a>b))a=-2*b+a;return a}if(!Math.imul||-5!==Math.imul(4294967295,5))Math.imul=function(a,c){var b=a&65535,d=c&65535;return b*d+((a>>>16)*d+b*(c>>>16)<<16)|0};Math.xb=Math.imul;
var ua=Math.abs,xa=Math.ceil,wa=Math.floor,va=Math.min,S=0,ab=p,bb=p;function cb(){S++;v.monitorRunDependencies&&v.monitorRunDependencies(S)}v.addRunDependency=cb;function db(){S--;v.monitorRunDependencies&&v.monitorRunDependencies(S);if(0==S&&(ab!==p&&(clearInterval(ab),ab=p),bb)){var a=bb;bb=p;a()}}v.removeRunDependency=db;v.preloadedImages={};v.preloadedAudios={};var T=p,Ja=8,H=Ja+B.O(128835);Qa.push();var T="decode.js.mem",U=B.O(O(12,"i8",Ba),8);y(0==U%8);var G=j,eb=0;
function fb(a){return M[eb>>2]=a}var gb=9;function hb(a,c,b){a=G.La(a);if(!a)return fb(gb),-1;try{return G.write(a,L,c,b)}catch(d){return G.Qa(d),-1}}function ib(a){a=G.Ma(a);return!a?-1:a.pb}function jb(a,c,b,d){b*=c;if(0==b)return 0;var f=ib(d),a=hb(f,a,b);if(-1==a){if(c=G.Ma(d))c.error=m;return 0}return a/c|0}v._strlen=kb;function lb(a){return 0>a||0===a&&-Infinity===1/a}
function mb(a,c){function b(a){var b;"double"===a?b=(M[U>>2]=M[c+f>>2],M[U+4>>2]=M[c+(f+4)>>2],+za[U>>3]):"i64"==a?b=[M[c+f>>2],M[c+(f+4)>>2]]:(a="i32",b=M[c+f>>2]);f+=B.ta(a);return b}for(var d=a,f=0,g=[],i,h;;){var l=d;i=L[d>>0];if(0===i)break;h=L[d+1>>0];if(37==i){var r=s,x=s,n=s,u=s,C=s;a:for(;;){switch(h){case 43:r=m;break;case 45:x=m;break;case 35:n=m;break;case 48:if(u)break a;else{u=m;break}case 32:C=m;break;default:break a}d++;h=L[d+1>>0]}var D=0;if(42==h)D=b("i32"),d++,h=L[d+1>>0];else for(;48<=
h&&57>=h;)D=10*D+(h-48),d++,h=L[d+1>>0];var N=s,z=-1;if(46==h){z=0;N=m;d++;h=L[d+1>>0];if(42==h)z=b("i32"),d++;else for(;;){h=L[d+1>>0];if(48>h||57<h)break;z=10*z+(h-48);d++}h=L[d+1>>0]}0>z&&(z=6,N=s);var q;switch(String.fromCharCode(h)){case "h":h=L[d+2>>0];104==h?(d++,q=1):q=2;break;case "l":h=L[d+2>>0];108==h?(d++,q=8):q=4;break;case "L":case "q":case "j":q=8;break;case "z":case "t":case "I":q=4;break;default:q=p}q&&d++;h=L[d+1>>0];switch(String.fromCharCode(h)){case "d":case "i":case "u":case "o":case "x":case "X":case "p":l=
100==h||105==h;q=q||4;var K=i=b("i"+8*q),k;8==q&&(i=B.Ra(i[0],i[1],117==h));4>=q&&(i=(l?$a:Za)(i&Math.pow(256,q)-1,8*q));var W=Math.abs(i),l="";if(100==h||105==h)k=8==q&&nb?nb.stringify(K[0],K[1],p):$a(i,8*q).toString(10);else if(117==h)k=8==q&&nb?nb.stringify(K[0],K[1],m):Za(i,8*q).toString(10),i=Math.abs(i);else if(111==h)k=(n?"0":"")+W.toString(8);else if(120==h||88==h){l=n&&0!=i?"0x":"";if(8==q&&nb)if(K[1]){k=(K[1]>>>0).toString(16);for(n=(K[0]>>>0).toString(16);8>n.length;)n="0"+n;k+=n}else k=
(K[0]>>>0).toString(16);else if(0>i){i=-i;k=(W-1).toString(16);K=[];for(n=0;n<k.length;n++)K.push((15-parseInt(k[n],16)).toString(16));for(k=K.join("");k.length<2*q;)k="f"+k}else k=W.toString(16);88==h&&(l=l.toUpperCase(),k=k.toUpperCase())}else 112==h&&(0===W?k="(nil)":(l="0x",k=W.toString(16)));if(N)for(;k.length<z;)k="0"+k;0<=i&&(r?l="+"+l:C&&(l=" "+l));"-"==k.charAt(0)&&(l="-"+l,k=k.substr(1));for(;l.length+k.length<D;)x?k+=" ":u?k="0"+k:l=" "+l;k=l+k;k.split("").forEach(function(a){g.push(a.charCodeAt(0))});
break;case "f":case "F":case "e":case "E":case "g":case "G":i=b("double");if(isNaN(i))k="nan",u=s;else if(isFinite(i)){N=s;q=Math.min(z,20);if(103==h||71==h)N=m,z=z||1,q=parseInt(i.toExponential(q).split("e")[1],10),z>q&&-4<=q?(h=(103==h?"f":"F").charCodeAt(0),z-=q+1):(h=(103==h?"e":"E").charCodeAt(0),z--),q=Math.min(z,20);if(101==h||69==h)k=i.toExponential(q),/[eE][-+]\d$/.test(k)&&(k=k.slice(0,-1)+"0"+k.slice(-1));else if(102==h||70==h)k=i.toFixed(q),0===i&&lb(i)&&(k="-"+k);l=k.split("e");if(N&&
!n)for(;1<l[0].length&&-1!=l[0].indexOf(".")&&("0"==l[0].slice(-1)||"."==l[0].slice(-1));)l[0]=l[0].slice(0,-1);else for(n&&-1==k.indexOf(".")&&(l[0]+=".");z>q++;)l[0]+="0";k=l[0]+(1<l.length?"e"+l[1]:"");69==h&&(k=k.toUpperCase());0<=i&&(r?k="+"+k:C&&(k=" "+k))}else k=(0>i?"-":"")+"inf",u=s;for(;k.length<D;)k=x?k+" ":u&&("-"==k[0]||"+"==k[0])?k[0]+"0"+k.slice(1):(u?"0":" ")+k;97>h&&(k=k.toUpperCase());k.split("").forEach(function(a){g.push(a.charCodeAt(0))});break;case "s":u=(r=b("i8*"))?kb(r):6;
N&&(u=Math.min(u,z));if(!x)for(;u<D--;)g.push(32);if(r)for(n=0;n<u;n++)g.push(P[r++>>0]);else g=g.concat(Xa("(null)".substr(0,u),m));if(x)for(;u<D--;)g.push(32);break;case "c":for(x&&g.push(b("i8"));0<--D;)g.push(32);x||g.push(b("i8"));break;case "n":x=b("i32*");M[x>>2]=g.length;break;case "%":g.push(i);break;default:for(n=l;n<d+2;n++)g.push(L[n>>0])}d+=2}else g.push(i),d+=1}return g}
function ob(a){ob.Ga||(I=I+4095&-4096,ob.Ga=m,y(B.Q),ob.Fa=B.Q,B.Q=function(){F("cannot dynamically allocate, sbrk now has control")});var c=I;0!=a&&ob.Fa(a);return c}v._memset=pb;v._bitshift64Lshr=qb;v._bitshift64Shl=rb;v._memcpy=sb;eb=B.za(4);M[eb>>2]=0;Ka=A=B.O(H);La=Ka+Na;Ma=I=B.O(La);y(Ma<J,"TOTAL_MEMORY not big enough for stack");
var tb=O([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0],"i8",3),ub=O([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,
0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0],"i8",3),va=Math.min;
var V=(function(global,env,buffer) {
// EMSCRIPTEN_START_ASM
"use asm";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.STACKTOP|0;var j=env.STACK_MAX|0;var k=env.tempDoublePtr|0;var l=env.ABORT|0;var m=env.cttz_i8|0;var n=env.ctlz_i8|0;var o=0;var p=0;var q=0;var r=0;var s=+env.NaN,t=+env.Infinity;var u=0,v=0,w=0,x=0,y=0.0,z=0,A=0,B=0,C=0.0;var D=0;var E=0;var F=0;var G=0;var H=0;var I=0;var J=0;var K=0;var L=0;var M=0;var N=global.Math.floor;var O=global.Math.abs;var P=global.Math.sqrt;var Q=global.Math.pow;var R=global.Math.cos;var S=global.Math.sin;var T=global.Math.tan;var U=global.Math.acos;var V=global.Math.asin;var W=global.Math.atan;var X=global.Math.atan2;var Y=global.Math.exp;var Z=global.Math.log;var _=global.Math.ceil;var $=global.Math.imul;var aa=env.abort;var ba=env.assert;var ca=env.min;var da=env.invoke_iiii;var ea=env._sysconf;var fa=env.__formatString;var ga=env._time;var ha=env._send;var ia=env._pwrite;var ja=env._abort;var ka=env.___setErrNo;var la=env._fwrite;var ma=env._sbrk;var na=env._printf;var oa=env._fprintf;var pa=env.__reallyNegative;var qa=env._emscripten_memcpy_big;var ra=env._fileno;var sa=env._write;var ta=env.___assert_fail;var ua=env.___errno_location;var va=0.0;
// EMSCRIPTEN_START_FUNCS
function xa(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+15&-16;return b|0}function ya(){return i|0}function za(a){a=a|0;i=a}function Aa(a,b){a=a|0;b=b|0;if((o|0)==0){o=a;p=b}}function Ba(b){b=b|0;a[k>>0]=a[b>>0];a[k+1>>0]=a[b+1>>0];a[k+2>>0]=a[b+2>>0];a[k+3>>0]=a[b+3>>0]}function Ca(b){b=b|0;a[k>>0]=a[b>>0];a[k+1>>0]=a[b+1>>0];a[k+2>>0]=a[b+2>>0];a[k+3>>0]=a[b+3>>0];a[k+4>>0]=a[b+4>>0];a[k+5>>0]=a[b+5>>0];a[k+6>>0]=a[b+6>>0];a[k+7>>0]=a[b+7>>0]}function Da(a){a=a|0;D=a}function Ea(){return D|0}function Fa(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+32|0;g=f+16|0;l=f+12|0;k=f+8|0;h=f+4|0;j=f;c[l>>2]=a;c[k>>2]=b;c[h>>2]=d;c[j>>2]=e;if((Qa(c[l>>2]|0,c[k>>2]|0,h,c[j>>2]|0)|0)!=0){c[g>>2]=c[h>>2];l=c[g>>2]|0;i=f;return l|0}else{c[g>>2]=-1;l=c[g>>2]|0;i=f;return l|0}return 0}function Ga(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;e=f+8|0;h=f+4|0;g=f;c[h>>2]=a;if((c[h>>2]|0)==0)ta(8,24,29,56);c[(c[h>>2]|0)+8224>>2]=c[h>>2];a=(c[h>>2]|0)+8228|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];a=(c[h>>2]|0)+8240|0;c[a>>2]=0;c[a+4>>2]=0;c[(c[h>>2]|0)+8248>>2]=0;c[(c[h>>2]|0)+8252>>2]=0;c[(c[h>>2]|0)+8256>>2]=0;c[(c[h>>2]|0)+8260>>2]=0;if((Ha(c[h>>2]|0)|0)==0){c[e>>2]=0;a=c[e>>2]|0;i=f;return a|0}c[g>>2]=0;while(1){b=c[h>>2]|0;if(!((c[g>>2]|0)>>>0<8))break;j=zb(d[(c[h>>2]|0)+(c[b+8248>>2]|0)>>0]|0|0,0,c[g>>2]<<3|0)|0;a=(c[h>>2]|0)+8240|0;k=a;b=c[k+4>>2]|D;c[a>>2]=c[k>>2]|j;c[a+4>>2]=b;a=(c[h>>2]|0)+8248|0;c[a>>2]=(c[a>>2]|0)+1;c[g>>2]=(c[g>>2]|0)+1}c[e>>2]=(c[b+8256>>2]|0)>>>0>0&1;k=c[e>>2]|0;i=f;return k|0}function Ha(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;g=i;i=i+32|0;j=g+16|0;e=g+12|0;f=g+8|0;h=g+4|0;d=g;c[f>>2]=b;if((c[(c[f>>2]|0)+8256>>2]|0)>>>0>256){c[e>>2]=1;b=c[e>>2]|0;i=g;return b|0}b=c[f>>2]|0;if((c[(c[f>>2]|0)+8260>>2]|0)!=0){c[e>>2]=(c[b+8252>>2]|0)>>>0<=(c[(c[f>>2]|0)+8256>>2]|0)>>>0&1;b=c[e>>2]|0;i=g;return b|0}c[h>>2]=c[b+8224>>2];k=(c[f>>2]|0)+8228|0;b=c[h>>2]|0;c[j+0>>2]=c[k+0>>2];c[j+4>>2]=c[k+4>>2];c[d>>2]=Ia(j,b,4096)|0;if((c[d>>2]|0)<0){c[e>>2]=0;k=c[e>>2]|0;i=g;return k|0}if((c[d>>2]|0)<4096){c[(c[f>>2]|0)+8260>>2]=1;b=(c[h>>2]|0)+(c[d>>2]|0)+0|0;j=b+32|0;do{a[b>>0]=0;b=b+1|0}while((b|0)<(j|0))}j=c[f>>2]|0;if((c[h>>2]|0)==(c[f>>2]|0)){b=j+8192|0;h=(c[f>>2]|0)+0|0;j=b+32|0;do{a[b>>0]=a[h>>0]|0;b=b+1|0;h=h+1|0}while((b|0)<(j|0));c[(c[f>>2]|0)+8224>>2]=(c[f>>2]|0)+4096}else c[(c[f>>2]|0)+8224>>2]=j;k=(c[f>>2]|0)+8256|0;c[k>>2]=(c[k>>2]|0)+(c[d>>2]<<3);c[e>>2]=1;k=c[e>>2]|0;i=g;return k|0}function Ia(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;g=e+4|0;f=e;c[g>>2]=b;c[f>>2]=d;b=wa[c[a>>2]&3](c[a+4>>2]|0,c[g>>2]|0,c[f>>2]|0)|0;i=e;return b|0}function Ja(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;s=i;i=i+64|0;q=s+48|0;k=s+36|0;m=s+20|0;x=s+16|0;o=s+32|0;w=s+40|0;r=s+56|0;n=s+8|0;p=s+4|0;l=s+24|0;j=s+12|0;t=s+28|0;u=s;c[m>>2]=d;c[x>>2]=e;c[o>>2]=f;c[w>>2]=g;c[r>>2]=h;c[n>>2]=(c[w>>2]|0)+1;c[p>>2]=(c[o>>2]|0)+(c[n>>2]|0);c[l>>2]=c[x>>2]&c[w>>2];c[j>>2]=c[(c[r>>2]|0)+8248>>2]&8191;if((c[m>>2]|0)>=8?!(((c[(c[r>>2]|0)+8252>>2]|0)+(c[m>>2]<<3)|0)>>>0<(c[(c[r>>2]|0)+8256>>2]|0)>>>0):0){if((c[(c[r>>2]|0)+8256>>2]|0)>>>0<64){c[k>>2]=0;x=c[k>>2]|0;i=s;return x|0}while(1){h=c[r>>2]|0;if(!((c[(c[r>>2]|0)+8252>>2]|0)>>>0<64))break;x=h+8240|0;x=yb(c[x>>2]|0,c[x+4>>2]|0,c[(c[r>>2]|0)+8252>>2]|0)|0;a[(c[o>>2]|0)+(c[l>>2]|0)>>0]=x;x=(c[r>>2]|0)+8252|0;c[x>>2]=(c[x>>2]|0)+8;c[l>>2]=(c[l>>2]|0)+1;c[m>>2]=(c[m>>2]|0)+ -1}c[t>>2]=(c[h+8256>>2]|0)-(c[(c[r>>2]|0)+8252>>2]|0)>>3;if(((c[j>>2]|0)+(c[t>>2]|0)|0)>8191){c[u>>2]=8192-(c[j>>2]|0);Ab((c[o>>2]|0)+(c[l>>2]|0)|0,(c[r>>2]|0)+(c[j>>2]|0)|0,c[u>>2]|0)|0;c[t>>2]=(c[t>>2]|0)-(c[u>>2]|0);c[l>>2]=(c[l>>2]|0)+(c[u>>2]|0);c[m>>2]=(c[m>>2]|0)-(c[u>>2]|0);c[j>>2]=0}Ab((c[o>>2]|0)+(c[l>>2]|0)|0,(c[r>>2]|0)+(c[j>>2]|0)|0,c[t>>2]|0)|0;c[l>>2]=(c[l>>2]|0)+(c[t>>2]|0);c[m>>2]=(c[m>>2]|0)-(c[t>>2]|0);do if((c[l>>2]|0)>=(c[n>>2]|0)){w=c[o>>2]|0;x=c[n>>2]|0;c[q+0>>2]=c[b+0>>2];c[q+4>>2]=c[b+4>>2];x=Ma(q,w,x)|0;if((x|0)>=(c[n>>2]|0)){c[l>>2]=(c[l>>2]|0)-(c[n>>2]|0);Ab(c[o>>2]|0,c[p>>2]|0,c[l>>2]|0)|0;break}c[k>>2]=0;x=c[k>>2]|0;i=s;return x|0}while(0);while(1){if(((c[l>>2]|0)+(c[m>>2]|0)|0)<(c[n>>2]|0))break;c[t>>2]=(c[n>>2]|0)-(c[l>>2]|0);d=(c[r>>2]|0)+8228|0;w=(c[o>>2]|0)+(c[l>>2]|0)|0;x=c[t>>2]|0;c[q+0>>2]=c[d+0>>2];c[q+4>>2]=c[d+4>>2];x=Na(q,w,x)|0;if((x|0)<(c[t>>2]|0)){v=24;break}w=c[o>>2]|0;x=c[n>>2]|0;c[q+0>>2]=c[b+0>>2];c[q+4>>2]=c[b+4>>2];x=Ma(q,w,x)|0;if((x|0)<(c[t>>2]|0)){v=24;break}c[m>>2]=(c[m>>2]|0)-(c[t>>2]|0);c[l>>2]=0}if((v|0)==24){c[k>>2]=0;x=c[k>>2]|0;i=s;return x|0}d=(c[r>>2]|0)+8228|0;w=(c[o>>2]|0)+(c[l>>2]|0)|0;x=c[m>>2]|0;c[q+0>>2]=c[d+0>>2];c[q+4>>2]=c[d+4>>2];x=Na(q,w,x)|0;if((x|0)<(c[m>>2]|0)){c[k>>2]=0;x=c[k>>2]|0;i=s;return x|0}else{x=c[r>>2]|0;w=(c[r>>2]|0)+8228|0;c[q+0>>2]=c[w+0>>2];c[q+4>>2]=c[w+4>>2];Ga(x,q)|0;c[k>>2]=1;x=c[k>>2]|0;i=s;return x|0}}while(1){x=c[m>>2]|0;c[m>>2]=x+ -1;if((x|0)<=0){v=10;break}if((Ka(c[r>>2]|0)|0)==0){v=5;break}w=(La(c[r>>2]|0,8)|0)&255;x=c[l>>2]|0;c[l>>2]=x+1;a[(c[o>>2]|0)+x>>0]=w;if((c[l>>2]|0)!=(c[n>>2]|0))continue;w=c[o>>2]|0;x=c[n>>2]|0;c[q+0>>2]=c[b+0>>2];c[q+4>>2]=c[b+4>>2];x=Ma(q,w,x)|0;if((x|0)<(c[n>>2]|0)){v=8;break}c[l>>2]=0}if((v|0)==5){c[k>>2]=0;x=c[k>>2]|0;i=s;return x|0}else if((v|0)==8){c[k>>2]=0;x=c[k>>2]|0;i=s;return x|0}else if((v|0)==10){c[k>>2]=1;x=c[k>>2]|0;i=s;return x|0}return 0}function Ka(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;g=i;i=i+32|0;j=g+16|0;e=g+12|0;f=g+8|0;h=g+4|0;d=g;c[f>>2]=b;if((c[(c[f>>2]|0)+8256>>2]|0)>>>0>256){c[e>>2]=1;b=c[e>>2]|0;i=g;return b|0}b=c[f>>2]|0;if((c[(c[f>>2]|0)+8260>>2]|0)!=0){c[e>>2]=(c[b+8252>>2]|0)>>>0<=(c[(c[f>>2]|0)+8256>>2]|0)>>>0&1;b=c[e>>2]|0;i=g;return b|0}c[h>>2]=c[b+8224>>2];k=(c[f>>2]|0)+8228|0;b=c[h>>2]|0;c[j+0>>2]=c[k+0>>2];c[j+4>>2]=c[k+4>>2];c[d>>2]=Na(j,b,4096)|0;if((c[d>>2]|0)<0){c[e>>2]=0;k=c[e>>2]|0;i=g;return k|0}if((c[d>>2]|0)<4096){c[(c[f>>2]|0)+8260>>2]=1;b=(c[h>>2]|0)+(c[d>>2]|0)+0|0;j=b+32|0;do{a[b>>0]=0;b=b+1|0}while((b|0)<(j|0))}j=c[f>>2]|0;if((c[h>>2]|0)==(c[f>>2]|0)){b=j+8192|0;h=(c[f>>2]|0)+0|0;j=b+32|0;do{a[b>>0]=a[h>>0]|0;b=b+1|0;h=h+1|0}while((b|0)<(j|0));c[(c[f>>2]|0)+8224>>2]=(c[f>>2]|0)+4096}else c[(c[f>>2]|0)+8224>>2]=j;k=(c[f>>2]|0)+8256|0;c[k>>2]=(c[k>>2]|0)+(c[d>>2]<<3);c[e>>2]=1;k=c[e>>2]|0;i=g;return k|0}function La(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;e=i;i=i+16|0;g=e+8|0;f=e+4|0;d=e;c[g>>2]=a;c[f>>2]=b;db(c[g>>2]|0);a=(c[g>>2]|0)+8240|0;a=yb(c[a>>2]|0,c[a+4>>2]|0,c[(c[g>>2]|0)+8252>>2]|0)|0;c[d>>2]=a&c[128160+(c[f>>2]<<2)>>2];a=(c[g>>2]|0)+8252|0;c[a>>2]=(c[a>>2]|0)+(c[f>>2]|0);i=e;return c[d>>2]|0}function Ma(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;g=e+4|0;f=e;c[g>>2]=b;c[f>>2]=d;b=wa[c[a>>2]&3](c[a+4>>2]|0,c[g>>2]|0,c[f>>2]|0)|0;i=e;return b|0}function Na(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;g=e+4|0;f=e;c[g>>2]=b;c[f>>2]=d;b=wa[c[a>>2]&3](c[a+4>>2]|0,c[g>>2]|0,c[f>>2]|0)|0;i=e;return b|0}function Oa(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b+4|0;e=b;c[e>>2]=a;if((La(c[e>>2]|0,1)|0)!=0){c[d>>2]=17+(La(c[e>>2]|0,3)|0);e=c[d>>2]|0;i=b;return e|0}else{c[d>>2]=16;e=c[d>>2]|0;i=b;return e|0}return 0}function Pa(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;k=i;i=i+32|0;g=k+20|0;j=k+16|0;f=k+12|0;h=k+8|0;m=k+4|0;l=k;c[g>>2]=a;c[j>>2]=b;c[f>>2]=d;c[h>>2]=e;a=La(c[g>>2]|0,1)|0;c[c[f>>2]>>2]=a;c[c[j>>2]>>2]=0;c[c[h>>2]>>2]=0;if((c[c[f>>2]>>2]|0)!=0?(La(c[g>>2]|0,1)|0)!=0:0){i=k;return}c[m>>2]=(La(c[g>>2]|0,2)|0)+4;c[l>>2]=0;while(1){if((c[l>>2]|0)>=(c[m>>2]|0))break;b=La(c[g>>2]|0,4)|0;a=c[j>>2]|0;c[a>>2]=c[a>>2]|b<<(c[l>>2]<<2);c[l>>2]=(c[l>>2]|0)+1}a=c[j>>2]|0;c[a>>2]=(c[a>>2]|0)+1;if((c[c[f>>2]>>2]|0)!=0){i=k;return}a=La(c[g>>2]|0,1)|0;c[c[h>>2]>>2]=a;i=k;return}function Qa(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+96|0;k=g+72|0;l=g+32|0;p=g;q=g+64|0;h=g+68|0;o=g+80|0;n=g+56|0;j=g+40|0;m=g+8|0;f=g+4|0;c[p>>2]=a;c[q>>2]=b;c[h>>2]=d;c[o>>2]=e;qb(n,c[q>>2]|0,c[p>>2]|0,g+16|0);sb(m,c[o>>2]|0,c[c[h>>2]>>2]|0,j);c[l+0>>2]=c[n+0>>2];c[l+4>>2]=c[n+4>>2];c[k+0>>2]=c[m+0>>2];c[k+4>>2]=c[m+4>>2];c[f>>2]=Ra(l,k)|0;c[c[h>>2]>>2]=c[j+8>>2];i=g;return c[f>>2]|0}function Ra(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0;S=i;i=i+8656|0;o=S+8264|0;g=S+8620|0;p=S+8512|0;ta=S+8280|0;m=S+8492|0;ya=S+8344|0;Aa=S+8612|0;B=S+8500|0;t=S+8296|0;aa=S+8304|0;n=S+8308|0;h=S+8312|0;Z=S+8316|0;C=S+8320|0;D=S+8336|0;ca=S+8643|0;ea=S+8640|0;N=S+8352|0;Q=S+8400|0;U=S+8404|0;k=S;l=S+8412|0;xa=S+8416|0;O=S+8420|0;R=S+8432|0;P=S+8444|0;f=S+8456|0;T=S+8592|0;H=S+8608|0;E=S+8616|0;F=S+8624|0;va=S+8632|0;ja=S+8584|0;j=S+8504|0;ua=S+8508|0;W=S+8636|0;wa=S+8516|0;ia=S+8520|0;ga=S+8524|0;ha=S+8641|0;V=S+8532|0;L=S+8408|0;M=S+8646|0;ba=S+8544|0;da=S+8548|0;ka=S+8645|0;ra=S+8556|0;oa=S+8560|0;ma=S+8564|0;pa=S+8568|0;qa=S+8572|0;_=S+8576|0;q=S+8288|0;z=S+8580|0;s=S+8340|0;fa=S+8644|0;la=S+8480|0;sa=S+8588|0;A=S+8484|0;K=S+8642|0;I=S+8536|0;G=S+8284|0;J=S+8488|0;r=S+8628|0;u=S+8604|0;v=S+8292|0;w=S+8552|0;x=S+8540|0;y=S+8528|0;X=S+8300|0;Y=S+8496|0;c[p>>2]=1;c[m>>2]=0;c[ya>>2]=0;c[Aa>>2]=0;c[t>>2]=0;c[C+0>>2]=c[20];c[C+4>>2]=c[21];c[C+8>>2]=c[22];c[C+12>>2]=c[23];c[D>>2]=0;a[ca>>0]=0;a[ea>>0]=0;c[Q>>2]=0;c[U>>2]=0;c[o+0>>2]=c[b+0>>2];c[o+4>>2]=c[b+4>>2];if((Ga(k,o)|0)==0){c[g>>2]=0;b=c[g>>2]|0;i=S;return b|0}c[Aa>>2]=Oa(k)|0;c[B>>2]=(1<<c[Aa>>2])-16;c[aa>>2]=1<<c[Aa>>2];c[n>>2]=(c[aa>>2]|0)-1;c[h>>2]=tb((c[aa>>2]|0)+4248|0)|0;if((c[h>>2]|0)==0)c[p>>2]=0;c[Z>>2]=(c[h>>2]|0)+(c[aa>>2]|0);do if((c[p>>2]|0)!=0){c[Q>>2]=tb(24576)|0;c[U>>2]=tb(24576)|0;if((c[Q>>2]|0)!=0?(c[U>>2]|0)!=0:0)break;c[p>>2]=0}while(0);a:while(1){if((c[ya>>2]|0)!=0)break;if((c[p>>2]|0)==0)break;c[l>>2]=0;c[O+0>>2]=c[24];c[O+4>>2]=c[25];c[O+8>>2]=c[26];c[R+0>>2]=0;c[R+4>>2]=0;c[R+8>>2]=0;c[P+0>>2]=c[28];c[P+4>>2]=c[29];c[P+8>>2]=c[30];c[f+0>>2]=c[32];c[f+4>>2]=c[33];c[f+8>>2]=c[34];c[f+12>>2]=c[35];c[f+16>>2]=c[36];c[f+20>>2]=c[37];c[T+0>>2]=0;c[T+4>>2]=0;c[T+8>>2]=0;c[ja>>2]=0;c[j>>2]=0;c[W>>2]=0;c[ia>>2]=0;c[ga>>2]=0;a[ha>>0]=0;c[V>>2]=0;c[L>>2]=0;a[M>>0]=0;c[ba>>2]=0;c[da>>2]=0;c[ta>>2]=0;while(1){if((c[ta>>2]|0)>=3)break;c[N+(c[ta>>2]<<4)+8>>2]=0;c[N+(c[ta>>2]<<4)+12>>2]=0;c[ta>>2]=(c[ta>>2]|0)+1}b:do if((Ka(k)|0)!=0){Pa(k,l,ya,xa);if((c[l>>2]|0)!=0){if((c[xa>>2]|0)!=0){Sa(k,(c[k+8252>>2]|0)+7&-8);Ca=c[l>>2]|0;Ba=c[m>>2]|0;Aa=c[h>>2]|0;b=c[n>>2]|0;c[o+0>>2]=c[e+0>>2];c[o+4>>2]=c[e+4>>2];c[p>>2]=Ja(o,Ca,Ba,Aa,b,k)|0;c[m>>2]=(c[m>>2]|0)+(c[l>>2]|0);break}c[ta>>2]=0;while(1){if((c[ta>>2]|0)>=3)break;Ca=(Ta(k)|0)+1|0;c[P+(c[ta>>2]<<2)>>2]=Ca;if((c[P+(c[ta>>2]<<2)>>2]|0)>=2){if((Ua((c[P+(c[ta>>2]<<2)>>2]|0)+2|0,(c[Q>>2]|0)+(c[ta>>2]<<11<<2)|0,k)|0)==0){za=24;break}if((Ua(26,(c[U>>2]|0)+(c[ta>>2]<<11<<2)|0,k)|0)==0){za=24;break}Ca=Va((c[U>>2]|0)+(c[ta>>2]<<11<<2)|0,k)|0;c[O+(c[ta>>2]<<2)>>2]=Ca;c[T+(c[ta>>2]<<2)>>2]=1}c[ta>>2]=(c[ta>>2]|0)+1}if((za|0)==24){za=0;c[p>>2]=0;break}if((Ka(k)|0)==0){na(152,o|0)|0;c[p>>2]=0;break}c[H>>2]=La(k,2)|0;Ca=La(k,4)|0;c[E>>2]=16+(Ca<<c[H>>2]);c[F>>2]=(1<<c[H>>2])-1;c[va>>2]=(c[E>>2]|0)+(48<<c[H>>2]);c[j>>2]=tb(c[P>>2]|0)|0;if((c[j>>2]|0)==0){c[p>>2]=0;break}c[ta>>2]=0;while(1){if((c[ta>>2]|0)>=(c[P>>2]|0))break;Ca=(La(k,2)|0)<<1&255;a[(c[j>>2]|0)+(c[ta>>2]|0)>>0]=Ca;c[ta>>2]=(c[ta>>2]|0)+1}if((Wa(c[P>>2]<<6,ua,ja,k)|0)!=0?(Wa(c[P+8>>2]<<2,wa,W,k)|0)!=0:0){Xa(N,256,c[ua>>2]|0);Xa(N+16|0,704,c[P+4>>2]|0);Xa(N+32|0,c[va>>2]|0,c[wa>>2]|0);c[ta>>2]=0;while(1){if((c[ta>>2]|0)>=3)break;if((Ya(N+(c[ta>>2]<<4)|0,k)|0)==0){za=40;break}c[ta>>2]=(c[ta>>2]|0)+1}if((za|0)==40){za=0;c[p>>2]=0;break}c[ga>>2]=c[ja>>2];c[L>>2]=c[W>>2];a[ka>>0]=a[(c[j>>2]|0)+(c[R>>2]|0)>>0]|0;c[ba>>2]=c[200+((d[ka>>0]|0)<<2)>>2];c[da>>2]=c[200+((d[ka>>0]|0)+1<<2)>>2];c[ra>>2]=c[c[N+28>>2]>>2];c:while(1){if((c[l>>2]|0)<=0){za=97;break}if((Ka(k)|0)==0){za=45;break}if((c[O+4>>2]|0)==0){Za(c[P+4>>2]|0,c[Q>>2]|0,1,R,f,T,k);c[O+4>>2]=Va((c[U>>2]|0)+8192|0,k)|0;c[ra>>2]=c[(c[N+28>>2]|0)+(c[R+4>>2]<<2)>>2]}Ca=O+4|0;c[Ca>>2]=(c[Ca>>2]|0)+ -1;c[oa>>2]=_a(c[ra>>2]|0,k)|0;c[ma>>2]=c[oa>>2]>>6;if((c[ma>>2]|0)>=2){c[ma>>2]=(c[ma>>2]|0)-2;c[z>>2]=-1}else c[z>>2]=0;c[pa>>2]=(c[232+(c[ma>>2]<<2)>>2]|0)+(c[oa>>2]>>3&7);c[qa>>2]=(c[272+(c[ma>>2]<<2)>>2]|0)+(c[oa>>2]&7);Ca=c[312+(c[pa>>2]<<3)>>2]|0;c[_>>2]=Ca+(La(k,c[316+(c[pa>>2]<<3)>>2]|0)|0);Ca=c[504+(c[qa>>2]<<3)>>2]|0;c[q>>2]=Ca+(La(k,c[508+(c[qa>>2]<<3)>>2]|0)|0);c[la>>2]=0;while(1){if((c[la>>2]|0)>=(c[_>>2]|0))break;if((Ka(k)|0)==0){za=54;break c}if((c[O>>2]|0)==0){Za(c[P>>2]|0,c[Q>>2]|0,0,R,f,T,k);c[O>>2]=Va(c[U>>2]|0,k)|0;c[ia>>2]=c[R>>2]<<6;c[ga>>2]=(c[ja>>2]|0)+(c[ia>>2]|0);a[ka>>0]=a[(c[j>>2]|0)+(c[R>>2]|0)>>0]|0;c[ba>>2]=c[200+((d[ka>>0]|0)<<2)>>2];c[da>>2]=c[200+((d[ka>>0]|0)+1<<2)>>2]}a[fa>>0]=d[696+((c[ba>>2]|0)+(d[ca>>0]|0))>>0]|0|(d[696+((c[da>>2]|0)+(d[ea>>0]|0))>>0]|0);a[ha>>0]=a[(c[ga>>2]|0)+(d[fa>>0]|0)>>0]|0;c[O>>2]=(c[O>>2]|0)+ -1;a[ea>>0]=a[ca>>0]|0;a[ca>>0]=_a(c[(c[N+12>>2]|0)+((d[ha>>0]|0)<<2)>>2]|0,k)|0;a[(c[h>>2]|0)+(c[m>>2]&c[n>>2])>>0]=a[ca>>0]|0;if((c[m>>2]&c[n>>2]|0)==(c[n>>2]|0)){Ba=c[h>>2]|0;Ca=c[aa>>2]|0;c[o+0>>2]=c[e+0>>2];c[o+4>>2]=c[e+4>>2];if((Ma(o,Ba,Ca)|0)<0){za=59;break c}}c[m>>2]=(c[m>>2]|0)+1;c[la>>2]=(c[la>>2]|0)+1}c[l>>2]=(c[l>>2]|0)-(c[_>>2]|0);if((c[l>>2]|0)<=0){za=97;break}do if((c[z>>2]|0)<0){if((Ka(k)|0)==0){za=64;break c}if((c[O+8>>2]|0)==0){Za(c[P+8>>2]|0,c[Q>>2]|0,2,R,f,T,k);c[O+8>>2]=Va((c[U>>2]|0)+16384|0,k)|0;a[M>>0]=c[R+8>>2];c[V>>2]=c[R+8>>2]<<2;c[L>>2]=(c[W>>2]|0)+(c[V>>2]|0)}Ca=O+8|0;c[Ca>>2]=(c[Ca>>2]|0)+ -1;if((c[q>>2]|0)>4)Aa=3;else Aa=(c[q>>2]|0)-2|0;a[K>>0]=Aa;a[M>>0]=a[(c[L>>2]|0)+(d[K>>0]|0)>>0]|0;c[z>>2]=_a(c[(c[N+44>>2]|0)+((d[M>>0]|0)<<2)>>2]|0,k)|0;if((c[z>>2]|0)<(c[E>>2]|0))break;c[z>>2]=(c[z>>2]|0)-(c[E>>2]|0);c[G>>2]=c[z>>2]&c[F>>2];c[z>>2]=c[z>>2]>>c[H>>2];c[I>>2]=(c[z>>2]>>1)+1;c[J>>2]=(2+(c[z>>2]&1)<<c[I>>2])-4;Ba=c[E>>2]|0;Ca=c[J>>2]|0;Ca=Ca+(La(k,c[I>>2]|0)|0)|0;c[z>>2]=Ba+(Ca<<c[H>>2])+(c[G>>2]|0)}while(0);c[s>>2]=$a(c[z>>2]|0,C,c[D>>2]|0)|0;if((c[s>>2]|0)<0){za=72;break}do if((c[m>>2]|0)<(c[B>>2]|0)){if((c[t>>2]|0)==(c[B>>2]|0)){za=76;break}c[t>>2]=c[m>>2]}else za=76;while(0);if((za|0)==76){za=0;c[t>>2]=c[B>>2]}c[A>>2]=(c[h>>2]|0)+(c[m>>2]&c[n>>2]);d:do if((c[s>>2]|0)>(c[t>>2]|0)){if(!((c[q>>2]|0)>=4&(c[q>>2]|0)<=24)){za=85;break c}c[r>>2]=c[2488+(c[q>>2]<<2)>>2];c[u>>2]=(c[s>>2]|0)-(c[t>>2]|0)-1;c[v>>2]=c[2592+(c[q>>2]<<2)>>2];c[w>>2]=(1<<c[v>>2])-1;c[x>>2]=c[u>>2]&c[w>>2];c[y>>2]=c[u>>2]>>c[v>>2];Ca=$(c[x>>2]|0,c[q>>2]|0)|0;c[r>>2]=(c[r>>2]|0)+Ca;if((c[y>>2]|0)>=121){za=84;break c}c[X>>2]=2696+(c[r>>2]|0);c[Y>>2]=ab(c[A>>2]|0,c[X>>2]|0,c[q>>2]|0,c[y>>2]|0)|0;c[A>>2]=(c[A>>2]|0)+(c[Y>>2]|0);c[m>>2]=(c[m>>2]|0)+(c[Y>>2]|0);c[l>>2]=(c[l>>2]|0)-(c[Y>>2]|0);if(!((c[A>>2]|0)>>>0>=(c[Z>>2]|0)>>>0))break;Ba=c[h>>2]|0;Ca=c[aa>>2]|0;c[o+0>>2]=c[e+0>>2];c[o+4>>2]=c[e+4>>2];if((Ma(o,Ba,Ca)|0)<0){za=82;break c}Ab(c[h>>2]|0,c[Z>>2]|0,(c[A>>2]|0)-(c[Z>>2]|0)|0)|0}else{if((c[z>>2]|0)>0){c[C+((c[D>>2]&3)<<2)>>2]=c[s>>2];c[D>>2]=(c[D>>2]|0)+1}Aa=c[m>>2]|0;b=c[s>>2]|0;if((c[q>>2]|0)>(c[l>>2]|0)){za=89;break c}c[sa>>2]=(c[h>>2]|0)+(Aa-b&c[n>>2]);c[la>>2]=0;while(1){if((c[la>>2]|0)>=(c[q>>2]|0))break d;a[(c[h>>2]|0)+(c[m>>2]&c[n>>2])>>0]=a[(c[h>>2]|0)+((c[m>>2]|0)-(c[s>>2]|0)&c[n>>2])>>0]|0;if((c[m>>2]&c[n>>2]|0)==(c[n>>2]|0)){Ba=c[h>>2]|0;Ca=c[aa>>2]|0;c[o+0>>2]=c[e+0>>2];c[o+4>>2]=c[e+4>>2];if((Ma(o,Ba,Ca)|0)<0){za=94;break c}}c[m>>2]=(c[m>>2]|0)+1;c[l>>2]=(c[l>>2]|0)+ -1;c[la>>2]=(c[la>>2]|0)+1}}while(0);a[ca>>0]=a[(c[h>>2]|0)+((c[m>>2]|0)-1&c[n>>2])>>0]|0;a[ea>>0]=a[(c[h>>2]|0)+((c[m>>2]|0)-2&c[n>>2])>>0]|0}switch(za|0){case 45:{za=0;na(152,o|0)|0;c[p>>2]=0;break b};case 54:{za=0;na(152,o|0)|0;c[p>>2]=0;break b};case 59:{za=0;c[p>>2]=0;break b};case 64:{za=0;na(152,o|0)|0;c[p>>2]=0;break b};case 72:{za=0;c[p>>2]=0;break b};case 82:{za=0;c[p>>2]=0;break b};case 84:{za=0;b=c[s>>2]|0;Ba=c[q>>2]|0;Ca=c[l>>2]|0;c[o>>2]=c[m>>2];c[o+4>>2]=b;c[o+8>>2]=Ba;c[o+12>>2]=Ca;na(125480,o|0)|0;c[p>>2]=0;break b};case 85:{za=0;b=c[s>>2]|0;Ba=c[q>>2]|0;Ca=c[l>>2]|0;c[o>>2]=c[m>>2];c[o+4>>2]=b;c[o+8>>2]=Ba;c[o+12>>2]=Ca;na(125480,o|0)|0;c[p>>2]=0;break b};case 89:{za=0;Ba=c[q>>2]|0;Ca=c[l>>2]|0;c[o>>2]=Aa;c[o+4>>2]=b;c[o+8>>2]=Ba;c[o+12>>2]=Ca;na(125480,o|0)|0;c[p>>2]=0;break b};case 94:{za=0;c[p>>2]=0;break b};case 97:{za=0;c[m>>2]=c[m>>2]&1073741823;break b}}}c[p>>2]=0}}else{na(152,o|0)|0;c[p>>2]=0}while(0);if((c[j>>2]|0)!=0)ub(c[j>>2]|0);if((c[ja>>2]|0)!=0)ub(c[ja>>2]|0);if((c[W>>2]|0)!=0)ub(c[W>>2]|0);c[ta>>2]=0;while(1){if((c[ta>>2]|0)>=3)continue a;bb(N+(c[ta>>2]<<4)|0);c[ta>>2]=(c[ta>>2]|0)+1}}if((c[h>>2]|0)!=0){Ba=c[h>>2]|0;Ca=c[m>>2]&c[n>>2];c[o+0>>2]=c[e+0>>2];c[o+4>>2]=c[e+4>>2];if((Ma(o,Ba,Ca)|0)<0)c[p>>2]=0;ub(c[h>>2]|0)}if((c[Q>>2]|0)!=0)ub(c[Q>>2]|0);if((c[U>>2]|0)!=0)ub(c[U>>2]|0);c[g>>2]=c[p>>2];Ca=c[g>>2]|0;i=S;return Ca|0}function Sa(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;c[(c[e>>2]|0)+8252>>2]=c[f>>2];i=d;return}function Ta(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;i=i+16|0;d=b+8|0;e=b+4|0;f=b;c[e>>2]=a;if((La(c[e>>2]|0,1)|0)==0){c[d>>2]=0;f=c[d>>2]|0;i=b;return f|0}c[f>>2]=La(c[e>>2]|0,3)|0;if((c[f>>2]|0)==0){c[d>>2]=1;f=c[d>>2]|0;i=b;return f|0}else{e=La(c[e>>2]|0,c[f>>2]|0)|0;c[d>>2]=e+(1<<c[f>>2]);f=c[d>>2]|0;i=b;return f|0}return 0}function Ua(e,f,g){e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;o=i;i=i+112|0;j=o;n=o+8|0;m=o+60|0;p=o+76|0;q=o+12|0;k=o+16|0;h=o+64|0;s=o+72|0;l=o+80|0;A=o+84|0;D=o+88|0;B=o+24|0;r=o+40|0;C=o+4|0;t=o+56|0;x=o+94|0;y=o+68|0;z=o+28|0;u=o+32|0;v=o+20|0;w=o+92|0;c[m>>2]=e;c[p>>2]=f;c[q>>2]=g;c[k>>2]=1;c[h>>2]=0;c[l>>2]=0;e=c[m>>2]|0;c[l>>2]=nb(e,((e|0)<0)<<31>>31,1)|0;if((c[l>>2]|0)==0){c[n>>2]=0;e=c[n>>2]|0;i=o;return e|0}if((Ka(c[q>>2]|0)|0)==0){na(127808,j|0)|0;c[n>>2]=0;e=c[n>>2]|0;i=o;return e|0}c[s>>2]=La(c[q>>2]|0,2)|0;do if((c[s>>2]|0)==1){c[D>>2]=(c[m>>2]|0)-1;c[B>>2]=0;c[r+0>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;c[r+12>>2]=0;c[C>>2]=(La(c[q>>2]|0,2)|0)+1;while(1){if((c[D>>2]|0)==0)break;c[D>>2]=c[D>>2]>>1;c[B>>2]=(c[B>>2]|0)+1}xb(c[l>>2]|0,0,c[m>>2]|0)|0;c[A>>2]=0;while(1){if((c[A>>2]|0)>=(c[C>>2]|0))break;e=La(c[q>>2]|0,c[B>>2]|0)|0;c[r+(c[A>>2]<<2)>>2]=(e|0)%(c[m>>2]|0)|0;a[(c[l>>2]|0)+(c[r+(c[A>>2]<<2)>>2]|0)>>0]=2;c[A>>2]=(c[A>>2]|0)+1}a[(c[l>>2]|0)+(c[r>>2]|0)>>0]=1;s=c[C>>2]|0;if((s|0)==3){if((c[r>>2]|0)!=(c[r+4>>2]|0)?(c[r>>2]|0)!=(c[r+8>>2]|0):0)q=(c[r+4>>2]|0)!=(c[r+8>>2]|0);else q=0;c[k>>2]=q&1;break}else if((s|0)==2){c[k>>2]=(c[r>>2]|0)!=(c[r+4>>2]|0)&1;a[(c[l>>2]|0)+(c[r+4>>2]|0)>>0]=1;break}else if((s|0)==4){if(((((c[r>>2]|0)!=(c[r+4>>2]|0)?(c[r>>2]|0)!=(c[r+8>>2]|0):0)?(c[r>>2]|0)!=(c[r+12>>2]|0):0)?(c[r+4>>2]|0)!=(c[r+8>>2]|0):0)?(c[r+4>>2]|0)!=(c[r+12>>2]|0):0)s=(c[r+8>>2]|0)!=(c[r+12>>2]|0);else s=0;c[k>>2]=s&1;if((La(c[q>>2]|0,1)|0)!=0){a[(c[l>>2]|0)+(c[r+8>>2]|0)>>0]=3;a[(c[l>>2]|0)+(c[r+12>>2]|0)>>0]=3;break}else{a[(c[l>>2]|0)+(c[r>>2]|0)>>0]=2;break}}else break}else{A=x+0|0;r=A+18|0;do{a[A>>0]=0;A=A+1|0}while((A|0)<(r|0));c[y>>2]=32;c[z>>2]=0;c[t>>2]=c[s>>2];while(1){if((c[t>>2]|0)>=18)break;if((c[y>>2]|0)<=0)break;c[u>>2]=d[127920+(c[t>>2]|0)>>0];c[v>>2]=127856;db(c[q>>2]|0);e=(c[q>>2]|0)+8240|0;e=yb(c[e>>2]|0,c[e+4>>2]|0,c[(c[q>>2]|0)+8252>>2]|0)|0;c[v>>2]=(c[v>>2]|0)+((e&15)<<2);e=(c[q>>2]|0)+8252|0;c[e>>2]=(c[e>>2]|0)+(d[c[v>>2]>>0]|0);a[w>>0]=b[(c[v>>2]|0)+2>>1];a[x+(c[u>>2]|0)>>0]=a[w>>0]|0;if((d[w>>0]|0|0)!=0){c[y>>2]=(c[y>>2]|0)-(32>>(d[w>>0]|0));c[z>>2]=(c[z>>2]|0)+1}c[t>>2]=(c[t>>2]|0)+1}if((c[z>>2]|0)!=1?(c[y>>2]|0)!=0:0)q=0;else q=(hb(x,c[m>>2]|0,c[l>>2]|0,c[q>>2]|0)|0)!=0;c[k>>2]=q&1}while(0);if((c[k>>2]|0)!=0?(c[h>>2]=jb(c[p>>2]|0,8,c[l>>2]|0,c[m>>2]|0)|0,(c[h>>2]|0)==0):0){na(127944,j|0)|0;ib(c[l>>2]|0,c[m>>2]|0)}ub(c[l>>2]|0);c[n>>2]=c[h>>2];e=c[n>>2]|0;i=o;return e|0}function Va(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;h=d+12|0;f=d+8|0;g=d+4|0;e=d;c[h>>2]=a;c[f>>2]=b;c[g>>2]=_a(c[h>>2]|0,c[f>>2]|0)|0;c[e>>2]=c[127604+(c[g>>2]<<3)>>2];a=c[127600+(c[g>>2]<<3)>>2]|0;a=a+(La(c[f>>2]|0,c[e>>2]|0)|0)|0;i=d;return a|0}function Wa(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;n=i;i=i+64|0;h=n;m=n+4|0;k=n+12|0;t=n+8|0;j=n+24|0;o=n+16|0;g=n+20|0;u=n+28|0;r=n+32|0;l=n+36|0;q=n+40|0;p=n+44|0;s=n+48|0;c[k>>2]=b;c[t>>2]=d;c[j>>2]=e;c[o>>2]=f;c[g>>2]=1;c[r>>2]=0;if((Ka(c[o>>2]|0)|0)==0){na(127552,h|0)|0;c[m>>2]=0;b=c[m>>2]|0;i=n;return b|0}b=(Ta(c[o>>2]|0)|0)+1|0;c[c[t>>2]>>2]=b;b=tb(c[k>>2]|0)|0;c[c[j>>2]>>2]=b;if((c[c[j>>2]>>2]|0)==0){c[m>>2]=0;b=c[m>>2]|0;i=n;return b|0}if((c[c[t>>2]>>2]|0)<=1){xb(c[c[j>>2]>>2]|0,0,c[k>>2]|0)|0;c[m>>2]=1;b=c[m>>2]|0;i=n;return b|0}c[u>>2]=La(c[o>>2]|0,1)|0;if((c[u>>2]|0)!=0)c[r>>2]=(La(c[o>>2]|0,4)|0)+1;c[l>>2]=tb(8192)|0;if((c[l>>2]|0)==0){c[m>>2]=0;b=c[m>>2]|0;i=n;return b|0}do if((Ua((c[c[t>>2]>>2]|0)+(c[r>>2]|0)|0,c[l>>2]|0,c[o>>2]|0)|0)!=0){c[q>>2]=0;a:while(1){f=c[o>>2]|0;if((c[q>>2]|0)>=(c[k>>2]|0)){o=26;break}if((Ka(f)|0)==0){o=16;break}c[p>>2]=_a(c[l>>2]|0,c[o>>2]|0)|0;if((c[p>>2]|0)==0){a[(c[c[j>>2]>>2]|0)+(c[q>>2]|0)>>0]=0;c[q>>2]=(c[q>>2]|0)+1;continue}f=c[p>>2]|0;if((c[p>>2]|0)>(c[r>>2]|0)){a[(c[c[j>>2]>>2]|0)+(c[q>>2]|0)>>0]=f-(c[r>>2]|0);c[q>>2]=(c[q>>2]|0)+1;continue}c[s>>2]=1+(1<<f)+(La(c[o>>2]|0,c[p>>2]|0)|0);while(1){b=(c[s>>2]|0)+ -1|0;c[s>>2]=b;if((b|0)==0)continue a;if((c[q>>2]|0)>=(c[k>>2]|0)){o=23;break a}a[(c[c[j>>2]>>2]|0)+(c[q>>2]|0)>>0]=0;c[q>>2]=(c[q>>2]|0)+1}}if((o|0)==16){na(127552,h|0)|0;c[g>>2]=0;break}else if((o|0)==23){c[g>>2]=0;break}else if((o|0)==26){if((La(f,1)|0)==0)break;fb(c[c[j>>2]>>2]|0,c[k>>2]|0);break}}else c[g>>2]=0;while(0);ub(c[l>>2]|0);c[m>>2]=c[g>>2];b=c[m>>2]|0;i=n;return b|0}function Xa(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;h=e+4|0;g=e;c[f>>2]=a;c[h>>2]=b;c[g>>2]=d;c[c[f>>2]>>2]=c[h>>2];c[(c[f>>2]|0)+4>>2]=c[g>>2];a=tb(c[g>>2]<<11<<2)|0;c[(c[f>>2]|0)+8>>2]=a;a=tb(c[g>>2]<<2)|0;c[(c[f>>2]|0)+12>>2]=a;i=e;return}function Ya(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+32|0;d=e+20|0;g=e+16|0;j=e+12|0;h=e+8|0;k=e+4|0;f=e;c[g>>2]=a;c[j>>2]=b;c[f>>2]=c[(c[g>>2]|0)+8>>2];c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[(c[g>>2]|0)+4>>2]|0)){b=6;break}c[(c[(c[g>>2]|0)+12>>2]|0)+(c[h>>2]<<2)>>2]=c[f>>2];c[k>>2]=Ua(c[c[g>>2]>>2]|0,c[f>>2]|0,c[j>>2]|0)|0;c[f>>2]=(c[f>>2]|0)+(c[k>>2]<<2);if((c[k>>2]|0)==0){b=4;break}c[h>>2]=(c[h>>2]|0)+1}if((b|0)==4){c[d>>2]=0;a=c[d>>2]|0;i=e;return a|0}else if((b|0)==6){c[d>>2]=1;a=c[d>>2]|0;i=e;return a|0}return 0}function Za(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;o=i;i=i+48|0;j=o+36|0;s=o+16|0;l=o;k=o+28|0;u=o+32|0;t=o+40|0;r=o+12|0;m=o+24|0;n=o+20|0;q=o+8|0;p=o+4|0;c[j>>2]=a;c[s>>2]=b;c[l>>2]=d;c[k>>2]=e;c[u>>2]=f;c[t>>2]=g;c[r>>2]=h;c[m>>2]=(c[u>>2]|0)+(c[l>>2]<<1<<2);c[n>>2]=(c[t>>2]|0)+(c[l>>2]<<2);c[q>>2]=_a((c[s>>2]|0)+(c[l>>2]<<11<<2)|0,c[r>>2]|0)|0;do if((c[q>>2]|0)!=0)if((c[q>>2]|0)==1){c[p>>2]=(c[(c[m>>2]|0)+(((c[c[n>>2]>>2]|0)-1&1)<<2)>>2]|0)+1;break}else{c[p>>2]=(c[q>>2]|0)-2;break}else c[p>>2]=c[(c[m>>2]|0)+((c[c[n>>2]>>2]&1)<<2)>>2];while(0);if((c[p>>2]|0)>=(c[j>>2]|0))c[p>>2]=(c[p>>2]|0)-(c[j>>2]|0);c[(c[k>>2]|0)+(c[l>>2]<<2)>>2]=c[p>>2];c[(c[m>>2]|0)+((c[c[n>>2]>>2]&1)<<2)>>2]=c[p>>2];u=c[n>>2]|0;c[u>>2]=(c[u>>2]|0)+1;i=o;return}function _a(f,g){f=f|0;g=g|0;var h=0,j=0,k=0,l=0;h=i;i=i+16|0;j=h+8|0;k=h+4|0;l=h;c[j>>2]=f;c[k>>2]=g;db(c[k>>2]|0);f=(c[k>>2]|0)+8240|0;f=yb(c[f>>2]|0,c[f+4>>2]|0,c[(c[k>>2]|0)+8252>>2]|0)|0;c[j>>2]=(c[j>>2]|0)+((f&255)<<2);c[l>>2]=(d[c[j>>2]>>0]|0)-8;if((c[l>>2]|0)<=0){l=c[j>>2]|0;l=a[l>>0]|0;l=l&255;f=c[k>>2]|0;f=f+8252|0;k=c[f>>2]|0;l=k+l|0;c[f>>2]=l;f=c[j>>2]|0;f=f+2|0;f=b[f>>1]|0;f=f&65535;i=h;return f|0}f=(c[k>>2]|0)+8252|0;c[f>>2]=(c[f>>2]|0)+8;c[j>>2]=(c[j>>2]|0)+((e[(c[j>>2]|0)+2>>1]|0)<<2);f=(c[k>>2]|0)+8240|0;f=yb(c[f>>2]|0,c[f+4>>2]|0,c[(c[k>>2]|0)+8252>>2]|0)|0;c[j>>2]=(c[j>>2]|0)+((f&(1<<c[l>>2])-1)<<2);l=c[j>>2]|0;l=a[l>>0]|0;l=l&255;f=c[k>>2]|0;f=f+8252|0;k=c[f>>2]|0;l=k+l|0;c[f>>2]=l;f=c[j>>2]|0;f=f+2|0;f=b[f>>1]|0;f=f&65535;i=h;return f|0}function $a(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;g=e+12|0;j=e+8|0;h=e+4|0;f=e;c[g>>2]=a;c[j>>2]=b;c[h>>2]=d;d=c[g>>2]|0;if((c[g>>2]|0)<16){c[h>>2]=(c[h>>2]|0)+(c[127424+(d<<2)>>2]|0);c[h>>2]=c[h>>2]&3;c[f>>2]=(c[(c[j>>2]|0)+(c[h>>2]<<2)>>2]|0)+(c[127488+(c[g>>2]<<2)>>2]|0);a=c[f>>2]|0;i=e;return a|0}else{c[f>>2]=d-16+1;a=c[f>>2]|0;i=e;return a|0}return 0}function ab(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;m=i;i=i+48|0;h=m+4|0;q=m+16|0;n=m+36|0;t=m;s=m+32|0;o=m+40|0;l=m+44|0;r=m+24|0;g=m+20|0;p=m+8|0;j=m+12|0;k=m+28|0;c[h>>2]=b;c[q>>2]=d;c[n>>2]=e;c[t>>2]=f;c[s>>2]=c[125560+((c[t>>2]|0)*12|0)>>2];c[o>>2]=c[125568+((c[t>>2]|0)*12|0)>>2];c[l>>2]=c[125564+((c[t>>2]|0)*12|0)>>2];if((c[l>>2]|0)<12)f=0;else f=(c[l>>2]|0)-11|0;c[r>>2]=f;c[g>>2]=0;c[p>>2]=0;if((c[r>>2]|0)>(c[n>>2]|0))c[r>>2]=c[n>>2];while(1){if((a[c[s>>2]>>0]|0)==0)break;b=c[s>>2]|0;c[s>>2]=b+1;b=a[b>>0]|0;t=c[g>>2]|0;c[g>>2]=t+1;a[(c[h>>2]|0)+t>>0]=b}c[q>>2]=(c[q>>2]|0)+(c[r>>2]|0);c[n>>2]=(c[n>>2]|0)-(c[r>>2]|0);if((c[l>>2]|0)<=9)c[n>>2]=(c[n>>2]|0)-(c[l>>2]|0);while(1){if((c[p>>2]|0)>=(c[n>>2]|0))break;b=c[p>>2]|0;c[p>>2]=b+1;b=a[(c[q>>2]|0)+b>>0]|0;t=c[g>>2]|0;c[g>>2]=t+1;a[(c[h>>2]|0)+t>>0]=b}c[j>>2]=(c[h>>2]|0)+((c[g>>2]|0)-(c[n>>2]|0));a:do if((c[l>>2]|0)!=10){if((c[l>>2]|0)==11)while(1){if((c[n>>2]|0)<=0)break a;c[k>>2]=cb(c[j>>2]|0,c[n>>2]|0)|0;c[j>>2]=(c[j>>2]|0)+(c[k>>2]|0);c[n>>2]=(c[n>>2]|0)-(c[k>>2]|0)}}else cb(c[j>>2]|0,c[n>>2]|0)|0;while(0);while(1){if((a[c[o>>2]>>0]|0)==0)break;b=c[o>>2]|0;c[o>>2]=b+1;b=a[b>>0]|0;t=c[g>>2]|0;c[g>>2]=t+1;a[(c[h>>2]|0)+t>>0]=b}i=m;return c[g>>2]|0}function bb(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;if((c[(c[d>>2]|0)+8>>2]|0)!=0)ub(c[(c[d>>2]|0)+8>>2]|0);if((c[(c[d>>2]|0)+12>>2]|0)==0){i=b;return}ub(c[(c[d>>2]|0)+12>>2]|0);i=b;return}function cb(b,e){b=b|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f+8|0;h=f+4|0;c[h>>2]=b;c[f>>2]=e;e=d[c[h>>2]>>0]|0;if((d[c[h>>2]>>0]|0|0)>=192){h=c[h>>2]|0;if((e|0)<224){b=h+1|0;a[b>>0]=(d[b>>0]|0)^32;c[g>>2]=2;b=c[g>>2]|0;i=f;return b|0}else{b=h+2|0;a[b>>0]=(d[b>>0]|0)^5;c[g>>2]=3;b=c[g>>2]|0;i=f;return b|0}}else{if((e|0)>=97?(d[c[h>>2]>>0]|0|0)<=122:0){b=c[h>>2]|0;a[b>>0]=(d[b>>0]|0)^32}c[g>>2]=1;b=c[g>>2]|0;i=f;return b|0}return 0}function db(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;if(!((c[(c[d>>2]|0)+8252>>2]|0)>>>0>=40)){i=b;return}eb(c[d>>2]|0);i=b;return}function eb(a){a=a|0;var b=0,e=0,f=0,g=0,h=0;b=i;i=i+16|0;e=b;c[e>>2]=a;while(1){if(!((c[(c[e>>2]|0)+8252>>2]|0)>>>0>=8))break;g=(c[e>>2]|0)+8240|0;a=g;a=yb(c[a>>2]|0,c[a+4>>2]|0,8)|0;c[g>>2]=a;c[g+4>>2]=D;g=zb(d[(c[e>>2]|0)+(c[(c[e>>2]|0)+8248>>2]&8191)>>0]|0|0,0,56)|0;a=(c[e>>2]|0)+8240|0;h=a;f=c[h+4>>2]|D;c[a>>2]=c[h>>2]|g;c[a+4>>2]=f;a=(c[e>>2]|0)+8248|0;c[a>>2]=(c[a>>2]|0)+1;a=(c[e>>2]|0)+8252|0;c[a>>2]=(c[a>>2]|0)-8;a=(c[e>>2]|0)+8256|0;c[a>>2]=(c[a>>2]|0)-8}i=b;return}function fb(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+272|0;g=f+8|0;l=f+4|0;k=f+16|0;h=f;j=f+12|0;c[g>>2]=b;c[l>>2]=e;c[h>>2]=0;while(1){if((c[h>>2]|0)>=256)break;a[k+(c[h>>2]|0)>>0]=c[h>>2];c[h>>2]=(c[h>>2]|0)+1}c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[l>>2]|0))break;a[j>>0]=a[(c[g>>2]|0)+(c[h>>2]|0)>>0]|0;a[(c[g>>2]|0)+(c[h>>2]|0)>>0]=a[k+(d[j>>0]|0)>>0]|0;if((a[j>>0]|0)!=0)gb(k,a[j>>0]|0);c[h>>2]=(c[h>>2]|0)+1}i=f;return}function gb(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;h=i;i=i+16|0;g=h;k=h+6|0;f=h+5|0;j=h+4|0;c[g>>2]=b;a[k>>0]=e;a[f>>0]=a[(c[g>>2]|0)+(d[k>>0]|0)>>0]|0;a[j>>0]=a[k>>0]|0;while(1){if((a[j>>0]|0)==0)break;a[(c[g>>2]|0)+(d[j>>0]|0)>>0]=a[(c[g>>2]|0)+((d[j>>0]|0)-1)>>0]|0;a[j>>0]=(a[j>>0]|0)+ -1<<24>>24}a[c[g>>2]>>0]=a[f>>0]|0;i=h;return}function hb(e,f,g,h){e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;n=i;i=i+192|0;k=n;j=n+32|0;x=n+12|0;p=n+36|0;m=n+16|0;t=n+40|0;l=n+44|0;y=n+184|0;u=n+8|0;z=n+185|0;o=n+24|0;v=n+56|0;q=n+4|0;w=n+186|0;r=n+28|0;A=n+20|0;B=n+48|0;s=n+187|0;c[x>>2]=e;c[p>>2]=f;c[m>>2]=g;c[t>>2]=h;c[l>>2]=0;a[y>>0]=8;c[u>>2]=0;a[z>>0]=0;c[o>>2]=32768;if((jb(v,5,c[x>>2]|0,18)|0)==0){na(128e3,k|0)|0;ib(c[x>>2]|0,18);c[j>>2]=0;e=c[j>>2]|0;i=n;return e|0}while(1){if((c[l>>2]|0)>=(c[p>>2]|0)){q=20;break}if((c[o>>2]|0)<=0){q=20;break}c[q>>2]=v;if((Ka(c[t>>2]|0)|0)==0){q=6;break}db(c[t>>2]|0);e=(c[t>>2]|0)+8240|0;e=yb(c[e>>2]|0,c[e+4>>2]|0,c[(c[t>>2]|0)+8252>>2]|0)|0;c[q>>2]=(c[q>>2]|0)+((e&31)<<2);e=(c[t>>2]|0)+8252|0;c[e>>2]=(c[e>>2]|0)+(d[c[q>>2]>>0]|0);a[w>>0]=b[(c[q>>2]|0)+2>>1];if((d[w>>0]|0|0)<16){c[u>>2]=0;f=a[w>>0]|0;e=c[l>>2]|0;c[l>>2]=e+1;a[(c[m>>2]|0)+e>>0]=f;if((d[w>>0]|0|0)==0)continue;a[y>>0]=a[w>>0]|0;c[o>>2]=(c[o>>2]|0)-(32768>>(d[w>>0]|0));continue}c[r>>2]=(d[w>>0]|0)-14;a[s>>0]=0;if((d[w>>0]|0|0)==16)a[s>>0]=a[y>>0]|0;if((d[z>>0]|0|0)!=(d[s>>0]|0|0)){c[u>>2]=0;a[z>>0]=a[s>>0]|0}c[A>>2]=c[u>>2];if((c[u>>2]|0)>0){c[u>>2]=(c[u>>2]|0)-2;c[u>>2]=c[u>>2]<<c[r>>2]}e=(La(c[t>>2]|0,c[r>>2]|0)|0)+3|0;c[u>>2]=(c[u>>2]|0)+e;c[B>>2]=(c[u>>2]|0)-(c[A>>2]|0);if(((c[l>>2]|0)+(c[B>>2]|0)|0)>(c[p>>2]|0)){q=17;break}xb((c[m>>2]|0)+(c[l>>2]|0)|0,(d[z>>0]|0)&255|0,c[B>>2]|0)|0;c[l>>2]=(c[l>>2]|0)+(c[B>>2]|0);if((d[z>>0]|0|0)==0)continue;c[o>>2]=(c[o>>2]|0)-(c[B>>2]<<15-(d[z>>0]|0))}if((q|0)==6){na(128064,k|0)|0;c[j>>2]=0;e=c[j>>2]|0;i=n;return e|0}else if((q|0)==17){c[j>>2]=0;e=c[j>>2]|0;i=n;return e|0}else if((q|0)==20)if((c[o>>2]|0)!=0){c[k>>2]=c[o>>2];na(128120,k|0)|0;c[j>>2]=0;e=c[j>>2]|0;i=n;return e|0}else{xb((c[m>>2]|0)+(c[l>>2]|0)|0,0,(c[p>>2]|0)-(c[l>>2]|0)|0)|0;c[j>>2]=1;e=c[j>>2]|0;i=n;return e|0}return 0}function ib(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0;f=i;i=i+16|0;e=f;h=f+8|0;g=f+4|0;c[h>>2]=a;c[g>>2]=b;while(1){a=c[g>>2]|0;c[g>>2]=a+ -1;if((a|0)<=0)break;a=c[h>>2]|0;c[h>>2]=a+1;c[e>>2]=d[a>>0];na(127992,e|0)|0}na(127120,e|0)|0;i=f;return}function jb(e,f,g,h){e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;m=i;i=i+208|0;A=m+200|0;l=m+104|0;s=m+84|0;u=m+88|0;C=m+72|0;B=m+100|0;y=m+196|0;j=m+180|0;p=m+188|0;n=m+92|0;z=m+192|0;w=m+4|0;o=m;r=m+96|0;v=m+76|0;k=m+80|0;x=m+176|0;t=m+184|0;q=m+8|0;D=m+112|0;c[s>>2]=e;c[u>>2]=f;c[C>>2]=g;c[B>>2]=h;g=q+0|0;h=g+64|0;do{c[g>>2]=0;g=g+4|0}while((g|0)<(h|0));c[t>>2]=tb(c[B>>2]<<2)|0;if((c[t>>2]|0)==0){c[l>>2]=0;e=c[l>>2]|0;i=m;return e|0}c[n>>2]=0;while(1){if((c[n>>2]|0)>=(c[B>>2]|0))break;e=q+((d[(c[C>>2]|0)+(c[n>>2]|0)>>0]|0)<<2)|0;c[e>>2]=(c[e>>2]|0)+1;c[n>>2]=(c[n>>2]|0)+1}c[D+4>>2]=0;c[p>>2]=1;while(1){if((c[p>>2]|0)>=15)break;c[D+((c[p>>2]|0)+1<<2)>>2]=(c[D+(c[p>>2]<<2)>>2]|0)+(c[q+(c[p>>2]<<2)>>2]|0);c[p>>2]=(c[p>>2]|0)+1}c[n>>2]=0;while(1){if((c[n>>2]|0)>=(c[B>>2]|0))break;if((d[(c[C>>2]|0)+(c[n>>2]|0)>>0]|0|0)!=0){f=c[n>>2]|0;g=D+((d[(c[C>>2]|0)+(c[n>>2]|0)>>0]|0)<<2)|0;e=c[g>>2]|0;c[g>>2]=e+1;c[(c[t>>2]|0)+(e<<2)>>2]=f}c[n>>2]=(c[n>>2]|0)+1}c[j>>2]=c[s>>2];c[v>>2]=c[u>>2];c[k>>2]=1<<c[v>>2];c[x>>2]=c[k>>2];if((c[D+60>>2]|0)==1){a[y>>0]=0;b[y+2>>1]=c[c[t>>2]>>2];c[z>>2]=0;while(1){if((c[z>>2]|0)>=(c[x>>2]|0))break;e=(c[j>>2]|0)+(c[z>>2]<<2)|0;b[e+0>>1]=b[y+0>>1]|0;b[e+2>>1]=b[y+2>>1]|0;c[z>>2]=(c[z>>2]|0)+1}ub(c[t>>2]|0);c[l>>2]=c[x>>2];e=c[l>>2]|0;i=m;return e|0}c[z>>2]=0;c[n>>2]=0;c[p>>2]=1;c[w>>2]=2;while(1){if((c[p>>2]|0)>(c[u>>2]|0))break;while(1){B=c[p>>2]|0;if((c[q+(c[p>>2]<<2)>>2]|0)<=0)break;a[y>>0]=B;g=c[n>>2]|0;c[n>>2]=g+1;b[y+2>>1]=c[(c[t>>2]|0)+(g<<2)>>2];g=(c[j>>2]|0)+(c[z>>2]<<2)|0;f=c[w>>2]|0;e=c[k>>2]|0;b[A+0>>1]=b[y+0>>1]|0;b[A+2>>1]=b[y+2>>1]|0;kb(g,f,e,A);c[z>>2]=lb(c[z>>2]|0,c[p>>2]|0)|0;e=q+(c[p>>2]<<2)|0;c[e>>2]=(c[e>>2]|0)+ -1}c[p>>2]=B+1;c[w>>2]=c[w>>2]<<1}c[r>>2]=(c[x>>2]|0)-1;c[o>>2]=-1;c[p>>2]=(c[u>>2]|0)+1;c[w>>2]=2;while(1){if((c[p>>2]|0)>15)break;while(1){if((c[q+(c[p>>2]<<2)>>2]|0)<=0)break;if((c[z>>2]&c[r>>2]|0)!=(c[o>>2]|0)){c[j>>2]=(c[j>>2]|0)+(c[k>>2]<<2);c[v>>2]=mb(q,c[p>>2]|0,c[u>>2]|0)|0;c[k>>2]=1<<c[v>>2];c[x>>2]=(c[x>>2]|0)+(c[k>>2]|0);c[o>>2]=c[z>>2]&c[r>>2];a[(c[s>>2]|0)+(c[o>>2]<<2)>>0]=(c[v>>2]|0)+(c[u>>2]|0);b[(c[s>>2]|0)+(c[o>>2]<<2)+2>>1]=(((c[j>>2]|0)-(c[s>>2]|0)|0)/4|0)-(c[o>>2]|0)}a[y>>0]=(c[p>>2]|0)-(c[u>>2]|0);g=c[n>>2]|0;c[n>>2]=g+1;b[y+2>>1]=c[(c[t>>2]|0)+(g<<2)>>2];g=(c[j>>2]|0)+(c[z>>2]>>c[u>>2]<<2)|0;f=c[w>>2]|0;e=c[k>>2]|0;b[A+0>>1]=b[y+0>>1]|0;b[A+2>>1]=b[y+2>>1]|0;kb(g,f,e,A);c[z>>2]=lb(c[z>>2]|0,c[p>>2]|0)|0;e=q+(c[p>>2]<<2)|0;c[e>>2]=(c[e>>2]|0)+ -1}c[p>>2]=(c[p>>2]|0)+1;c[w>>2]=c[w>>2]<<1}ub(c[t>>2]|0);c[l>>2]=c[x>>2];e=c[l>>2]|0;i=m;return e|0}function kb(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;g=i;i=i+16|0;k=g+8|0;j=g+4|0;h=g;c[k>>2]=a;c[j>>2]=d;c[h>>2]=e;do{c[h>>2]=(c[h>>2]|0)-(c[j>>2]|0);a=(c[k>>2]|0)+(c[h>>2]<<2)|0;b[a+0>>1]=b[f+0>>1]|0;b[a+2>>1]=b[f+2>>1]|0}while((c[h>>2]|0)>0);i=g;return}function lb(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d+8|0;g=d+4|0;f=d;c[e>>2]=a;c[g>>2]=b;c[f>>2]=1<<(c[g>>2]|0)-1;while(1){if((c[e>>2]&c[f>>2]|0)==0)break;c[f>>2]=c[f>>2]>>1}i=d;return(c[e>>2]&(c[f>>2]|0)-1)+(c[f>>2]|0)|0}function mb(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;j=e+12|0;f=e+8|0;g=e+4|0;h=e;c[j>>2]=a;c[f>>2]=b;c[g>>2]=d;c[h>>2]=1<<(c[f>>2]|0)-(c[g>>2]|0);while(1){if((c[f>>2]|0)>=15){d=5;break}c[h>>2]=(c[h>>2]|0)-(c[(c[j>>2]|0)+(c[f>>2]<<2)>>2]|0);if((c[h>>2]|0)<=0){d=5;break}c[f>>2]=(c[f>>2]|0)+1;c[h>>2]=c[h>>2]<<1}if((d|0)==5){i=e;return(c[f>>2]|0)-(c[g>>2]|0)|0}return 0}function nb(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e+12|0;g=e;h=e+8|0;j=g;c[j>>2]=a;c[j+4>>2]=b;c[h>>2]=d;a=g;if((ob(c[a>>2]|0,c[a+4>>2]|0,c[h>>2]|0)|0)==0){c[f>>2]=0;j=c[f>>2]|0;i=e;return j|0}j=g;j=Jb(c[j>>2]|0,c[j+4>>2]|0,c[h>>2]|0,0)|0;a=D;if(!(a>>>0>0|(a|0)==0&j>>>0>0))ta(128264,128288,36,128320);j=g;j=Jb(c[j>>2]|0,c[j+4>>2]|0,c[h>>2]|0,0)|0;c[f>>2]=tb(j)|0;j=c[f>>2]|0;i=e;return j|0}function ob(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+32|0;f=e+20|0;j=e+8|0;h=e+16|0;g=e;k=j;c[k>>2]=a;c[k+4>>2]=b;c[h>>2]=d;b=j;b=Jb(c[b>>2]|0,c[b+4>>2]|0,c[h>>2]|0,0)|0;a=g;c[a>>2]=b;c[a+4>>2]=D;a=j;if((c[a>>2]|0)==0&(c[a+4>>2]|0)==0){c[f>>2]=1;k=c[f>>2]|0;i=e;return k|0}a=c[h>>2]|0;k=j;k=Kb(1073741824,0,c[k>>2]|0,c[k+4>>2]|0)|0;b=D;if(0>b>>>0|0==(b|0)&a>>>0>k>>>0){c[f>>2]=0;k=c[f>>2]|0;i=e;return k|0}k=g;if((c[k+4>>2]|0)!=0?1:(c[k>>2]|0)!=(c[g>>2]|0)){c[f>>2]=0;k=c[f>>2]|0;i=e;return k|0}else{c[f>>2]=1;k=c[f>>2]|0;i=e;return k|0}return 0}function pb(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+32|0;f=e+16|0;k=e+12|0;g=e+8|0;j=e+4|0;h=e;c[k>>2]=a;c[g>>2]=b;c[j>>2]=d;c[h>>2]=c[k>>2];if((c[(c[h>>2]|0)+8>>2]|0)>>>0>(c[(c[h>>2]|0)+4>>2]|0)>>>0){c[f>>2]=-1;k=c[f>>2]|0;i=e;return k|0}if(((c[(c[h>>2]|0)+8>>2]|0)+(c[j>>2]|0)|0)>>>0>(c[(c[h>>2]|0)+4>>2]|0)>>>0)c[j>>2]=(c[(c[h>>2]|0)+4>>2]|0)-(c[(c[h>>2]|0)+8>>2]|0);Ab(c[g>>2]|0,(c[c[h>>2]>>2]|0)+(c[(c[h>>2]|0)+8>>2]|0)|0,c[j>>2]|0)|0;k=(c[h>>2]|0)+8|0;c[k>>2]=(c[k>>2]|0)+(c[j>>2]|0);c[f>>2]=c[j>>2];k=c[f>>2]|0;i=e;return k|0}function qb(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+32|0;k=f+16|0;j=f+12|0;h=f+8|0;g=f;c[k>>2]=b;c[j>>2]=d;c[h>>2]=e;c[c[h>>2]>>2]=c[k>>2];c[(c[h>>2]|0)+4>>2]=c[j>>2];c[(c[h>>2]|0)+8>>2]=0;c[g>>2]=1;c[g+4>>2]=c[h>>2];c[a+0>>2]=c[g+0>>2];c[a+4>>2]=c[g+4>>2];i=f;return}function rb(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+32|0;f=e+16|0;k=e+12|0;j=e+8|0;g=e+4|0;h=e;c[k>>2]=a;c[j>>2]=b;c[g>>2]=d;c[h>>2]=c[k>>2];if(((c[(c[h>>2]|0)+8>>2]|0)+(c[g>>2]|0)|0)>>>0>(c[(c[h>>2]|0)+4>>2]|0)>>>0){c[f>>2]=-1;k=c[f>>2]|0;i=e;return k|0}else{Ab((c[c[h>>2]>>2]|0)+(c[(c[h>>2]|0)+8>>2]|0)|0,c[j>>2]|0,c[g>>2]|0)|0;k=(c[h>>2]|0)+8|0;c[k>>2]=(c[k>>2]|0)+(c[g>>2]|0);c[f>>2]=c[g>>2];k=c[f>>2]|0;i=e;return k|0}return 0}function sb(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+32|0;k=f+16|0;j=f+12|0;h=f+8|0;g=f;c[k>>2]=b;c[j>>2]=d;c[h>>2]=e;c[c[h>>2]>>2]=c[k>>2];c[(c[h>>2]|0)+4>>2]=c[j>>2];c[(c[h>>2]|0)+8>>2]=0;c[g>>2]=2;c[g+4>>2]=c[h>>2];c[a+0>>2]=c[g+0>>2];c[a+4>>2]=c[g+4>>2];i=f;return}function tb(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;b=i;do if(a>>>0<245){if(a>>>0<11)a=16;else a=a+11&-8;v=a>>>3;p=c[32086]|0;w=p>>>v;if((w&3|0)!=0){h=(w&1^1)+v|0;g=h<<1;e=128384+(g<<2)|0;g=128384+(g+2<<2)|0;j=c[g>>2]|0;d=j+8|0;f=c[d>>2]|0;do if((e|0)!=(f|0)){if(f>>>0<(c[32090]|0)>>>0)ja();k=f+12|0;if((c[k>>2]|0)==(j|0)){c[k>>2]=e;c[g>>2]=f;break}else ja()}else c[32086]=p&~(1<<h);while(0);H=h<<3;c[j+4>>2]=H|3;H=j+(H|4)|0;c[H>>2]=c[H>>2]|1;H=d;i=b;return H|0}if(a>>>0>(c[32088]|0)>>>0){if((w|0)!=0){h=2<<v;h=w<<v&(h|0-h);h=(h&0-h)+ -1|0;d=h>>>12&16;h=h>>>d;f=h>>>5&8;h=h>>>f;g=h>>>2&4;h=h>>>g;e=h>>>1&2;h=h>>>e;j=h>>>1&1;j=(f|d|g|e|j)+(h>>>j)|0;h=j<<1;e=128384+(h<<2)|0;h=128384+(h+2<<2)|0;g=c[h>>2]|0;d=g+8|0;f=c[d>>2]|0;do if((e|0)!=(f|0)){if(f>>>0<(c[32090]|0)>>>0)ja();k=f+12|0;if((c[k>>2]|0)==(g|0)){c[k>>2]=e;c[h>>2]=f;break}else ja()}else c[32086]=p&~(1<<j);while(0);h=j<<3;f=h-a|0;c[g+4>>2]=a|3;e=g+a|0;c[g+(a|4)>>2]=f|1;c[g+h>>2]=f;h=c[32088]|0;if((h|0)!=0){g=c[32091]|0;k=h>>>3;j=k<<1;h=128384+(j<<2)|0;l=c[32086]|0;k=1<<k;if((l&k|0)!=0){j=128384+(j+2<<2)|0;k=c[j>>2]|0;if(k>>>0<(c[32090]|0)>>>0)ja();else{D=j;C=k}}else{c[32086]=l|k;D=128384+(j+2<<2)|0;C=h}c[D>>2]=g;c[C+12>>2]=g;c[g+8>>2]=C;c[g+12>>2]=h}c[32088]=f;c[32091]=e;H=d;i=b;return H|0}p=c[32087]|0;if((p|0)!=0){e=(p&0-p)+ -1|0;G=e>>>12&16;e=e>>>G;F=e>>>5&8;e=e>>>F;H=e>>>2&4;e=e>>>H;f=e>>>1&2;e=e>>>f;d=e>>>1&1;d=c[128648+((F|G|H|f|d)+(e>>>d)<<2)>>2]|0;e=(c[d+4>>2]&-8)-a|0;f=d;while(1){g=c[f+16>>2]|0;if((g|0)==0){g=c[f+20>>2]|0;if((g|0)==0)break}f=(c[g+4>>2]&-8)-a|0;H=f>>>0<e>>>0;e=H?f:e;f=g;d=H?g:d}h=c[32090]|0;if(d>>>0<h>>>0)ja();f=d+a|0;if(!(d>>>0<f>>>0))ja();g=c[d+24>>2]|0;k=c[d+12>>2]|0;do if((k|0)==(d|0)){k=d+20|0;j=c[k>>2]|0;if((j|0)==0){k=d+16|0;j=c[k>>2]|0;if((j|0)==0){B=0;break}}while(1){l=j+20|0;m=c[l>>2]|0;if((m|0)!=0){j=m;k=l;continue}m=j+16|0;l=c[m>>2]|0;if((l|0)==0)break;else{j=l;k=m}}if(k>>>0<h>>>0)ja();else{c[k>>2]=0;B=j;break}}else{j=c[d+8>>2]|0;if(j>>>0<h>>>0)ja();h=j+12|0;if((c[h>>2]|0)!=(d|0))ja();l=k+8|0;if((c[l>>2]|0)==(d|0)){c[h>>2]=k;c[l>>2]=j;B=k;break}else ja()}while(0);do if((g|0)!=0){h=c[d+28>>2]|0;j=128648+(h<<2)|0;if((d|0)==(c[j>>2]|0)){c[j>>2]=B;if((B|0)==0){c[32087]=c[32087]&~(1<<h);break}}else{if(g>>>0<(c[32090]|0)>>>0)ja();h=g+16|0;if((c[h>>2]|0)==(d|0))c[h>>2]=B;else c[g+20>>2]=B;if((B|0)==0)break}if(B>>>0<(c[32090]|0)>>>0)ja();c[B+24>>2]=g;g=c[d+16>>2]|0;do if((g|0)!=0)if(g>>>0<(c[32090]|0)>>>0)ja();else{c[B+16>>2]=g;c[g+24>>2]=B;break}while(0);g=c[d+20>>2]|0;if((g|0)!=0)if(g>>>0<(c[32090]|0)>>>0)ja();else{c[B+20>>2]=g;c[g+24>>2]=B;break}}while(0);if(e>>>0<16){H=e+a|0;c[d+4>>2]=H|3;H=d+(H+4)|0;c[H>>2]=c[H>>2]|1}else{c[d+4>>2]=a|3;c[d+(a|4)>>2]=e|1;c[d+(e+a)>>2]=e;h=c[32088]|0;if((h|0)!=0){g=c[32091]|0;l=h>>>3;j=l<<1;h=128384+(j<<2)|0;k=c[32086]|0;l=1<<l;if((k&l|0)!=0){j=128384+(j+2<<2)|0;k=c[j>>2]|0;if(k>>>0<(c[32090]|0)>>>0)ja();else{A=j;z=k}}else{c[32086]=k|l;A=128384+(j+2<<2)|0;z=h}c[A>>2]=g;c[z+12>>2]=g;c[g+8>>2]=z;c[g+12>>2]=h}c[32088]=e;c[32091]=f}H=d+8|0;i=b;return H|0}}}else if(!(a>>>0>4294967231)){z=a+11|0;a=z&-8;B=c[32087]|0;if((B|0)!=0){A=0-a|0;z=z>>>8;if((z|0)!=0)if(a>>>0>16777215)C=31;else{G=(z+1048320|0)>>>16&8;H=z<<G;F=(H+520192|0)>>>16&4;H=H<<F;C=(H+245760|0)>>>16&2;C=14-(F|G|C)+(H<<C>>>15)|0;C=a>>>(C+7|0)&1|C<<1}else C=0;D=c[128648+(C<<2)>>2]|0;a:do if((D|0)==0){F=0;z=0}else{if((C|0)==31)z=0;else z=25-(C>>>1)|0;F=0;E=a<<z;z=0;while(1){H=c[D+4>>2]&-8;G=H-a|0;if(G>>>0<A>>>0)if((H|0)==(a|0)){A=G;F=D;z=D;break a}else{A=G;z=D}H=c[D+20>>2]|0;D=c[D+(E>>>31<<2)+16>>2]|0;F=(H|0)==0|(H|0)==(D|0)?F:H;if((D|0)==0)break;else E=E<<1}}while(0);if((F|0)==0&(z|0)==0){H=2<<C;B=B&(H|0-H);if((B|0)==0)break;H=(B&0-B)+ -1|0;D=H>>>12&16;H=H>>>D;C=H>>>5&8;H=H>>>C;E=H>>>2&4;H=H>>>E;G=H>>>1&2;H=H>>>G;F=H>>>1&1;F=c[128648+((C|D|E|G|F)+(H>>>F)<<2)>>2]|0}if((F|0)!=0)while(1){H=(c[F+4>>2]&-8)-a|0;B=H>>>0<A>>>0;A=B?H:A;z=B?F:z;B=c[F+16>>2]|0;if((B|0)!=0){F=B;continue}F=c[F+20>>2]|0;if((F|0)==0)break}if((z|0)!=0?A>>>0<((c[32088]|0)-a|0)>>>0:0){f=c[32090]|0;if(z>>>0<f>>>0)ja();d=z+a|0;if(!(z>>>0<d>>>0))ja();e=c[z+24>>2]|0;h=c[z+12>>2]|0;do if((h|0)==(z|0)){h=z+20|0;g=c[h>>2]|0;if((g|0)==0){h=z+16|0;g=c[h>>2]|0;if((g|0)==0){x=0;break}}while(1){j=g+20|0;k=c[j>>2]|0;if((k|0)!=0){g=k;h=j;continue}j=g+16|0;k=c[j>>2]|0;if((k|0)==0)break;else{g=k;h=j}}if(h>>>0<f>>>0)ja();else{c[h>>2]=0;x=g;break}}else{g=c[z+8>>2]|0;if(g>>>0<f>>>0)ja();f=g+12|0;if((c[f>>2]|0)!=(z|0))ja();j=h+8|0;if((c[j>>2]|0)==(z|0)){c[f>>2]=h;c[j>>2]=g;x=h;break}else ja()}while(0);do if((e|0)!=0){g=c[z+28>>2]|0;f=128648+(g<<2)|0;if((z|0)==(c[f>>2]|0)){c[f>>2]=x;if((x|0)==0){c[32087]=c[32087]&~(1<<g);break}}else{if(e>>>0<(c[32090]|0)>>>0)ja();f=e+16|0;if((c[f>>2]|0)==(z|0))c[f>>2]=x;else c[e+20>>2]=x;if((x|0)==0)break}if(x>>>0<(c[32090]|0)>>>0)ja();c[x+24>>2]=e;e=c[z+16>>2]|0;do if((e|0)!=0)if(e>>>0<(c[32090]|0)>>>0)ja();else{c[x+16>>2]=e;c[e+24>>2]=x;break}while(0);e=c[z+20>>2]|0;if((e|0)!=0)if(e>>>0<(c[32090]|0)>>>0)ja();else{c[x+20>>2]=e;c[e+24>>2]=x;break}}while(0);b:do if(!(A>>>0<16)){c[z+4>>2]=a|3;c[z+(a|4)>>2]=A|1;c[z+(A+a)>>2]=A;f=A>>>3;if(A>>>0<256){h=f<<1;e=128384+(h<<2)|0;g=c[32086]|0;f=1<<f;do if((g&f|0)==0){c[32086]=g|f;w=128384+(h+2<<2)|0;v=e}else{f=128384+(h+2<<2)|0;g=c[f>>2]|0;if(!(g>>>0<(c[32090]|0)>>>0)){w=f;v=g;break}ja()}while(0);c[w>>2]=d;c[v+12>>2]=d;c[z+(a+8)>>2]=v;c[z+(a+12)>>2]=e;break}e=A>>>8;if((e|0)!=0)if(A>>>0>16777215)e=31;else{G=(e+1048320|0)>>>16&8;H=e<<G;F=(H+520192|0)>>>16&4;H=H<<F;e=(H+245760|0)>>>16&2;e=14-(F|G|e)+(H<<e>>>15)|0;e=A>>>(e+7|0)&1|e<<1}else e=0;f=128648+(e<<2)|0;c[z+(a+28)>>2]=e;c[z+(a+20)>>2]=0;c[z+(a+16)>>2]=0;h=c[32087]|0;g=1<<e;if((h&g|0)==0){c[32087]=h|g;c[f>>2]=d;c[z+(a+24)>>2]=f;c[z+(a+12)>>2]=d;c[z+(a+8)>>2]=d;break}f=c[f>>2]|0;if((e|0)==31)e=0;else e=25-(e>>>1)|0;c:do if((c[f+4>>2]&-8|0)!=(A|0)){e=A<<e;while(1){g=f+(e>>>31<<2)+16|0;h=c[g>>2]|0;if((h|0)==0)break;if((c[h+4>>2]&-8|0)==(A|0)){p=h;break c}else{e=e<<1;f=h}}if(g>>>0<(c[32090]|0)>>>0)ja();else{c[g>>2]=d;c[z+(a+24)>>2]=f;c[z+(a+12)>>2]=d;c[z+(a+8)>>2]=d;break b}}else p=f;while(0);f=p+8|0;e=c[f>>2]|0;g=c[32090]|0;if(p>>>0<g>>>0)ja();if(e>>>0<g>>>0)ja();else{c[e+12>>2]=d;c[f>>2]=d;c[z+(a+8)>>2]=e;c[z+(a+12)>>2]=p;c[z+(a+24)>>2]=0;break}}else{H=A+a|0;c[z+4>>2]=H|3;H=z+(H+4)|0;c[H>>2]=c[H>>2]|1}while(0);H=z+8|0;i=b;return H|0}}}else a=-1;while(0);p=c[32088]|0;if(!(a>>>0>p>>>0)){e=p-a|0;d=c[32091]|0;if(e>>>0>15){c[32091]=d+a;c[32088]=e;c[d+(a+4)>>2]=e|1;c[d+p>>2]=e;c[d+4>>2]=a|3}else{c[32088]=0;c[32091]=0;c[d+4>>2]=p|3;H=d+(p+4)|0;c[H>>2]=c[H>>2]|1}H=d+8|0;i=b;return H|0}p=c[32089]|0;if(a>>>0<p>>>0){G=p-a|0;c[32089]=G;H=c[32092]|0;c[32092]=H+a;c[H+(a+4)>>2]=G|1;c[H+4>>2]=a|3;H=H+8|0;i=b;return H|0}do if((c[32204]|0)==0){p=ea(30)|0;if((p+ -1&p|0)==0){c[32206]=p;c[32205]=p;c[32207]=-1;c[32208]=-1;c[32209]=0;c[32197]=0;c[32204]=(ga(0)|0)&-16^1431655768;break}else ja()}while(0);w=a+48|0;p=c[32206]|0;x=a+47|0;z=p+x|0;p=0-p|0;v=z&p;if(!(v>>>0>a>>>0)){H=0;i=b;return H|0}A=c[32196]|0;if((A|0)!=0?(G=c[32194]|0,H=G+v|0,H>>>0<=G>>>0|H>>>0>A>>>0):0){H=0;i=b;return H|0}d:do if((c[32197]&4|0)==0){B=c[32092]|0;e:do if((B|0)!=0){A=128792|0;while(1){C=c[A>>2]|0;if(!(C>>>0>B>>>0)?(y=A+4|0,(C+(c[y>>2]|0)|0)>>>0>B>>>0):0)break;A=c[A+8>>2]|0;if((A|0)==0){o=182;break e}}if((A|0)!=0){B=z-(c[32089]|0)&p;if(B>>>0<2147483647){p=ma(B|0)|0;A=(p|0)==((c[A>>2]|0)+(c[y>>2]|0)|0);y=p;z=B;p=A?p:-1;A=A?B:0;o=191}else A=0}else o=182}else o=182;while(0);do if((o|0)==182){p=ma(0)|0;if((p|0)!=(-1|0)){z=p;A=c[32205]|0;y=A+ -1|0;if((y&z|0)==0)A=v;else A=v-z+(y+z&0-A)|0;y=c[32194]|0;z=y+A|0;if(A>>>0>a>>>0&A>>>0<2147483647){H=c[32196]|0;if((H|0)!=0?z>>>0<=y>>>0|z>>>0>H>>>0:0){A=0;break}y=ma(A|0)|0;o=(y|0)==(p|0);z=A;p=o?p:-1;A=o?A:0;o=191}else A=0}else A=0}while(0);f:do if((o|0)==191){o=0-z|0;if((p|0)!=(-1|0)){q=A;o=202;break d}do if((y|0)!=(-1|0)&z>>>0<2147483647&z>>>0<w>>>0?(u=c[32206]|0,u=x-z+u&0-u,u>>>0<2147483647):0)if((ma(u|0)|0)==(-1|0)){ma(o|0)|0;break f}else{z=u+z|0;break}while(0);if((y|0)!=(-1|0)){p=y;q=z;o=202;break d}}while(0);c[32197]=c[32197]|4;o=199}else{A=0;o=199}while(0);if((((o|0)==199?v>>>0<2147483647:0)?(t=ma(v|0)|0,s=ma(0)|0,(s|0)!=(-1|0)&(t|0)!=(-1|0)&t>>>0<s>>>0):0)?(r=s-t|0,q=r>>>0>(a+40|0)>>>0,q):0){p=t;q=q?r:A;o=202}if((o|0)==202){r=(c[32194]|0)+q|0;c[32194]=r;if(r>>>0>(c[32195]|0)>>>0)c[32195]=r;r=c[32092]|0;g:do if((r|0)!=0){v=128792|0;while(1){t=c[v>>2]|0;u=v+4|0;s=c[u>>2]|0;if((p|0)==(t+s|0)){o=214;break}w=c[v+8>>2]|0;if((w|0)==0)break;else v=w}if(((o|0)==214?(c[v+12>>2]&8|0)==0:0)?r>>>0>=t>>>0&r>>>0<p>>>0:0){c[u>>2]=s+q;d=(c[32089]|0)+q|0;e=r+8|0;if((e&7|0)==0)e=0;else e=0-e&7;H=d-e|0;c[32092]=r+e;c[32089]=H;c[r+(e+4)>>2]=H|1;c[r+(d+4)>>2]=40;c[32093]=c[32208];break}if(p>>>0<(c[32090]|0)>>>0)c[32090]=p;t=p+q|0;s=128792|0;while(1){if((c[s>>2]|0)==(t|0)){o=224;break}u=c[s+8>>2]|0;if((u|0)==0)break;else s=u}if((o|0)==224?(c[s+12>>2]&8|0)==0:0){c[s>>2]=p;h=s+4|0;c[h>>2]=(c[h>>2]|0)+q;h=p+8|0;if((h&7|0)==0)h=0;else h=0-h&7;j=p+(q+8)|0;if((j&7|0)==0)n=0;else n=0-j&7;o=p+(n+q)|0;j=h+a|0;k=p+j|0;m=o-(p+h)-a|0;c[p+(h+4)>>2]=a|3;h:do if((o|0)!=(c[32092]|0)){if((o|0)==(c[32091]|0)){H=(c[32088]|0)+m|0;c[32088]=H;c[32091]=k;c[p+(j+4)>>2]=H|1;c[p+(H+j)>>2]=H;break}r=q+4|0;t=c[p+(r+n)>>2]|0;if((t&3|0)==1){a=t&-8;s=t>>>3;i:do if(!(t>>>0<256)){l=c[p+((n|24)+q)>>2]|0;u=c[p+(q+12+n)>>2]|0;do if((u|0)==(o|0)){u=n|16;t=p+(r+u)|0;s=c[t>>2]|0;if((s|0)==0){t=p+(u+q)|0;s=c[t>>2]|0;if((s|0)==0){g=0;break}}while(1){u=s+20|0;v=c[u>>2]|0;if((v|0)!=0){s=v;t=u;continue}u=s+16|0;v=c[u>>2]|0;if((v|0)==0)break;else{s=v;t=u}}if(t>>>0<(c[32090]|0)>>>0)ja();else{c[t>>2]=0;g=s;break}}else{t=c[p+((n|8)+q)>>2]|0;if(t>>>0<(c[32090]|0)>>>0)ja();v=t+12|0;if((c[v>>2]|0)!=(o|0))ja();s=u+8|0;if((c[s>>2]|0)==(o|0)){c[v>>2]=u;c[s>>2]=t;g=u;break}else ja()}while(0);if((l|0)==0)break;t=c[p+(q+28+n)>>2]|0;s=128648+(t<<2)|0;do if((o|0)!=(c[s>>2]|0)){if(l>>>0<(c[32090]|0)>>>0)ja();s=l+16|0;if((c[s>>2]|0)==(o|0))c[s>>2]=g;else c[l+20>>2]=g;if((g|0)==0)break i}else{c[s>>2]=g;if((g|0)!=0)break;c[32087]=c[32087]&~(1<<t);break i}while(0);if(g>>>0<(c[32090]|0)>>>0)ja();c[g+24>>2]=l;l=n|16;o=c[p+(l+q)>>2]|0;do if((o|0)!=0)if(o>>>0<(c[32090]|0)>>>0)ja();else{c[g+16>>2]=o;c[o+24>>2]=g;break}while(0);l=c[p+(r+l)>>2]|0;if((l|0)==0)break;if(l>>>0<(c[32090]|0)>>>0)ja();else{c[g+20>>2]=l;c[l+24>>2]=g;break}}else{r=c[p+((n|8)+q)>>2]|0;g=c[p+(q+12+n)>>2]|0;t=128384+(s<<1<<2)|0;do if((r|0)!=(t|0)){if(r>>>0<(c[32090]|0)>>>0)ja();if((c[r+12>>2]|0)==(o|0))break;ja()}while(0);if((g|0)==(r|0)){c[32086]=c[32086]&~(1<<s);break}do if((g|0)==(t|0))l=g+8|0;else{if(g>>>0<(c[32090]|0)>>>0)ja();s=g+8|0;if((c[s>>2]|0)==(o|0)){l=s;break}ja()}while(0);c[r+12>>2]=g;c[l>>2]=r}while(0);o=p+((a|n)+q)|0;m=a+m|0}g=o+4|0;c[g>>2]=c[g>>2]&-2;c[p+(j+4)>>2]=m|1;c[p+(m+j)>>2]=m;g=m>>>3;if(m>>>0<256){m=g<<1;d=128384+(m<<2)|0;l=c[32086]|0;g=1<<g;do if((l&g|0)==0){c[32086]=l|g;f=128384+(m+2<<2)|0;e=d}else{l=128384+(m+2<<2)|0;g=c[l>>2]|0;if(!(g>>>0<(c[32090]|0)>>>0)){f=l;e=g;break}ja()}while(0);c[f>>2]=k;c[e+12>>2]=k;c[p+(j+8)>>2]=e;c[p+(j+12)>>2]=d;break}e=m>>>8;do if((e|0)==0)e=0;else{if(m>>>0>16777215){e=31;break}G=(e+1048320|0)>>>16&8;H=e<<G;F=(H+520192|0)>>>16&4;H=H<<F;e=(H+245760|0)>>>16&2;e=14-(F|G|e)+(H<<e>>>15)|0;e=m>>>(e+7|0)&1|e<<1}while(0);l=128648+(e<<2)|0;c[p+(j+28)>>2]=e;c[p+(j+20)>>2]=0;c[p+(j+16)>>2]=0;f=c[32087]|0;g=1<<e;if((f&g|0)==0){c[32087]=f|g;c[l>>2]=k;c[p+(j+24)>>2]=l;c[p+(j+12)>>2]=k;c[p+(j+8)>>2]=k;break}l=c[l>>2]|0;if((e|0)==31)e=0;else e=25-(e>>>1)|0;j:do if((c[l+4>>2]&-8|0)!=(m|0)){e=m<<e;while(1){g=l+(e>>>31<<2)+16|0;f=c[g>>2]|0;if((f|0)==0)break;if((c[f+4>>2]&-8|0)==(m|0)){d=f;break j}else{e=e<<1;l=f}}if(g>>>0<(c[32090]|0)>>>0)ja();else{c[g>>2]=k;c[p+(j+24)>>2]=l;c[p+(j+12)>>2]=k;c[p+(j+8)>>2]=k;break h}}else d=l;while(0);f=d+8|0;e=c[f>>2]|0;g=c[32090]|0;if(d>>>0<g>>>0)ja();if(e>>>0<g>>>0)ja();else{c[e+12>>2]=k;c[f>>2]=k;c[p+(j+8)>>2]=e;c[p+(j+12)>>2]=d;c[p+(j+24)>>2]=0;break}}else{H=(c[32089]|0)+m|0;c[32089]=H;c[32092]=k;c[p+(j+4)>>2]=H|1}while(0);H=p+(h|8)|0;i=b;return H|0}e=128792|0;while(1){d=c[e>>2]|0;if(!(d>>>0>r>>>0)?(n=c[e+4>>2]|0,m=d+n|0,m>>>0>r>>>0):0)break;e=c[e+8>>2]|0}e=d+(n+ -39)|0;if((e&7|0)==0)e=0;else e=0-e&7;d=d+(n+ -47+e)|0;d=d>>>0<(r+16|0)>>>0?r:d;e=d+8|0;f=p+8|0;if((f&7|0)==0)f=0;else f=0-f&7;H=q+ -40-f|0;c[32092]=p+f;c[32089]=H;c[p+(f+4)>>2]=H|1;c[p+(q+ -36)>>2]=40;c[32093]=c[32208];c[d+4>>2]=27;c[e+0>>2]=c[32198];c[e+4>>2]=c[32199];c[e+8>>2]=c[32200];c[e+12>>2]=c[32201];c[32198]=p;c[32199]=q;c[32201]=0;c[32200]=e;e=d+28|0;c[e>>2]=7;if((d+32|0)>>>0<m>>>0)do{H=e;e=e+4|0;c[e>>2]=7}while((H+8|0)>>>0<m>>>0);if((d|0)!=(r|0)){d=d-r|0;e=r+(d+4)|0;c[e>>2]=c[e>>2]&-2;c[r+4>>2]=d|1;c[r+d>>2]=d;e=d>>>3;if(d>>>0<256){g=e<<1;d=128384+(g<<2)|0;f=c[32086]|0;e=1<<e;do if((f&e|0)==0){c[32086]=f|e;k=128384+(g+2<<2)|0;j=d}else{f=128384+(g+2<<2)|0;e=c[f>>2]|0;if(!(e>>>0<(c[32090]|0)>>>0)){k=f;j=e;break}ja()}while(0);c[k>>2]=r;c[j+12>>2]=r;c[r+8>>2]=j;c[r+12>>2]=d;break}e=d>>>8;if((e|0)!=0)if(d>>>0>16777215)e=31;else{G=(e+1048320|0)>>>16&8;H=e<<G;F=(H+520192|0)>>>16&4;H=H<<F;e=(H+245760|0)>>>16&2;e=14-(F|G|e)+(H<<e>>>15)|0;e=d>>>(e+7|0)&1|e<<1}else e=0;j=128648+(e<<2)|0;c[r+28>>2]=e;c[r+20>>2]=0;c[r+16>>2]=0;f=c[32087]|0;g=1<<e;if((f&g|0)==0){c[32087]=f|g;c[j>>2]=r;c[r+24>>2]=j;c[r+12>>2]=r;c[r+8>>2]=r;break}f=c[j>>2]|0;if((e|0)==31)e=0;else e=25-(e>>>1)|0;k:do if((c[f+4>>2]&-8|0)!=(d|0)){e=d<<e;while(1){j=f+(e>>>31<<2)+16|0;g=c[j>>2]|0;if((g|0)==0)break;if((c[g+4>>2]&-8|0)==(d|0)){h=g;break k}else{e=e<<1;f=g}}if(j>>>0<(c[32090]|0)>>>0)ja();else{c[j>>2]=r;c[r+24>>2]=f;c[r+12>>2]=r;c[r+8>>2]=r;break g}}else h=f;while(0);f=h+8|0;e=c[f>>2]|0;d=c[32090]|0;if(h>>>0<d>>>0)ja();if(e>>>0<d>>>0)ja();else{c[e+12>>2]=r;c[f>>2]=r;c[r+8>>2]=e;c[r+12>>2]=h;c[r+24>>2]=0;break}}}else{H=c[32090]|0;if((H|0)==0|p>>>0<H>>>0)c[32090]=p;c[32198]=p;c[32199]=q;c[32201]=0;c[32095]=c[32204];c[32094]=-1;d=0;do{H=d<<1;G=128384+(H<<2)|0;c[128384+(H+3<<2)>>2]=G;c[128384+(H+2<<2)>>2]=G;d=d+1|0}while((d|0)!=32);d=p+8|0;if((d&7|0)==0)d=0;else d=0-d&7;H=q+ -40-d|0;c[32092]=p+d;c[32089]=H;c[p+(d+4)>>2]=H|1;c[p+(q+ -36)>>2]=40;c[32093]=c[32208]}while(0);d=c[32089]|0;if(d>>>0>a>>>0){G=d-a|0;c[32089]=G;H=c[32092]|0;c[32092]=H+a;c[H+(a+4)>>2]=G|1;c[H+4>>2]=a|3;H=H+8|0;i=b;return H|0}}c[(ua()|0)>>2]=12;H=0;i=b;return H|0}function ub(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;b=i;if((a|0)==0){i=b;return}q=a+ -8|0;r=c[32090]|0;if(q>>>0<r>>>0)ja();o=c[a+ -4>>2]|0;n=o&3;if((n|0)==1)ja();j=o&-8;h=a+(j+ -8)|0;do if((o&1|0)==0){u=c[q>>2]|0;if((n|0)==0){i=b;return}q=-8-u|0;o=a+q|0;n=u+j|0;if(o>>>0<r>>>0)ja();if((o|0)==(c[32091]|0)){d=a+(j+ -4)|0;if((c[d>>2]&3|0)!=3){d=o;m=n;break}c[32088]=n;c[d>>2]=c[d>>2]&-2;c[a+(q+4)>>2]=n|1;c[h>>2]=n;i=b;return}t=u>>>3;if(u>>>0<256){d=c[a+(q+8)>>2]|0;m=c[a+(q+12)>>2]|0;p=128384+(t<<1<<2)|0;if((d|0)!=(p|0)){if(d>>>0<r>>>0)ja();if((c[d+12>>2]|0)!=(o|0))ja()}if((m|0)==(d|0)){c[32086]=c[32086]&~(1<<t);d=o;m=n;break}if((m|0)!=(p|0)){if(m>>>0<r>>>0)ja();p=m+8|0;if((c[p>>2]|0)==(o|0))s=p;else ja()}else s=m+8|0;c[d+12>>2]=m;c[s>>2]=d;d=o;m=n;break}s=c[a+(q+24)>>2]|0;t=c[a+(q+12)>>2]|0;do if((t|0)==(o|0)){u=a+(q+20)|0;t=c[u>>2]|0;if((t|0)==0){u=a+(q+16)|0;t=c[u>>2]|0;if((t|0)==0){p=0;break}}while(1){w=t+20|0;v=c[w>>2]|0;if((v|0)!=0){t=v;u=w;continue}v=t+16|0;w=c[v>>2]|0;if((w|0)==0)break;else{t=w;u=v}}if(u>>>0<r>>>0)ja();else{c[u>>2]=0;p=t;break}}else{u=c[a+(q+8)>>2]|0;if(u>>>0<r>>>0)ja();r=u+12|0;if((c[r>>2]|0)!=(o|0))ja();v=t+8|0;if((c[v>>2]|0)==(o|0)){c[r>>2]=t;c[v>>2]=u;p=t;break}else ja()}while(0);if((s|0)!=0){t=c[a+(q+28)>>2]|0;r=128648+(t<<2)|0;if((o|0)==(c[r>>2]|0)){c[r>>2]=p;if((p|0)==0){c[32087]=c[32087]&~(1<<t);d=o;m=n;break}}else{if(s>>>0<(c[32090]|0)>>>0)ja();r=s+16|0;if((c[r>>2]|0)==(o|0))c[r>>2]=p;else c[s+20>>2]=p;if((p|0)==0){d=o;m=n;break}}if(p>>>0<(c[32090]|0)>>>0)ja();c[p+24>>2]=s;r=c[a+(q+16)>>2]|0;do if((r|0)!=0)if(r>>>0<(c[32090]|0)>>>0)ja();else{c[p+16>>2]=r;c[r+24>>2]=p;break}while(0);q=c[a+(q+20)>>2]|0;if((q|0)!=0)if(q>>>0<(c[32090]|0)>>>0)ja();else{c[p+20>>2]=q;c[q+24>>2]=p;d=o;m=n;break}else{d=o;m=n}}else{d=o;m=n}}else{d=q;m=j}while(0);if(!(d>>>0<h>>>0))ja();n=a+(j+ -4)|0;o=c[n>>2]|0;if((o&1|0)==0)ja();if((o&2|0)==0){if((h|0)==(c[32092]|0)){w=(c[32089]|0)+m|0;c[32089]=w;c[32092]=d;c[d+4>>2]=w|1;if((d|0)!=(c[32091]|0)){i=b;return}c[32091]=0;c[32088]=0;i=b;return}if((h|0)==(c[32091]|0)){w=(c[32088]|0)+m|0;c[32088]=w;c[32091]=d;c[d+4>>2]=w|1;c[d+w>>2]=w;i=b;return}m=(o&-8)+m|0;n=o>>>3;do if(!(o>>>0<256)){l=c[a+(j+16)>>2]|0;q=c[a+(j|4)>>2]|0;do if((q|0)==(h|0)){o=a+(j+12)|0;n=c[o>>2]|0;if((n|0)==0){o=a+(j+8)|0;n=c[o>>2]|0;if((n|0)==0){k=0;break}}while(1){p=n+20|0;q=c[p>>2]|0;if((q|0)!=0){n=q;o=p;continue}p=n+16|0;q=c[p>>2]|0;if((q|0)==0)break;else{n=q;o=p}}if(o>>>0<(c[32090]|0)>>>0)ja();else{c[o>>2]=0;k=n;break}}else{o=c[a+j>>2]|0;if(o>>>0<(c[32090]|0)>>>0)ja();p=o+12|0;if((c[p>>2]|0)!=(h|0))ja();n=q+8|0;if((c[n>>2]|0)==(h|0)){c[p>>2]=q;c[n>>2]=o;k=q;break}else ja()}while(0);if((l|0)!=0){n=c[a+(j+20)>>2]|0;o=128648+(n<<2)|0;if((h|0)==(c[o>>2]|0)){c[o>>2]=k;if((k|0)==0){c[32087]=c[32087]&~(1<<n);break}}else{if(l>>>0<(c[32090]|0)>>>0)ja();n=l+16|0;if((c[n>>2]|0)==(h|0))c[n>>2]=k;else c[l+20>>2]=k;if((k|0)==0)break}if(k>>>0<(c[32090]|0)>>>0)ja();c[k+24>>2]=l;h=c[a+(j+8)>>2]|0;do if((h|0)!=0)if(h>>>0<(c[32090]|0)>>>0)ja();else{c[k+16>>2]=h;c[h+24>>2]=k;break}while(0);h=c[a+(j+12)>>2]|0;if((h|0)!=0)if(h>>>0<(c[32090]|0)>>>0)ja();else{c[k+20>>2]=h;c[h+24>>2]=k;break}}}else{k=c[a+j>>2]|0;a=c[a+(j|4)>>2]|0;j=128384+(n<<1<<2)|0;if((k|0)!=(j|0)){if(k>>>0<(c[32090]|0)>>>0)ja();if((c[k+12>>2]|0)!=(h|0))ja()}if((a|0)==(k|0)){c[32086]=c[32086]&~(1<<n);break}if((a|0)!=(j|0)){if(a>>>0<(c[32090]|0)>>>0)ja();j=a+8|0;if((c[j>>2]|0)==(h|0))l=j;else ja()}else l=a+8|0;c[k+12>>2]=a;c[l>>2]=k}while(0);c[d+4>>2]=m|1;c[d+m>>2]=m;if((d|0)==(c[32091]|0)){c[32088]=m;i=b;return}}else{c[n>>2]=o&-2;c[d+4>>2]=m|1;c[d+m>>2]=m}h=m>>>3;if(m>>>0<256){a=h<<1;e=128384+(a<<2)|0;j=c[32086]|0;h=1<<h;if((j&h|0)!=0){h=128384+(a+2<<2)|0;a=c[h>>2]|0;if(a>>>0<(c[32090]|0)>>>0)ja();else{f=h;g=a}}else{c[32086]=j|h;f=128384+(a+2<<2)|0;g=e}c[f>>2]=d;c[g+12>>2]=d;c[d+8>>2]=g;c[d+12>>2]=e;i=b;return}f=m>>>8;if((f|0)!=0)if(m>>>0>16777215)f=31;else{v=(f+1048320|0)>>>16&8;w=f<<v;u=(w+520192|0)>>>16&4;w=w<<u;f=(w+245760|0)>>>16&2;f=14-(u|v|f)+(w<<f>>>15)|0;f=m>>>(f+7|0)&1|f<<1}else f=0;g=128648+(f<<2)|0;c[d+28>>2]=f;c[d+20>>2]=0;c[d+16>>2]=0;a=c[32087]|0;h=1<<f;a:do if((a&h|0)!=0){g=c[g>>2]|0;if((f|0)==31)f=0;else f=25-(f>>>1)|0;b:do if((c[g+4>>2]&-8|0)!=(m|0)){f=m<<f;a=g;while(1){h=a+(f>>>31<<2)+16|0;g=c[h>>2]|0;if((g|0)==0)break;if((c[g+4>>2]&-8|0)==(m|0)){e=g;break b}else{f=f<<1;a=g}}if(h>>>0<(c[32090]|0)>>>0)ja();else{c[h>>2]=d;c[d+24>>2]=a;c[d+12>>2]=d;c[d+8>>2]=d;break a}}else e=g;while(0);g=e+8|0;f=c[g>>2]|0;h=c[32090]|0;if(e>>>0<h>>>0)ja();if(f>>>0<h>>>0)ja();else{c[f+12>>2]=d;c[g>>2]=d;c[d+8>>2]=f;c[d+12>>2]=e;c[d+24>>2]=0;break}}else{c[32087]=a|h;c[g>>2]=d;c[d+24>>2]=g;c[d+12>>2]=d;c[d+8>>2]=d}while(0);w=(c[32094]|0)+ -1|0;c[32094]=w;if((w|0)==0)d=128800|0;else{i=b;return}while(1){d=c[d>>2]|0;if((d|0)==0)break;else d=d+8|0}c[32094]=-1;i=b;return}function vb(){}function wb(b){b=b|0;var c=0;c=b;while(a[c>>0]|0)c=c+1|0;return c-b|0}function xb(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b+e|0;if((e|0)>=20){d=d&255;i=b&3;h=d|d<<8|d<<16|d<<24;g=f&~3;if(i){i=b+4-i|0;while((b|0)<(i|0)){a[b>>0]=d;b=b+1|0}}while((b|0)<(g|0)){c[b>>2]=h;b=b+4|0}}while((b|0)<(f|0)){a[b>>0]=d;b=b+1|0}return b-e|0}function yb(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){D=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}D=0;return b>>>c-32|0}function zb(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){D=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}D=a<<c-32;return 0}function Ab(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((e|0)>=4096)return qa(b|0,d|0,e|0)|0;f=b|0;if((b&3)==(d&3)){while(b&3){if((e|0)==0)return f|0;a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function Bb(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;c=a+c>>>0;return(D=b+d+(c>>>0<a>>>0|0)>>>0,c|0)|0}function Cb(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;b=b-d-(c>>>0>a>>>0|0)>>>0;return(D=b,a-c>>>0|0)|0}function Db(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){D=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}D=(b|0)<0?-1:0;return b>>c-32|0}function Eb(b){b=b|0;var c=0;c=a[n+(b>>>24)>>0]|0;if((c|0)<8)return c|0;c=a[n+(b>>16&255)>>0]|0;if((c|0)<8)return c+8|0;c=a[n+(b>>8&255)>>0]|0;if((c|0)<8)return c+16|0;return(a[n+(b&255)>>0]|0)+24|0}function Fb(b){b=b|0;var c=0;c=a[m+(b&255)>>0]|0;if((c|0)<8)return c|0;c=a[m+(b>>8&255)>>0]|0;if((c|0)<8)return c+8|0;c=a[m+(b>>16&255)>>0]|0;if((c|0)<8)return c+16|0;return(a[m+(b>>>24)>>0]|0)+24|0}function Gb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;f=a&65535;d=b&65535;c=$(d,f)|0;e=a>>>16;d=(c>>>16)+($(d,e)|0)|0;b=b>>>16;a=$(b,f)|0;return(D=(d>>>16)+($(b,e)|0)+(((d&65535)+a|0)>>>16)|0,d+a<<16|c&65535|0)|0}function Hb(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;j=b>>31|((b|0)<0?-1:0)<<1;i=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;f=d>>31|((d|0)<0?-1:0)<<1;e=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;h=Cb(j^a,i^b,j,i)|0;g=D;b=f^j;a=e^i;a=Cb((Mb(h,g,Cb(f^c,e^d,f,e)|0,D,0)|0)^b,D^a,b,a)|0;return a|0}function Ib(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+8|0;j=f|0;h=b>>31|((b|0)<0?-1:0)<<1;g=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;l=e>>31|((e|0)<0?-1:0)<<1;k=((e|0)<0?-1:0)>>31|((e|0)<0?-1:0)<<1;b=Cb(h^a,g^b,h,g)|0;a=D;Mb(b,a,Cb(l^d,k^e,l,k)|0,D,j)|0;a=Cb(c[j>>2]^h,c[j+4>>2]^g,h,g)|0;b=D;i=f;return(D=b,a)|0}function Jb(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;f=c;a=Gb(e,f)|0;c=D;return(D=($(b,f)|0)+($(d,e)|0)+c|c&0,a|0|0)|0}function Kb(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=Mb(a,b,c,d,0)|0;return a|0}function Lb(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;g=i;i=i+8|0;f=g|0;Mb(a,b,d,e,f)|0;i=g;return(D=c[f+4>>2]|0,c[f>>2]|0)|0}function Mb(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=a;j=b;i=j;l=d;g=e;k=g;if((i|0)==0){g=(f|0)!=0;if((k|0)==0){if(g){c[f>>2]=(h>>>0)%(l>>>0);c[f+4>>2]=0}k=0;m=(h>>>0)/(l>>>0)>>>0;return(D=k,m)|0}else{if(!g){l=0;m=0;return(D=l,m)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;l=0;m=0;return(D=l,m)|0}}m=(k|0)==0;do if((l|0)!=0){if(!m){k=(Eb(k|0)|0)-(Eb(i|0)|0)|0;if(k>>>0<=31){m=k+1|0;l=31-k|0;a=k-31>>31;j=m;b=h>>>(m>>>0)&a|i<<l;a=i>>>(m>>>0)&a;k=0;l=h<<l;break}if((f|0)==0){l=0;m=0;return(D=l,m)|0}c[f>>2]=a|0;c[f+4>>2]=j|b&0;l=0;m=0;return(D=l,m)|0}k=l-1|0;if((k&l|0)!=0){l=(Eb(l|0)|0)+33-(Eb(i|0)|0)|0;p=64-l|0;m=32-l|0;n=m>>31;o=l-32|0;a=o>>31;j=l;b=m-1>>31&i>>>(o>>>0)|(i<<m|h>>>(l>>>0))&a;a=a&i>>>(l>>>0);k=h<<p&n;l=(i<<p|h>>>(o>>>0))&n|h<<m&l-33>>31;break}if((f|0)!=0){c[f>>2]=k&h;c[f+4>>2]=0}if((l|0)==1){o=j|b&0;p=a|0|0;return(D=o,p)|0}else{p=Fb(l|0)|0;o=i>>>(p>>>0)|0;p=i<<32-p|h>>>(p>>>0)|0;return(D=o,p)|0}}else{if(m){if((f|0)!=0){c[f>>2]=(i>>>0)%(l>>>0);c[f+4>>2]=0}o=0;p=(i>>>0)/(l>>>0)>>>0;return(D=o,p)|0}if((h|0)==0){if((f|0)!=0){c[f>>2]=0;c[f+4>>2]=(i>>>0)%(k>>>0)}o=0;p=(i>>>0)/(k>>>0)>>>0;return(D=o,p)|0}l=k-1|0;if((l&k|0)==0){if((f|0)!=0){c[f>>2]=a|0;c[f+4>>2]=l&i|b&0}o=0;p=i>>>((Fb(k|0)|0)>>>0);return(D=o,p)|0}k=(Eb(k|0)|0)-(Eb(i|0)|0)|0;if(k>>>0<=30){a=k+1|0;l=31-k|0;j=a;b=i<<l|h>>>(a>>>0);a=i>>>(a>>>0);k=0;l=h<<l;break}if((f|0)==0){o=0;p=0;return(D=o,p)|0}c[f>>2]=a|0;c[f+4>>2]=j|b&0;o=0;p=0;return(D=o,p)|0}while(0);if((j|0)==0){g=l;e=0;i=0}else{h=d|0|0;g=g|e&0;e=Bb(h,g,-1,-1)|0;d=D;i=0;do{m=l;l=k>>>31|l<<1;k=i|k<<1;m=b<<1|m>>>31|0;n=b>>>31|a<<1|0;Cb(e,d,m,n)|0;p=D;o=p>>31|((p|0)<0?-1:0)<<1;i=o&1;b=Cb(m,n,o&h,(((p|0)<0?-1:0)>>31|((p|0)<0?-1:0)<<1)&g)|0;a=D;j=j-1|0}while((j|0)!=0);g=l;e=0}h=0;if((f|0)!=0){c[f>>2]=b;c[f+4>>2]=a}o=(k|0)>>>31|(g|h)<<1|(h<<1|k>>>31)&0|e;p=(k<<1|0>>>31)&-2|i;return(D=o,p)|0}function Nb(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return wa[a&3](b|0,c|0,d|0)|0}function Ob(a,b,c){a=a|0;b=b|0;c=c|0;aa(0);return 0}




// EMSCRIPTEN_END_FUNCS
var wa=[Ob,pb,rb,Ob];return{_strlen:wb,_free:ub,_decode:Fa,_memset:xb,_malloc:tb,_memcpy:Ab,_bitshift64Lshr:yb,_bitshift64Shl:zb,runPostSets:vb,stackAlloc:xa,stackSave:ya,stackRestore:za,setThrew:Aa,setTempRet0:Da,getTempRet0:Ea,dynCall_iiii:Nb}
// EMSCRIPTEN_END_ASM

})({Math:Math,Int8Array:Int8Array,Int16Array:Int16Array,Int32Array:Int32Array,Uint8Array:Uint8Array,Uint16Array:Uint16Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array},{abort:F,assert:y,min:va,invoke_iiii:function(a,c,b,d){try{return v.dynCall_iiii(a,c,b,d)}catch(f){"number"!==typeof f&&"longjmp"!==f&&e(f),V.setThrew(1,0)}},_sysconf:function(a){switch(a){case 30:return 4096;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 79:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;
case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;
case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1E3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"===typeof navigator?navigator.hardwareConcurrency||1:1}fb(22);return-1},
__formatString:mb,_time:function(a){var c=Date.now()/1E3|0;a&&(M[a>>2]=c);return c},_send:function(a,c,b){return!j.wb(a)?(fb(gb),-1):hb(a,c,b)},_pwrite:function(a,c,b,d){a=G.La(a);if(!a)return fb(gb),-1;try{return G.write(a,L,c,b,d)}catch(f){return G.Qa(f),-1}},_abort:function(){v.abort()},___setErrNo:fb,_fwrite:jb,_sbrk:ob,_printf:function(a,c){var b=mb(a,c),d=Ya(b);"\n"===d[d.length-1]&&(d=d.substr(0,d.length-1));v.print(d);return b.length},_fprintf:function(a,c,b){b=mb(c,b);c=B.T();a=jb(O(b,"i8",
1),1,b.length,a);B.ga(c);return a},__reallyNegative:lb,_emscripten_memcpy_big:function(a,c,b){P.set(P.subarray(c,c+b),a);return a},_fileno:ib,_write:hb,___assert_fail:function(a,c,b,d){ka=m;e("Assertion failed: "+E(a)+", at: "+[c?E(c):"unknown filename",b,d?E(d):"unknown function"]+" at "+Ga())},___errno_location:function(){return eb},STACKTOP:A,STACK_MAX:La,tempDoublePtr:U,ABORT:ka,cttz_i8:ub,ctlz_i8:tb,NaN:NaN,Infinity:Infinity},R),kb=v._strlen=V._strlen,Fa=v._free=V._free;v._decode=V._decode;
var pb=v._memset=V._memset,Da=v._malloc=V._malloc,sb=v._memcpy=V._memcpy,qb=v._bitshift64Lshr=V._bitshift64Lshr,rb=v._bitshift64Shl=V._bitshift64Shl;v.runPostSets=V.runPostSets;v.dynCall_iiii=V.dynCall_iiii;B.S=V.stackAlloc;B.T=V.stackSave;B.ga=V.stackRestore;B.Ya=V.setTempRet0;B.Na=V.getTempRet0;var nb;function X(a,c){a!=p&&("number"==typeof a?this.A(a):c==p&&"string"!=typeof a?this.q(a,256):this.q(a,c))}function vb(){return new X(p)}function wb(a,c){var b=xb[a.charCodeAt(c)];return b==p?-1:b}
function yb(a){var c=vb();c.H(a);return c}function Y(a,c){this.n=a|0;this.p=c|0}Y.ka={};Y.H=function(a){if(-128<=a&&128>a){var c=Y.ka[a];if(c)return c}c=new Y(a|0,0>a?-1:0);-128<=a&&128>a&&(Y.ka[a]=c);return c};Y.A=function(a){return isNaN(a)||!isFinite(a)?Y.ZERO:a<=-Y.ma?Y.MIN_VALUE:a+1>=Y.ma?Y.MAX_VALUE:0>a?Y.A(-a).o():new Y(a%Y.F|0,a/Y.F|0)};Y.D=function(a,c){return new Y(a,c)};
Y.q=function(a,c){0==a.length&&e(Error("number format error: empty string"));var b=c||10;(2>b||36<b)&&e(Error("radix out of range: "+b));if("-"==a.charAt(0))return Y.q(a.substring(1),b).o();0<=a.indexOf("-")&&e(Error('number format error: interior "-" character: '+a));for(var d=Y.A(Math.pow(b,8)),f=Y.ZERO,g=0;g<a.length;g+=8){var i=Math.min(8,a.length-g),h=parseInt(a.substring(g,g+i),b);8>i?(i=Y.A(Math.pow(b,i)),f=f.multiply(i).add(Y.A(h))):(f=f.multiply(d),f=f.add(Y.A(h)))}return f};Y.W=65536;
Y.cb=16777216;Y.F=Y.W*Y.W;Y.eb=Y.F/2;Y.fb=Y.F*Y.W;Y.Da=Y.F*Y.F;Y.ma=Y.Da/2;Y.ZERO=Y.H(0);Y.ONE=Y.H(1);Y.la=Y.H(-1);Y.MAX_VALUE=Y.D(-1,2147483647);Y.MIN_VALUE=Y.D(0,-2147483648);Y.Ca=Y.H(16777216);t=Y.prototype;t.U=function(){return this.p*Y.F+this.Ka()};
t.toString=function(a){a=a||10;(2>a||36<a)&&e(Error("radix out of range: "+a));if(this.J())return"0";if(this.r()){if(this.u(Y.MIN_VALUE)){var c=Y.A(a),b=this.I(c),c=b.multiply(c).M(this);return b.toString(a)+c.n.toString(a)}return"-"+this.o().toString(a)}for(var b=Y.A(Math.pow(a,6)),c=this,d="";;){var f=c.I(b),g=c.M(f.multiply(b)).n.toString(a),c=f;if(c.J())return g+d;for(;6>g.length;)g="0"+g;d=""+g+d}};t.Ka=function(){return 0<=this.n?this.n:Y.F+this.n};t.J=function(){return 0==this.p&&0==this.n};
t.r=function(){return 0>this.p};t.wa=function(){return 1==(this.n&1)};t.u=function(a){return this.p==a.p&&this.n==a.n};t.ya=function(){return 0>this.aa(Y.Ca)};t.Oa=function(a){return 0<this.aa(a)};t.Pa=function(a){return 0<=this.aa(a)};t.aa=function(a){if(this.u(a))return 0;var c=this.r(),b=a.r();return c&&!b?-1:!c&&b?1:this.M(a).r()?-1:1};t.o=function(){return this.u(Y.MIN_VALUE)?Y.MIN_VALUE:this.Ta().add(Y.ONE)};
t.add=function(a){var c=this.p>>>16,b=this.p&65535,d=this.n>>>16,f=a.p>>>16,g=a.p&65535,i=a.n>>>16,h;h=0+((this.n&65535)+(a.n&65535));a=0+(h>>>16);a+=d+i;d=0+(a>>>16);d+=b+g;b=0+(d>>>16);b=b+(c+f)&65535;return Y.D((a&65535)<<16|h&65535,b<<16|d&65535)};t.M=function(a){return this.add(a.o())};
t.multiply=function(a){if(this.J()||a.J())return Y.ZERO;if(this.u(Y.MIN_VALUE))return a.wa()?Y.MIN_VALUE:Y.ZERO;if(a.u(Y.MIN_VALUE))return this.wa()?Y.MIN_VALUE:Y.ZERO;if(this.r())return a.r()?this.o().multiply(a.o()):this.o().multiply(a).o();if(a.r())return this.multiply(a.o()).o();if(this.ya()&&a.ya())return Y.A(this.U()*a.U());var c=this.p>>>16,b=this.p&65535,d=this.n>>>16,f=this.n&65535,g=a.p>>>16,i=a.p&65535,h=a.n>>>16,a=a.n&65535,l,r,x,n;n=0+f*a;x=0+(n>>>16);x+=d*a;r=0+(x>>>16);x=(x&65535)+
f*h;r+=x>>>16;x&=65535;r+=b*a;l=0+(r>>>16);r=(r&65535)+d*h;l+=r>>>16;r&=65535;r+=f*i;l+=r>>>16;r&=65535;l=l+(c*a+b*h+d*i+f*g)&65535;return Y.D(x<<16|n&65535,l<<16|r)};
t.I=function(a){a.J()&&e(Error("division by zero"));if(this.J())return Y.ZERO;if(this.u(Y.MIN_VALUE)){if(a.u(Y.ONE)||a.u(Y.la))return Y.MIN_VALUE;if(a.u(Y.MIN_VALUE))return Y.ONE;var c=this.Za().I(a).shiftLeft(1);if(c.u(Y.ZERO))return a.r()?Y.ONE:Y.la;var b=this.M(a.multiply(c));return c.add(b.I(a))}if(a.u(Y.MIN_VALUE))return Y.ZERO;if(this.r())return a.r()?this.o().I(a.o()):this.o().I(a).o();if(a.r())return this.I(a.o()).o();for(var d=Y.ZERO,b=this;b.Pa(a);){for(var c=Math.max(1,Math.floor(b.U()/
a.U())),f=Math.ceil(Math.log(c)/Math.LN2),f=48>=f?1:Math.pow(2,f-48),g=Y.A(c),i=g.multiply(a);i.r()||i.Oa(b);)c-=f,g=Y.A(c),i=g.multiply(a);g.J()&&(g=Y.ONE);d=d.add(g);b=b.M(i)}return d};t.Ta=function(){return Y.D(~this.n,~this.p)};t.shiftLeft=function(a){a&=63;if(0==a)return this;var c=this.n;return 32>a?Y.D(c<<a,this.p<<a|c>>>32-a):Y.D(0,c<<a-32)};t.Za=function(){var a;a=1;if(0==a)return this;var c=this.p;return 32>a?Y.D(this.n>>>a|c<<32-a,c>>a):Y.D(c>>a-32,0<=c?0:-1)};t=X.prototype;
t.Y=function(a,c,b,d){for(var f=0,g=0;0<=--d;){var i=a*this[f++]+c[b]+g,g=Math.floor(i/67108864);c[b++]=i&67108863}return g};t.k=26;t.C=67108863;t.L=67108864;t.Ba=Math.pow(2,52);t.ia=26;t.ja=0;var xb=[],zb,Z;zb=48;for(Z=0;9>=Z;++Z)xb[zb++]=Z;zb=97;for(Z=10;36>Z;++Z)xb[zb++]=Z;zb=65;for(Z=10;36>Z;++Z)xb[zb++]=Z;t=X.prototype;t.copyTo=function(a){for(var c=this.e-1;0<=c;--c)a[c]=this[c];a.e=this.e;a.g=this.g};t.H=function(a){this.e=1;this.g=0>a?-1:0;0<a?this[0]=a:-1>a?this[0]=a+DV:this.e=0};
t.q=function(a,c){var b;if(16==c)b=4;else if(8==c)b=3;else if(256==c)b=8;else if(2==c)b=1;else if(32==c)b=5;else if(4==c)b=2;else{this.Ja(a,c);return}this.g=this.e=0;for(var d=a.length,f=s,g=0;0<=--d;){var i=8==b?a[d]&255:wb(a,d);0>i?"-"==a.charAt(d)&&(f=m):(f=s,0==g?this[this.e++]=i:g+b>this.k?(this[this.e-1]|=(i&(1<<this.k-g)-1)<<g,this[this.e++]=i>>this.k-g):this[this.e-1]|=i<<g,g+=b,g>=this.k&&(g-=this.k))}8==b&&0!=(a[0]&128)&&(this.g=-1,0<g&&(this[this.e-1]|=(1<<this.k-g)-1<<g));this.G();f&&
X.ZERO.B(this,this)};t.G=function(){for(var a=this.g&this.C;0<this.e&&this[this.e-1]==a;)--this.e};t.ba=function(a,c){var b;for(b=this.e-1;0<=b;--b)c[b+a]=this[b];for(b=a-1;0<=b;--b)c[b]=0;c.e=this.e+a;c.g=this.g};t.Ha=function(a,c){for(var b=a;b<this.e;++b)c[b-a]=this[b];c.e=Math.max(this.e-a,0);c.g=this.g};
t.xa=function(a,c){var b=a%this.k,d=this.k-b,f=(1<<d)-1,g=Math.floor(a/this.k),i=this.g<<b&this.C,h;for(h=this.e-1;0<=h;--h)c[h+g+1]=this[h]>>d|i,i=(this[h]&f)<<b;for(h=g-1;0<=h;--h)c[h]=0;c[g]=i;c.e=this.e+g+1;c.g=this.g;c.G()};t.Wa=function(a,c){c.g=this.g;var b=Math.floor(a/this.k);if(b>=this.e)c.e=0;else{var d=a%this.k,f=this.k-d,g=(1<<d)-1;c[0]=this[b]>>d;for(var i=b+1;i<this.e;++i)c[i-b-1]|=(this[i]&g)<<f,c[i-b]=this[i]>>d;0<d&&(c[this.e-b-1]|=(this.g&g)<<f);c.e=this.e-b;c.G()}};
t.B=function(a,c){for(var b=0,d=0,f=Math.min(a.e,this.e);b<f;)d+=this[b]-a[b],c[b++]=d&this.C,d>>=this.k;if(a.e<this.e){for(d-=a.g;b<this.e;)d+=this[b],c[b++]=d&this.C,d>>=this.k;d+=this.g}else{for(d+=this.g;b<a.e;)d-=a[b],c[b++]=d&this.C,d>>=this.k;d-=a.g}c.g=0>d?-1:0;-1>d?c[b++]=this.L+d:0<d&&(c[b++]=d);c.e=b;c.G()};t.Sa=function(a){var c=$.Aa,b=this.abs(),d=c.abs(),f=b.e;for(a.e=f+d.e;0<=--f;)a[f]=0;for(f=0;f<d.e;++f)a[f+b.e]=b.Y(d[f],a,f,b.e);a.g=0;a.G();this.g!=c.g&&X.ZERO.B(a,a)};
t.ra=function(a,c,b){var d=a.abs();if(!(0>=d.e)){var f=this.abs();if(f.e<d.e)c!=p&&c.H(0),b!=p&&this.copyTo(b);else{b==p&&(b=vb());var g=vb(),i=this.g,a=a.g,h=d[d.e-1],l=1,r;if(0!=(r=h>>>16))h=r,l+=16;if(0!=(r=h>>8))h=r,l+=8;if(0!=(r=h>>4))h=r,l+=4;if(0!=(r=h>>2))h=r,l+=2;0!=h>>1&&(l+=1);h=this.k-l;0<h?(d.xa(h,g),f.xa(h,b)):(d.copyTo(g),f.copyTo(b));d=g.e;f=g[d-1];if(0!=f){r=f*(1<<this.ia)+(1<d?g[d-2]>>this.ja:0);l=this.Ba/r;r=(1<<this.ia)/r;var x=1<<this.ja,n=b.e,u=n-d,C=c==p?vb():c;g.ba(u,C);0<=
b.P(C)&&(b[b.e++]=1,b.B(C,b));X.ONE.ba(d,C);for(C.B(g,g);g.e<d;)g[g.e++]=0;for(;0<=--u;){var D=b[--n]==f?this.C:Math.floor(b[n]*l+(b[n-1]+x)*r);if((b[n]+=g.Y(D,b,u,d))<D){g.ba(u,C);for(b.B(C,b);b[n]<--D;)b.B(C,b)}}c!=p&&(b.Ha(d,c),i!=a&&X.ZERO.B(c,c));b.e=d;b.G();0<h&&b.Wa(h,b);0>i&&X.ZERO.B(b,b)}}}};
t.toString=function(a){if(0>this.g)return"-"+this.o().toString(a);if(16==a)a=4;else if(8==a)a=3;else if(2==a)a=1;else if(32==a)a=5;else if(4==a)a=2;else return this.$a(a);var c=(1<<a)-1,b,d=s,f="",g=this.e,i=this.k-g*this.k%a;if(0<g--){if(i<this.k&&0<(b=this[g]>>i))d=m,f="0123456789abcdefghijklmnopqrstuvwxyz".charAt(b);for(;0<=g;)i<a?(b=(this[g]&(1<<i)-1)<<a-i,b|=this[--g]>>(i+=this.k-a)):(b=this[g]>>(i-=a)&c,0>=i&&(i+=this.k,--g)),0<b&&(d=m),d&&(f+="0123456789abcdefghijklmnopqrstuvwxyz".charAt(b))}return d?
f:"0"};t.o=function(){var a=vb();X.ZERO.B(this,a);return a};t.abs=function(){return 0>this.g?this.o():this};t.P=function(a){var c=this.g-a.g;if(0!=c)return c;var b=this.e,c=b-a.e;if(0!=c)return 0>this.g?-c:c;for(;0<=--b;)if(0!=(c=this[b]-a[b]))return c;return 0};X.ZERO=yb(0);X.ONE=yb(1);t=X.prototype;
t.Ja=function(a,c){this.H(0);c==p&&(c=10);for(var b=this.oa(c),d=Math.pow(c,b),f=s,g=0,i=0,h=0;h<a.length;++h){var l=wb(a,h);0>l?"-"==a.charAt(h)&&0==this.fa()&&(f=m):(i=c*i+l,++g>=b&&(this.qa(d),this.pa(i),i=g=0))}0<g&&(this.qa(Math.pow(c,g)),this.pa(i));f&&X.ZERO.B(this,this)};t.oa=function(a){return Math.floor(Math.LN2*this.k/Math.log(a))};t.fa=function(){return 0>this.g?-1:0>=this.e||1==this.e&&0>=this[0]?0:1};t.qa=function(a){this[this.e]=this.Y(a-1,this,0,this.e);++this.e;this.G()};
t.pa=function(a){var c=0;if(0!=a){for(;this.e<=c;)this[this.e++]=0;for(this[c]+=a;this[c]>=this.L;)this[c]-=this.L,++c>=this.e&&(this[this.e++]=0),++this[c]}};t.$a=function(a){a==p&&(a=10);if(0==this.fa()||2>a||36<a)return"0";var c=this.oa(a),c=Math.pow(a,c),b=yb(c),d=vb(),f=vb(),g="";for(this.ra(b,d,f);0<d.fa();)g=(c+f.va()).toString(a).substr(1)+g,d.ra(b,d,f);return f.va().toString(a)+g};
t.va=function(){if(0>this.g){if(1==this.e)return this[0]-this.L;if(0==this.e)return-1}else{if(1==this.e)return this[0];if(0==this.e)return 0}return(this[1]&(1<<32-this.k)-1)<<this.k|this[0]};
t.X=function(a,c){for(var b=0,d=0,f=Math.min(a.e,this.e);b<f;)d+=this[b]+a[b],c[b++]=d&this.C,d>>=this.k;if(a.e<this.e){for(d+=a.g;b<this.e;)d+=this[b],c[b++]=d&this.C,d>>=this.k;d+=this.g}else{for(d+=this.g;b<a.e;)d+=a[b],c[b++]=d&this.C,d>>=this.k;d+=a.g}c.g=0>d?-1:0;0<d?c[b++]=d:-1>d&&(c[b++]=this.L+d);c.e=b;c.G()};
var $={abs:function(a,c){var b=new Y(a,c),b=b.r()?b.o():b;M[U>>2]=b.n;M[U+4>>2]=b.p},sa:function(){$.Ia||($.Ia=m,$.Aa=new X,$.Aa.q("4294967296",10),$.ha=new X,$.ha.q("18446744073709551616",10),$.Ab=new X,$.Bb=new X)},yb:function(a,c){var b=new X;b.q(c.toString(),10);var d=new X;b.Sa(d);b=new X;b.q(a.toString(),10);var f=new X;b.X(d,f);return f},stringify:function(a,c,b){a=(new Y(a,c)).toString();b&&"-"==a[0]&&($.sa(),b=new X,b.q(a,10),a=new X,$.ha.X(b,a),a=a.toString(10));return a},q:function(a,c,
b,d,f){$.sa();var g=new X;g.q(a,c);a=new X;a.q(b,10);b=new X;b.q(d,10);f&&0>g.P(X.ZERO)&&(d=new X,g.X($.ha,d),g=d);d=s;0>g.P(a)?(g=a,d=m):0<g.P(b)&&(g=b,d=m);g=Y.q(g.toString());M[U>>2]=g.n;M[U+4>>2]=g.p;d&&e("range error")}};nb=$;
if(T)if("function"===typeof v.locateFile?T=v.locateFile(T):v.memoryInitializerPrefixURL&&(T=v.memoryInitializerPrefixURL+T),ba||ea){var Ab=v.readBinary(T);P.set(Ab,Ja)}else cb(),Browser.mb(T,function(a){P.set(a,Ja);db()},function(){e("could not load memory initializer "+T)});function ia(a){this.name="ExitStatus";this.message="Program terminated with exit("+a+")";this.status=a}ia.prototype=Error();var Bb,Cb=p,bb=function Db(){!v.calledRun&&Eb&&Fb();v.calledRun||(bb=Db)};
v.callMain=v.nb=function(a){function c(){for(var a=0;3>a;a++)d.push(0)}y(0==S,"cannot call main when async dependencies remain! (listen on __ATMAIN__)");y(0==Pa.length,"cannot call main when preRun functions remain to be called");a=a||[];Ua||(Ua=m,Oa(Qa));var b=a.length+1,d=[O(Xa(v.thisProgram),"i8",0)];c();for(var f=0;f<b-1;f+=1)d.push(O(Xa(a[f]),"i8",0)),c();d.push(0);d=O(d,"i32",0);Bb=A;try{var g=v._main(b,d,0);Gb(g)}catch(i){i instanceof ia||("SimulateInfiniteLoop"==i?v.noExitRuntime=m:(i&&("object"===
typeof i&&i.stack)&&v.K("exception thrown: "+[i,i.stack]),e(i)))}finally{}};
function Fb(a){function c(){if(!v.calledRun&&(v.calledRun=m,!ka)){Ua||(Ua=m,Oa(Qa));Oa(Ra);ca&&Cb!==p&&v.K("pre-main prep time: "+(Date.now()-Cb)+" ms");v._main&&Eb&&v.callMain(a);if(v.postRun)for("function"==typeof v.postRun&&(v.postRun=[v.postRun]);v.postRun.length;)Wa(v.postRun.shift());Oa(Ta)}}a=a||v.arguments;Cb===p&&(Cb=Date.now());if(0<S)v.K("run() called, but dependencies remain, so not running");else{if(v.preRun)for("function"==typeof v.preRun&&(v.preRun=[v.preRun]);v.preRun.length;)Va(v.preRun.shift());
Oa(Pa);!(0<S)&&!v.calledRun&&(v.setStatus?(v.setStatus("Running..."),setTimeout(function(){setTimeout(function(){v.setStatus("")},1);c()},1)):c())}}v.run=v.zb=Fb;function Gb(a){v.noExitRuntime||(ka=m,A=Bb,Oa(Sa),ba?(process.stdout.once("drain",function(){process.exit(a)}),console.log(" "),setTimeout(function(){process.exit(a)},500)):ea&&"function"===typeof quit&&quit(a),e(new ia(a)))}v.exit=v.ob=Gb;
function F(a){a&&(v.print(a),v.K(a));ka=m;e("abort() at "+Ga()+"\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.")}v.abort=v.abort=F;if(v.preInit)for("function"==typeof v.preInit&&(v.preInit=[v.preInit]);0<v.preInit.length;)v.preInit.pop()();var Eb=m;v.noInitialRun&&(Eb=s);Fb();


}).call(this,require('_process'),"/node_modules/fontkit/node_modules/brotli/build")
},{"../src/read_memory":71,"_process":25,"fs":1,"path":24}],65:[function(require,module,exports){
(function (process,__dirname){
function e(a){throw a;}var j=void 0,n=!0,p=null,r=!1;function aa(){return function(){}}function ca(a){return function(){return a}}var t,u={};u.readBinary=require("../src/read_memory");u||(u=eval("(function() { try { return Module || {} } catch(e) { return {} } })()"));var da={},w;for(w in u)u.hasOwnProperty(w)&&(da[w]=u[w]);var ea="object"===typeof process&&"function"===typeof require,fa="object"===typeof window,ga="function"===typeof importScripts,ha=!fa&&!ea&&!ga;
if(ea){u.print||(u.print=function(a){process.stdout.write(a+"\n")});u.printErr||(u.printErr=function(a){process.stderr.write(a+"\n")});var ia=require("fs"),ja=require("path");u.read=function(a,b){var a=ja.normalize(a),c=ia.readFileSync(a);!c&&a!=ja.resolve(a)&&(a=path.join(__dirname,"..","src",a),c=ia.readFileSync(a));c&&!b&&(c=c.toString());return c};u.readBinary=function(a){return u.read(a,n)};u.load=function(a){ka(read(a))};u.thisProgram=process.argv[1].replace(/\\/g,"/");u.arguments=process.argv.slice(2);
"undefined"!==typeof module&&(module.exports=u);process.on("uncaughtException",function(a){a instanceof la||e(a)})}else ha?(u.print||(u.print=print),"undefined"!=typeof printErr&&(u.printErr=printErr),u.read="undefined"!=typeof read?read:function(){e("no read() available (jsc?)")},u.readBinary=function(a){if("function"===typeof readbuffer)return new Uint8Array(readbuffer(a));a=read(a,"binary");x("object"===typeof a);return a},"undefined"!=typeof scriptArgs?u.arguments=scriptArgs:"undefined"!=typeof arguments&&
(u.arguments=arguments),this.Module=u,eval("if (typeof gc === 'function' && gc.toString().indexOf('[native code]') > 0) var gc = undefined")):fa||ga?(u.read=function(a){var b=new XMLHttpRequest;b.open("GET",a,r);b.send(p);return b.responseText},"undefined"!=typeof arguments&&(u.arguments=arguments),"undefined"!==typeof console?(u.print||(u.print=function(a){console.log(a)}),u.printErr||(u.printErr=function(a){console.log(a)})):u.print||(u.print=aa()),fa?window.Module=u:u.load=importScripts):e("Unknown runtime environment. Where are we?");
function ka(a){eval.call(p,a)}!u.load&&u.read&&(u.load=function(a){ka(u.read(a))});u.print||(u.print=aa());u.printErr||(u.printErr=u.print);u.arguments||(u.arguments=[]);u.thisProgram||(u.thisProgram="./this.program");u.print=u.print;u.N=u.printErr;u.preRun=[];u.postRun=[];for(w in da)da.hasOwnProperty(w)&&(u[w]=da[w]);
var A={rb:function(a){ma=a},gb:function(){return ma},ba:function(){return z},ra:function(a){z=a},Ka:function(a){switch(a){case "i1":case "i8":return 1;case "i16":return 2;case "i32":return 4;case "i64":return 8;case "float":return 4;case "double":return 8;default:return"*"===a[a.length-1]?A.ea:"i"===a[0]?(a=parseInt(a.substr(1)),x(0===a%8),a/8):0}},Ja:function(a){return Math.max(A.Ka(a),A.ea)},zb:16,Mb:function(a,b,c){return!c&&("i64"==a||"double"==a)?8:!a?Math.min(b,8):Math.min(b||(a?A.Ja(a):0),
A.ea)},R:function(a,b,c){return c&&c.length?(c.splice||(c=Array.prototype.slice.call(c)),c.splice(0,0,b),u["dynCall_"+a].apply(p,c)):u["dynCall_"+a].call(p,b)},$:[],Xa:function(a){for(var b=0;b<A.$.length;b++)if(!A.$[b])return A.$[b]=a,2*(1+b);e("Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.")},qb:function(a){A.$[(a-2)/2]=p},Nb:function(a,b){A.ia||(A.ia={});var c=A.ia[a];if(c)return c;for(var c=[],d=0;d<b;d++)c.push(String.fromCharCode(36)+d);d=B(a);
'"'===d[0]&&(d.indexOf('"',1)===d.length-1?d=d.substr(1,d.length-2):D("invalid EM_ASM input |"+d+"|. Please use EM_ASM(..code..) (no quotes) or EM_ASM({ ..code($0).. }, input) (to input values)"));try{var f=eval("(function(Module, FS) { return function("+c.join(",")+"){ "+d+" } })")(u,"undefined"!==typeof G?G:p)}catch(g){u.N("error in executing inline EM_ASM code: "+g+" on: \n\n"+d+"\n\nwith args |"+c+"| (make sure to use the right one out of EM_ASM, EM_ASM_ARGS, etc.)"),e(g)}return A.ia[a]=f},W:function(a){A.W.pa||
(A.W.pa={});A.W.pa[a]||(A.W.pa[a]=1,u.N(a))},la:{},Pb:function(a,b){x(b);A.la[b]||(A.la[b]={});var c=A.la[b];c[a]||(c[a]=function(){return A.R(b,a,arguments)});return c[a]},za:function(){var a=[],b=0;this.mb=function(c){c&=255;if(0==a.length){if(0==(c&128))return String.fromCharCode(c);a.push(c);b=192==(c&224)?1:224==(c&240)?2:3;return""}if(b&&(a.push(c),b--,0<b))return"";var c=a[0],d=a[1],f=a[2],g=a[3];2==a.length?c=String.fromCharCode((c&31)<<6|d&63):3==a.length?c=String.fromCharCode((c&15)<<12|
(d&63)<<6|f&63):(c=(c&7)<<18|(d&63)<<12|(f&63)<<6|g&63,c=String.fromCharCode(((c-65536)/1024|0)+55296,(c-65536)%1024+56320));a.length=0;return c};this.nb=function(a){for(var a=unescape(encodeURIComponent(a)),b=[],f=0;f<a.length;f++)b.push(a.charCodeAt(f));return b}},Ob:function(){e("You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work")},aa:function(a){var b=z;z=z+a|0;z=z+15&-16;return b},Qa:function(a){var b=na;na=na+a|0;na=na+
15&-16;return b},S:function(a){var b=H;H=H+a|0;H=H+15&-16;H>=oa&&D("Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value "+oa+", (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.");return b},X:function(a,b){return Math.ceil(a/(b?b:16))*(b?b:16)},jb:function(a,b,c){return c?+(a>>>0)+4294967296*+(b>>>0):+(a>>>0)+4294967296*+(b|0)},yb:8,
ea:4,Db:0};u.Runtime=A;A.addFunction=A.Xa;A.removeFunction=A.qb;var pa=r,qa,ra,ma;function x(a,b){a||D("Assertion failed: "+b)}function sa(a){var b=u["_"+a];if(!b)try{b=eval("_"+a)}catch(c){}x(b,"Cannot call unknown function "+a+" (perhaps LLVM optimizations or closure removed it?)");return b}var ta,ua;
(function(){function a(a){a=a.toString().match(f).slice(1);return{arguments:a[0],body:a[1],returnValue:a[2]}}var b=0,c={stackSave:function(){b=A.ba()},stackRestore:function(){A.ra(b)},arrayToC:function(a){var c=A.aa(a.length);va(a,c);return c},stringToC:function(a){var c=0;a!==p&&(a!==j&&0!==a)&&(c=A.aa((a.length<<2)+1),wa(a,c));return c}},d={string:c.stringToC,array:c.arrayToC};ua=function(a,f,g,h){var a=sa(a),q=[];if(h)for(var y=0;y<h.length;y++){var E=d[g[y]];E?(0===b&&(b=A.ba()),q[y]=E(h[y])):
q[y]=h[y]}g=a.apply(p,q);"string"===f&&(g=B(g));0!==b&&c.stackRestore();return g};var f=/^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/,g={},h;for(h in c)c.hasOwnProperty(h)&&(g[h]=a(c[h]));ta=function(c,b,d){var d=d||[],f=sa(c),c=d.every(function(a){return"number"===a}),h="string"!==b;if(h&&c)return f;var y=d.map(function(a,c){return"$"+c}),b="(function("+y.join(",")+") {",E=d.length;if(!c)for(var b=b+(g.stackSave.body+";"),F=0;F<E;F++){var Q=y[F],C=d[F];"number"!==C&&(C=
g[C+"ToC"],b+="var "+C.arguments+" = "+Q+";",b+=C.body+";",b+=Q+"="+C.returnValue+";")}d=a(function(){return f}).returnValue;b+="var ret = "+d+"("+y.join(",")+");";h||(d=a(function(){return B}).returnValue,b+="ret = "+d+"(ret);");c||(b+=g.stackRestore.body+";");return eval(b+"return ret})")}})();u.cwrap=ta;u.ccall=ua;
function xa(a,b,c){c=c||"i8";"*"===c.charAt(c.length-1)&&(c="i32");switch(c){case "i1":I[a>>0]=b;break;case "i8":I[a>>0]=b;break;case "i16":ya[a>>1]=b;break;case "i32":J[a>>2]=b;break;case "i64":ra=[b>>>0,(qa=b,1<=+za(qa)?0<qa?(Aa(+Ba(qa/4294967296),4294967295)|0)>>>0:~~+Ca((qa-+(~~qa>>>0))/4294967296)>>>0:0)];J[a>>2]=ra[0];J[a+4>>2]=ra[1];break;case "float":Da[a>>2]=b;break;case "double":Ea[a>>3]=b;break;default:D("invalid type for setValue: "+c)}}u.setValue=xa;
function Fa(a,b){b=b||"i8";"*"===b.charAt(b.length-1)&&(b="i32");switch(b){case "i1":return I[a>>0];case "i8":return I[a>>0];case "i16":return ya[a>>1];case "i32":return J[a>>2];case "i64":return J[a>>2];case "float":return Da[a>>2];case "double":return Ea[a>>3];default:D("invalid type for setValue: "+b)}return p}u.getValue=Fa;var Ga=0,Ha=1,K=2,Ia=4;u.ALLOC_NORMAL=Ga;u.ALLOC_STACK=Ha;u.ALLOC_STATIC=K;u.ALLOC_DYNAMIC=3;u.ALLOC_NONE=Ia;
function L(a,b,c,d){var f,g;"number"===typeof a?(f=n,g=a):(f=r,g=a.length);var h="string"===typeof b?b:p,c=c==Ia?d:[M,A.aa,A.Qa,A.S][c===j?K:c](Math.max(g,h?1:b.length));if(f){d=c;x(0==(c&3));for(a=c+(g&-4);d<a;d+=4)J[d>>2]=0;for(a=c+g;d<a;)I[d++>>0]=0;return c}if("i8"===h)return a.subarray||a.slice?N.set(a,c):N.set(new Uint8Array(a),c),c;for(var d=0,i,k;d<g;){var m=a[d];"function"===typeof m&&(m=A.Qb(m));f=h||b[d];0===f?d++:("i64"==f&&(f="i32"),xa(c+d,m,f),k!==f&&(i=A.Ka(f),k=f),d+=i)}return c}
u.allocate=L;function B(a,b){for(var c=r,d,f=0;;){d=N[a+f>>0];if(128<=d)c=n;else if(0==d&&!b)break;f++;if(b&&f==b)break}b||(b=f);var g="";if(!c){for(;0<b;)d=String.fromCharCode.apply(String,N.subarray(a,a+Math.min(b,1024))),g=g?g+d:d,a+=1024,b-=1024;return g}c=new A.za;for(f=0;f<b;f++)d=N[a+f>>0],g+=c.mb(d);return g}u.Pointer_stringify=B;u.UTF16ToString=function(a){for(var b=0,c="";;){var d=ya[a+2*b>>1];if(0==d)return c;++b;c+=String.fromCharCode(d)}};
u.stringToUTF16=function(a,b){for(var c=0;c<a.length;++c)ya[b+2*c>>1]=a.charCodeAt(c);ya[b+2*a.length>>1]=0};u.UTF32ToString=function(a){for(var b=0,c="";;){var d=J[a+4*b>>2];if(0==d)return c;++b;65536<=d?(d-=65536,c+=String.fromCharCode(55296|d>>10,56320|d&1023)):c+=String.fromCharCode(d)}};u.stringToUTF32=function(a,b){for(var c=0,d=0;d<a.length;++d){var f=a.charCodeAt(d);if(55296<=f&&57343>=f)var g=a.charCodeAt(++d),f=65536+((f&1023)<<10)|g&1023;J[b+4*c>>2]=f;++c}J[b+4*c>>2]=0};
function Ja(a){function b(c,d,g){var d=d||Infinity,f="",h=[],s;if("N"===a[i]){i++;"K"===a[i]&&i++;for(s=[];"E"!==a[i];)if("S"===a[i]){i++;var q=a.indexOf("_",i);s.push(m[a.substring(i,q)||0]||"?");i=q+1}else if("C"===a[i])s.push(s[s.length-1]),i+=2;else{var q=parseInt(a.substr(i)),l=q.toString().length;if(!q||!l){i--;break}var ba=a.substr(i+l,q);s.push(ba);m.push(ba);i+=l+q}i++;s=s.join("::");d--;if(0===d)return c?[s]:s}else if(("K"===a[i]||v&&"L"===a[i])&&i++,q=parseInt(a.substr(i)))l=q.toString().length,
s=a.substr(i+l,q),i+=l+q;v=r;"I"===a[i]?(i++,q=b(n),l=b(n,1,n),f+=l[0]+" "+s+"<"+q.join(", ")+">"):f=s;a:for(;i<a.length&&0<d--;)if(s=a[i++],s in k)h.push(k[s]);else switch(s){case "P":h.push(b(n,1,n)[0]+"*");break;case "R":h.push(b(n,1,n)[0]+"&");break;case "L":i++;q=a.indexOf("E",i)-i;h.push(a.substr(i,q));i+=q+2;break;case "A":q=parseInt(a.substr(i));i+=q.toString().length;"_"!==a[i]&&e("?");i++;h.push(b(n,1,n)[0]+" ["+q+"]");break;case "E":break a;default:f+="?"+s;break a}!g&&(1===h.length&&"void"===
h[0])&&(h=[]);return c?(f&&h.push(f+"?"),h):f+("("+h.join(", ")+")")}var c=!!u.___cxa_demangle;if(c)try{var d=M(a.length);wa(a.substr(1),d);var f=M(4),g=u.___cxa_demangle(d,0,0,f);if(0===Fa(f,"i32")&&g)return B(g)}catch(h){}finally{d&&Ka(d),f&&Ka(f),g&&Ka(g)}var i=3,k={v:"void",b:"bool",c:"char",s:"short",i:"int",l:"long",f:"float",d:"double",w:"wchar_t",a:"signed char",h:"unsigned char",t:"unsigned short",j:"unsigned int",m:"unsigned long",x:"long long",y:"unsigned long long",z:"..."},m=[],v=n,d=
a;try{if("Object._main"==a||"_main"==a)return"main()";"number"===typeof a&&(a=B(a));if("_"!==a[0]||"_"!==a[1]||"Z"!==a[2])return a;switch(a[3]){case "n":return"operator new()";case "d":return"operator delete()"}d=b()}catch(q){d+="?"}0<=d.indexOf("?")&&!c&&A.W("warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");return d}
function La(){var a;a:{a=Error();if(!a.stack){try{e(Error(0))}catch(b){a=b}if(!a.stack){a="(no stack trace available)";break a}}a=a.stack.toString()}return a.replace(/__Z[\w\d_]+/g,function(a){var b=Ja(a);return a===b?a:a+" ["+b+"]"})}u.stackTrace=function(){return La()};for(var I,N,ya,Ma,J,Na,Da,Ea,Oa=0,na=0,Pa=0,z=0,Qa=0,Ra=0,H=0,Sa=u.TOTAL_STACK||5242880,oa=u.TOTAL_MEMORY||318767104,P=65536;P<oa||P<2*Sa;)P=16777216>P?2*P:P+16777216;
P!==oa&&(u.N("increasing TOTAL_MEMORY to "+P+" to be more reasonable"),oa=P);x("undefined"!==typeof Int32Array&&"undefined"!==typeof Float64Array&&!!(new Int32Array(1)).subarray&&!!(new Int32Array(1)).set,"JS engine does not provide full typed array support");var R=new ArrayBuffer(oa);I=new Int8Array(R);ya=new Int16Array(R);J=new Int32Array(R);N=new Uint8Array(R);Ma=new Uint16Array(R);Na=new Uint32Array(R);Da=new Float32Array(R);Ea=new Float64Array(R);J[0]=255;x(255===N[0]&&0===N[3],"Typed arrays 2 must be run on a little-endian system");
u.HEAP=j;u.HEAP8=I;u.HEAP16=ya;u.HEAP32=J;u.HEAPU8=N;u.HEAPU16=Ma;u.HEAPU32=Na;u.HEAPF32=Da;u.HEAPF64=Ea;function Ta(a){for(;0<a.length;){var b=a.shift();if("function"==typeof b)b();else{var c=b.Ia;"number"===typeof c?b.Y===j?A.R("v",c):A.R("vi",c,[b.Y]):c(b.Y===j?p:b.Y)}}}var Ua=[],Va=[],Wa=[],Xa=[],Ya=[],Za=r;function $a(a){Ua.unshift(a)}u.addOnPreRun=u.Ib=$a;u.addOnInit=u.Fb=function(a){Va.unshift(a)};u.addOnPreMain=u.Hb=function(a){Wa.unshift(a)};u.addOnExit=u.Eb=function(a){Xa.unshift(a)};
function ab(a){Ya.unshift(a)}u.addOnPostRun=u.Gb=ab;function bb(a,b,c){a=(new A.za).nb(a);c&&(a.length=c);b||a.push(0);return a}u.intArrayFromString=bb;u.intArrayToString=function(a){for(var b=[],c=0;c<a.length;c++){var d=a[c];255<d&&(d&=255);b.push(String.fromCharCode(d))}return b.join("")};function wa(a,b,c){a=bb(a,c);for(c=0;c<a.length;)I[b+c>>0]=a[c],c+=1}u.writeStringToMemory=wa;function va(a,b){for(var c=0;c<a.length;c++)I[b+c>>0]=a[c]}u.writeArrayToMemory=va;
function cb(a,b,c){for(var d=0;d<a.length;d++)I[b+d>>0]=a.charCodeAt(d);c||(I[b+a.length>>0]=0)}u.writeAsciiToMemory=cb;function db(a,b){return 0<=a?a:32>=b?2*Math.abs(1<<b-1)+a:Math.pow(2,b)+a}function eb(a,b){if(0>=a)return a;var c=32>=b?Math.abs(1<<b-1):Math.pow(2,b-1);if(a>=c&&(32>=b||a>c))a=-2*c+a;return a}if(!Math.imul||-5!==Math.imul(4294967295,5))Math.imul=function(a,b){var c=a&65535,d=b&65535;return c*d+((a>>>16)*d+c*(b>>>16)<<16)|0};Math.Rb=Math.imul;
var za=Math.abs,Ca=Math.ceil,Ba=Math.floor,Aa=Math.min,fb=0,gb=p,hb=p;function ib(){fb++;u.monitorRunDependencies&&u.monitorRunDependencies(fb)}u.addRunDependency=ib;function jb(){fb--;u.monitorRunDependencies&&u.monitorRunDependencies(fb);if(0==fb&&(gb!==p&&(clearInterval(gb),gb=p),hb)){var a=hb;hb=p;a()}}u.removeRunDependency=jb;u.preloadedImages={};u.preloadedAudios={};var S=p,Oa=8,na=Oa+A.X(145931);Va.push({Ia:function(){kb()}});var S="encode.js.mem",T=A.X(L(12,"i8",K),8);x(0==T%8);
function lb(a,b){Xa.unshift({Ia:a,Y:b})}u._i64Subtract=mb;var nb=0;function U(a){return J[nb>>2]=a}var ob=9,pb=22,qb=34;function rb(){return!!rb.ta}var sb=0,tb=[],V={};function ub(a){if(!a||V[a])return a;for(var b in V)if(V[b].Aa===a)return b;return a}
function vb(){var a=sb;if(!a)return(W.setTempRet0(0),0)|0;var b=V[a],c=b.type;if(!c)return(W.setTempRet0(0),a)|0;var d=Array.prototype.slice.call(arguments);u.___cxa_is_pointer_type(c);vb.buffer||(vb.buffer=M(4));J[vb.buffer>>2]=a;for(var a=vb.buffer,f=0;f<d.length;f++)if(d[f]&&u.___cxa_can_catch(d[f],c,a))return a=J[a>>2],b.Aa=a,(W.setTempRet0(d[f]),a)|0;a=J[a>>2];return(W.setTempRet0(c),a)|0}u._memset=wb;
var xb=Ca,yb={"0":"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",
23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",
43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",
64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",
81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",
98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",
115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};function zb(a,b,c){if(a in yb){if(yb[a].length>c-1)return U(qb);cb(yb[a],b);return 0}return U(pb)}function Ab(a){Ab.buffer||(Ab.buffer=M(256));zb(a,Ab.buffer,256);return Ab.buffer}function Bb(a){return 0===a%4&&(0!==a%100||0===a%400)}function Cb(a,b){for(var c=0,d=0;d<=b;c+=a[d++]);return c}
var Db=[31,29,31,30,31,30,31,31,30,31,30,31],Eb=[31,28,31,30,31,30,31,31,30,31,30,31];function Fb(a,b){for(var c=new Date(a.getTime());0<b;){var d=c.getMonth(),f=(Bb(c.getFullYear())?Db:Eb)[d];if(b>f-c.getDate())b-=f-c.getDate()+1,c.setDate(1),11>d?c.setMonth(d+1):(c.setMonth(0),c.setFullYear(c.getFullYear()+1));else{c.setDate(c.getDate()+b);break}}return c}
function Gb(a,b,c,d){function f(a,b,c){for(a="number"===typeof a?a.toString():a||"";a.length<b;)a=c[0]+a;return a}function g(a,b){return f(a,b,"0")}function h(a,b){var c;if(0===(c=0>a.getFullYear()-b.getFullYear()?-1:0<a.getFullYear()-b.getFullYear()?1:0))if(0===(c=0>a.getMonth()-b.getMonth()?-1:0<a.getMonth()-b.getMonth()?1:0))c=0>a.getDate()-b.getDate()?-1:0<a.getDate()-b.getDate()?1:0;return c}function i(a){switch(a.getDay()){case 0:return new Date(a.getFullYear()-1,11,29);case 1:return a;case 2:return new Date(a.getFullYear(),
0,3);case 3:return new Date(a.getFullYear(),0,2);case 4:return new Date(a.getFullYear(),0,1);case 5:return new Date(a.getFullYear()-1,11,31);case 6:return new Date(a.getFullYear()-1,11,30)}}function k(a){var a=Fb(new Date(a.q+1900,0,1),a.ca),b=i(new Date(a.getFullYear()+1,0,4));return 0>=h(i(new Date(a.getFullYear(),0,4)),a)?0>=h(b,a)?a.getFullYear()+1:a.getFullYear():a.getFullYear()-1}var m=J[d+40>>2],d={vb:J[d>>2],ub:J[d+4>>2],P:J[d+8>>2],O:J[d+12>>2],K:J[d+16>>2],q:J[d+20>>2],Ra:J[d+24>>2],ca:J[d+
28>>2],Xb:J[d+32>>2],tb:J[d+36>>2],wb:m?B(m):""},c=B(c),m={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S"},v;for(v in m)c=c.replace(RegExp(v,"g"),m[v]);var q="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),y="January February March April May June July August September October November December".split(" "),m={"%a":function(a){return q[a.Ra].substring(0,3)},"%A":function(a){return q[a.Ra]},
"%b":function(a){return y[a.K].substring(0,3)},"%B":function(a){return y[a.K]},"%C":function(a){return g((a.q+1900)/100|0,2)},"%d":function(a){return g(a.O,2)},"%e":function(a){return f(a.O,2," ")},"%g":function(a){return k(a).toString().substring(2)},"%G":function(a){return k(a)},"%H":function(a){return g(a.P,2)},"%I":function(a){return g(13>a.P?a.P:a.P-12,2)},"%j":function(a){return g(a.O+Cb(Bb(a.q+1900)?Db:Eb,a.K-1),3)},"%m":function(a){return g(a.K+1,2)},"%M":function(a){return g(a.ub,2)},"%n":ca("\n"),
"%p":function(a){return 0<a.P&&13>a.P?"AM":"PM"},"%S":function(a){return g(a.vb,2)},"%t":ca("\t"),"%u":function(a){return(new Date(a.q+1900,a.K+1,a.O,0,0,0,0)).getDay()||7},"%U":function(a){var b=new Date(a.q+1900,0,1),c=0===b.getDay()?b:Fb(b,7-b.getDay()),a=new Date(a.q+1900,a.K,a.O);return 0>h(c,a)?g(Math.ceil((31-c.getDate()+(Cb(Bb(a.getFullYear())?Db:Eb,a.getMonth()-1)-31)+a.getDate())/7),2):0===h(c,b)?"01":"00"},"%V":function(a){var b=i(new Date(a.q+1900,0,4)),c=i(new Date(a.q+1901,0,4)),d=Fb(new Date(a.q+
1900,0,1),a.ca);return 0>h(d,b)?"53":0>=h(c,d)?"01":g(Math.ceil((b.getFullYear()<a.q+1900?a.ca+32-b.getDate():a.ca+1-b.getDate())/7),2)},"%w":function(a){return(new Date(a.q+1900,a.K+1,a.O,0,0,0,0)).getDay()},"%W":function(a){var b=new Date(a.q,0,1),c=1===b.getDay()?b:Fb(b,0===b.getDay()?1:7-b.getDay()+1),a=new Date(a.q+1900,a.K,a.O);return 0>h(c,a)?g(Math.ceil((31-c.getDate()+(Cb(Bb(a.getFullYear())?Db:Eb,a.getMonth()-1)-31)+a.getDate())/7),2):0===h(c,b)?"01":"00"},"%y":function(a){return(a.q+1900).toString().substring(2)},
"%Y":function(a){return a.q+1900},"%z":function(a){var a=a.tb,b=0<=a,a=Math.abs(a)/60;return(b?"+":"-")+String("0000"+(100*(a/60)+a%60)).slice(-4)},"%Z":function(a){return a.wb},"%%":ca("%")};for(v in m)0<=c.indexOf(v)&&(c=c.replace(RegExp(v,"g"),m[v](d)));v=bb(c,r);if(v.length>b)return 0;va(v,a);return v.length-1}function Hb(a,b){Hb.oa||(Hb.oa={});a in Hb.oa||(A.R("v",b),Hb.oa[a]=1)}var G=j;u._strlen=Ib;
function Jb(a,b,c){a=G.ma(a);if(!a)return U(ob),-1;try{return G.write(a,I,b,c)}catch(d){return G.na(d),-1}}function Kb(a){a=G.T(a);return!a?-1:a.bb}function Lb(a,b){var c=db(a&255);I[Lb.u>>0]=c;var d=Kb(b);if(-1==Jb(d,Lb.u,1)){if(c=G.T(b))c.error=n;return-1}return c}var Mb={};u._i64Add=Nb;var Ob=za;function Pb(a,b,c,d){c*=b;if(0==c)return 0;var f=Kb(d),a=Jb(f,a,c);if(-1==a){if(b=G.T(d))b.error=n;return 0}return a/b|0}
function Qb(a,b,c){a=G.ma(a);if(!a)return U(ob),-1;try{return G.pb(a,I,b,c)}catch(d){return G.na(d),-1}}function Rb(a,b,c,d){c*=b;if(0==c)return 0;var f=0,d=G.T(d);if(!d)return U(ob),0;for(;d.Ta.length&&0<c;)I[a++>>0]=d.Ta.pop(),c--,f++;a=Qb(d.bb,a,c);if(-1==a)return d&&(d.error=n),0;f+=a;f<c&&(d.Ha=n);return f/b|0}function Sb(a){var b=G.T(a);if(!b||b.Ha||b.error)return-1;a=Rb(Sb.u,1,1,a);return 0==a?-1:-1==a?(b.error=n,-1):N[Sb.u>>0]}var Tb=za;
function Ub(){if(!Ub.u){for(var a=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,
55304,55304,55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],b=M(2*a.length),c=0;c<a.length;c++)ya[b+2*c>>1]=a[c];Ub.u=L([b+256],"i16*",Ga)}return Ub.u}var Vb=0;function Ka(){}u._free=Ka;function M(a){return A.S(a+8)+8&4294967288}u._malloc=M;function Wb(a,b){return a%b}u._bitshift64Lshr=Xb;
var Yb=L([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0],"i8",K);u._llvm_ctlz_i32=Zb;
function $b(){if(!$b.u){for(var a=[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,
245,246,247,248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,
148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],b=M(4*a.length),c=0;c<a.length;c++)J[b+4*c>>2]=a[c];$b.u=L([b+512],"i32*",
Ga)}return $b.u}function ac(a){return 0>a||0===a&&-Infinity===1/a}
function bc(a,b){function c(a){var c;"double"===a?c=(J[T>>2]=J[b+f>>2],J[T+4>>2]=J[b+(f+4)>>2],+Ea[T>>3]):"i64"==a?c=[J[b+f>>2],J[b+(f+4)>>2]]:(a="i32",c=J[b+f>>2]);f+=A.Ja(a);return c}for(var d=a,f=0,g=[],h,i;;){var k=d;h=I[d>>0];if(0===h)break;i=I[d+1>>0];if(37==h){var m=r,v=r,q=r,y=r,E=r;a:for(;;){switch(i){case 43:m=n;break;case 45:v=n;break;case 35:q=n;break;case 48:if(y)break a;else{y=n;break}case 32:E=n;break;default:break a}d++;i=I[d+1>>0]}var F=0;if(42==i)F=c("i32"),d++,i=I[d+1>>0];else for(;48<=
i&&57>=i;)F=10*F+(i-48),d++,i=I[d+1>>0];var Q=r,C=-1;if(46==i){C=0;Q=n;d++;i=I[d+1>>0];if(42==i)C=c("i32"),d++;else for(;;){i=I[d+1>>0];if(48>i||57<i)break;C=10*C+(i-48);d++}i=I[d+1>>0]}0>C&&(C=6,Q=r);var s;switch(String.fromCharCode(i)){case "h":i=I[d+2>>0];104==i?(d++,s=1):s=2;break;case "l":i=I[d+2>>0];108==i?(d++,s=8):s=4;break;case "L":case "q":case "j":s=8;break;case "z":case "t":case "I":s=4;break;default:s=p}s&&d++;i=I[d+1>>0];switch(String.fromCharCode(i)){case "d":case "i":case "u":case "o":case "x":case "X":case "p":k=
100==i||105==i;s=s||4;var O=h=c("i"+8*s),l;8==s&&(h=A.jb(h[0],h[1],117==i));4>=s&&(h=(k?eb:db)(h&Math.pow(256,s)-1,8*s));var ba=Math.abs(h),k="";if(100==i||105==i)l=8==s&&cc?cc.stringify(O[0],O[1],p):eb(h,8*s).toString(10);else if(117==i)l=8==s&&cc?cc.stringify(O[0],O[1],n):db(h,8*s).toString(10),h=Math.abs(h);else if(111==i)l=(q?"0":"")+ba.toString(8);else if(120==i||88==i){k=q&&0!=h?"0x":"";if(8==s&&cc)if(O[1]){l=(O[1]>>>0).toString(16);for(q=(O[0]>>>0).toString(16);8>q.length;)q="0"+q;l+=q}else l=
(O[0]>>>0).toString(16);else if(0>h){h=-h;l=(ba-1).toString(16);O=[];for(q=0;q<l.length;q++)O.push((15-parseInt(l[q],16)).toString(16));for(l=O.join("");l.length<2*s;)l="f"+l}else l=ba.toString(16);88==i&&(k=k.toUpperCase(),l=l.toUpperCase())}else 112==i&&(0===ba?l="(nil)":(k="0x",l=ba.toString(16)));if(Q)for(;l.length<C;)l="0"+l;0<=h&&(m?k="+"+k:E&&(k=" "+k));"-"==l.charAt(0)&&(k="-"+k,l=l.substr(1));for(;k.length+l.length<F;)v?l+=" ":y?l="0"+l:k=" "+k;l=k+l;l.split("").forEach(function(a){g.push(a.charCodeAt(0))});
break;case "f":case "F":case "e":case "E":case "g":case "G":h=c("double");if(isNaN(h))l="nan",y=r;else if(isFinite(h)){Q=r;s=Math.min(C,20);if(103==i||71==i)Q=n,C=C||1,s=parseInt(h.toExponential(s).split("e")[1],10),C>s&&-4<=s?(i=(103==i?"f":"F").charCodeAt(0),C-=s+1):(i=(103==i?"e":"E").charCodeAt(0),C--),s=Math.min(C,20);if(101==i||69==i)l=h.toExponential(s),/[eE][-+]\d$/.test(l)&&(l=l.slice(0,-1)+"0"+l.slice(-1));else if(102==i||70==i)l=h.toFixed(s),0===h&&ac(h)&&(l="-"+l);k=l.split("e");if(Q&&
!q)for(;1<k[0].length&&-1!=k[0].indexOf(".")&&("0"==k[0].slice(-1)||"."==k[0].slice(-1));)k[0]=k[0].slice(0,-1);else for(q&&-1==l.indexOf(".")&&(k[0]+=".");C>s++;)k[0]+="0";l=k[0]+(1<k.length?"e"+k[1]:"");69==i&&(l=l.toUpperCase());0<=h&&(m?l="+"+l:E&&(l=" "+l))}else l=(0>h?"-":"")+"inf",y=r;for(;l.length<F;)l=v?l+" ":y&&("-"==l[0]||"+"==l[0])?l[0]+"0"+l.slice(1):(y?"0":" ")+l;97>i&&(l=l.toUpperCase());l.split("").forEach(function(a){g.push(a.charCodeAt(0))});break;case "s":y=(m=c("i8*"))?Ib(m):6;
Q&&(y=Math.min(y,C));if(!v)for(;y<F--;)g.push(32);if(m)for(q=0;q<y;q++)g.push(N[m++>>0]);else g=g.concat(bb("(null)".substr(0,y),n));if(v)for(;y<F--;)g.push(32);break;case "c":for(v&&g.push(c("i8"));0<--F;)g.push(32);v||g.push(c("i8"));break;case "n":v=c("i32*");J[v>>2]=g.length;break;case "%":g.push(h);break;default:for(q=k;q<d+2;q++)g.push(I[q>>0])}d+=2}else g.push(h),d+=1}return g}function dc(a,b,c){c=bc(b,c);b=A.ba();a=Pb(L(c,"i8",Ha),1,c.length,a);A.ra(b);return a}
function ec(){if(!ec.u){for(var a=[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,
245,246,247,248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,
137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],b=M(4*a.length),c=0;c<a.length;c++)J[b+
4*c>>2]=a[c];ec.u=L([b+512],"i32*",Ga)}return ec.u}u._bitshift64Shl=fc;u._memcpy=gc;var hc=1;function ic(a){ic.Za||(H=H+4095&-4096,ic.Za=n,x(A.S),ic.Ya=A.S,A.S=function(){D("cannot dynamically allocate, sbrk now has control")});var b=H;0!=a&&ic.Ya(a);return b}u._memmove=jc;function kc(a,b){var c=M(a*b);wb(c,0,a*b);return c}u._calloc=kc;function lc(a){try{return Ka(a)}catch(b){}}
function mc(){if(mc.Pa)mc.Pa=r;else{W.setThrew(0);var a=tb.pop();if(a){if(a=ub(a)){var b=V[a];x(0<b.U);b.U--;0===b.U&&(b.Ea&&A.R("vi",b.Ea,[a]),delete V[a],lc(a))}sb=0}}}function nc(a,b){return ac(a)===ac(b)?a:-a}var oc=L(1,"i32*",K),pc=L(1,"i32*",K),qc=L(1,"i32*",K),rc=L(1,"i32*",K),nb=A.Qa(4);J[nb>>2]=0;Lb.u=L([0],"i8",K);Sb.u=L([0],"i8",K);Pa=z=A.X(na);Qa=Pa+Sa;Ra=H=A.X(Qa);x(Ra<oa,"TOTAL_MEMORY not big enough for stack");
var sc=L([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,
1,0,3,0,1,0,2,0,1,0],"i8",3),Aa=Math.min;
var W=(function(global,env,buffer) {
// EMSCRIPTEN_START_ASM
"use asm";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.STACKTOP|0;var j=env.STACK_MAX|0;var k=env.tempDoublePtr|0;var l=env.ABORT|0;var m=env.cttz_i8|0;var n=env.ctlz_i8|0;var o=env.___dso_handle|0;var p=env._stderr|0;var q=env._stdin|0;var r=env._stdout|0;var s=0;var t=0;var u=0;var v=0;var w=+env.NaN,x=+env.Infinity;var y=0,z=0,A=0,B=0,C=0.0,D=0,E=0,F=0,G=0.0;var H=0;var I=0;var J=0;var K=0;var L=0;var M=0;var N=0;var O=0;var P=0;var Q=0;var R=global.Math.floor;var S=global.Math.abs;var T=global.Math.sqrt;var U=global.Math.pow;var V=global.Math.cos;var W=global.Math.sin;var X=global.Math.tan;var Y=global.Math.acos;var Z=global.Math.asin;var _=global.Math.atan;var $=global.Math.atan2;var aa=global.Math.exp;var ba=global.Math.log;var ca=global.Math.ceil;var da=global.Math.imul;var ea=env.abort;var fa=env.assert;var ga=env.min;var ha=env.invoke_iiii;var ia=env.invoke_viiiiiii;var ja=env.invoke_viiiii;var ka=env.invoke_vi;var la=env.invoke_vii;var ma=env.invoke_viiiiiiiii;var na=env.invoke_ii;var oa=env.invoke_viiiiiid;var pa=env.invoke_viii;var qa=env.invoke_viiiiid;var ra=env.invoke_v;var sa=env.invoke_iiiiiiiii;var ta=env.invoke_iiiii;var ua=env.invoke_viiiiiiii;var va=env.invoke_viiiiii;var wa=env.invoke_iii;var xa=env.invoke_iiiiii;var ya=env.invoke_viiii;var za=env._fabs;var Aa=env._strftime;var Ba=env._pthread_cond_wait;var Ca=env.___cxa_rethrow;var Da=env._send;var Ea=env._fread;var Fa=env._log2;var Ga=env._fmod;var Ha=env.___cxa_guard_acquire;var Ia=env._fmodl;var Ja=env._vfprintf;var Ka=env._ungetc;var La=env.___cxa_free_exception;var Ma=env.___cxa_allocate_exception;var Na=env.___cxa_find_matching_catch;var Oa=env._ceilf;var Pa=env.___ctype_toupper_loc;var Qa=env._fflush;var Ra=env.___cxa_guard_release;var Sa=env.__addDays;var Ta=env._pwrite;var Ua=env._strerror_r;var Va=env._strftime_l;var Wa=env._pthread_mutex_lock;var Xa=env.__reallyNegative;var Ya=env._sbrk;var Za=env._uselocale;var _a=env._catgets;var $a=env._newlocale;var ab=env.___cxa_begin_catch;var bb=env._emscripten_memcpy_big;var cb=env._fileno;var db=env.___resumeException;var eb=env.__ZSt18uncaught_exceptionv;var fb=env._sysconf;var gb=env.___setErrNo;var hb=env._pthread_getspecific;var ib=env.__arraySum;var jb=env.___ctype_tolower_loc;var kb=env.___cxa_end_catch;var lb=env._pthread_mutex_unlock;var mb=env._pthread_once;var nb=env._pread;var ob=env.___ctype_b_loc;var pb=env._pthread_key_create;var qb=env._getc;var rb=env._write;var sb=env.__isLeapYear;var tb=env.___errno_location;var ub=env._recv;var vb=env._pthread_setspecific;var wb=env._fgetc;var xb=env._copysign;var yb=env._fputc;var zb=env.___cxa_throw;var Ab=env._freelocale;var Bb=env._pthread_cond_broadcast;var Cb=env._copysignl;var Db=env._abort;var Eb=env._catclose;var Fb=env._fwrite;var Gb=env._time;var Hb=env._fprintf;var Ib=env._strerror;var Jb=env.___cxa_atexit;var Kb=env._abs;var Lb=env.__formatString;var Mb=env._atexit;var Nb=env._catopen;var Ob=env._read;var Pb=0.0;
// EMSCRIPTEN_START_FUNCS
function xd(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0;l=i;i=i+2656|0;q=l+2328|0;r=l+2624|0;o=l+2600|0;p=l+2312|0;Ha=l+2316|0;ga=l+2376|0;ha=l+2536|0;ea=l+2324|0;h=l+2112|0;g=l+2592|0;ja=l+2116|0;na=l+2120|0;oa=l+2124|0;la=l+2128|0;ma=l+2132|0;ka=l+2544|0;qa=l+2196|0;ua=l+2140|0;va=l+2144|0;sa=l+2148|0;ta=l+2152|0;ra=l+2156|0;xa=l+2160|0;Ga=l+2164|0;Fa=l+2168|0;Da=l+2172|0;Ea=l+2176|0;Ca=l+2180|0;Aa=l+2184|0;Ba=l+2188|0;ya=l+2192|0;za=l+2540|0;ca=l+2320|0;ba=l+2200|0;ia=l+2204|0;pa=l+2208|0;wa=l+2212|0;aa=l+2216|0;$=l+2220|0;A=l+2224|0;B=l+2228|0;y=l+2232|0;z=l+2236|0;x=l+2240|0;D=l+2244|0;H=l+2248|0;I=l+2252|0;F=l+2256|0;G=l+2260|0;E=l+2264|0;K=l+2268|0;O=l+2272|0;P=l+2276|0;M=l+2280|0;N=l+2284|0;L=l+2288|0;R=l+2292|0;_=l+2296|0;Z=l+2300|0;X=l+2588|0;Y=l+2596|0;W=l+2604|0;U=l+2612|0;V=l+2620|0;S=l+2628|0;T=l+2644|0;w=l+2648|0;v=l+2332|0;C=l+2336|0;J=l+2340|0;Q=l+2344|0;u=l+2348|0;t=l+2352|0;La=l+2356|0;Na=l+2360|0;Oa=l+2364|0;Pa=l+2368|0;Ka=l+2372|0;Ja=l+2616|0;Ia=l+2380|0;Ua=l+2384|0;Ta=l+2388|0;Sa=l+2392|0;Qa=l+2396|0;Ma=l+2400|0;Ya=l+2404|0;Za=l+2408|0;tb=l+2412|0;ub=l+2420|0;vb=l+2424|0;sb=l+2428|0;ob=l+2436|0;pb=l+2444|0;qb=l+2448|0;nb=l+2452|0;jb=l+2460|0;kb=l+2468|0;lb=l+2472|0;ib=l+2476|0;$a=l+2484|0;bb=l+2492|0;ab=l+2496|0;cb=l+2500|0;eb=l+2504|0;db=l+2508|0;fb=l+2512|0;gb=l+2516|0;wb=l+2524|0;rb=l+2528|0;mb=l+2532|0;hb=l+2136|0;xb=l+2100|0;yb=l+2560|0;_a=l+2108|0;n=l+2096|0;s=l+2104|0;k=l+2548|0;j=l+2576|0;Wa=l+2304|0;Ra=l;Xa=l+2608|0;Va=l+2652|0;da=l+2564|0;fa=l+2632|0;m=l+2308|0;c[_a>>2]=b;c[n>>2]=e;c[s>>2]=f;c[yb>>2]=k;c[xb>>2]=c[yb>>2];c[wb>>2]=c[xb>>2];e=c[wb>>2]|0;c[l+2520>>2]=e;c[ub>>2]=sb;c[vb>>2]=-1;b=c[vb>>2]|0;c[tb>>2]=c[ub>>2];c[l+2416>>2]=b;c[c[tb>>2]>>2]=0;c[rb>>2]=c[sb>>2];c[l+2432>>2]=rb;c[e>>2]=0;c[pb>>2]=nb;c[qb>>2]=-1;b=c[qb>>2]|0;c[ob>>2]=c[pb>>2];c[l+2440>>2]=b;c[c[ob>>2]>>2]=0;c[mb>>2]=c[nb>>2];c[l+2456>>2]=mb;c[e+4>>2]=0;c[kb>>2]=ib;c[lb>>2]=-1;b=c[lb>>2]|0;c[jb>>2]=c[kb>>2];c[l+2464>>2]=b;c[c[jb>>2]>>2]=0;c[hb>>2]=c[ib>>2];c[l+2480>>2]=hb;c[fb>>2]=e+8;c[gb>>2]=0;e=c[gb>>2]|0;c[eb>>2]=c[fb>>2];c[db>>2]=e;e=c[eb>>2]|0;c[cb>>2]=db;b=c[c[cb>>2]>>2]|0;c[bb>>2]=e;c[ab>>2]=b;b=c[bb>>2]|0;c[l+2488>>2]=b;c[$a>>2]=ab;c[b>>2]=c[c[$a>>2]>>2];Bd(j,c[n>>2]|0);c[Wa>>2]=0;Cd(Ra);c[Xa>>2]=0;while(1){if(!((c[Xa>>2]|0)>>>0<(c[n>>2]|0)>>>0))break;if(((c[Xa>>2]|0)+1|0)==(c[n>>2]|0))f=1;else f=(d[(c[s>>2]|0)+(c[Xa>>2]|0)>>0]|0|0)!=(d[(c[s>>2]|0)+((c[Xa>>2]|0)+1)>>0]|0|0);a[Va>>0]=f&1;yb=c[Wa>>2]|0;xb=c[Xa>>2]|0;c[Ya>>2]=j;c[Za>>2]=xb;c[(c[c[Ya>>2]>>2]|0)+(c[Za>>2]<<2)>>2]=yb;Dd(Ra,d[(c[_a>>2]|0)+(c[Xa>>2]|0)>>0]|0);if(a[Va>>0]&1){c[Qa>>2]=k;c[Ma>>2]=Ra;f=c[Qa>>2]|0;yb=c[f+4>>2]|0;c[Sa>>2]=f;c[Ta>>2]=(c[Sa>>2]|0)+8;c[Ua>>2]=c[Ta>>2];if((yb|0)!=(c[c[Ua>>2]>>2]|0)){c[Ia>>2]=f;c[Ja>>2]=(c[Ia>>2]|0)+8;c[Ka>>2]=c[Ja>>2];xb=c[Ka>>2]|0;c[La>>2]=c[f+4>>2];yb=c[La>>2]|0;e=c[Ma>>2]|0;c[Na>>2]=xb;c[Oa>>2]=yb;c[Pa>>2]=e;e=c[Oa>>2]|0;if((e|0)!=0)By(e|0,c[Pa>>2]|0,2096)|0;yb=f+4|0;c[yb>>2]=(c[yb>>2]|0)+2096}else hf(f,c[Ma>>2]|0);Ed(Ra);c[Wa>>2]=(c[Wa>>2]|0)+1}c[Xa>>2]=(c[Xa>>2]|0)+1}c[t>>2]=da;c[u>>2]=c[t>>2];c[v>>2]=c[u>>2];yb=c[v>>2]|0;c[w>>2]=yb;c[y>>2]=x;c[z>>2]=-1;xb=c[z>>2]|0;c[A>>2]=c[y>>2];c[B>>2]=xb;c[c[A>>2]>>2]=0;c[C>>2]=c[x>>2];c[D>>2]=C;c[yb>>2]=0;c[F>>2]=E;c[G>>2]=-1;xb=c[G>>2]|0;c[H>>2]=c[F>>2];c[I>>2]=xb;c[c[H>>2]>>2]=0;c[J>>2]=c[E>>2];c[K>>2]=J;c[yb+4>>2]=0;c[M>>2]=L;c[N>>2]=-1;xb=c[N>>2]|0;c[O>>2]=c[M>>2];c[P>>2]=xb;c[c[O>>2]>>2]=0;c[Q>>2]=c[L>>2];c[R>>2]=Q;c[S>>2]=yb+8;c[T>>2]=0;yb=c[T>>2]|0;c[U>>2]=c[S>>2];c[V>>2]=yb;yb=c[U>>2]|0;c[W>>2]=V;xb=c[c[W>>2]>>2]|0;c[X>>2]=yb;c[Y>>2]=xb;xb=c[X>>2]|0;c[Z>>2]=xb;c[_>>2]=Y;c[xb>>2]=c[c[_>>2]>>2];c[$>>2]=fa;c[aa>>2]=c[$>>2];c[ba>>2]=c[aa>>2];xb=c[ba>>2]|0;c[ca>>2]=xb;c[ea>>2]=g;c[h>>2]=-1;yb=c[h>>2]|0;c[ga>>2]=c[ea>>2];c[ha>>2]=yb;c[c[ga>>2]>>2]=0;c[ia>>2]=c[g>>2];c[ja>>2]=ia;c[xb>>2]=0;c[la>>2]=ka;c[ma>>2]=-1;yb=c[ma>>2]|0;c[na>>2]=c[la>>2];c[oa>>2]=yb;c[c[na>>2]>>2]=0;c[pa>>2]=c[ka>>2];c[qa>>2]=pa;c[xb+4>>2]=0;c[sa>>2]=ra;c[ta>>2]=-1;yb=c[ta>>2]|0;c[ua>>2]=c[sa>>2];c[va>>2]=yb;c[c[ua>>2]>>2]=0;c[wa>>2]=c[ra>>2];c[xa>>2]=wa;c[ya>>2]=xb+8;c[za>>2]=0;xb=c[za>>2]|0;c[Aa>>2]=c[ya>>2];c[Ba>>2]=xb;xb=c[Aa>>2]|0;c[Ca>>2]=Ba;yb=c[c[Ca>>2]>>2]|0;c[Da>>2]=xb;c[Ea>>2]=yb;yb=c[Da>>2]|0;c[Fa>>2]=yb;c[Ga>>2]=Ea;c[yb>>2]=c[c[Ga>>2]>>2];c[Ha>>2]=k;yb=c[Ha>>2]|0;Fd(k,1,((c[yb+4>>2]|0)-(c[yb>>2]|0)|0)/2096|0,256,da,fa);c[m>>2]=0;while(1){if(!((c[m>>2]|0)>>>0<(c[n>>2]|0)>>>0))break;yb=c[m>>2]|0;c[o>>2]=j;c[p>>2]=yb;yb=c[(c[c[o>>2]>>2]|0)+(c[p>>2]<<2)>>2]|0;c[q>>2]=fa;c[r>>2]=yb;a[(c[s>>2]|0)+(c[m>>2]|0)>>0]=c[(c[c[q>>2]>>2]|0)+(c[r>>2]<<2)>>2];c[m>>2]=(c[m>>2]|0)+1}Gd(fa);yd(da);Gd(j);yd(k);i=l;return}function yd(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;zd(c[d>>2]|0);i=b;return}function zd(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Ad(c[d>>2]|0);i=b;return}function Ad(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=i;i=i+144|0;w=d+48|0;B=d+8|0;C=d+84|0;A=d;x=d+16|0;y=d+4|0;z=d+132|0;v=d+80|0;u=d+44|0;t=d+20|0;E=d+24|0;e=d+28|0;D=d+32|0;g=d+36|0;f=d+40|0;s=d+76|0;l=d+124|0;k=d+128|0;j=d+52|0;h=d+56|0;p=d+64|0;q=d+68|0;r=d+92|0;m=d+96|0;n=d+100|0;o=d+104|0;I=d+108|0;K=d+116|0;J=d+120|0;H=d+88|0;F=d+72|0;G=d+12|0;c[F>>2]=b;b=c[F>>2]|0;F=c[b>>2]|0;c[K>>2]=H;c[J>>2]=-1;J=c[J>>2]|0;c[I>>2]=c[K>>2];c[d+112>>2]=J;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[d+60>>2]=G;if((F|0)==0){i=d;return}c[D>>2]=b;K=c[D>>2]|0;D=c[K>>2]|0;c[E>>2]=K;c[e>>2]=D;D=c[E>>2]|0;while(1){if((c[e>>2]|0)==(c[D+4>>2]|0))break;c[t>>2]=D;c[u>>2]=(c[t>>2]|0)+8;c[v>>2]=c[u>>2];K=c[v>>2]|0;I=D+4|0;J=(c[I>>2]|0)+ -2096|0;c[I>>2]=J;c[w>>2]=J;J=c[w>>2]|0;c[x>>2]=K;c[y>>2]=J;J=c[x>>2]|0;K=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=J;c[C>>2]=K}c[s>>2]=b;c[f>>2]=(c[s>>2]|0)+8;c[g>>2]=c[f>>2];I=c[g>>2]|0;K=c[b>>2]|0;c[h>>2]=b;J=c[h>>2]|0;c[j>>2]=J;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];J=((c[c[l>>2]>>2]|0)-(c[J>>2]|0)|0)/2096|0;c[m>>2]=I;c[n>>2]=K;c[o>>2]=J;J=c[n>>2]|0;K=c[o>>2]|0;c[p>>2]=c[m>>2];c[q>>2]=J;c[r>>2]=K;Sw(c[q>>2]|0);i=d;return}function Bd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;kf(c[f>>2]|0,c[e>>2]|0);i=d;return}function Cd(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;jf(c[d>>2]|0);i=b;return}function Dd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;a=c[f>>2]|0;b=a+(c[e>>2]<<2)|0;c[b>>2]=(c[b>>2]|0)+1;a=a+2080|0;c[a>>2]=(c[a>>2]|0)+1;i=d;return}function Ed(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;vy(a|0,0,2080)|0;c[a+2080>>2]=0;i=b;return}function Fd(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0.0;B=i;i=i+176|0;J=B+156|0;K=B+120|0;G=B;H=B+104|0;k=B+64|0;l=B+148|0;n=B+20|0;o=B+108|0;q=B+24|0;r=B+28|0;j=B+32|0;F=B+36|0;v=B+40|0;w=B+44|0;x=B+48|0;y=B+128|0;z=B+136|0;A=B+144|0;U=B+152|0;V=B+160|0;S=B+68|0;T=B+72|0;Q=B+76|0;R=B+80|0;O=B+84|0;P=B+88|0;M=B+92|0;N=B+96|0;u=B+100|0;I=B+4|0;D=B+116|0;t=B+112|0;E=B+124|0;p=B+52|0;s=B+132|0;m=B+8|0;W=B+56|0;L=B+140|0;C=B+60|0;c[u>>2]=a;c[I>>2]=b;c[D>>2]=d;c[t>>2]=e;c[E>>2]=f;c[p>>2]=g;c[s>>2]=da(c[I>>2]|0,c[D>>2]|0)|0;a=c[s>>2]|0;c[W>>2]=1;Jd(m,a,W);Kd(c[E>>2]|0,c[s>>2]|0);Ld(c[p>>2]|0,c[s>>2]|0);c[L>>2]=0;while(1){if((c[L>>2]|0)>=(c[s>>2]|0))break;W=c[L>>2]|0;c[M>>2]=c[E>>2];c[N>>2]=W;W=(c[c[M>>2]>>2]|0)+((c[N>>2]|0)*2096|0)|0;a=c[L>>2]|0;c[O>>2]=c[u>>2];c[P>>2]=a;By(W|0,(c[c[O>>2]>>2]|0)+((c[P>>2]|0)*2096|0)|0,2096)|0;W=c[L>>2]|0;c[Q>>2]=c[u>>2];c[R>>2]=W;X=+Md((c[c[Q>>2]>>2]|0)+((c[R>>2]|0)*2096|0)|0);W=c[L>>2]|0;c[S>>2]=c[E>>2];c[T>>2]=W;h[(c[c[S>>2]>>2]|0)+((c[T>>2]|0)*2096|0)+2088>>3]=X;W=c[L>>2]|0;a=c[L>>2]|0;c[U>>2]=c[p>>2];c[V>>2]=a;c[(c[c[U>>2]>>2]|0)+(c[V>>2]<<2)>>2]=W;c[L>>2]=(c[L>>2]|0)+1}a:do if((c[I>>2]|0)>1){c[C>>2]=0;while(1){if((c[C>>2]|0)>=(c[D>>2]|0))break a;c[j>>2]=c[E>>2];c[F>>2]=0;a=(c[c[j>>2]>>2]|0)+((c[F>>2]|0)*2096|0)|0;c[G>>2]=m;c[H>>2]=0;W=(c[c[G>>2]>>2]|0)+(c[H>>2]<<2)|0;b=da(c[C>>2]|0,c[I>>2]|0)|0;c[J>>2]=c[p>>2];c[K>>2]=b;Nd(a,W,(c[c[J>>2]>>2]|0)+(c[K>>2]<<2)|0,c[I>>2]|0,c[t>>2]|0);c[C>>2]=(c[C>>2]|0)+1}}while(0);c[k>>2]=c[E>>2];c[l>>2]=0;a=(c[c[k>>2]>>2]|0)+((c[l>>2]|0)*2096|0)|0;c[n>>2]=m;c[o>>2]=0;b=(c[c[n>>2]>>2]|0)+(c[o>>2]<<2)|0;c[q>>2]=c[p>>2];c[r>>2]=0;Nd(a,b,(c[c[q>>2]>>2]|0)+(c[r>>2]<<2)|0,c[s>>2]|0,c[t>>2]|0);c[v>>2]=c[u>>2];c[w>>2]=0;b=(c[c[v>>2]>>2]|0)+((c[w>>2]|0)*2096|0)|0;a=c[s>>2]|0;c[x>>2]=c[E>>2];c[y>>2]=0;W=(c[c[x>>2]>>2]|0)+((c[y>>2]|0)*2096|0)|0;c[z>>2]=c[p>>2];c[A>>2]=0;Od(b,a,W,(c[c[z>>2]>>2]|0)+(c[A>>2]<<2)|0);Pd(c[E>>2]|0,c[p>>2]|0);Gd(m);i=B;return}function Gd(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Hd(c[d>>2]|0);i=b;return}function Hd(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Id(c[d>>2]|0);i=b;return}function Id(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=i;i=i+144|0;w=d+48|0;B=d+8|0;C=d+84|0;A=d;x=d+16|0;y=d+4|0;z=d+132|0;v=d+80|0;u=d+44|0;t=d+20|0;E=d+24|0;e=d+28|0;D=d+32|0;g=d+36|0;f=d+40|0;s=d+76|0;l=d+124|0;k=d+128|0;j=d+52|0;h=d+56|0;p=d+64|0;q=d+68|0;r=d+92|0;m=d+96|0;n=d+100|0;o=d+104|0;I=d+108|0;K=d+116|0;J=d+120|0;H=d+88|0;F=d+72|0;G=d+12|0;c[F>>2]=b;b=c[F>>2]|0;F=c[b>>2]|0;c[K>>2]=H;c[J>>2]=-1;J=c[J>>2]|0;c[I>>2]=c[K>>2];c[d+112>>2]=J;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[d+60>>2]=G;if((F|0)==0){i=d;return}c[D>>2]=b;K=c[D>>2]|0;D=c[K>>2]|0;c[E>>2]=K;c[e>>2]=D;D=c[E>>2]|0;while(1){if((c[e>>2]|0)==(c[D+4>>2]|0))break;c[t>>2]=D;c[u>>2]=(c[t>>2]|0)+8;c[v>>2]=c[u>>2];K=c[v>>2]|0;I=D+4|0;J=(c[I>>2]|0)+ -4|0;c[I>>2]=J;c[w>>2]=J;J=c[w>>2]|0;c[x>>2]=K;c[y>>2]=J;J=c[x>>2]|0;K=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=J;c[C>>2]=K}c[s>>2]=b;c[f>>2]=(c[s>>2]|0)+8;c[g>>2]=c[f>>2];I=c[g>>2]|0;K=c[b>>2]|0;c[h>>2]=b;J=c[h>>2]|0;c[j>>2]=J;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];J=((c[c[l>>2]>>2]|0)-(c[J>>2]|0)|0)/4|0;c[m>>2]=I;c[n>>2]=K;c[o>>2]=J;J=c[n>>2]|0;K=c[o>>2]|0;c[p>>2]=c[m>>2];c[q>>2]=J;c[r>>2]=K;Sw(c[q>>2]|0);i=d;return}function Jd(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;h=e+8|0;g=e+4|0;f=e;c[h>>2]=a;c[g>>2]=b;c[f>>2]=d;ff(c[h>>2]|0,c[g>>2]|0,c[f>>2]|0);i=e;return}function Kd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;o=i;i=i+80|0;m=o+36|0;n=o+4|0;g=o+28|0;q=o;e=o+32|0;f=o+8|0;p=o+68|0;l=o+24|0;k=o+60|0;j=o+64|0;v=o+40|0;h=o+44|0;t=o+48|0;u=o+52|0;w=o+56|0;x=o+16|0;s=o+20|0;r=o+12|0;c[x>>2]=b;c[s>>2]=d;d=c[x>>2]|0;c[w>>2]=d;b=c[w>>2]|0;c[r>>2]=((c[b+4>>2]|0)-(c[b>>2]|0)|0)/2096|0;if((c[r>>2]|0)>>>0<(c[s>>2]|0)>>>0){Ze(d,(c[s>>2]|0)-(c[r>>2]|0)|0);i=o;return}if(!((c[r>>2]|0)>>>0>(c[s>>2]|0)>>>0)){i=o;return}r=(c[d>>2]|0)+((c[s>>2]|0)*2096|0)|0;c[t>>2]=d;c[u>>2]=r;r=c[u>>2]|0;c[v>>2]=c[t>>2];c[h>>2]=r;r=c[v>>2]|0;while(1){if((c[h>>2]|0)==(c[r+4>>2]|0))break;c[j>>2]=r;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];x=c[l>>2]|0;b=r+4|0;w=(c[b>>2]|0)+ -2096|0;c[b>>2]=w;c[m>>2]=w;w=c[m>>2]|0;c[e>>2]=x;c[f>>2]=w;w=c[e>>2]|0;x=c[f>>2]|0;a[q+0>>0]=a[p+0>>0]|0;c[n>>2]=w;c[g>>2]=x}i=o;return}function Ld(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;o=i;i=i+80|0;m=o+36|0;n=o+4|0;g=o+28|0;q=o;e=o+32|0;f=o+8|0;p=o+68|0;l=o+24|0;k=o+60|0;j=o+64|0;v=o+40|0;h=o+44|0;t=o+48|0;u=o+52|0;w=o+56|0;x=o+16|0;s=o+20|0;r=o+12|0;c[x>>2]=b;c[s>>2]=d;d=c[x>>2]|0;c[w>>2]=d;b=c[w>>2]|0;c[r>>2]=((c[b+4>>2]|0)-(c[b>>2]|0)|0)/4|0;if((c[r>>2]|0)>>>0<(c[s>>2]|0)>>>0){Qe(d,(c[s>>2]|0)-(c[r>>2]|0)|0);i=o;return}if(!((c[r>>2]|0)>>>0>(c[s>>2]|0)>>>0)){i=o;return}r=(c[d>>2]|0)+(c[s>>2]<<2)|0;c[t>>2]=d;c[u>>2]=r;r=c[u>>2]|0;c[v>>2]=c[t>>2];c[h>>2]=r;r=c[v>>2]|0;while(1){if((c[h>>2]|0)==(c[r+4>>2]|0))break;c[j>>2]=r;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];x=c[l>>2]|0;b=r+4|0;w=(c[b>>2]|0)+ -4|0;c[b>>2]=w;c[m>>2]=w;w=c[m>>2]|0;c[e>>2]=x;c[f>>2]=w;w=c[e>>2]|0;x=c[f>>2]|0;a[q+0>>0]=a[p+0>>0]|0;c[n>>2]=w;c[g>>2]=x}i=o;return}function Md(a){a=a|0;var b=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0.0;b=i;i=i+560|0;e=b;f=b+16|0;l=b+12|0;m=b+24|0;g=b+32|0;j=b+20|0;k=b+8|0;c[f>>2]=a;if((c[(c[f>>2]|0)+2080>>2]|0)==0){h[e>>3]=12.0;n=+h[e>>3];i=b;return+n}c[l>>2]=0;c[m>>2]=0;while(1){if((c[m>>2]|0)>=520)break;if((c[l>>2]|0)>=5)break;if((c[(c[f>>2]|0)+(c[m>>2]<<2)>>2]|0)>0)c[l>>2]=(c[l>>2]|0)+1;c[m>>2]=(c[m>>2]|0)+1}if((c[l>>2]|0)==1){h[e>>3]=12.0;n=+h[e>>3];i=b;return+n}if((c[l>>2]|0)==2){h[e>>3]=+(20+(c[(c[f>>2]|0)+2080>>2]|0)|0);n=+h[e>>3];i=b;return+n}vy(g|0,0,520)|0;Wk(c[f>>2]|0,520,15,g);c[j>>2]=0;c[k>>2]=0;while(1){if((c[k>>2]|0)>=520)break;m=da(c[(c[f>>2]|0)+(c[k>>2]<<2)>>2]|0,d[g+(c[k>>2]|0)>>0]|0)|0;c[j>>2]=(c[j>>2]|0)+m;c[k>>2]=(c[k>>2]|0)+1}do if((c[l>>2]|0)!=3)if((c[l>>2]|0)==4){c[j>>2]=(c[j>>2]|0)+37;break}else{m=Pe(g,520)|0;c[j>>2]=(c[j>>2]|0)+m;break}else c[j>>2]=(c[j>>2]|0)+28;while(0);h[e>>3]=+(c[j>>2]|0);n=+h[e>>3];i=b;return+n}function Nd(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0,Uc=0,Vc=0,Wc=0,Xc=0,Yc=0,Zc=0,_c=0,$c=0,ad=0,bd=0,cd=0,dd=0,ed=0,fd=0,gd=0,hd=0,id=0,jd=0,kd=0,ld=0,md=0,nd=0,od=0,pd=0,qd=0,rd=0,sd=0,td=0,ud=0,vd=0,wd=0,xd=0,yd=0,zd=0,Ad=0,Bd=0,Cd=0,Dd=0,Ed=0,Fd=0,Hd=0,Id=0;m=i;i=i+1120|0;_a=m+580|0;Za=m+568|0;t=m+564|0;u=m+312|0;w=m+544|0;x=m+228|0;n=m+1040|0;o=m+1056|0;A=m+1072|0;B=m+1080|0;H=m+1088|0;N=m+1064|0;O=m+156|0;P=m+148|0;Q=m+144|0;R=m+1020|0;S=m+616|0;X=m+556|0;aa=m+352|0;ba=m+332|0;$=m+48|0;Y=m+224|0;Z=m+220|0;_=m+1104|0;W=m+160|0;V=m+164|0;U=m+168|0;L=m+172|0;M=m+176|0;J=m+180|0;K=m+184|0;I=m+1016|0;ca=m+728|0;da=m+612|0;ea=m+600|0;ga=m+552|0;ia=m+356|0;ja=m+348|0;qa=m+344|0;ra=m+328|0;oa=m+236|0;pa=m+232|0;la=m+244|0;ma=m+248|0;ka=m+252|0;ya=m+256|0;za=m+260|0;wa=m+264|0;xa=m+268|0;ta=m+272|0;ua=m+276|0;sa=m+280|0;q=m+284|0;Qa=m+288|0;Va=m+292|0;Wa=m+296|0;Ta=m+300|0;Ra=m+304|0;Sa=m+308|0;Ua=m+88|0;Pa=m+316|0;Oa=m+320|0;Ma=m+324|0;Na=m+1012|0;Xa=m+792|0;Ya=m+724|0;La=m+8|0;Ka=m+64|0;Ja=m+604|0;Ia=m+596|0;Ga=m+592|0;Ha=m+548|0;Ea=m+360|0;Fa=m+364|0;Da=m+80|0;Ba=m+72|0;Aa=m+24|0;hb=m+380|0;mb=m+384|0;nb=m+388|0;lb=m+120|0;ib=m+396|0;jb=m+400|0;k=m+1106|0;j=m+408|0;fb=m+412|0;eb=m+416|0;cb=m+420|0;db=m+424|0;ab=m+428|0;bb=m+432|0;$a=m+436|0;ob=m+440|0;pb=m+444|0;qb=m+448|0;xb=m+452|0;yb=m+456|0;vb=m+460|0;wb=m+464|0;kc=m+468|0;ub=m+472|0;Gb=m+476|0;Hb=m+480|0;Eb=m+484|0;Fb=m+488|0;Db=m+492|0;Jb=m+496|0;Nb=m+500|0;Ob=m+504|0;Lb=m+508|0;Mb=m+512|0;Kb=m+516|0;Qb=m+520|0;Ub=m+524|0;Vb=m+528|0;Sb=m+532|0;Tb=m+1052|0;Rb=m+1060|0;Xb=m+1068|0;ec=m+1076|0;dc=m+1084|0;bc=m+1092|0;cc=m+1096|0;ac=m+576|0;_b=m+1100|0;$b=m+584|0;Yb=m+588|0;Zb=m+1008|0;Cb=m+984|0;Bb=m+788|0;Ib=m+744|0;Pb=m+720|0;Wb=m+680|0;Ab=m+672|0;zb=m+668|0;ad=m+608|0;bd=m+620|0;cd=m+624|0;dd=m+628|0;$c=m+632|0;_c=m+636|0;Zc=m+640|0;xc=m+644|0;wc=m+648|0;vc=m+652|0;tc=m+656|0;uc=m+660|0;sc=m+664|0;rc=m+56|0;qc=m+368|0;pc=m+16|0;mc=m+372|0;nc=m+676|0;oc=m+376|0;rb=m+684|0;lc=m+688|0;gc=m+692|0;hc=m+696|0;ic=m+704|0;Xc=m+712|0;Yc=m+716|0;Wc=m+392|0;Vc=m+32|0;Uc=m+732|0;Sc=m;Qc=m+736|0;Rc=m+740|0;Oc=m+404|0;Pc=m+748|0;Mc=m+752|0;Lc=m+756|0;Kc=m+760|0;Jc=m+764|0;Ic=m+768|0;Hc=m+772|0;Gc=m+776|0;Nc=m+780|0;Fc=m+784|0;Ec=m+128|0;Dc=m+796|0;Bc=m+40|0;yc=m+800|0;zc=m+804|0;Ac=m+808|0;yd=m+812|0;zd=m+820|0;Ad=m+824|0;xd=m+828|0;td=m+836|0;ud=m+844|0;vd=m+848|0;sd=m+852|0;od=m+860|0;pd=m+868|0;qd=m+872|0;nd=m+876|0;ed=m+884|0;gd=m+892|0;fd=m+896|0;hd=m+900|0;jd=m+904|0;id=m+908|0;kd=m+912|0;ld=m+916|0;Bd=m+924|0;wd=m+928|0;rd=m+932|0;md=m+936|0;Cd=m+940|0;Dd=m+944|0;Fd=m+948|0;Ed=m+952|0;Hd=m+956|0;Id=m+960|0;z=m+964|0;C=m+968|0;G=m+972|0;E=m+976|0;s=m+980|0;p=m+136|0;r=m+988|0;l=m+992|0;gb=m+192|0;fc=m+152|0;Cc=m+340|0;Tc=m+1024|0;jc=m+1032|0;kb=m+204|0;tb=m+560|0;sb=m+216|0;v=m+336|0;y=m+1044|0;D=m+536|0;F=m+1048|0;T=m+540|0;fa=m+572|0;na=m+1004|0;va=m+240|0;Ca=m+1105|0;ha=m+188|0;c[z>>2]=b;c[C>>2]=d;c[G>>2]=e;c[E>>2]=f;c[s>>2]=g;h[p>>3]=0.0;c[r>>2]=1;c[Hd>>2]=l;c[Id>>2]=m+1107;d=c[Id>>2]|0;c[Fd>>2]=c[Hd>>2];c[Ed>>2]=d;ve(c[Fd>>2]|0,c[Ed>>2]|0);c[Dd>>2]=gb;c[Cd>>2]=c[Dd>>2];c[Bd>>2]=c[Cd>>2];d=c[Bd>>2]|0;c[m+920>>2]=d;c[zd>>2]=xd;c[Ad>>2]=-1;b=c[Ad>>2]|0;c[yd>>2]=c[zd>>2];c[m+816>>2]=b;c[c[yd>>2]>>2]=0;c[wd>>2]=c[xd>>2];c[m+832>>2]=wd;c[d>>2]=0;c[ud>>2]=sd;c[vd>>2]=-1;b=c[vd>>2]|0;c[td>>2]=c[ud>>2];c[m+840>>2]=b;c[c[td>>2]>>2]=0;c[rd>>2]=c[sd>>2];c[m+856>>2]=rd;c[d+4>>2]=0;c[pd>>2]=nd;c[qd>>2]=-1;b=c[qd>>2]|0;c[od>>2]=c[pd>>2];c[m+864>>2]=b;c[c[od>>2]>>2]=0;c[md>>2]=c[nd>>2];c[m+880>>2]=md;c[kd>>2]=d+8;c[ld>>2]=0;d=c[ld>>2]|0;c[jd>>2]=c[kd>>2];c[id>>2]=d;d=c[jd>>2]|0;c[hd>>2]=id;b=c[c[hd>>2]>>2]|0;c[gd>>2]=d;c[fd>>2]=b;b=c[gd>>2]|0;c[m+888>>2]=b;c[ed>>2]=fd;c[b>>2]=c[c[ed>>2]>>2];c[fc>>2]=0;while(1){if((c[fc>>2]|0)>=(c[E>>2]|0))break;Id=(c[G>>2]|0)+(c[fc>>2]<<2)|0;c[yc>>2]=l;c[zc>>2]=Id;Ne(Ac,c[yc>>2]|0,c[zc>>2]|0);a[Bc+0>>0]=a[Ac+0>>0]|0;a[Bc+1>>0]=a[Ac+1>>0]|0;a[Bc+2>>0]=a[Ac+2>>0]|0;a[Bc+3>>0]=a[Ac+3>>0]|0;c[Dc>>2]=Cc;Id=c[Dc>>2]|0;a[Ec+0>>0]=a[Bc+0>>0]|0;a[Ec+1>>0]=a[Bc+1>>0]|0;a[Ec+2>>0]=a[Bc+2>>0]|0;a[Ec+3>>0]=a[Bc+3>>0]|0;c[Fc>>2]=Id;c[c[Fc>>2]>>2]=c[Ec>>2];c[Gc>>2]=l;c[Hc>>2]=c[Gc>>2];c[Ic>>2]=c[Hc>>2];c[Jc>>2]=(c[Ic>>2]|0)+4;c[Kc>>2]=c[Jc>>2];c[Lc>>2]=c[Kc>>2];c[Mc>>2]=c[Lc>>2];Id=c[Mc>>2]|0;c[Oc>>2]=Nc;c[Pc>>2]=Id;Id=c[Pc>>2]|0;c[Qc>>2]=c[Oc>>2];c[Rc>>2]=Id;c[c[Qc>>2]>>2]=c[Rc>>2];a[Sc+0>>0]=a[Nc+0>>0]|0;a[Sc+1>>0]=a[Nc+1>>0]|0;a[Sc+2>>0]=a[Nc+2>>0]|0;a[Sc+3>>0]=a[Nc+3>>0]|0;c[Uc>>2]=Tc;Id=c[Uc>>2]|0;a[Vc+0>>0]=a[Sc+0>>0]|0;a[Vc+1>>0]=a[Sc+1>>0]|0;a[Vc+2>>0]=a[Sc+2>>0]|0;a[Vc+3>>0]=a[Sc+3>>0]|0;c[Wc>>2]=Id;c[c[Wc>>2]>>2]=c[Vc>>2];c[Xc>>2]=Cc;c[Yc>>2]=Tc;do if((c[c[Xc>>2]>>2]|0)==(c[c[Yc>>2]>>2]|0)){g=(c[G>>2]|0)+(c[fc>>2]<<2)|0;c[gc>>2]=l;c[hc>>2]=g;re(ic,c[gc>>2]|0,c[hc>>2]|0);c[rb>>2]=jc;c[lc>>2]=ic;g=c[lc>>2]|0;c[mc>>2]=c[rb>>2];c[nc>>2]=g;g=c[mc>>2]|0;Id=c[nc>>2]|0;c[oc+0>>2]=c[Id+0>>2];a[pc+0>>0]=a[oc+0>>0]|0;a[pc+1>>0]=a[oc+1>>0]|0;a[pc+2>>0]=a[oc+2>>0]|0;a[pc+3>>0]=a[oc+3>>0]|0;c[qc>>2]=g;Id=c[qc>>2]|0;a[rc+0>>0]=a[pc+0>>0]|0;a[rc+1>>0]=a[pc+1>>0]|0;a[rc+2>>0]=a[pc+2>>0]|0;a[rc+3>>0]=a[pc+3>>0]|0;c[sc>>2]=Id;c[c[sc>>2]>>2]=c[rc>>2];a[g+4>>0]=a[(c[nc>>2]|0)+4>>0]&1;g=(c[G>>2]|0)+(c[fc>>2]<<2)|0;c[tc>>2]=gb;c[uc>>2]=g;g=c[tc>>2]|0;Id=c[g+4>>2]|0;c[vc>>2]=g;c[wc>>2]=(c[vc>>2]|0)+8;c[xc>>2]=c[wc>>2];if((Id|0)==(c[c[xc>>2]>>2]|0)){Ng(g,c[uc>>2]|0);break}c[Zc>>2]=g;c[_c>>2]=(c[Zc>>2]|0)+8;c[$c>>2]=c[_c>>2];Hd=c[$c>>2]|0;c[ad>>2]=c[g+4>>2];Id=c[ad>>2]|0;f=c[uc>>2]|0;c[bd>>2]=Hd;c[cd>>2]=Id;c[dd>>2]=f;f=c[cd>>2]|0;if((f|0)!=0)c[f>>2]=c[c[dd>>2]>>2];Id=g+4|0;c[Id>>2]=(c[Id>>2]|0)+4}while(0);c[fc>>2]=(c[fc>>2]|0)+1}c[zb>>2]=kb;c[Ab>>2]=c[zb>>2];c[Bb>>2]=c[Ab>>2];Hd=c[Bb>>2]|0;c[Cb>>2]=Hd;c[Eb>>2]=Db;c[Fb>>2]=-1;Id=c[Fb>>2]|0;c[Gb>>2]=c[Eb>>2];c[Hb>>2]=Id;c[c[Gb>>2]>>2]=0;c[Ib>>2]=c[Db>>2];c[Jb>>2]=Ib;c[Hd>>2]=0;c[Lb>>2]=Kb;c[Mb>>2]=-1;Id=c[Mb>>2]|0;c[Nb>>2]=c[Lb>>2];c[Ob>>2]=Id;c[c[Nb>>2]>>2]=0;c[Pb>>2]=c[Kb>>2];c[Qb>>2]=Pb;c[Hd+4>>2]=0;c[Sb>>2]=Rb;c[Tb>>2]=-1;Id=c[Tb>>2]|0;c[Ub>>2]=c[Sb>>2];c[Vb>>2]=Id;c[c[Ub>>2]>>2]=0;c[Wb>>2]=c[Rb>>2];c[Xb>>2]=Wb;c[Yb>>2]=Hd+8;c[Zb>>2]=0;Hd=c[Zb>>2]|0;c[_b>>2]=c[Yb>>2];c[$b>>2]=Hd;Hd=c[_b>>2]|0;c[ac>>2]=$b;Id=c[c[ac>>2]>>2]|0;c[bc>>2]=Hd;c[cc>>2]=Id;Id=c[bc>>2]|0;c[dc>>2]=Id;c[ec>>2]=cc;c[Id>>2]=c[c[ec>>2]>>2];c[tb>>2]=0;while(1){Hd=c[tb>>2]|0;c[ub>>2]=gb;Id=c[ub>>2]|0;if(!(Hd>>>0<(((c[Id+4>>2]|0)-(c[Id>>2]|0)|0)/4|0)>>>0))break;c[sb>>2]=(c[tb>>2]|0)+1;while(1){Hd=c[sb>>2]|0;c[kc>>2]=gb;Id=c[kc>>2]|0;if(!(Hd>>>0<(((c[Id+4>>2]|0)-(c[Id>>2]|0)|0)/4|0)>>>0))break;Fd=c[z>>2]|0;Hd=c[C>>2]|0;Id=c[tb>>2]|0;c[vb>>2]=gb;c[wb>>2]=Id;Id=c[(c[c[vb>>2]>>2]|0)+(c[wb>>2]<<2)>>2]|0;Ed=c[sb>>2]|0;c[xb>>2]=gb;c[yb>>2]=Ed;xe(Fd,Hd,Id,c[(c[c[xb>>2]>>2]|0)+(c[yb>>2]<<2)>>2]|0,kb);c[sb>>2]=(c[sb>>2]|0)+1}c[tb>>2]=(c[tb>>2]|0)+1}a:while(1){c[q>>2]=gb;Id=c[q>>2]|0;if(!((((c[Id+4>>2]|0)-(c[Id>>2]|0)|0)/4|0)>>>0>(c[r>>2]|0)>>>0))break;c[n>>2]=kb;c[o>>2]=0;if(+h[(c[c[n>>2]>>2]|0)+(c[o>>2]<<5)+24>>3]>=+h[p>>3]){h[p>>3]=1.0e+99;c[r>>2]=c[s>>2];continue}c[t>>2]=kb;c[u>>2]=0;c[v>>2]=c[(c[c[t>>2]>>2]|0)+(c[u>>2]<<5)>>2];c[w>>2]=kb;c[x>>2]=0;c[y>>2]=c[(c[c[w>>2]>>2]|0)+(c[x>>2]<<5)+4>>2];ke((c[z>>2]|0)+((c[v>>2]|0)*2096|0)|0,(c[z>>2]|0)+((c[y>>2]|0)*2096|0)|0);c[A>>2]=kb;c[B>>2]=0;h[(c[z>>2]|0)+((c[v>>2]|0)*2096|0)+2088>>3]=+h[(c[c[A>>2]>>2]|0)+(c[B>>2]<<5)+16>>3];Id=(c[C>>2]|0)+(c[v>>2]<<2)|0;c[Id>>2]=(c[Id>>2]|0)+(c[(c[C>>2]|0)+(c[y>>2]<<2)>>2]|0);c[D>>2]=0;while(1){if((c[D>>2]|0)>=(c[E>>2]|0))break;if((c[(c[G>>2]|0)+(c[D>>2]<<2)>>2]|0)==(c[y>>2]|0))c[(c[G>>2]|0)+(c[D>>2]<<2)>>2]=c[v>>2];c[D>>2]=(c[D>>2]|0)+1}c[F>>2]=0;while(1){Hd=(c[F>>2]|0)+1|0;c[H>>2]=gb;Id=c[H>>2]|0;if(!(Hd>>>0<(((c[Id+4>>2]|0)-(c[Id>>2]|0)|0)/4|0)>>>0))break;Id=c[F>>2]|0;c[N>>2]=gb;c[O>>2]=Id;if((c[(c[c[N>>2]>>2]|0)+(c[O>>2]<<2)>>2]|0)>=(c[y>>2]|0)){Id=(c[F>>2]|0)+1|0;c[P>>2]=gb;c[Q>>2]=Id;Id=c[(c[c[P>>2]>>2]|0)+(c[Q>>2]<<2)>>2]|0;Hd=c[F>>2]|0;c[R>>2]=gb;c[S>>2]=Hd;c[(c[c[R>>2]>>2]|0)+(c[S>>2]<<2)>>2]=Id}c[F>>2]=(c[F>>2]|0)+1}c[I>>2]=gb;Id=c[I>>2]|0;rb=(c[Id+4>>2]|0)+ -4|0;c[J>>2]=Id;c[K>>2]=rb;rb=c[K>>2]|0;c[L>>2]=c[J>>2];c[M>>2]=rb;rb=c[L>>2]|0;while(1){if((c[M>>2]|0)==(c[rb+4>>2]|0))break;c[U>>2]=rb;c[V>>2]=(c[U>>2]|0)+8;c[W>>2]=c[V>>2];Id=c[W>>2]|0;Fd=rb+4|0;Hd=(c[Fd>>2]|0)+ -4|0;c[Fd>>2]=Hd;c[X>>2]=Hd;Hd=c[X>>2]|0;c[Y>>2]=Id;c[Z>>2]=Hd;Hd=c[Y>>2]|0;Id=c[Z>>2]|0;a[$+0>>0]=a[_+0>>0]|0;c[aa>>2]=Hd;c[ba>>2]=Id}c[T>>2]=0;while(1){Hd=c[T>>2]|0;c[ca>>2]=kb;Id=c[ca>>2]|0;if(!(Hd>>>0<(((c[Id+4>>2]|0)-(c[Id>>2]|0)|0)/32|0)>>>0))break;Id=c[T>>2]|0;c[da>>2]=kb;c[ea>>2]=Id;c[fa>>2]=(c[c[da>>2]>>2]|0)+(c[ea>>2]<<5);if(!((((c[c[fa>>2]>>2]|0)!=(c[v>>2]|0)?(c[(c[fa>>2]|0)+4>>2]|0)!=(c[v>>2]|0):0)?(c[c[fa>>2]>>2]|0)!=(c[y>>2]|0):0)?(c[(c[fa>>2]|0)+4>>2]|0)!=(c[y>>2]|0):0))a[(c[fa>>2]|0)+8>>0]=0;c[T>>2]=(c[T>>2]|0)+1}b:while(1){c[ga>>2]=kb;Id=c[ga>>2]|0;if((c[Id>>2]|0)==(c[Id+4>>2]|0))break;c[ia>>2]=kb;c[ja>>2]=0;if(!(a[(c[c[ia>>2]>>2]|0)+(c[ja>>2]<<5)+8>>0]&1^1))break;c[ka>>2]=kb;Id=c[ka>>2]|0;Hd=c[Id>>2]|0;c[la>>2]=Id;c[ma>>2]=Hd;Hd=c[ma>>2]|0;c[oa>>2]=na;c[pa>>2]=Hd;Hd=c[pa>>2]|0;c[qa>>2]=c[oa>>2];c[ra>>2]=Hd;c[c[qa>>2]>>2]=c[ra>>2];c[sa>>2]=kb;Hd=c[sa>>2]|0;Id=c[Hd+4>>2]|0;c[ta>>2]=Hd;c[ua>>2]=Id;Id=c[ua>>2]|0;c[wa>>2]=va;c[xa>>2]=Id;Id=c[xa>>2]|0;c[ya>>2]=c[wa>>2];c[za>>2]=Id;c[c[ya>>2]>>2]=c[za>>2];a[Aa+0>>0]=a[na+0>>0]|0;a[Aa+1>>0]=a[na+1>>0]|0;a[Aa+2>>0]=a[na+2>>0]|0;a[Aa+3>>0]=a[na+3>>0]|0;a[Ba+0>>0]=a[va+0>>0]|0;a[Ba+1>>0]=a[va+1>>0]|0;a[Ba+2>>0]=a[va+2>>0]|0;a[Ba+3>>0]=a[va+3>>0]|0;a[Da+0>>0]=a[Ca+0>>0]|0;c[Ea+0>>2]=c[Aa+0>>2];c[Fa+0>>2]=c[Ba+0>>2];c[Ga>>2]=Ba;c[Ha>>2]=Aa;c[Ia>>2]=c[Ga>>2];Id=c[c[Ia>>2]>>2]|0;c[Ja>>2]=c[Ha>>2];Id=(Id-(c[c[Ja>>2]>>2]|0)|0)/32|0;a[Ka+0>>0]=a[Ea+0>>0]|0;a[Ka+1>>0]=a[Ea+1>>0]|0;a[Ka+2>>0]=a[Ea+2>>0]|0;a[Ka+3>>0]=a[Ea+3>>0]|0;a[La+0>>0]=a[Fa+0>>0]|0;a[La+1>>0]=a[Fa+1>>0]|0;a[La+2>>0]=a[Fa+2>>0]|0;a[La+3>>0]=a[Fa+3>>0]|0;c[Ma>>2]=Da;c[Na>>2]=Id;if((c[Na>>2]|0)>1){c[Oa>>2]=Ka;Id=c[c[Oa>>2]>>2]|0;c[Pa>>2]=La;Hd=c[Pa>>2]|0;c[Hd>>2]=(c[Hd>>2]|0)+ -32;c[Qa>>2]=Hd;Hd=c[c[Qa>>2]>>2]|0;c[Ra>>2]=Id;c[Sa>>2]=Hd;c[Ta>>2]=c[Ra>>2];Hd=c[Ta>>2]|0;c[Ua+0>>2]=c[Hd+0>>2];c[Ua+4>>2]=c[Hd+4>>2];c[Ua+8>>2]=c[Hd+8>>2];c[Ua+12>>2]=c[Hd+12>>2];c[Ua+16>>2]=c[Hd+16>>2];c[Ua+20>>2]=c[Hd+20>>2];c[Ua+24>>2]=c[Hd+24>>2];c[Ua+28>>2]=c[Hd+28>>2];Hd=c[Ra>>2]|0;c[Va>>2]=c[Sa>>2];Id=c[Va>>2]|0;c[Hd+0>>2]=c[Id+0>>2];c[Hd+4>>2]=c[Id+4>>2];c[Hd+8>>2]=c[Id+8>>2];c[Hd+12>>2]=c[Id+12>>2];c[Hd+16>>2]=c[Id+16>>2];c[Hd+20>>2]=c[Id+20>>2];c[Hd+24>>2]=c[Id+24>>2];c[Hd+28>>2]=c[Id+28>>2];Hd=c[Sa>>2]|0;c[Wa>>2]=Ua;Id=c[Wa>>2]|0;c[Hd+0>>2]=c[Id+0>>2];c[Hd+4>>2]=c[Id+4>>2];c[Hd+8>>2]=c[Id+8>>2];c[Hd+12>>2]=c[Id+12>>2];c[Hd+16>>2]=c[Id+16>>2];c[Hd+20>>2]=c[Id+20>>2];c[Hd+24>>2]=c[Id+24>>2];c[Hd+28>>2]=c[Id+28>>2];c[Xa+0>>2]=c[Ka+0>>2];c[Ya+0>>2]=c[La+0>>2];Hd=c[Ma>>2]|0;Id=(c[Na>>2]|0)-1|0;c[Za+0>>2]=c[Xa+0>>2];c[_a+0>>2]=c[Ya+0>>2];Be(Za,_a,Hd,Id)}c[$a>>2]=kb;Id=c[$a>>2]|0;rb=(c[Id+4>>2]|0)+ -32|0;c[ab>>2]=Id;c[bb>>2]=rb;rb=c[bb>>2]|0;c[cb>>2]=c[ab>>2];c[db>>2]=rb;rb=c[cb>>2]|0;while(1){if((c[db>>2]|0)==(c[rb+4>>2]|0))continue b;c[eb>>2]=rb;c[fb>>2]=(c[eb>>2]|0)+8;c[j>>2]=c[fb>>2];Id=c[j>>2]|0;Fd=rb+4|0;Hd=(c[Fd>>2]|0)+ -32|0;c[Fd>>2]=Hd;c[hb>>2]=Hd;Hd=c[hb>>2]|0;c[ib>>2]=Id;c[jb>>2]=Hd;Hd=c[ib>>2]|0;Id=c[jb>>2]|0;a[lb+0>>0]=a[k+0>>0]|0;c[mb>>2]=Hd;c[nb>>2]=Id}}c[ha>>2]=0;while(1){Hd=c[ha>>2]|0;c[ob>>2]=gb;Id=c[ob>>2]|0;if(!(Hd>>>0<(((c[Id+4>>2]|0)-(c[Id>>2]|0)|0)/4|0)>>>0))continue a;Fd=c[z>>2]|0;Hd=c[C>>2]|0;Id=c[v>>2]|0;Ed=c[ha>>2]|0;c[pb>>2]=gb;c[qb>>2]=Ed;xe(Fd,Hd,Id,c[(c[c[pb>>2]>>2]|0)+(c[qb>>2]<<2)>>2]|0,kb);c[ha>>2]=(c[ha>>2]|0)+1}}ye(kb);Gd(gb);le(l);i=m;return}function Od(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0;Y=i;i=i+480|0;C=Y+432|0;B=Y+16|0;A=Y+200|0;y=Y+32|0;w=Y+304|0;x=Y+372|0;u=Y+360|0;v=Y+312|0;s=Y+196|0;r=Y+256|0;q=Y+128|0;p=Y+120|0;o=Y+444|0;n=Y+104|0;m=Y+100|0;t=Y+412|0;G=Y+96|0;H=Y+416|0;E=Y+236|0;F=Y+436|0;I=Y+112|0;W=Y+116|0;V=Y+72|0;U=Y+124|0;T=Y+8|0;R=Y+132|0;S=Y+136|0;P=Y+404|0;Q=Y+140|0;N=Y+144|0;M=Y+148|0;L=Y+152|0;O=Y+156|0;La=Y+160|0;Ka=Y+164|0;K=Y+168|0;Ia=Y+172|0;pa=Y+176|0;qa=Y+180|0;na=Y+184|0;oa=Y+188|0;la=Y+192|0;ka=Y+24|0;ja=Y+400|0;ha=Y+40|0;fa=Y+204|0;ga=Y+208|0;da=Y+212|0;j=Y+216|0;ba=Y+220|0;aa=Y+468|0;$=Y+472|0;_=Y+440|0;Z=Y+448|0;g=Y+240|0;X=Y+244|0;ca=Y+248|0;Ga=Y+252|0;Fa=Y+48|0;Ea=Y+260|0;Da=Y;Ba=Y+268|0;Ca=Y+272|0;za=Y+276|0;Aa=Y+280|0;xa=Y+284|0;wa=Y+288|0;va=Y+292|0;ya=Y+296|0;Za=Y+300|0;Ya=Y+80|0;Xa=Y+308|0;Wa=Y+64|0;Ta=Y+316|0;Ua=Y+320|0;Va=Y+396|0;Ra=Y+324|0;Sa=Y+328|0;Na=Y+332|0;Oa=Y+336|0;Pa=Y+344|0;$a=Y+352|0;_a=Y+356|0;ab=Y+452|0;bb=Y+364|0;sa=Y+460|0;l=Y+464|0;J=Y+376|0;Ha=Y+380|0;ea=Y+384|0;Ma=Y+408|0;Qa=Y+424|0;ta=Y+228|0;ra=Y+232|0;ua=Y+88|0;ma=Y+456|0;ia=Y+264|0;Ja=Y+56|0;D=Y+368|0;z=Y+224|0;k=Y+108|0;c[sa>>2]=b;c[l>>2]=d;c[J>>2]=e;c[Ha>>2]=f;c[ab>>2]=ea;c[bb>>2]=Y+476;b=c[bb>>2]|0;c[$a>>2]=c[ab>>2];c[_a>>2]=b;ve(c[$a>>2]|0,c[_a>>2]|0);c[Ma>>2]=0;while(1){if((c[Ma>>2]|0)>=(c[l>>2]|0))break;bb=(c[Ha>>2]|0)+(c[Ma>>2]<<2)|0;c[Na>>2]=ea;c[Oa>>2]=bb;re(Pa,c[Na>>2]|0,c[Oa>>2]|0);c[Ra>>2]=Qa;c[Sa>>2]=Pa;bb=c[Sa>>2]|0;c[Ta>>2]=c[Ra>>2];c[Ua>>2]=bb;bb=c[Ta>>2]|0;ab=c[Ua>>2]|0;c[Va+0>>2]=c[ab+0>>2];a[Wa+0>>0]=a[Va+0>>0]|0;a[Wa+1>>0]=a[Va+1>>0]|0;a[Wa+2>>0]=a[Va+2>>0]|0;a[Wa+3>>0]=a[Va+3>>0]|0;c[Xa>>2]=bb;ab=c[Xa>>2]|0;a[Ya+0>>0]=a[Wa+0>>0]|0;a[Ya+1>>0]=a[Wa+1>>0]|0;a[Ya+2>>0]=a[Wa+2>>0]|0;a[Ya+3>>0]=a[Wa+3>>0]|0;c[Za>>2]=ab;c[c[Za>>2]>>2]=c[Ya>>2];a[bb+4>>0]=a[(c[Ua>>2]|0)+4>>0]&1;c[Ma>>2]=(c[Ma>>2]|0)+1}c[ta>>2]=0;while(1){if((c[ta>>2]|0)>=(c[l>>2]|0))break;if((c[ta>>2]|0)==0)f=c[c[Ha>>2]>>2]|0;else f=c[(c[Ha>>2]|0)+((c[ta>>2]|0)-1<<2)>>2]|0;c[ra>>2]=f;h[ua>>3]=+je((c[sa>>2]|0)+((c[ta>>2]|0)*2096|0)|0,(c[J>>2]|0)+((c[ra>>2]|0)*2096|0)|0);c[va>>2]=ea;c[wa>>2]=c[va>>2];c[xa>>2]=c[wa>>2];bb=c[c[xa>>2]>>2]|0;c[za>>2]=ya;c[Aa>>2]=bb;bb=c[Aa>>2]|0;c[Ba>>2]=c[za>>2];c[Ca>>2]=bb;c[c[Ba>>2]>>2]=c[Ca>>2];a[Da+0>>0]=a[ya+0>>0]|0;a[Da+1>>0]=a[ya+1>>0]|0;a[Da+2>>0]=a[ya+2>>0]|0;a[Da+3>>0]=a[ya+3>>0]|0;c[Ea>>2]=ma;bb=c[Ea>>2]|0;a[Fa+0>>0]=a[Da+0>>0]|0;a[Fa+1>>0]=a[Da+1>>0]|0;a[Fa+2>>0]=a[Da+2>>0]|0;a[Fa+3>>0]=a[Da+3>>0]|0;c[Ga>>2]=bb;c[c[Ga>>2]>>2]=c[Fa>>2];while(1){c[X>>2]=ea;c[g>>2]=c[X>>2];c[Z>>2]=c[g>>2];c[_>>2]=(c[Z>>2]|0)+4;c[$>>2]=c[_>>2];c[aa>>2]=c[$>>2];c[ba>>2]=c[aa>>2];bb=c[ba>>2]|0;c[da>>2]=ca;c[j>>2]=bb;bb=c[j>>2]|0;c[fa>>2]=c[da>>2];c[ga>>2]=bb;c[c[fa>>2]>>2]=c[ga>>2];a[ha+0>>0]=a[ca+0>>0]|0;a[ha+1>>0]=a[ca+1>>0]|0;a[ha+2>>0]=a[ca+2>>0]|0;a[ha+3>>0]=a[ca+3>>0]|0;c[ja>>2]=ia;bb=c[ja>>2]|0;a[ka+0>>0]=a[ha+0>>0]|0;a[ka+1>>0]=a[ha+1>>0]|0;a[ka+2>>0]=a[ha+2>>0]|0;a[ka+3>>0]=a[ha+3>>0]|0;c[la>>2]=bb;c[c[la>>2]>>2]=c[ka>>2];c[na>>2]=ma;c[oa>>2]=ia;bb=c[oa>>2]|0;c[pa>>2]=c[na>>2];c[qa>>2]=bb;if(!((c[c[pa>>2]>>2]|0)==(c[c[qa>>2]>>2]|0)^1))break;bb=(c[sa>>2]|0)+((c[ta>>2]|0)*2096|0)|0;c[Ia>>2]=ma;h[Ja>>3]=+je(bb,(c[J>>2]|0)+((c[(c[c[Ia>>2]>>2]|0)+16>>2]|0)*2096|0)|0);if(+h[Ja>>3]<+h[ua>>3]){h[ua>>3]=+h[Ja>>3];c[Ka>>2]=ma;c[ra>>2]=c[(c[c[Ka>>2]>>2]|0)+16>>2]}c[La>>2]=ma;bb=c[La>>2]|0;c[bb>>2]=qe(c[bb>>2]|0)|0}c[(c[Ha>>2]|0)+(c[ta>>2]<<2)>>2]=c[ra>>2];c[ta>>2]=(c[ta>>2]|0)+1}c[L>>2]=ea;c[M>>2]=c[L>>2];c[N>>2]=c[M>>2];bb=c[c[N>>2]>>2]|0;c[P>>2]=O;c[Q>>2]=bb;bb=c[Q>>2]|0;c[R>>2]=c[P>>2];c[S>>2]=bb;c[c[R>>2]>>2]=c[S>>2];a[T+0>>0]=a[O+0>>0]|0;a[T+1>>0]=a[O+1>>0]|0;a[T+2>>0]=a[O+2>>0]|0;a[T+3>>0]=a[O+3>>0]|0;c[U>>2]=D;bb=c[U>>2]|0;a[V+0>>0]=a[T+0>>0]|0;a[V+1>>0]=a[T+1>>0]|0;a[V+2>>0]=a[T+2>>0]|0;a[V+3>>0]=a[T+3>>0]|0;c[W>>2]=bb;c[c[W>>2]>>2]=c[V>>2];while(1){c[m>>2]=ea;c[n>>2]=c[m>>2];c[o>>2]=c[n>>2];c[p>>2]=(c[o>>2]|0)+4;c[q>>2]=c[p>>2];c[r>>2]=c[q>>2];c[s>>2]=c[r>>2];bb=c[s>>2]|0;c[u>>2]=t;c[v>>2]=bb;bb=c[v>>2]|0;c[w>>2]=c[u>>2];c[x>>2]=bb;c[c[w>>2]>>2]=c[x>>2];a[y+0>>0]=a[t+0>>0]|0;a[y+1>>0]=a[t+1>>0]|0;a[y+2>>0]=a[t+2>>0]|0;a[y+3>>0]=a[t+3>>0]|0;c[A>>2]=z;bb=c[A>>2]|0;a[B+0>>0]=a[y+0>>0]|0;a[B+1>>0]=a[y+1>>0]|0;a[B+2>>0]=a[y+2>>0]|0;a[B+3>>0]=a[y+3>>0]|0;c[C>>2]=bb;c[c[C>>2]>>2]=c[B>>2];c[E>>2]=D;c[F>>2]=z;bb=c[F>>2]|0;c[G>>2]=c[E>>2];c[H>>2]=bb;if(!((c[c[G>>2]>>2]|0)==(c[c[H>>2]>>2]|0)^1))break;c[I>>2]=D;Ed((c[J>>2]|0)+((c[(c[c[I>>2]>>2]|0)+16>>2]|0)*2096|0)|0);c[K>>2]=D;bb=c[K>>2]|0;c[bb>>2]=qe(c[bb>>2]|0)|0}c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[l>>2]|0))break;ke((c[J>>2]|0)+((c[(c[Ha>>2]|0)+(c[k>>2]<<2)>>2]|0)*2096|0)|0,(c[sa>>2]|0)+((c[k>>2]|0)*2096|0)|0);c[k>>2]=(c[k>>2]|0)+1}le(ea);i=Y;return}function Pd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0;g=i;i=i+288|0;y=g+212|0;z=g+88|0;w=g+224|0;x=g+60|0;k=g+232|0;l=g+140|0;m=g+256|0;u=g+220|0;v=g+156|0;n=g+84|0;o=g+80|0;s=g+64|0;t=g+68|0;ba=g+72|0;ca=g+76|0;$=g+216|0;aa=g+180|0;_=g+152|0;Z=g+16|0;Y=g+92|0;W=g+32|0;U=g+100|0;V=g+104|0;S=g+108|0;T=g+112|0;Q=g+236|0;P=g+120|0;O=g+252|0;N=g+260|0;M=g+268|0;L=g+144|0;K=g+272|0;R=g+244|0;J=g+176|0;I=g+8|0;H=g+160|0;e=g+24|0;C=g+148|0;D=g+164|0;E=g+168|0;A=g+172|0;B=g+96|0;da=g+184|0;fa=g+188|0;ga=g;ia=g+192|0;ha=g+40|0;ka=g+200|0;ea=g+276|0;ja=g+277|0;la=g+228|0;ma=g+116|0;p=g+196|0;j=g+240|0;f=g+44|0;F=g+124|0;q=g+136|0;r=g+264|0;G=g+248|0;X=g+56|0;h=g+208|0;c[p>>2]=b;c[j>>2]=d;Qd(f,c[p>>2]|0);c[la>>2]=F;c[ma>>2]=g+278;b=c[ma>>2]|0;c[ka>>2]=c[la>>2];c[g+204>>2]=b;b=c[ka>>2]|0;a[ha+0>>0]=a[ja+0>>0]|0;c[ia>>2]=ea;d=c[ia>>2]|0;a[ga+0>>0]=a[ha+0>>0]|0;c[fa>>2]=d;de(b,ea);c[q>>2]=0;c[r>>2]=0;while(1){la=c[r>>2]|0;c[da>>2]=c[j>>2];ma=c[da>>2]|0;if(!(la>>>0<(((c[ma+4>>2]|0)-(c[ma>>2]|0)|0)/4|0)>>>0))break;ma=c[r>>2]|0;c[A>>2]=c[j>>2];c[B>>2]=ma;ma=(c[c[A>>2]>>2]|0)+(c[B>>2]<<2)|0;c[C>>2]=F;c[D>>2]=ma;be(E,c[C>>2]|0,c[D>>2]|0);a[e+0>>0]=a[E+0>>0]|0;a[e+1>>0]=a[E+1>>0]|0;a[e+2>>0]=a[E+2>>0]|0;a[e+3>>0]=a[E+3>>0]|0;c[H>>2]=G;ma=c[H>>2]|0;a[I+0>>0]=a[e+0>>0]|0;a[I+1>>0]=a[e+1>>0]|0;a[I+2>>0]=a[e+2>>0]|0;a[I+3>>0]=a[e+3>>0]|0;c[J>>2]=ma;ma=c[J>>2]|0;c[ma+0>>2]=c[I+0>>2];c[K>>2]=F;c[L>>2]=c[K>>2];c[M>>2]=c[L>>2];c[N>>2]=(c[M>>2]|0)+4;c[O>>2]=c[N>>2];c[P>>2]=c[O>>2];c[Q>>2]=c[P>>2];ma=c[Q>>2]|0;c[S>>2]=R;c[T>>2]=ma;ma=c[T>>2]|0;c[U>>2]=c[S>>2];c[V>>2]=ma;c[c[U>>2]>>2]=c[V>>2];a[W+0>>0]=a[R+0>>0]|0;a[W+1>>0]=a[R+1>>0]|0;a[W+2>>0]=a[R+2>>0]|0;a[W+3>>0]=a[R+3>>0]|0;c[Y>>2]=X;ma=c[Y>>2]|0;a[Z+0>>0]=a[W+0>>0]|0;a[Z+1>>0]=a[W+1>>0]|0;a[Z+2>>0]=a[W+2>>0]|0;a[Z+3>>0]=a[W+3>>0]|0;c[_>>2]=ma;ma=c[_>>2]|0;c[ma+0>>2]=c[Z+0>>2];c[$>>2]=G;c[aa>>2]=X;ma=c[aa>>2]|0;c[ba>>2]=c[$>>2];c[ca>>2]=ma;if((c[c[ba>>2]>>2]|0)==(c[c[ca>>2]>>2]|0)){ma=c[q>>2]|0;la=c[r>>2]|0;c[s>>2]=c[j>>2];c[t>>2]=la;c[(Rd(F,(c[c[s>>2]>>2]|0)+(c[t>>2]<<2)|0)|0)>>2]=ma;ma=c[q>>2]|0;c[u>>2]=c[p>>2];c[v>>2]=ma;ma=(c[c[u>>2]>>2]|0)+((c[v>>2]|0)*2096|0)|0;la=c[r>>2]|0;c[w>>2]=c[j>>2];c[x>>2]=la;la=c[(c[c[w>>2]>>2]|0)+(c[x>>2]<<2)>>2]|0;c[y>>2]=f;c[z>>2]=la;By(ma|0,(c[c[y>>2]>>2]|0)+((c[z>>2]|0)*2096|0)|0,2096)|0;c[q>>2]=(c[q>>2]|0)+1}c[r>>2]=(c[r>>2]|0)+1}Kd(c[p>>2]|0,c[q>>2]|0);c[h>>2]=0;while(1){la=c[h>>2]|0;c[k>>2]=c[j>>2];ma=c[k>>2]|0;if(!(la>>>0<(((c[ma+4>>2]|0)-(c[ma>>2]|0)|0)/4|0)>>>0))break;ma=c[h>>2]|0;c[l>>2]=c[j>>2];c[m>>2]=ma;ma=c[(Rd(F,(c[c[l>>2]>>2]|0)+(c[m>>2]<<2)|0)|0)>>2]|0;la=c[h>>2]|0;c[n>>2]=c[j>>2];c[o>>2]=la;c[(c[c[n>>2]>>2]|0)+(c[o>>2]<<2)>>2]=ma;c[h>>2]=(c[h>>2]|0)+1}Sd(F);yd(f);i=g;return}function Qd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;fe(c[f>>2]|0,c[e>>2]|0);i=d;return}function Rd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0;A=i;i=i+560|0;ra=A+412|0;qa=A+524|0;oa=A+516|0;na=A+508|0;ma=A+272|0;pa=A+276|0;ka=A+280|0;S=A+284|0;R=A+160|0;wa=A+116|0;va=A+96|0;xa=A+76|0;ya=A+72|0;_=A+80|0;da=A+84|0;ea=A+444|0;ca=A+16|0;$=A+176|0;aa=A+164|0;ba=A+544|0;N=A+100|0;la=A+120|0;ja=A+8|0;ga=A+128|0;ha=A+132|0;ia=A+545|0;X=A+140|0;Y=A+144|0;Z=A+148|0;U=A+152|0;V=A+156|0;W=A+432|0;fa=A+312|0;ua=A+300|0;T=A+264|0;za=A+172|0;Aa=A+168|0;kb=A+184|0;Ba=A+188|0;ta=A+192|0;jb=A+196|0;ib=A+200|0;K=A+204|0;J=A+208|0;D=A+212|0;C=A+124|0;v=A+220|0;l=A+224|0;m=A+228|0;k=A+64|0;g=A+236|0;h=A+240|0;j=A+546|0;s=A+256|0;t=A+260|0;r=A;o=A+504|0;p=A+512|0;q=A+547|0;u=A+528|0;f=A+536|0;e=A+288|0;z=A+292|0;x=A+540|0;w=A+408|0;n=A+308|0;H=A+304|0;y=A+296|0;E=A+496|0;F=A+320|0;sa=A+324|0;G=A+328|0;I=A+332|0;M=A+336|0;L=A+340|0;Pa=A+344|0;Oa=A+348|0;Ma=A+352|0;La=A+356|0;Ka=A+360|0;Na=A+364|0;Qa=A+368|0;Ta=A+372|0;Sa=A+376|0;Ra=A+380|0;Ua=A+384|0;bb=A+388|0;hb=A+392|0;gb=A+396|0;eb=A+400|0;fb=A+404|0;db=A+32|0;ab=A+216|0;_a=A+416|0;$a=A+420|0;cb=A+424|0;Za=A+56|0;Ca=A+436|0;Ya=A+440|0;Wa=A+40|0;Ja=A+232|0;Ia=A+452|0;Va=A+456|0;Ha=A+48|0;Ga=A+468|0;Fa=A+24|0;Xa=A+476|0;Ea=A+480|0;lb=A+484|0;Da=A+488|0;nb=A+180|0;sb=A+472|0;ub=A+492|0;tb=A+316|0;rb=A+92|0;vb=A+88|0;ob=A+268|0;O=A+500|0;P=A+464|0;B=A+532|0;qb=A+520|0;Q=A+244|0;mb=A+136|0;pb=A+104|0;c[vb>>2]=b;c[ob>>2]=d;b=c[vb>>2]|0;c[P>>2]=Xd(b,O,c[ob>>2]|0)|0;c[B>>2]=c[c[P>>2]>>2];d=c[c[P>>2]>>2]|0;c[ub>>2]=rb;c[tb>>2]=-1;tb=c[tb>>2]|0;c[sb>>2]=c[ub>>2];c[A+68>>2]=tb;c[c[sb>>2]>>2]=0;c[qb>>2]=c[rb>>2];c[A+448>>2]=qb;if((d|0)!=0){vb=c[B>>2]|0;vb=vb+16|0;vb=vb+4|0;i=A;return vb|0}Yd(pb,b,c[ob>>2]|0);c[nb>>2]=pb;ub=c[nb>>2]|0;c[lb>>2]=mb;c[Da>>2]=ub;ub=c[Da>>2]|0;c[Xa>>2]=c[lb>>2];c[Ea>>2]=ub;c[c[Xa>>2]>>2]=c[Ea>>2];a[Fa+0>>0]=a[mb+0>>0]|0;a[Fa+1>>0]=a[mb+1>>0]|0;a[Fa+2>>0]=a[mb+2>>0]|0;a[Fa+3>>0]=a[mb+3>>0]|0;c[Ga>>2]=Q;ub=c[Ga>>2]|0;a[Ha+0>>0]=a[Fa+0>>0]|0;a[Ha+1>>0]=a[Fa+1>>0]|0;a[Ha+2>>0]=a[Fa+2>>0]|0;a[Ha+3>>0]=a[Fa+3>>0]|0;c[Ia>>2]=ub;ub=c[Ia>>2]|0;c[Ja>>2]=Ha;c[Ka>>2]=c[c[Ja>>2]>>2];vb=c[Ka>>2]|0;c[La>>2]=vb;c[Ma>>2]=c[La>>2];c[Na>>2]=c[c[Ma>>2]>>2];c[Oa>>2]=vb;c[Pa>>2]=c[Oa>>2];c[c[Pa>>2]>>2]=0;vb=c[Na>>2]|0;c[Qa>>2]=Ha;c[Ra>>2]=c[c[Qa>>2]>>2];c[Sa>>2]=c[Ra>>2];c[Ta>>2]=c[Sa>>2];c[Ua>>2]=(c[Ta>>2]|0)+4;tb=c[Ua>>2]|0;c[Va+0>>2]=c[tb+0>>2];c[Va+4>>2]=c[tb+4>>2];a[Wa+0>>0]=a[Va+0>>0]|0;a[Wa+1>>0]=a[Va+1>>0]|0;a[Wa+2>>0]=a[Va+2>>0]|0;a[Wa+3>>0]=a[Va+3>>0]|0;a[Wa+4>>0]=a[Va+4>>0]|0;a[Wa+5>>0]=a[Va+5>>0]|0;a[Wa+6>>0]=a[Va+6>>0]|0;a[Wa+7>>0]=a[Va+7>>0]|0;c[Ca>>2]=ub;c[Ya>>2]=vb;Ca=c[Ca>>2]|0;vb=c[Ya>>2]|0;a[Za+0>>0]=a[Wa+0>>0]|0;a[Za+1>>0]=a[Wa+1>>0]|0;a[Za+2>>0]=a[Wa+2>>0]|0;a[Za+3>>0]=a[Wa+3>>0]|0;a[Za+4>>0]=a[Wa+4>>0]|0;a[Za+5>>0]=a[Wa+5>>0]|0;a[Za+6>>0]=a[Wa+6>>0]|0;a[Za+7>>0]=a[Wa+7>>0]|0;c[_a>>2]=Ca;c[$a>>2]=vb;vb=c[_a>>2]|0;c[ab>>2]=$a;Ca=c[c[ab>>2]>>2]|0;c[bb>>2]=Za;ub=c[bb>>2]|0;c[cb+0>>2]=c[ub+0>>2];c[cb+4>>2]=c[ub+4>>2];a[db+0>>0]=a[cb+0>>0]|0;a[db+1>>0]=a[cb+1>>0]|0;a[db+2>>0]=a[cb+2>>0]|0;a[db+3>>0]=a[cb+3>>0]|0;a[db+4>>0]=a[cb+4>>0]|0;a[db+5>>0]=a[cb+5>>0]|0;a[db+6>>0]=a[cb+6>>0]|0;a[db+7>>0]=a[cb+7>>0]|0;c[eb>>2]=vb;c[fb>>2]=Ca;Ca=c[eb>>2]|0;c[gb>>2]=fb;c[Ca>>2]=c[c[gb>>2]>>2];Ca=Ca+4|0;c[hb>>2]=db;vb=c[hb>>2]|0;c[Ca+0>>2]=c[vb+0>>2];c[Ca+4>>2]=c[vb+4>>2];c[ib>>2]=pb;c[jb>>2]=c[ib>>2];c[kb>>2]=c[jb>>2];c[Ba>>2]=0;Ca=c[kb>>2]|0;c[Aa>>2]=Ca;c[za>>2]=c[Aa>>2];c[ta>>2]=c[c[za>>2]>>2];vb=c[Ba>>2]|0;c[ya>>2]=Ca;c[xa>>2]=c[ya>>2];c[c[xa>>2]>>2]=vb;if((c[ta>>2]|0)!=0){c[va>>2]=Ca;c[wa>>2]=c[va>>2];ta=c[ta>>2]|0;c[ua>>2]=(c[wa>>2]|0)+4;c[T>>2]=ta;ta=c[ua>>2]|0;if(a[ta+5>>0]&1){vb=c[ta>>2]|0;c[fa>>2]=(c[T>>2]|0)+20;ub=c[fa>>2]|0;c[ga>>2]=vb;c[ha>>2]=ub;ub=c[ga>>2]|0;vb=c[ha>>2]|0;a[ja+0>>0]=a[ia+0>>0]|0;c[N>>2]=ub;c[la>>2]=vb}if(a[ta+4>>0]&1){vb=c[ta>>2]|0;c[_>>2]=(c[T>>2]|0)+16;ub=c[_>>2]|0;c[$>>2]=vb;c[aa>>2]=ub;ub=c[$>>2]|0;vb=c[aa>>2]|0;a[ca+0>>0]=a[ba+0>>0]|0;c[da>>2]=ub;c[ea>>2]=vb}if((c[T>>2]|0)!=0){ub=c[T>>2]|0;c[U>>2]=c[ta>>2];c[V>>2]=ub;c[W>>2]=1;ub=c[V>>2]|0;vb=c[W>>2]|0;c[X>>2]=c[U>>2];c[Y>>2]=ub;c[Z>>2]=vb;Sw(c[Y>>2]|0)}}ub=c[O>>2]|0;vb=c[P>>2]|0;c[R>>2]=Q;c[S>>2]=c[R>>2];c[ka>>2]=c[S>>2];Zd(b,ub,vb,c[c[ka>>2]>>2]|0);c[ma>>2]=Q;vb=c[ma>>2]|0;c[na>>2]=vb;c[oa>>2]=c[na>>2];c[pa>>2]=c[c[oa>>2]>>2];c[qa>>2]=vb;c[ra>>2]=c[qa>>2];c[c[ra>>2]>>2]=0;c[B>>2]=c[pa>>2];c[L>>2]=Q;c[M>>2]=c[L>>2];c[sa>>2]=c[M>>2];c[G>>2]=0;L=c[sa>>2]|0;c[F>>2]=L;c[E>>2]=c[F>>2];c[I>>2]=c[c[E>>2]>>2];vb=c[G>>2]|0;c[C>>2]=L;c[D>>2]=c[C>>2];c[c[D>>2]>>2]=vb;if((c[I>>2]|0)==0){vb=c[B>>2]|0;vb=vb+16|0;vb=vb+4|0;i=A;return vb|0}c[J>>2]=L;c[K>>2]=c[J>>2];C=c[I>>2]|0;c[H>>2]=(c[K>>2]|0)+4;c[y>>2]=C;C=c[H>>2]|0;if(a[C+5>>0]&1){vb=c[C>>2]|0;c[n>>2]=(c[y>>2]|0)+20;ub=c[n>>2]|0;c[o>>2]=vb;c[p>>2]=ub;ub=c[o>>2]|0;vb=c[p>>2]|0;a[r+0>>0]=a[q+0>>0]|0;c[s>>2]=ub;c[t>>2]=vb}if(a[C+4>>0]&1){vb=c[C>>2]|0;c[v>>2]=(c[y>>2]|0)+16;ub=c[v>>2]|0;c[g>>2]=vb;c[h>>2]=ub;ub=c[g>>2]|0;vb=c[h>>2]|0;a[k+0>>0]=a[j+0>>0]|0;c[l>>2]=ub;c[m>>2]=vb}if((c[y>>2]|0)==0){vb=c[B>>2]|0;vb=vb+16|0;vb=vb+4|0;i=A;return vb|0}ub=c[y>>2]|0;c[z>>2]=c[C>>2];c[x>>2]=ub;c[w>>2]=1;ub=c[x>>2]|0;vb=c[w>>2]|0;c[u>>2]=c[z>>2];c[f>>2]=ub;c[e>>2]=vb;Sw(c[f>>2]|0);vb=c[B>>2]|0;vb=vb+16|0;vb=vb+4|0;i=A;return vb|0}function Sd(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Td(c[d>>2]|0);i=b;return}function Td(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Ud(c[d>>2]|0);i=b;return}function Ud(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Vd(c[d>>2]|0);i=b;return}function Vd(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+32|0;d=b+8|0;e=b+16|0;f=b+20|0;g=b+24|0;h=b+4|0;j=b;k=b+12|0;c[k>>2]=a;a=c[k>>2]|0;c[j>>2]=a;c[h>>2]=c[j>>2];c[g>>2]=(c[h>>2]|0)+4;c[f>>2]=c[g>>2];c[e>>2]=c[f>>2];c[d>>2]=c[e>>2];Wd(a,c[c[d>>2]>>2]|0);i=b;return}function Wd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;p=i;i=i+112|0;j=p+12|0;h=p+28|0;g=p+60|0;l=p+84|0;q=p+4|0;r=p+8|0;f=p;m=p+52|0;n=p+36|0;e=p+100|0;v=p+80|0;w=p+88|0;x=p+92|0;s=p+96|0;t=p+40|0;u=p+48|0;A=p+56|0;C=p+16|0;B=p+20|0;z=p+68|0;D=p+24|0;o=p+76|0;y=p+32|0;k=p+72|0;c[D>>2]=b;c[o>>2]=d;d=c[D>>2]|0;b=c[o>>2]|0;c[C>>2]=z;c[B>>2]=-1;B=c[B>>2]|0;c[A>>2]=c[C>>2];c[p+64>>2]=B;c[c[A>>2]>>2]=0;c[y>>2]=c[z>>2];c[p+44>>2]=y;if((b|0)==0){i=p;return}Wd(d,c[c[o>>2]>>2]|0);Wd(d,c[(c[o>>2]|0)+4>>2]|0);c[g>>2]=d;c[h>>2]=(c[g>>2]|0)+4;c[j>>2]=c[h>>2];c[k>>2]=c[j>>2];C=c[k>>2]|0;c[l>>2]=(c[o>>2]|0)+16;D=c[l>>2]|0;c[m>>2]=C;c[n>>2]=D;D=c[m>>2]|0;C=c[n>>2]|0;a[f+0>>0]=a[e+0>>0]|0;c[q>>2]=D;c[r>>2]=C;C=c[o>>2]|0;c[s>>2]=c[k>>2];c[t>>2]=C;c[u>>2]=1;C=c[t>>2]|0;D=c[u>>2]|0;c[v>>2]=c[s>>2];c[w>>2]=C;c[x>>2]=D;Sw(c[w>>2]|0);i=p;return}function Xd(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0;g=i;i=i+208|0;T=g+196|0;U=g+164|0;V=g+84|0;S=g+96|0;F=g+20|0;E=g+24|0;D=g+28|0;G=g+32|0;H=g+36|0;I=g+40|0;J=g+44|0;r=g+48|0;s=g+52|0;p=g+56|0;q=g+60|0;o=g+64|0;u=g+68|0;x=g+72|0;w=g+76|0;v=g+168|0;h=g+176|0;A=g+184|0;y=g+192|0;C=g+200|0;l=g+100|0;k=g+104|0;L=g+108|0;m=g+112|0;K=g+116|0;B=g+120|0;Q=g+124|0;P=g+128|0;O=g+132|0;N=g+136|0;M=g+140|0;W=g+144|0;X=g+148|0;Y=g+152|0;Z=g+156|0;_=g+16|0;$=g+8|0;f=g;aa=g+4|0;e=g+12|0;z=g+160|0;n=g+80|0;R=g+172|0;t=g+88|0;j=g+180|0;c[aa>>2]=a;c[e>>2]=b;c[z>>2]=d;b=c[aa>>2]|0;c[$>>2]=b;c[_>>2]=c[$>>2];c[Z>>2]=(c[_>>2]|0)+4;c[Y>>2]=c[Z>>2];c[X>>2]=c[Y>>2];c[W>>2]=c[X>>2];c[n>>2]=c[c[W>>2]>>2];d=c[n>>2]|0;c[U>>2]=S;c[V>>2]=-1;a=c[V>>2]|0;c[T>>2]=c[U>>2];c[g+188>>2]=a;c[c[T>>2]>>2]=0;c[R>>2]=c[S>>2];c[g+92>>2]=R;if((d|0)==0){c[M>>2]=b;c[N>>2]=(c[M>>2]|0)+4;c[O>>2]=c[N>>2];c[P>>2]=c[O>>2];c[Q>>2]=c[P>>2];c[c[e>>2]>>2]=c[Q>>2];c[f>>2]=c[c[e>>2]>>2];aa=c[f>>2]|0;i=g;return aa|0}while(1){c[D>>2]=b;c[E>>2]=(c[D>>2]|0)+8;c[F>>2]=c[E>>2];c[G>>2]=c[F>>2];$=c[z>>2]|0;aa=(c[n>>2]|0)+16|0;c[H>>2]=c[G>>2];c[I>>2]=$;c[J>>2]=aa;if((c[c[I>>2]>>2]|0)<(c[c[J>>2]>>2]|0)){aa=c[c[n>>2]>>2]|0;c[p>>2]=o;c[q>>2]=-1;M=c[q>>2]|0;c[r>>2]=c[p>>2];c[s>>2]=M;c[c[r>>2]>>2]=0;c[t>>2]=c[o>>2];c[u>>2]=t;M=c[n>>2]|0;if((aa|0)==0){h=5;break}c[n>>2]=c[M>>2];continue}c[v>>2]=b;c[w>>2]=(c[v>>2]|0)+8;c[x>>2]=c[w>>2];c[h>>2]=c[x>>2];aa=(c[n>>2]|0)+16|0;M=c[z>>2]|0;c[A>>2]=c[h>>2];c[y>>2]=aa;c[C>>2]=M;M=c[n>>2]|0;if((c[c[y>>2]>>2]|0)>=(c[c[C>>2]>>2]|0)){h=10;break}aa=c[M+4>>2]|0;c[L>>2]=K;c[m>>2]=-1;M=c[m>>2]|0;c[l>>2]=c[L>>2];c[k>>2]=M;c[c[l>>2]>>2]=0;c[j>>2]=c[K>>2];c[B>>2]=j;M=c[n>>2]|0;if((aa|0)==0){h=9;break}c[n>>2]=c[M+4>>2]}if((h|0)==5){c[c[e>>2]>>2]=M;c[f>>2]=c[c[e>>2]>>2];aa=c[f>>2]|0;i=g;return aa|0}else if((h|0)==9){c[c[e>>2]>>2]=M;c[f>>2]=(c[c[e>>2]>>2]|0)+4;aa=c[f>>2]|0;i=g;return aa|0}else if((h|0)==10){c[c[e>>2]>>2]=M;c[f>>2]=c[e>>2];aa=c[f>>2]|0;i=g;return aa|0}return 0}function Yd(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0,Uc=0,Vc=0,Wc=0,Xc=0,Yc=0,Zc=0,_c=0,$c=0,ad=0,bd=0,cd=0,dd=0,ed=0,fd=0,gd=0,hd=0,id=0,jd=0,kd=0,ld=0,md=0,nd=0,od=0,pd=0,qd=0,rd=0,sd=0,td=0,ud=0,vd=0,wd=0,xd=0,yd=0,zd=0,Ad=0,Bd=0,Cd=0,Dd=0,Ed=0,Fd=0,Gd=0,Hd=0,Id=0,Jd=0,Kd=0,Ld=0,Md=0,Nd=0,Od=0,Pd=0,Qd=0,Rd=0,Sd=0,Td=0,Ud=0,Vd=0,Wd=0,Xd=0,Yd=0,Zd=0,_d=0,$d=0,ae=0,be=0,ce=0,de=0,ee=0,fe=0,ge=0;g=i;i=i+1264|0;nd=g+828|0;md=g+1224|0;ld=g+1128|0;id=g+232|0;pd=g+260|0;qd=g+408|0;fd=g+1140|0;ed=g+1168|0;dd=g+1176|0;od=g+264|0;rd=g+932|0;jd=g+836|0;Hc=g+1184|0;Gc=g+228|0;Ec=g+212|0;Dc=g+1100|0;Cc=g+768|0;Fc=g+672|0;Ic=g+640|0;Lc=g+400|0;Kc=g+384|0;Jc=g+368|0;Mc=g+272|0;Vc=g+252|0;$c=g+248|0;_c=g+240|0;Yc=g+236|0;Zc=g+224|0;Xc=g+128|0;Uc=g+208|0;Sc=g+220|0;Tc=g+1084|0;Wc=g+968|0;Rc=g+184|0;Pc=g+696|0;Qc=g+668|0;Oc=g+8|0;Bc=g+428|0;Ac=g+416|0;Nc=g+392|0;zc=g+48|0;yc=g+380|0;xc=g+144|0;Bb=g+280|0;Cb=g+276|0;Ib=g+268|0;Hb=g+284|0;gb=g+288|0;lb=g+292|0;mb=g+296|0;kb=g+32|0;hb=g+312|0;ib=g+316|0;jb=g+1244|0;sb=g+324|0;tb=g+328|0;sa=g+160|0;ob=g+216|0;pb=g+340|0;qb=g+1245|0;db=g+356|0;eb=g+360|0;fb=g+364|0;ab=g+1068|0;bb=g+1004|0;cb=g+952|0;nb=g+832|0;Ab=g+760|0;$a=g+728|0;Gb=g+692|0;Fb=g+680|0;cd=g+664|0;Eb=g+660|0;Db=g+656|0;bd=g+648|0;ad=g+424|0;vc=g+420|0;wc=g+412|0;tc=g+432|0;uc=g+436|0;rc=g+440|0;Yb=g+388|0;Xb=g+448|0;Vb=g+452|0;Ub=g+456|0;Tb=g+376|0;Wb=g+464|0;Zb=g+468|0;ac=g+472|0;$b=g+476|0;_b=g+480|0;bc=g+484|0;kc=g+488|0;qc=g+492|0;pc=g+496|0;nc=g+500|0;oc=g+504|0;mc=g+96|0;jc=g+512|0;hc=g+516|0;ic=g+520|0;lc=g+304|0;gc=g+80|0;ec=g+540|0;fc=g+544|0;dc=g+16|0;Sb=g+552|0;Rb=g+556|0;cc=g+560|0;Qb=g+88|0;Pb=g+572|0;Nb=g+104|0;Lb=g+580|0;Mb=g+332|0;Jb=g+588|0;Kb=g+336|0;gd=g+596|0;sc=g+600|0;Ob=g+604|0;hd=g+616|0;ub=g+620|0;vb=g+624|0;_a=g+628|0;rb=g+632|0;Ya=g+636|0;za=g+1180|0;ya=g+1188|0;wa=g+1196|0;va=g+1204|0;ua=g+984|0;xa=g+1220|0;Aa=g+1228|0;Da=g+1236|0;Ca=g+812|0;Ba=g+800|0;Ea=g+740|0;Na=g+732|0;Ta=g+704|0;Sa=g+700|0;Qa=g+688|0;Ra=g+684|0;Pa=g;Ma=g+708|0;Ka=g+712|0;La=g+716|0;Oa=g+720|0;Ja=g+176|0;Ha=g+652|0;Ia=g+736|0;Ga=g+40|0;ta=g+744|0;zb=g+748|0;Fa=g+752|0;yb=g+152|0;xb=g+764|0;wb=g+120|0;ud=g+772|0;td=g+776|0;sd=g+780|0;qa=g+784|0;ra=g+788|0;la=g+1212|0;ka=g+796|0;ia=g+444|0;P=g+804|0;Q=g+808|0;O=g+64|0;L=g+816|0;M=g+820|0;Y=g+1246|0;W=g+1240|0;X=g+460|0;V=g+112|0;S=g+840|0;T=g+844|0;U=g+1247|0;fa=g+856|0;ga=g+860|0;ha=g+864|0;ca=g+868|0;da=g+872|0;ea=g+876|0;R=g+880|0;oa=g+884|0;ba=g+888|0;ja=g+892|0;ma=g+896|0;Wa=g+900|0;na=g+904|0;pa=g+908|0;Va=g+912|0;Ua=g+916|0;xd=g+920|0;I=g+924|0;J=g+928|0;C=g+508|0;K=g+936|0;w=g+940|0;q=g+944|0;p=g+948|0;r=g+24|0;u=g+956|0;t=g+960|0;s=g+1248|0;m=g+976|0;n=g+536|0;l=g+72|0;h=g+988|0;j=g+992|0;k=g+1249|0;A=g+1e3|0;B=g+548|0;o=g+1008|0;y=g+1012|0;f=g+1016|0;z=g+1020|0;v=g+1024|0;G=g+1028|0;x=g+1032|0;D=g+568|0;E=g+1040|0;N=g+1044|0;F=g+1048|0;H=g+576|0;aa=g+1056|0;$=g+1060|0;yd=g+1064|0;zd=g+584|0;Ad=g+1072|0;Pd=g+1076|0;Gd=g+1080|0;Bd=g+592|0;Dd=g+1088|0;vd=g+1092|0;Ed=g+1096|0;Cd=g+56|0;Id=g+1104|0;Kd=g+1108|0;Jd=g+1112|0;Fd=g+1120|0;Hd=g+168|0;Nd=g+1132|0;Md=g+1136|0;Ld=g+136|0;Rd=g+1144|0;Td=g+1148|0;Sd=g+1152|0;Od=g+1160|0;Qd=g+200|0;Wd=g+1172|0;Vd=g+256|0;Ud=g+192|0;Zd=g+372|0;Yd=g+244|0;_d=g+676|0;$d=g+644|0;ae=g+1036|0;be=g+404|0;ce=g+792|0;de=g+1208|0;ee=g+980|0;fe=g+1216|0;ge=g+1052|0;wd=g+1232|0;kd=g+996|0;_=g+524|0;Xd=g+848|0;Za=g+824|0;Xa=g+344|0;Z=g+320|0;c[ge>>2]=d;c[wd>>2]=e;c[fe>>2]=c[ge>>2];c[ee>>2]=(c[fe>>2]|0)+4;c[de>>2]=c[ee>>2];c[kd>>2]=c[de>>2];c[be>>2]=c[kd>>2];c[ce>>2]=1;d=c[ce>>2]|0;c[g+1192>>2]=c[be>>2];c[ae>>2]=d;c[g+1200>>2]=0;d=Qw((c[ae>>2]|0)*24|0)|0;e=c[kd>>2]|0;c[_d>>2]=Xd;c[$d>>2]=e;e=c[$d>>2]|0;c[Zd>>2]=c[_d>>2];c[Yd>>2]=e;e=c[Zd>>2]|0;c[e>>2]=c[Yd>>2];a[e+4>>0]=0;a[e+5>>0]=0;a[Ud+0>>0]=a[Xd+0>>0]|0;a[Ud+1>>0]=a[Xd+1>>0]|0;a[Ud+2>>0]=a[Xd+2>>0]|0;a[Ud+3>>0]=a[Xd+3>>0]|0;a[Ud+4>>0]=a[Xd+4>>0]|0;a[Ud+5>>0]=a[Xd+5>>0]|0;a[Ud+6>>0]=a[Xd+6>>0]|0;a[Ud+7>>0]=a[Xd+7>>0]|0;c[Wd>>2]=_;c[Vd>>2]=d;d=c[Wd>>2]|0;e=c[Vd>>2]|0;a[Qd+0>>0]=a[Ud+0>>0]|0;a[Qd+1>>0]=a[Ud+1>>0]|0;a[Qd+2>>0]=a[Ud+2>>0]|0;a[Qd+3>>0]=a[Ud+3>>0]|0;a[Qd+4>>0]=a[Ud+4>>0]|0;a[Qd+5>>0]=a[Ud+5>>0]|0;a[Qd+6>>0]=a[Ud+6>>0]|0;a[Qd+7>>0]=a[Ud+7>>0]|0;c[Td>>2]=d;c[Sd>>2]=e;e=c[Td>>2]|0;c[Rd>>2]=Sd;d=c[c[Rd>>2]>>2]|0;c[Pd>>2]=Qd;Pd=c[Pd>>2]|0;c[Od+0>>2]=c[Pd+0>>2];c[Od+4>>2]=c[Pd+4>>2];a[Ld+0>>0]=a[Od+0>>0]|0;a[Ld+1>>0]=a[Od+1>>0]|0;a[Ld+2>>0]=a[Od+2>>0]|0;a[Ld+3>>0]=a[Od+3>>0]|0;a[Ld+4>>0]=a[Od+4>>0]|0;a[Ld+5>>0]=a[Od+5>>0]|0;a[Ld+6>>0]=a[Od+6>>0]|0;a[Ld+7>>0]=a[Od+7>>0]|0;c[Nd>>2]=e;c[Md>>2]=d;d=c[Nd>>2]|0;e=c[Md>>2]|0;a[Hd+0>>0]=a[Ld+0>>0]|0;a[Hd+1>>0]=a[Ld+1>>0]|0;a[Hd+2>>0]=a[Ld+2>>0]|0;a[Hd+3>>0]=a[Ld+3>>0]|0;a[Hd+4>>0]=a[Ld+4>>0]|0;a[Hd+5>>0]=a[Ld+5>>0]|0;a[Hd+6>>0]=a[Ld+6>>0]|0;a[Hd+7>>0]=a[Ld+7>>0]|0;c[Kd>>2]=d;c[Jd>>2]=e;e=c[Kd>>2]|0;c[Id>>2]=Jd;d=c[c[Id>>2]>>2]|0;c[Gd>>2]=Hd;Gd=c[Gd>>2]|0;c[Fd+0>>2]=c[Gd+0>>2];c[Fd+4>>2]=c[Gd+4>>2];a[Cd+0>>0]=a[Fd+0>>0]|0;a[Cd+1>>0]=a[Fd+1>>0]|0;a[Cd+2>>0]=a[Fd+2>>0]|0;a[Cd+3>>0]=a[Fd+3>>0]|0;a[Cd+4>>0]=a[Fd+4>>0]|0;a[Cd+5>>0]=a[Fd+5>>0]|0;a[Cd+6>>0]=a[Fd+6>>0]|0;a[Cd+7>>0]=a[Fd+7>>0]|0;c[vd>>2]=e;c[Ed>>2]=d;vd=c[vd>>2]|0;c[Dd>>2]=Ed;c[vd>>2]=c[c[Dd>>2]>>2];vd=vd+4|0;c[Bd>>2]=Cd;d=c[Bd>>2]|0;c[vd+0>>2]=c[d+0>>2];c[vd+4>>2]=c[d+4>>2];vd=c[kd>>2]|0;c[Ad>>2]=_;c[zd>>2]=c[Ad>>2];c[yd>>2]=c[zd>>2];c[xd>>2]=(c[c[yd>>2]>>2]|0)+16;d=c[xd>>2]|0;e=c[wd>>2]|0;c[ud>>2]=vd;c[td>>2]=d;c[sd>>2]=e;e=c[td>>2]|0;if((e|0)!=0)c[e>>2]=c[c[sd>>2]>>2];c[jd>>2]=_;c[rd>>2]=c[jd>>2];c[od>>2]=c[rd>>2];a[(c[od>>2]|0)+8>>0]=1;ge=c[kd>>2]|0;c[ld>>2]=_;c[md>>2]=c[ld>>2];c[nd>>2]=c[md>>2];c[id>>2]=(c[c[nd>>2]>>2]|0)+20;id=c[id>>2]|0;c[pd>>2]=ge;c[qd>>2]=id;id=c[qd>>2]|0;if((id|0)!=0)c[id>>2]=0;c[dd>>2]=_;c[ed>>2]=c[dd>>2];c[fd>>2]=c[ed>>2];a[(c[fd>>2]|0)+9>>0]=1;c[gd>>2]=_;ge=c[gd>>2]|0;c[Jb>>2]=hd;c[Kb>>2]=ge;ge=c[Kb>>2]|0;c[Lb>>2]=c[Jb>>2];c[Mb>>2]=ge;c[c[Lb>>2]>>2]=c[Mb>>2];a[Nb+0>>0]=a[hd+0>>0]|0;a[Nb+1>>0]=a[hd+1>>0]|0;a[Nb+2>>0]=a[hd+2>>0]|0;a[Nb+3>>0]=a[hd+3>>0]|0;c[Pb>>2]=Ob;Jb=c[Pb>>2]|0;a[Qb+0>>0]=a[Nb+0>>0]|0;a[Qb+1>>0]=a[Nb+1>>0]|0;a[Qb+2>>0]=a[Nb+2>>0]|0;a[Qb+3>>0]=a[Nb+3>>0]|0;c[Rb>>2]=Jb;Jb=c[Rb>>2]|0;c[Sb>>2]=Qb;c[Tb>>2]=c[c[Sb>>2]>>2];ge=c[Tb>>2]|0;c[Ub>>2]=ge;c[Vb>>2]=c[Ub>>2];c[Wb>>2]=c[c[Vb>>2]>>2];c[Xb>>2]=ge;c[Yb>>2]=c[Xb>>2];c[c[Yb>>2]>>2]=0;ge=c[Wb>>2]|0;c[Zb>>2]=Qb;c[_b>>2]=c[c[Zb>>2]>>2];c[$b>>2]=c[_b>>2];c[ac>>2]=c[$b>>2];c[bc>>2]=(c[ac>>2]|0)+4;fe=c[bc>>2]|0;c[cc+0>>2]=c[fe+0>>2];c[cc+4>>2]=c[fe+4>>2];a[dc+0>>0]=a[cc+0>>0]|0;a[dc+1>>0]=a[cc+1>>0]|0;a[dc+2>>0]=a[cc+2>>0]|0;a[dc+3>>0]=a[cc+3>>0]|0;a[dc+4>>0]=a[cc+4>>0]|0;a[dc+5>>0]=a[cc+5>>0]|0;a[dc+6>>0]=a[cc+6>>0]|0;a[dc+7>>0]=a[cc+7>>0]|0;c[ec>>2]=Jb;c[fc>>2]=ge;ge=c[ec>>2]|0;Jb=c[fc>>2]|0;a[gc+0>>0]=a[dc+0>>0]|0;a[gc+1>>0]=a[dc+1>>0]|0;a[gc+2>>0]=a[dc+2>>0]|0;a[gc+3>>0]=a[dc+3>>0]|0;a[gc+4>>0]=a[dc+4>>0]|0;a[gc+5>>0]=a[dc+5>>0]|0;a[gc+6>>0]=a[dc+6>>0]|0;a[gc+7>>0]=a[dc+7>>0]|0;c[hc>>2]=ge;c[ic>>2]=Jb;Jb=c[hc>>2]|0;c[jc>>2]=ic;ge=c[c[jc>>2]>>2]|0;c[kc>>2]=gc;fe=c[kc>>2]|0;c[lc+0>>2]=c[fe+0>>2];c[lc+4>>2]=c[fe+4>>2];a[mc+0>>0]=a[lc+0>>0]|0;a[mc+1>>0]=a[lc+1>>0]|0;a[mc+2>>0]=a[lc+2>>0]|0;a[mc+3>>0]=a[lc+3>>0]|0;a[mc+4>>0]=a[lc+4>>0]|0;a[mc+5>>0]=a[lc+5>>0]|0;a[mc+6>>0]=a[lc+6>>0]|0;a[mc+7>>0]=a[lc+7>>0]|0;c[nc>>2]=Jb;c[oc>>2]=ge;ge=c[nc>>2]|0;c[pc>>2]=oc;c[ge>>2]=c[c[pc>>2]>>2];ge=ge+4|0;c[qc>>2]=mc;Jb=c[qc>>2]|0;c[ge+0>>2]=c[Jb+0>>2];c[ge+4>>2]=c[Jb+4>>2];c[rc>>2]=Ob;ge=c[rc>>2]|0;c[tc>>2]=sc;c[uc>>2]=ge;ge=c[uc>>2]|0;c[vc>>2]=c[tc>>2];c[wc>>2]=ge;c[c[vc>>2]>>2]=c[wc>>2];a[xc+0>>0]=a[sc+0>>0]|0;a[xc+1>>0]=a[sc+1>>0]|0;a[xc+2>>0]=a[sc+2>>0]|0;a[xc+3>>0]=a[sc+3>>0]|0;c[yc>>2]=Xa;ge=c[yc>>2]|0;a[zc+0>>0]=a[xc+0>>0]|0;a[zc+1>>0]=a[xc+1>>0]|0;a[zc+2>>0]=a[xc+2>>0]|0;a[zc+3>>0]=a[xc+3>>0]|0;c[Ac>>2]=ge;ge=c[Ac>>2]|0;c[Bc>>2]=zc;c[Cc>>2]=c[c[Bc>>2]>>2];Jb=c[Cc>>2]|0;c[Dc>>2]=Jb;c[Ec>>2]=c[Dc>>2];c[Fc>>2]=c[c[Ec>>2]>>2];c[Gc>>2]=Jb;c[Hc>>2]=c[Gc>>2];c[c[Hc>>2]>>2]=0;Jb=c[Fc>>2]|0;c[Ic>>2]=zc;c[Jc>>2]=c[c[Ic>>2]>>2];c[Kc>>2]=c[Jc>>2];c[Lc>>2]=c[Kc>>2];c[Mc>>2]=(c[Lc>>2]|0)+4;fe=c[Mc>>2]|0;c[Nc+0>>2]=c[fe+0>>2];c[Nc+4>>2]=c[fe+4>>2];a[Oc+0>>0]=a[Nc+0>>0]|0;a[Oc+1>>0]=a[Nc+1>>0]|0;a[Oc+2>>0]=a[Nc+2>>0]|0;a[Oc+3>>0]=a[Nc+3>>0]|0;a[Oc+4>>0]=a[Nc+4>>0]|0;a[Oc+5>>0]=a[Nc+5>>0]|0;a[Oc+6>>0]=a[Nc+6>>0]|0;a[Oc+7>>0]=a[Nc+7>>0]|0;c[Pc>>2]=ge;c[Qc>>2]=Jb;Jb=c[Pc>>2]|0;ge=c[Qc>>2]|0;a[Rc+0>>0]=a[Oc+0>>0]|0;a[Rc+1>>0]=a[Oc+1>>0]|0;a[Rc+2>>0]=a[Oc+2>>0]|0;a[Rc+3>>0]=a[Oc+3>>0]|0;a[Rc+4>>0]=a[Oc+4>>0]|0;a[Rc+5>>0]=a[Oc+5>>0]|0;a[Rc+6>>0]=a[Oc+6>>0]|0;a[Rc+7>>0]=a[Oc+7>>0]|0;c[Sc>>2]=Jb;c[Tc>>2]=ge;ge=c[Sc>>2]|0;c[Uc>>2]=Tc;Jb=c[c[Uc>>2]>>2]|0;c[Vc>>2]=Rc;fe=c[Vc>>2]|0;c[Wc+0>>2]=c[fe+0>>2];c[Wc+4>>2]=c[fe+4>>2];a[Xc+0>>0]=a[Wc+0>>0]|0;a[Xc+1>>0]=a[Wc+1>>0]|0;a[Xc+2>>0]=a[Wc+2>>0]|0;a[Xc+3>>0]=a[Wc+3>>0]|0;a[Xc+4>>0]=a[Wc+4>>0]|0;a[Xc+5>>0]=a[Wc+5>>0]|0;a[Xc+6>>0]=a[Wc+6>>0]|0;a[Xc+7>>0]=a[Wc+7>>0]|0;c[Yc>>2]=ge;c[Zc>>2]=Jb;Jb=c[Yc>>2]|0;c[_c>>2]=Zc;c[Jb>>2]=c[c[_c>>2]>>2];Jb=Jb+4|0;c[$c>>2]=Xc;ge=c[$c>>2]|0;c[Jb+0>>2]=c[ge+0>>2];c[Jb+4>>2]=c[ge+4>>2];c[ad>>2]=Ob;c[bd>>2]=c[ad>>2];c[cd>>2]=c[bd>>2];c[Eb>>2]=0;Jb=c[cd>>2]|0;c[Fb>>2]=Jb;c[Gb>>2]=c[Fb>>2];c[Db>>2]=c[c[Gb>>2]>>2];ge=c[Eb>>2]|0;c[Hb>>2]=Jb;c[Ib>>2]=c[Hb>>2];c[c[Ib>>2]>>2]=ge;if((c[Db>>2]|0)!=0){c[Cb>>2]=Jb;c[Bb>>2]=c[Cb>>2];ge=c[Db>>2]|0;c[Ab>>2]=(c[Bb>>2]|0)+4;c[$a>>2]=ge;Ab=c[Ab>>2]|0;if(a[Ab+5>>0]&1){ge=c[Ab>>2]|0;c[nb>>2]=(c[$a>>2]|0)+20;fe=c[nb>>2]|0;c[ob>>2]=ge;c[pb>>2]=fe;fe=c[ob>>2]|0;ge=c[pb>>2]|0;a[sa+0>>0]=a[qb+0>>0]|0;c[sb>>2]=fe;c[tb>>2]=ge}if(a[Ab+4>>0]&1){ge=c[Ab>>2]|0;c[gb>>2]=(c[$a>>2]|0)+16;fe=c[gb>>2]|0;c[hb>>2]=ge;c[ib>>2]=fe;fe=c[hb>>2]|0;ge=c[ib>>2]|0;a[kb+0>>0]=a[jb+0>>0]|0;c[lb>>2]=fe;c[mb>>2]=ge}if((c[$a>>2]|0)!=0){fe=c[$a>>2]|0;c[ab>>2]=c[Ab>>2];c[bb>>2]=fe;c[cb>>2]=1;fe=c[bb>>2]|0;ge=c[cb>>2]|0;c[db>>2]=c[ab>>2];c[eb>>2]=fe;c[fb>>2]=ge;Sw(c[eb>>2]|0)}}c[Ya>>2]=Xa;ge=c[Ya>>2]|0;c[_a>>2]=Za;c[rb>>2]=ge;ge=c[rb>>2]|0;c[ub>>2]=c[_a>>2];c[vb>>2]=ge;c[c[ub>>2]>>2]=c[vb>>2];a[wb+0>>0]=a[Za+0>>0]|0;a[wb+1>>0]=a[Za+1>>0]|0;a[wb+2>>0]=a[Za+2>>0]|0;a[wb+3>>0]=a[Za+3>>0]|0;c[xb>>2]=b;ge=c[xb>>2]|0;a[yb+0>>0]=a[wb+0>>0]|0;a[yb+1>>0]=a[wb+1>>0]|0;a[yb+2>>0]=a[wb+2>>0]|0;a[yb+3>>0]=a[wb+3>>0]|0;c[zb>>2]=ge;ge=c[zb>>2]|0;c[ta>>2]=yb;c[ua>>2]=c[c[ta>>2]>>2];sa=c[ua>>2]|0;c[va>>2]=sa;c[wa>>2]=c[va>>2];c[xa>>2]=c[c[wa>>2]>>2];c[ya>>2]=sa;c[za>>2]=c[ya>>2];c[c[za>>2]>>2]=0;sa=c[xa>>2]|0;c[Aa>>2]=yb;c[Ba>>2]=c[c[Aa>>2]>>2];c[Ca>>2]=c[Ba>>2];c[Da>>2]=c[Ca>>2];c[Ea>>2]=(c[Da>>2]|0)+4;fe=c[Ea>>2]|0;c[Fa+0>>2]=c[fe+0>>2];c[Fa+4>>2]=c[fe+4>>2];a[Ga+0>>0]=a[Fa+0>>0]|0;a[Ga+1>>0]=a[Fa+1>>0]|0;a[Ga+2>>0]=a[Fa+2>>0]|0;a[Ga+3>>0]=a[Fa+3>>0]|0;a[Ga+4>>0]=a[Fa+4>>0]|0;a[Ga+5>>0]=a[Fa+5>>0]|0;a[Ga+6>>0]=a[Fa+6>>0]|0;a[Ga+7>>0]=a[Fa+7>>0]|0;c[Ha>>2]=ge;c[Ia>>2]=sa;sa=c[Ha>>2]|0;ge=c[Ia>>2]|0;a[Ja+0>>0]=a[Ga+0>>0]|0;a[Ja+1>>0]=a[Ga+1>>0]|0;a[Ja+2>>0]=a[Ga+2>>0]|0;a[Ja+3>>0]=a[Ga+3>>0]|0;a[Ja+4>>0]=a[Ga+4>>0]|0;a[Ja+5>>0]=a[Ga+5>>0]|0;a[Ja+6>>0]=a[Ga+6>>0]|0;a[Ja+7>>0]=a[Ga+7>>0]|0;c[Ka>>2]=sa;c[La>>2]=ge;ge=c[Ka>>2]|0;c[Ma>>2]=La;sa=c[c[Ma>>2]>>2]|0;c[Na>>2]=Ja;fe=c[Na>>2]|0;c[Oa+0>>2]=c[fe+0>>2];c[Oa+4>>2]=c[fe+4>>2];a[Pa+0>>0]=a[Oa+0>>0]|0;a[Pa+1>>0]=a[Oa+1>>0]|0;a[Pa+2>>0]=a[Oa+2>>0]|0;a[Pa+3>>0]=a[Oa+3>>0]|0;a[Pa+4>>0]=a[Oa+4>>0]|0;a[Pa+5>>0]=a[Oa+5>>0]|0;a[Pa+6>>0]=a[Oa+6>>0]|0;a[Pa+7>>0]=a[Oa+7>>0]|0;c[Qa>>2]=ge;c[Ra>>2]=sa;sa=c[Qa>>2]|0;c[Sa>>2]=Ra;c[sa>>2]=c[c[Sa>>2]>>2];sa=sa+4|0;c[Ta>>2]=Pa;ge=c[Ta>>2]|0;c[sa+0>>2]=c[ge+0>>2];c[sa+4>>2]=c[ge+4>>2];c[Ua>>2]=Xa;c[Va>>2]=c[Ua>>2];c[Wa>>2]=c[Va>>2];c[na>>2]=0;sa=c[Wa>>2]|0;c[ma>>2]=sa;c[ja>>2]=c[ma>>2];c[pa>>2]=c[c[ja>>2]>>2];ge=c[na>>2]|0;c[ka>>2]=sa;c[la>>2]=c[ka>>2];c[c[la>>2]>>2]=ge;if((c[pa>>2]|0)!=0){c[ra>>2]=sa;c[qa>>2]=c[ra>>2];ja=c[pa>>2]|0;c[oa>>2]=(c[qa>>2]|0)+4;c[ba>>2]=ja;ja=c[oa>>2]|0;if(a[ja+5>>0]&1){ge=c[ja>>2]|0;c[R>>2]=(c[ba>>2]|0)+20;fe=c[R>>2]|0;c[S>>2]=ge;c[T>>2]=fe;fe=c[S>>2]|0;ge=c[T>>2]|0;a[V+0>>0]=a[U+0>>0]|0;c[W>>2]=fe;c[X>>2]=ge}if(a[ja+4>>0]&1){ge=c[ja>>2]|0;c[ia>>2]=(c[ba>>2]|0)+16;fe=c[ia>>2]|0;c[L>>2]=ge;c[M>>2]=fe;fe=c[L>>2]|0;ge=c[M>>2]|0;a[O+0>>0]=a[Y+0>>0]|0;c[P>>2]=fe;c[Q>>2]=ge}if((c[ba>>2]|0)!=0){fe=c[ba>>2]|0;c[ca>>2]=c[ja>>2];c[da>>2]=fe;c[ea>>2]=1;fe=c[da>>2]|0;ge=c[ea>>2]|0;c[fa>>2]=c[ca>>2];c[ga>>2]=fe;c[ha>>2]=ge;Sw(c[ga>>2]|0)}}c[Z>>2]=1;c[$>>2]=_;c[aa>>2]=c[$>>2];c[N>>2]=c[aa>>2];c[F>>2]=0;L=c[N>>2]|0;c[E>>2]=L;c[D>>2]=c[E>>2];c[H>>2]=c[c[D>>2]>>2];ge=c[F>>2]|0;c[K>>2]=L;c[C>>2]=c[K>>2];c[c[C>>2]>>2]=ge;if((c[H>>2]|0)==0){i=g;return}c[J>>2]=L;c[I>>2]=c[J>>2];C=c[H>>2]|0;c[G>>2]=(c[I>>2]|0)+4;c[x>>2]=C;C=c[G>>2]|0;if(a[C+5>>0]&1){ge=c[C>>2]|0;c[v>>2]=(c[x>>2]|0)+20;fe=c[v>>2]|0;c[h>>2]=ge;c[j>>2]=fe;fe=c[h>>2]|0;ge=c[j>>2]|0;a[l+0>>0]=a[k+0>>0]|0;c[m>>2]=fe;c[n>>2]=ge}if(a[C+4>>0]&1){ge=c[C>>2]|0;c[w>>2]=(c[x>>2]|0)+16;fe=c[w>>2]|0;c[u>>2]=ge;c[t>>2]=fe;fe=c[u>>2]|0;ge=c[t>>2]|0;a[r+0>>0]=a[s+0>>0]|0;c[q>>2]=fe;c[p>>2]=ge}if((c[x>>2]|0)==0){i=g;return}fe=c[x>>2]|0;c[y>>2]=c[C>>2];c[f>>2]=fe;c[z>>2]=1;fe=c[f>>2]|0;ge=c[z>>2]|0;c[A>>2]=c[y>>2];c[B>>2]=fe;c[o>>2]=ge;Sw(c[B>>2]|0);i=g;return}function Zd(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;n=i;i=i+144|0;C=n+68|0;D=n;E=n+108|0;B=n+132|0;x=n+20|0;u=n+24|0;v=n+32|0;w=n+36|0;t=n+40|0;r=n+104|0;q=n+112|0;l=n+120|0;f=n+128|0;g=n+136|0;o=n+140|0;p=n+72|0;m=n+80|0;h=n+84|0;j=n+88|0;H=n+92|0;I=n+12|0;J=n+4|0;G=n+8|0;K=n+100|0;z=n+48|0;k=n+52|0;y=n+116|0;F=n+60|0;A=n+124|0;s=n+16|0;c[K>>2]=a;c[z>>2]=b;c[k>>2]=d;c[y>>2]=e;e=c[K>>2]|0;c[I>>2]=G;c[J>>2]=-1;a=c[J>>2]|0;c[H>>2]=c[I>>2];c[n+96>>2]=a;c[c[H>>2]>>2]=0;c[F>>2]=c[G>>2];c[n+76>>2]=F;c[c[y>>2]>>2]=0;c[D>>2]=B;c[E>>2]=-1;a=c[E>>2]|0;c[C>>2]=c[D>>2];c[n+56>>2]=a;c[c[C>>2]>>2]=0;c[A>>2]=c[B>>2];c[n+64>>2]=A;c[(c[y>>2]|0)+4>>2]=0;c[(c[y>>2]|0)+8>>2]=c[z>>2];c[c[k>>2]>>2]=c[y>>2];c[x>>2]=e;a=c[c[c[x>>2]>>2]>>2]|0;c[v>>2]=t;c[w>>2]=-1;b=c[w>>2]|0;c[u>>2]=c[v>>2];c[n+28>>2]=b;c[c[u>>2]>>2]=0;c[s>>2]=c[t>>2];c[n+44>>2]=s;if((a|0)!=0){c[r>>2]=e;K=c[c[c[r>>2]>>2]>>2]|0;c[q>>2]=e;c[c[q>>2]>>2]=K}c[p>>2]=e;c[o>>2]=(c[p>>2]|0)+4;c[g>>2]=c[o>>2];c[f>>2]=c[g>>2];c[l>>2]=c[f>>2];_d(c[c[l>>2]>>2]|0,c[c[k>>2]>>2]|0);c[j>>2]=e;c[h>>2]=(c[j>>2]|0)+8;c[m>>2]=c[h>>2];K=c[m>>2]|0;c[K>>2]=(c[K>>2]|0)+1;i=n;return}function _d(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;h=i;i=i+96|0;f=h+76|0;u=h+48|0;v=h+24|0;s=h+36|0;t=h+68|0;q=h+16|0;x=h+20|0;e=h+56|0;p=h+64|0;m=h+72|0;n=h+80|0;k=h+40|0;l=h+44|0;j=h+8|0;y=h;z=h+4|0;g=h+52|0;r=h+28|0;o=h+60|0;A=h+12|0;w=h+32|0;c[z>>2]=b;c[g>>2]=d;a[(c[g>>2]|0)+12>>0]=(c[g>>2]|0)==(c[z>>2]|0)&1;while(1){if((c[g>>2]|0)==(c[z>>2]|0)){j=17;break}if(!(a[(c[(c[g>>2]|0)+8>>2]|0)+12>>0]&1^1)){j=17;break}c[y>>2]=c[(c[g>>2]|0)+8>>2];d=c[(c[(c[g>>2]|0)+8>>2]|0)+8>>2]|0;if((c[y>>2]|0)==(c[c[(c[y>>2]|0)+8>>2]>>2]|0)){c[r>>2]=c[d+4>>2];b=c[r>>2]|0;c[k>>2]=j;c[l>>2]=-1;d=c[l>>2]|0;c[m>>2]=c[k>>2];c[n>>2]=d;c[c[m>>2]>>2]=0;c[o>>2]=c[j>>2];c[p>>2]=o;if((b|0)==0){j=8;break}if(a[(c[r>>2]|0)+12>>0]&1){j=8;break}c[g>>2]=c[(c[g>>2]|0)+8>>2];a[(c[g>>2]|0)+12>>0]=1;c[g>>2]=c[(c[g>>2]|0)+8>>2];a[(c[g>>2]|0)+12>>0]=(c[g>>2]|0)==(c[z>>2]|0)&1;a[(c[r>>2]|0)+12>>0]=1;continue}else{c[A>>2]=c[d>>2];b=c[A>>2]|0;c[s>>2]=q;c[t>>2]=-1;d=c[t>>2]|0;c[u>>2]=c[s>>2];c[v>>2]=d;c[c[u>>2]>>2]=0;c[w>>2]=c[q>>2];c[x>>2]=w;if((b|0)==0){j=14;break}if(a[(c[A>>2]|0)+12>>0]&1){j=14;break}c[g>>2]=c[(c[g>>2]|0)+8>>2];a[(c[g>>2]|0)+12>>0]=1;c[g>>2]=c[(c[g>>2]|0)+8>>2];a[(c[g>>2]|0)+12>>0]=(c[g>>2]|0)==(c[z>>2]|0)&1;a[(c[A>>2]|0)+12>>0]=1;continue}}if((j|0)==8){c[f>>2]=c[g>>2];if((c[f>>2]|0)!=(c[c[(c[f>>2]|0)+8>>2]>>2]|0)){c[g>>2]=c[(c[g>>2]|0)+8>>2];$d(c[g>>2]|0)}c[g>>2]=c[(c[g>>2]|0)+8>>2];a[(c[g>>2]|0)+12>>0]=1;c[g>>2]=c[(c[g>>2]|0)+8>>2];a[(c[g>>2]|0)+12>>0]=0;ae(c[g>>2]|0);i=h;return}else if((j|0)==14){c[e>>2]=c[g>>2];if((c[e>>2]|0)==(c[c[(c[e>>2]|0)+8>>2]>>2]|0)){c[g>>2]=c[(c[g>>2]|0)+8>>2];ae(c[g>>2]|0)}c[g>>2]=c[(c[g>>2]|0)+8>>2];a[(c[g>>2]|0)+12>>0]=1;c[g>>2]=c[(c[g>>2]|0)+8>>2];a[(c[g>>2]|0)+12>>0]=0;$d(c[g>>2]|0);i=h;return}else if((j|0)==17){i=h;return}}function $d(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+48|0;f=e+16|0;k=e+28|0;l=e+32|0;m=e+36|0;j=e+12|0;b=e+24|0;d=e+20|0;h=e+8|0;c[b>>2]=a;c[d>>2]=c[(c[b>>2]|0)+4>>2];c[(c[b>>2]|0)+4>>2]=c[c[d>>2]>>2];g=c[(c[b>>2]|0)+4>>2]|0;c[l>>2]=j;c[m>>2]=-1;a=c[m>>2]|0;c[k>>2]=c[l>>2];c[e+4>>2]=a;c[c[k>>2]>>2]=0;c[h>>2]=c[j>>2];c[e>>2]=h;if((g|0)!=0)c[(c[(c[b>>2]|0)+4>>2]|0)+8>>2]=c[b>>2];c[(c[d>>2]|0)+8>>2]=c[(c[b>>2]|0)+8>>2];c[f>>2]=c[b>>2];g=c[d>>2]|0;a=c[(c[b>>2]|0)+8>>2]|0;if((c[f>>2]|0)==(c[c[(c[f>>2]|0)+8>>2]>>2]|0)){c[a>>2]=g;m=c[b>>2]|0;l=c[d>>2]|0;c[l>>2]=m;l=c[d>>2]|0;m=c[b>>2]|0;m=m+8|0;c[m>>2]=l;i=e;return}else{c[a+4>>2]=g;m=c[b>>2]|0;l=c[d>>2]|0;c[l>>2]=m;l=c[d>>2]|0;m=c[b>>2]|0;m=m+8|0;c[m>>2]=l;i=e;return}}function ae(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+48|0;f=e+16|0;k=e+28|0;l=e+32|0;m=e+36|0;j=e+12|0;b=e+24|0;d=e+20|0;h=e+8|0;c[b>>2]=a;c[d>>2]=c[c[b>>2]>>2];c[c[b>>2]>>2]=c[(c[d>>2]|0)+4>>2];g=c[c[b>>2]>>2]|0;c[l>>2]=j;c[m>>2]=-1;a=c[m>>2]|0;c[k>>2]=c[l>>2];c[e+4>>2]=a;c[c[k>>2]>>2]=0;c[h>>2]=c[j>>2];c[e>>2]=h;if((g|0)!=0)c[(c[c[b>>2]>>2]|0)+8>>2]=c[b>>2];c[(c[d>>2]|0)+8>>2]=c[(c[b>>2]|0)+8>>2];c[f>>2]=c[b>>2];g=c[d>>2]|0;a=c[(c[b>>2]|0)+8>>2]|0;if((c[f>>2]|0)==(c[c[(c[f>>2]|0)+8>>2]>>2]|0)){c[a>>2]=g;m=c[b>>2]|0;l=c[d>>2]|0;l=l+4|0;c[l>>2]=m;l=c[d>>2]|0;m=c[b>>2]|0;m=m+8|0;c[m>>2]=l;i=e;return}else{c[a+4>>2]=g;m=c[b>>2]|0;l=c[d>>2]|0;l=l+4|0;c[l>>2]=m;l=c[d>>2]|0;m=c[b>>2]|0;m=m+8|0;c[m>>2]=l;i=e;return}}function be(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;f=i;i=i+208|0;Q=f+188|0;S=f+180|0;T=f+164|0;U=f+68|0;V=f+76|0;G=f+72|0;H=f+12|0;I=f+140|0;J=f+16|0;K=f+20|0;L=f+24|0;M=f+28|0;N=f+32|0;O=f+36|0;P=f+40|0;C=f+136|0;B=f+44|0;D=f+48|0;E=f+52|0;z=f+56|0;A=f+160|0;g=f+168|0;x=f+176|0;t=f+192|0;s=f+80|0;u=f+84|0;w=f+88|0;v=f+92|0;q=f+96|0;e=f+100|0;o=f+132|0;p=f+104|0;n=f+108|0;m=f+112|0;l=f+116|0;k=f+120|0;j=f+124|0;h=f+128|0;W=f+8|0;X=f+144|0;Y=f+148|0;Z=f+4|0;_=f+152|0;$=f;R=f+60|0;y=f+156|0;r=f+64|0;F=f+172|0;c[R>>2]=b;c[y>>2]=d;d=c[R>>2]|0;R=c[y>>2]|0;c[$>>2]=d;c[_>>2]=c[$>>2];c[Z>>2]=(c[_>>2]|0)+4;c[Y>>2]=c[Z>>2];c[X>>2]=c[Y>>2];c[W>>2]=c[X>>2];b=c[c[W>>2]>>2]|0;c[V>>2]=d;c[U>>2]=(c[V>>2]|0)+4;c[T>>2]=c[U>>2];c[S>>2]=c[T>>2];c[Q>>2]=c[S>>2];ce(r,d,R,b,c[Q>>2]|0);c[P>>2]=d;c[O>>2]=c[P>>2];c[N>>2]=(c[O>>2]|0)+4;c[M>>2]=c[N>>2];c[L>>2]=c[M>>2];c[K>>2]=c[L>>2];b=c[K>>2]|0;c[I>>2]=F;c[J>>2]=b;b=c[J>>2]|0;c[G>>2]=c[I>>2];c[H>>2]=b;c[c[G>>2]>>2]=c[H>>2];c[D>>2]=r;c[E>>2]=F;b=c[E>>2]|0;c[C>>2]=c[D>>2];c[B>>2]=b;if((c[c[C>>2]>>2]|0)==(c[c[B>>2]>>2]|0)^1?(c[g>>2]=d,c[A>>2]=(c[g>>2]|0)+8,c[z>>2]=c[A>>2],Z=c[z>>2]|0,$=c[y>>2]|0,c[x>>2]=r,_=(c[c[x>>2]>>2]|0)+16|0,c[u>>2]=Z,c[w>>2]=$,c[v>>2]=_,_=c[w>>2]|0,$=c[v>>2]|0,c[f+184>>2]=c[u>>2],c[t>>2]=_,c[s>>2]=$,(c[c[t>>2]>>2]|0)>=(c[c[s>>2]>>2]|0)):0){c[a+0>>2]=c[r+0>>2];i=f;return}c[h>>2]=d;c[j>>2]=c[h>>2];c[k>>2]=(c[j>>2]|0)+4;c[l>>2]=c[k>>2];c[m>>2]=c[l>>2];c[n>>2]=c[m>>2];$=c[n>>2]|0;c[o>>2]=a;c[p>>2]=$;$=c[p>>2]|0;c[q>>2]=c[o>>2];c[e>>2]=$;c[c[q>>2]>>2]=c[e>>2];i=f;return}function ce(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;m=i;i=i+96|0;n=m+32|0;q=m+28|0;p=m;o=m+84|0;w=m+56|0;x=m+8|0;y=m+12|0;t=m+48|0;u=m+64|0;g=m+72|0;k=m+80|0;l=m+88|0;h=m+92|0;j=m+36|0;C=m+40|0;D=m+44|0;A=m+52|0;B=m+60|0;z=m+16|0;F=m+4|0;s=m+20|0;r=m+68|0;v=m+24|0;E=m+76|0;c[F>>2]=b;c[s>>2]=d;c[r>>2]=e;c[v>>2]=f;f=c[F>>2]|0;while(1){F=c[r>>2]|0;c[A>>2]=z;c[B>>2]=-1;b=c[B>>2]|0;c[C>>2]=c[A>>2];c[D>>2]=b;c[c[C>>2]>>2]=0;c[E>>2]=c[z>>2];c[n>>2]=E;if((F|0)==0)break;c[o>>2]=f;c[p>>2]=(c[o>>2]|0)+8;c[q>>2]=c[p>>2];e=(c[r>>2]|0)+16|0;F=c[s>>2]|0;c[t>>2]=c[q>>2];c[u>>2]=e;c[g>>2]=F;F=c[u>>2]|0;e=c[g>>2]|0;c[w>>2]=c[t>>2];c[x>>2]=F;c[y>>2]=e;e=c[r>>2]|0;if((c[c[x>>2]>>2]|0)<(c[c[y>>2]>>2]|0)){c[r>>2]=c[e+4>>2];continue}else{c[v>>2]=e;c[r>>2]=c[c[r>>2]>>2];continue}}F=c[v>>2]|0;c[h>>2]=a;c[j>>2]=F;F=c[j>>2]|0;c[k>>2]=c[h>>2];c[l>>2]=F;c[c[k>>2]>>2]=c[l>>2];i=m;return}function de(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;ee(c[f>>2]|0,c[e>>2]|0);i=d;return}function ee(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;e=i;i=i+128|0;t=e+112|0;m=e+52|0;o=e+92|0;q=e+100|0;n=e+24|0;p=e+8|0;v=e+28|0;r=e+44|0;w=e+36|0;s=e+117|0;u=e+16|0;x=e+96|0;z=e+104|0;y=e;g=e+60|0;h=e+64|0;j=e+68|0;k=e+72|0;l=e+76|0;f=e+84|0;B=e+88|0;C=e+80|0;D=e+48|0;E=e+20|0;F=e+108|0;G=e+56|0;A=e+116|0;c[G>>2]=b;c[e+40>>2]=d;d=c[G>>2]|0;c[F>>2]=d+4;c[E>>2]=c[F>>2];c[D>>2]=c[E>>2];b=c[D>>2]|0;c[e+32>>2]=b;c[C>>2]=b;c[B>>2]=c[C>>2];c[c[B>>2]>>2]=0;b=d+8|0;a[y+0>>0]=a[A+0>>0]|0;c[x>>2]=b;c[z>>2]=0;x=c[x>>2]|0;b=c[z>>2]|0;a[u+0>>0]=a[y+0>>0]|0;c[r>>2]=x;c[w>>2]=b;r=c[r>>2]|0;c[v>>2]=w;b=c[c[v>>2]>>2]|0;c[t>>2]=u;a[p+0>>0]=a[s+0>>0]|0;c[q>>2]=r;c[n>>2]=b;b=c[q>>2]|0;c[o>>2]=p;c[m>>2]=n;c[b>>2]=c[c[m>>2]>>2];c[l>>2]=d;c[k>>2]=(c[l>>2]|0)+4;c[j>>2]=c[k>>2];c[h>>2]=c[j>>2];c[g>>2]=c[h>>2];b=c[g>>2]|0;c[f>>2]=d;c[c[f>>2]>>2]=b;i=e;return}function fe(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;e=i;i=i+208|0;h=e+108|0;P=e+96|0;Q=e+92|0;S=e+176|0;R=e+184|0;O=e+36|0;M=e+156|0;I=e+124|0;J=e+72|0;L=e+40|0;K=e+48|0;H=e+52|0;F=e+56|0;B=e+60|0;C=e+64|0;E=e+104|0;D=e+76|0;A=e+68|0;y=e+80|0;q=e+164|0;j=e+172|0;l=e+180|0;n=e+188|0;k=e+192|0;m=e+8|0;s=e+196|0;o=e+112|0;t=e+116|0;p=e+200|0;r=e+16|0;u=e+128|0;w=e+88|0;v=e+24|0;T=e+140|0;U=e+144|0;V=e+148|0;N=e+152|0;G=e+28|0;z=e+44|0;x=e+202|0;X=e+132|0;Y=e;_=e+160|0;Z=e+203|0;$=e+136|0;aa=e+32|0;ba=e+100|0;ca=e+84|0;g=e+168|0;W=e+201|0;f=e+120|0;c[ca>>2]=b;c[g>>2]=d;d=c[ca>>2]|0;c[ba>>2]=c[g>>2];c[aa>>2]=(c[ba>>2]|0)+8;c[$>>2]=c[aa>>2];c[_>>2]=c[$>>2];b=c[_>>2]|0;a[Y+0>>0]=a[Z+0>>0]|0;c[X>>2]=b;c[U>>2]=d;c[V>>2]=W;b=c[U>>2]|0;c[T>>2]=b;c[S>>2]=O;c[R>>2]=-1;R=c[R>>2]|0;c[P>>2]=c[S>>2];c[Q>>2]=R;c[c[P>>2]>>2]=0;c[N>>2]=c[O>>2];c[M>>2]=N;c[b>>2]=0;c[L>>2]=H;c[K>>2]=-1;K=c[K>>2]|0;c[I>>2]=c[L>>2];c[J>>2]=K;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[F>>2]=G;c[b+4>>2]=0;b=b+8|0;c[E>>2]=A;c[D>>2]=-1;D=c[D>>2]|0;c[B>>2]=c[E>>2];c[C>>2]=D;c[c[B>>2]>>2]=0;c[z>>2]=c[A>>2];c[y>>2]=z;a[v+0>>0]=a[x+0>>0]|0;c[u>>2]=b;c[w>>2]=0;u=c[u>>2]|0;b=c[w>>2]|0;a[r+0>>0]=a[v+0>>0]|0;c[o>>2]=u;c[t>>2]=b;o=c[o>>2]|0;c[s>>2]=t;b=c[c[s>>2]>>2]|0;c[q>>2]=r;a[m+0>>0]=a[p+0>>0]|0;c[n>>2]=o;c[k>>2]=b;b=c[n>>2]|0;c[l>>2]=m;c[j>>2]=k;c[b>>2]=c[c[j>>2]>>2];c[h>>2]=c[g>>2];b=c[h>>2]|0;c[f>>2]=((c[b+4>>2]|0)-(c[b>>2]|0)|0)/2096|0;if(!((c[f>>2]|0)>>>0>0)){i=e;return}ge(d,c[f>>2]|0);he(d,c[c[g>>2]>>2]|0,c[(c[g>>2]|0)+4>>2]|0);i=e;return}function ge(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;k=i;i=i+64|0;d=k+36|0;e=k+16|0;l=k+32|0;j=k+40|0;f=k+48|0;g=k+8|0;m=k+4|0;n=k+24|0;o=k+12|0;p=k+28|0;h=k;c[p>>2]=a;c[h>>2]=b;b=c[p>>2]|0;a=c[h>>2]|0;if(a>>>0>(ie(b)|0)>>>0)ht(b);else{c[o>>2]=b;c[n>>2]=(c[o>>2]|0)+8;c[m>>2]=c[n>>2];p=c[h>>2]|0;c[e>>2]=c[m>>2];c[l>>2]=p;p=c[l>>2]|0;c[k+44>>2]=c[e>>2];c[d>>2]=p;c[k+20>>2]=0;p=Qw((c[d>>2]|0)*2096|0)|0;c[b+4>>2]=p;c[b>>2]=p;p=(c[b>>2]|0)+((c[h>>2]|0)*2096|0)|0;c[g>>2]=b;c[f>>2]=(c[g>>2]|0)+8;c[j>>2]=c[f>>2];c[c[j>>2]>>2]=p;i=k;return}}function he(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;k=i;i=i+48|0;g=k+36|0;j=k+16|0;e=k;l=k+28|0;n=k+32|0;o=k+40|0;p=k+12|0;q=k+24|0;h=k+20|0;m=k+8|0;f=k+4|0;c[q>>2]=a;c[h>>2]=b;c[m>>2]=d;d=c[q>>2]|0;c[p>>2]=d;c[o>>2]=(c[p>>2]|0)+8;c[n>>2]=c[o>>2];c[f>>2]=c[n>>2];while(1){if((c[h>>2]|0)==(c[m>>2]|0))break;p=c[f>>2]|0;c[g>>2]=c[d+4>>2];q=c[g>>2]|0;b=c[h>>2]|0;c[j>>2]=p;c[e>>2]=q;c[l>>2]=b;b=c[e>>2]|0;if((b|0)!=0)By(b|0,c[l>>2]|0,2096)|0;q=d+4|0;c[q>>2]=(c[q>>2]|0)+2096;c[h>>2]=(c[h>>2]|0)+2096}i=k;return}function ie(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+80|0;q=h+44|0;r=h+12|0;s=h+8|0;u=h+16|0;t=h+76|0;k=h+20|0;g=h+24|0;f=h+28|0;d=h+68|0;e=h+36|0;l=h;n=h+48|0;j=h+52|0;m=h+77|0;v=h+60|0;w=h+64|0;x=h+40|0;y=h+32|0;p=h+56|0;o=h+72|0;c[y>>2]=b;c[x>>2]=c[y>>2];c[w>>2]=(c[x>>2]|0)+8;c[v>>2]=c[w>>2];c[u>>2]=c[v>>2];b=c[u>>2]|0;a[s+0>>0]=a[t+0>>0]|0;c[r>>2]=b;c[q>>2]=c[r>>2];c[p>>2]=2049125;c[o>>2]=4294967295/2|0;c[n>>2]=p;c[j>>2]=o;b=c[n>>2]|0;j=c[j>>2]|0;a[l+0>>0]=a[m+0>>0]|0;c[d>>2]=b;c[e>>2]=j;j=c[e>>2]|0;b=c[d>>2]|0;c[k>>2]=l;c[g>>2]=j;c[f>>2]=b;i=h;return c[((c[c[g>>2]>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0?c[e>>2]|0:c[d>>2]|0)>>2]|0}function je(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0.0;d=i;i=i+2112|0;e=d+2096|0;j=d+2108|0;f=d+2104|0;g=d;c[j>>2]=a;c[f>>2]=b;if((c[(c[j>>2]|0)+2080>>2]|0)==0){h[e>>3]=0.0;k=+h[e>>3];i=d;return+k}else{By(g|0,c[j>>2]|0,2096)|0;ke(g,c[f>>2]|0);k=+Md(g);h[e>>3]=k- +h[(c[f>>2]|0)+2088>>3];k=+h[e>>3];i=d;return+k}return 0.0}function ke(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;g=d+8|0;f=d+4|0;e=d;c[g>>2]=a;c[f>>2]=b;b=c[g>>2]|0;a=b+2080|0;c[a>>2]=(c[a>>2]|0)+(c[(c[f>>2]|0)+2080>>2]|0);c[e>>2]=0;while(1){if((c[e>>2]|0)>=520)break;g=b+(c[e>>2]<<2)|0;c[g>>2]=(c[g>>2]|0)+(c[(c[f>>2]|0)+(c[e>>2]<<2)>>2]|0);c[e>>2]=(c[e>>2]|0)+1}i=d;return}function le(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;me(c[d>>2]|0);i=b;return}function me(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;ne(c[d>>2]|0);i=b;return}function ne(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;oe(c[d>>2]|0);i=b;return}function oe(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+32|0;d=b+8|0;e=b+16|0;f=b+20|0;g=b+24|0;h=b+4|0;j=b;k=b+12|0;c[k>>2]=a;a=c[k>>2]|0;c[j>>2]=a;c[h>>2]=c[j>>2];c[g>>2]=(c[h>>2]|0)+4;c[f>>2]=c[g>>2];c[e>>2]=c[f>>2];c[d>>2]=c[e>>2];pe(a,c[c[d>>2]>>2]|0);i=b;return}function pe(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;p=i;i=i+112|0;j=p+20|0;h=p+40|0;g=p+48|0;l=p+84|0;q=p+4|0;r=p+16|0;f=p;m=p+8|0;n=p+28|0;e=p+100|0;v=p+80|0;w=p+88|0;x=p+92|0;s=p+96|0;t=p+52|0;u=p+56|0;A=p+24|0;C=p+12|0;B=p+32|0;z=p+68|0;D=p+36|0;o=p+76|0;y=p+44|0;k=p+72|0;c[D>>2]=b;c[o>>2]=d;d=c[D>>2]|0;b=c[o>>2]|0;c[C>>2]=z;c[B>>2]=-1;B=c[B>>2]|0;c[A>>2]=c[C>>2];c[p+64>>2]=B;c[c[A>>2]>>2]=0;c[y>>2]=c[z>>2];c[p+60>>2]=y;if((b|0)==0){i=p;return}pe(d,c[c[o>>2]>>2]|0);pe(d,c[(c[o>>2]|0)+4>>2]|0);c[g>>2]=d;c[h>>2]=(c[g>>2]|0)+4;c[j>>2]=c[h>>2];c[k>>2]=c[j>>2];C=c[k>>2]|0;c[l>>2]=(c[o>>2]|0)+16;D=c[l>>2]|0;c[m>>2]=C;c[n>>2]=D;D=c[m>>2]|0;C=c[n>>2]|0;a[f+0>>0]=a[e+0>>0]|0;c[q>>2]=D;c[r>>2]=C;C=c[o>>2]|0;c[s>>2]=c[k>>2];c[t>>2]=C;c[u>>2]=1;C=c[t>>2]|0;D=c[u>>2]|0;c[v>>2]=c[s>>2];c[w>>2]=C;c[x>>2]=D;Sw(c[w>>2]|0);i=p;return}function qe(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;d=i;i=i+80|0;o=d+24|0;l=d+44|0;m=d+60|0;j=d+4|0;k=d+40|0;h=d+48|0;g=d+56|0;n=d+64|0;f=d+68|0;r=d+28|0;t=d+32|0;s=d+36|0;q=d+8|0;b=d+12|0;e=d+52|0;p=d+16|0;c[e>>2]=a;a=c[(c[e>>2]|0)+4>>2]|0;c[t>>2]=q;c[s>>2]=-1;s=c[s>>2]|0;c[r>>2]=c[t>>2];c[d>>2]=s;c[c[r>>2]>>2]=0;c[p>>2]=c[q>>2];c[d+20>>2]=p;if((a|0)==0){while(1){c[f>>2]=c[e>>2];g=c[(c[e>>2]|0)+8>>2]|0;if(!((c[f>>2]|0)==(c[c[(c[f>>2]|0)+8>>2]>>2]|0)^1))break;c[e>>2]=g}c[b>>2]=g;t=c[b>>2]|0;i=d;return t|0}c[g>>2]=c[(c[e>>2]|0)+4>>2];while(1){t=c[c[g>>2]>>2]|0;c[j>>2]=h;c[k>>2]=-1;e=c[k>>2]|0;c[l>>2]=c[j>>2];c[m>>2]=e;c[c[l>>2]>>2]=0;c[n>>2]=c[h>>2];c[o>>2]=n;e=c[g>>2]|0;if((t|0)==0)break;c[g>>2]=c[e>>2]}c[b>>2]=e;t=c[b>>2]|0;i=d;return t|0}function re(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0;G=i;i=i+544|0;pa=G+284|0;oa=G+264|0;Y=G+260|0;ra=G+256|0;W=G+400|0;na=G+500|0;V=G+508|0;$=G+516|0;U=G+88|0;ta=G+84|0;sa=G+80|0;wa=G+64|0;xa=G+68|0;ja=G+72|0;ka=G+76|0;ia=G+48|0;fa=G+288|0;ga=G+144|0;ha=G+532|0;ba=G+96|0;ca=G+100|0;da=G+104|0;_=G+108|0;R=G+112|0;aa=G+116|0;ea=G+120|0;va=G+124|0;Z=G+128|0;ya=G+132|0;za=G+136|0;kb=G+140|0;Aa=G+372|0;ua=G+300|0;jb=G+156|0;ib=G+152|0;P=G+160|0;Q=G+164|0;M=G+168|0;L=G+172|0;z=G+176|0;A=G+180|0;y=G+40|0;v=G+188|0;w=G+192|0;x=G+533|0;C=G+208|0;B=G+212|0;f=G+216|0;F=G+220|0;E=G+224|0;D=G+228|0;u=G+232|0;N=G+236|0;t=G+240|0;K=G+244|0;J=G+488|0;T=G+496|0;I=G+504|0;O=G+512|0;S=G+520|0;qa=G+524|0;Pa=G+280|0;Oa=G+528|0;Ma=G+368|0;La=G+344|0;Ka=G+296|0;Na=G+292|0;Qa=G+304|0;Ta=G+308|0;Sa=G+312|0;Ra=G+316|0;Ua=G+320|0;bb=G+324|0;hb=G+328|0;gb=G+332|0;eb=G+336|0;fb=G+340|0;db=G;ab=G+348|0;_a=G+352|0;$a=G+356|0;cb=G+360|0;Ba=G+8|0;Xa=G+184|0;Ya=G+376|0;Wa=G+32|0;Ja=G+384|0;Ia=G+388|0;Va=G+392|0;Ha=G+16|0;Ga=G+404|0;Fa=G+24|0;Da=G+412|0;Ea=G+416|0;Ca=G+420|0;Za=G+424|0;mb=G+428|0;p=G+432|0;o=G+436|0;r=G+440|0;q=G+444|0;h=G+448|0;g=G+452|0;H=G+456|0;l=G+460|0;j=G+464|0;k=G+468|0;rb=G+476|0;tb=G+380|0;sb=G+480|0;qb=G+52|0;ub=G+408|0;nb=G+248|0;ma=G+484|0;la=G+56|0;s=G+60|0;m=G+534|0;pb=G+492|0;X=G+268|0;lb=G+252|0;ob=G+196|0;n=G+92|0;c[ub>>2]=d;c[nb>>2]=e;e=c[ub>>2]|0;c[la>>2]=se(e,ma,c[nb>>2]|0)|0;c[s>>2]=c[c[la>>2]>>2];a[m>>0]=0;d=c[c[la>>2]>>2]|0;c[tb>>2]=qb;c[sb>>2]=-1;sb=c[sb>>2]|0;c[rb>>2]=c[tb>>2];c[G+148>>2]=sb;c[c[rb>>2]>>2]=0;c[pb>>2]=c[qb>>2];c[G+472>>2]=pb;if((d|0)!=0){ub=c[s>>2]|0;c[r>>2]=n;c[q>>2]=ub;ub=c[r>>2]|0;sb=c[q>>2]|0;c[p>>2]=ub;c[o>>2]=sb;sb=c[p>>2]|0;ub=c[o>>2]|0;c[sb>>2]=ub;c[l>>2]=b;c[j>>2]=n;c[k>>2]=m;sb=c[l>>2]|0;ub=c[k>>2]|0;tb=c[j>>2]|0;c[h>>2]=sb;c[g>>2]=tb;c[H>>2]=ub;ub=c[h>>2]|0;tb=c[g>>2]|0;c[ub+0>>2]=c[tb+0>>2];ub=ub+4|0;tb=c[H>>2]|0;tb=a[tb>>0]|0;tb=tb&1;tb=tb&1;a[ub>>0]=tb;i=G;return}te(ob,e,c[nb>>2]|0);c[mb>>2]=ob;tb=c[mb>>2]|0;c[Ca>>2]=lb;c[Za>>2]=tb;tb=c[Za>>2]|0;c[Da>>2]=c[Ca>>2];c[Ea>>2]=tb;c[c[Da>>2]>>2]=c[Ea>>2];a[Fa+0>>0]=a[lb+0>>0]|0;a[Fa+1>>0]=a[lb+1>>0]|0;a[Fa+2>>0]=a[lb+2>>0]|0;a[Fa+3>>0]=a[lb+3>>0]|0;c[Ga>>2]=X;tb=c[Ga>>2]|0;a[Ha+0>>0]=a[Fa+0>>0]|0;a[Ha+1>>0]=a[Fa+1>>0]|0;a[Ha+2>>0]=a[Fa+2>>0]|0;a[Ha+3>>0]=a[Fa+3>>0]|0;c[Ia>>2]=tb;tb=c[Ia>>2]|0;c[Ja>>2]=Ha;c[Ka>>2]=c[c[Ja>>2]>>2];ub=c[Ka>>2]|0;c[La>>2]=ub;c[Ma>>2]=c[La>>2];c[Na>>2]=c[c[Ma>>2]>>2];c[Oa>>2]=ub;c[Pa>>2]=c[Oa>>2];c[c[Pa>>2]>>2]=0;ub=c[Na>>2]|0;c[Qa>>2]=Ha;c[Ra>>2]=c[c[Qa>>2]>>2];c[Sa>>2]=c[Ra>>2];c[Ta>>2]=c[Sa>>2];c[Ua>>2]=(c[Ta>>2]|0)+4;sb=c[Ua>>2]|0;c[Va+0>>2]=c[sb+0>>2];c[Va+4>>2]=c[sb+4>>2];a[Wa+0>>0]=a[Va+0>>0]|0;a[Wa+1>>0]=a[Va+1>>0]|0;a[Wa+2>>0]=a[Va+2>>0]|0;a[Wa+3>>0]=a[Va+3>>0]|0;a[Wa+4>>0]=a[Va+4>>0]|0;a[Wa+5>>0]=a[Va+5>>0]|0;a[Wa+6>>0]=a[Va+6>>0]|0;a[Wa+7>>0]=a[Va+7>>0]|0;c[Xa>>2]=tb;c[Ya>>2]=ub;ub=c[Xa>>2]|0;tb=c[Ya>>2]|0;a[Ba+0>>0]=a[Wa+0>>0]|0;a[Ba+1>>0]=a[Wa+1>>0]|0;a[Ba+2>>0]=a[Wa+2>>0]|0;a[Ba+3>>0]=a[Wa+3>>0]|0;a[Ba+4>>0]=a[Wa+4>>0]|0;a[Ba+5>>0]=a[Wa+5>>0]|0;a[Ba+6>>0]=a[Wa+6>>0]|0;a[Ba+7>>0]=a[Wa+7>>0]|0;c[_a>>2]=ub;c[$a>>2]=tb;tb=c[_a>>2]|0;c[ab>>2]=$a;ub=c[c[ab>>2]>>2]|0;c[bb>>2]=Ba;Ba=c[bb>>2]|0;c[cb+0>>2]=c[Ba+0>>2];c[cb+4>>2]=c[Ba+4>>2];a[db+0>>0]=a[cb+0>>0]|0;a[db+1>>0]=a[cb+1>>0]|0;a[db+2>>0]=a[cb+2>>0]|0;a[db+3>>0]=a[cb+3>>0]|0;a[db+4>>0]=a[cb+4>>0]|0;a[db+5>>0]=a[cb+5>>0]|0;a[db+6>>0]=a[cb+6>>0]|0;a[db+7>>0]=a[cb+7>>0]|0;c[eb>>2]=tb;c[fb>>2]=ub;Ba=c[eb>>2]|0;c[gb>>2]=fb;c[Ba>>2]=c[c[gb>>2]>>2];Ba=Ba+4|0;c[hb>>2]=db;ub=c[hb>>2]|0;c[Ba+0>>2]=c[ub+0>>2];c[Ba+4>>2]=c[ub+4>>2];c[ib>>2]=ob;c[jb>>2]=c[ib>>2];c[kb>>2]=c[jb>>2];c[Aa>>2]=0;Ba=c[kb>>2]|0;c[za>>2]=Ba;c[ya>>2]=c[za>>2];c[ua>>2]=c[c[ya>>2]>>2];ub=c[Aa>>2]|0;c[xa>>2]=Ba;c[wa>>2]=c[xa>>2];c[c[wa>>2]>>2]=ub;if((c[ua>>2]|0)!=0){c[sa>>2]=Ba;c[ta>>2]=c[sa>>2];sa=c[ua>>2]|0;c[va>>2]=(c[ta>>2]|0)+4;c[Z>>2]=sa;sa=c[va>>2]|0;if(a[sa+4>>0]&1){ub=c[sa>>2]|0;c[ea>>2]=(c[Z>>2]|0)+16;tb=c[ea>>2]|0;c[fa>>2]=ub;c[ga>>2]=tb;tb=c[fa>>2]|0;ub=c[ga>>2]|0;a[ia+0>>0]=a[ha+0>>0]|0;c[ja>>2]=tb;c[ka>>2]=ub}if((c[Z>>2]|0)!=0){tb=c[Z>>2]|0;c[_>>2]=c[sa>>2];c[R>>2]=tb;c[aa>>2]=1;tb=c[R>>2]|0;ub=c[aa>>2]|0;c[ba>>2]=c[_>>2];c[ca>>2]=tb;c[da>>2]=ub;Sw(c[ca>>2]|0)}}ub=c[ma>>2]|0;R=c[la>>2]|0;c[U>>2]=X;c[$>>2]=c[U>>2];c[V>>2]=c[$>>2];ue(e,ub,R,c[c[V>>2]>>2]|0);c[W>>2]=X;R=c[W>>2]|0;c[ra>>2]=R;c[Y>>2]=c[ra>>2];c[na>>2]=c[c[Y>>2]>>2];c[oa>>2]=R;c[pa>>2]=c[oa>>2];c[c[pa>>2]>>2]=0;c[s>>2]=c[na>>2];a[m>>0]=1;c[qa>>2]=X;c[S>>2]=c[qa>>2];c[T>>2]=c[S>>2];c[I>>2]=0;R=c[T>>2]|0;c[J>>2]=R;c[K>>2]=c[J>>2];c[O>>2]=c[c[K>>2]>>2];ub=c[I>>2]|0;c[L>>2]=R;c[M>>2]=c[L>>2];c[c[M>>2]>>2]=ub;if((c[O>>2]|0)==0){ub=c[s>>2]|0;c[r>>2]=n;c[q>>2]=ub;ub=c[r>>2]|0;sb=c[q>>2]|0;c[p>>2]=ub;c[o>>2]=sb;sb=c[p>>2]|0;ub=c[o>>2]|0;c[sb>>2]=ub;c[l>>2]=b;c[j>>2]=n;c[k>>2]=m;sb=c[l>>2]|0;ub=c[k>>2]|0;tb=c[j>>2]|0;c[h>>2]=sb;c[g>>2]=tb;c[H>>2]=ub;ub=c[h>>2]|0;tb=c[g>>2]|0;c[ub+0>>2]=c[tb+0>>2];ub=ub+4|0;tb=c[H>>2]|0;tb=a[tb>>0]|0;tb=tb&1;tb=tb&1;a[ub>>0]=tb;i=G;return}c[Q>>2]=R;c[P>>2]=c[Q>>2];I=c[O>>2]|0;c[N>>2]=(c[P>>2]|0)+4;c[t>>2]=I;I=c[N>>2]|0;if(a[I+4>>0]&1){ub=c[I>>2]|0;c[u>>2]=(c[t>>2]|0)+16;tb=c[u>>2]|0;c[v>>2]=ub;c[w>>2]=tb;tb=c[v>>2]|0;ub=c[w>>2]|0;a[y+0>>0]=a[x+0>>0]|0;c[z>>2]=tb;c[A>>2]=ub}if((c[t>>2]|0)==0){ub=c[s>>2]|0;c[r>>2]=n;c[q>>2]=ub;ub=c[r>>2]|0;sb=c[q>>2]|0;c[p>>2]=ub;c[o>>2]=sb;sb=c[p>>2]|0;ub=c[o>>2]|0;c[sb>>2]=ub;c[l>>2]=b;c[j>>2]=n;c[k>>2]=m;sb=c[l>>2]|0;ub=c[k>>2]|0;tb=c[j>>2]|0;c[h>>2]=sb;c[g>>2]=tb;c[H>>2]=ub;ub=c[h>>2]|0;tb=c[g>>2]|0;c[ub+0>>2]=c[tb+0>>2];ub=ub+4|0;tb=c[H>>2]|0;tb=a[tb>>0]|0;tb=tb&1;tb=tb&1;a[ub>>0]=tb;i=G;return}sb=c[t>>2]|0;c[F>>2]=c[I>>2];c[E>>2]=sb;c[D>>2]=1;sb=c[E>>2]|0;ub=c[D>>2]|0;c[C>>2]=c[F>>2];c[B>>2]=sb;c[f>>2]=ub;Sw(c[B>>2]|0);ub=c[s>>2]|0;c[r>>2]=n;c[q>>2]=ub;ub=c[r>>2]|0;sb=c[q>>2]|0;c[p>>2]=ub;c[o>>2]=sb;sb=c[p>>2]|0;ub=c[o>>2]|0;c[sb>>2]=ub;c[l>>2]=b;c[j>>2]=n;c[k>>2]=m;sb=c[l>>2]|0;ub=c[k>>2]|0;tb=c[j>>2]|0;c[h>>2]=sb;c[g>>2]=tb;c[H>>2]=ub;ub=c[h>>2]|0;tb=c[g>>2]|0;c[ub+0>>2]=c[tb+0>>2];ub=ub+4|0;tb=c[H>>2]|0;tb=a[tb>>0]|0;tb=tb&1;tb=tb&1;a[ub>>0]=tb;i=G;return}function se(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;g=i;i=i+208|0;R=g+188|0;S=g+164|0;T=g+84|0;Q=g+92|0;E=g+20|0;D=g+24|0;C=g+28|0;F=g+32|0;G=g+36|0;H=g+40|0;r=g+44|0;s=g+48|0;p=g+52|0;q=g+56|0;o=g+60|0;u=g+64|0;h=g+68|0;w=g+72|0;v=g+160|0;z=g+168|0;x=g+176|0;B=g+184|0;l=g+192|0;k=g+96|0;J=g+100|0;m=g+104|0;I=g+108|0;A=g+112|0;O=g+116|0;N=g+120|0;M=g+124|0;L=g+128|0;K=g+132|0;U=g+136|0;V=g+140|0;W=g+144|0;X=g+148|0;Y=g+16|0;Z=g+8|0;f=g;_=g+12|0;e=g+152|0;y=g+4|0;n=g+76|0;P=g+156|0;t=g+80|0;j=g+172|0;c[_>>2]=a;c[e>>2]=b;c[y>>2]=d;b=c[_>>2]|0;c[Z>>2]=b;c[Y>>2]=c[Z>>2];c[X>>2]=(c[Y>>2]|0)+4;c[W>>2]=c[X>>2];c[V>>2]=c[W>>2];c[U>>2]=c[V>>2];c[n>>2]=c[c[U>>2]>>2];d=c[n>>2]|0;c[S>>2]=Q;c[T>>2]=-1;a=c[T>>2]|0;c[R>>2]=c[S>>2];c[g+180>>2]=a;c[c[R>>2]>>2]=0;c[P>>2]=c[Q>>2];c[g+88>>2]=P;if((d|0)==0){c[K>>2]=b;c[L>>2]=(c[K>>2]|0)+4;c[M>>2]=c[L>>2];c[N>>2]=c[M>>2];c[O>>2]=c[N>>2];c[c[e>>2]>>2]=c[O>>2];c[f>>2]=c[c[e>>2]>>2];_=c[f>>2]|0;i=g;return _|0}while(1){c[C>>2]=b;c[D>>2]=(c[C>>2]|0)+8;c[E>>2]=c[D>>2];Z=c[y>>2]|0;_=(c[n>>2]|0)+16|0;c[F>>2]=c[E>>2];c[G>>2]=Z;c[H>>2]=_;if((c[c[G>>2]>>2]|0)<(c[c[H>>2]>>2]|0)){_=c[c[n>>2]>>2]|0;c[p>>2]=o;c[q>>2]=-1;K=c[q>>2]|0;c[r>>2]=c[p>>2];c[s>>2]=K;c[c[r>>2]>>2]=0;c[t>>2]=c[o>>2];c[u>>2]=t;K=c[n>>2]|0;if((_|0)==0){h=5;break}c[n>>2]=c[K>>2];continue}c[v>>2]=b;c[w>>2]=(c[v>>2]|0)+8;c[h>>2]=c[w>>2];_=(c[n>>2]|0)+16|0;K=c[y>>2]|0;c[z>>2]=c[h>>2];c[x>>2]=_;c[B>>2]=K;K=c[n>>2]|0;if((c[c[x>>2]>>2]|0)>=(c[c[B>>2]>>2]|0)){h=10;break}_=c[K+4>>2]|0;c[J>>2]=I;c[m>>2]=-1;K=c[m>>2]|0;c[l>>2]=c[J>>2];c[k>>2]=K;c[c[l>>2]>>2]=0;c[j>>2]=c[I>>2];c[A>>2]=j;K=c[n>>2]|0;if((_|0)==0){h=9;break}c[n>>2]=c[K+4>>2]}if((h|0)==5){c[c[e>>2]>>2]=K;c[f>>2]=c[c[e>>2]>>2];_=c[f>>2]|0;i=g;return _|0}else if((h|0)==9){c[c[e>>2]>>2]=K;c[f>>2]=(c[c[e>>2]>>2]|0)+4;_=c[f>>2]|0;i=g;return _|0}else if((h|0)==10){c[c[e>>2]>>2]=K;c[f>>2]=c[e>>2];_=c[f>>2]|0;i=g;return _|0}return 0}function te(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0,Uc=0,Vc=0,Wc=0,Xc=0,Yc=0,Zc=0,_c=0,$c=0,ad=0,bd=0,cd=0,dd=0,ed=0,fd=0,gd=0,hd=0,id=0,jd=0,kd=0,ld=0,md=0,nd=0,od=0,pd=0,qd=0,rd=0,sd=0,td=0,ud=0,vd=0,wd=0,xd=0,yd=0,zd=0,Ad=0,Bd=0,Cd=0,Dd=0,Ed=0;n=i;i=i+1120|0;Mc=n+588|0;Nc=n+696|0;Oc=n+568|0;mc=n+564|0;lc=n+560|0;jc=n+676|0;ic=n+1068|0;hc=n+1076|0;kc=n+1084|0;nc=n+1092|0;qc=n+1100|0;pc=n+1060|0;oc=n+224|0;rc=n+208|0;Ac=n+180|0;Gc=n+1040|0;Fc=n+816|0;Dc=n+648|0;Ec=n+620|0;Cc=n+80|0;zc=n+352|0;xc=n+336|0;yc=n+252|0;Bc=n+232|0;wc=n+48|0;uc=n+220|0;vc=n+216|0;tc=n+144|0;gc=n+200|0;ob=n+184|0;sc=n+192|0;ec=n+176|0;dc=n+968|0;cc=n+88|0;ib=n+664|0;hb=n+644|0;jb=n+632|0;kb=n+616|0;Ya=n+376|0;Za=n+364|0;Xa=n+24|0;Ua=n+348|0;Va=n+344|0;Wa=n+1116|0;Qa=n+328|0;Ra=n+256|0;Sa=n+260|0;Na=n+264|0;Oa=n+268|0;Pa=n+228|0;Ta=n+276|0;gb=n+280|0;Ma=n+284|0;lb=n+288|0;mb=n+292|0;Jc=n+204|0;nb=n+300|0;fb=n+304|0;Ic=n+308|0;Hc=n+312|0;ac=n+316|0;bc=n+320|0;_b=n+324|0;$b=n+1036|0;Yb=n+1016|0;Db=n+964|0;Cb=n+880|0;Ab=n+812|0;zb=n+764|0;yb=n+660|0;Bb=n+656|0;Eb=n+640|0;Hb=n+636|0;Gb=n+628|0;Fb=n+624|0;Ib=n+612|0;Rb=n+604|0;Xb=n+380|0;Wb=n+384|0;Ub=n+360|0;Vb=n+392|0;Tb=n+72|0;Qb=n+400|0;Ob=n+404|0;Pb=n+408|0;Sb=n+416|0;Nb=n+152|0;Lb=n+428|0;Mb=n+432|0;Kb=n+32|0;xb=n+440|0;wb=n+444|0;Jb=n+448|0;vb=n+64|0;ub=n+460|0;sb=n+128|0;qb=n+468|0;rb=n+472|0;pb=n+476|0;fc=n+272|0;Lc=n+484|0;Zb=n+488|0;tb=n+492|0;Kc=n+504|0;_a=n+508|0;$a=n+512|0;Ka=n+516|0;La=n+520|0;Ia=n+524|0;ja=n+528|0;ia=n+532|0;ga=n+296|0;eb=n+540|0;fa=n+1064|0;ha=n+556|0;ka=n+1080|0;na=n+1088|0;ma=n+1096|0;la=n+572|0;oa=n+1108|0;xa=n+584|0;Da=n+1112|0;Ca=n+592|0;Aa=n+596|0;Ba=n+600|0;za=n+104|0;wa=n+608|0;ua=n+1032|0;va=n+1028|0;ya=n+1008|0;ta=n+16|0;ra=n+960|0;sa=n+932|0;qa=n+136|0;ea=n+876|0;db=n+808|0;pa=n+800|0;cb=n+40|0;bb=n+760|0;ab=n+120|0;Rc=n+668|0;Qc=n+672|0;Pc=n+1072|0;ca=n+680|0;da=n+684|0;_=n+688|0;Z=n+692|0;H=n+1104|0;I=n+700|0;W=n+8|0;U=n+704|0;E=n+708|0;F=n+1117|0;O=n+724|0;P=n+728|0;Q=n+732|0;N=n+736|0;J=n+740|0;K=n+744|0;R=n+388|0;aa=n+748|0;G=n+752|0;Y=n+756|0;X=n+356|0;Ga=n+396|0;$=n+768|0;ba=n+772|0;Fa=n+776|0;Ea=n+780|0;Uc=n+784|0;w=n+788|0;D=n+792|0;v=n+796|0;z=n+424|0;p=n+820|0;o=n+824|0;q=n+96|0;t=n+828|0;s=n+832|0;r=n+1118|0;h=n+836|0;g=n+840|0;f=n+844|0;m=n+848|0;l=n+852|0;j=n+856|0;u=n+860|0;y=n+456|0;k=n+864|0;A=n+868|0;B=n+872|0;S=n+464|0;C=n+884|0;x=n+888|0;T=n+892|0;V=n+896|0;Vc=n+900|0;Wc=n+904|0;Xc=n+908|0;ld=n+480|0;cd=n+912|0;Yc=n+916|0;_c=n+920|0;ad=n+924|0;$c=n+928|0;Zc=n+56|0;ed=n+936|0;gd=n+940|0;fd=n+944|0;bd=n+952|0;dd=n+160|0;jd=n+972|0;id=n+976|0;hd=n;nd=n+980|0;pd=n+984|0;od=n+988|0;kd=n+992|0;md=n+112|0;sd=n+1e3|0;rd=n+1004|0;qd=n+168|0;vd=n+1020|0;ud=n+536|0;wd=n+1024|0;xd=n+240|0;yd=n+248|0;zd=n+1048|0;Ad=n+368|0;Bd=n+1052|0;Cd=n+212|0;Dd=n+372|0;Ed=n+340|0;Tc=n+1056|0;Sc=n+244|0;M=n+544|0;td=n+576|0;Ja=n+436|0;Ha=n+712|0;L=n+332|0;c[Ed>>2]=d;c[Tc>>2]=e;c[Dd>>2]=c[Ed>>2];c[Cd>>2]=(c[Dd>>2]|0)+4;c[Bd>>2]=c[Cd>>2];c[Sc>>2]=c[Bd>>2];c[zd>>2]=c[Sc>>2];c[Ad>>2]=1;d=c[Ad>>2]|0;c[n+652>>2]=c[zd>>2];c[yd>>2]=d;c[n+1044>>2]=0;d=Qw((c[yd>>2]|0)*20|0)|0;e=c[Sc>>2]|0;c[wd>>2]=td;c[xd>>2]=e;e=c[xd>>2]|0;c[vd>>2]=c[wd>>2];c[ud>>2]=e;e=c[vd>>2]|0;c[e>>2]=c[ud>>2];a[e+4>>0]=0;a[qd+0>>0]=a[td+0>>0]|0;a[qd+1>>0]=a[td+1>>0]|0;a[qd+2>>0]=a[td+2>>0]|0;a[qd+3>>0]=a[td+3>>0]|0;a[qd+4>>0]=a[td+4>>0]|0;a[qd+5>>0]=a[td+5>>0]|0;a[qd+6>>0]=a[td+6>>0]|0;a[qd+7>>0]=a[td+7>>0]|0;c[sd>>2]=M;c[rd>>2]=d;d=c[sd>>2]|0;e=c[rd>>2]|0;a[md+0>>0]=a[qd+0>>0]|0;a[md+1>>0]=a[qd+1>>0]|0;a[md+2>>0]=a[qd+2>>0]|0;a[md+3>>0]=a[qd+3>>0]|0;a[md+4>>0]=a[qd+4>>0]|0;a[md+5>>0]=a[qd+5>>0]|0;a[md+6>>0]=a[qd+6>>0]|0;a[md+7>>0]=a[qd+7>>0]|0;c[pd>>2]=d;c[od>>2]=e;e=c[pd>>2]|0;c[nd>>2]=od;d=c[c[nd>>2]>>2]|0;c[ld>>2]=md;ld=c[ld>>2]|0;c[kd+0>>2]=c[ld+0>>2];c[kd+4>>2]=c[ld+4>>2];a[hd+0>>0]=a[kd+0>>0]|0;a[hd+1>>0]=a[kd+1>>0]|0;a[hd+2>>0]=a[kd+2>>0]|0;a[hd+3>>0]=a[kd+3>>0]|0;a[hd+4>>0]=a[kd+4>>0]|0;a[hd+5>>0]=a[kd+5>>0]|0;a[hd+6>>0]=a[kd+6>>0]|0;a[hd+7>>0]=a[kd+7>>0]|0;c[jd>>2]=e;c[id>>2]=d;d=c[jd>>2]|0;e=c[id>>2]|0;a[dd+0>>0]=a[hd+0>>0]|0;a[dd+1>>0]=a[hd+1>>0]|0;a[dd+2>>0]=a[hd+2>>0]|0;a[dd+3>>0]=a[hd+3>>0]|0;a[dd+4>>0]=a[hd+4>>0]|0;a[dd+5>>0]=a[hd+5>>0]|0;a[dd+6>>0]=a[hd+6>>0]|0;a[dd+7>>0]=a[hd+7>>0]|0;c[gd>>2]=d;c[fd>>2]=e;e=c[gd>>2]|0;c[ed>>2]=fd;d=c[c[ed>>2]>>2]|0;c[cd>>2]=dd;cd=c[cd>>2]|0;c[bd+0>>2]=c[cd+0>>2];c[bd+4>>2]=c[cd+4>>2];a[Zc+0>>0]=a[bd+0>>0]|0;a[Zc+1>>0]=a[bd+1>>0]|0;a[Zc+2>>0]=a[bd+2>>0]|0;a[Zc+3>>0]=a[bd+3>>0]|0;a[Zc+4>>0]=a[bd+4>>0]|0;a[Zc+5>>0]=a[bd+5>>0]|0;a[Zc+6>>0]=a[bd+6>>0]|0;a[Zc+7>>0]=a[bd+7>>0]|0;c[ad>>2]=e;c[$c>>2]=d;d=c[ad>>2]|0;c[_c>>2]=$c;c[d>>2]=c[c[_c>>2]>>2];d=d+4|0;c[Yc>>2]=Zc;e=c[Yc>>2]|0;c[d+0>>2]=c[e+0>>2];c[d+4>>2]=c[e+4>>2];Sc=c[Sc>>2]|0;c[Xc>>2]=M;c[Wc>>2]=c[Xc>>2];c[Vc>>2]=c[Wc>>2];c[Uc>>2]=(c[c[Vc>>2]>>2]|0)+16;d=c[Uc>>2]|0;e=c[Tc>>2]|0;c[Rc>>2]=Sc;c[Qc>>2]=d;c[Pc>>2]=e;e=c[Qc>>2]|0;if((e|0)!=0)c[e>>2]=c[c[Pc>>2]>>2];c[Oc>>2]=M;c[Nc>>2]=c[Oc>>2];c[Mc>>2]=c[Nc>>2];a[(c[Mc>>2]|0)+8>>0]=1;c[Lc>>2]=M;Dd=c[Lc>>2]|0;c[pb>>2]=Kc;c[fc>>2]=Dd;Dd=c[fc>>2]|0;c[qb>>2]=c[pb>>2];c[rb>>2]=Dd;c[c[qb>>2]>>2]=c[rb>>2];a[sb+0>>0]=a[Kc+0>>0]|0;a[sb+1>>0]=a[Kc+1>>0]|0;a[sb+2>>0]=a[Kc+2>>0]|0;a[sb+3>>0]=a[Kc+3>>0]|0;c[ub>>2]=tb;Dd=c[ub>>2]|0;a[vb+0>>0]=a[sb+0>>0]|0;a[vb+1>>0]=a[sb+1>>0]|0;a[vb+2>>0]=a[sb+2>>0]|0;a[vb+3>>0]=a[sb+3>>0]|0;c[wb>>2]=Dd;Dd=c[wb>>2]|0;c[xb>>2]=vb;c[yb>>2]=c[c[xb>>2]>>2];Ed=c[yb>>2]|0;c[zb>>2]=Ed;c[Ab>>2]=c[zb>>2];c[Bb>>2]=c[c[Ab>>2]>>2];c[Cb>>2]=Ed;c[Db>>2]=c[Cb>>2];c[c[Db>>2]>>2]=0;Ed=c[Bb>>2]|0;c[Eb>>2]=vb;c[Fb>>2]=c[c[Eb>>2]>>2];c[Gb>>2]=c[Fb>>2];c[Hb>>2]=c[Gb>>2];c[Ib>>2]=(c[Hb>>2]|0)+4;Cd=c[Ib>>2]|0;c[Jb+0>>2]=c[Cd+0>>2];c[Jb+4>>2]=c[Cd+4>>2];a[Kb+0>>0]=a[Jb+0>>0]|0;a[Kb+1>>0]=a[Jb+1>>0]|0;a[Kb+2>>0]=a[Jb+2>>0]|0;a[Kb+3>>0]=a[Jb+3>>0]|0;a[Kb+4>>0]=a[Jb+4>>0]|0;a[Kb+5>>0]=a[Jb+5>>0]|0;a[Kb+6>>0]=a[Jb+6>>0]|0;a[Kb+7>>0]=a[Jb+7>>0]|0;c[Lb>>2]=Dd;c[Mb>>2]=Ed;Ed=c[Lb>>2]|0;Dd=c[Mb>>2]|0;a[Nb+0>>0]=a[Kb+0>>0]|0;a[Nb+1>>0]=a[Kb+1>>0]|0;a[Nb+2>>0]=a[Kb+2>>0]|0;a[Nb+3>>0]=a[Kb+3>>0]|0;a[Nb+4>>0]=a[Kb+4>>0]|0;a[Nb+5>>0]=a[Kb+5>>0]|0;a[Nb+6>>0]=a[Kb+6>>0]|0;a[Nb+7>>0]=a[Kb+7>>0]|0;c[Ob>>2]=Ed;c[Pb>>2]=Dd;Dd=c[Ob>>2]|0;c[Qb>>2]=Pb;Ed=c[c[Qb>>2]>>2]|0;c[Rb>>2]=Nb;Cd=c[Rb>>2]|0;c[Sb+0>>2]=c[Cd+0>>2];c[Sb+4>>2]=c[Cd+4>>2];a[Tb+0>>0]=a[Sb+0>>0]|0;a[Tb+1>>0]=a[Sb+1>>0]|0;a[Tb+2>>0]=a[Sb+2>>0]|0;a[Tb+3>>0]=a[Sb+3>>0]|0;a[Tb+4>>0]=a[Sb+4>>0]|0;a[Tb+5>>0]=a[Sb+5>>0]|0;a[Tb+6>>0]=a[Sb+6>>0]|0;a[Tb+7>>0]=a[Sb+7>>0]|0;c[Ub>>2]=Dd;c[Vb>>2]=Ed;Ed=c[Ub>>2]|0;c[Wb>>2]=Vb;c[Ed>>2]=c[c[Wb>>2]>>2];Ed=Ed+4|0;c[Xb>>2]=Tb;Dd=c[Xb>>2]|0;c[Ed+0>>2]=c[Dd+0>>2];c[Ed+4>>2]=c[Dd+4>>2];c[Yb>>2]=tb;Ed=c[Yb>>2]|0;c[_b>>2]=Zb;c[$b>>2]=Ed;Ed=c[$b>>2]|0;c[ac>>2]=c[_b>>2];c[bc>>2]=Ed;c[c[ac>>2]>>2]=c[bc>>2];a[cc+0>>0]=a[Zb+0>>0]|0;a[cc+1>>0]=a[Zb+1>>0]|0;a[cc+2>>0]=a[Zb+2>>0]|0;a[cc+3>>0]=a[Zb+3>>0]|0;c[dc>>2]=Ha;Ed=c[dc>>2]|0;a[ec+0>>0]=a[cc+0>>0]|0;a[ec+1>>0]=a[cc+1>>0]|0;a[ec+2>>0]=a[cc+2>>0]|0;a[ec+3>>0]=a[cc+3>>0]|0;c[ob>>2]=Ed;Ed=c[ob>>2]|0;c[gc>>2]=ec;c[hc>>2]=c[c[gc>>2]>>2];ob=c[hc>>2]|0;c[ic>>2]=ob;c[jc>>2]=c[ic>>2];c[kc>>2]=c[c[jc>>2]>>2];c[lc>>2]=ob;c[mc>>2]=c[lc>>2];c[c[mc>>2]>>2]=0;ob=c[kc>>2]|0;c[nc>>2]=ec;c[oc>>2]=c[c[nc>>2]>>2];c[pc>>2]=c[oc>>2];c[qc>>2]=c[pc>>2];c[rc>>2]=(c[qc>>2]|0)+4;Dd=c[rc>>2]|0;c[sc+0>>2]=c[Dd+0>>2];c[sc+4>>2]=c[Dd+4>>2];a[tc+0>>0]=a[sc+0>>0]|0;a[tc+1>>0]=a[sc+1>>0]|0;a[tc+2>>0]=a[sc+2>>0]|0;a[tc+3>>0]=a[sc+3>>0]|0;a[tc+4>>0]=a[sc+4>>0]|0;a[tc+5>>0]=a[sc+5>>0]|0;a[tc+6>>0]=a[sc+6>>0]|0;a[tc+7>>0]=a[sc+7>>0]|0;c[uc>>2]=Ed;c[vc>>2]=ob;ob=c[uc>>2]|0;Ed=c[vc>>2]|0;a[wc+0>>0]=a[tc+0>>0]|0;a[wc+1>>0]=a[tc+1>>0]|0;a[wc+2>>0]=a[tc+2>>0]|0;a[wc+3>>0]=a[tc+3>>0]|0;a[wc+4>>0]=a[tc+4>>0]|0;a[wc+5>>0]=a[tc+5>>0]|0;a[wc+6>>0]=a[tc+6>>0]|0;a[wc+7>>0]=a[tc+7>>0]|0;c[xc>>2]=ob;c[yc>>2]=Ed;Ed=c[xc>>2]|0;c[zc>>2]=yc;ob=c[c[zc>>2]>>2]|0;c[Ac>>2]=wc;Dd=c[Ac>>2]|0;c[Bc+0>>2]=c[Dd+0>>2];c[Bc+4>>2]=c[Dd+4>>2];a[Cc+0>>0]=a[Bc+0>>0]|0;a[Cc+1>>0]=a[Bc+1>>0]|0;a[Cc+2>>0]=a[Bc+2>>0]|0;a[Cc+3>>0]=a[Bc+3>>0]|0;a[Cc+4>>0]=a[Bc+4>>0]|0;a[Cc+5>>0]=a[Bc+5>>0]|0;a[Cc+6>>0]=a[Bc+6>>0]|0;a[Cc+7>>0]=a[Bc+7>>0]|0;c[Dc>>2]=Ed;c[Ec>>2]=ob;ob=c[Dc>>2]|0;c[Fc>>2]=Ec;c[ob>>2]=c[c[Fc>>2]>>2];ob=ob+4|0;c[Gc>>2]=Cc;Ed=c[Gc>>2]|0;c[ob+0>>2]=c[Ed+0>>2];c[ob+4>>2]=c[Ed+4>>2];c[Hc>>2]=tb;c[Ic>>2]=c[Hc>>2];c[Jc>>2]=c[Ic>>2];c[nb>>2]=0;ob=c[Jc>>2]|0;c[mb>>2]=ob;c[lb>>2]=c[mb>>2];c[fb>>2]=c[c[lb>>2]>>2];Ed=c[nb>>2]|0;c[kb>>2]=ob;c[jb>>2]=c[kb>>2];c[c[jb>>2]>>2]=Ed;if((c[fb>>2]|0)!=0){c[hb>>2]=ob;c[ib>>2]=c[hb>>2];fb=c[fb>>2]|0;c[gb>>2]=(c[ib>>2]|0)+4;c[Ma>>2]=fb;fb=c[gb>>2]|0;if(a[fb+4>>0]&1){Ed=c[fb>>2]|0;c[Ta>>2]=(c[Ma>>2]|0)+16;Dd=c[Ta>>2]|0;c[Ua>>2]=Ed;c[Va>>2]=Dd;Dd=c[Ua>>2]|0;Ed=c[Va>>2]|0;a[Xa+0>>0]=a[Wa+0>>0]|0;c[Ya>>2]=Dd;c[Za>>2]=Ed}if((c[Ma>>2]|0)!=0){Dd=c[Ma>>2]|0;c[Na>>2]=c[fb>>2];c[Oa>>2]=Dd;c[Pa>>2]=1;Dd=c[Oa>>2]|0;Ed=c[Pa>>2]|0;c[Qa>>2]=c[Na>>2];c[Ra>>2]=Dd;c[Sa>>2]=Ed;Sw(c[Ra>>2]|0)}}c[Ia>>2]=Ha;Ed=c[Ia>>2]|0;c[Ka>>2]=Ja;c[La>>2]=Ed;Ed=c[La>>2]|0;c[_a>>2]=c[Ka>>2];c[$a>>2]=Ed;c[c[_a>>2]>>2]=c[$a>>2];a[ab+0>>0]=a[Ja+0>>0]|0;a[ab+1>>0]=a[Ja+1>>0]|0;a[ab+2>>0]=a[Ja+2>>0]|0;a[ab+3>>0]=a[Ja+3>>0]|0;c[bb>>2]=b;Ed=c[bb>>2]|0;a[cb+0>>0]=a[ab+0>>0]|0;a[cb+1>>0]=a[ab+1>>0]|0;a[cb+2>>0]=a[ab+2>>0]|0;a[cb+3>>0]=a[ab+3>>0]|0;c[db>>2]=Ed;Ed=c[db>>2]|0;c[ea>>2]=cb;c[fa>>2]=c[c[ea>>2]>>2];ea=c[fa>>2]|0;c[eb>>2]=ea;c[ga>>2]=c[eb>>2];c[ha>>2]=c[c[ga>>2]>>2];c[ia>>2]=ea;c[ja>>2]=c[ia>>2];c[c[ja>>2]>>2]=0;ea=c[ha>>2]|0;c[ka>>2]=cb;c[la>>2]=c[c[ka>>2]>>2];c[ma>>2]=c[la>>2];c[na>>2]=c[ma>>2];c[oa>>2]=(c[na>>2]|0)+4;Dd=c[oa>>2]|0;c[pa+0>>2]=c[Dd+0>>2];c[pa+4>>2]=c[Dd+4>>2];a[qa+0>>0]=a[pa+0>>0]|0;a[qa+1>>0]=a[pa+1>>0]|0;a[qa+2>>0]=a[pa+2>>0]|0;a[qa+3>>0]=a[pa+3>>0]|0;a[qa+4>>0]=a[pa+4>>0]|0;a[qa+5>>0]=a[pa+5>>0]|0;a[qa+6>>0]=a[pa+6>>0]|0;a[qa+7>>0]=a[pa+7>>0]|0;c[ra>>2]=Ed;c[sa>>2]=ea;ea=c[ra>>2]|0;Ed=c[sa>>2]|0;a[ta+0>>0]=a[qa+0>>0]|0;a[ta+1>>0]=a[qa+1>>0]|0;a[ta+2>>0]=a[qa+2>>0]|0;a[ta+3>>0]=a[qa+3>>0]|0;a[ta+4>>0]=a[qa+4>>0]|0;a[ta+5>>0]=a[qa+5>>0]|0;a[ta+6>>0]=a[qa+6>>0]|0;a[ta+7>>0]=a[qa+7>>0]|0;c[ua>>2]=ea;c[va>>2]=Ed;Ed=c[ua>>2]|0;c[wa>>2]=va;ea=c[c[wa>>2]>>2]|0;c[xa>>2]=ta;Dd=c[xa>>2]|0;c[ya+0>>2]=c[Dd+0>>2];c[ya+4>>2]=c[Dd+4>>2];a[za+0>>0]=a[ya+0>>0]|0;a[za+1>>0]=a[ya+1>>0]|0;a[za+2>>0]=a[ya+2>>0]|0;a[za+3>>0]=a[ya+3>>0]|0;a[za+4>>0]=a[ya+4>>0]|0;a[za+5>>0]=a[ya+5>>0]|0;a[za+6>>0]=a[ya+6>>0]|0;a[za+7>>0]=a[ya+7>>0]|0;c[Aa>>2]=Ed;c[Ba>>2]=ea;ea=c[Aa>>2]|0;c[Ca>>2]=Ba;c[ea>>2]=c[c[Ca>>2]>>2];ea=ea+4|0;c[Da>>2]=za;Ed=c[Da>>2]|0;c[ea+0>>2]=c[Ed+0>>2];c[ea+4>>2]=c[Ed+4>>2];c[Ea>>2]=Ha;c[Fa>>2]=c[Ea>>2];c[Ga>>2]=c[Fa>>2];c[$>>2]=0;ea=c[Ga>>2]|0;c[X>>2]=ea;c[Y>>2]=c[X>>2];c[ba>>2]=c[c[Y>>2]>>2];Ed=c[$>>2]|0;c[Z>>2]=ea;c[_>>2]=c[Z>>2];c[c[_>>2]>>2]=Ed;if((c[ba>>2]|0)!=0){c[da>>2]=ea;c[ca>>2]=c[da>>2];X=c[ba>>2]|0;c[aa>>2]=(c[ca>>2]|0)+4;c[G>>2]=X;X=c[aa>>2]|0;if(a[X+4>>0]&1){Ed=c[X>>2]|0;c[R>>2]=(c[G>>2]|0)+16;Dd=c[R>>2]|0;c[U>>2]=Ed;c[E>>2]=Dd;Dd=c[U>>2]|0;Ed=c[E>>2]|0;a[W+0>>0]=a[F+0>>0]|0;c[H>>2]=Dd;c[I>>2]=Ed}if((c[G>>2]|0)!=0){Dd=c[G>>2]|0;c[N>>2]=c[X>>2];c[J>>2]=Dd;c[K>>2]=1;Dd=c[J>>2]|0;Ed=c[K>>2]|0;c[O>>2]=c[N>>2];c[P>>2]=Dd;c[Q>>2]=Ed;Sw(c[P>>2]|0)}}c[L>>2]=1;c[V>>2]=M;c[T>>2]=c[V>>2];c[S>>2]=c[T>>2];c[C>>2]=0;E=c[S>>2]|0;c[B>>2]=E;c[A>>2]=c[B>>2];c[x>>2]=c[c[A>>2]>>2];Ed=c[C>>2]|0;c[z>>2]=E;c[v>>2]=c[z>>2];c[c[v>>2]>>2]=Ed;if((c[x>>2]|0)==0){i=n;return}c[D>>2]=E;c[w>>2]=c[D>>2];v=c[x>>2]|0;c[y>>2]=(c[w>>2]|0)+4;c[k>>2]=v;v=c[y>>2]|0;if(a[v+4>>0]&1){Ed=c[v>>2]|0;c[u>>2]=(c[k>>2]|0)+16;Dd=c[u>>2]|0;c[t>>2]=Ed;c[s>>2]=Dd;Dd=c[t>>2]|0;Ed=c[s>>2]|0;a[q+0>>0]=a[r+0>>0]|0;c[p>>2]=Dd;c[o>>2]=Ed}if((c[k>>2]|0)==0){i=n;return}Dd=c[k>>2]|0;c[m>>2]=c[v>>2];c[l>>2]=Dd;c[j>>2]=1;Dd=c[l>>2]|0;Ed=c[j>>2]|0;c[h>>2]=c[m>>2];c[g>>2]=Dd;c[f>>2]=Ed;Sw(c[g>>2]|0);i=n;return}function ue(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;n=i;i=i+144|0;C=n+68|0;D=n;E=n+108|0;B=n+132|0;x=n+20|0;u=n+24|0;v=n+32|0;w=n+36|0;t=n+40|0;r=n+104|0;q=n+112|0;l=n+120|0;f=n+128|0;g=n+136|0;o=n+140|0;p=n+72|0;m=n+80|0;h=n+84|0;j=n+88|0;H=n+92|0;I=n+12|0;J=n+4|0;G=n+8|0;K=n+100|0;z=n+48|0;k=n+52|0;y=n+116|0;F=n+60|0;A=n+124|0;s=n+16|0;c[K>>2]=a;c[z>>2]=b;c[k>>2]=d;c[y>>2]=e;e=c[K>>2]|0;c[I>>2]=G;c[J>>2]=-1;a=c[J>>2]|0;c[H>>2]=c[I>>2];c[n+96>>2]=a;c[c[H>>2]>>2]=0;c[F>>2]=c[G>>2];c[n+76>>2]=F;c[c[y>>2]>>2]=0;c[D>>2]=B;c[E>>2]=-1;a=c[E>>2]|0;c[C>>2]=c[D>>2];c[n+56>>2]=a;c[c[C>>2]>>2]=0;c[A>>2]=c[B>>2];c[n+64>>2]=A;c[(c[y>>2]|0)+4>>2]=0;c[(c[y>>2]|0)+8>>2]=c[z>>2];c[c[k>>2]>>2]=c[y>>2];c[x>>2]=e;a=c[c[c[x>>2]>>2]>>2]|0;c[v>>2]=t;c[w>>2]=-1;b=c[w>>2]|0;c[u>>2]=c[v>>2];c[n+28>>2]=b;c[c[u>>2]>>2]=0;c[s>>2]=c[t>>2];c[n+44>>2]=s;if((a|0)!=0){c[r>>2]=e;K=c[c[c[r>>2]>>2]>>2]|0;c[q>>2]=e;c[c[q>>2]>>2]=K}c[p>>2]=e;c[o>>2]=(c[p>>2]|0)+4;c[g>>2]=c[o>>2];c[f>>2]=c[g>>2];c[l>>2]=c[f>>2];_d(c[c[l>>2]>>2]|0,c[c[k>>2]>>2]|0);c[j>>2]=e;c[h>>2]=(c[j>>2]|0)+8;c[m>>2]=c[h>>2];K=c[m>>2]|0;c[K>>2]=(c[K>>2]|0)+1;i=n;return}function ve(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;we(c[f>>2]|0,c[e>>2]|0);i=d;return}function we(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;e=i;i=i+128|0;t=e+112|0;m=e+52|0;o=e+92|0;q=e+100|0;n=e+24|0;p=e+8|0;v=e+28|0;r=e+44|0;w=e+36|0;s=e+117|0;u=e+16|0;x=e+96|0;z=e+104|0;y=e;g=e+60|0;h=e+64|0;j=e+68|0;k=e+72|0;l=e+76|0;f=e+84|0;B=e+88|0;C=e+80|0;D=e+48|0;E=e+20|0;F=e+108|0;G=e+56|0;A=e+116|0;c[G>>2]=b;c[e+40>>2]=d;d=c[G>>2]|0;c[F>>2]=d+4;c[E>>2]=c[F>>2];c[D>>2]=c[E>>2];b=c[D>>2]|0;c[e+32>>2]=b;c[C>>2]=b;c[B>>2]=c[C>>2];c[c[B>>2]>>2]=0;b=d+8|0;a[y+0>>0]=a[A+0>>0]|0;c[x>>2]=b;c[z>>2]=0;x=c[x>>2]|0;b=c[z>>2]|0;a[u+0>>0]=a[y+0>>0]|0;c[r>>2]=x;c[w>>2]=b;r=c[r>>2]|0;c[v>>2]=w;b=c[c[v>>2]>>2]|0;c[t>>2]=u;a[p+0>>0]=a[s+0>>0]|0;c[q>>2]=r;c[n>>2]=b;b=c[q>>2]|0;c[o>>2]=p;c[m>>2]=n;c[b>>2]=c[c[m>>2]>>2];c[l>>2]=d;c[k>>2]=(c[l>>2]|0)+4;c[j>>2]=c[k>>2];c[h>>2]=c[j>>2];c[g>>2]=c[h>>2];b=c[g>>2]|0;c[f>>2]=d;c[c[f>>2]>>2]=b;i=e;return}function xe(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0.0;M=i;i=i+2400|0;k=M+2324|0;l=M+2364|0;ra=M+2272|0;ga=M+2356|0;qa=M+2264|0;na=M+2332|0;oa=M+2328|0;ma=M+2136|0;ja=M+2388|0;ka=M+2380|0;fa=M+2393|0;R=M+2348|0;T=M+2268|0;U=M+2280|0;r=M+2276|0;Q=M+2204|0;P=M+2208|0;O=M+2212|0;X=M+2216|0;W=M+2220|0;V=M+2224|0;_=M+2228|0;S=M+2232|0;H=M+2236|0;G=M+2240|0;J=M+2244|0;I=M+2248|0;j=M+2252|0;L=M+2256|0;N=M+2260|0;z=M+2352|0;y=M+2360|0;B=M+2368|0;A=M+2376|0;E=M+2384|0;D=M+2284|0;F=M+2288|0;ha=M+2292|0;ia=M+2296|0;m=M+2300|0;n=M+2304|0;p=M+2308|0;o=M+2312|0;s=M+2316|0;q=M+2320|0;u=M+8|0;w=M+24|0;x=M;pa=M+2336|0;ea=M+2340|0;sa=M+2200|0;da=M+2192|0;$=M+2184|0;t=M+2188|0;ta=M+2196|0;ca=M+2394|0;Z=M+2144|0;ba=M+2128|0;la=M+16|0;aa=M+32|0;Y=M+2176|0;K=M+2344|0;C=M+2372|0;v=M+2392|0;c[ea>>2]=b;c[sa>>2]=d;c[da>>2]=e;c[$>>2]=f;c[t>>2]=g;if((c[da>>2]|0)==(c[$>>2]|0)){i=M;return}if((c[$>>2]|0)<(c[da>>2]|0)){c[ta>>2]=c[$>>2];c[$>>2]=c[da>>2];c[da>>2]=c[ta>>2]}a[ca>>0]=0;c[Z+0>>2]=0;c[Z+4>>2]=0;c[Z+8>>2]=0;c[Z+12>>2]=0;c[Z+16>>2]=0;c[Z+20>>2]=0;c[Z+24>>2]=0;c[Z+28>>2]=0;c[Z>>2]=c[da>>2];c[Z+4>>2]=c[$>>2];a[Z+8>>0]=1;h[Z+24>>3]=+De(c[(c[sa>>2]|0)+(c[da>>2]<<2)>>2]|0,c[(c[sa>>2]|0)+(c[$>>2]<<2)>>2]|0)*.5;g=Z+24|0;h[g>>3]=+h[g>>3]- +h[(c[ea>>2]|0)+((c[da>>2]|0)*2096|0)+2088>>3];g=Z+24|0;h[g>>3]=+h[g>>3]- +h[(c[ea>>2]|0)+((c[$>>2]|0)*2096|0)+2088>>3];g=(c[ea>>2]|0)+((c[$>>2]|0)*2096|0)|0;do if((c[(c[ea>>2]|0)+((c[da>>2]|0)*2096|0)+2080>>2]|0)!=0){if((c[g+2080>>2]|0)==0){h[Z+16>>3]=+h[(c[ea>>2]|0)+((c[da>>2]|0)*2096|0)+2088>>3];a[ca>>0]=1;break}c[pa>>2]=c[t>>2];b=c[pa>>2]|0;if((c[b>>2]|0)==(c[b+4>>2]|0))ua=1.0e+99;else{h[la>>3]=0.0;c[ha>>2]=c[t>>2];c[ia>>2]=0;b=(c[c[ha>>2]>>2]|0)+(c[ia>>2]<<5)+24|0;c[ja>>2]=la;c[ka>>2]=b;b=c[ja>>2]|0;d=c[ka>>2]|0;a[ma+0>>0]=a[fa+0>>0]|0;c[na>>2]=b;c[oa>>2]=d;d=c[na>>2]|0;b=c[oa>>2]|0;c[ra>>2]=ma;c[ga>>2]=d;c[qa>>2]=b;ua=+h[(+h[c[ga>>2]>>3]<+h[c[qa>>2]>>3]?c[oa>>2]|0:c[na>>2]|0)>>3]}h[ba>>3]=ua;By(aa|0,(c[ea>>2]|0)+((c[da>>2]|0)*2096|0)|0,2096)|0;ke(aa,(c[ea>>2]|0)+((c[$>>2]|0)*2096|0)|0);h[Y>>3]=+Md(aa);if(+h[Y>>3]<+h[ba>>3]- +h[Z+24>>3]){h[Z+16>>3]=+h[Y>>3];a[ca>>0]=1}}else{h[Z+16>>3]=+h[g+2088>>3];a[ca>>0]=1}while(0);if(!(a[ca>>0]&1)){i=M;return}Y=Z+24|0;h[Y>>3]=+h[Y>>3]+ +h[Z+16>>3];c[_>>2]=c[t>>2];c[S>>2]=Z;Y=c[_>>2]|0;b=c[Y+4>>2]|0;c[V>>2]=Y;c[W>>2]=(c[V>>2]|0)+8;c[X>>2]=c[W>>2];if((b|0)!=(c[c[X>>2]>>2]|0)){c[O>>2]=Y;c[P>>2]=(c[O>>2]|0)+8;c[Q>>2]=c[P>>2];d=c[Q>>2]|0;c[R>>2]=c[Y+4>>2];b=c[R>>2]|0;O=c[S>>2]|0;c[T>>2]=d;c[U>>2]=b;c[r>>2]=O;O=c[U>>2]|0;if((O|0)!=0){b=c[r>>2]|0;c[O+0>>2]=c[b+0>>2];c[O+4>>2]=c[b+4>>2];c[O+8>>2]=c[b+8>>2];c[O+12>>2]=c[b+12>>2];c[O+16>>2]=c[b+16>>2];c[O+20>>2]=c[b+20>>2];c[O+24>>2]=c[b+24>>2];c[O+28>>2]=c[b+28>>2]}b=Y+4|0;c[b>>2]=(c[b>>2]|0)+32}else Fe(Y,c[S>>2]|0);c[N>>2]=c[t>>2];b=c[N>>2]|0;d=c[b>>2]|0;c[j>>2]=b;c[L>>2]=d;d=c[L>>2]|0;c[J>>2]=K;c[I>>2]=d;d=c[I>>2]|0;c[H>>2]=c[J>>2];c[G>>2]=d;c[c[H>>2]>>2]=c[G>>2];c[F>>2]=c[t>>2];d=c[F>>2]|0;b=c[d+4>>2]|0;c[E>>2]=d;c[D>>2]=b;b=c[D>>2]|0;c[B>>2]=C;c[A>>2]=b;b=c[A>>2]|0;c[z>>2]=c[B>>2];c[y>>2]=b;c[c[z>>2]>>2]=c[y>>2];a[x+0>>0]=a[K+0>>0]|0;a[x+1>>0]=a[K+1>>0]|0;a[x+2>>0]=a[K+2>>0]|0;a[x+3>>0]=a[K+3>>0]|0;a[w+0>>0]=a[C+0>>0]|0;a[w+1>>0]=a[C+1>>0]|0;a[w+2>>0]=a[C+2>>0]|0;a[w+3>>0]=a[C+3>>0]|0;a[u+0>>0]=a[v+0>>0]|0;c[s+0>>2]=c[x+0>>2];c[q+0>>2]=c[w+0>>2];c[p>>2]=w;c[o>>2]=x;c[n>>2]=c[p>>2];b=c[c[n>>2]>>2]|0;c[m>>2]=c[o>>2];b=(b-(c[c[m>>2]>>2]|0)|0)/32|0;c[l+0>>2]=c[s+0>>2];c[k+0>>2]=c[q+0>>2];Ee(l,k,u,b);i=M;return}function ye(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;ze(c[d>>2]|0);i=b;return}function ze(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Ae(c[d>>2]|0);i=b;return}function Ae(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=i;i=i+144|0;w=d+48|0;B=d+8|0;C=d+84|0;A=d;x=d+16|0;y=d+4|0;z=d+132|0;v=d+80|0;u=d+44|0;t=d+20|0;E=d+24|0;e=d+28|0;D=d+32|0;g=d+36|0;f=d+40|0;s=d+76|0;l=d+124|0;k=d+128|0;j=d+52|0;h=d+56|0;p=d+64|0;q=d+68|0;r=d+92|0;m=d+96|0;n=d+100|0;o=d+104|0;I=d+108|0;K=d+116|0;J=d+120|0;H=d+88|0;F=d+72|0;G=d+12|0;c[F>>2]=b;b=c[F>>2]|0;F=c[b>>2]|0;c[K>>2]=H;c[J>>2]=-1;J=c[J>>2]|0;c[I>>2]=c[K>>2];c[d+112>>2]=J;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[d+60>>2]=G;if((F|0)==0){i=d;return}c[D>>2]=b;K=c[D>>2]|0;D=c[K>>2]|0;c[E>>2]=K;c[e>>2]=D;D=c[E>>2]|0;while(1){if((c[e>>2]|0)==(c[D+4>>2]|0))break;c[t>>2]=D;c[u>>2]=(c[t>>2]|0)+8;c[v>>2]=c[u>>2];K=c[v>>2]|0;I=D+4|0;J=(c[I>>2]|0)+ -32|0;c[I>>2]=J;c[w>>2]=J;J=c[w>>2]|0;c[x>>2]=K;c[y>>2]=J;J=c[x>>2]|0;K=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=J;c[C>>2]=K}c[s>>2]=b;c[f>>2]=(c[s>>2]|0)+8;c[g>>2]=c[f>>2];I=c[g>>2]|0;K=c[b>>2]|0;c[h>>2]=b;J=c[h>>2]|0;c[j>>2]=J;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];J=((c[c[l>>2]>>2]|0)-(c[J>>2]|0)|0)/32|0;c[m>>2]=I;c[n>>2]=K;c[o>>2]=J;J=c[n>>2]|0;K=c[o>>2]|0;c[p>>2]=c[m>>2];c[q>>2]=J;c[r>>2]=K;Sw(c[q>>2]|0);i=d;return}function Be(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;C=i;i=i+224|0;K=C+116|0;I=C+112|0;J=C+48|0;T=C+32|0;G=C+200|0;H=C+128|0;B=C+104|0;Y=C+52|0;D=C+56|0;y=C+60|0;z=C+64|0;v=C+68|0;w=C+72|0;l=C+76|0;r=C+80|0;s=C+36|0;o=C+88|0;p=C+92|0;m=C+172|0;n=C+180|0;t=C+188|0;R=C+196|0;S=C+204|0;O=C+208|0;P=C+120|0;M=C+124|0;N=C+192|0;F=C+132|0;k=C+136|0;L=C+140|0;_=C+144|0;g=C+148|0;W=C+152|0;X=C+156|0;U=C+160|0;V=C+164|0;h=C+44|0;A=C+40|0;E=C+168|0;Z=C+96|0;u=C+108|0;j=C+84|0;Q=C+100|0;b=C;x=C+184|0;q=C+176|0;c[h>>2]=d;c[A>>2]=e;if((c[A>>2]|0)<=1){i=C;return}c[E>>2]=0;c[Z+0>>2]=c[a+0>>2];c[u>>2]=2;d=c[u>>2]|0;c[U>>2]=a;c[V>>2]=d;U=c[U>>2]|0;c[j+0>>2]=c[U+0>>2];V=c[V>>2]|0;c[W>>2]=j;c[X>>2]=V;W=c[W>>2]|0;c[W>>2]=(c[W>>2]|0)+(c[X>>2]<<5);if((c[u>>2]|0)!=(c[A>>2]|0)){W=c[h>>2]|0;c[L>>2]=j;X=c[c[L>>2]>>2]|0;c[M>>2]=j;c[N>>2]=1;V=0-(c[N>>2]|0)|0;c[O>>2]=c[M>>2];c[P>>2]=V;V=c[O>>2]|0;c[Q+0>>2]=c[V+0>>2];V=c[P>>2]|0;c[R>>2]=Q;c[S>>2]=V;V=c[R>>2]|0;c[V>>2]=(c[V>>2]|0)+(c[S>>2]<<5);c[T>>2]=Q;if(Ce(W,X,c[c[T>>2]>>2]|0)|0)f=4}else f=4;if((f|0)==4){c[u>>2]=(c[u>>2]|0)+ -1;c[K>>2]=j;X=c[K>>2]|0;c[X>>2]=(c[X>>2]|0)+ -32}W=c[h>>2]|0;c[I>>2]=Z;X=c[c[I>>2]>>2]|0;c[J>>2]=j;if(!(Ce(W,X,c[c[J>>2]>>2]|0)|0)){i=C;return}c[G>>2]=Z;c[H>>2]=c[c[G>>2]>>2];X=c[H>>2]|0;c[b+0>>2]=c[X+0>>2];c[b+4>>2]=c[X+4>>2];c[b+8>>2]=c[X+8>>2];c[b+12>>2]=c[X+12>>2];c[b+16>>2]=c[X+16>>2];c[b+20>>2]=c[X+20>>2];c[b+24>>2]=c[X+24>>2];c[b+28>>2]=c[X+28>>2];do{c[B>>2]=Z;X=c[c[B>>2]>>2]|0;c[Y>>2]=j;c[D>>2]=c[c[Y>>2]>>2];W=c[D>>2]|0;c[X+0>>2]=c[W+0>>2];c[X+4>>2]=c[W+4>>2];c[X+8>>2]=c[W+8>>2];c[X+12>>2]=c[W+12>>2];c[X+16>>2]=c[W+16>>2];c[X+20>>2]=c[W+20>>2];c[X+24>>2]=c[W+24>>2];c[X+28>>2]=c[W+28>>2];c[Z+0>>2]=c[j+0>>2];c[E>>2]=c[u>>2];c[u>>2]=(c[E>>2]|0)+1<<1;if((c[u>>2]|0)>(c[A>>2]|0))break;X=c[u>>2]|0;c[v>>2]=a;c[w>>2]=X;X=c[v>>2]|0;c[x+0>>2]=c[X+0>>2];X=c[w>>2]|0;c[y>>2]=x;c[z>>2]=X;X=c[y>>2]|0;c[X>>2]=(c[X>>2]|0)+(c[z>>2]<<5);c[j+0>>2]=c[x+0>>2];if((c[u>>2]|0)!=(c[A>>2]|0)){W=c[h>>2]|0;c[l>>2]=j;X=c[c[l>>2]>>2]|0;c[m>>2]=j;c[n>>2]=1;V=0-(c[n>>2]|0)|0;c[o>>2]=c[m>>2];c[p>>2]=V;V=c[o>>2]|0;c[q+0>>2]=c[V+0>>2];V=c[p>>2]|0;c[r>>2]=q;c[s>>2]=V;V=c[r>>2]|0;c[V>>2]=(c[V>>2]|0)+(c[s>>2]<<5);c[t>>2]=q;if(Ce(W,X,c[c[t>>2]>>2]|0)|0)f=10}else f=10;if((f|0)==10){f=0;c[u>>2]=(c[u>>2]|0)+ -1;c[F>>2]=j;X=c[F>>2]|0;c[X>>2]=(c[X>>2]|0)+ -32}X=c[h>>2]|0;c[k>>2]=j}while(Ce(X,b,c[c[k>>2]>>2]|0)|0);c[_>>2]=Z;_=c[c[_>>2]>>2]|0;c[g>>2]=b;Z=c[g>>2]|0;c[_+0>>2]=c[Z+0>>2];c[_+4>>2]=c[Z+4>>2];c[_+8>>2]=c[Z+8>>2];c[_+12>>2]=c[Z+12>>2];c[_+16>>2]=c[Z+16>>2];c[_+20>>2]=c[Z+20>>2];c[_+24>>2]=c[Z+24>>2];c[_+28>>2]=c[Z+28>>2];i=C;return}function Ce(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,j=0,k=0;f=i;i=i+16|0;g=f+12|0;k=f+4|0;j=f;c[f+8>>2]=b;c[k>>2]=d;c[j>>2]=e;e=c[k>>2]|0;if(+h[(c[k>>2]|0)+24>>3]!=+h[(c[j>>2]|0)+24>>3]){a[g>>0]=+h[e+24>>3]>+h[(c[j>>2]|0)+24>>3]&1;b=a[g>>0]|0;b=b&1;i=f;return b|0}else{b=S((c[e>>2]|0)-(c[(c[k>>2]|0)+4>>2]|0)|0)|0;a[g>>0]=(b|0)>(S((c[c[j>>2]>>2]|0)-(c[(c[j>>2]|0)+4>>2]|0)|0)|0)&1;b=a[g>>0]|0;b=b&1;i=f;return b|0}return 0}function De(a,b){a=a|0;b=b|0;var d=0.0,e=0,f=0,g=0.0,h=0,j=0;e=i;i=i+16|0;j=e+8|0;h=e+4|0;f=e;c[j>>2]=a;c[h>>2]=b;c[f>>2]=(c[j>>2]|0)+(c[h>>2]|0);d=+(c[j>>2]|0);d=d*+Me(c[j>>2]|0);g=+(c[h>>2]|0);g=d+g*+Me(c[h>>2]|0);d=+(c[f>>2]|0);d=g-d*+Me(c[f>>2]|0);i=e;return+d}function Ee(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;t=i;i=i+128|0;E=t+72|0;D=t+32|0;w=t+44|0;x=t+68|0;f=t+84|0;u=t+88|0;v=t+48|0;o=t+52|0;p=t+56|0;l=t+60|0;m=t+64|0;s=t+116|0;C=t+120|0;g=t+76|0;j=t+80|0;A=t+36|0;B=t+92|0;y=t+96|0;z=t+100|0;r=t+104|0;k=t+108|0;q=t+112|0;h=t;n=t+40|0;c[r>>2]=d;c[k>>2]=e;if((c[k>>2]|0)<=1){i=t;return}c[k>>2]=((c[k>>2]|0)-2|0)/2|0;e=c[k>>2]|0;c[y>>2]=a;c[z>>2]=e;e=c[y>>2]|0;c[q+0>>2]=c[e+0>>2];e=c[z>>2]|0;c[A>>2]=q;c[B>>2]=e;e=c[A>>2]|0;c[e>>2]=(c[e>>2]|0)+(c[B>>2]<<5);e=c[r>>2]|0;c[C>>2]=q;d=c[c[C>>2]>>2]|0;c[D>>2]=b;D=c[D>>2]|0;c[D>>2]=(c[D>>2]|0)+ -32;c[E>>2]=D;if(!(Ce(e,d,c[c[E>>2]>>2]|0)|0)){i=t;return}c[w>>2]=b;c[x>>2]=c[c[w>>2]>>2];d=c[x>>2]|0;c[h+0>>2]=c[d+0>>2];c[h+4>>2]=c[d+4>>2];c[h+8>>2]=c[d+8>>2];c[h+12>>2]=c[d+12>>2];c[h+16>>2]=c[d+16>>2];c[h+20>>2]=c[d+20>>2];c[h+24>>2]=c[d+24>>2];c[h+28>>2]=c[d+28>>2];do{c[f>>2]=b;d=c[c[f>>2]>>2]|0;c[u>>2]=q;c[v>>2]=c[c[u>>2]>>2];e=c[v>>2]|0;c[d+0>>2]=c[e+0>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];c[d+16>>2]=c[e+16>>2];c[d+20>>2]=c[e+20>>2];c[d+24>>2]=c[e+24>>2];c[d+28>>2]=c[e+28>>2];c[b+0>>2]=c[q+0>>2];if((c[k>>2]|0)==0)break;c[k>>2]=((c[k>>2]|0)-1|0)/2|0;d=c[k>>2]|0;c[l>>2]=a;c[m>>2]=d;d=c[l>>2]|0;c[n+0>>2]=c[d+0>>2];d=c[m>>2]|0;c[o>>2]=n;c[p>>2]=d;d=c[o>>2]|0;c[d>>2]=(c[d>>2]|0)+(c[p>>2]<<5);c[q+0>>2]=c[n+0>>2];d=c[r>>2]|0;c[s>>2]=q}while(Ce(d,c[c[s>>2]>>2]|0,h)|0);c[g>>2]=b;d=c[c[g>>2]>>2]|0;c[j>>2]=h;e=c[j>>2]|0;c[d+0>>2]=c[e+0>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];c[d+16>>2]=c[e+16>>2];c[d+20>>2]=c[e+20>>2];c[d+24>>2]=c[e+24>>2];c[d+28>>2]=c[e+28>>2];i=t;return}function Fe(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;f=i;i=i+160|0;n=f+56|0;g=f+44|0;l=f+108|0;j=f+132|0;s=f+16|0;y=f+8|0;z=f+28|0;w=f+32|0;x=f+36|0;v=f;h=f+96|0;u=f+104|0;E=f+136|0;D=f+140|0;C=f+144|0;B=f+68|0;A=f+72|0;t=f+76|0;F=f+80|0;m=f+84|0;p=f+12|0;q=f+4|0;r=f+40|0;G=f+24|0;H=f+88|0;I=f+92|0;J=f+48|0;K=f+100|0;k=f+52|0;o=f+60|0;e=f+112|0;c[K>>2]=b;c[k>>2]=d;b=c[K>>2]|0;c[J>>2]=b;c[I>>2]=(c[J>>2]|0)+8;c[H>>2]=c[I>>2];c[o>>2]=c[H>>2];c[G>>2]=b;d=c[G>>2]|0;d=(((c[d+4>>2]|0)-(c[d>>2]|0)|0)/32|0)+1|0;c[F>>2]=b;c[m>>2]=d;d=c[F>>2]|0;c[p>>2]=Ke(d)|0;if((c[m>>2]|0)>>>0>(c[p>>2]|0)>>>0)ht(d);c[A>>2]=d;c[B>>2]=c[A>>2];K=c[B>>2]|0;c[C>>2]=K;c[D>>2]=(c[C>>2]|0)+8;c[E>>2]=c[D>>2];c[q>>2]=((c[c[E>>2]>>2]|0)-(c[K>>2]|0)|0)/32|0;if((c[q>>2]|0)>>>0>=(((c[p>>2]|0)>>>0)/2|0)>>>0)c[t>>2]=c[p>>2];else{c[r>>2]=c[q>>2]<<1;c[h>>2]=r;c[u>>2]=m;K=c[h>>2]|0;J=c[u>>2]|0;a[v+0>>0]=a[f+148>>0]|0;c[w>>2]=K;c[x>>2]=J;J=c[w>>2]|0;K=c[x>>2]|0;c[f+20>>2]=v;c[y>>2]=J;c[z>>2]=K;c[t>>2]=c[((c[c[y>>2]>>2]|0)>>>0<(c[c[z>>2]>>2]|0)>>>0?c[x>>2]|0:c[w>>2]|0)>>2]}K=c[t>>2]|0;c[s>>2]=b;J=c[s>>2]|0;Ge(e,K,((c[J+4>>2]|0)-(c[J>>2]|0)|0)/32|0,c[o>>2]|0);J=c[o>>2]|0;c[j>>2]=c[e+8>>2];K=c[j>>2]|0;c[l>>2]=c[k>>2];h=c[l>>2]|0;c[f+64>>2]=J;c[n>>2]=K;c[g>>2]=h;h=c[n>>2]|0;if((h|0)==0){K=e+8|0;J=c[K>>2]|0;J=J+32|0;c[K>>2]=J;He(b,e);Ie(e);i=f;return}K=c[g>>2]|0;c[h+0>>2]=c[K+0>>2];c[h+4>>2]=c[K+4>>2];c[h+8>>2]=c[K+8>>2];c[h+12>>2]=c[K+12>>2];c[h+16>>2]=c[K+16>>2];c[h+20>>2]=c[K+20>>2];c[h+24>>2]=c[K+24>>2];c[h+28>>2]=c[K+28>>2];K=e+8|0;J=c[K>>2]|0;J=J+32|0;c[K>>2]=J;He(b,e);Ie(e);i=f;return}function Ge(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;k=f+12|0;j=f+8|0;h=f+4|0;g=f;c[k>>2]=a;c[j>>2]=b;c[h>>2]=d;c[g>>2]=e;Le(c[k>>2]|0,c[j>>2]|0,c[h>>2]|0,c[g>>2]|0);i=f;return}function He(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=i;i=i+144|0;F=d+108|0;H=d+8|0;G=d+56|0;E=d+64|0;C=d+16|0;z=d+20|0;D=d+24|0;B=d+28|0;y=d+32|0;A=d+36|0;w=d+40|0;t=d+44|0;x=d+104|0;v=d+112|0;s=d+120|0;u=d+128|0;m=d+136|0;q=d+68|0;r=d+72|0;n=d+76|0;o=d+80|0;p=d+84|0;k=d+88|0;g=d+92|0;l=d+12|0;j=d+4|0;f=d;h=d+96|0;K=d+100|0;J=d+52|0;I=d+116|0;L=d+60|0;e=d+124|0;c[L>>2]=a;c[e>>2]=b;a=c[L>>2]|0;c[I>>2]=a;c[J>>2]=(c[I>>2]|0)+8;c[K>>2]=c[J>>2];J=c[a>>2]|0;I=c[a+4>>2]|0;b=(c[e>>2]|0)+4|0;c[d+132>>2]=c[K>>2];c[F>>2]=J;c[H>>2]=I;c[G>>2]=b;c[E>>2]=((c[H>>2]|0)-(c[F>>2]|0)|0)/32|0;b=c[G>>2]|0;c[b>>2]=(c[b>>2]|0)+(0-(c[E>>2]|0)<<5);By(c[c[G>>2]>>2]|0,c[F>>2]|0,c[E>>2]<<5|0)|0;b=(c[e>>2]|0)+4|0;c[B>>2]=a;c[y>>2]=b;c[D>>2]=c[B>>2];c[A>>2]=c[c[D>>2]>>2];c[C>>2]=c[y>>2];c[c[B>>2]>>2]=c[c[C>>2]>>2];c[z>>2]=A;c[c[y>>2]>>2]=c[c[z>>2]>>2];b=(c[e>>2]|0)+8|0;c[v>>2]=a+4;c[s>>2]=b;c[x>>2]=c[v>>2];c[u>>2]=c[c[x>>2]>>2];c[w>>2]=c[s>>2];c[c[v>>2]>>2]=c[c[w>>2]>>2];c[t>>2]=u;c[c[s>>2]>>2]=c[c[t>>2]>>2];c[r>>2]=a;c[q>>2]=(c[r>>2]|0)+8;c[m>>2]=c[q>>2];m=c[m>>2]|0;c[p>>2]=c[e>>2];c[o>>2]=(c[p>>2]|0)+12;c[n>>2]=c[o>>2];b=c[n>>2]|0;c[j>>2]=m;c[f>>2]=b;c[l>>2]=c[j>>2];c[h>>2]=c[c[l>>2]>>2];c[k>>2]=c[f>>2];c[c[j>>2]>>2]=c[c[k>>2]>>2];c[g>>2]=h;c[c[f>>2]>>2]=c[c[g>>2]>>2];c[c[e>>2]>>2]=c[(c[e>>2]|0)+4>>2];c[d+48>>2]=a;i=d;return}function Ie(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Je(c[d>>2]|0);i=b;return}function Je(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;r=i;i=i+128|0;l=r+32|0;k=r+52|0;j=r+12|0;h=r+104|0;g=r+16|0;f=r+20|0;q=r+24|0;p=r+60|0;d=r+28|0;e=r+36|0;m=r+40|0;n=r+44|0;o=r+48|0;w=r+108|0;B=r+112|0;C=r+116|0;A=r;x=r+68|0;y=r+72|0;z=r+120|0;v=r+80|0;u=r+88|0;t=r+92|0;E=r+96|0;s=r+100|0;G=r+8|0;F=r+64|0;I=r+84|0;H=r+121|0;J=r+56|0;D=r+76|0;c[D>>2]=b;D=c[D>>2]|0;c[J>>2]=D;J=c[J>>2]|0;b=c[J+4>>2]|0;c[F>>2]=J;c[I>>2]=b;F=c[F>>2]|0;b=c[I>>2]|0;a[G+0>>0]=a[H+0>>0]|0;c[E>>2]=F;c[s>>2]=b;b=c[E>>2]|0;while(1){if((c[s>>2]|0)==(c[b+8>>2]|0))break;c[t>>2]=b;c[u>>2]=(c[t>>2]|0)+12;c[v>>2]=c[u>>2];J=c[(c[v>>2]|0)+4>>2]|0;H=b+8|0;I=(c[H>>2]|0)+ -32|0;c[H>>2]=I;c[w>>2]=I;I=c[w>>2]|0;c[x>>2]=J;c[y>>2]=I;I=c[x>>2]|0;J=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=I;c[C>>2]=J}if((c[D>>2]|0)==0){i=r;return}c[q>>2]=D;c[f>>2]=(c[q>>2]|0)+12;c[g>>2]=c[f>>2];H=c[(c[g>>2]|0)+4>>2]|0;J=c[D>>2]|0;c[h>>2]=D;I=c[h>>2]|0;c[j>>2]=I;c[k>>2]=(c[j>>2]|0)+12;c[l>>2]=c[k>>2];I=((c[c[l>>2]>>2]|0)-(c[I>>2]|0)|0)/32|0;c[m>>2]=H;c[n>>2]=J;c[o>>2]=I;I=c[n>>2]|0;J=c[o>>2]|0;c[p>>2]=c[m>>2];c[d>>2]=I;c[e>>2]=J;Sw(c[d>>2]|0);i=r;return}function Ke(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+80|0;q=h+44|0;r=h+12|0;s=h+8|0;u=h+16|0;t=h+76|0;k=h+20|0;g=h+24|0;f=h+28|0;d=h+68|0;e=h+36|0;l=h;n=h+48|0;j=h+52|0;m=h+77|0;v=h+60|0;w=h+64|0;x=h+40|0;y=h+32|0;p=h+56|0;o=h+72|0;c[y>>2]=b;c[x>>2]=c[y>>2];c[w>>2]=(c[x>>2]|0)+8;c[v>>2]=c[w>>2];c[u>>2]=c[v>>2];b=c[u>>2]|0;a[s+0>>0]=a[t+0>>0]|0;c[r>>2]=b;c[q>>2]=c[r>>2];c[p>>2]=134217727;c[o>>2]=4294967295/2|0;c[n>>2]=p;c[j>>2]=o;b=c[n>>2]|0;j=c[j>>2]|0;a[l+0>>0]=a[m+0>>0]|0;c[d>>2]=b;c[e>>2]=j;j=c[e>>2]|0;b=c[d>>2]|0;c[k>>2]=l;c[g>>2]=j;c[f>>2]=b;i=h;return c[((c[c[g>>2]>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0?c[e>>2]|0:c[d>>2]|0)>>2]|0}function Le(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;q=i;i=i+176|0;C=q+80|0;x=q+76|0;z=q+4|0;B=q+148|0;A=q+156|0;y=q+72|0;E=q+20|0;G=q+24|0;F=q+28|0;D=q+32|0;H=q+36|0;J=q+40|0;I=q+44|0;p=q+48|0;g=q+52|0;r=q+56|0;m=q+144|0;n=q+160|0;f=q+164|0;u=q+84|0;v=q+92|0;w=q+96|0;t=q+100|0;o=q+108|0;h=q+112|0;j=q+116|0;N=q+120|0;O=q+124|0;P=q+60|0;M=q+16|0;Q=q+64|0;k=q+132|0;l=q+68|0;K=q+140|0;L=q;s=q+8|0;c[Q>>2]=a;c[k>>2]=b;c[l>>2]=d;c[K>>2]=e;e=c[Q>>2]|0;c[O>>2]=M;c[P>>2]=-1;b=c[P>>2]|0;c[N>>2]=c[O>>2];c[q+12>>2]=b;c[c[N>>2]>>2]=0;c[L>>2]=c[M>>2];c[q+128>>2]=L;b=c[K>>2]|0;c[H>>2]=e+12;c[J>>2]=0;c[I>>2]=b;b=c[J>>2]|0;d=c[I>>2]|0;c[G>>2]=c[H>>2];c[F>>2]=b;c[D>>2]=d;d=c[G>>2]|0;c[E>>2]=F;b=c[c[E>>2]>>2]|0;c[C>>2]=c[D>>2];a=c[C>>2]|0;c[B>>2]=d;c[A>>2]=b;c[y>>2]=a;a=c[B>>2]|0;c[z>>2]=A;c[a>>2]=c[c[z>>2]>>2];c[x>>2]=c[y>>2];c[a+4>>2]=c[x>>2];if((c[k>>2]|0)!=0){c[r>>2]=e;c[g>>2]=(c[r>>2]|0)+12;c[p>>2]=c[g>>2];Q=c[k>>2]|0;c[n>>2]=c[(c[p>>2]|0)+4>>2];c[f>>2]=Q;Q=c[f>>2]|0;c[q+136>>2]=c[n>>2];c[m>>2]=Q;c[q+152>>2]=0;Q=Qw(c[m>>2]<<5)|0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P<<5)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P<<5)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}else{c[v>>2]=t;c[w>>2]=-1;Q=c[w>>2]|0;c[u>>2]=c[v>>2];c[q+88>>2]=Q;c[c[u>>2]>>2]=0;c[s>>2]=c[t>>2];c[q+104>>2]=s;Q=0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P<<5)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P<<5)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}}function Me(a){a=a|0;var b=0,d=0,e=0,f=0.0;b=i;i=i+16|0;d=b;e=b+8|0;c[e>>2]=a;a=c[e>>2]|0;if((c[e>>2]|0)<256){h[d>>3]=+g[200+(a<<2)>>2];f=+h[d>>3];i=b;return+f}else{h[d>>3]=+Fa(+(+(a|0)));f=+h[d>>3];i=b;return+f}return 0.0}function Ne(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;f=i;i=i+192|0;N=f+88|0;P=f+84|0;Q=f+80|0;R=f+164|0;S=f+172|0;D=f+156|0;E=f+20|0;F=f+24|0;G=f+28|0;H=f+32|0;I=f+36|0;J=f+40|0;K=f+44|0;L=f+48|0;M=f+52|0;z=f+56|0;y=f+60|0;A=f+64|0;B=f+144|0;w=f+152|0;x=f+160|0;g=f+168|0;u=f+176|0;t=f+92|0;s=f+96|0;q=f+100|0;r=f+104|0;o=f+108|0;e=f+112|0;n=f+116|0;m=f+120|0;l=f+124|0;k=f+128|0;j=f+132|0;h=f+136|0;T=f+16|0;U=f+12|0;V=f+140|0;W=f+68|0;X=f;Y=f+8|0;O=f+72|0;v=f+148|0;p=f+4|0;C=f+76|0;c[O>>2]=b;c[v>>2]=d;d=c[O>>2]|0;O=c[v>>2]|0;c[Y>>2]=d;c[X>>2]=c[Y>>2];c[W>>2]=(c[X>>2]|0)+4;c[V>>2]=c[W>>2];c[U>>2]=c[V>>2];c[T>>2]=c[U>>2];b=c[c[T>>2]>>2]|0;c[S>>2]=d;c[R>>2]=(c[S>>2]|0)+4;c[Q>>2]=c[R>>2];c[P>>2]=c[Q>>2];c[N>>2]=c[P>>2];Oe(p,d,O,b,c[N>>2]|0);c[M>>2]=d;c[L>>2]=c[M>>2];c[K>>2]=(c[L>>2]|0)+4;c[J>>2]=c[K>>2];c[I>>2]=c[J>>2];c[H>>2]=c[I>>2];b=c[H>>2]|0;c[F>>2]=C;c[G>>2]=b;b=c[G>>2]|0;c[D>>2]=c[F>>2];c[E>>2]=b;c[c[D>>2]>>2]=c[E>>2];c[A>>2]=p;c[B>>2]=C;b=c[B>>2]|0;c[z>>2]=c[A>>2];c[y>>2]=b;if((c[c[z>>2]>>2]|0)==(c[c[y>>2]>>2]|0)^1?(c[g>>2]=d,c[x>>2]=(c[g>>2]|0)+8,c[w>>2]=c[x>>2],W=c[w>>2]|0,X=c[v>>2]|0,c[u>>2]=p,Y=(c[c[u>>2]>>2]|0)+16|0,c[f+180>>2]=W,c[t>>2]=X,c[s>>2]=Y,(c[c[t>>2]>>2]|0)>=(c[c[s>>2]>>2]|0)):0){c[a+0>>2]=c[p+0>>2];i=f;return}c[h>>2]=d;c[j>>2]=c[h>>2];c[k>>2]=(c[j>>2]|0)+4;c[l>>2]=c[k>>2];c[m>>2]=c[l>>2];c[n>>2]=c[m>>2];Y=c[n>>2]|0;c[o>>2]=a;c[e>>2]=Y;Y=c[e>>2]|0;c[q>>2]=c[o>>2];c[r>>2]=Y;c[c[q>>2]>>2]=c[r>>2];i=f;return}function Oe(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;m=i;i=i+96|0;n=m+76|0;q=m+48|0;p=m+36|0;o=m+24|0;t=m+68|0;g=m+8|0;v=m+12|0;k=m+56|0;l=m+64|0;h=m+72|0;j=m+80|0;z=m+28|0;A=m+32|0;x=m+40|0;y=m+44|0;w=m;C=m+52|0;s=m+16|0;r=m+60|0;u=m+4|0;B=m+20|0;c[C>>2]=b;c[s>>2]=d;c[r>>2]=e;c[u>>2]=f;f=c[C>>2]|0;while(1){C=c[r>>2]|0;c[x>>2]=w;c[y>>2]=-1;b=c[y>>2]|0;c[z>>2]=c[x>>2];c[A>>2]=b;c[c[z>>2]>>2]=0;c[B>>2]=c[w>>2];c[n>>2]=B;if((C|0)==0)break;c[o>>2]=f;c[p>>2]=(c[o>>2]|0)+8;c[q>>2]=c[p>>2];C=(c[r>>2]|0)+16|0;e=c[s>>2]|0;c[t>>2]=c[q>>2];c[g>>2]=C;c[v>>2]=e;e=c[r>>2]|0;if((c[c[g>>2]>>2]|0)<(c[c[v>>2]>>2]|0)){c[r>>2]=c[e+4>>2];continue}else{c[u>>2]=e;c[r>>2]=c[c[r>>2]>>2];continue}}C=c[u>>2]|0;c[h>>2]=a;c[j>>2]=C;C=c[j>>2]|0;c[k>>2]=c[h>>2];c[l>>2]=C;c[c[k>>2]>>2]=c[l>>2];i=m;return}function Pe(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;u=i;i=i+144|0;l=u+16|0;j=u+8|0;f=u+108|0;g=u+24|0;q=u+104|0;n=u+112|0;h=u+116|0;m=u+120|0;o=u;p=u+96|0;k=u+124|0;r=u+100|0;s=u+12|0;t=u+4|0;c[l>>2]=b;c[j>>2]=e;c[f>>2]=1;b=g+0|0;e=b+72|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(e|0));c[q>>2]=0;c[n>>2]=8;c[h>>2]=0;a:while(1){if((c[h>>2]|0)>=(c[j>>2]|0))break;c[m>>2]=d[(c[l>>2]|0)+(c[h>>2]|0)>>0];if((c[m>>2]|0)>(c[f>>2]|0))c[f>>2]=c[m>>2];c[o>>2]=1;c[p>>2]=(c[h>>2]|0)+1;while(1){if((c[p>>2]|0)<(c[j>>2]|0))b=(d[(c[l>>2]|0)+(c[p>>2]|0)>>0]|0|0)==(c[m>>2]|0);else b=0;e=c[o>>2]|0;if(!b)break;c[o>>2]=e+1;c[p>>2]=(c[p>>2]|0)+1}c[h>>2]=(c[h>>2]|0)+e;if((c[h>>2]|0)==(c[j>>2]|0)?(c[m>>2]|0)==0:0)break;if((c[m>>2]|0)==0){e=c[o>>2]|0;if((c[o>>2]|0)<3){c[g>>2]=(c[g>>2]|0)+e;continue}c[o>>2]=e-2;while(1){if((c[o>>2]|0)<=0)continue a;b=g+68|0;c[b>>2]=(c[b>>2]|0)+1;c[o>>2]=c[o>>2]>>3}}c[q>>2]=c[h>>2];if((c[m>>2]|0)!=(c[n>>2]|0)){b=g+(c[m>>2]<<2)|0;c[b>>2]=(c[b>>2]|0)+1;c[o>>2]=(c[o>>2]|0)+ -1}c[n>>2]=c[m>>2];e=c[o>>2]|0;if((c[o>>2]|0)<3){b=g+(c[m>>2]<<2)|0;c[b>>2]=(c[b>>2]|0)+e;continue}c[o>>2]=e-2;while(1){if((c[o>>2]|0)<=0)continue a;b=g+64|0;c[b>>2]=(c[b>>2]|0)+1;c[o>>2]=c[o>>2]>>2}}b=k+0|0;e=b+18|0;do{a[b>>0]=0;b=b+1|0}while((b|0)<(e|0));Wk(g,18,7,k);b=k+16|0;a[b>>0]=(d[b>>0]|0)+2;b=k+17|0;a[b>>0]=(d[b>>0]|0)+3;c[r>>2]=0;c[s>>2]=18+(c[f>>2]<<1);c[t>>2]=0;while(1){if((c[t>>2]|0)>=18)break;b=da(c[g+(c[t>>2]<<2)>>2]|0,d[k+(c[t>>2]|0)>>0]|0)|0;c[s>>2]=(c[s>>2]|0)+b;c[r>>2]=(c[r>>2]|0)+(c[g+(c[t>>2]<<2)>>2]|0);c[t>>2]=(c[t>>2]|0)+1}i=u;return c[s>>2]|0}function Qe(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;t=i;i=i+144|0;h=t+76|0;u=t+60|0;v=t+124|0;e=t+116|0;f=t+16|0;r=t;o=t+8|0;q=t+28|0;A=t+52|0;z=t+104|0;y=t+112|0;x=t+120|0;w=t+128|0;g=t+132|0;F=t+136|0;p=t+80|0;l=t+84|0;m=t+88|0;n=t+92|0;E=t+12|0;D=t+24|0;C=t+96|0;B=t+4|0;G=t+64|0;H=t+56|0;I=t+100|0;J=t+108|0;s=t+20|0;k=t+72|0;j=t+32|0;c[J>>2]=b;c[s>>2]=d;d=c[J>>2]|0;c[I>>2]=d;c[H>>2]=(c[I>>2]|0)+8;c[G>>2]=c[H>>2];if((((c[c[G>>2]>>2]|0)-(c[d+4>>2]|0)|0)/4|0)>>>0>=(c[s>>2]|0)>>>0){Re(d,c[s>>2]|0);i=t;return}c[B>>2]=d;c[C>>2]=(c[B>>2]|0)+8;c[D>>2]=c[C>>2];c[k>>2]=c[D>>2];c[E>>2]=d;B=c[E>>2]|0;B=(((c[B+4>>2]|0)-(c[B>>2]|0)|0)/4|0)+(c[s>>2]|0)|0;c[F>>2]=d;c[p>>2]=B;B=c[F>>2]|0;c[l>>2]=Xe(B)|0;if((c[p>>2]|0)>>>0>(c[l>>2]|0)>>>0)ht(B);c[w>>2]=B;c[x>>2]=c[w>>2];J=c[x>>2]|0;c[y>>2]=J;c[z>>2]=(c[y>>2]|0)+8;c[A>>2]=c[z>>2];c[m>>2]=((c[c[A>>2]>>2]|0)-(c[J>>2]|0)|0)/4|0;if((c[m>>2]|0)>>>0>=(((c[l>>2]|0)>>>0)/2|0)>>>0)c[g>>2]=c[l>>2];else{c[n>>2]=c[m>>2]<<1;c[o>>2]=n;c[q>>2]=p;J=c[o>>2]|0;I=c[q>>2]|0;a[r+0>>0]=a[t+140>>0]|0;c[e>>2]=J;c[f>>2]=I;I=c[e>>2]|0;J=c[f>>2]|0;c[t+68>>2]=r;c[u>>2]=I;c[v>>2]=J;c[g>>2]=c[((c[c[u>>2]>>2]|0)>>>0<(c[c[v>>2]>>2]|0)>>>0?c[f>>2]|0:c[e>>2]|0)>>2]}I=c[g>>2]|0;c[h>>2]=d;J=c[h>>2]|0;Se(j,I,((c[J+4>>2]|0)-(c[J>>2]|0)|0)/4|0,c[k>>2]|0);Te(j,c[s>>2]|0);Ue(d,j);Ve(j);i=t;return}function Re(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;g=d+28|0;h=d+16|0;j=d+4|0;k=d+8|0;l=d+32|0;m=d;n=d+12|0;e=d+24|0;f=d+20|0;c[n>>2]=a;c[e>>2]=b;a=c[n>>2]|0;c[m>>2]=a;c[l>>2]=(c[m>>2]|0)+8;c[k>>2]=c[l>>2];c[f>>2]=c[k>>2];do{n=c[f>>2]|0;c[g>>2]=c[a+4>>2];b=c[g>>2]|0;c[h>>2]=n;c[j>>2]=b;b=c[j>>2]|0;if((b|0)!=0)c[b>>2]=0;n=a+4|0;c[n>>2]=(c[n>>2]|0)+4;c[e>>2]=(c[e>>2]|0)+ -1}while((c[e>>2]|0)>>>0>0);i=d;return}function Se(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;k=f+12|0;j=f+8|0;h=f+4|0;g=f;c[k>>2]=a;c[j>>2]=b;c[h>>2]=d;c[g>>2]=e;Ye(c[k>>2]|0,c[j>>2]|0,c[h>>2]|0,c[g>>2]|0);i=f;return}function Te(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;g=d+28|0;h=d+16|0;j=d+4|0;k=d+8|0;l=d+32|0;m=d;n=d+12|0;e=d+24|0;f=d+20|0;c[n>>2]=a;c[e>>2]=b;a=c[n>>2]|0;c[m>>2]=a;c[l>>2]=(c[m>>2]|0)+12;c[k>>2]=c[l>>2];c[f>>2]=c[(c[k>>2]|0)+4>>2];do{n=c[f>>2]|0;c[g>>2]=c[a+8>>2];b=c[g>>2]|0;c[h>>2]=n;c[j>>2]=b;b=c[j>>2]|0;if((b|0)!=0)c[b>>2]=0;n=a+8|0;c[n>>2]=(c[n>>2]|0)+4;c[e>>2]=(c[e>>2]|0)+ -1}while((c[e>>2]|0)>>>0>0);i=d;return}



function Ue(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=i;i=i+144|0;F=d+108|0;H=d+8|0;G=d+56|0;E=d+64|0;C=d+16|0;z=d+20|0;D=d+24|0;B=d+28|0;y=d+32|0;A=d+36|0;w=d+40|0;t=d+44|0;x=d+104|0;v=d+112|0;s=d+120|0;u=d+128|0;m=d+136|0;q=d+68|0;r=d+72|0;n=d+76|0;o=d+80|0;p=d+84|0;k=d+88|0;g=d+92|0;l=d+12|0;j=d+4|0;f=d;h=d+96|0;K=d+100|0;J=d+52|0;I=d+116|0;L=d+60|0;e=d+124|0;c[L>>2]=a;c[e>>2]=b;a=c[L>>2]|0;c[I>>2]=a;c[J>>2]=(c[I>>2]|0)+8;c[K>>2]=c[J>>2];J=c[a>>2]|0;I=c[a+4>>2]|0;b=(c[e>>2]|0)+4|0;c[d+132>>2]=c[K>>2];c[F>>2]=J;c[H>>2]=I;c[G>>2]=b;c[E>>2]=((c[H>>2]|0)-(c[F>>2]|0)|0)/4|0;b=c[G>>2]|0;c[b>>2]=(c[b>>2]|0)+(0-(c[E>>2]|0)<<2);By(c[c[G>>2]>>2]|0,c[F>>2]|0,c[E>>2]<<2|0)|0;b=(c[e>>2]|0)+4|0;c[B>>2]=a;c[y>>2]=b;c[D>>2]=c[B>>2];c[A>>2]=c[c[D>>2]>>2];c[C>>2]=c[y>>2];c[c[B>>2]>>2]=c[c[C>>2]>>2];c[z>>2]=A;c[c[y>>2]>>2]=c[c[z>>2]>>2];b=(c[e>>2]|0)+8|0;c[v>>2]=a+4;c[s>>2]=b;c[x>>2]=c[v>>2];c[u>>2]=c[c[x>>2]>>2];c[w>>2]=c[s>>2];c[c[v>>2]>>2]=c[c[w>>2]>>2];c[t>>2]=u;c[c[s>>2]>>2]=c[c[t>>2]>>2];c[r>>2]=a;c[q>>2]=(c[r>>2]|0)+8;c[m>>2]=c[q>>2];m=c[m>>2]|0;c[p>>2]=c[e>>2];c[o>>2]=(c[p>>2]|0)+12;c[n>>2]=c[o>>2];b=c[n>>2]|0;c[j>>2]=m;c[f>>2]=b;c[l>>2]=c[j>>2];c[h>>2]=c[c[l>>2]>>2];c[k>>2]=c[f>>2];c[c[j>>2]>>2]=c[c[k>>2]>>2];c[g>>2]=h;c[c[f>>2]>>2]=c[c[g>>2]>>2];c[c[e>>2]>>2]=c[(c[e>>2]|0)+4>>2];c[d+48>>2]=a;i=d;return}function Ve(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;We(c[d>>2]|0);i=b;return}function We(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;r=i;i=i+128|0;l=r+32|0;k=r+52|0;j=r+12|0;h=r+104|0;g=r+16|0;f=r+20|0;q=r+24|0;p=r+60|0;d=r+28|0;e=r+36|0;m=r+40|0;n=r+44|0;o=r+48|0;w=r+108|0;B=r+112|0;C=r+116|0;A=r;x=r+68|0;y=r+72|0;z=r+120|0;v=r+80|0;u=r+88|0;t=r+92|0;E=r+96|0;s=r+100|0;G=r+8|0;F=r+64|0;I=r+84|0;H=r+121|0;J=r+56|0;D=r+76|0;c[D>>2]=b;D=c[D>>2]|0;c[J>>2]=D;J=c[J>>2]|0;b=c[J+4>>2]|0;c[F>>2]=J;c[I>>2]=b;F=c[F>>2]|0;b=c[I>>2]|0;a[G+0>>0]=a[H+0>>0]|0;c[E>>2]=F;c[s>>2]=b;b=c[E>>2]|0;while(1){if((c[s>>2]|0)==(c[b+8>>2]|0))break;c[t>>2]=b;c[u>>2]=(c[t>>2]|0)+12;c[v>>2]=c[u>>2];J=c[(c[v>>2]|0)+4>>2]|0;H=b+8|0;I=(c[H>>2]|0)+ -4|0;c[H>>2]=I;c[w>>2]=I;I=c[w>>2]|0;c[x>>2]=J;c[y>>2]=I;I=c[x>>2]|0;J=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=I;c[C>>2]=J}if((c[D>>2]|0)==0){i=r;return}c[q>>2]=D;c[f>>2]=(c[q>>2]|0)+12;c[g>>2]=c[f>>2];H=c[(c[g>>2]|0)+4>>2]|0;J=c[D>>2]|0;c[h>>2]=D;I=c[h>>2]|0;c[j>>2]=I;c[k>>2]=(c[j>>2]|0)+12;c[l>>2]=c[k>>2];I=((c[c[l>>2]>>2]|0)-(c[I>>2]|0)|0)/4|0;c[m>>2]=H;c[n>>2]=J;c[o>>2]=I;I=c[n>>2]|0;J=c[o>>2]|0;c[p>>2]=c[m>>2];c[d>>2]=I;c[e>>2]=J;Sw(c[d>>2]|0);i=r;return}function Xe(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+80|0;q=h+44|0;r=h+12|0;s=h+8|0;u=h+16|0;t=h+76|0;k=h+20|0;g=h+24|0;f=h+28|0;d=h+68|0;e=h+36|0;l=h;n=h+48|0;j=h+52|0;m=h+77|0;v=h+60|0;w=h+64|0;x=h+40|0;y=h+32|0;p=h+56|0;o=h+72|0;c[y>>2]=b;c[x>>2]=c[y>>2];c[w>>2]=(c[x>>2]|0)+8;c[v>>2]=c[w>>2];c[u>>2]=c[v>>2];b=c[u>>2]|0;a[s+0>>0]=a[t+0>>0]|0;c[r>>2]=b;c[q>>2]=c[r>>2];c[p>>2]=1073741823;c[o>>2]=4294967295/2|0;c[n>>2]=p;c[j>>2]=o;b=c[n>>2]|0;j=c[j>>2]|0;a[l+0>>0]=a[m+0>>0]|0;c[d>>2]=b;c[e>>2]=j;j=c[e>>2]|0;b=c[d>>2]|0;c[k>>2]=l;c[g>>2]=j;c[f>>2]=b;i=h;return c[((c[c[g>>2]>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0?c[e>>2]|0:c[d>>2]|0)>>2]|0}function Ye(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;q=i;i=i+176|0;C=q+80|0;x=q+76|0;z=q+4|0;B=q+148|0;A=q+156|0;y=q+72|0;E=q+20|0;G=q+24|0;F=q+28|0;D=q+32|0;H=q+36|0;J=q+40|0;I=q+44|0;p=q+48|0;g=q+52|0;r=q+56|0;m=q+144|0;n=q+160|0;f=q+164|0;u=q+84|0;v=q+92|0;w=q+96|0;t=q+100|0;o=q+108|0;h=q+112|0;j=q+116|0;N=q+120|0;O=q+124|0;P=q+60|0;M=q+16|0;Q=q+64|0;k=q+132|0;l=q+68|0;K=q+140|0;L=q;s=q+8|0;c[Q>>2]=a;c[k>>2]=b;c[l>>2]=d;c[K>>2]=e;e=c[Q>>2]|0;c[O>>2]=M;c[P>>2]=-1;b=c[P>>2]|0;c[N>>2]=c[O>>2];c[q+12>>2]=b;c[c[N>>2]>>2]=0;c[L>>2]=c[M>>2];c[q+128>>2]=L;b=c[K>>2]|0;c[H>>2]=e+12;c[J>>2]=0;c[I>>2]=b;b=c[J>>2]|0;d=c[I>>2]|0;c[G>>2]=c[H>>2];c[F>>2]=b;c[D>>2]=d;d=c[G>>2]|0;c[E>>2]=F;b=c[c[E>>2]>>2]|0;c[C>>2]=c[D>>2];a=c[C>>2]|0;c[B>>2]=d;c[A>>2]=b;c[y>>2]=a;a=c[B>>2]|0;c[z>>2]=A;c[a>>2]=c[c[z>>2]>>2];c[x>>2]=c[y>>2];c[a+4>>2]=c[x>>2];if((c[k>>2]|0)!=0){c[r>>2]=e;c[g>>2]=(c[r>>2]|0)+12;c[p>>2]=c[g>>2];Q=c[k>>2]|0;c[n>>2]=c[(c[p>>2]|0)+4>>2];c[f>>2]=Q;Q=c[f>>2]|0;c[q+136>>2]=c[n>>2];c[m>>2]=Q;c[q+152>>2]=0;Q=Qw(c[m>>2]<<2)|0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P<<2)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P<<2)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}else{c[v>>2]=t;c[w>>2]=-1;Q=c[w>>2]|0;c[u>>2]=c[v>>2];c[q+88>>2]=Q;c[c[u>>2]>>2]=0;c[s>>2]=c[t>>2];c[q+104>>2]=s;Q=0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P<<2)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P<<2)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}}function Ze(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;t=i;i=i+144|0;h=t+60|0;u=t+48|0;v=t+124|0;e=t+116|0;f=t+8|0;r=t;o=t+84|0;q=t+52|0;A=t+40|0;z=t+104|0;y=t+112|0;x=t+120|0;w=t+128|0;g=t+132|0;F=t+136|0;p=t+64|0;l=t+68|0;m=t+72|0;n=t+76|0;E=t+16|0;D=t+88|0;C=t+96|0;B=t+4|0;G=t+92|0;H=t+44|0;I=t+100|0;J=t+108|0;s=t+12|0;k=t+80|0;j=t+20|0;c[J>>2]=b;c[s>>2]=d;d=c[J>>2]|0;c[I>>2]=d;c[H>>2]=(c[I>>2]|0)+8;c[G>>2]=c[H>>2];if((((c[c[G>>2]>>2]|0)-(c[d+4>>2]|0)|0)/2096|0)>>>0>=(c[s>>2]|0)>>>0){_e(d,c[s>>2]|0);i=t;return}c[B>>2]=d;c[C>>2]=(c[B>>2]|0)+8;c[D>>2]=c[C>>2];c[k>>2]=c[D>>2];c[E>>2]=d;B=c[E>>2]|0;B=(((c[B+4>>2]|0)-(c[B>>2]|0)|0)/2096|0)+(c[s>>2]|0)|0;c[F>>2]=d;c[p>>2]=B;B=c[F>>2]|0;c[l>>2]=ie(B)|0;if((c[p>>2]|0)>>>0>(c[l>>2]|0)>>>0)ht(B);c[w>>2]=B;c[x>>2]=c[w>>2];J=c[x>>2]|0;c[y>>2]=J;c[z>>2]=(c[y>>2]|0)+8;c[A>>2]=c[z>>2];c[m>>2]=((c[c[A>>2]>>2]|0)-(c[J>>2]|0)|0)/2096|0;if((c[m>>2]|0)>>>0>=(((c[l>>2]|0)>>>0)/2|0)>>>0)c[g>>2]=c[l>>2];else{c[n>>2]=c[m>>2]<<1;c[o>>2]=n;c[q>>2]=p;J=c[o>>2]|0;I=c[q>>2]|0;a[r+0>>0]=a[t+140>>0]|0;c[e>>2]=J;c[f>>2]=I;I=c[e>>2]|0;J=c[f>>2]|0;c[t+56>>2]=r;c[u>>2]=I;c[v>>2]=J;c[g>>2]=c[((c[c[u>>2]>>2]|0)>>>0<(c[c[v>>2]>>2]|0)>>>0?c[f>>2]|0:c[e>>2]|0)>>2]}I=c[g>>2]|0;c[h>>2]=d;J=c[h>>2]|0;$e(j,I,((c[J+4>>2]|0)-(c[J>>2]|0)|0)/2096|0,c[k>>2]|0);af(j,c[s>>2]|0);bf(d,j);cf(j);i=t;return}function _e(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;g=d+28|0;h=d+16|0;j=d+4|0;k=d+8|0;l=d+32|0;m=d;n=d+12|0;e=d+24|0;f=d+20|0;c[n>>2]=a;c[e>>2]=b;a=c[n>>2]|0;c[m>>2]=a;c[l>>2]=(c[m>>2]|0)+8;c[k>>2]=c[l>>2];c[f>>2]=c[k>>2];do{n=c[f>>2]|0;c[g>>2]=c[a+4>>2];b=c[g>>2]|0;c[h>>2]=n;c[j>>2]=b;b=c[j>>2]|0;if((b|0)!=0)Cd(b);n=a+4|0;c[n>>2]=(c[n>>2]|0)+2096;c[e>>2]=(c[e>>2]|0)+ -1}while((c[e>>2]|0)>>>0>0);i=d;return}function $e(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;k=f+12|0;j=f+8|0;h=f+4|0;g=f;c[k>>2]=a;c[j>>2]=b;c[h>>2]=d;c[g>>2]=e;ef(c[k>>2]|0,c[j>>2]|0,c[h>>2]|0,c[g>>2]|0);i=f;return}function af(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;g=d+28|0;h=d+16|0;j=d+4|0;k=d+8|0;l=d+32|0;m=d;n=d+12|0;e=d+24|0;f=d+20|0;c[n>>2]=a;c[e>>2]=b;a=c[n>>2]|0;c[m>>2]=a;c[l>>2]=(c[m>>2]|0)+12;c[k>>2]=c[l>>2];c[f>>2]=c[(c[k>>2]|0)+4>>2];do{n=c[f>>2]|0;c[g>>2]=c[a+8>>2];b=c[g>>2]|0;c[h>>2]=n;c[j>>2]=b;b=c[j>>2]|0;if((b|0)!=0)Cd(b);n=a+8|0;c[n>>2]=(c[n>>2]|0)+2096;c[e>>2]=(c[e>>2]|0)+ -1}while((c[e>>2]|0)>>>0>0);i=d;return}function bf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=i;i=i+144|0;F=d+108|0;H=d+88|0;G=d+80|0;E=d+48|0;C=d+8|0;z=d+12|0;D=d+84|0;B=d+16|0;y=d+20|0;A=d+24|0;w=d+28|0;t=d+32|0;x=d+104|0;v=d+112|0;s=d+120|0;u=d+128|0;m=d+136|0;q=d+52|0;r=d+56|0;n=d+60|0;o=d+64|0;p=d+68|0;k=d+72|0;g=d+76|0;l=d+4|0;j=d;f=d+92|0;h=d+96|0;K=d+100|0;J=d+40|0;I=d+116|0;L=d+44|0;e=d+124|0;c[L>>2]=a;c[e>>2]=b;a=c[L>>2]|0;c[I>>2]=a;c[J>>2]=(c[I>>2]|0)+8;c[K>>2]=c[J>>2];J=c[a>>2]|0;I=c[a+4>>2]|0;b=(c[e>>2]|0)+4|0;c[d+132>>2]=c[K>>2];c[F>>2]=J;c[H>>2]=I;c[G>>2]=b;c[E>>2]=((c[H>>2]|0)-(c[F>>2]|0)|0)/2096|0;b=c[G>>2]|0;c[b>>2]=(c[b>>2]|0)+((0-(c[E>>2]|0)|0)*2096|0);By(c[c[G>>2]>>2]|0,c[F>>2]|0,(c[E>>2]|0)*2096|0)|0;b=(c[e>>2]|0)+4|0;c[B>>2]=a;c[y>>2]=b;c[D>>2]=c[B>>2];c[A>>2]=c[c[D>>2]>>2];c[C>>2]=c[y>>2];c[c[B>>2]>>2]=c[c[C>>2]>>2];c[z>>2]=A;c[c[y>>2]>>2]=c[c[z>>2]>>2];b=(c[e>>2]|0)+8|0;c[v>>2]=a+4;c[s>>2]=b;c[x>>2]=c[v>>2];c[u>>2]=c[c[x>>2]>>2];c[w>>2]=c[s>>2];c[c[v>>2]>>2]=c[c[w>>2]>>2];c[t>>2]=u;c[c[s>>2]>>2]=c[c[t>>2]>>2];c[r>>2]=a;c[q>>2]=(c[r>>2]|0)+8;c[m>>2]=c[q>>2];m=c[m>>2]|0;c[p>>2]=c[e>>2];c[o>>2]=(c[p>>2]|0)+12;c[n>>2]=c[o>>2];b=c[n>>2]|0;c[j>>2]=m;c[f>>2]=b;c[l>>2]=c[j>>2];c[h>>2]=c[c[l>>2]>>2];c[k>>2]=c[f>>2];c[c[j>>2]>>2]=c[c[k>>2]>>2];c[g>>2]=h;c[c[f>>2]>>2]=c[c[g>>2]>>2];c[c[e>>2]>>2]=c[(c[e>>2]|0)+4>>2];c[d+36>>2]=a;i=d;return}function cf(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;df(c[d>>2]|0);i=b;return}function df(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;r=i;i=i+128|0;l=r+72|0;k=r+44|0;j=r+12|0;h=r+104|0;g=r+24|0;f=r+16|0;q=r+20|0;p=r+76|0;d=r+52|0;e=r+28|0;m=r+32|0;n=r+36|0;o=r+40|0;w=r+108|0;B=r+112|0;C=r+116|0;A=r;x=r+56|0;y=r+60|0;z=r+120|0;v=r+68|0;u=r+88|0;t=r+92|0;E=r+96|0;s=r+100|0;G=r+8|0;F=r+80|0;I=r+84|0;H=r+121|0;J=r+48|0;D=r+64|0;c[D>>2]=b;D=c[D>>2]|0;c[J>>2]=D;J=c[J>>2]|0;b=c[J+4>>2]|0;c[F>>2]=J;c[I>>2]=b;F=c[F>>2]|0;b=c[I>>2]|0;a[G+0>>0]=a[H+0>>0]|0;c[E>>2]=F;c[s>>2]=b;b=c[E>>2]|0;while(1){if((c[s>>2]|0)==(c[b+8>>2]|0))break;c[t>>2]=b;c[u>>2]=(c[t>>2]|0)+12;c[v>>2]=c[u>>2];J=c[(c[v>>2]|0)+4>>2]|0;H=b+8|0;I=(c[H>>2]|0)+ -2096|0;c[H>>2]=I;c[w>>2]=I;I=c[w>>2]|0;c[x>>2]=J;c[y>>2]=I;I=c[x>>2]|0;J=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=I;c[C>>2]=J}if((c[D>>2]|0)==0){i=r;return}c[q>>2]=D;c[f>>2]=(c[q>>2]|0)+12;c[g>>2]=c[f>>2];H=c[(c[g>>2]|0)+4>>2]|0;J=c[D>>2]|0;c[h>>2]=D;I=c[h>>2]|0;c[j>>2]=I;c[k>>2]=(c[j>>2]|0)+12;c[l>>2]=c[k>>2];I=((c[c[l>>2]>>2]|0)-(c[I>>2]|0)|0)/2096|0;c[m>>2]=H;c[n>>2]=J;c[o>>2]=I;I=c[n>>2]|0;J=c[o>>2]|0;c[p>>2]=c[m>>2];c[d>>2]=I;c[e>>2]=J;Sw(c[d>>2]|0);i=r;return}function ef(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;q=i;i=i+176|0;C=q+64|0;x=q+60|0;z=q;B=q+148|0;A=q+156|0;y=q+56|0;E=q+12|0;G=q+112|0;F=q+16|0;D=q+20|0;H=q+24|0;J=q+28|0;I=q+32|0;p=q+36|0;g=q+40|0;r=q+108|0;m=q+144|0;n=q+160|0;f=q+164|0;u=q+68|0;v=q+76|0;w=q+80|0;t=q+84|0;o=q+92|0;h=q+96|0;j=q+100|0;N=q+104|0;O=q+124|0;P=q+44|0;M=q+8|0;Q=q+48|0;k=q+132|0;l=q+52|0;K=q+140|0;L=q+120|0;s=q+116|0;c[Q>>2]=a;c[k>>2]=b;c[l>>2]=d;c[K>>2]=e;e=c[Q>>2]|0;c[O>>2]=M;c[P>>2]=-1;b=c[P>>2]|0;c[N>>2]=c[O>>2];c[q+4>>2]=b;c[c[N>>2]>>2]=0;c[L>>2]=c[M>>2];c[q+128>>2]=L;b=c[K>>2]|0;c[H>>2]=e+12;c[J>>2]=0;c[I>>2]=b;b=c[J>>2]|0;d=c[I>>2]|0;c[G>>2]=c[H>>2];c[F>>2]=b;c[D>>2]=d;d=c[G>>2]|0;c[E>>2]=F;b=c[c[E>>2]>>2]|0;c[C>>2]=c[D>>2];a=c[C>>2]|0;c[B>>2]=d;c[A>>2]=b;c[y>>2]=a;a=c[B>>2]|0;c[z>>2]=A;c[a>>2]=c[c[z>>2]>>2];c[x>>2]=c[y>>2];c[a+4>>2]=c[x>>2];if((c[k>>2]|0)!=0){c[r>>2]=e;c[g>>2]=(c[r>>2]|0)+12;c[p>>2]=c[g>>2];Q=c[k>>2]|0;c[n>>2]=c[(c[p>>2]|0)+4>>2];c[f>>2]=Q;Q=c[f>>2]|0;c[q+136>>2]=c[n>>2];c[m>>2]=Q;c[q+152>>2]=0;Q=Qw((c[m>>2]|0)*2096|0)|0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P*2096|0)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P*2096|0)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}else{c[v>>2]=t;c[w>>2]=-1;Q=c[w>>2]|0;c[u>>2]=c[v>>2];c[q+72>>2]=Q;c[c[u>>2]>>2]=0;c[s>>2]=c[t>>2];c[q+88>>2]=s;Q=0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P*2096|0)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P*2096|0)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}}function ff(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;m=i;i=i+192|0;h=m+72|0;k=m+68|0;e=m+64|0;f=m+164|0;o=m+172|0;n=m+156|0;p=m+12|0;q=m+128|0;l=m+16|0;j=m+20|0;g=m+24|0;N=m+28|0;O=m+36|0;P=m+40|0;M=m+124|0;I=m+48|0;J=m+152|0;K=m+160|0;H=m+168|0;D=m+180|0;E=m+80|0;F=m+84|0;C=m+88|0;t=m+96|0;v=m+120|0;u=m+104|0;w=m+108|0;y=m+112|0;x=m+116|0;z=m+8|0;A=m+4|0;Q=m+52|0;L=m+136|0;G=m+132|0;B=m+56|0;R=m+148|0;r=m;s=m+60|0;c[R>>2]=a;c[r>>2]=b;c[s>>2]=d;d=c[R>>2]|0;c[Q>>2]=d;b=c[Q>>2]|0;c[m+140>>2]=b;c[O>>2]=M;c[P>>2]=-1;a=c[P>>2]|0;c[N>>2]=c[O>>2];c[m+32>>2]=a;c[c[N>>2]>>2]=0;c[L>>2]=c[M>>2];c[m+44>>2]=L;c[b>>2]=0;c[J>>2]=H;c[K>>2]=-1;a=c[K>>2]|0;c[I>>2]=c[J>>2];c[m+144>>2]=a;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[m+176>>2]=G;c[b+4>>2]=0;c[E>>2]=C;c[F>>2]=-1;a=c[F>>2]|0;c[D>>2]=c[E>>2];c[m+76>>2]=a;c[c[D>>2]>>2]=0;c[B>>2]=c[C>>2];c[m+92>>2]=B;c[z>>2]=b+8;c[A>>2]=0;b=c[A>>2]|0;c[y>>2]=c[z>>2];c[x>>2]=b;b=c[y>>2]|0;c[w>>2]=x;a=c[c[w>>2]>>2]|0;c[v>>2]=b;c[u>>2]=a;a=c[v>>2]|0;c[m+100>>2]=a;c[t>>2]=u;c[a>>2]=c[c[t>>2]>>2];if(!((c[r>>2]|0)>>>0>0)){i=m;return}gf(d,c[r>>2]|0);Q=c[r>>2]|0;R=c[s>>2]|0;c[q>>2]=d;c[l>>2]=Q;c[j>>2]=R;q=c[q>>2]|0;c[p>>2]=q;c[n>>2]=(c[p>>2]|0)+8;c[o>>2]=c[n>>2];c[g>>2]=c[o>>2];do{Q=c[g>>2]|0;c[h>>2]=c[q+4>>2];R=c[h>>2]|0;n=c[j>>2]|0;c[k>>2]=Q;c[e>>2]=R;c[f>>2]=n;n=c[e>>2]|0;if((n|0)!=0)c[n>>2]=c[c[f>>2]>>2];R=q+4|0;c[R>>2]=(c[R>>2]|0)+4;c[l>>2]=(c[l>>2]|0)+ -1}while((c[l>>2]|0)>>>0>0);i=m;return}function gf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;k=i;i=i+64|0;d=k+36|0;e=k+8|0;l=k+32|0;j=k+40|0;f=k+48|0;g=k+16|0;m=k;n=k+24|0;o=k+4|0;p=k+28|0;h=k+20|0;c[p>>2]=a;c[h>>2]=b;b=c[p>>2]|0;a=c[h>>2]|0;if(a>>>0>(Xe(b)|0)>>>0)ht(b);else{c[o>>2]=b;c[n>>2]=(c[o>>2]|0)+8;c[m>>2]=c[n>>2];p=c[h>>2]|0;c[e>>2]=c[m>>2];c[l>>2]=p;p=c[l>>2]|0;c[k+44>>2]=c[e>>2];c[d>>2]=p;c[k+12>>2]=0;p=Qw(c[d>>2]<<2)|0;c[b+4>>2]=p;c[b>>2]=p;p=(c[b>>2]|0)+(c[h>>2]<<2)|0;c[g>>2]=b;c[f>>2]=(c[g>>2]|0)+8;c[j>>2]=c[f>>2];c[c[j>>2]>>2]=p;i=k;return}}function hf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;f=i;i=i+160|0;n=f+72|0;g=f+32|0;l=f+108|0;j=f+132|0;s=f+8|0;y=f+76|0;z=f+28|0;w=f+20|0;x=f+24|0;v=f;h=f+96|0;u=f+104|0;E=f+136|0;D=f+140|0;C=f+144|0;B=f+52|0;A=f+56|0;t=f+60|0;F=f+64|0;m=f+68|0;p=f+16|0;q=f+4|0;r=f+84|0;G=f+80|0;H=f+88|0;I=f+92|0;J=f+36|0;K=f+100|0;k=f+40|0;o=f+44|0;e=f+112|0;c[K>>2]=b;c[k>>2]=d;b=c[K>>2]|0;c[J>>2]=b;c[I>>2]=(c[J>>2]|0)+8;c[H>>2]=c[I>>2];c[o>>2]=c[H>>2];c[G>>2]=b;d=c[G>>2]|0;d=(((c[d+4>>2]|0)-(c[d>>2]|0)|0)/2096|0)+1|0;c[F>>2]=b;c[m>>2]=d;d=c[F>>2]|0;c[p>>2]=ie(d)|0;if((c[m>>2]|0)>>>0>(c[p>>2]|0)>>>0)ht(d);c[A>>2]=d;c[B>>2]=c[A>>2];K=c[B>>2]|0;c[C>>2]=K;c[D>>2]=(c[C>>2]|0)+8;c[E>>2]=c[D>>2];c[q>>2]=((c[c[E>>2]>>2]|0)-(c[K>>2]|0)|0)/2096|0;if((c[q>>2]|0)>>>0>=(((c[p>>2]|0)>>>0)/2|0)>>>0)c[t>>2]=c[p>>2];else{c[r>>2]=c[q>>2]<<1;c[h>>2]=r;c[u>>2]=m;K=c[h>>2]|0;J=c[u>>2]|0;a[v+0>>0]=a[f+148>>0]|0;c[w>>2]=K;c[x>>2]=J;J=c[w>>2]|0;K=c[x>>2]|0;c[f+12>>2]=v;c[y>>2]=J;c[z>>2]=K;c[t>>2]=c[((c[c[y>>2]>>2]|0)>>>0<(c[c[z>>2]>>2]|0)>>>0?c[x>>2]|0:c[w>>2]|0)>>2]}K=c[t>>2]|0;c[s>>2]=b;J=c[s>>2]|0;$e(e,K,((c[J+4>>2]|0)-(c[J>>2]|0)|0)/2096|0,c[o>>2]|0);J=c[o>>2]|0;c[j>>2]=c[e+8>>2];K=c[j>>2]|0;c[l>>2]=c[k>>2];h=c[l>>2]|0;c[f+48>>2]=J;c[n>>2]=K;c[g>>2]=h;h=c[n>>2]|0;if((h|0)==0){K=e+8|0;J=c[K>>2]|0;J=J+2096|0;c[K>>2]=J;bf(b,e);cf(e);i=f;return}By(h|0,c[g>>2]|0,2096)|0;K=e+8|0;J=c[K>>2]|0;J=J+2096|0;c[K>>2]=J;bf(b,e);cf(e);i=f;return}function jf(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Ed(c[d>>2]|0);i=b;return}function kf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;d=i;i=i+144|0;A=d+48|0;C=d+92|0;B=d+108|0;z=d+124|0;v=d+12|0;x=d+16|0;w=d+20|0;u=d+24|0;q=d+96|0;s=d+112|0;r=d+120|0;p=d+128|0;f=d+52|0;h=d+60|0;g=d+64|0;k=d+68|0;j=d+72|0;l=d+4|0;m=d;n=d+88|0;D=d+32|0;y=d+36|0;t=d+100|0;o=d+40|0;E=d+116|0;e=d+44|0;c[E>>2]=a;c[e>>2]=b;b=c[E>>2]|0;c[D>>2]=b;a=c[D>>2]|0;c[d+84>>2]=a;c[C>>2]=z;c[B>>2]=-1;B=c[B>>2]|0;c[A>>2]=c[C>>2];c[d+76>>2]=B;c[c[A>>2]>>2]=0;c[y>>2]=c[z>>2];c[d+8>>2]=y;c[a>>2]=0;c[x>>2]=u;c[w>>2]=-1;w=c[w>>2]|0;c[v>>2]=c[x>>2];c[d+80>>2]=w;c[c[v>>2]>>2]=0;c[t>>2]=c[u>>2];c[d+28>>2]=t;c[a+4>>2]=0;c[s>>2]=p;c[r>>2]=-1;r=c[r>>2]|0;c[q>>2]=c[s>>2];c[d+104>>2]=r;c[c[q>>2]>>2]=0;c[o>>2]=c[p>>2];c[d+132>>2]=o;c[m>>2]=a+8;c[n>>2]=0;a=c[n>>2]|0;c[j>>2]=c[m>>2];c[l>>2]=a;j=c[j>>2]|0;c[k>>2]=l;a=c[c[k>>2]>>2]|0;c[h>>2]=j;c[g>>2]=a;a=c[h>>2]|0;c[d+56>>2]=a;c[f>>2]=g;c[a>>2]=c[c[f>>2]>>2];if(!((c[e>>2]|0)>>>0>0)){i=d;return}gf(b,c[e>>2]|0);Re(b,c[e>>2]|0);i=d;return}function lf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0,g=0;d=i;i=i+16|0;g=d+4|0;e=d;c[g>>2]=a;c[e>>2]=b;a=(c[e>>2]|0)==0;f=+Me(c[g>>2]|0);if(a){f=f+2.0;i=d;return+f}else{f=f- +Me(c[e>>2]|0);i=d;return+f}return 0.0}function mf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;d=i;i=i+144|0;A=d+48|0;C=d+92|0;B=d+108|0;z=d+124|0;v=d+12|0;x=d+16|0;w=d+20|0;u=d+24|0;q=d+96|0;s=d+112|0;r=d+120|0;p=d+128|0;f=d+52|0;h=d+60|0;g=d+64|0;k=d+68|0;j=d+72|0;l=d+4|0;m=d;n=d+88|0;D=d+32|0;y=d+36|0;t=d+100|0;o=d+40|0;E=d+116|0;e=d+44|0;c[E>>2]=a;c[e>>2]=b;b=c[E>>2]|0;c[D>>2]=b;a=c[D>>2]|0;c[d+84>>2]=a;c[C>>2]=z;c[B>>2]=-1;B=c[B>>2]|0;c[A>>2]=c[C>>2];c[d+76>>2]=B;c[c[A>>2]>>2]=0;c[y>>2]=c[z>>2];c[d+8>>2]=y;c[a>>2]=0;c[x>>2]=u;c[w>>2]=-1;w=c[w>>2]|0;c[v>>2]=c[x>>2];c[d+80>>2]=w;c[c[v>>2]>>2]=0;c[t>>2]=c[u>>2];c[d+28>>2]=t;c[a+4>>2]=0;c[s>>2]=p;c[r>>2]=-1;r=c[r>>2]|0;c[q>>2]=c[s>>2];c[d+104>>2]=r;c[c[q>>2]>>2]=0;c[o>>2]=c[p>>2];c[d+132>>2]=o;c[m>>2]=a+8;c[n>>2]=0;a=c[n>>2]|0;c[j>>2]=c[m>>2];c[l>>2]=a;j=c[j>>2]|0;c[k>>2]=l;a=c[c[k>>2]>>2]|0;c[h>>2]=j;c[g>>2]=a;a=c[h>>2]|0;c[d+56>>2]=a;c[f>>2]=g;c[a>>2]=c[c[f>>2]>>2];if(!((c[e>>2]|0)>>>0>0)){i=d;return}nf(b,c[e>>2]|0);of(b,c[e>>2]|0);i=d;return}function nf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;k=i;i=i+64|0;d=k+36|0;e=k+8|0;l=k+32|0;j=k+40|0;f=k+48|0;g=k+16|0;m=k;n=k+24|0;o=k+4|0;p=k+28|0;h=k+20|0;c[p>>2]=a;c[h>>2]=b;b=c[p>>2]|0;a=c[h>>2]|0;if(a>>>0>(qf(b)|0)>>>0)ht(b);else{c[o>>2]=b;c[n>>2]=(c[o>>2]|0)+8;c[m>>2]=c[n>>2];p=c[h>>2]|0;c[e>>2]=c[m>>2];c[l>>2]=p;p=c[l>>2]|0;c[k+44>>2]=c[e>>2];c[d>>2]=p;c[k+12>>2]=0;p=Qw(c[d>>2]|0)|0;c[b+4>>2]=p;c[b>>2]=p;p=(c[b>>2]|0)+(c[h>>2]|0)|0;c[g>>2]=b;c[f>>2]=(c[g>>2]|0)+8;c[j>>2]=c[f>>2];c[c[j>>2]>>2]=p;i=k;return}}function of(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+48|0;h=e+28|0;j=e+16|0;k=e+4|0;l=e+8|0;m=e+32|0;n=e;o=e+12|0;f=e+24|0;g=e+20|0;c[o>>2]=b;c[f>>2]=d;b=c[o>>2]|0;c[n>>2]=b;c[m>>2]=(c[n>>2]|0)+8;c[l>>2]=c[m>>2];c[g>>2]=c[l>>2];do{o=c[g>>2]|0;c[h>>2]=c[b+4>>2];d=c[h>>2]|0;c[j>>2]=o;c[k>>2]=d;d=c[k>>2]|0;if((d|0)!=0)a[d>>0]=0;o=b+4|0;c[o>>2]=(c[o>>2]|0)+1;c[f>>2]=(c[f>>2]|0)+ -1}while((c[f>>2]|0)>>>0>0);i=e;return}function pf(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=i;i=i+144|0;w=d+48|0;B=d+8|0;C=d+84|0;A=d;x=d+16|0;y=d+4|0;z=d+132|0;v=d+80|0;u=d+44|0;t=d+20|0;E=d+24|0;e=d+28|0;D=d+32|0;g=d+36|0;f=d+40|0;s=d+76|0;l=d+124|0;k=d+128|0;j=d+52|0;h=d+56|0;p=d+64|0;q=d+68|0;r=d+92|0;m=d+96|0;n=d+100|0;o=d+104|0;I=d+108|0;K=d+116|0;J=d+120|0;H=d+88|0;F=d+72|0;G=d+12|0;c[F>>2]=b;b=c[F>>2]|0;F=c[b>>2]|0;c[K>>2]=H;c[J>>2]=-1;J=c[J>>2]|0;c[I>>2]=c[K>>2];c[d+112>>2]=J;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[d+60>>2]=G;if((F|0)==0){i=d;return}c[D>>2]=b;K=c[D>>2]|0;D=c[K>>2]|0;c[E>>2]=K;c[e>>2]=D;D=c[E>>2]|0;while(1){if((c[e>>2]|0)==(c[D+4>>2]|0))break;c[t>>2]=D;c[u>>2]=(c[t>>2]|0)+8;c[v>>2]=c[u>>2];K=c[v>>2]|0;I=D+4|0;J=(c[I>>2]|0)+ -1|0;c[I>>2]=J;c[w>>2]=J;J=c[w>>2]|0;c[x>>2]=K;c[y>>2]=J;J=c[x>>2]|0;K=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=J;c[C>>2]=K}c[s>>2]=b;c[f>>2]=(c[s>>2]|0)+8;c[g>>2]=c[f>>2];I=c[g>>2]|0;K=c[b>>2]|0;c[h>>2]=b;J=c[h>>2]|0;c[j>>2]=J;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];J=(c[c[l>>2]>>2]|0)-(c[J>>2]|0)|0;c[m>>2]=I;c[n>>2]=K;c[o>>2]=J;J=c[n>>2]|0;K=c[o>>2]|0;c[p>>2]=c[m>>2];c[q>>2]=J;c[r>>2]=K;Sw(c[q>>2]|0);i=d;return}function qf(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+80|0;q=h+44|0;r=h+40|0;s=h+8|0;u=h+12|0;t=h+76|0;k=h+36|0;g=h+16|0;f=h+20|0;d=h+68|0;e=h+32|0;l=h;n=h+48|0;j=h+52|0;m=h+77|0;v=h+60|0;w=h+64|0;x=h+28|0;y=h+24|0;p=h+56|0;o=h+72|0;c[y>>2]=b;c[x>>2]=c[y>>2];c[w>>2]=(c[x>>2]|0)+8;c[v>>2]=c[w>>2];c[u>>2]=c[v>>2];b=c[u>>2]|0;a[s+0>>0]=a[t+0>>0]|0;c[r>>2]=b;c[q>>2]=c[r>>2];c[p>>2]=-1;c[o>>2]=4294967295/2|0;c[n>>2]=p;c[j>>2]=o;b=c[n>>2]|0;j=c[j>>2]|0;a[l+0>>0]=a[m+0>>0]|0;c[d>>2]=b;c[e>>2]=j;j=c[e>>2]|0;b=c[d>>2]|0;c[k>>2]=l;c[g>>2]=j;c[f>>2]=b;i=h;return c[((c[c[g>>2]>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0?c[e>>2]|0:c[d>>2]|0)>>2]|0}function rf(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;m=i;i=i+32|0;n=m+20|0;k=m+16|0;g=m+12|0;h=m+8|0;l=m+4|0;j=m;c[n>>2]=a;c[k>>2]=b;c[g>>2]=d;c[h>>2]=e;c[l>>2]=f;c[j>>2]=0;if((c[h>>2]|0)>>>0>=(c[g>>2]|0)>>>0){c[j>>2]=0;c[h>>2]=c[g>>2]}else{a=ey(c[n>>2]|0)|0;c[j>>2]=(a>>>0)%(((c[g>>2]|0)-(c[h>>2]|0)+1|0)>>>0)|0}sf(c[l>>2]|0,(c[k>>2]|0)+(c[j>>2]|0)|0,c[h>>2]|0);i=m;return}function sf(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+16|0;j=f+8|0;h=f+4|0;g=f;c[j>>2]=a;c[h>>2]=b;c[g>>2]=e;e=c[j>>2]|0;a=e+2080|0;c[a>>2]=(c[a>>2]|0)+(c[g>>2]|0);c[g>>2]=(c[g>>2]|0)+1;while(1){j=(c[g>>2]|0)+ -1|0;c[g>>2]=j;if((j|0)==0)break;j=c[h>>2]|0;c[h>>2]=j+1;j=e+((d[j>>0]|0)<<2)|0;c[j>>2]=(c[j>>2]|0)+1}i=f;return}function tf(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;x=i;i=i+2928|0;m=x+2860|0;o=x+2888|0;p=x+2844|0;q=x+2884|0;l=x+2836|0;k=x+2832|0;t=x+2840|0;z=x+2880|0;y=x+2872|0;j=x+2848|0;w=x+2852|0;n=x+2856|0;s=x+2920|0;A=x+2864|0;G=x+2868|0;F=x+2876|0;u=x+2892|0;v=x+2896|0;E=x+2900|0;B=x+2904|0;C=x+2908|0;D=x+2912|0;h=x+2916|0;r=x;c[s>>2]=a;c[A>>2]=b;c[G>>2]=d;c[F>>2]=e;c[u>>2]=f;c[v>>2]=g;c[E>>2]=(((c[A>>2]|0)>>>0)/((c[G>>2]|0)>>>0)|0)+1;if((c[E>>2]|0)>(c[F>>2]|0))c[E>>2]=c[F>>2];c[B>>2]=7;c[C>>2]=((c[A>>2]|0)>>>0)/((c[E>>2]|0)>>>0)|0;c[D>>2]=0;while(1){if((c[D>>2]|0)>=(c[E>>2]|0))break;G=da(c[A>>2]|0,c[D>>2]|0)|0;c[h>>2]=(G>>>0)/((c[E>>2]|0)>>>0)|0;if((c[D>>2]|0)!=0){G=ey(B)|0;c[h>>2]=(c[h>>2]|0)+((G|0)%(c[C>>2]|0)|0)}if(((c[h>>2]|0)+(c[u>>2]|0)|0)>>>0>=(c[A>>2]|0)>>>0)c[h>>2]=(c[A>>2]|0)-(c[u>>2]|0)-1;Bf(r);bg(r,(c[s>>2]|0)+(c[h>>2]<<1)|0,c[u>>2]|0);c[w>>2]=c[v>>2];c[n>>2]=r;g=c[w>>2]|0;G=c[g+4>>2]|0;c[j>>2]=g;c[y>>2]=(c[j>>2]|0)+8;c[z>>2]=c[y>>2];if((G|0)!=(c[c[z>>2]>>2]|0)){c[t>>2]=g;c[k>>2]=(c[t>>2]|0)+8;c[l>>2]=c[k>>2];a=c[l>>2]|0;c[m>>2]=c[g+4>>2];G=c[m>>2]|0;F=c[n>>2]|0;c[o>>2]=a;c[p>>2]=G;c[q>>2]=F;F=c[p>>2]|0;if((F|0)!=0)By(F|0,c[q>>2]|0,2832)|0;G=g+4|0;c[G>>2]=(c[G>>2]|0)+2832}else _f(g,c[n>>2]|0);c[D>>2]=(c[D>>2]|0)+1}i=x;return}function uf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;n=i;i=i+2896|0;t=n+2880|0;p=n+2860|0;r=n+2852|0;s=n+2844|0;u=n+2856|0;v=n+2836|0;l=n+2840|0;m=n+2884|0;f=n+2848|0;o=n+2864|0;h=n+2868|0;k=n+2872|0;g=n+2876|0;j=n;q=n+2832|0;c[l>>2]=a;c[m>>2]=b;c[f>>2]=d;c[o>>2]=e;c[h>>2]=((c[m>>2]<<1>>>0)/((c[f>>2]|0)>>>0)|0)+100;c[k>>2]=7;b=c[h>>2]|0;c[v>>2]=c[o>>2];a=c[v>>2]|0;a=b+(((c[a+4>>2]|0)-(c[a>>2]|0)|0)/2832|0)-1|0;c[u>>2]=c[o>>2];b=c[u>>2]|0;b=(a>>>0)/((((c[b+4>>2]|0)-(c[b>>2]|0)|0)/2832|0)>>>0)|0;c[t>>2]=c[o>>2];a=c[t>>2]|0;c[h>>2]=da(b,((c[a+4>>2]|0)-(c[a>>2]|0)|0)/2832|0)|0;c[g>>2]=0;while(1){if((c[g>>2]|0)>=(c[h>>2]|0))break;Bf(j);ag(k,c[l>>2]|0,c[m>>2]|0,c[f>>2]|0,j);u=c[g>>2]|0;c[p>>2]=c[o>>2];v=c[p>>2]|0;c[q>>2]=(u>>>0)%((((c[v+4>>2]|0)-(c[v>>2]|0)|0)/2832|0)>>>0)|0;v=c[q>>2]|0;c[r>>2]=c[o>>2];c[s>>2]=v;Qf((c[c[r>>2]>>2]|0)+((c[s>>2]|0)*2832|0)|0,j);c[g>>2]=(c[g>>2]|0)+1}i=n;return}function vf(b,f,g,j,k){b=b|0;f=f|0;g=+g;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;l=i;i=i+128|0;I=l+52|0;J=l+48|0;K=l+96|0;L=l+112|0;M=l+104|0;N=l+32|0;E=l+92|0;C=l+28|0;z=l+8|0;H=l+36|0;p=l+80|0;q=l+40|0;v=l+108|0;r=l+116|0;G=l+120|0;F=l+56|0;n=l+60|0;m=l+64|0;y=l+76|0;D=l+68|0;o=l+72|0;B=l;A=l+100|0;x=l+16|0;w=l+88|0;s=l+84|0;u=l+24|0;t=l+44|0;c[E>>2]=b;c[C>>2]=f;h[z>>3]=g;c[H>>2]=j;c[p>>2]=k;c[N>>2]=c[H>>2];b=c[N>>2]|0;if((((c[b+4>>2]|0)-(c[b>>2]|0)|0)/2832|0)>>>0<=1){c[q>>2]=0;while(1){if(!((c[q>>2]|0)>>>0<(c[C>>2]|0)>>>0))break;a[(c[p>>2]|0)+(c[q>>2]|0)>>0]=0;c[q>>2]=(c[q>>2]|0)+1}i=l;return}c[M>>2]=c[H>>2];N=c[M>>2]|0;c[v>>2]=((c[N+4>>2]|0)-(c[N>>2]|0)|0)/2832|0;N=(c[v>>2]|0)*704|0;c[r>>2]=Rw(N>>>0>536870911?-1:N<<3)|0;vy(c[r>>2]|0,0,(c[v>>2]|0)*5632|0)|0;c[G>>2]=0;while(1){if((c[G>>2]|0)>=704)break;c[F>>2]=0;while(1){if((c[F>>2]|0)>=(c[v>>2]|0))break;b=c[F>>2]|0;c[I>>2]=c[H>>2];c[J>>2]=b;b=c[(c[c[I>>2]>>2]|0)+((c[J>>2]|0)*2832|0)+2816>>2]|0;N=c[G>>2]|0;f=c[F>>2]|0;c[K>>2]=c[H>>2];c[L>>2]=f;g=+lf(b,c[(c[c[K>>2]>>2]|0)+((c[L>>2]|0)*2832|0)+(N<<2)>>2]|0);N=da(c[G>>2]|0,c[v>>2]|0)|0;h[(c[r>>2]|0)+(N+(c[F>>2]|0)<<3)>>3]=g;c[F>>2]=(c[F>>2]|0)+1}c[G>>2]=(c[G>>2]|0)+1}N=c[v>>2]|0;c[n>>2]=Rw(N>>>0>536870911?-1:N<<3)|0;vy(c[n>>2]|0,0,c[v>>2]<<3|0)|0;c[m>>2]=Rw(da(c[C>>2]|0,c[v>>2]|0)|0)|0;vy(c[m>>2]|0,0,da(c[C>>2]|0,c[v>>2]|0)|0)|0;c[y>>2]=0;while(1){if(!((c[y>>2]|0)>>>0<(c[C>>2]|0)>>>0))break;c[D>>2]=da(c[y>>2]|0,c[v>>2]|0)|0;c[o>>2]=da(e[(c[E>>2]|0)+(c[y>>2]<<1)>>1]|0,c[v>>2]|0)|0;h[B>>3]=1.0e+99;c[A>>2]=0;while(1){if((c[A>>2]|0)>=(c[v>>2]|0))break;N=(c[n>>2]|0)+(c[A>>2]<<3)|0;h[N>>3]=+h[N>>3]+ +h[(c[r>>2]|0)+((c[o>>2]|0)+(c[A>>2]|0)<<3)>>3];if(+h[(c[n>>2]|0)+(c[A>>2]<<3)>>3]<+h[B>>3]){h[B>>3]=+h[(c[n>>2]|0)+(c[A>>2]<<3)>>3];a[(c[p>>2]|0)+(c[y>>2]|0)>>0]=c[A>>2]}c[A>>2]=(c[A>>2]|0)+1}h[x>>3]=+h[z>>3];if((c[y>>2]|0)>>>0<2e3)h[x>>3]=+h[x>>3]*(+((c[y>>2]|0)>>>0)*.07/2.0e3+.77);c[w>>2]=0;while(1){if((c[w>>2]|0)>=(c[v>>2]|0))break;N=(c[n>>2]|0)+(c[w>>2]<<3)|0;h[N>>3]=+h[N>>3]- +h[B>>3];if(+h[(c[n>>2]|0)+(c[w>>2]<<3)>>3]>=+h[x>>3]){h[(c[n>>2]|0)+(c[w>>2]<<3)>>3]=+h[x>>3];a[(c[m>>2]|0)+((c[D>>2]|0)+(c[w>>2]|0))>>0]=1}c[w>>2]=(c[w>>2]|0)+1}c[y>>2]=(c[y>>2]|0)+1}c[s>>2]=(c[C>>2]|0)-1;c[u>>2]=da(c[s>>2]|0,c[v>>2]|0)|0;c[t>>2]=d[(c[p>>2]|0)+(c[s>>2]|0)>>0];while(1){if((c[s>>2]|0)<=0)break;c[s>>2]=(c[s>>2]|0)+ -1;c[u>>2]=(c[u>>2]|0)-(c[v>>2]|0);if(a[(c[m>>2]|0)+((c[u>>2]|0)+(c[t>>2]|0))>>0]&1)c[t>>2]=d[(c[p>>2]|0)+(c[s>>2]|0)>>0];a[(c[p>>2]|0)+(c[s>>2]|0)>>0]=c[t>>2]}o=c[r>>2]|0;if((o|0)!=0)Tw(o);n=c[n>>2]|0;if((n|0)!=0)Tw(n);m=c[m>>2]|0;if((m|0)==0){i=l;return}Tw(m);i=l;return}function wf(b,f,g,h){b=b|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;v=i;i=i+96|0;o=v+28|0;p=v+4|0;r=v+52|0;x=v+24|0;C=v+68|0;D=v+8|0;B=v;y=v+56|0;z=v+64|0;A=v+88|0;w=v+80|0;k=v+84|0;u=v+32|0;E=v+12|0;j=v+44|0;F=v+48|0;G=v+40|0;q=v+36|0;l=v+60|0;m=v+16|0;n=v+20|0;s=v+76|0;t=v+72|0;c[q>>2]=b;c[l>>2]=f;c[m>>2]=g;c[n>>2]=h;c[s>>2]=ed(c[m>>2]|0,c[l>>2]|0)|0;c[G>>2]=c[n>>2];h=c[G>>2]|0;c[F>>2]=h;b=c[F>>2]|0;g=c[b>>2]|0;c[E>>2]=b;c[j>>2]=g;g=c[E>>2]|0;while(1){if((c[j>>2]|0)==(c[g+4>>2]|0))break;c[u>>2]=g;c[k>>2]=(c[u>>2]|0)+8;c[w>>2]=c[k>>2];G=c[w>>2]|0;E=g+4|0;F=(c[E>>2]|0)+ -2832|0;c[E>>2]=F;c[x>>2]=F;F=c[x>>2]|0;c[y>>2]=G;c[z>>2]=F;F=c[y>>2]|0;G=c[z>>2]|0;a[B+0>>0]=a[A+0>>0]|0;c[C>>2]=F;c[D>>2]=G}c[r>>2]=h;Ff(c[n>>2]|0,c[s>>2]|0);c[t>>2]=0;while(1){if(!((c[t>>2]|0)>>>0<(c[l>>2]|0)>>>0))break;G=d[(c[m>>2]|0)+(c[t>>2]|0)>>0]|0;c[o>>2]=c[n>>2];c[p>>2]=G;Cf((c[c[o>>2]>>2]|0)+((c[p>>2]|0)*2832|0)|0,e[(c[q>>2]|0)+(c[t>>2]<<1)>>1]|0);c[t>>2]=(c[t>>2]|0)+1}i=v;return}function xf(b,f,g){b=b|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0;m=i;i=i+3392|0;r=m+3064|0;s=m+3360|0;p=m+3336|0;q=m+3048|0;Ia=m+3052|0;ha=m+3112|0;ia=m+3272|0;fa=m+3060|0;j=m+2848|0;h=m+3328|0;ka=m+2852|0;oa=m+2856|0;pa=m+2860|0;ma=m+2864|0;na=m+2868|0;la=m+3280|0;ra=m+2932|0;va=m+2876|0;wa=m+2880|0;ta=m+2884|0;ua=m+2888|0;sa=m+2892|0;ya=m+2896|0;Ha=m+2900|0;Ga=m+2904|0;Ea=m+2908|0;Fa=m+2912|0;Da=m+2916|0;Ba=m+2920|0;Ca=m+2924|0;za=m+2928|0;Aa=m+3276|0;da=m+3056|0;ca=m+2936|0;ja=m+2940|0;qa=m+2944|0;xa=m+2948|0;ba=m+2952|0;aa=m+2956|0;B=m+2960|0;C=m+2964|0;z=m+2968|0;A=m+2972|0;y=m+2976|0;E=m+2980|0;I=m+2984|0;J=m+2988|0;G=m+2992|0;H=m+2996|0;F=m+3e3|0;L=m+3004|0;P=m+3008|0;Q=m+3012|0;N=m+3016|0;O=m+3020|0;M=m+3024|0;S=m+3028|0;$=m+3032|0;_=m+3036|0;Y=m+3324|0;Z=m+3332|0;X=m+3340|0;V=m+3348|0;W=m+3356|0;T=m+3364|0;U=m+3380|0;x=m+3384|0;w=m+3068|0;D=m+3072|0;K=m+3076|0;R=m+3080|0;v=m+3084|0;u=m+3088|0;Ma=m+3092|0;Oa=m+3096|0;Pa=m+3100|0;Qa=m+3104|0;La=m+3108|0;Ka=m+3352|0;Ja=m+3116|0;Va=m+3120|0;Ua=m+3124|0;Ta=m+3128|0;Ra=m+3132|0;Na=m+3136|0;Za=m+3140|0;_a=m+3144|0;ub=m+3148|0;vb=m+3156|0;wb=m+3160|0;tb=m+3164|0;pb=m+3172|0;qb=m+3180|0;rb=m+3184|0;ob=m+3188|0;kb=m+3196|0;lb=m+3204|0;mb=m+3208|0;jb=m+3212|0;ab=m+3220|0;cb=m+3228|0;bb=m+3232|0;db=m+3236|0;fb=m+3240|0;eb=m+3244|0;gb=m+3248|0;hb=m+3252|0;xb=m+3260|0;sb=m+3264|0;nb=m+3268|0;ib=m+2872|0;yb=m+2836|0;zb=m+3296|0;$a=m+2844|0;o=m+2832|0;t=m+2840|0;l=m+3284|0;k=m+3312|0;Xa=m+3040|0;Sa=m;Ya=m+3344|0;Wa=m+3388|0;ea=m+3300|0;ga=m+3368|0;n=m+3044|0;c[$a>>2]=b;c[o>>2]=f;c[t>>2]=g;c[zb>>2]=l;c[yb>>2]=c[zb>>2];c[xb>>2]=c[yb>>2];f=c[xb>>2]|0;c[m+3256>>2]=f;c[vb>>2]=tb;c[wb>>2]=-1;b=c[wb>>2]|0;c[ub>>2]=c[vb>>2];c[m+3152>>2]=b;c[c[ub>>2]>>2]=0;c[sb>>2]=c[tb>>2];c[m+3168>>2]=sb;c[f>>2]=0;c[qb>>2]=ob;c[rb>>2]=-1;b=c[rb>>2]|0;c[pb>>2]=c[qb>>2];c[m+3176>>2]=b;c[c[pb>>2]>>2]=0;c[nb>>2]=c[ob>>2];c[m+3192>>2]=nb;c[f+4>>2]=0;c[lb>>2]=jb;c[mb>>2]=-1;b=c[mb>>2]|0;c[kb>>2]=c[lb>>2];c[m+3200>>2]=b;c[c[kb>>2]>>2]=0;c[ib>>2]=c[jb>>2];c[m+3216>>2]=ib;c[gb>>2]=f+8;c[hb>>2]=0;f=c[hb>>2]|0;c[fb>>2]=c[gb>>2];c[eb>>2]=f;f=c[fb>>2]|0;c[db>>2]=eb;b=c[c[db>>2]>>2]|0;c[cb>>2]=f;c[bb>>2]=b;b=c[cb>>2]|0;c[m+3224>>2]=b;c[ab>>2]=bb;c[b>>2]=c[c[ab>>2]>>2];Bd(k,c[o>>2]|0);c[Xa>>2]=0;Bf(Sa);c[Ya>>2]=0;while(1){if(!((c[Ya>>2]|0)>>>0<(c[o>>2]|0)>>>0))break;if(((c[Ya>>2]|0)+1|0)==(c[o>>2]|0))g=1;else g=(d[(c[t>>2]|0)+(c[Ya>>2]|0)>>0]|0|0)!=(d[(c[t>>2]|0)+((c[Ya>>2]|0)+1)>>0]|0|0);a[Wa>>0]=g&1;zb=c[Xa>>2]|0;yb=c[Ya>>2]|0;c[Za>>2]=k;c[_a>>2]=yb;c[(c[c[Za>>2]>>2]|0)+(c[_a>>2]<<2)>>2]=zb;Cf(Sa,e[(c[$a>>2]|0)+(c[Ya>>2]<<1)>>1]|0);if(a[Wa>>0]&1){c[Ra>>2]=l;c[Na>>2]=Sa;g=c[Ra>>2]|0;zb=c[g+4>>2]|0;c[Ta>>2]=g;c[Ua>>2]=(c[Ta>>2]|0)+8;c[Va>>2]=c[Ua>>2];if((zb|0)!=(c[c[Va>>2]>>2]|0)){c[Ja>>2]=g;c[Ka>>2]=(c[Ja>>2]|0)+8;c[La>>2]=c[Ka>>2];yb=c[La>>2]|0;c[Ma>>2]=c[g+4>>2];zb=c[Ma>>2]|0;f=c[Na>>2]|0;c[Oa>>2]=yb;c[Pa>>2]=zb;c[Qa>>2]=f;f=c[Pa>>2]|0;if((f|0)!=0)By(f|0,c[Qa>>2]|0,2832)|0;zb=g+4|0;c[zb>>2]=(c[zb>>2]|0)+2832}else _f(g,c[Na>>2]|0);Df(Sa);c[Xa>>2]=(c[Xa>>2]|0)+1}c[Ya>>2]=(c[Ya>>2]|0)+1}c[u>>2]=ea;c[v>>2]=c[u>>2];c[w>>2]=c[v>>2];zb=c[w>>2]|0;c[x>>2]=zb;c[z>>2]=y;c[A>>2]=-1;yb=c[A>>2]|0;c[B>>2]=c[z>>2];c[C>>2]=yb;c[c[B>>2]>>2]=0;c[D>>2]=c[y>>2];c[E>>2]=D;c[zb>>2]=0;c[G>>2]=F;c[H>>2]=-1;yb=c[H>>2]|0;c[I>>2]=c[G>>2];c[J>>2]=yb;c[c[I>>2]>>2]=0;c[K>>2]=c[F>>2];c[L>>2]=K;c[zb+4>>2]=0;c[N>>2]=M;c[O>>2]=-1;yb=c[O>>2]|0;c[P>>2]=c[N>>2];c[Q>>2]=yb;c[c[P>>2]>>2]=0;c[R>>2]=c[M>>2];c[S>>2]=R;c[T>>2]=zb+8;c[U>>2]=0;zb=c[U>>2]|0;c[V>>2]=c[T>>2];c[W>>2]=zb;zb=c[V>>2]|0;c[X>>2]=W;yb=c[c[X>>2]>>2]|0;c[Y>>2]=zb;c[Z>>2]=yb;yb=c[Y>>2]|0;c[_>>2]=yb;c[$>>2]=Z;c[yb>>2]=c[c[$>>2]>>2];c[aa>>2]=ga;c[ba>>2]=c[aa>>2];c[ca>>2]=c[ba>>2];yb=c[ca>>2]|0;c[da>>2]=yb;c[fa>>2]=h;c[j>>2]=-1;zb=c[j>>2]|0;c[ha>>2]=c[fa>>2];c[ia>>2]=zb;c[c[ha>>2]>>2]=0;c[ja>>2]=c[h>>2];c[ka>>2]=ja;c[yb>>2]=0;c[ma>>2]=la;c[na>>2]=-1;zb=c[na>>2]|0;c[oa>>2]=c[ma>>2];c[pa>>2]=zb;c[c[oa>>2]>>2]=0;c[qa>>2]=c[la>>2];c[ra>>2]=qa;c[yb+4>>2]=0;c[ta>>2]=sa;c[ua>>2]=-1;zb=c[ua>>2]|0;c[va>>2]=c[ta>>2];c[wa>>2]=zb;c[c[va>>2]>>2]=0;c[xa>>2]=c[sa>>2];c[ya>>2]=xa;c[za>>2]=yb+8;c[Aa>>2]=0;yb=c[Aa>>2]|0;c[Ba>>2]=c[za>>2];c[Ca>>2]=yb;yb=c[Ba>>2]|0;c[Da>>2]=Ca;zb=c[c[Da>>2]>>2]|0;c[Ea>>2]=yb;c[Fa>>2]=zb;zb=c[Ea>>2]|0;c[Ga>>2]=zb;c[Ha>>2]=Fa;c[zb>>2]=c[c[Ha>>2]>>2];c[Ia>>2]=l;zb=c[Ia>>2]|0;Ef(l,1,((c[zb+4>>2]|0)-(c[zb>>2]|0)|0)/2832|0,256,ea,ga);c[n>>2]=0;while(1){if(!((c[n>>2]|0)>>>0<(c[o>>2]|0)>>>0))break;zb=c[n>>2]|0;c[p>>2]=k;c[q>>2]=zb;zb=c[(c[c[p>>2]>>2]|0)+(c[q>>2]<<2)>>2]|0;c[r>>2]=ga;c[s>>2]=zb;a[(c[t>>2]|0)+(c[n>>2]|0)>>0]=c[(c[c[r>>2]>>2]|0)+(c[s>>2]<<2)>>2];c[n>>2]=(c[n>>2]|0)+1}Gd(ga);yf(ea);Gd(k);yf(l);i=m;return}function yf(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;zf(c[d>>2]|0);i=b;return}function zf(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Af(c[d>>2]|0);i=b;return}function Af(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=i;i=i+144|0;w=d+48|0;B=d+8|0;C=d+84|0;A=d;x=d+16|0;y=d+4|0;z=d+132|0;v=d+80|0;u=d+44|0;t=d+20|0;E=d+24|0;e=d+28|0;D=d+32|0;g=d+36|0;f=d+40|0;s=d+76|0;l=d+124|0;k=d+128|0;j=d+52|0;h=d+56|0;p=d+64|0;q=d+68|0;r=d+92|0;m=d+96|0;n=d+100|0;o=d+104|0;I=d+108|0;K=d+116|0;J=d+120|0;H=d+88|0;F=d+72|0;G=d+12|0;c[F>>2]=b;b=c[F>>2]|0;F=c[b>>2]|0;c[K>>2]=H;c[J>>2]=-1;J=c[J>>2]|0;c[I>>2]=c[K>>2];c[d+112>>2]=J;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[d+60>>2]=G;if((F|0)==0){i=d;return}c[D>>2]=b;K=c[D>>2]|0;D=c[K>>2]|0;c[E>>2]=K;c[e>>2]=D;D=c[E>>2]|0;while(1){if((c[e>>2]|0)==(c[D+4>>2]|0))break;c[t>>2]=D;c[u>>2]=(c[t>>2]|0)+8;c[v>>2]=c[u>>2];K=c[v>>2]|0;I=D+4|0;J=(c[I>>2]|0)+ -2832|0;c[I>>2]=J;c[w>>2]=J;J=c[w>>2]|0;c[x>>2]=K;c[y>>2]=J;J=c[x>>2]|0;K=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=J;c[C>>2]=K}c[s>>2]=b;c[f>>2]=(c[s>>2]|0)+8;c[g>>2]=c[f>>2];I=c[g>>2]|0;K=c[b>>2]|0;c[h>>2]=b;J=c[h>>2]|0;c[j>>2]=J;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];J=((c[c[l>>2]>>2]|0)-(c[J>>2]|0)|0)/2832|0;c[m>>2]=I;c[n>>2]=K;c[o>>2]=J;J=c[n>>2]|0;K=c[o>>2]|0;c[p>>2]=c[m>>2];c[q>>2]=J;c[r>>2]=K;Sw(c[q>>2]|0);i=d;return}function Bf(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;$f(c[d>>2]|0);i=b;return}function Cf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;a=c[f>>2]|0;b=a+(c[e>>2]<<2)|0;c[b>>2]=(c[b>>2]|0)+1;a=a+2816|0;c[a>>2]=(c[a>>2]|0)+1;i=d;return}function Df(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;vy(a|0,0,2816)|0;c[a+2816>>2]=0;i=b;return}function Ef(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0.0;B=i;i=i+176|0;J=B+156|0;K=B+120|0;G=B;H=B+104|0;k=B+64|0;l=B+148|0;n=B+20|0;o=B+108|0;q=B+24|0;r=B+28|0;j=B+32|0;F=B+36|0;v=B+40|0;w=B+44|0;x=B+48|0;y=B+128|0;z=B+136|0;A=B+144|0;U=B+152|0;V=B+160|0;S=B+68|0;T=B+72|0;Q=B+76|0;R=B+80|0;O=B+84|0;P=B+88|0;M=B+92|0;N=B+96|0;u=B+100|0;I=B+4|0;D=B+116|0;t=B+112|0;E=B+124|0;p=B+52|0;s=B+132|0;m=B+8|0;W=B+56|0;L=B+140|0;C=B+60|0;c[u>>2]=a;c[I>>2]=b;c[D>>2]=d;c[t>>2]=e;c[E>>2]=f;c[p>>2]=g;c[s>>2]=da(c[I>>2]|0,c[D>>2]|0)|0;a=c[s>>2]|0;c[W>>2]=1;Jd(m,a,W);Ff(c[E>>2]|0,c[s>>2]|0);Ld(c[p>>2]|0,c[s>>2]|0);c[L>>2]=0;while(1){if((c[L>>2]|0)>=(c[s>>2]|0))break;W=c[L>>2]|0;c[M>>2]=c[E>>2];c[N>>2]=W;W=(c[c[M>>2]>>2]|0)+((c[N>>2]|0)*2832|0)|0;a=c[L>>2]|0;c[O>>2]=c[u>>2];c[P>>2]=a;By(W|0,(c[c[O>>2]>>2]|0)+((c[P>>2]|0)*2832|0)|0,2832)|0;W=c[L>>2]|0;c[Q>>2]=c[u>>2];c[R>>2]=W;X=+Gf((c[c[Q>>2]>>2]|0)+((c[R>>2]|0)*2832|0)|0);W=c[L>>2]|0;c[S>>2]=c[E>>2];c[T>>2]=W;h[(c[c[S>>2]>>2]|0)+((c[T>>2]|0)*2832|0)+2824>>3]=X;W=c[L>>2]|0;a=c[L>>2]|0;c[U>>2]=c[p>>2];c[V>>2]=a;c[(c[c[U>>2]>>2]|0)+(c[V>>2]<<2)>>2]=W;c[L>>2]=(c[L>>2]|0)+1}a:do if((c[I>>2]|0)>1){c[C>>2]=0;while(1){if((c[C>>2]|0)>=(c[D>>2]|0))break a;c[j>>2]=c[E>>2];c[F>>2]=0;a=(c[c[j>>2]>>2]|0)+((c[F>>2]|0)*2832|0)|0;c[G>>2]=m;c[H>>2]=0;W=(c[c[G>>2]>>2]|0)+(c[H>>2]<<2)|0;b=da(c[C>>2]|0,c[I>>2]|0)|0;c[J>>2]=c[p>>2];c[K>>2]=b;Hf(a,W,(c[c[J>>2]>>2]|0)+(c[K>>2]<<2)|0,c[I>>2]|0,c[t>>2]|0);c[C>>2]=(c[C>>2]|0)+1}}while(0);c[k>>2]=c[E>>2];c[l>>2]=0;a=(c[c[k>>2]>>2]|0)+((c[l>>2]|0)*2832|0)|0;c[n>>2]=m;c[o>>2]=0;b=(c[c[n>>2]>>2]|0)+(c[o>>2]<<2)|0;c[q>>2]=c[p>>2];c[r>>2]=0;Hf(a,b,(c[c[q>>2]>>2]|0)+(c[r>>2]<<2)|0,c[s>>2]|0,c[t>>2]|0);c[v>>2]=c[u>>2];c[w>>2]=0;b=(c[c[v>>2]>>2]|0)+((c[w>>2]|0)*2832|0)|0;a=c[s>>2]|0;c[x>>2]=c[E>>2];c[y>>2]=0;W=(c[c[x>>2]>>2]|0)+((c[y>>2]|0)*2832|0)|0;c[z>>2]=c[p>>2];c[A>>2]=0;If(b,a,W,(c[c[z>>2]>>2]|0)+(c[A>>2]<<2)|0);Jf(c[E>>2]|0,c[p>>2]|0);Gd(m);i=B;return}function Ff(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;o=i;i=i+80|0;m=o+36|0;n=o+4|0;g=o+24|0;q=o;e=o+32|0;f=o+16|0;p=o+68|0;l=o+8|0;k=o+60|0;j=o+64|0;v=o+40|0;h=o+44|0;t=o+48|0;u=o+52|0;w=o+56|0;x=o+12|0;s=o+28|0;r=o+20|0;c[x>>2]=b;c[s>>2]=d;d=c[x>>2]|0;c[w>>2]=d;b=c[w>>2]|0;c[r>>2]=((c[b+4>>2]|0)-(c[b>>2]|0)|0)/2832|0;if((c[r>>2]|0)>>>0<(c[s>>2]|0)>>>0){Sf(d,(c[s>>2]|0)-(c[r>>2]|0)|0);i=o;return}if(!((c[r>>2]|0)>>>0>(c[s>>2]|0)>>>0)){i=o;return}r=(c[d>>2]|0)+((c[s>>2]|0)*2832|0)|0;c[t>>2]=d;c[u>>2]=r;r=c[u>>2]|0;c[v>>2]=c[t>>2];c[h>>2]=r;r=c[v>>2]|0;while(1){if((c[h>>2]|0)==(c[r+4>>2]|0))break;c[j>>2]=r;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];x=c[l>>2]|0;b=r+4|0;w=(c[b>>2]|0)+ -2832|0;c[b>>2]=w;c[m>>2]=w;w=c[m>>2]|0;c[e>>2]=x;c[f>>2]=w;w=c[e>>2]|0;x=c[f>>2]|0;a[q+0>>0]=a[p+0>>0]|0;c[n>>2]=w;c[g>>2]=x}i=o;return}function Gf(a){a=a|0;var b=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0.0;b=i;i=i+736|0;e=b;f=b+16|0;l=b+12|0;m=b+24|0;g=b+32|0;j=b+20|0;k=b+8|0;c[f>>2]=a;if((c[(c[f>>2]|0)+2816>>2]|0)==0){h[e>>3]=12.0;n=+h[e>>3];i=b;return+n}c[l>>2]=0;c[m>>2]=0;while(1){if((c[m>>2]|0)>=704)break;if((c[l>>2]|0)>=5)break;if((c[(c[f>>2]|0)+(c[m>>2]<<2)>>2]|0)>0)c[l>>2]=(c[l>>2]|0)+1;c[m>>2]=(c[m>>2]|0)+1}if((c[l>>2]|0)==1){h[e>>3]=12.0;n=+h[e>>3];i=b;return+n}if((c[l>>2]|0)==2){h[e>>3]=+(20+(c[(c[f>>2]|0)+2816>>2]|0)|0);n=+h[e>>3];i=b;return+n}vy(g|0,0,704)|0;Wk(c[f>>2]|0,704,15,g);c[j>>2]=0;c[k>>2]=0;while(1){if((c[k>>2]|0)>=704)break;m=da(c[(c[f>>2]|0)+(c[k>>2]<<2)>>2]|0,d[g+(c[k>>2]|0)>>0]|0)|0;c[j>>2]=(c[j>>2]|0)+m;c[k>>2]=(c[k>>2]|0)+1}do if((c[l>>2]|0)!=3)if((c[l>>2]|0)==4){c[j>>2]=(c[j>>2]|0)+37;break}else{m=Pe(g,704)|0;c[j>>2]=(c[j>>2]|0)+m;break}else c[j>>2]=(c[j>>2]|0)+28;while(0);h[e>>3]=+(c[j>>2]|0);n=+h[e>>3];i=b;return+n}function Hf(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0,Uc=0,Vc=0,Wc=0,Xc=0,Yc=0,Zc=0,_c=0,$c=0,ad=0,bd=0,cd=0,dd=0,ed=0,fd=0,gd=0,hd=0,id=0,jd=0,kd=0,ld=0,md=0,nd=0,od=0,pd=0,qd=0,rd=0,sd=0,td=0,ud=0,vd=0,wd=0,xd=0,yd=0,zd=0,Ad=0,Bd=0,Cd=0,Dd=0,Ed=0,Fd=0,Hd=0,Id=0;m=i;i=i+1120|0;_a=m+580|0;Za=m+568|0;t=m+564|0;u=m+312|0;w=m+544|0;x=m+228|0;n=m+1040|0;o=m+1056|0;A=m+1072|0;B=m+1080|0;H=m+1088|0;N=m+1064|0;O=m+156|0;P=m+148|0;Q=m+144|0;R=m+1020|0;S=m+616|0;X=m+556|0;aa=m+352|0;ba=m+332|0;$=m+48|0;Y=m+224|0;Z=m+220|0;_=m+1104|0;W=m+160|0;V=m+164|0;U=m+168|0;L=m+172|0;M=m+176|0;J=m+180|0;K=m+184|0;I=m+1016|0;ca=m+728|0;da=m+612|0;ea=m+600|0;ga=m+552|0;ia=m+356|0;ja=m+348|0;qa=m+344|0;ra=m+328|0;oa=m+236|0;pa=m+232|0;la=m+244|0;ma=m+248|0;ka=m+252|0;ya=m+256|0;za=m+260|0;wa=m+264|0;xa=m+268|0;ta=m+272|0;ua=m+276|0;sa=m+280|0;q=m+284|0;Qa=m+288|0;Va=m+292|0;Wa=m+296|0;Ta=m+300|0;Ra=m+304|0;Sa=m+308|0;Ua=m+88|0;Pa=m+316|0;Oa=m+320|0;Ma=m+324|0;Na=m+1012|0;Xa=m+792|0;Ya=m+724|0;La=m+8|0;Ka=m+64|0;Ja=m+604|0;Ia=m+596|0;Ga=m+592|0;Ha=m+548|0;Ea=m+360|0;Fa=m+364|0;Da=m+80|0;Ba=m+72|0;Aa=m+24|0;hb=m+380|0;mb=m+384|0;nb=m+388|0;lb=m+120|0;ib=m+396|0;jb=m+400|0;k=m+1106|0;j=m+408|0;fb=m+412|0;eb=m+416|0;cb=m+420|0;db=m+424|0;ab=m+428|0;bb=m+432|0;$a=m+436|0;ob=m+440|0;pb=m+444|0;qb=m+448|0;xb=m+452|0;yb=m+456|0;vb=m+460|0;wb=m+464|0;kc=m+468|0;ub=m+472|0;Gb=m+476|0;Hb=m+480|0;Eb=m+484|0;Fb=m+488|0;Db=m+492|0;Jb=m+496|0;Nb=m+500|0;Ob=m+504|0;Lb=m+508|0;Mb=m+512|0;Kb=m+516|0;Qb=m+520|0;Ub=m+524|0;Vb=m+528|0;Sb=m+532|0;Tb=m+1052|0;Rb=m+1060|0;Xb=m+1068|0;ec=m+1076|0;dc=m+1084|0;bc=m+1092|0;cc=m+1096|0;ac=m+576|0;_b=m+1100|0;$b=m+584|0;Yb=m+588|0;Zb=m+1008|0;Cb=m+984|0;Bb=m+788|0;Ib=m+744|0;Pb=m+720|0;Wb=m+680|0;Ab=m+672|0;zb=m+668|0;ad=m+608|0;bd=m+620|0;cd=m+624|0;dd=m+628|0;$c=m+632|0;_c=m+636|0;Zc=m+640|0;xc=m+644|0;wc=m+648|0;vc=m+652|0;tc=m+656|0;uc=m+660|0;sc=m+664|0;rc=m+56|0;qc=m+368|0;pc=m+16|0;mc=m+372|0;nc=m+676|0;oc=m+376|0;rb=m+684|0;lc=m+688|0;gc=m+692|0;hc=m+696|0;ic=m+704|0;Xc=m+712|0;Yc=m+716|0;Wc=m+392|0;Vc=m+32|0;Uc=m+732|0;Sc=m;Qc=m+736|0;Rc=m+740|0;Oc=m+404|0;Pc=m+748|0;Mc=m+752|0;Lc=m+756|0;Kc=m+760|0;Jc=m+764|0;Ic=m+768|0;Hc=m+772|0;Gc=m+776|0;Nc=m+780|0;Fc=m+784|0;Ec=m+128|0;Dc=m+796|0;Bc=m+40|0;yc=m+800|0;zc=m+804|0;Ac=m+808|0;yd=m+812|0;zd=m+820|0;Ad=m+824|0;xd=m+828|0;td=m+836|0;ud=m+844|0;vd=m+848|0;sd=m+852|0;od=m+860|0;pd=m+868|0;qd=m+872|0;nd=m+876|0;ed=m+884|0;gd=m+892|0;fd=m+896|0;hd=m+900|0;jd=m+904|0;id=m+908|0;kd=m+912|0;ld=m+916|0;Bd=m+924|0;wd=m+928|0;rd=m+932|0;md=m+936|0;Cd=m+940|0;Dd=m+944|0;Fd=m+948|0;Ed=m+952|0;Hd=m+956|0;Id=m+960|0;z=m+964|0;C=m+968|0;G=m+972|0;E=m+976|0;s=m+980|0;p=m+136|0;r=m+988|0;l=m+992|0;gb=m+192|0;fc=m+152|0;Cc=m+340|0;Tc=m+1024|0;jc=m+1032|0;kb=m+204|0;tb=m+560|0;sb=m+216|0;v=m+336|0;y=m+1044|0;D=m+536|0;F=m+1048|0;T=m+540|0;fa=m+572|0;na=m+1004|0;va=m+240|0;Ca=m+1105|0;ha=m+188|0;c[z>>2]=b;c[C>>2]=d;c[G>>2]=e;c[E>>2]=f;c[s>>2]=g;h[p>>3]=0.0;c[r>>2]=1;c[Hd>>2]=l;c[Id>>2]=m+1107;d=c[Id>>2]|0;c[Fd>>2]=c[Hd>>2];c[Ed>>2]=d;ve(c[Fd>>2]|0,c[Ed>>2]|0);c[Dd>>2]=gb;c[Cd>>2]=c[Dd>>2];c[Bd>>2]=c[Cd>>2];d=c[Bd>>2]|0;c[m+920>>2]=d;c[zd>>2]=xd;c[Ad>>2]=-1;b=c[Ad>>2]|0;c[yd>>2]=c[zd>>2];c[m+816>>2]=b;c[c[yd>>2]>>2]=0;c[wd>>2]=c[xd>>2];c[m+832>>2]=wd;c[d>>2]=0;c[ud>>2]=sd;c[vd>>2]=-1;b=c[vd>>2]|0;c[td>>2]=c[ud>>2];c[m+840>>2]=b;c[c[td>>2]>>2]=0;c[rd>>2]=c[sd>>2];c[m+856>>2]=rd;c[d+4>>2]=0;c[pd>>2]=nd;c[qd>>2]=-1;b=c[qd>>2]|0;c[od>>2]=c[pd>>2];c[m+864>>2]=b;c[c[od>>2]>>2]=0;c[md>>2]=c[nd>>2];c[m+880>>2]=md;c[kd>>2]=d+8;c[ld>>2]=0;d=c[ld>>2]|0;c[jd>>2]=c[kd>>2];c[id>>2]=d;d=c[jd>>2]|0;c[hd>>2]=id;b=c[c[hd>>2]>>2]|0;c[gd>>2]=d;c[fd>>2]=b;b=c[gd>>2]|0;c[m+888>>2]=b;c[ed>>2]=fd;c[b>>2]=c[c[ed>>2]>>2];c[fc>>2]=0;while(1){if((c[fc>>2]|0)>=(c[E>>2]|0))break;Id=(c[G>>2]|0)+(c[fc>>2]<<2)|0;c[yc>>2]=l;c[zc>>2]=Id;Ne(Ac,c[yc>>2]|0,c[zc>>2]|0);a[Bc+0>>0]=a[Ac+0>>0]|0;a[Bc+1>>0]=a[Ac+1>>0]|0;a[Bc+2>>0]=a[Ac+2>>0]|0;a[Bc+3>>0]=a[Ac+3>>0]|0;c[Dc>>2]=Cc;Id=c[Dc>>2]|0;a[Ec+0>>0]=a[Bc+0>>0]|0;a[Ec+1>>0]=a[Bc+1>>0]|0;a[Ec+2>>0]=a[Bc+2>>0]|0;a[Ec+3>>0]=a[Bc+3>>0]|0;c[Fc>>2]=Id;c[c[Fc>>2]>>2]=c[Ec>>2];c[Gc>>2]=l;c[Hc>>2]=c[Gc>>2];c[Ic>>2]=c[Hc>>2];c[Jc>>2]=(c[Ic>>2]|0)+4;c[Kc>>2]=c[Jc>>2];c[Lc>>2]=c[Kc>>2];c[Mc>>2]=c[Lc>>2];Id=c[Mc>>2]|0;c[Oc>>2]=Nc;c[Pc>>2]=Id;Id=c[Pc>>2]|0;c[Qc>>2]=c[Oc>>2];c[Rc>>2]=Id;c[c[Qc>>2]>>2]=c[Rc>>2];a[Sc+0>>0]=a[Nc+0>>0]|0;a[Sc+1>>0]=a[Nc+1>>0]|0;a[Sc+2>>0]=a[Nc+2>>0]|0;a[Sc+3>>0]=a[Nc+3>>0]|0;c[Uc>>2]=Tc;Id=c[Uc>>2]|0;a[Vc+0>>0]=a[Sc+0>>0]|0;a[Vc+1>>0]=a[Sc+1>>0]|0;a[Vc+2>>0]=a[Sc+2>>0]|0;a[Vc+3>>0]=a[Sc+3>>0]|0;c[Wc>>2]=Id;c[c[Wc>>2]>>2]=c[Vc>>2];c[Xc>>2]=Cc;c[Yc>>2]=Tc;do if((c[c[Xc>>2]>>2]|0)==(c[c[Yc>>2]>>2]|0)){g=(c[G>>2]|0)+(c[fc>>2]<<2)|0;c[gc>>2]=l;c[hc>>2]=g;re(ic,c[gc>>2]|0,c[hc>>2]|0);c[rb>>2]=jc;c[lc>>2]=ic;g=c[lc>>2]|0;c[mc>>2]=c[rb>>2];c[nc>>2]=g;g=c[mc>>2]|0;Id=c[nc>>2]|0;c[oc+0>>2]=c[Id+0>>2];a[pc+0>>0]=a[oc+0>>0]|0;a[pc+1>>0]=a[oc+1>>0]|0;a[pc+2>>0]=a[oc+2>>0]|0;a[pc+3>>0]=a[oc+3>>0]|0;c[qc>>2]=g;Id=c[qc>>2]|0;a[rc+0>>0]=a[pc+0>>0]|0;a[rc+1>>0]=a[pc+1>>0]|0;a[rc+2>>0]=a[pc+2>>0]|0;a[rc+3>>0]=a[pc+3>>0]|0;c[sc>>2]=Id;c[c[sc>>2]>>2]=c[rc>>2];a[g+4>>0]=a[(c[nc>>2]|0)+4>>0]&1;g=(c[G>>2]|0)+(c[fc>>2]<<2)|0;c[tc>>2]=gb;c[uc>>2]=g;g=c[tc>>2]|0;Id=c[g+4>>2]|0;c[vc>>2]=g;c[wc>>2]=(c[vc>>2]|0)+8;c[xc>>2]=c[wc>>2];if((Id|0)==(c[c[xc>>2]>>2]|0)){Ng(g,c[uc>>2]|0);break}c[Zc>>2]=g;c[_c>>2]=(c[Zc>>2]|0)+8;c[$c>>2]=c[_c>>2];Hd=c[$c>>2]|0;c[ad>>2]=c[g+4>>2];Id=c[ad>>2]|0;f=c[uc>>2]|0;c[bd>>2]=Hd;c[cd>>2]=Id;c[dd>>2]=f;f=c[cd>>2]|0;if((f|0)!=0)c[f>>2]=c[c[dd>>2]>>2];Id=g+4|0;c[Id>>2]=(c[Id>>2]|0)+4}while(0);c[fc>>2]=(c[fc>>2]|0)+1}c[zb>>2]=kb;c[Ab>>2]=c[zb>>2];c[Bb>>2]=c[Ab>>2];Hd=c[Bb>>2]|0;c[Cb>>2]=Hd;c[Eb>>2]=Db;c[Fb>>2]=-1;Id=c[Fb>>2]|0;c[Gb>>2]=c[Eb>>2];c[Hb>>2]=Id;c[c[Gb>>2]>>2]=0;c[Ib>>2]=c[Db>>2];c[Jb>>2]=Ib;c[Hd>>2]=0;c[Lb>>2]=Kb;c[Mb>>2]=-1;Id=c[Mb>>2]|0;c[Nb>>2]=c[Lb>>2];c[Ob>>2]=Id;c[c[Nb>>2]>>2]=0;c[Pb>>2]=c[Kb>>2];c[Qb>>2]=Pb;c[Hd+4>>2]=0;c[Sb>>2]=Rb;c[Tb>>2]=-1;Id=c[Tb>>2]|0;c[Ub>>2]=c[Sb>>2];c[Vb>>2]=Id;c[c[Ub>>2]>>2]=0;c[Wb>>2]=c[Rb>>2];c[Xb>>2]=Wb;c[Yb>>2]=Hd+8;c[Zb>>2]=0;Hd=c[Zb>>2]|0;c[_b>>2]=c[Yb>>2];c[$b>>2]=Hd;Hd=c[_b>>2]|0;c[ac>>2]=$b;Id=c[c[ac>>2]>>2]|0;c[bc>>2]=Hd;c[cc>>2]=Id;Id=c[bc>>2]|0;c[dc>>2]=Id;c[ec>>2]=cc;c[Id>>2]=c[c[ec>>2]>>2];c[tb>>2]=0;while(1){Hd=c[tb>>2]|0;c[ub>>2]=gb;Id=c[ub>>2]|0;if(!(Hd>>>0<(((c[Id+4>>2]|0)-(c[Id>>2]|0)|0)/4|0)>>>0))break;c[sb>>2]=(c[tb>>2]|0)+1;while(1){Hd=c[sb>>2]|0;c[kc>>2]=gb;Id=c[kc>>2]|0;if(!(Hd>>>0<(((c[Id+4>>2]|0)-(c[Id>>2]|0)|0)/4|0)>>>0))break;Fd=c[z>>2]|0;Hd=c[C>>2]|0;Id=c[tb>>2]|0;c[vb>>2]=gb;c[wb>>2]=Id;Id=c[(c[c[vb>>2]>>2]|0)+(c[wb>>2]<<2)>>2]|0;Ed=c[sb>>2]|0;c[xb>>2]=gb;c[yb>>2]=Ed;Rf(Fd,Hd,Id,c[(c[c[xb>>2]>>2]|0)+(c[yb>>2]<<2)>>2]|0,kb);c[sb>>2]=(c[sb>>2]|0)+1}c[tb>>2]=(c[tb>>2]|0)+1}a:while(1){c[q>>2]=gb;Id=c[q>>2]|0;if(!((((c[Id+4>>2]|0)-(c[Id>>2]|0)|0)/4|0)>>>0>(c[r>>2]|0)>>>0))break;c[n>>2]=kb;c[o>>2]=0;if(+h[(c[c[n>>2]>>2]|0)+(c[o>>2]<<5)+24>>3]>=+h[p>>3]){h[p>>3]=1.0e+99;c[r>>2]=c[s>>2];continue}c[t>>2]=kb;c[u>>2]=0;c[v>>2]=c[(c[c[t>>2]>>2]|0)+(c[u>>2]<<5)>>2];c[w>>2]=kb;c[x>>2]=0;c[y>>2]=c[(c[c[w>>2]>>2]|0)+(c[x>>2]<<5)+4>>2];Qf((c[z>>2]|0)+((c[v>>2]|0)*2832|0)|0,(c[z>>2]|0)+((c[y>>2]|0)*2832|0)|0);c[A>>2]=kb;c[B>>2]=0;h[(c[z>>2]|0)+((c[v>>2]|0)*2832|0)+2824>>3]=+h[(c[c[A>>2]>>2]|0)+(c[B>>2]<<5)+16>>3];Id=(c[C>>2]|0)+(c[v>>2]<<2)|0;c[Id>>2]=(c[Id>>2]|0)+(c[(c[C>>2]|0)+(c[y>>2]<<2)>>2]|0);c[D>>2]=0;while(1){if((c[D>>2]|0)>=(c[E>>2]|0))break;if((c[(c[G>>2]|0)+(c[D>>2]<<2)>>2]|0)==(c[y>>2]|0))c[(c[G>>2]|0)+(c[D>>2]<<2)>>2]=c[v>>2];c[D>>2]=(c[D>>2]|0)+1}c[F>>2]=0;while(1){Hd=(c[F>>2]|0)+1|0;c[H>>2]=gb;Id=c[H>>2]|0;if(!(Hd>>>0<(((c[Id+4>>2]|0)-(c[Id>>2]|0)|0)/4|0)>>>0))break;Id=c[F>>2]|0;c[N>>2]=gb;c[O>>2]=Id;if((c[(c[c[N>>2]>>2]|0)+(c[O>>2]<<2)>>2]|0)>=(c[y>>2]|0)){Id=(c[F>>2]|0)+1|0;c[P>>2]=gb;c[Q>>2]=Id;Id=c[(c[c[P>>2]>>2]|0)+(c[Q>>2]<<2)>>2]|0;Hd=c[F>>2]|0;c[R>>2]=gb;c[S>>2]=Hd;c[(c[c[R>>2]>>2]|0)+(c[S>>2]<<2)>>2]=Id}c[F>>2]=(c[F>>2]|0)+1}c[I>>2]=gb;Id=c[I>>2]|0;rb=(c[Id+4>>2]|0)+ -4|0;c[J>>2]=Id;c[K>>2]=rb;rb=c[K>>2]|0;c[L>>2]=c[J>>2];c[M>>2]=rb;rb=c[L>>2]|0;while(1){if((c[M>>2]|0)==(c[rb+4>>2]|0))break;c[U>>2]=rb;c[V>>2]=(c[U>>2]|0)+8;c[W>>2]=c[V>>2];Id=c[W>>2]|0;Fd=rb+4|0;Hd=(c[Fd>>2]|0)+ -4|0;c[Fd>>2]=Hd;c[X>>2]=Hd;Hd=c[X>>2]|0;c[Y>>2]=Id;c[Z>>2]=Hd;Hd=c[Y>>2]|0;Id=c[Z>>2]|0;a[$+0>>0]=a[_+0>>0]|0;c[aa>>2]=Hd;c[ba>>2]=Id}c[T>>2]=0;while(1){Hd=c[T>>2]|0;c[ca>>2]=kb;Id=c[ca>>2]|0;if(!(Hd>>>0<(((c[Id+4>>2]|0)-(c[Id>>2]|0)|0)/32|0)>>>0))break;Id=c[T>>2]|0;c[da>>2]=kb;c[ea>>2]=Id;c[fa>>2]=(c[c[da>>2]>>2]|0)+(c[ea>>2]<<5);if(!((((c[c[fa>>2]>>2]|0)!=(c[v>>2]|0)?(c[(c[fa>>2]|0)+4>>2]|0)!=(c[v>>2]|0):0)?(c[c[fa>>2]>>2]|0)!=(c[y>>2]|0):0)?(c[(c[fa>>2]|0)+4>>2]|0)!=(c[y>>2]|0):0))a[(c[fa>>2]|0)+8>>0]=0;c[T>>2]=(c[T>>2]|0)+1}b:while(1){c[ga>>2]=kb;Id=c[ga>>2]|0;if((c[Id>>2]|0)==(c[Id+4>>2]|0))break;c[ia>>2]=kb;c[ja>>2]=0;if(!(a[(c[c[ia>>2]>>2]|0)+(c[ja>>2]<<5)+8>>0]&1^1))break;c[ka>>2]=kb;Id=c[ka>>2]|0;Hd=c[Id>>2]|0;c[la>>2]=Id;c[ma>>2]=Hd;Hd=c[ma>>2]|0;c[oa>>2]=na;c[pa>>2]=Hd;Hd=c[pa>>2]|0;c[qa>>2]=c[oa>>2];c[ra>>2]=Hd;c[c[qa>>2]>>2]=c[ra>>2];c[sa>>2]=kb;Hd=c[sa>>2]|0;Id=c[Hd+4>>2]|0;c[ta>>2]=Hd;c[ua>>2]=Id;Id=c[ua>>2]|0;c[wa>>2]=va;c[xa>>2]=Id;Id=c[xa>>2]|0;c[ya>>2]=c[wa>>2];c[za>>2]=Id;c[c[ya>>2]>>2]=c[za>>2];a[Aa+0>>0]=a[na+0>>0]|0;a[Aa+1>>0]=a[na+1>>0]|0;a[Aa+2>>0]=a[na+2>>0]|0;a[Aa+3>>0]=a[na+3>>0]|0;a[Ba+0>>0]=a[va+0>>0]|0;a[Ba+1>>0]=a[va+1>>0]|0;a[Ba+2>>0]=a[va+2>>0]|0;a[Ba+3>>0]=a[va+3>>0]|0;a[Da+0>>0]=a[Ca+0>>0]|0;c[Ea+0>>2]=c[Aa+0>>2];c[Fa+0>>2]=c[Ba+0>>2];c[Ga>>2]=Ba;c[Ha>>2]=Aa;c[Ia>>2]=c[Ga>>2];Id=c[c[Ia>>2]>>2]|0;c[Ja>>2]=c[Ha>>2];Id=(Id-(c[c[Ja>>2]>>2]|0)|0)/32|0;a[Ka+0>>0]=a[Ea+0>>0]|0;a[Ka+1>>0]=a[Ea+1>>0]|0;a[Ka+2>>0]=a[Ea+2>>0]|0;a[Ka+3>>0]=a[Ea+3>>0]|0;a[La+0>>0]=a[Fa+0>>0]|0;a[La+1>>0]=a[Fa+1>>0]|0;a[La+2>>0]=a[Fa+2>>0]|0;a[La+3>>0]=a[Fa+3>>0]|0;c[Ma>>2]=Da;c[Na>>2]=Id;if((c[Na>>2]|0)>1){c[Oa>>2]=Ka;Id=c[c[Oa>>2]>>2]|0;c[Pa>>2]=La;Hd=c[Pa>>2]|0;c[Hd>>2]=(c[Hd>>2]|0)+ -32;c[Qa>>2]=Hd;Hd=c[c[Qa>>2]>>2]|0;c[Ra>>2]=Id;c[Sa>>2]=Hd;c[Ta>>2]=c[Ra>>2];Hd=c[Ta>>2]|0;c[Ua+0>>2]=c[Hd+0>>2];c[Ua+4>>2]=c[Hd+4>>2];c[Ua+8>>2]=c[Hd+8>>2];c[Ua+12>>2]=c[Hd+12>>2];c[Ua+16>>2]=c[Hd+16>>2];c[Ua+20>>2]=c[Hd+20>>2];c[Ua+24>>2]=c[Hd+24>>2];c[Ua+28>>2]=c[Hd+28>>2];Hd=c[Ra>>2]|0;c[Va>>2]=c[Sa>>2];Id=c[Va>>2]|0;c[Hd+0>>2]=c[Id+0>>2];c[Hd+4>>2]=c[Id+4>>2];c[Hd+8>>2]=c[Id+8>>2];c[Hd+12>>2]=c[Id+12>>2];c[Hd+16>>2]=c[Id+16>>2];c[Hd+20>>2]=c[Id+20>>2];c[Hd+24>>2]=c[Id+24>>2];c[Hd+28>>2]=c[Id+28>>2];Hd=c[Sa>>2]|0;c[Wa>>2]=Ua;Id=c[Wa>>2]|0;c[Hd+0>>2]=c[Id+0>>2];c[Hd+4>>2]=c[Id+4>>2];c[Hd+8>>2]=c[Id+8>>2];c[Hd+12>>2]=c[Id+12>>2];c[Hd+16>>2]=c[Id+16>>2];c[Hd+20>>2]=c[Id+20>>2];c[Hd+24>>2]=c[Id+24>>2];c[Hd+28>>2]=c[Id+28>>2];c[Xa+0>>2]=c[Ka+0>>2];c[Ya+0>>2]=c[La+0>>2];Hd=c[Ma>>2]|0;Id=(c[Na>>2]|0)-1|0;c[Za+0>>2]=c[Xa+0>>2];c[_a+0>>2]=c[Ya+0>>2];Be(Za,_a,Hd,Id)}c[$a>>2]=kb;Id=c[$a>>2]|0;rb=(c[Id+4>>2]|0)+ -32|0;c[ab>>2]=Id;c[bb>>2]=rb;rb=c[bb>>2]|0;c[cb>>2]=c[ab>>2];c[db>>2]=rb;rb=c[cb>>2]|0;while(1){if((c[db>>2]|0)==(c[rb+4>>2]|0))continue b;c[eb>>2]=rb;c[fb>>2]=(c[eb>>2]|0)+8;c[j>>2]=c[fb>>2];Id=c[j>>2]|0;Fd=rb+4|0;Hd=(c[Fd>>2]|0)+ -32|0;c[Fd>>2]=Hd;c[hb>>2]=Hd;Hd=c[hb>>2]|0;c[ib>>2]=Id;c[jb>>2]=Hd;Hd=c[ib>>2]|0;Id=c[jb>>2]|0;a[lb+0>>0]=a[k+0>>0]|0;c[mb>>2]=Hd;c[nb>>2]=Id}}c[ha>>2]=0;while(1){Hd=c[ha>>2]|0;c[ob>>2]=gb;Id=c[ob>>2]|0;if(!(Hd>>>0<(((c[Id+4>>2]|0)-(c[Id>>2]|0)|0)/4|0)>>>0))continue a;Fd=c[z>>2]|0;Hd=c[C>>2]|0;Id=c[v>>2]|0;Ed=c[ha>>2]|0;c[pb>>2]=gb;c[qb>>2]=Ed;Rf(Fd,Hd,Id,c[(c[c[pb>>2]>>2]|0)+(c[qb>>2]<<2)>>2]|0,kb);c[ha>>2]=(c[ha>>2]|0)+1}}ye(kb);Gd(gb);le(l);i=m;return}function If(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0;Y=i;i=i+480|0;C=Y+432|0;B=Y+16|0;A=Y+200|0;y=Y+32|0;w=Y+304|0;x=Y+372|0;u=Y+360|0;v=Y+312|0;s=Y+196|0;r=Y+256|0;q=Y+128|0;p=Y+120|0;o=Y+444|0;n=Y+104|0;m=Y+100|0;t=Y+412|0;G=Y+96|0;H=Y+416|0;E=Y+236|0;F=Y+436|0;I=Y+112|0;W=Y+116|0;V=Y+72|0;U=Y+124|0;T=Y+8|0;R=Y+132|0;S=Y+136|0;P=Y+404|0;Q=Y+140|0;N=Y+144|0;M=Y+148|0;L=Y+152|0;O=Y+156|0;La=Y+160|0;Ka=Y+164|0;K=Y+168|0;Ia=Y+172|0;pa=Y+176|0;qa=Y+180|0;na=Y+184|0;oa=Y+188|0;la=Y+192|0;ka=Y+24|0;ja=Y+400|0;ha=Y+40|0;fa=Y+204|0;ga=Y+208|0;da=Y+212|0;j=Y+216|0;ba=Y+220|0;aa=Y+468|0;$=Y+472|0;_=Y+440|0;Z=Y+448|0;g=Y+240|0;X=Y+244|0;ca=Y+248|0;Ga=Y+252|0;Fa=Y+48|0;Ea=Y+260|0;Da=Y;Ba=Y+268|0;Ca=Y+272|0;za=Y+276|0;Aa=Y+280|0;xa=Y+284|0;wa=Y+288|0;va=Y+292|0;ya=Y+296|0;Za=Y+300|0;Ya=Y+80|0;Xa=Y+308|0;Wa=Y+64|0;Ta=Y+316|0;Ua=Y+320|0;Va=Y+396|0;Ra=Y+324|0;Sa=Y+328|0;Na=Y+332|0;Oa=Y+336|0;Pa=Y+344|0;$a=Y+352|0;_a=Y+356|0;ab=Y+452|0;bb=Y+364|0;sa=Y+460|0;l=Y+464|0;J=Y+376|0;Ha=Y+380|0;ea=Y+384|0;Ma=Y+408|0;Qa=Y+424|0;ta=Y+228|0;ra=Y+232|0;ua=Y+88|0;ma=Y+456|0;ia=Y+264|0;Ja=Y+56|0;D=Y+368|0;z=Y+224|0;k=Y+108|0;c[sa>>2]=b;c[l>>2]=d;c[J>>2]=e;c[Ha>>2]=f;c[ab>>2]=ea;c[bb>>2]=Y+476;b=c[bb>>2]|0;c[$a>>2]=c[ab>>2];c[_a>>2]=b;ve(c[$a>>2]|0,c[_a>>2]|0);c[Ma>>2]=0;while(1){if((c[Ma>>2]|0)>=(c[l>>2]|0))break;bb=(c[Ha>>2]|0)+(c[Ma>>2]<<2)|0;c[Na>>2]=ea;c[Oa>>2]=bb;re(Pa,c[Na>>2]|0,c[Oa>>2]|0);c[Ra>>2]=Qa;c[Sa>>2]=Pa;bb=c[Sa>>2]|0;c[Ta>>2]=c[Ra>>2];c[Ua>>2]=bb;bb=c[Ta>>2]|0;ab=c[Ua>>2]|0;c[Va+0>>2]=c[ab+0>>2];a[Wa+0>>0]=a[Va+0>>0]|0;a[Wa+1>>0]=a[Va+1>>0]|0;a[Wa+2>>0]=a[Va+2>>0]|0;a[Wa+3>>0]=a[Va+3>>0]|0;c[Xa>>2]=bb;ab=c[Xa>>2]|0;a[Ya+0>>0]=a[Wa+0>>0]|0;a[Ya+1>>0]=a[Wa+1>>0]|0;a[Ya+2>>0]=a[Wa+2>>0]|0;a[Ya+3>>0]=a[Wa+3>>0]|0;c[Za>>2]=ab;c[c[Za>>2]>>2]=c[Ya>>2];a[bb+4>>0]=a[(c[Ua>>2]|0)+4>>0]&1;c[Ma>>2]=(c[Ma>>2]|0)+1}c[ta>>2]=0;while(1){if((c[ta>>2]|0)>=(c[l>>2]|0))break;if((c[ta>>2]|0)==0)f=c[c[Ha>>2]>>2]|0;else f=c[(c[Ha>>2]|0)+((c[ta>>2]|0)-1<<2)>>2]|0;c[ra>>2]=f;h[ua>>3]=+Pf((c[sa>>2]|0)+((c[ta>>2]|0)*2832|0)|0,(c[J>>2]|0)+((c[ra>>2]|0)*2832|0)|0);c[va>>2]=ea;c[wa>>2]=c[va>>2];c[xa>>2]=c[wa>>2];bb=c[c[xa>>2]>>2]|0;c[za>>2]=ya;c[Aa>>2]=bb;bb=c[Aa>>2]|0;c[Ba>>2]=c[za>>2];c[Ca>>2]=bb;c[c[Ba>>2]>>2]=c[Ca>>2];a[Da+0>>0]=a[ya+0>>0]|0;a[Da+1>>0]=a[ya+1>>0]|0;a[Da+2>>0]=a[ya+2>>0]|0;a[Da+3>>0]=a[ya+3>>0]|0;c[Ea>>2]=ma;bb=c[Ea>>2]|0;a[Fa+0>>0]=a[Da+0>>0]|0;a[Fa+1>>0]=a[Da+1>>0]|0;a[Fa+2>>0]=a[Da+2>>0]|0;a[Fa+3>>0]=a[Da+3>>0]|0;c[Ga>>2]=bb;c[c[Ga>>2]>>2]=c[Fa>>2];while(1){c[X>>2]=ea;c[g>>2]=c[X>>2];c[Z>>2]=c[g>>2];c[_>>2]=(c[Z>>2]|0)+4;c[$>>2]=c[_>>2];c[aa>>2]=c[$>>2];c[ba>>2]=c[aa>>2];bb=c[ba>>2]|0;c[da>>2]=ca;c[j>>2]=bb;bb=c[j>>2]|0;c[fa>>2]=c[da>>2];c[ga>>2]=bb;c[c[fa>>2]>>2]=c[ga>>2];a[ha+0>>0]=a[ca+0>>0]|0;a[ha+1>>0]=a[ca+1>>0]|0;a[ha+2>>0]=a[ca+2>>0]|0;a[ha+3>>0]=a[ca+3>>0]|0;c[ja>>2]=ia;bb=c[ja>>2]|0;a[ka+0>>0]=a[ha+0>>0]|0;a[ka+1>>0]=a[ha+1>>0]|0;a[ka+2>>0]=a[ha+2>>0]|0;a[ka+3>>0]=a[ha+3>>0]|0;c[la>>2]=bb;c[c[la>>2]>>2]=c[ka>>2];c[na>>2]=ma;c[oa>>2]=ia;bb=c[oa>>2]|0;c[pa>>2]=c[na>>2];c[qa>>2]=bb;if(!((c[c[pa>>2]>>2]|0)==(c[c[qa>>2]>>2]|0)^1))break;bb=(c[sa>>2]|0)+((c[ta>>2]|0)*2832|0)|0;c[Ia>>2]=ma;h[Ja>>3]=+Pf(bb,(c[J>>2]|0)+((c[(c[c[Ia>>2]>>2]|0)+16>>2]|0)*2832|0)|0);if(+h[Ja>>3]<+h[ua>>3]){h[ua>>3]=+h[Ja>>3];c[Ka>>2]=ma;c[ra>>2]=c[(c[c[Ka>>2]>>2]|0)+16>>2]}c[La>>2]=ma;bb=c[La>>2]|0;c[bb>>2]=qe(c[bb>>2]|0)|0}c[(c[Ha>>2]|0)+(c[ta>>2]<<2)>>2]=c[ra>>2];c[ta>>2]=(c[ta>>2]|0)+1}c[L>>2]=ea;c[M>>2]=c[L>>2];c[N>>2]=c[M>>2];bb=c[c[N>>2]>>2]|0;c[P>>2]=O;c[Q>>2]=bb;bb=c[Q>>2]|0;c[R>>2]=c[P>>2];c[S>>2]=bb;c[c[R>>2]>>2]=c[S>>2];a[T+0>>0]=a[O+0>>0]|0;a[T+1>>0]=a[O+1>>0]|0;a[T+2>>0]=a[O+2>>0]|0;a[T+3>>0]=a[O+3>>0]|0;c[U>>2]=D;bb=c[U>>2]|0;a[V+0>>0]=a[T+0>>0]|0;a[V+1>>0]=a[T+1>>0]|0;a[V+2>>0]=a[T+2>>0]|0;a[V+3>>0]=a[T+3>>0]|0;c[W>>2]=bb;c[c[W>>2]>>2]=c[V>>2];while(1){c[m>>2]=ea;c[n>>2]=c[m>>2];c[o>>2]=c[n>>2];c[p>>2]=(c[o>>2]|0)+4;c[q>>2]=c[p>>2];c[r>>2]=c[q>>2];c[s>>2]=c[r>>2];bb=c[s>>2]|0;c[u>>2]=t;c[v>>2]=bb;bb=c[v>>2]|0;c[w>>2]=c[u>>2];c[x>>2]=bb;c[c[w>>2]>>2]=c[x>>2];a[y+0>>0]=a[t+0>>0]|0;a[y+1>>0]=a[t+1>>0]|0;a[y+2>>0]=a[t+2>>0]|0;a[y+3>>0]=a[t+3>>0]|0;c[A>>2]=z;bb=c[A>>2]|0;a[B+0>>0]=a[y+0>>0]|0;a[B+1>>0]=a[y+1>>0]|0;a[B+2>>0]=a[y+2>>0]|0;a[B+3>>0]=a[y+3>>0]|0;c[C>>2]=bb;c[c[C>>2]>>2]=c[B>>2];c[E>>2]=D;c[F>>2]=z;bb=c[F>>2]|0;c[G>>2]=c[E>>2];c[H>>2]=bb;if(!((c[c[G>>2]>>2]|0)==(c[c[H>>2]>>2]|0)^1))break;c[I>>2]=D;Df((c[J>>2]|0)+((c[(c[c[I>>2]>>2]|0)+16>>2]|0)*2832|0)|0);c[K>>2]=D;bb=c[K>>2]|0;c[bb>>2]=qe(c[bb>>2]|0)|0}c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[l>>2]|0))break;Qf((c[J>>2]|0)+((c[(c[Ha>>2]|0)+(c[k>>2]<<2)>>2]|0)*2832|0)|0,(c[sa>>2]|0)+((c[k>>2]|0)*2832|0)|0);c[k>>2]=(c[k>>2]|0)+1}le(ea);i=Y;return}function Jf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0;g=i;i=i+288|0;y=g+176|0;z=g+88|0;w=g+208|0;x=g+60|0;k=g+232|0;l=g+148|0;m=g+256|0;u=g+196|0;v=g+156|0;n=g+84|0;o=g+64|0;s=g+68|0;t=g+72|0;ba=g+76|0;ca=g+80|0;$=g+180|0;aa=g+164|0;_=g+96|0;Z=g+32|0;Y=g+100|0;W=g+24|0;U=g+108|0;V=g+112|0;S=g+116|0;T=g+120|0;Q=g+236|0;P=g+128|0;O=g+252|0;N=g+260|0;M=g+268|0;L=g+152|0;K=g+272|0;R=g+244|0;J=g+160|0;I=g+8|0;H=g+172|0;e=g;C=g+92|0;D=g+184|0;E=g+188|0;A=g+192|0;B=g+104|0;da=g+200|0;fa=g+204|0;ga=g+16|0;ia=g+212|0;ha=g+40|0;ka=g+220|0;ea=g+276|0;ja=g+277|0;la=g+216|0;ma=g+124|0;p=g+168|0;j=g+240|0;f=g+44|0;F=g+132|0;q=g+144|0;r=g+264|0;G=g+248|0;X=g+56|0;h=g+228|0;c[p>>2]=b;c[j>>2]=d;Kf(f,c[p>>2]|0);c[la>>2]=F;c[ma>>2]=g+278;b=c[ma>>2]|0;c[ka>>2]=c[la>>2];c[g+224>>2]=b;b=c[ka>>2]|0;a[ha+0>>0]=a[ja+0>>0]|0;c[ia>>2]=ea;d=c[ia>>2]|0;a[ga+0>>0]=a[ha+0>>0]|0;c[fa>>2]=d;de(b,ea);c[q>>2]=0;c[r>>2]=0;while(1){la=c[r>>2]|0;c[da>>2]=c[j>>2];ma=c[da>>2]|0;if(!(la>>>0<(((c[ma+4>>2]|0)-(c[ma>>2]|0)|0)/4|0)>>>0))break;ma=c[r>>2]|0;c[A>>2]=c[j>>2];c[B>>2]=ma;ma=(c[c[A>>2]>>2]|0)+(c[B>>2]<<2)|0;c[C>>2]=F;c[D>>2]=ma;be(E,c[C>>2]|0,c[D>>2]|0);a[e+0>>0]=a[E+0>>0]|0;a[e+1>>0]=a[E+1>>0]|0;a[e+2>>0]=a[E+2>>0]|0;a[e+3>>0]=a[E+3>>0]|0;c[H>>2]=G;ma=c[H>>2]|0;a[I+0>>0]=a[e+0>>0]|0;a[I+1>>0]=a[e+1>>0]|0;a[I+2>>0]=a[e+2>>0]|0;a[I+3>>0]=a[e+3>>0]|0;c[J>>2]=ma;ma=c[J>>2]|0;c[ma+0>>2]=c[I+0>>2];c[K>>2]=F;c[L>>2]=c[K>>2];c[M>>2]=c[L>>2];c[N>>2]=(c[M>>2]|0)+4;c[O>>2]=c[N>>2];c[P>>2]=c[O>>2];c[Q>>2]=c[P>>2];ma=c[Q>>2]|0;c[S>>2]=R;c[T>>2]=ma;ma=c[T>>2]|0;c[U>>2]=c[S>>2];c[V>>2]=ma;c[c[U>>2]>>2]=c[V>>2];a[W+0>>0]=a[R+0>>0]|0;a[W+1>>0]=a[R+1>>0]|0;a[W+2>>0]=a[R+2>>0]|0;a[W+3>>0]=a[R+3>>0]|0;c[Y>>2]=X;ma=c[Y>>2]|0;a[Z+0>>0]=a[W+0>>0]|0;a[Z+1>>0]=a[W+1>>0]|0;a[Z+2>>0]=a[W+2>>0]|0;a[Z+3>>0]=a[W+3>>0]|0;c[_>>2]=ma;ma=c[_>>2]|0;c[ma+0>>2]=c[Z+0>>2];c[$>>2]=G;c[aa>>2]=X;ma=c[aa>>2]|0;c[ba>>2]=c[$>>2];c[ca>>2]=ma;if((c[c[ba>>2]>>2]|0)==(c[c[ca>>2]>>2]|0)){ma=c[q>>2]|0;la=c[r>>2]|0;c[s>>2]=c[j>>2];c[t>>2]=la;c[(Rd(F,(c[c[s>>2]>>2]|0)+(c[t>>2]<<2)|0)|0)>>2]=ma;ma=c[q>>2]|0;c[u>>2]=c[p>>2];c[v>>2]=ma;ma=(c[c[u>>2]>>2]|0)+((c[v>>2]|0)*2832|0)|0;la=c[r>>2]|0;c[w>>2]=c[j>>2];c[x>>2]=la;la=c[(c[c[w>>2]>>2]|0)+(c[x>>2]<<2)>>2]|0;c[y>>2]=f;c[z>>2]=la;By(ma|0,(c[c[y>>2]>>2]|0)+((c[z>>2]|0)*2832|0)|0,2832)|0;c[q>>2]=(c[q>>2]|0)+1}c[r>>2]=(c[r>>2]|0)+1}Ff(c[p>>2]|0,c[q>>2]|0);c[h>>2]=0;while(1){la=c[h>>2]|0;c[k>>2]=c[j>>2];ma=c[k>>2]|0;if(!(la>>>0<(((c[ma+4>>2]|0)-(c[ma>>2]|0)|0)/4|0)>>>0))break;ma=c[h>>2]|0;c[l>>2]=c[j>>2];c[m>>2]=ma;ma=c[(Rd(F,(c[c[l>>2]>>2]|0)+(c[m>>2]<<2)|0)|0)>>2]|0;la=c[h>>2]|0;c[n>>2]=c[j>>2];c[o>>2]=la;c[(c[c[n>>2]>>2]|0)+(c[o>>2]<<2)>>2]=ma;c[h>>2]=(c[h>>2]|0)+1}Sd(F);yf(f);i=g;return}function Kf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;Lf(c[f>>2]|0,c[e>>2]|0);i=d;return}function Lf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;e=i;i=i+208|0;h=e+96|0;P=e+80|0;Q=e+76|0;S=e+176|0;R=e+184|0;O=e+36|0;M=e+156|0;I=e+144|0;J=e+92|0;L=e+60|0;K=e+56|0;H=e+40|0;F=e+44|0;B=e+48|0;C=e+52|0;E=e+140|0;D=e+116|0;A=e+88|0;y=e+72|0;q=e+164|0;j=e+172|0;l=e+180|0;n=e+188|0;k=e+192|0;m=e+16|0;s=e+196|0;o=e+100|0;t=e+104|0;p=e+200|0;r=e+8|0;u=e+112|0;w=e+136|0;v=e+24|0;T=e+120|0;U=e+124|0;V=e+128|0;N=e+132|0;G=e+32|0;z=e+64|0;x=e+202|0;X=e+148|0;Y=e;_=e+160|0;Z=e+203|0;$=e+152|0;aa=e+28|0;ba=e+84|0;ca=e+68|0;g=e+168|0;W=e+201|0;f=e+108|0;c[ca>>2]=b;c[g>>2]=d;d=c[ca>>2]|0;c[ba>>2]=c[g>>2];c[aa>>2]=(c[ba>>2]|0)+8;c[$>>2]=c[aa>>2];c[_>>2]=c[$>>2];b=c[_>>2]|0;a[Y+0>>0]=a[Z+0>>0]|0;c[X>>2]=b;c[U>>2]=d;c[V>>2]=W;b=c[U>>2]|0;c[T>>2]=b;c[S>>2]=O;c[R>>2]=-1;R=c[R>>2]|0;c[P>>2]=c[S>>2];c[Q>>2]=R;c[c[P>>2]>>2]=0;c[N>>2]=c[O>>2];c[M>>2]=N;c[b>>2]=0;c[L>>2]=H;c[K>>2]=-1;K=c[K>>2]|0;c[I>>2]=c[L>>2];c[J>>2]=K;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[F>>2]=G;c[b+4>>2]=0;b=b+8|0;c[E>>2]=A;c[D>>2]=-1;D=c[D>>2]|0;c[B>>2]=c[E>>2];c[C>>2]=D;c[c[B>>2]>>2]=0;c[z>>2]=c[A>>2];c[y>>2]=z;a[v+0>>0]=a[x+0>>0]|0;c[u>>2]=b;c[w>>2]=0;u=c[u>>2]|0;b=c[w>>2]|0;a[r+0>>0]=a[v+0>>0]|0;c[o>>2]=u;c[t>>2]=b;o=c[o>>2]|0;c[s>>2]=t;b=c[c[s>>2]>>2]|0;c[q>>2]=r;a[m+0>>0]=a[p+0>>0]|0;c[n>>2]=o;c[k>>2]=b;b=c[n>>2]|0;c[l>>2]=m;c[j>>2]=k;c[b>>2]=c[c[j>>2]>>2];c[h>>2]=c[g>>2];b=c[h>>2]|0;c[f>>2]=((c[b+4>>2]|0)-(c[b>>2]|0)|0)/2832|0;if(!((c[f>>2]|0)>>>0>0)){i=e;return}Mf(d,c[f>>2]|0);Nf(d,c[c[g>>2]>>2]|0,c[(c[g>>2]|0)+4>>2]|0);i=e;return}function Mf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;k=i;i=i+64|0;d=k+36|0;e=k+8|0;l=k+32|0;j=k+40|0;f=k+48|0;g=k+16|0;m=k;n=k+24|0;o=k+4|0;p=k+28|0;h=k+20|0;c[p>>2]=a;c[h>>2]=b;b=c[p>>2]|0;a=c[h>>2]|0;if(a>>>0>(Of(b)|0)>>>0)ht(b);else{c[o>>2]=b;c[n>>2]=(c[o>>2]|0)+8;c[m>>2]=c[n>>2];p=c[h>>2]|0;c[e>>2]=c[m>>2];c[l>>2]=p;p=c[l>>2]|0;c[k+44>>2]=c[e>>2];c[d>>2]=p;c[k+12>>2]=0;p=Qw((c[d>>2]|0)*2832|0)|0;c[b+4>>2]=p;c[b>>2]=p;p=(c[b>>2]|0)+((c[h>>2]|0)*2832|0)|0;c[g>>2]=b;c[f>>2]=(c[g>>2]|0)+8;c[j>>2]=c[f>>2];c[c[j>>2]>>2]=p;i=k;return}}function Nf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;k=i;i=i+48|0;g=k+36|0;j=k+16|0;e=k;l=k+28|0;n=k+32|0;o=k+40|0;p=k+12|0;q=k+24|0;h=k+20|0;m=k+8|0;f=k+4|0;c[q>>2]=a;c[h>>2]=b;c[m>>2]=d;d=c[q>>2]|0;c[p>>2]=d;c[o>>2]=(c[p>>2]|0)+8;c[n>>2]=c[o>>2];c[f>>2]=c[n>>2];while(1){if((c[h>>2]|0)==(c[m>>2]|0))break;p=c[f>>2]|0;c[g>>2]=c[d+4>>2];q=c[g>>2]|0;b=c[h>>2]|0;c[j>>2]=p;c[e>>2]=q;c[l>>2]=b;b=c[e>>2]|0;if((b|0)!=0)By(b|0,c[l>>2]|0,2832)|0;q=d+4|0;c[q>>2]=(c[q>>2]|0)+2832;c[h>>2]=(c[h>>2]|0)+2832}i=k;return}function Of(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+80|0;q=h+44|0;r=h+40|0;s=h+8|0;u=h+12|0;t=h+76|0;k=h+36|0;g=h+16|0;f=h+20|0;d=h+68|0;e=h+32|0;l=h;n=h+48|0;j=h+52|0;m=h+77|0;v=h+60|0;w=h+64|0;x=h+28|0;y=h+24|0;p=h+56|0;o=h+72|0;c[y>>2]=b;c[x>>2]=c[y>>2];c[w>>2]=(c[x>>2]|0)+8;c[v>>2]=c[w>>2];c[u>>2]=c[v>>2];b=c[u>>2]|0;a[s+0>>0]=a[t+0>>0]|0;c[r>>2]=b;c[q>>2]=c[r>>2];c[p>>2]=1516584;c[o>>2]=4294967295/2|0;c[n>>2]=p;c[j>>2]=o;b=c[n>>2]|0;j=c[j>>2]|0;a[l+0>>0]=a[m+0>>0]|0;c[d>>2]=b;c[e>>2]=j;j=c[e>>2]|0;b=c[d>>2]|0;c[k>>2]=l;c[g>>2]=j;c[f>>2]=b;i=h;return c[((c[c[g>>2]>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0?c[e>>2]|0:c[d>>2]|0)>>2]|0}function Pf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0.0;d=i;i=i+2848|0;e=d+2832|0;j=d+2844|0;f=d+2840|0;g=d;c[j>>2]=a;c[f>>2]=b;if((c[(c[j>>2]|0)+2816>>2]|0)==0){h[e>>3]=0.0;k=+h[e>>3];i=d;return+k}else{By(g|0,c[j>>2]|0,2832)|0;Qf(g,c[f>>2]|0);k=+Gf(g);h[e>>3]=k- +h[(c[f>>2]|0)+2824>>3];k=+h[e>>3];i=d;return+k}return 0.0}function Qf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;g=d+8|0;f=d+4|0;e=d;c[g>>2]=a;c[f>>2]=b;b=c[g>>2]|0;a=b+2816|0;c[a>>2]=(c[a>>2]|0)+(c[(c[f>>2]|0)+2816>>2]|0);c[e>>2]=0;while(1){if((c[e>>2]|0)>=704)break;g=b+(c[e>>2]<<2)|0;c[g>>2]=(c[g>>2]|0)+(c[(c[f>>2]|0)+(c[e>>2]<<2)>>2]|0);c[e>>2]=(c[e>>2]|0)+1}i=d;return}function Rf(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0.0;M=i;i=i+3136|0;k=M+3060|0;l=M+3100|0;ra=M+3008|0;ga=M+3092|0;qa=M+3e3|0;na=M+3068|0;oa=M+3064|0;ma=M+2872|0;ja=M+3124|0;ka=M+3116|0;fa=M+3129|0;R=M+3084|0;T=M+3004|0;U=M+3016|0;r=M+3012|0;Q=M+2940|0;P=M+2944|0;O=M+2948|0;X=M+2952|0;W=M+2956|0;V=M+2960|0;_=M+2964|0;S=M+2968|0;H=M+2972|0;G=M+2976|0;J=M+2980|0;I=M+2984|0;j=M+2988|0;L=M+2992|0;N=M+2996|0;z=M+3088|0;y=M+3096|0;B=M+3104|0;A=M+3112|0;E=M+3120|0;D=M+3020|0;F=M+3024|0;ha=M+3028|0;ia=M+3032|0;m=M+3036|0;n=M+3040|0;p=M+3044|0;o=M+3048|0;s=M+3052|0;q=M+3056|0;u=M+8|0;w=M+24|0;x=M;pa=M+3072|0;ea=M+3076|0;sa=M+2936|0;da=M+2928|0;$=M+2920|0;t=M+2924|0;ta=M+2932|0;ca=M+3130|0;Z=M+2880|0;ba=M+2864|0;la=M+16|0;aa=M+32|0;Y=M+2912|0;K=M+3080|0;C=M+3108|0;v=M+3128|0;c[ea>>2]=b;c[sa>>2]=d;c[da>>2]=e;c[$>>2]=f;c[t>>2]=g;if((c[da>>2]|0)==(c[$>>2]|0)){i=M;return}if((c[$>>2]|0)<(c[da>>2]|0)){c[ta>>2]=c[$>>2];c[$>>2]=c[da>>2];c[da>>2]=c[ta>>2]}a[ca>>0]=0;c[Z+0>>2]=0;c[Z+4>>2]=0;c[Z+8>>2]=0;c[Z+12>>2]=0;c[Z+16>>2]=0;c[Z+20>>2]=0;c[Z+24>>2]=0;c[Z+28>>2]=0;c[Z>>2]=c[da>>2];c[Z+4>>2]=c[$>>2];a[Z+8>>0]=1;h[Z+24>>3]=+De(c[(c[sa>>2]|0)+(c[da>>2]<<2)>>2]|0,c[(c[sa>>2]|0)+(c[$>>2]<<2)>>2]|0)*.5;g=Z+24|0;h[g>>3]=+h[g>>3]- +h[(c[ea>>2]|0)+((c[da>>2]|0)*2832|0)+2824>>3];g=Z+24|0;h[g>>3]=+h[g>>3]- +h[(c[ea>>2]|0)+((c[$>>2]|0)*2832|0)+2824>>3];g=(c[ea>>2]|0)+((c[$>>2]|0)*2832|0)|0;do if((c[(c[ea>>2]|0)+((c[da>>2]|0)*2832|0)+2816>>2]|0)!=0){if((c[g+2816>>2]|0)==0){h[Z+16>>3]=+h[(c[ea>>2]|0)+((c[da>>2]|0)*2832|0)+2824>>3];a[ca>>0]=1;break}c[pa>>2]=c[t>>2];b=c[pa>>2]|0;if((c[b>>2]|0)==(c[b+4>>2]|0))ua=1.0e+99;else{h[la>>3]=0.0;c[ha>>2]=c[t>>2];c[ia>>2]=0;b=(c[c[ha>>2]>>2]|0)+(c[ia>>2]<<5)+24|0;c[ja>>2]=la;c[ka>>2]=b;b=c[ja>>2]|0;d=c[ka>>2]|0;a[ma+0>>0]=a[fa+0>>0]|0;c[na>>2]=b;c[oa>>2]=d;d=c[na>>2]|0;b=c[oa>>2]|0;c[ra>>2]=ma;c[ga>>2]=d;c[qa>>2]=b;ua=+h[(+h[c[ga>>2]>>3]<+h[c[qa>>2]>>3]?c[oa>>2]|0:c[na>>2]|0)>>3]}h[ba>>3]=ua;By(aa|0,(c[ea>>2]|0)+((c[da>>2]|0)*2832|0)|0,2832)|0;Qf(aa,(c[ea>>2]|0)+((c[$>>2]|0)*2832|0)|0);h[Y>>3]=+Gf(aa);if(+h[Y>>3]<+h[ba>>3]- +h[Z+24>>3]){h[Z+16>>3]=+h[Y>>3];a[ca>>0]=1}}else{h[Z+16>>3]=+h[g+2824>>3];a[ca>>0]=1}while(0);if(!(a[ca>>0]&1)){i=M;return}Y=Z+24|0;h[Y>>3]=+h[Y>>3]+ +h[Z+16>>3];c[_>>2]=c[t>>2];c[S>>2]=Z;Y=c[_>>2]|0;b=c[Y+4>>2]|0;c[V>>2]=Y;c[W>>2]=(c[V>>2]|0)+8;c[X>>2]=c[W>>2];if((b|0)!=(c[c[X>>2]>>2]|0)){c[O>>2]=Y;c[P>>2]=(c[O>>2]|0)+8;c[Q>>2]=c[P>>2];d=c[Q>>2]|0;c[R>>2]=c[Y+4>>2];b=c[R>>2]|0;O=c[S>>2]|0;c[T>>2]=d;c[U>>2]=b;c[r>>2]=O;O=c[U>>2]|0;if((O|0)!=0){b=c[r>>2]|0;c[O+0>>2]=c[b+0>>2];c[O+4>>2]=c[b+4>>2];c[O+8>>2]=c[b+8>>2];c[O+12>>2]=c[b+12>>2];c[O+16>>2]=c[b+16>>2];c[O+20>>2]=c[b+20>>2];c[O+24>>2]=c[b+24>>2];c[O+28>>2]=c[b+28>>2]}b=Y+4|0;c[b>>2]=(c[b>>2]|0)+32}else Fe(Y,c[S>>2]|0);c[N>>2]=c[t>>2];b=c[N>>2]|0;d=c[b>>2]|0;c[j>>2]=b;c[L>>2]=d;d=c[L>>2]|0;c[J>>2]=K;c[I>>2]=d;d=c[I>>2]|0;c[H>>2]=c[J>>2];c[G>>2]=d;c[c[H>>2]>>2]=c[G>>2];c[F>>2]=c[t>>2];d=c[F>>2]|0;b=c[d+4>>2]|0;c[E>>2]=d;c[D>>2]=b;b=c[D>>2]|0;c[B>>2]=C;c[A>>2]=b;b=c[A>>2]|0;c[z>>2]=c[B>>2];c[y>>2]=b;c[c[z>>2]>>2]=c[y>>2];a[x+0>>0]=a[K+0>>0]|0;a[x+1>>0]=a[K+1>>0]|0;a[x+2>>0]=a[K+2>>0]|0;a[x+3>>0]=a[K+3>>0]|0;a[w+0>>0]=a[C+0>>0]|0;a[w+1>>0]=a[C+1>>0]|0;a[w+2>>0]=a[C+2>>0]|0;a[w+3>>0]=a[C+3>>0]|0;a[u+0>>0]=a[v+0>>0]|0;c[s+0>>2]=c[x+0>>2];c[q+0>>2]=c[w+0>>2];c[p>>2]=w;c[o>>2]=x;c[n>>2]=c[p>>2];b=c[c[n>>2]>>2]|0;c[m>>2]=c[o>>2];b=(b-(c[c[m>>2]>>2]|0)|0)/32|0;c[l+0>>2]=c[s+0>>2];c[k+0>>2]=c[q+0>>2];Ee(l,k,u,b);i=M;return}function Sf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;t=i;i=i+144|0;h=t+60|0;u=t+48|0;v=t+124|0;e=t+116|0;f=t+8|0;r=t;o=t+84|0;q=t+52|0;A=t+40|0;z=t+104|0;y=t+112|0;x=t+120|0;w=t+128|0;g=t+132|0;F=t+136|0;p=t+64|0;l=t+68|0;m=t+72|0;n=t+76|0;E=t+16|0;D=t+88|0;C=t+96|0;B=t+4|0;G=t+92|0;H=t+44|0;I=t+100|0;J=t+108|0;s=t+12|0;k=t+80|0;j=t+20|0;c[J>>2]=b;c[s>>2]=d;d=c[J>>2]|0;c[I>>2]=d;c[H>>2]=(c[I>>2]|0)+8;c[G>>2]=c[H>>2];if((((c[c[G>>2]>>2]|0)-(c[d+4>>2]|0)|0)/2832|0)>>>0>=(c[s>>2]|0)>>>0){Tf(d,c[s>>2]|0);i=t;return}c[B>>2]=d;c[C>>2]=(c[B>>2]|0)+8;c[D>>2]=c[C>>2];c[k>>2]=c[D>>2];c[E>>2]=d;B=c[E>>2]|0;B=(((c[B+4>>2]|0)-(c[B>>2]|0)|0)/2832|0)+(c[s>>2]|0)|0;c[F>>2]=d;c[p>>2]=B;B=c[F>>2]|0;c[l>>2]=Of(B)|0;if((c[p>>2]|0)>>>0>(c[l>>2]|0)>>>0)ht(B);c[w>>2]=B;c[x>>2]=c[w>>2];J=c[x>>2]|0;c[y>>2]=J;c[z>>2]=(c[y>>2]|0)+8;c[A>>2]=c[z>>2];c[m>>2]=((c[c[A>>2]>>2]|0)-(c[J>>2]|0)|0)/2832|0;if((c[m>>2]|0)>>>0>=(((c[l>>2]|0)>>>0)/2|0)>>>0)c[g>>2]=c[l>>2];else{c[n>>2]=c[m>>2]<<1;c[o>>2]=n;c[q>>2]=p;J=c[o>>2]|0;I=c[q>>2]|0;a[r+0>>0]=a[t+140>>0]|0;c[e>>2]=J;c[f>>2]=I;I=c[e>>2]|0;J=c[f>>2]|0;c[t+56>>2]=r;c[u>>2]=I;c[v>>2]=J;c[g>>2]=c[((c[c[u>>2]>>2]|0)>>>0<(c[c[v>>2]>>2]|0)>>>0?c[f>>2]|0:c[e>>2]|0)>>2]}I=c[g>>2]|0;c[h>>2]=d;J=c[h>>2]|0;Uf(j,I,((c[J+4>>2]|0)-(c[J>>2]|0)|0)/2832|0,c[k>>2]|0);Vf(j,c[s>>2]|0);Wf(d,j);Xf(j);i=t;return}function Tf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;g=d+28|0;h=d+16|0;j=d+4|0;k=d+8|0;l=d+32|0;m=d;n=d+12|0;e=d+24|0;f=d+20|0;c[n>>2]=a;c[e>>2]=b;a=c[n>>2]|0;c[m>>2]=a;c[l>>2]=(c[m>>2]|0)+8;c[k>>2]=c[l>>2];c[f>>2]=c[k>>2];do{n=c[f>>2]|0;c[g>>2]=c[a+4>>2];b=c[g>>2]|0;c[h>>2]=n;c[j>>2]=b;b=c[j>>2]|0;if((b|0)!=0)Bf(b);n=a+4|0;c[n>>2]=(c[n>>2]|0)+2832;c[e>>2]=(c[e>>2]|0)+ -1}while((c[e>>2]|0)>>>0>0);i=d;return}function Uf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;k=f+12|0;j=f+8|0;h=f+4|0;g=f;c[k>>2]=a;c[j>>2]=b;c[h>>2]=d;c[g>>2]=e;Zf(c[k>>2]|0,c[j>>2]|0,c[h>>2]|0,c[g>>2]|0);i=f;return}function Vf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;g=d+28|0;h=d+16|0;j=d+4|0;k=d+8|0;l=d+32|0;m=d;n=d+12|0;e=d+24|0;f=d+20|0;c[n>>2]=a;c[e>>2]=b;a=c[n>>2]|0;c[m>>2]=a;c[l>>2]=(c[m>>2]|0)+12;c[k>>2]=c[l>>2];c[f>>2]=c[(c[k>>2]|0)+4>>2];do{n=c[f>>2]|0;c[g>>2]=c[a+8>>2];b=c[g>>2]|0;c[h>>2]=n;c[j>>2]=b;b=c[j>>2]|0;if((b|0)!=0)Bf(b);n=a+8|0;c[n>>2]=(c[n>>2]|0)+2832;c[e>>2]=(c[e>>2]|0)+ -1}while((c[e>>2]|0)>>>0>0);i=d;return}function Wf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=i;i=i+144|0;F=d+108|0;H=d+88|0;G=d+80|0;E=d+48|0;C=d+8|0;z=d+12|0;D=d+84|0;B=d+16|0;y=d+20|0;A=d+24|0;w=d+28|0;t=d+32|0;x=d+104|0;v=d+112|0;s=d+120|0;u=d+128|0;m=d+136|0;q=d+52|0;r=d+56|0;n=d+60|0;o=d+64|0;p=d+68|0;k=d+72|0;g=d+76|0;l=d+4|0;j=d;f=d+92|0;h=d+96|0;K=d+100|0;J=d+40|0;I=d+116|0;L=d+44|0;e=d+124|0;c[L>>2]=a;c[e>>2]=b;a=c[L>>2]|0;c[I>>2]=a;c[J>>2]=(c[I>>2]|0)+8;c[K>>2]=c[J>>2];J=c[a>>2]|0;I=c[a+4>>2]|0;b=(c[e>>2]|0)+4|0;c[d+132>>2]=c[K>>2];c[F>>2]=J;c[H>>2]=I;c[G>>2]=b;c[E>>2]=((c[H>>2]|0)-(c[F>>2]|0)|0)/2832|0;b=c[G>>2]|0;c[b>>2]=(c[b>>2]|0)+((0-(c[E>>2]|0)|0)*2832|0);By(c[c[G>>2]>>2]|0,c[F>>2]|0,(c[E>>2]|0)*2832|0)|0;b=(c[e>>2]|0)+4|0;c[B>>2]=a;c[y>>2]=b;c[D>>2]=c[B>>2];c[A>>2]=c[c[D>>2]>>2];c[C>>2]=c[y>>2];c[c[B>>2]>>2]=c[c[C>>2]>>2];c[z>>2]=A;c[c[y>>2]>>2]=c[c[z>>2]>>2];b=(c[e>>2]|0)+8|0;c[v>>2]=a+4;c[s>>2]=b;c[x>>2]=c[v>>2];c[u>>2]=c[c[x>>2]>>2];c[w>>2]=c[s>>2];c[c[v>>2]>>2]=c[c[w>>2]>>2];c[t>>2]=u;c[c[s>>2]>>2]=c[c[t>>2]>>2];c[r>>2]=a;c[q>>2]=(c[r>>2]|0)+8;c[m>>2]=c[q>>2];m=c[m>>2]|0;c[p>>2]=c[e>>2];c[o>>2]=(c[p>>2]|0)+12;c[n>>2]=c[o>>2];b=c[n>>2]|0;c[j>>2]=m;c[f>>2]=b;c[l>>2]=c[j>>2];c[h>>2]=c[c[l>>2]>>2];c[k>>2]=c[f>>2];c[c[j>>2]>>2]=c[c[k>>2]>>2];c[g>>2]=h;c[c[f>>2]>>2]=c[c[g>>2]>>2];c[c[e>>2]>>2]=c[(c[e>>2]|0)+4>>2];c[d+36>>2]=a;i=d;return}function Xf(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Yf(c[d>>2]|0);i=b;return}function Yf(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;r=i;i=i+128|0;l=r+72|0;k=r+44|0;j=r+12|0;h=r+104|0;g=r+24|0;f=r+16|0;q=r+20|0;p=r+76|0;d=r+52|0;e=r+28|0;m=r+32|0;n=r+36|0;o=r+40|0;w=r+108|0;B=r+112|0;C=r+116|0;A=r;x=r+56|0;y=r+60|0;z=r+120|0;v=r+68|0;u=r+88|0;t=r+92|0;E=r+96|0;s=r+100|0;G=r+8|0;F=r+80|0;I=r+84|0;H=r+121|0;J=r+48|0;D=r+64|0;c[D>>2]=b;D=c[D>>2]|0;c[J>>2]=D;J=c[J>>2]|0;b=c[J+4>>2]|0;c[F>>2]=J;c[I>>2]=b;F=c[F>>2]|0;b=c[I>>2]|0;a[G+0>>0]=a[H+0>>0]|0;c[E>>2]=F;c[s>>2]=b;b=c[E>>2]|0;while(1){if((c[s>>2]|0)==(c[b+8>>2]|0))break;c[t>>2]=b;c[u>>2]=(c[t>>2]|0)+12;c[v>>2]=c[u>>2];J=c[(c[v>>2]|0)+4>>2]|0;H=b+8|0;I=(c[H>>2]|0)+ -2832|0;c[H>>2]=I;c[w>>2]=I;I=c[w>>2]|0;c[x>>2]=J;c[y>>2]=I;I=c[x>>2]|0;J=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=I;c[C>>2]=J}if((c[D>>2]|0)==0){i=r;return}c[q>>2]=D;c[f>>2]=(c[q>>2]|0)+12;c[g>>2]=c[f>>2];H=c[(c[g>>2]|0)+4>>2]|0;J=c[D>>2]|0;c[h>>2]=D;I=c[h>>2]|0;c[j>>2]=I;c[k>>2]=(c[j>>2]|0)+12;c[l>>2]=c[k>>2];I=((c[c[l>>2]>>2]|0)-(c[I>>2]|0)|0)/2832|0;c[m>>2]=H;c[n>>2]=J;c[o>>2]=I;I=c[n>>2]|0;J=c[o>>2]|0;c[p>>2]=c[m>>2];c[d>>2]=I;c[e>>2]=J;Sw(c[d>>2]|0);i=r;return}function Zf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;q=i;i=i+176|0;C=q+64|0;x=q+60|0;z=q;B=q+148|0;A=q+156|0;y=q+56|0;E=q+12|0;G=q+112|0;F=q+16|0;D=q+20|0;H=q+24|0;J=q+28|0;I=q+32|0;p=q+36|0;g=q+40|0;r=q+108|0;m=q+144|0;n=q+160|0;f=q+164|0;u=q+68|0;v=q+76|0;w=q+80|0;t=q+84|0;o=q+92|0;h=q+96|0;j=q+100|0;N=q+104|0;O=q+124|0;P=q+44|0;M=q+8|0;Q=q+48|0;k=q+132|0;l=q+52|0;K=q+140|0;L=q+120|0;s=q+116|0;c[Q>>2]=a;c[k>>2]=b;c[l>>2]=d;c[K>>2]=e;e=c[Q>>2]|0;c[O>>2]=M;c[P>>2]=-1;b=c[P>>2]|0;c[N>>2]=c[O>>2];c[q+4>>2]=b;c[c[N>>2]>>2]=0;c[L>>2]=c[M>>2];c[q+128>>2]=L;b=c[K>>2]|0;c[H>>2]=e+12;c[J>>2]=0;c[I>>2]=b;b=c[J>>2]|0;d=c[I>>2]|0;c[G>>2]=c[H>>2];c[F>>2]=b;c[D>>2]=d;d=c[G>>2]|0;c[E>>2]=F;b=c[c[E>>2]>>2]|0;c[C>>2]=c[D>>2];a=c[C>>2]|0;c[B>>2]=d;c[A>>2]=b;c[y>>2]=a;a=c[B>>2]|0;c[z>>2]=A;c[a>>2]=c[c[z>>2]>>2];c[x>>2]=c[y>>2];c[a+4>>2]=c[x>>2];if((c[k>>2]|0)!=0){c[r>>2]=e;c[g>>2]=(c[r>>2]|0)+12;c[p>>2]=c[g>>2];Q=c[k>>2]|0;c[n>>2]=c[(c[p>>2]|0)+4>>2];c[f>>2]=Q;Q=c[f>>2]|0;c[q+136>>2]=c[n>>2];c[m>>2]=Q;c[q+152>>2]=0;Q=Qw((c[m>>2]|0)*2832|0)|0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P*2832|0)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P*2832|0)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}else{c[v>>2]=t;c[w>>2]=-1;Q=c[w>>2]|0;c[u>>2]=c[v>>2];c[q+72>>2]=Q;c[c[u>>2]>>2]=0;c[s>>2]=c[t>>2];c[q+88>>2]=s;Q=0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P*2832|0)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P*2832|0)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}}function _f(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;f=i;i=i+160|0;n=f+56|0;g=f+44|0;l=f+108|0;j=f+132|0;s=f+16|0;y=f+8|0;z=f+28|0;w=f+32|0;x=f+36|0;v=f;h=f+96|0;u=f+104|0;E=f+136|0;D=f+140|0;C=f+144|0;B=f+68|0;A=f+72|0;t=f+76|0;F=f+80|0;m=f+84|0;p=f+12|0;q=f+4|0;r=f+40|0;G=f+24|0;H=f+88|0;I=f+92|0;J=f+48|0;K=f+100|0;k=f+52|0;o=f+60|0;e=f+112|0;c[K>>2]=b;c[k>>2]=d;b=c[K>>2]|0;c[J>>2]=b;c[I>>2]=(c[J>>2]|0)+8;c[H>>2]=c[I>>2];c[o>>2]=c[H>>2];c[G>>2]=b;d=c[G>>2]|0;d=(((c[d+4>>2]|0)-(c[d>>2]|0)|0)/2832|0)+1|0;c[F>>2]=b;c[m>>2]=d;d=c[F>>2]|0;c[p>>2]=Of(d)|0;if((c[m>>2]|0)>>>0>(c[p>>2]|0)>>>0)ht(d);c[A>>2]=d;c[B>>2]=c[A>>2];K=c[B>>2]|0;c[C>>2]=K;c[D>>2]=(c[C>>2]|0)+8;c[E>>2]=c[D>>2];c[q>>2]=((c[c[E>>2]>>2]|0)-(c[K>>2]|0)|0)/2832|0;if((c[q>>2]|0)>>>0>=(((c[p>>2]|0)>>>0)/2|0)>>>0)c[t>>2]=c[p>>2];else{c[r>>2]=c[q>>2]<<1;c[h>>2]=r;c[u>>2]=m;K=c[h>>2]|0;J=c[u>>2]|0;a[v+0>>0]=a[f+148>>0]|0;c[w>>2]=K;c[x>>2]=J;J=c[w>>2]|0;K=c[x>>2]|0;c[f+20>>2]=v;c[y>>2]=J;c[z>>2]=K;c[t>>2]=c[((c[c[y>>2]>>2]|0)>>>0<(c[c[z>>2]>>2]|0)>>>0?c[x>>2]|0:c[w>>2]|0)>>2]}K=c[t>>2]|0;c[s>>2]=b;J=c[s>>2]|0;Uf(e,K,((c[J+4>>2]|0)-(c[J>>2]|0)|0)/2832|0,c[o>>2]|0);J=c[o>>2]|0;c[j>>2]=c[e+8>>2];K=c[j>>2]|0;c[l>>2]=c[k>>2];h=c[l>>2]|0;c[f+64>>2]=J;c[n>>2]=K;c[g>>2]=h;h=c[n>>2]|0;if((h|0)==0){K=e+8|0;J=c[K>>2]|0;J=J+2832|0;c[K>>2]=J;Wf(b,e);Xf(e);i=f;return}By(h|0,c[g>>2]|0,2832)|0;K=e+8|0;J=c[K>>2]|0;J=J+2832|0;c[K>>2]=J;Wf(b,e);Xf(e);i=f;return}function $f(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Df(c[d>>2]|0);i=b;return}function ag(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;m=i;i=i+32|0;n=m+20|0;k=m+16|0;g=m+12|0;h=m+8|0;l=m+4|0;j=m;c[n>>2]=a;c[k>>2]=b;c[g>>2]=d;c[h>>2]=e;c[l>>2]=f;c[j>>2]=0;if((c[h>>2]|0)>>>0>=(c[g>>2]|0)>>>0){c[j>>2]=0;c[h>>2]=c[g>>2]}else{a=ey(c[n>>2]|0)|0;c[j>>2]=(a>>>0)%(((c[g>>2]|0)-(c[h>>2]|0)+1|0)>>>0)|0}bg(c[l>>2]|0,(c[k>>2]|0)+(c[j>>2]<<1)|0,c[h>>2]|0);i=m;return}function bg(a,b,d){a=a|0;b=b|0;d=d|0;var f=0,g=0,h=0,j=0;f=i;i=i+16|0;j=f+8|0;h=f+4|0;g=f;c[j>>2]=a;c[h>>2]=b;c[g>>2]=d;d=c[j>>2]|0;a=d+2816|0;c[a>>2]=(c[a>>2]|0)+(c[g>>2]|0);c[g>>2]=(c[g>>2]|0)+1;while(1){j=(c[g>>2]|0)+ -1|0;c[g>>2]=j;if((j|0)==0)break;j=c[h>>2]|0;c[h>>2]=j+2;j=d+((e[j>>1]|0)<<2)|0;c[j>>2]=(c[j>>2]|0)+1}i=f;return}function cg(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;x=i;i=i+1136|0;m=x+1068|0;o=x+1096|0;p=x+1052|0;q=x+1092|0;l=x+1044|0;k=x+1040|0;t=x+1048|0;z=x+1088|0;y=x+1080|0;j=x+1056|0;w=x+1060|0;n=x+1064|0;s=x+1128|0;A=x+1072|0;G=x+1076|0;F=x+1084|0;u=x+1100|0;v=x+1104|0;E=x+1108|0;B=x+1112|0;C=x+1116|0;D=x+1120|0;h=x+1124|0;r=x;c[s>>2]=a;c[A>>2]=b;c[G>>2]=d;c[F>>2]=e;c[u>>2]=f;c[v>>2]=g;c[E>>2]=(((c[A>>2]|0)>>>0)/((c[G>>2]|0)>>>0)|0)+1;if((c[E>>2]|0)>(c[F>>2]|0))c[E>>2]=c[F>>2];c[B>>2]=7;c[C>>2]=((c[A>>2]|0)>>>0)/((c[E>>2]|0)>>>0)|0;c[D>>2]=0;while(1){if((c[D>>2]|0)>=(c[E>>2]|0))break;G=da(c[A>>2]|0,c[D>>2]|0)|0;c[h>>2]=(G>>>0)/((c[E>>2]|0)>>>0)|0;if((c[D>>2]|0)!=0){G=ey(B)|0;c[h>>2]=(c[h>>2]|0)+((G|0)%(c[C>>2]|0)|0)}if(((c[h>>2]|0)+(c[u>>2]|0)|0)>>>0>=(c[A>>2]|0)>>>0)c[h>>2]=(c[A>>2]|0)-(c[u>>2]|0)-1;kg(r);Mg(r,(c[s>>2]|0)+(c[h>>2]|0)|0,c[u>>2]|0);c[w>>2]=c[v>>2];c[n>>2]=r;g=c[w>>2]|0;G=c[g+4>>2]|0;c[j>>2]=g;c[y>>2]=(c[j>>2]|0)+8;c[z>>2]=c[y>>2];if((G|0)!=(c[c[z>>2]>>2]|0)){c[t>>2]=g;c[k>>2]=(c[t>>2]|0)+8;c[l>>2]=c[k>>2];a=c[l>>2]|0;c[m>>2]=c[g+4>>2];G=c[m>>2]|0;F=c[n>>2]|0;c[o>>2]=a;c[p>>2]=G;c[q>>2]=F;F=c[p>>2]|0;if((F|0)!=0)By(F|0,c[q>>2]|0,1040)|0;G=g+4|0;c[G>>2]=(c[G>>2]|0)+1040}else Jg(g,c[n>>2]|0);c[D>>2]=(c[D>>2]|0)+1}i=x;return}function dg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;n=i;i=i+1104|0;t=n+1088|0;p=n+1068|0;r=n+1044|0;s=n+1048|0;u=n+1060|0;v=n+1052|0;l=n+1056|0;m=n+1092|0;f=n+1064|0;o=n+1072|0;h=n+1076|0;k=n+1080|0;g=n+1084|0;j=n;q=n+1040|0;c[l>>2]=a;c[m>>2]=b;c[f>>2]=d;c[o>>2]=e;c[h>>2]=((c[m>>2]<<1>>>0)/((c[f>>2]|0)>>>0)|0)+100;c[k>>2]=7;b=c[h>>2]|0;c[v>>2]=c[o>>2];a=c[v>>2]|0;a=b+(((c[a+4>>2]|0)-(c[a>>2]|0)|0)/1040|0)-1|0;c[u>>2]=c[o>>2];b=c[u>>2]|0;b=(a>>>0)/((((c[b+4>>2]|0)-(c[b>>2]|0)|0)/1040|0)>>>0)|0;c[t>>2]=c[o>>2];a=c[t>>2]|0;c[h>>2]=da(b,((c[a+4>>2]|0)-(c[a>>2]|0)|0)/1040|0)|0;c[g>>2]=0;while(1){if((c[g>>2]|0)>=(c[h>>2]|0))break;kg(j);Lg(k,c[l>>2]|0,c[m>>2]|0,c[f>>2]|0,j);u=c[g>>2]|0;c[p>>2]=c[o>>2];v=c[p>>2]|0;c[q>>2]=(u>>>0)%((((c[v+4>>2]|0)-(c[v>>2]|0)|0)/1040|0)>>>0)|0;v=c[q>>2]|0;c[r>>2]=c[o>>2];c[s>>2]=v;zg((c[c[r>>2]>>2]|0)+((c[s>>2]|0)*1040|0)|0,j);c[g>>2]=(c[g>>2]|0)+1}i=n;return}function eg(b,e,f,g,j){b=b|0;e=e|0;f=+f;g=g|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;k=i;i=i+128|0;H=k+52|0;I=k+48|0;J=k+96|0;K=k+112|0;L=k+104|0;M=k+32|0;D=k+92|0;B=k+28|0;y=k+8|0;G=k+36|0;o=k+80|0;p=k+40|0;u=k+108|0;q=k+116|0;F=k+120|0;E=k+56|0;m=k+60|0;l=k+64|0;x=k+76|0;C=k+68|0;n=k+72|0;A=k;z=k+100|0;w=k+16|0;v=k+88|0;r=k+84|0;t=k+24|0;s=k+44|0;c[D>>2]=b;c[B>>2]=e;h[y>>3]=f;c[G>>2]=g;c[o>>2]=j;c[M>>2]=c[G>>2];b=c[M>>2]|0;if((((c[b+4>>2]|0)-(c[b>>2]|0)|0)/1040|0)>>>0<=1){c[p>>2]=0;while(1){if(!((c[p>>2]|0)>>>0<(c[B>>2]|0)>>>0))break;a[(c[o>>2]|0)+(c[p>>2]|0)>>0]=0;c[p>>2]=(c[p>>2]|0)+1}i=k;return}c[L>>2]=c[G>>2];M=c[L>>2]|0;c[u>>2]=((c[M+4>>2]|0)-(c[M>>2]|0)|0)/1040|0;M=c[u>>2]<<8;c[q>>2]=Rw(M>>>0>536870911?-1:M<<3)|0;vy(c[q>>2]|0,0,c[u>>2]<<11|0)|0;c[F>>2]=0;while(1){if((c[F>>2]|0)>=256)break;c[E>>2]=0;while(1){if((c[E>>2]|0)>=(c[u>>2]|0))break;b=c[E>>2]|0;c[H>>2]=c[G>>2];c[I>>2]=b;b=c[(c[c[H>>2]>>2]|0)+((c[I>>2]|0)*1040|0)+1024>>2]|0;M=c[F>>2]|0;e=c[E>>2]|0;c[J>>2]=c[G>>2];c[K>>2]=e;f=+lf(b,c[(c[c[J>>2]>>2]|0)+((c[K>>2]|0)*1040|0)+(M<<2)>>2]|0);M=da(c[F>>2]|0,c[u>>2]|0)|0;h[(c[q>>2]|0)+(M+(c[E>>2]|0)<<3)>>3]=f;c[E>>2]=(c[E>>2]|0)+1}c[F>>2]=(c[F>>2]|0)+1}M=c[u>>2]|0;c[m>>2]=Rw(M>>>0>536870911?-1:M<<3)|0;vy(c[m>>2]|0,0,c[u>>2]<<3|0)|0;c[l>>2]=Rw(da(c[B>>2]|0,c[u>>2]|0)|0)|0;vy(c[l>>2]|0,0,da(c[B>>2]|0,c[u>>2]|0)|0)|0;c[x>>2]=0;while(1){if(!((c[x>>2]|0)>>>0<(c[B>>2]|0)>>>0))break;c[C>>2]=da(c[x>>2]|0,c[u>>2]|0)|0;c[n>>2]=da(d[(c[D>>2]|0)+(c[x>>2]|0)>>0]|0,c[u>>2]|0)|0;h[A>>3]=1.0e+99;c[z>>2]=0;while(1){if((c[z>>2]|0)>=(c[u>>2]|0))break;M=(c[m>>2]|0)+(c[z>>2]<<3)|0;h[M>>3]=+h[M>>3]+ +h[(c[q>>2]|0)+((c[n>>2]|0)+(c[z>>2]|0)<<3)>>3];if(+h[(c[m>>2]|0)+(c[z>>2]<<3)>>3]<+h[A>>3]){h[A>>3]=+h[(c[m>>2]|0)+(c[z>>2]<<3)>>3];a[(c[o>>2]|0)+(c[x>>2]|0)>>0]=c[z>>2]}c[z>>2]=(c[z>>2]|0)+1}h[w>>3]=+h[y>>3];if((c[x>>2]|0)>>>0<2e3)h[w>>3]=+h[w>>3]*(+((c[x>>2]|0)>>>0)*.07/2.0e3+.77);c[v>>2]=0;while(1){if((c[v>>2]|0)>=(c[u>>2]|0))break;M=(c[m>>2]|0)+(c[v>>2]<<3)|0;h[M>>3]=+h[M>>3]- +h[A>>3];if(+h[(c[m>>2]|0)+(c[v>>2]<<3)>>3]>=+h[w>>3]){h[(c[m>>2]|0)+(c[v>>2]<<3)>>3]=+h[w>>3];a[(c[l>>2]|0)+((c[C>>2]|0)+(c[v>>2]|0))>>0]=1}c[v>>2]=(c[v>>2]|0)+1}c[x>>2]=(c[x>>2]|0)+1}c[r>>2]=(c[B>>2]|0)-1;c[t>>2]=da(c[r>>2]|0,c[u>>2]|0)|0;c[s>>2]=d[(c[o>>2]|0)+(c[r>>2]|0)>>0];while(1){if((c[r>>2]|0)<=0)break;c[r>>2]=(c[r>>2]|0)+ -1;c[t>>2]=(c[t>>2]|0)-(c[u>>2]|0);if(a[(c[l>>2]|0)+((c[t>>2]|0)+(c[s>>2]|0))>>0]&1)c[s>>2]=d[(c[o>>2]|0)+(c[r>>2]|0)>>0];a[(c[o>>2]|0)+(c[r>>2]|0)>>0]=c[s>>2]}n=c[q>>2]|0;if((n|0)!=0)Tw(n);m=c[m>>2]|0;if((m|0)!=0)Tw(m);l=c[l>>2]|0;if((l|0)==0){i=k;return}Tw(l);i=k;return}function fg(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;u=i;i=i+96|0;n=u+40|0;o=u+4|0;q=u+52|0;w=u+36|0;B=u+68|0;C=u+16|0;A=u;x=u+56|0;y=u+64|0;z=u+88|0;v=u+80|0;j=u+84|0;t=u+44|0;D=u+20|0;h=u+24|0;E=u+48|0;F=u+8|0;p=u+28|0;k=u+60|0;l=u+12|0;m=u+32|0;r=u+76|0;s=u+72|0;c[p>>2]=b;c[k>>2]=e;c[l>>2]=f;c[m>>2]=g;c[r>>2]=ed(c[l>>2]|0,c[k>>2]|0)|0;c[F>>2]=c[m>>2];g=c[F>>2]|0;c[E>>2]=g;b=c[E>>2]|0;f=c[b>>2]|0;c[D>>2]=b;c[h>>2]=f;f=c[D>>2]|0;while(1){if((c[h>>2]|0)==(c[f+4>>2]|0))break;c[t>>2]=f;c[j>>2]=(c[t>>2]|0)+8;c[v>>2]=c[j>>2];F=c[v>>2]|0;D=f+4|0;E=(c[D>>2]|0)+ -1040|0;c[D>>2]=E;c[w>>2]=E;E=c[w>>2]|0;c[x>>2]=F;c[y>>2]=E;E=c[x>>2]|0;F=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=E;c[C>>2]=F}c[q>>2]=g;og(c[m>>2]|0,c[r>>2]|0);c[s>>2]=0;while(1){if(!((c[s>>2]|0)>>>0<(c[k>>2]|0)>>>0))break;F=d[(c[l>>2]|0)+(c[s>>2]|0)>>0]|0;c[n>>2]=c[m>>2];c[o>>2]=F;lg((c[c[n>>2]>>2]|0)+((c[o>>2]|0)*1040|0)|0,d[(c[p>>2]|0)+(c[s>>2]|0)>>0]|0);c[s>>2]=(c[s>>2]|0)+1}i=u;return}function gg(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0;l=i;i=i+1600|0;q=l+1272|0;r=l+1568|0;o=l+1544|0;p=l+1256|0;Ha=l+1260|0;ga=l+1320|0;ha=l+1480|0;ea=l+1268|0;h=l+1056|0;g=l+1536|0;ja=l+1060|0;na=l+1064|0;oa=l+1068|0;la=l+1072|0;ma=l+1076|0;ka=l+1488|0;qa=l+1140|0;ua=l+1084|0;va=l+1088|0;sa=l+1092|0;ta=l+1096|0;ra=l+1100|0;xa=l+1104|0;Ga=l+1108|0;Fa=l+1112|0;Da=l+1116|0;Ea=l+1120|0;Ca=l+1124|0;Aa=l+1128|0;Ba=l+1132|0;ya=l+1136|0;za=l+1484|0;ca=l+1264|0;ba=l+1144|0;ia=l+1148|0;pa=l+1152|0;wa=l+1156|0;aa=l+1160|0;$=l+1164|0;A=l+1168|0;B=l+1172|0;y=l+1176|0;z=l+1180|0;x=l+1184|0;D=l+1188|0;H=l+1192|0;I=l+1196|0;F=l+1200|0;G=l+1204|0;E=l+1208|0;K=l+1212|0;O=l+1216|0;P=l+1220|0;M=l+1224|0;N=l+1228|0;L=l+1232|0;R=l+1236|0;_=l+1240|0;Z=l+1244|0;X=l+1532|0;Y=l+1540|0;W=l+1548|0;U=l+1556|0;V=l+1564|0;S=l+1572|0;T=l+1588|0;w=l+1592|0;v=l+1276|0;C=l+1280|0;J=l+1284|0;Q=l+1288|0;u=l+1292|0;t=l+1296|0;La=l+1300|0;Na=l+1304|0;Oa=l+1308|0;Pa=l+1312|0;Ka=l+1316|0;Ja=l+1560|0;Ia=l+1324|0;Ua=l+1328|0;Ta=l+1332|0;Sa=l+1336|0;Qa=l+1340|0;Ma=l+1344|0;Ya=l+1348|0;Za=l+1352|0;tb=l+1356|0;ub=l+1364|0;vb=l+1368|0;sb=l+1372|0;ob=l+1380|0;pb=l+1388|0;qb=l+1392|0;nb=l+1396|0;jb=l+1404|0;kb=l+1412|0;lb=l+1416|0;ib=l+1420|0;$a=l+1428|0;bb=l+1436|0;ab=l+1440|0;cb=l+1444|0;eb=l+1448|0;db=l+1452|0;fb=l+1456|0;gb=l+1460|0;wb=l+1468|0;rb=l+1472|0;mb=l+1476|0;hb=l+1080|0;xb=l+1044|0;yb=l+1504|0;_a=l+1052|0;n=l+1040|0;s=l+1048|0;k=l+1492|0;j=l+1520|0;Wa=l+1248|0;Ra=l;Xa=l+1552|0;Va=l+1596|0;da=l+1508|0;fa=l+1576|0;m=l+1252|0;c[_a>>2]=b;c[n>>2]=e;c[s>>2]=f;c[yb>>2]=k;c[xb>>2]=c[yb>>2];c[wb>>2]=c[xb>>2];e=c[wb>>2]|0;c[l+1464>>2]=e;c[ub>>2]=sb;c[vb>>2]=-1;b=c[vb>>2]|0;c[tb>>2]=c[ub>>2];c[l+1360>>2]=b;c[c[tb>>2]>>2]=0;c[rb>>2]=c[sb>>2];c[l+1376>>2]=rb;c[e>>2]=0;c[pb>>2]=nb;c[qb>>2]=-1;b=c[qb>>2]|0;c[ob>>2]=c[pb>>2];c[l+1384>>2]=b;c[c[ob>>2]>>2]=0;c[mb>>2]=c[nb>>2];c[l+1400>>2]=mb;c[e+4>>2]=0;c[kb>>2]=ib;c[lb>>2]=-1;b=c[lb>>2]|0;c[jb>>2]=c[kb>>2];c[l+1408>>2]=b;c[c[jb>>2]>>2]=0;c[hb>>2]=c[ib>>2];c[l+1424>>2]=hb;c[fb>>2]=e+8;c[gb>>2]=0;e=c[gb>>2]|0;c[eb>>2]=c[fb>>2];c[db>>2]=e;e=c[eb>>2]|0;c[cb>>2]=db;b=c[c[cb>>2]>>2]|0;c[bb>>2]=e;c[ab>>2]=b;b=c[bb>>2]|0;c[l+1432>>2]=b;c[$a>>2]=ab;c[b>>2]=c[c[$a>>2]>>2];Bd(j,c[n>>2]|0);c[Wa>>2]=0;kg(Ra);c[Xa>>2]=0;while(1){if(!((c[Xa>>2]|0)>>>0<(c[n>>2]|0)>>>0))break;if(((c[Xa>>2]|0)+1|0)==(c[n>>2]|0))f=1;else f=(d[(c[s>>2]|0)+(c[Xa>>2]|0)>>0]|0|0)!=(d[(c[s>>2]|0)+((c[Xa>>2]|0)+1)>>0]|0|0);a[Va>>0]=f&1;yb=c[Wa>>2]|0;xb=c[Xa>>2]|0;c[Ya>>2]=j;c[Za>>2]=xb;c[(c[c[Ya>>2]>>2]|0)+(c[Za>>2]<<2)>>2]=yb;lg(Ra,d[(c[_a>>2]|0)+(c[Xa>>2]|0)>>0]|0);if(a[Va>>0]&1){c[Qa>>2]=k;c[Ma>>2]=Ra;f=c[Qa>>2]|0;yb=c[f+4>>2]|0;c[Sa>>2]=f;c[Ta>>2]=(c[Sa>>2]|0)+8;c[Ua>>2]=c[Ta>>2];if((yb|0)!=(c[c[Ua>>2]>>2]|0)){c[Ia>>2]=f;c[Ja>>2]=(c[Ia>>2]|0)+8;c[Ka>>2]=c[Ja>>2];xb=c[Ka>>2]|0;c[La>>2]=c[f+4>>2];yb=c[La>>2]|0;e=c[Ma>>2]|0;c[Na>>2]=xb;c[Oa>>2]=yb;c[Pa>>2]=e;e=c[Oa>>2]|0;if((e|0)!=0)By(e|0,c[Pa>>2]|0,1040)|0;yb=f+4|0;c[yb>>2]=(c[yb>>2]|0)+1040}else Jg(f,c[Ma>>2]|0);mg(Ra);c[Wa>>2]=(c[Wa>>2]|0)+1}c[Xa>>2]=(c[Xa>>2]|0)+1}c[t>>2]=da;c[u>>2]=c[t>>2];c[v>>2]=c[u>>2];yb=c[v>>2]|0;c[w>>2]=yb;c[y>>2]=x;c[z>>2]=-1;xb=c[z>>2]|0;c[A>>2]=c[y>>2];c[B>>2]=xb;c[c[A>>2]>>2]=0;c[C>>2]=c[x>>2];c[D>>2]=C;c[yb>>2]=0;c[F>>2]=E;c[G>>2]=-1;xb=c[G>>2]|0;c[H>>2]=c[F>>2];c[I>>2]=xb;c[c[H>>2]>>2]=0;c[J>>2]=c[E>>2];c[K>>2]=J;c[yb+4>>2]=0;c[M>>2]=L;c[N>>2]=-1;xb=c[N>>2]|0;c[O>>2]=c[M>>2];c[P>>2]=xb;c[c[O>>2]>>2]=0;c[Q>>2]=c[L>>2];c[R>>2]=Q;c[S>>2]=yb+8;c[T>>2]=0;yb=c[T>>2]|0;c[U>>2]=c[S>>2];c[V>>2]=yb;yb=c[U>>2]|0;c[W>>2]=V;xb=c[c[W>>2]>>2]|0;c[X>>2]=yb;c[Y>>2]=xb;xb=c[X>>2]|0;c[Z>>2]=xb;c[_>>2]=Y;c[xb>>2]=c[c[_>>2]>>2];c[$>>2]=fa;c[aa>>2]=c[$>>2];c[ba>>2]=c[aa>>2];xb=c[ba>>2]|0;c[ca>>2]=xb;c[ea>>2]=g;c[h>>2]=-1;yb=c[h>>2]|0;c[ga>>2]=c[ea>>2];c[ha>>2]=yb;c[c[ga>>2]>>2]=0;c[ia>>2]=c[g>>2];c[ja>>2]=ia;c[xb>>2]=0;c[la>>2]=ka;c[ma>>2]=-1;yb=c[ma>>2]|0;c[na>>2]=c[la>>2];c[oa>>2]=yb;c[c[na>>2]>>2]=0;c[pa>>2]=c[ka>>2];c[qa>>2]=pa;c[xb+4>>2]=0;c[sa>>2]=ra;c[ta>>2]=-1;yb=c[ta>>2]|0;c[ua>>2]=c[sa>>2];c[va>>2]=yb;c[c[ua>>2]>>2]=0;c[wa>>2]=c[ra>>2];c[xa>>2]=wa;c[ya>>2]=xb+8;c[za>>2]=0;xb=c[za>>2]|0;c[Aa>>2]=c[ya>>2];c[Ba>>2]=xb;xb=c[Aa>>2]|0;c[Ca>>2]=Ba;yb=c[c[Ca>>2]>>2]|0;c[Da>>2]=xb;c[Ea>>2]=yb;yb=c[Da>>2]|0;c[Fa>>2]=yb;c[Ga>>2]=Ea;c[yb>>2]=c[c[Ga>>2]>>2];c[Ha>>2]=k;yb=c[Ha>>2]|0;ng(k,1,((c[yb+4>>2]|0)-(c[yb>>2]|0)|0)/1040|0,256,da,fa);c[m>>2]=0;while(1){if(!((c[m>>2]|0)>>>0<(c[n>>2]|0)>>>0))break;yb=c[m>>2]|0;c[o>>2]=j;c[p>>2]=yb;yb=c[(c[c[o>>2]>>2]|0)+(c[p>>2]<<2)>>2]|0;c[q>>2]=fa;c[r>>2]=yb;a[(c[s>>2]|0)+(c[m>>2]|0)>>0]=c[(c[c[q>>2]>>2]|0)+(c[r>>2]<<2)>>2];c[m>>2]=(c[m>>2]|0)+1}Gd(fa);hg(da);Gd(j);hg(k);i=l;return}function hg(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;ig(c[d>>2]|0);i=b;return}function ig(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;jg(c[d>>2]|0);i=b;return}function jg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=i;i=i+144|0;w=d+48|0;B=d+8|0;C=d+84|0;A=d;x=d+16|0;y=d+4|0;z=d+132|0;v=d+80|0;u=d+44|0;t=d+20|0;E=d+24|0;e=d+28|0;D=d+32|0;g=d+36|0;f=d+40|0;s=d+76|0;l=d+124|0;k=d+128|0;j=d+52|0;h=d+56|0;p=d+64|0;q=d+68|0;r=d+92|0;m=d+96|0;n=d+100|0;o=d+104|0;I=d+108|0;K=d+116|0;J=d+120|0;H=d+88|0;F=d+72|0;G=d+12|0;c[F>>2]=b;b=c[F>>2]|0;F=c[b>>2]|0;c[K>>2]=H;c[J>>2]=-1;J=c[J>>2]|0;c[I>>2]=c[K>>2];c[d+112>>2]=J;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[d+60>>2]=G;if((F|0)==0){i=d;return}c[D>>2]=b;K=c[D>>2]|0;D=c[K>>2]|0;c[E>>2]=K;c[e>>2]=D;D=c[E>>2]|0;while(1){if((c[e>>2]|0)==(c[D+4>>2]|0))break;c[t>>2]=D;c[u>>2]=(c[t>>2]|0)+8;c[v>>2]=c[u>>2];K=c[v>>2]|0;I=D+4|0;J=(c[I>>2]|0)+ -1040|0;c[I>>2]=J;c[w>>2]=J;J=c[w>>2]|0;c[x>>2]=K;c[y>>2]=J;J=c[x>>2]|0;K=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=J;c[C>>2]=K}c[s>>2]=b;c[f>>2]=(c[s>>2]|0)+8;c[g>>2]=c[f>>2];I=c[g>>2]|0;K=c[b>>2]|0;c[h>>2]=b;J=c[h>>2]|0;c[j>>2]=J;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];J=((c[c[l>>2]>>2]|0)-(c[J>>2]|0)|0)/1040|0;c[m>>2]=I;c[n>>2]=K;c[o>>2]=J;J=c[n>>2]|0;K=c[o>>2]|0;c[p>>2]=c[m>>2];c[q>>2]=J;c[r>>2]=K;Sw(c[q>>2]|0);i=d;return}function kg(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Kg(c[d>>2]|0);i=b;return}function lg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;a=c[f>>2]|0;b=a+(c[e>>2]<<2)|0;c[b>>2]=(c[b>>2]|0)+1;a=a+1024|0;c[a>>2]=(c[a>>2]|0)+1;i=d;return}function mg(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;vy(a|0,0,1024)|0;c[a+1024>>2]=0;i=b;return}function ng(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0.0;B=i;i=i+176|0;J=B+156|0;K=B+120|0;G=B+4|0;H=B+64|0;k=B+80|0;l=B+148|0;n=B+28|0;o=B+32|0;q=B+36|0;r=B+40|0;j=B+44|0;F=B+48|0;v=B+52|0;w=B+56|0;x=B+60|0;y=B+128|0;z=B+136|0;A=B+144|0;U=B+152|0;V=B+160|0;S=B+84|0;T=B+88|0;Q=B+92|0;R=B+96|0;O=B+100|0;P=B+104|0;M=B+108|0;N=B+112|0;u=B+116|0;I=B+12|0;D=B;t=B+8|0;E=B+124|0;p=B+68|0;s=B+132|0;m=B+16|0;W=B+72|0;L=B+140|0;C=B+76|0;c[u>>2]=a;c[I>>2]=b;c[D>>2]=d;c[t>>2]=e;c[E>>2]=f;c[p>>2]=g;c[s>>2]=da(c[I>>2]|0,c[D>>2]|0)|0;a=c[s>>2]|0;c[W>>2]=1;Jd(m,a,W);og(c[E>>2]|0,c[s>>2]|0);Ld(c[p>>2]|0,c[s>>2]|0);c[L>>2]=0;while(1){if((c[L>>2]|0)>=(c[s>>2]|0))break;W=c[L>>2]|0;c[M>>2]=c[E>>2];c[N>>2]=W;W=(c[c[M>>2]>>2]|0)+((c[N>>2]|0)*1040|0)|0;a=c[L>>2]|0;c[O>>2]=c[u>>2];c[P>>2]=a;By(W|0,(c[c[O>>2]>>2]|0)+((c[P>>2]|0)*1040|0)|0,1040)|0;W=c[L>>2]|0;c[Q>>2]=c[u>>2];c[R>>2]=W;X=+pg((c[c[Q>>2]>>2]|0)+((c[R>>2]|0)*1040|0)|0);W=c[L>>2]|0;c[S>>2]=c[E>>2];c[T>>2]=W;h[(c[c[S>>2]>>2]|0)+((c[T>>2]|0)*1040|0)+1032>>3]=X;W=c[L>>2]|0;a=c[L>>2]|0;c[U>>2]=c[p>>2];c[V>>2]=a;c[(c[c[U>>2]>>2]|0)+(c[V>>2]<<2)>>2]=W;c[L>>2]=(c[L>>2]|0)+1}a:do if((c[I>>2]|0)>1){c[C>>2]=0;while(1){if((c[C>>2]|0)>=(c[D>>2]|0))break a;c[j>>2]=c[E>>2];c[F>>2]=0;a=(c[c[j>>2]>>2]|0)+((c[F>>2]|0)*1040|0)|0;c[G>>2]=m;c[H>>2]=0;W=(c[c[G>>2]>>2]|0)+(c[H>>2]<<2)|0;b=da(c[C>>2]|0,c[I>>2]|0)|0;c[J>>2]=c[p>>2];c[K>>2]=b;qg(a,W,(c[c[J>>2]>>2]|0)+(c[K>>2]<<2)|0,c[I>>2]|0,c[t>>2]|0);c[C>>2]=(c[C>>2]|0)+1}}while(0);c[k>>2]=c[E>>2];c[l>>2]=0;a=(c[c[k>>2]>>2]|0)+((c[l>>2]|0)*1040|0)|0;c[n>>2]=m;c[o>>2]=0;b=(c[c[n>>2]>>2]|0)+(c[o>>2]<<2)|0;c[q>>2]=c[p>>2];c[r>>2]=0;qg(a,b,(c[c[q>>2]>>2]|0)+(c[r>>2]<<2)|0,c[s>>2]|0,c[t>>2]|0);c[v>>2]=c[u>>2];c[w>>2]=0;b=(c[c[v>>2]>>2]|0)+((c[w>>2]|0)*1040|0)|0;a=c[s>>2]|0;c[x>>2]=c[E>>2];c[y>>2]=0;W=(c[c[x>>2]>>2]|0)+((c[y>>2]|0)*1040|0)|0;c[z>>2]=c[p>>2];c[A>>2]=0;rg(b,a,W,(c[c[z>>2]>>2]|0)+(c[A>>2]<<2)|0);sg(c[E>>2]|0,c[p>>2]|0);Gd(m);i=B;return}function og(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;o=i;i=i+80|0;m=o+36|0;n=o+4|0;g=o+24|0;q=o;e=o+32|0;f=o+16|0;p=o+68|0;l=o+8|0;k=o+60|0;j=o+64|0;v=o+40|0;h=o+44|0;t=o+48|0;u=o+52|0;w=o+56|0;x=o+12|0;s=o+28|0;r=o+20|0;c[x>>2]=b;c[s>>2]=d;d=c[x>>2]|0;c[w>>2]=d;b=c[w>>2]|0;c[r>>2]=((c[b+4>>2]|0)-(c[b>>2]|0)|0)/1040|0;if((c[r>>2]|0)>>>0<(c[s>>2]|0)>>>0){Bg(d,(c[s>>2]|0)-(c[r>>2]|0)|0);i=o;return}if(!((c[r>>2]|0)>>>0>(c[s>>2]|0)>>>0)){i=o;return}r=(c[d>>2]|0)+((c[s>>2]|0)*1040|0)|0;c[t>>2]=d;c[u>>2]=r;r=c[u>>2]|0;c[v>>2]=c[t>>2];c[h>>2]=r;r=c[v>>2]|0;while(1){if((c[h>>2]|0)==(c[r+4>>2]|0))break;c[j>>2]=r;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];x=c[l>>2]|0;b=r+4|0;w=(c[b>>2]|0)+ -1040|0;c[b>>2]=w;c[m>>2]=w;w=c[m>>2]|0;c[e>>2]=x;c[f>>2]=w;w=c[e>>2]|0;x=c[f>>2]|0;a[q+0>>0]=a[p+0>>0]|0;c[n>>2]=w;c[g>>2]=x}i=o;return}function pg(a){a=a|0;var b=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0.0;b=i;i=i+288|0;e=b;f=b+16|0;l=b+12|0;m=b+24|0;g=b+32|0;j=b+20|0;k=b+8|0;c[f>>2]=a;if((c[(c[f>>2]|0)+1024>>2]|0)==0){h[e>>3]=12.0;n=+h[e>>3];i=b;return+n}c[l>>2]=0;c[m>>2]=0;while(1){if((c[m>>2]|0)>=256)break;if((c[l>>2]|0)>=5)break;if((c[(c[f>>2]|0)+(c[m>>2]<<2)>>2]|0)>0)c[l>>2]=(c[l>>2]|0)+1;c[m>>2]=(c[m>>2]|0)+1}if((c[l>>2]|0)==1){h[e>>3]=12.0;n=+h[e>>3];i=b;return+n}if((c[l>>2]|0)==2){h[e>>3]=+(20+(c[(c[f>>2]|0)+1024>>2]|0)|0);n=+h[e>>3];i=b;return+n}vy(g|0,0,256)|0;Wk(c[f>>2]|0,256,15,g);c[j>>2]=0;c[k>>2]=0;while(1){if((c[k>>2]|0)>=256)break;m=da(c[(c[f>>2]|0)+(c[k>>2]<<2)>>2]|0,d[g+(c[k>>2]|0)>>0]|0)|0;c[j>>2]=(c[j>>2]|0)+m;c[k>>2]=(c[k>>2]|0)+1}do if((c[l>>2]|0)!=3)if((c[l>>2]|0)==4){c[j>>2]=(c[j>>2]|0)+37;break}else{m=Pe(g,256)|0;c[j>>2]=(c[j>>2]|0)+m;break}else c[j>>2]=(c[j>>2]|0)+28;while(0);h[e>>3]=+(c[j>>2]|0);n=+h[e>>3];i=b;return+n}function qg(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0,Uc=0,Vc=0,Wc=0,Xc=0,Yc=0,Zc=0,_c=0,$c=0,ad=0,bd=0,cd=0,dd=0,ed=0,fd=0,gd=0,hd=0,id=0,jd=0,kd=0,ld=0,md=0,nd=0,od=0,pd=0,qd=0,rd=0,sd=0,td=0,ud=0,vd=0,wd=0,xd=0,yd=0,zd=0,Ad=0,Bd=0,Cd=0,Dd=0,Ed=0,Fd=0,Hd=0,Id=0;m=i;i=i+1120|0;_a=m+580|0;Za=m+568|0;t=m+564|0;u=m+312|0;w=m+544|0;x=m+228|0;n=m+1040|0;o=m+1056|0;A=m+1072|0;B=m+1080|0;H=m+1088|0;N=m+1064|0;O=m+156|0;P=m+148|0;Q=m+144|0;R=m+1020|0;S=m+616|0;X=m+556|0;aa=m+352|0;ba=m+332|0;$=m+48|0;Y=m+224|0;Z=m+220|0;_=m+1104|0;W=m+160|0;V=m+164|0;U=m+168|0;L=m+172|0;M=m+176|0;J=m+180|0;K=m+184|0;I=m+1016|0;ca=m+728|0;da=m+612|0;ea=m+600|0;ga=m+552|0;ia=m+356|0;ja=m+348|0;qa=m+344|0;ra=m+328|0;oa=m+236|0;pa=m+232|0;la=m+244|0;ma=m+248|0;ka=m+252|0;ya=m+256|0;za=m+260|0;wa=m+264|0;xa=m+268|0;ta=m+272|0;ua=m+276|0;sa=m+280|0;q=m+284|0;Qa=m+288|0;Va=m+292|0;Wa=m+296|0;Ta=m+300|0;Ra=m+304|0;Sa=m+308|0;Ua=m+88|0;Pa=m+316|0;Oa=m+320|0;Ma=m+324|0;Na=m+1012|0;Xa=m+792|0;Ya=m+724|0;La=m+8|0;Ka=m+64|0;Ja=m+604|0;Ia=m+596|0;Ga=m+592|0;Ha=m+548|0;Ea=m+360|0;Fa=m+364|0;Da=m+80|0;Ba=m+72|0;Aa=m+24|0;hb=m+380|0;mb=m+384|0;nb=m+388|0;lb=m+120|0;ib=m+396|0;jb=m+400|0;k=m+1106|0;j=m+408|0;fb=m+412|0;eb=m+416|0;cb=m+420|0;db=m+424|0;ab=m+428|0;bb=m+432|0;$a=m+436|0;ob=m+440|0;pb=m+444|0;qb=m+448|0;xb=m+452|0;yb=m+456|0;vb=m+460|0;wb=m+464|0;kc=m+468|0;ub=m+472|0;Gb=m+476|0;Hb=m+480|0;Eb=m+484|0;Fb=m+488|0;Db=m+492|0;Jb=m+496|0;Nb=m+500|0;Ob=m+504|0;Lb=m+508|0;Mb=m+512|0;Kb=m+516|0;Qb=m+520|0;Ub=m+524|0;Vb=m+528|0;Sb=m+532|0;Tb=m+1052|0;Rb=m+1060|0;Xb=m+1068|0;ec=m+1076|0;dc=m+1084|0;bc=m+1092|0;cc=m+1096|0;ac=m+576|0;_b=m+1100|0;$b=m+584|0;Yb=m+588|0;Zb=m+1008|0;Cb=m+984|0;Bb=m+788|0;Ib=m+744|0;Pb=m+720|0;Wb=m+680|0;Ab=m+672|0;zb=m+668|0;ad=m+608|0;bd=m+620|0;cd=m+624|0;dd=m+628|0;$c=m+632|0;_c=m+636|0;Zc=m+640|0;xc=m+644|0;wc=m+648|0;vc=m+652|0;tc=m+656|0;uc=m+660|0;sc=m+664|0;rc=m+56|0;qc=m+368|0;pc=m+16|0;mc=m+372|0;nc=m+676|0;oc=m+376|0;rb=m+684|0;lc=m+688|0;gc=m+692|0;hc=m+696|0;ic=m+704|0;Xc=m+712|0;Yc=m+716|0;Wc=m+392|0;Vc=m+32|0;Uc=m+732|0;Sc=m;Qc=m+736|0;Rc=m+740|0;Oc=m+404|0;Pc=m+748|0;Mc=m+752|0;Lc=m+756|0;Kc=m+760|0;Jc=m+764|0;Ic=m+768|0;Hc=m+772|0;Gc=m+776|0;Nc=m+780|0;Fc=m+784|0;Ec=m+128|0;Dc=m+796|0;Bc=m+40|0;yc=m+800|0;zc=m+804|0;Ac=m+808|0;yd=m+812|0;zd=m+820|0;Ad=m+824|0;xd=m+828|0;td=m+836|0;ud=m+844|0;vd=m+848|0;sd=m+852|0;od=m+860|0;pd=m+868|0;qd=m+872|0;nd=m+876|0;ed=m+884|0;gd=m+892|0;fd=m+896|0;hd=m+900|0;jd=m+904|0;id=m+908|0;kd=m+912|0;ld=m+916|0;Bd=m+924|0;wd=m+928|0;rd=m+932|0;md=m+936|0;Cd=m+940|0;Dd=m+944|0;Fd=m+948|0;Ed=m+952|0;Hd=m+956|0;Id=m+960|0;z=m+964|0;C=m+968|0;G=m+972|0;E=m+976|0;s=m+980|0;p=m+136|0;r=m+988|0;l=m+992|0;gb=m+192|0;fc=m+152|0;Cc=m+340|0;Tc=m+1024|0;jc=m+1032|0;kb=m+204|0;tb=m+560|0;sb=m+216|0;v=m+336|0;y=m+1044|0;D=m+536|0;F=m+1048|0;T=m+540|0;fa=m+572|0;na=m+1004|0;va=m+240|0;Ca=m+1105|0;ha=m+188|0;c[z>>2]=b;c[C>>2]=d;c[G>>2]=e;c[E>>2]=f;c[s>>2]=g;h[p>>3]=0.0;c[r>>2]=1;c[Hd>>2]=l;c[Id>>2]=m+1107;d=c[Id>>2]|0;c[Fd>>2]=c[Hd>>2];c[Ed>>2]=d;ve(c[Fd>>2]|0,c[Ed>>2]|0);c[Dd>>2]=gb;c[Cd>>2]=c[Dd>>2];c[Bd>>2]=c[Cd>>2];d=c[Bd>>2]|0;c[m+920>>2]=d;c[zd>>2]=xd;c[Ad>>2]=-1;b=c[Ad>>2]|0;c[yd>>2]=c[zd>>2];c[m+816>>2]=b;c[c[yd>>2]>>2]=0;c[wd>>2]=c[xd>>2];c[m+832>>2]=wd;c[d>>2]=0;c[ud>>2]=sd;c[vd>>2]=-1;b=c[vd>>2]|0;c[td>>2]=c[ud>>2];c[m+840>>2]=b;c[c[td>>2]>>2]=0;c[rd>>2]=c[sd>>2];c[m+856>>2]=rd;c[d+4>>2]=0;c[pd>>2]=nd;c[qd>>2]=-1;b=c[qd>>2]|0;c[od>>2]=c[pd>>2];c[m+864>>2]=b;c[c[od>>2]>>2]=0;c[md>>2]=c[nd>>2];c[m+880>>2]=md;c[kd>>2]=d+8;c[ld>>2]=0;d=c[ld>>2]|0;c[jd>>2]=c[kd>>2];c[id>>2]=d;d=c[jd>>2]|0;c[hd>>2]=id;b=c[c[hd>>2]>>2]|0;c[gd>>2]=d;c[fd>>2]=b;b=c[gd>>2]|0;c[m+888>>2]=b;c[ed>>2]=fd;c[b>>2]=c[c[ed>>2]>>2];c[fc>>2]=0;while(1){if((c[fc>>2]|0)>=(c[E>>2]|0))break;Id=(c[G>>2]|0)+(c[fc>>2]<<2)|0;c[yc>>2]=l;c[zc>>2]=Id;Ne(Ac,c[yc>>2]|0,c[zc>>2]|0);a[Bc+0>>0]=a[Ac+0>>0]|0;a[Bc+1>>0]=a[Ac+1>>0]|0;a[Bc+2>>0]=a[Ac+2>>0]|0;a[Bc+3>>0]=a[Ac+3>>0]|0;c[Dc>>2]=Cc;Id=c[Dc>>2]|0;a[Ec+0>>0]=a[Bc+0>>0]|0;a[Ec+1>>0]=a[Bc+1>>0]|0;a[Ec+2>>0]=a[Bc+2>>0]|0;a[Ec+3>>0]=a[Bc+3>>0]|0;c[Fc>>2]=Id;c[c[Fc>>2]>>2]=c[Ec>>2];c[Gc>>2]=l;c[Hc>>2]=c[Gc>>2];c[Ic>>2]=c[Hc>>2];c[Jc>>2]=(c[Ic>>2]|0)+4;c[Kc>>2]=c[Jc>>2];c[Lc>>2]=c[Kc>>2];c[Mc>>2]=c[Lc>>2];Id=c[Mc>>2]|0;c[Oc>>2]=Nc;c[Pc>>2]=Id;Id=c[Pc>>2]|0;c[Qc>>2]=c[Oc>>2];c[Rc>>2]=Id;c[c[Qc>>2]>>2]=c[Rc>>2];a[Sc+0>>0]=a[Nc+0>>0]|0;a[Sc+1>>0]=a[Nc+1>>0]|0;a[Sc+2>>0]=a[Nc+2>>0]|0;a[Sc+3>>0]=a[Nc+3>>0]|0;c[Uc>>2]=Tc;Id=c[Uc>>2]|0;a[Vc+0>>0]=a[Sc+0>>0]|0;a[Vc+1>>0]=a[Sc+1>>0]|0;a[Vc+2>>0]=a[Sc+2>>0]|0;a[Vc+3>>0]=a[Sc+3>>0]|0;c[Wc>>2]=Id;c[c[Wc>>2]>>2]=c[Vc>>2];c[Xc>>2]=Cc;c[Yc>>2]=Tc;do if((c[c[Xc>>2]>>2]|0)==(c[c[Yc>>2]>>2]|0)){g=(c[G>>2]|0)+(c[fc>>2]<<2)|0;c[gc>>2]=l;c[hc>>2]=g;re(ic,c[gc>>2]|0,c[hc>>2]|0);c[rb>>2]=jc;c[lc>>2]=ic;g=c[lc>>2]|0;c[mc>>2]=c[rb>>2];c[nc>>2]=g;g=c[mc>>2]|0;Id=c[nc>>2]|0;c[oc+0>>2]=c[Id+0>>2];a[pc+0>>0]=a[oc+0>>0]|0;a[pc+1>>0]=a[oc+1>>0]|0;a[pc+2>>0]=a[oc+2>>0]|0;a[pc+3>>0]=a[oc+3>>0]|0;c[qc>>2]=g;Id=c[qc>>2]|0;a[rc+0>>0]=a[pc+0>>0]|0;a[rc+1>>0]=a[pc+1>>0]|0;a[rc+2>>0]=a[pc+2>>0]|0;a[rc+3>>0]=a[pc+3>>0]|0;c[sc>>2]=Id;c[c[sc>>2]>>2]=c[rc>>2];a[g+4>>0]=a[(c[nc>>2]|0)+4>>0]&1;g=(c[G>>2]|0)+(c[fc>>2]<<2)|0;c[tc>>2]=gb;c[uc>>2]=g;g=c[tc>>2]|0;Id=c[g+4>>2]|0;c[vc>>2]=g;c[wc>>2]=(c[vc>>2]|0)+8;c[xc>>2]=c[wc>>2];if((Id|0)==(c[c[xc>>2]>>2]|0)){Ng(g,c[uc>>2]|0);break}c[Zc>>2]=g;c[_c>>2]=(c[Zc>>2]|0)+8;c[$c>>2]=c[_c>>2];Hd=c[$c>>2]|0;c[ad>>2]=c[g+4>>2];Id=c[ad>>2]|0;f=c[uc>>2]|0;c[bd>>2]=Hd;c[cd>>2]=Id;c[dd>>2]=f;f=c[cd>>2]|0;if((f|0)!=0)c[f>>2]=c[c[dd>>2]>>2];Id=g+4|0;c[Id>>2]=(c[Id>>2]|0)+4}while(0);c[fc>>2]=(c[fc>>2]|0)+1}c[zb>>2]=kb;c[Ab>>2]=c[zb>>2];c[Bb>>2]=c[Ab>>2];Hd=c[Bb>>2]|0;c[Cb>>2]=Hd;c[Eb>>2]=Db;c[Fb>>2]=-1;Id=c[Fb>>2]|0;c[Gb>>2]=c[Eb>>2];c[Hb>>2]=Id;c[c[Gb>>2]>>2]=0;c[Ib>>2]=c[Db>>2];c[Jb>>2]=Ib;c[Hd>>2]=0;c[Lb>>2]=Kb;c[Mb>>2]=-1;Id=c[Mb>>2]|0;c[Nb>>2]=c[Lb>>2];c[Ob>>2]=Id;c[c[Nb>>2]>>2]=0;c[Pb>>2]=c[Kb>>2];c[Qb>>2]=Pb;c[Hd+4>>2]=0;c[Sb>>2]=Rb;c[Tb>>2]=-1;Id=c[Tb>>2]|0;c[Ub>>2]=c[Sb>>2];c[Vb>>2]=Id;c[c[Ub>>2]>>2]=0;c[Wb>>2]=c[Rb>>2];c[Xb>>2]=Wb;c[Yb>>2]=Hd+8;c[Zb>>2]=0;Hd=c[Zb>>2]|0;c[_b>>2]=c[Yb>>2];c[$b>>2]=Hd;Hd=c[_b>>2]|0;c[ac>>2]=$b;Id=c[c[ac>>2]>>2]|0;c[bc>>2]=Hd;c[cc>>2]=Id;Id=c[bc>>2]|0;c[dc>>2]=Id;c[ec>>2]=cc;c[Id>>2]=c[c[ec>>2]>>2];c[tb>>2]=0;while(1){Hd=c[tb>>2]|0;c[ub>>2]=gb;Id=c[ub>>2]|0;if(!(Hd>>>0<(((c[Id+4>>2]|0)-(c[Id>>2]|0)|0)/4|0)>>>0))break;c[sb>>2]=(c[tb>>2]|0)+1;while(1){Hd=c[sb>>2]|0;c[kc>>2]=gb;Id=c[kc>>2]|0;if(!(Hd>>>0<(((c[Id+4>>2]|0)-(c[Id>>2]|0)|0)/4|0)>>>0))break;Fd=c[z>>2]|0;Hd=c[C>>2]|0;Id=c[tb>>2]|0;c[vb>>2]=gb;c[wb>>2]=Id;Id=c[(c[c[vb>>2]>>2]|0)+(c[wb>>2]<<2)>>2]|0;Ed=c[sb>>2]|0;c[xb>>2]=gb;c[yb>>2]=Ed;Ag(Fd,Hd,Id,c[(c[c[xb>>2]>>2]|0)+(c[yb>>2]<<2)>>2]|0,kb);c[sb>>2]=(c[sb>>2]|0)+1}c[tb>>2]=(c[tb>>2]|0)+1}a:while(1){c[q>>2]=gb;Id=c[q>>2]|0;if(!((((c[Id+4>>2]|0)-(c[Id>>2]|0)|0)/4|0)>>>0>(c[r>>2]|0)>>>0))break;c[n>>2]=kb;c[o>>2]=0;if(+h[(c[c[n>>2]>>2]|0)+(c[o>>2]<<5)+24>>3]>=+h[p>>3]){h[p>>3]=1.0e+99;c[r>>2]=c[s>>2];continue}c[t>>2]=kb;c[u>>2]=0;c[v>>2]=c[(c[c[t>>2]>>2]|0)+(c[u>>2]<<5)>>2];c[w>>2]=kb;c[x>>2]=0;c[y>>2]=c[(c[c[w>>2]>>2]|0)+(c[x>>2]<<5)+4>>2];zg((c[z>>2]|0)+((c[v>>2]|0)*1040|0)|0,(c[z>>2]|0)+((c[y>>2]|0)*1040|0)|0);c[A>>2]=kb;c[B>>2]=0;h[(c[z>>2]|0)+((c[v>>2]|0)*1040|0)+1032>>3]=+h[(c[c[A>>2]>>2]|0)+(c[B>>2]<<5)+16>>3];Id=(c[C>>2]|0)+(c[v>>2]<<2)|0;c[Id>>2]=(c[Id>>2]|0)+(c[(c[C>>2]|0)+(c[y>>2]<<2)>>2]|0);c[D>>2]=0;while(1){if((c[D>>2]|0)>=(c[E>>2]|0))break;if((c[(c[G>>2]|0)+(c[D>>2]<<2)>>2]|0)==(c[y>>2]|0))c[(c[G>>2]|0)+(c[D>>2]<<2)>>2]=c[v>>2];c[D>>2]=(c[D>>2]|0)+1}c[F>>2]=0;while(1){Hd=(c[F>>2]|0)+1|0;c[H>>2]=gb;Id=c[H>>2]|0;if(!(Hd>>>0<(((c[Id+4>>2]|0)-(c[Id>>2]|0)|0)/4|0)>>>0))break;Id=c[F>>2]|0;c[N>>2]=gb;c[O>>2]=Id;if((c[(c[c[N>>2]>>2]|0)+(c[O>>2]<<2)>>2]|0)>=(c[y>>2]|0)){Id=(c[F>>2]|0)+1|0;c[P>>2]=gb;c[Q>>2]=Id;Id=c[(c[c[P>>2]>>2]|0)+(c[Q>>2]<<2)>>2]|0;Hd=c[F>>2]|0;c[R>>2]=gb;c[S>>2]=Hd;c[(c[c[R>>2]>>2]|0)+(c[S>>2]<<2)>>2]=Id}c[F>>2]=(c[F>>2]|0)+1}c[I>>2]=gb;Id=c[I>>2]|0;rb=(c[Id+4>>2]|0)+ -4|0;c[J>>2]=Id;c[K>>2]=rb;rb=c[K>>2]|0;c[L>>2]=c[J>>2];c[M>>2]=rb;rb=c[L>>2]|0;while(1){if((c[M>>2]|0)==(c[rb+4>>2]|0))break;c[U>>2]=rb;c[V>>2]=(c[U>>2]|0)+8;c[W>>2]=c[V>>2];Id=c[W>>2]|0;Fd=rb+4|0;Hd=(c[Fd>>2]|0)+ -4|0;c[Fd>>2]=Hd;c[X>>2]=Hd;Hd=c[X>>2]|0;c[Y>>2]=Id;c[Z>>2]=Hd;Hd=c[Y>>2]|0;Id=c[Z>>2]|0;a[$+0>>0]=a[_+0>>0]|0;c[aa>>2]=Hd;c[ba>>2]=Id}c[T>>2]=0;while(1){Hd=c[T>>2]|0;c[ca>>2]=kb;Id=c[ca>>2]|0;if(!(Hd>>>0<(((c[Id+4>>2]|0)-(c[Id>>2]|0)|0)/32|0)>>>0))break;Id=c[T>>2]|0;c[da>>2]=kb;c[ea>>2]=Id;c[fa>>2]=(c[c[da>>2]>>2]|0)+(c[ea>>2]<<5);if(!((((c[c[fa>>2]>>2]|0)!=(c[v>>2]|0)?(c[(c[fa>>2]|0)+4>>2]|0)!=(c[v>>2]|0):0)?(c[c[fa>>2]>>2]|0)!=(c[y>>2]|0):0)?(c[(c[fa>>2]|0)+4>>2]|0)!=(c[y>>2]|0):0))a[(c[fa>>2]|0)+8>>0]=0;c[T>>2]=(c[T>>2]|0)+1}b:while(1){c[ga>>2]=kb;Id=c[ga>>2]|0;if((c[Id>>2]|0)==(c[Id+4>>2]|0))break;c[ia>>2]=kb;c[ja>>2]=0;if(!(a[(c[c[ia>>2]>>2]|0)+(c[ja>>2]<<5)+8>>0]&1^1))break;c[ka>>2]=kb;Id=c[ka>>2]|0;Hd=c[Id>>2]|0;c[la>>2]=Id;c[ma>>2]=Hd;Hd=c[ma>>2]|0;c[oa>>2]=na;c[pa>>2]=Hd;Hd=c[pa>>2]|0;c[qa>>2]=c[oa>>2];c[ra>>2]=Hd;c[c[qa>>2]>>2]=c[ra>>2];c[sa>>2]=kb;Hd=c[sa>>2]|0;Id=c[Hd+4>>2]|0;c[ta>>2]=Hd;c[ua>>2]=Id;Id=c[ua>>2]|0;c[wa>>2]=va;c[xa>>2]=Id;Id=c[xa>>2]|0;c[ya>>2]=c[wa>>2];c[za>>2]=Id;c[c[ya>>2]>>2]=c[za>>2];a[Aa+0>>0]=a[na+0>>0]|0;a[Aa+1>>0]=a[na+1>>0]|0;a[Aa+2>>0]=a[na+2>>0]|0;a[Aa+3>>0]=a[na+3>>0]|0;a[Ba+0>>0]=a[va+0>>0]|0;a[Ba+1>>0]=a[va+1>>0]|0;a[Ba+2>>0]=a[va+2>>0]|0;a[Ba+3>>0]=a[va+3>>0]|0;a[Da+0>>0]=a[Ca+0>>0]|0;c[Ea+0>>2]=c[Aa+0>>2];c[Fa+0>>2]=c[Ba+0>>2];c[Ga>>2]=Ba;c[Ha>>2]=Aa;c[Ia>>2]=c[Ga>>2];Id=c[c[Ia>>2]>>2]|0;c[Ja>>2]=c[Ha>>2];Id=(Id-(c[c[Ja>>2]>>2]|0)|0)/32|0;a[Ka+0>>0]=a[Ea+0>>0]|0;a[Ka+1>>0]=a[Ea+1>>0]|0;a[Ka+2>>0]=a[Ea+2>>0]|0;a[Ka+3>>0]=a[Ea+3>>0]|0;a[La+0>>0]=a[Fa+0>>0]|0;a[La+1>>0]=a[Fa+1>>0]|0;a[La+2>>0]=a[Fa+2>>0]|0;a[La+3>>0]=a[Fa+3>>0]|0;c[Ma>>2]=Da;c[Na>>2]=Id;if((c[Na>>2]|0)>1){c[Oa>>2]=Ka;Id=c[c[Oa>>2]>>2]|0;c[Pa>>2]=La;Hd=c[Pa>>2]|0;c[Hd>>2]=(c[Hd>>2]|0)+ -32;c[Qa>>2]=Hd;Hd=c[c[Qa>>2]>>2]|0;c[Ra>>2]=Id;c[Sa>>2]=Hd;c[Ta>>2]=c[Ra>>2];Hd=c[Ta>>2]|0;c[Ua+0>>2]=c[Hd+0>>2];c[Ua+4>>2]=c[Hd+4>>2];c[Ua+8>>2]=c[Hd+8>>2];c[Ua+12>>2]=c[Hd+12>>2];c[Ua+16>>2]=c[Hd+16>>2];c[Ua+20>>2]=c[Hd+20>>2];c[Ua+24>>2]=c[Hd+24>>2];c[Ua+28>>2]=c[Hd+28>>2];Hd=c[Ra>>2]|0;c[Va>>2]=c[Sa>>2];Id=c[Va>>2]|0;c[Hd+0>>2]=c[Id+0>>2];c[Hd+4>>2]=c[Id+4>>2];c[Hd+8>>2]=c[Id+8>>2];c[Hd+12>>2]=c[Id+12>>2];c[Hd+16>>2]=c[Id+16>>2];c[Hd+20>>2]=c[Id+20>>2];c[Hd+24>>2]=c[Id+24>>2];c[Hd+28>>2]=c[Id+28>>2];Hd=c[Sa>>2]|0;c[Wa>>2]=Ua;Id=c[Wa>>2]|0;c[Hd+0>>2]=c[Id+0>>2];c[Hd+4>>2]=c[Id+4>>2];c[Hd+8>>2]=c[Id+8>>2];c[Hd+12>>2]=c[Id+12>>2];c[Hd+16>>2]=c[Id+16>>2];c[Hd+20>>2]=c[Id+20>>2];c[Hd+24>>2]=c[Id+24>>2];c[Hd+28>>2]=c[Id+28>>2];c[Xa+0>>2]=c[Ka+0>>2];c[Ya+0>>2]=c[La+0>>2];Hd=c[Ma>>2]|0;Id=(c[Na>>2]|0)-1|0;c[Za+0>>2]=c[Xa+0>>2];c[_a+0>>2]=c[Ya+0>>2];Be(Za,_a,Hd,Id)}c[$a>>2]=kb;Id=c[$a>>2]|0;rb=(c[Id+4>>2]|0)+ -32|0;c[ab>>2]=Id;c[bb>>2]=rb;rb=c[bb>>2]|0;c[cb>>2]=c[ab>>2];c[db>>2]=rb;rb=c[cb>>2]|0;while(1){if((c[db>>2]|0)==(c[rb+4>>2]|0))continue b;c[eb>>2]=rb;c[fb>>2]=(c[eb>>2]|0)+8;c[j>>2]=c[fb>>2];Id=c[j>>2]|0;Fd=rb+4|0;Hd=(c[Fd>>2]|0)+ -32|0;c[Fd>>2]=Hd;c[hb>>2]=Hd;Hd=c[hb>>2]|0;c[ib>>2]=Id;c[jb>>2]=Hd;Hd=c[ib>>2]|0;Id=c[jb>>2]|0;a[lb+0>>0]=a[k+0>>0]|0;c[mb>>2]=Hd;c[nb>>2]=Id}}c[ha>>2]=0;while(1){Hd=c[ha>>2]|0;c[ob>>2]=gb;Id=c[ob>>2]|0;if(!(Hd>>>0<(((c[Id+4>>2]|0)-(c[Id>>2]|0)|0)/4|0)>>>0))continue a;Fd=c[z>>2]|0;Hd=c[C>>2]|0;Id=c[v>>2]|0;Ed=c[ha>>2]|0;c[pb>>2]=gb;c[qb>>2]=Ed;Ag(Fd,Hd,Id,c[(c[c[pb>>2]>>2]|0)+(c[qb>>2]<<2)>>2]|0,kb);c[ha>>2]=(c[ha>>2]|0)+1}}ye(kb);Gd(gb);le(l);i=m;return}function rg(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0;Y=i;i=i+480|0;C=Y+432|0;B=Y+16|0;A=Y+200|0;y=Y+32|0;w=Y+304|0;x=Y+372|0;u=Y+360|0;v=Y+312|0;s=Y+196|0;r=Y+256|0;q=Y+128|0;p=Y+120|0;o=Y+444|0;n=Y+104|0;m=Y+100|0;t=Y+412|0;G=Y+96|0;H=Y+416|0;E=Y+236|0;F=Y+436|0;I=Y+112|0;W=Y+116|0;V=Y+72|0;U=Y+124|0;T=Y+8|0;R=Y+132|0;S=Y+136|0;P=Y+404|0;Q=Y+140|0;N=Y+144|0;M=Y+148|0;L=Y+152|0;O=Y+156|0;La=Y+160|0;Ka=Y+164|0;K=Y+168|0;Ia=Y+172|0;pa=Y+176|0;qa=Y+180|0;na=Y+184|0;oa=Y+188|0;la=Y+192|0;ka=Y+24|0;ja=Y+400|0;ha=Y+40|0;fa=Y+204|0;ga=Y+208|0;da=Y+212|0;j=Y+216|0;ba=Y+220|0;aa=Y+468|0;$=Y+472|0;_=Y+440|0;Z=Y+448|0;g=Y+240|0;X=Y+244|0;ca=Y+248|0;Ga=Y+252|0;Fa=Y+48|0;Ea=Y+260|0;Da=Y;Ba=Y+268|0;Ca=Y+272|0;za=Y+276|0;Aa=Y+280|0;xa=Y+284|0;wa=Y+288|0;va=Y+292|0;ya=Y+296|0;Za=Y+300|0;Ya=Y+80|0;Xa=Y+308|0;Wa=Y+64|0;Ta=Y+316|0;Ua=Y+320|0;Va=Y+396|0;Ra=Y+324|0;Sa=Y+328|0;Na=Y+332|0;Oa=Y+336|0;Pa=Y+344|0;$a=Y+352|0;_a=Y+356|0;ab=Y+452|0;bb=Y+364|0;sa=Y+460|0;l=Y+464|0;J=Y+376|0;Ha=Y+380|0;ea=Y+384|0;Ma=Y+408|0;Qa=Y+424|0;ta=Y+228|0;ra=Y+232|0;ua=Y+88|0;ma=Y+456|0;ia=Y+264|0;Ja=Y+56|0;D=Y+368|0;z=Y+224|0;k=Y+108|0;c[sa>>2]=b;c[l>>2]=d;c[J>>2]=e;c[Ha>>2]=f;c[ab>>2]=ea;c[bb>>2]=Y+476;b=c[bb>>2]|0;c[$a>>2]=c[ab>>2];c[_a>>2]=b;ve(c[$a>>2]|0,c[_a>>2]|0);c[Ma>>2]=0;while(1){if((c[Ma>>2]|0)>=(c[l>>2]|0))break;bb=(c[Ha>>2]|0)+(c[Ma>>2]<<2)|0;c[Na>>2]=ea;c[Oa>>2]=bb;re(Pa,c[Na>>2]|0,c[Oa>>2]|0);c[Ra>>2]=Qa;c[Sa>>2]=Pa;bb=c[Sa>>2]|0;c[Ta>>2]=c[Ra>>2];c[Ua>>2]=bb;bb=c[Ta>>2]|0;ab=c[Ua>>2]|0;c[Va+0>>2]=c[ab+0>>2];a[Wa+0>>0]=a[Va+0>>0]|0;a[Wa+1>>0]=a[Va+1>>0]|0;a[Wa+2>>0]=a[Va+2>>0]|0;a[Wa+3>>0]=a[Va+3>>0]|0;c[Xa>>2]=bb;ab=c[Xa>>2]|0;a[Ya+0>>0]=a[Wa+0>>0]|0;a[Ya+1>>0]=a[Wa+1>>0]|0;a[Ya+2>>0]=a[Wa+2>>0]|0;a[Ya+3>>0]=a[Wa+3>>0]|0;c[Za>>2]=ab;c[c[Za>>2]>>2]=c[Ya>>2];a[bb+4>>0]=a[(c[Ua>>2]|0)+4>>0]&1;c[Ma>>2]=(c[Ma>>2]|0)+1}c[ta>>2]=0;while(1){if((c[ta>>2]|0)>=(c[l>>2]|0))break;if((c[ta>>2]|0)==0)f=c[c[Ha>>2]>>2]|0;else f=c[(c[Ha>>2]|0)+((c[ta>>2]|0)-1<<2)>>2]|0;c[ra>>2]=f;h[ua>>3]=+yg((c[sa>>2]|0)+((c[ta>>2]|0)*1040|0)|0,(c[J>>2]|0)+((c[ra>>2]|0)*1040|0)|0);c[va>>2]=ea;c[wa>>2]=c[va>>2];c[xa>>2]=c[wa>>2];bb=c[c[xa>>2]>>2]|0;c[za>>2]=ya;c[Aa>>2]=bb;bb=c[Aa>>2]|0;c[Ba>>2]=c[za>>2];c[Ca>>2]=bb;c[c[Ba>>2]>>2]=c[Ca>>2];a[Da+0>>0]=a[ya+0>>0]|0;a[Da+1>>0]=a[ya+1>>0]|0;a[Da+2>>0]=a[ya+2>>0]|0;a[Da+3>>0]=a[ya+3>>0]|0;c[Ea>>2]=ma;bb=c[Ea>>2]|0;a[Fa+0>>0]=a[Da+0>>0]|0;a[Fa+1>>0]=a[Da+1>>0]|0;a[Fa+2>>0]=a[Da+2>>0]|0;a[Fa+3>>0]=a[Da+3>>0]|0;c[Ga>>2]=bb;c[c[Ga>>2]>>2]=c[Fa>>2];while(1){c[X>>2]=ea;c[g>>2]=c[X>>2];c[Z>>2]=c[g>>2];c[_>>2]=(c[Z>>2]|0)+4;c[$>>2]=c[_>>2];c[aa>>2]=c[$>>2];c[ba>>2]=c[aa>>2];bb=c[ba>>2]|0;c[da>>2]=ca;c[j>>2]=bb;bb=c[j>>2]|0;c[fa>>2]=c[da>>2];c[ga>>2]=bb;c[c[fa>>2]>>2]=c[ga>>2];a[ha+0>>0]=a[ca+0>>0]|0;a[ha+1>>0]=a[ca+1>>0]|0;a[ha+2>>0]=a[ca+2>>0]|0;a[ha+3>>0]=a[ca+3>>0]|0;c[ja>>2]=ia;bb=c[ja>>2]|0;a[ka+0>>0]=a[ha+0>>0]|0;a[ka+1>>0]=a[ha+1>>0]|0;a[ka+2>>0]=a[ha+2>>0]|0;a[ka+3>>0]=a[ha+3>>0]|0;c[la>>2]=bb;c[c[la>>2]>>2]=c[ka>>2];c[na>>2]=ma;c[oa>>2]=ia;bb=c[oa>>2]|0;c[pa>>2]=c[na>>2];c[qa>>2]=bb;if(!((c[c[pa>>2]>>2]|0)==(c[c[qa>>2]>>2]|0)^1))break;bb=(c[sa>>2]|0)+((c[ta>>2]|0)*1040|0)|0;c[Ia>>2]=ma;h[Ja>>3]=+yg(bb,(c[J>>2]|0)+((c[(c[c[Ia>>2]>>2]|0)+16>>2]|0)*1040|0)|0);if(+h[Ja>>3]<+h[ua>>3]){h[ua>>3]=+h[Ja>>3];c[Ka>>2]=ma;c[ra>>2]=c[(c[c[Ka>>2]>>2]|0)+16>>2]}c[La>>2]=ma;bb=c[La>>2]|0;c[bb>>2]=qe(c[bb>>2]|0)|0}c[(c[Ha>>2]|0)+(c[ta>>2]<<2)>>2]=c[ra>>2];c[ta>>2]=(c[ta>>2]|0)+1}c[L>>2]=ea;c[M>>2]=c[L>>2];c[N>>2]=c[M>>2];bb=c[c[N>>2]>>2]|0;c[P>>2]=O;c[Q>>2]=bb;bb=c[Q>>2]|0;c[R>>2]=c[P>>2];c[S>>2]=bb;c[c[R>>2]>>2]=c[S>>2];a[T+0>>0]=a[O+0>>0]|0;a[T+1>>0]=a[O+1>>0]|0;a[T+2>>0]=a[O+2>>0]|0;a[T+3>>0]=a[O+3>>0]|0;c[U>>2]=D;bb=c[U>>2]|0;a[V+0>>0]=a[T+0>>0]|0;a[V+1>>0]=a[T+1>>0]|0;a[V+2>>0]=a[T+2>>0]|0;a[V+3>>0]=a[T+3>>0]|0;c[W>>2]=bb;c[c[W>>2]>>2]=c[V>>2];while(1){c[m>>2]=ea;c[n>>2]=c[m>>2];c[o>>2]=c[n>>2];c[p>>2]=(c[o>>2]|0)+4;c[q>>2]=c[p>>2];c[r>>2]=c[q>>2];c[s>>2]=c[r>>2];bb=c[s>>2]|0;c[u>>2]=t;c[v>>2]=bb;bb=c[v>>2]|0;c[w>>2]=c[u>>2];c[x>>2]=bb;c[c[w>>2]>>2]=c[x>>2];a[y+0>>0]=a[t+0>>0]|0;a[y+1>>0]=a[t+1>>0]|0;a[y+2>>0]=a[t+2>>0]|0;a[y+3>>0]=a[t+3>>0]|0;c[A>>2]=z;bb=c[A>>2]|0;a[B+0>>0]=a[y+0>>0]|0;a[B+1>>0]=a[y+1>>0]|0;a[B+2>>0]=a[y+2>>0]|0;a[B+3>>0]=a[y+3>>0]|0;c[C>>2]=bb;c[c[C>>2]>>2]=c[B>>2];c[E>>2]=D;c[F>>2]=z;bb=c[F>>2]|0;c[G>>2]=c[E>>2];c[H>>2]=bb;if(!((c[c[G>>2]>>2]|0)==(c[c[H>>2]>>2]|0)^1))break;c[I>>2]=D;mg((c[J>>2]|0)+((c[(c[c[I>>2]>>2]|0)+16>>2]|0)*1040|0)|0);c[K>>2]=D;bb=c[K>>2]|0;c[bb>>2]=qe(c[bb>>2]|0)|0}c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[l>>2]|0))break;zg((c[J>>2]|0)+((c[(c[Ha>>2]|0)+(c[k>>2]<<2)>>2]|0)*1040|0)|0,(c[sa>>2]|0)+((c[k>>2]|0)*1040|0)|0);c[k>>2]=(c[k>>2]|0)+1}le(ea);i=Y;return}function sg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0;g=i;i=i+288|0;y=g+176|0;z=g+88|0;w=g+208|0;x=g+60|0;k=g+232|0;l=g+148|0;m=g+256|0;u=g+196|0;v=g+156|0;n=g+84|0;o=g+64|0;s=g+68|0;t=g+72|0;ba=g+76|0;ca=g+80|0;$=g+180|0;aa=g+164|0;_=g+96|0;Z=g+32|0;Y=g+100|0;W=g+24|0;U=g+108|0;V=g+112|0;S=g+116|0;T=g+120|0;Q=g+236|0;P=g+128|0;O=g+252|0;N=g+260|0;M=g+268|0;L=g+152|0;K=g+272|0;R=g+244|0;J=g+160|0;I=g+8|0;H=g+172|0;e=g;C=g+92|0;D=g+184|0;E=g+188|0;A=g+192|0;B=g+104|0;da=g+200|0;fa=g+204|0;ga=g+16|0;ia=g+212|0;ha=g+40|0;ka=g+220|0;ea=g+276|0;ja=g+277|0;la=g+216|0;ma=g+124|0;p=g+168|0;j=g+240|0;f=g+44|0;F=g+132|0;q=g+144|0;r=g+264|0;G=g+248|0;X=g+56|0;h=g+228|0;c[p>>2]=b;c[j>>2]=d;tg(f,c[p>>2]|0);c[la>>2]=F;c[ma>>2]=g+278;b=c[ma>>2]|0;c[ka>>2]=c[la>>2];c[g+224>>2]=b;b=c[ka>>2]|0;a[ha+0>>0]=a[ja+0>>0]|0;c[ia>>2]=ea;d=c[ia>>2]|0;a[ga+0>>0]=a[ha+0>>0]|0;c[fa>>2]=d;de(b,ea);c[q>>2]=0;c[r>>2]=0;while(1){la=c[r>>2]|0;c[da>>2]=c[j>>2];ma=c[da>>2]|0;if(!(la>>>0<(((c[ma+4>>2]|0)-(c[ma>>2]|0)|0)/4|0)>>>0))break;ma=c[r>>2]|0;c[A>>2]=c[j>>2];c[B>>2]=ma;ma=(c[c[A>>2]>>2]|0)+(c[B>>2]<<2)|0;c[C>>2]=F;c[D>>2]=ma;be(E,c[C>>2]|0,c[D>>2]|0);a[e+0>>0]=a[E+0>>0]|0;a[e+1>>0]=a[E+1>>0]|0;a[e+2>>0]=a[E+2>>0]|0;a[e+3>>0]=a[E+3>>0]|0;c[H>>2]=G;ma=c[H>>2]|0;a[I+0>>0]=a[e+0>>0]|0;a[I+1>>0]=a[e+1>>0]|0;a[I+2>>0]=a[e+2>>0]|0;a[I+3>>0]=a[e+3>>0]|0;c[J>>2]=ma;ma=c[J>>2]|0;c[ma+0>>2]=c[I+0>>2];c[K>>2]=F;c[L>>2]=c[K>>2];c[M>>2]=c[L>>2];c[N>>2]=(c[M>>2]|0)+4;c[O>>2]=c[N>>2];c[P>>2]=c[O>>2];c[Q>>2]=c[P>>2];ma=c[Q>>2]|0;c[S>>2]=R;c[T>>2]=ma;ma=c[T>>2]|0;c[U>>2]=c[S>>2];c[V>>2]=ma;c[c[U>>2]>>2]=c[V>>2];a[W+0>>0]=a[R+0>>0]|0;a[W+1>>0]=a[R+1>>0]|0;a[W+2>>0]=a[R+2>>0]|0;a[W+3>>0]=a[R+3>>0]|0;c[Y>>2]=X;ma=c[Y>>2]|0;a[Z+0>>0]=a[W+0>>0]|0;a[Z+1>>0]=a[W+1>>0]|0;a[Z+2>>0]=a[W+2>>0]|0;a[Z+3>>0]=a[W+3>>0]|0;c[_>>2]=ma;ma=c[_>>2]|0;c[ma+0>>2]=c[Z+0>>2];c[$>>2]=G;c[aa>>2]=X;ma=c[aa>>2]|0;c[ba>>2]=c[$>>2];c[ca>>2]=ma;if((c[c[ba>>2]>>2]|0)==(c[c[ca>>2]>>2]|0)){ma=c[q>>2]|0;la=c[r>>2]|0;c[s>>2]=c[j>>2];c[t>>2]=la;c[(Rd(F,(c[c[s>>2]>>2]|0)+(c[t>>2]<<2)|0)|0)>>2]=ma;ma=c[q>>2]|0;c[u>>2]=c[p>>2];c[v>>2]=ma;ma=(c[c[u>>2]>>2]|0)+((c[v>>2]|0)*1040|0)|0;la=c[r>>2]|0;c[w>>2]=c[j>>2];c[x>>2]=la;la=c[(c[c[w>>2]>>2]|0)+(c[x>>2]<<2)>>2]|0;c[y>>2]=f;c[z>>2]=la;By(ma|0,(c[c[y>>2]>>2]|0)+((c[z>>2]|0)*1040|0)|0,1040)|0;c[q>>2]=(c[q>>2]|0)+1}c[r>>2]=(c[r>>2]|0)+1}og(c[p>>2]|0,c[q>>2]|0);c[h>>2]=0;while(1){la=c[h>>2]|0;c[k>>2]=c[j>>2];ma=c[k>>2]|0;if(!(la>>>0<(((c[ma+4>>2]|0)-(c[ma>>2]|0)|0)/4|0)>>>0))break;ma=c[h>>2]|0;c[l>>2]=c[j>>2];c[m>>2]=ma;ma=c[(Rd(F,(c[c[l>>2]>>2]|0)+(c[m>>2]<<2)|0)|0)>>2]|0;la=c[h>>2]|0;c[n>>2]=c[j>>2];c[o>>2]=la;c[(c[c[n>>2]>>2]|0)+(c[o>>2]<<2)>>2]=ma;c[h>>2]=(c[h>>2]|0)+1}Sd(F);hg(f);i=g;return}function tg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;ug(c[f>>2]|0,c[e>>2]|0);i=d;return}



function ug(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;e=i;i=i+208|0;h=e+96|0;P=e+80|0;Q=e+76|0;S=e+176|0;R=e+184|0;O=e+36|0;M=e+156|0;I=e+144|0;J=e+92|0;L=e+60|0;K=e+56|0;H=e+40|0;F=e+44|0;B=e+48|0;C=e+52|0;E=e+140|0;D=e+116|0;A=e+88|0;y=e+72|0;q=e+164|0;j=e+172|0;l=e+180|0;n=e+188|0;k=e+192|0;m=e+16|0;s=e+196|0;o=e+100|0;t=e+104|0;p=e+200|0;r=e+8|0;u=e+112|0;w=e+136|0;v=e+24|0;T=e+120|0;U=e+124|0;V=e+128|0;N=e+132|0;G=e+32|0;z=e+64|0;x=e+202|0;X=e+148|0;Y=e;_=e+160|0;Z=e+203|0;$=e+152|0;aa=e+28|0;ba=e+84|0;ca=e+68|0;g=e+168|0;W=e+201|0;f=e+108|0;c[ca>>2]=b;c[g>>2]=d;d=c[ca>>2]|0;c[ba>>2]=c[g>>2];c[aa>>2]=(c[ba>>2]|0)+8;c[$>>2]=c[aa>>2];c[_>>2]=c[$>>2];b=c[_>>2]|0;a[Y+0>>0]=a[Z+0>>0]|0;c[X>>2]=b;c[U>>2]=d;c[V>>2]=W;b=c[U>>2]|0;c[T>>2]=b;c[S>>2]=O;c[R>>2]=-1;R=c[R>>2]|0;c[P>>2]=c[S>>2];c[Q>>2]=R;c[c[P>>2]>>2]=0;c[N>>2]=c[O>>2];c[M>>2]=N;c[b>>2]=0;c[L>>2]=H;c[K>>2]=-1;K=c[K>>2]|0;c[I>>2]=c[L>>2];c[J>>2]=K;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[F>>2]=G;c[b+4>>2]=0;b=b+8|0;c[E>>2]=A;c[D>>2]=-1;D=c[D>>2]|0;c[B>>2]=c[E>>2];c[C>>2]=D;c[c[B>>2]>>2]=0;c[z>>2]=c[A>>2];c[y>>2]=z;a[v+0>>0]=a[x+0>>0]|0;c[u>>2]=b;c[w>>2]=0;u=c[u>>2]|0;b=c[w>>2]|0;a[r+0>>0]=a[v+0>>0]|0;c[o>>2]=u;c[t>>2]=b;o=c[o>>2]|0;c[s>>2]=t;b=c[c[s>>2]>>2]|0;c[q>>2]=r;a[m+0>>0]=a[p+0>>0]|0;c[n>>2]=o;c[k>>2]=b;b=c[n>>2]|0;c[l>>2]=m;c[j>>2]=k;c[b>>2]=c[c[j>>2]>>2];c[h>>2]=c[g>>2];b=c[h>>2]|0;c[f>>2]=((c[b+4>>2]|0)-(c[b>>2]|0)|0)/1040|0;if(!((c[f>>2]|0)>>>0>0)){i=e;return}vg(d,c[f>>2]|0);wg(d,c[c[g>>2]>>2]|0,c[(c[g>>2]|0)+4>>2]|0);i=e;return}function vg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;k=i;i=i+64|0;d=k+36|0;e=k+16|0;l=k+32|0;j=k+40|0;f=k+48|0;g=k+8|0;m=k+4|0;n=k+24|0;o=k+12|0;p=k+28|0;h=k;c[p>>2]=a;c[h>>2]=b;b=c[p>>2]|0;a=c[h>>2]|0;if(a>>>0>(xg(b)|0)>>>0)ht(b);else{c[o>>2]=b;c[n>>2]=(c[o>>2]|0)+8;c[m>>2]=c[n>>2];p=c[h>>2]|0;c[e>>2]=c[m>>2];c[l>>2]=p;p=c[l>>2]|0;c[k+44>>2]=c[e>>2];c[d>>2]=p;c[k+20>>2]=0;p=Qw((c[d>>2]|0)*1040|0)|0;c[b+4>>2]=p;c[b>>2]=p;p=(c[b>>2]|0)+((c[h>>2]|0)*1040|0)|0;c[g>>2]=b;c[f>>2]=(c[g>>2]|0)+8;c[j>>2]=c[f>>2];c[c[j>>2]>>2]=p;i=k;return}}function wg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;k=i;i=i+48|0;g=k+36|0;j=k+16|0;e=k;l=k+28|0;n=k+32|0;o=k+40|0;p=k+12|0;q=k+24|0;h=k+20|0;m=k+8|0;f=k+4|0;c[q>>2]=a;c[h>>2]=b;c[m>>2]=d;d=c[q>>2]|0;c[p>>2]=d;c[o>>2]=(c[p>>2]|0)+8;c[n>>2]=c[o>>2];c[f>>2]=c[n>>2];while(1){if((c[h>>2]|0)==(c[m>>2]|0))break;p=c[f>>2]|0;c[g>>2]=c[d+4>>2];q=c[g>>2]|0;b=c[h>>2]|0;c[j>>2]=p;c[e>>2]=q;c[l>>2]=b;b=c[e>>2]|0;if((b|0)!=0)By(b|0,c[l>>2]|0,1040)|0;q=d+4|0;c[q>>2]=(c[q>>2]|0)+1040;c[h>>2]=(c[h>>2]|0)+1040}i=k;return}function xg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+80|0;q=h+44|0;r=h+40|0;s=h+8|0;u=h+12|0;t=h+76|0;k=h+36|0;g=h+16|0;f=h+20|0;d=h+68|0;e=h+32|0;l=h;n=h+48|0;j=h+52|0;m=h+77|0;v=h+60|0;w=h+64|0;x=h+28|0;y=h+24|0;p=h+56|0;o=h+72|0;c[y>>2]=b;c[x>>2]=c[y>>2];c[w>>2]=(c[x>>2]|0)+8;c[v>>2]=c[w>>2];c[u>>2]=c[v>>2];b=c[u>>2]|0;a[s+0>>0]=a[t+0>>0]|0;c[r>>2]=b;c[q>>2]=c[r>>2];c[p>>2]=4129776;c[o>>2]=4294967295/2|0;c[n>>2]=p;c[j>>2]=o;b=c[n>>2]|0;j=c[j>>2]|0;a[l+0>>0]=a[m+0>>0]|0;c[d>>2]=b;c[e>>2]=j;j=c[e>>2]|0;b=c[d>>2]|0;c[k>>2]=l;c[g>>2]=j;c[f>>2]=b;i=h;return c[((c[c[g>>2]>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0?c[e>>2]|0:c[d>>2]|0)>>2]|0}function yg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0.0;d=i;i=i+1056|0;e=d+1040|0;j=d+1052|0;f=d+1048|0;g=d;c[j>>2]=a;c[f>>2]=b;if((c[(c[j>>2]|0)+1024>>2]|0)==0){h[e>>3]=0.0;k=+h[e>>3];i=d;return+k}else{By(g|0,c[j>>2]|0,1040)|0;zg(g,c[f>>2]|0);k=+pg(g);h[e>>3]=k- +h[(c[f>>2]|0)+1032>>3];k=+h[e>>3];i=d;return+k}return 0.0}function zg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;g=d+8|0;f=d+4|0;e=d;c[g>>2]=a;c[f>>2]=b;b=c[g>>2]|0;a=b+1024|0;c[a>>2]=(c[a>>2]|0)+(c[(c[f>>2]|0)+1024>>2]|0);c[e>>2]=0;while(1){if((c[e>>2]|0)>=256)break;g=b+(c[e>>2]<<2)|0;c[g>>2]=(c[g>>2]|0)+(c[(c[f>>2]|0)+(c[e>>2]<<2)>>2]|0);c[e>>2]=(c[e>>2]|0)+1}i=d;return}function Ag(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0.0;M=i;i=i+1344|0;k=M+1268|0;l=M+1308|0;ra=M+1216|0;ga=M+1300|0;qa=M+1208|0;na=M+1276|0;oa=M+1272|0;ma=M+1080|0;ja=M+1332|0;ka=M+1324|0;fa=M+1337|0;R=M+1292|0;T=M+1212|0;U=M+1224|0;r=M+1220|0;Q=M+1148|0;P=M+1152|0;O=M+1156|0;X=M+1160|0;W=M+1164|0;V=M+1168|0;_=M+1172|0;S=M+1176|0;H=M+1180|0;G=M+1184|0;J=M+1188|0;I=M+1192|0;j=M+1196|0;L=M+1200|0;N=M+1204|0;z=M+1296|0;y=M+1304|0;B=M+1312|0;A=M+1320|0;E=M+1328|0;D=M+1228|0;F=M+1232|0;ha=M+1236|0;ia=M+1240|0;m=M+1244|0;n=M+1248|0;p=M+1252|0;o=M+1256|0;s=M+1260|0;q=M+1264|0;u=M+8|0;w=M+24|0;x=M;pa=M+1280|0;ea=M+1284|0;sa=M+1144|0;da=M+1136|0;$=M+1128|0;t=M+1132|0;ta=M+1140|0;ca=M+1338|0;Z=M+1088|0;ba=M+1072|0;la=M+16|0;aa=M+32|0;Y=M+1120|0;K=M+1288|0;C=M+1316|0;v=M+1336|0;c[ea>>2]=b;c[sa>>2]=d;c[da>>2]=e;c[$>>2]=f;c[t>>2]=g;if((c[da>>2]|0)==(c[$>>2]|0)){i=M;return}if((c[$>>2]|0)<(c[da>>2]|0)){c[ta>>2]=c[$>>2];c[$>>2]=c[da>>2];c[da>>2]=c[ta>>2]}a[ca>>0]=0;c[Z+0>>2]=0;c[Z+4>>2]=0;c[Z+8>>2]=0;c[Z+12>>2]=0;c[Z+16>>2]=0;c[Z+20>>2]=0;c[Z+24>>2]=0;c[Z+28>>2]=0;c[Z>>2]=c[da>>2];c[Z+4>>2]=c[$>>2];a[Z+8>>0]=1;h[Z+24>>3]=+De(c[(c[sa>>2]|0)+(c[da>>2]<<2)>>2]|0,c[(c[sa>>2]|0)+(c[$>>2]<<2)>>2]|0)*.5;g=Z+24|0;h[g>>3]=+h[g>>3]- +h[(c[ea>>2]|0)+((c[da>>2]|0)*1040|0)+1032>>3];g=Z+24|0;h[g>>3]=+h[g>>3]- +h[(c[ea>>2]|0)+((c[$>>2]|0)*1040|0)+1032>>3];g=(c[ea>>2]|0)+((c[$>>2]|0)*1040|0)|0;do if((c[(c[ea>>2]|0)+((c[da>>2]|0)*1040|0)+1024>>2]|0)!=0){if((c[g+1024>>2]|0)==0){h[Z+16>>3]=+h[(c[ea>>2]|0)+((c[da>>2]|0)*1040|0)+1032>>3];a[ca>>0]=1;break}c[pa>>2]=c[t>>2];b=c[pa>>2]|0;if((c[b>>2]|0)==(c[b+4>>2]|0))ua=1.0e+99;else{h[la>>3]=0.0;c[ha>>2]=c[t>>2];c[ia>>2]=0;b=(c[c[ha>>2]>>2]|0)+(c[ia>>2]<<5)+24|0;c[ja>>2]=la;c[ka>>2]=b;b=c[ja>>2]|0;d=c[ka>>2]|0;a[ma+0>>0]=a[fa+0>>0]|0;c[na>>2]=b;c[oa>>2]=d;d=c[na>>2]|0;b=c[oa>>2]|0;c[ra>>2]=ma;c[ga>>2]=d;c[qa>>2]=b;ua=+h[(+h[c[ga>>2]>>3]<+h[c[qa>>2]>>3]?c[oa>>2]|0:c[na>>2]|0)>>3]}h[ba>>3]=ua;By(aa|0,(c[ea>>2]|0)+((c[da>>2]|0)*1040|0)|0,1040)|0;zg(aa,(c[ea>>2]|0)+((c[$>>2]|0)*1040|0)|0);h[Y>>3]=+pg(aa);if(+h[Y>>3]<+h[ba>>3]- +h[Z+24>>3]){h[Z+16>>3]=+h[Y>>3];a[ca>>0]=1}}else{h[Z+16>>3]=+h[g+1032>>3];a[ca>>0]=1}while(0);if(!(a[ca>>0]&1)){i=M;return}Y=Z+24|0;h[Y>>3]=+h[Y>>3]+ +h[Z+16>>3];c[_>>2]=c[t>>2];c[S>>2]=Z;Y=c[_>>2]|0;b=c[Y+4>>2]|0;c[V>>2]=Y;c[W>>2]=(c[V>>2]|0)+8;c[X>>2]=c[W>>2];if((b|0)!=(c[c[X>>2]>>2]|0)){c[O>>2]=Y;c[P>>2]=(c[O>>2]|0)+8;c[Q>>2]=c[P>>2];d=c[Q>>2]|0;c[R>>2]=c[Y+4>>2];b=c[R>>2]|0;O=c[S>>2]|0;c[T>>2]=d;c[U>>2]=b;c[r>>2]=O;O=c[U>>2]|0;if((O|0)!=0){b=c[r>>2]|0;c[O+0>>2]=c[b+0>>2];c[O+4>>2]=c[b+4>>2];c[O+8>>2]=c[b+8>>2];c[O+12>>2]=c[b+12>>2];c[O+16>>2]=c[b+16>>2];c[O+20>>2]=c[b+20>>2];c[O+24>>2]=c[b+24>>2];c[O+28>>2]=c[b+28>>2]}b=Y+4|0;c[b>>2]=(c[b>>2]|0)+32}else Fe(Y,c[S>>2]|0);c[N>>2]=c[t>>2];b=c[N>>2]|0;d=c[b>>2]|0;c[j>>2]=b;c[L>>2]=d;d=c[L>>2]|0;c[J>>2]=K;c[I>>2]=d;d=c[I>>2]|0;c[H>>2]=c[J>>2];c[G>>2]=d;c[c[H>>2]>>2]=c[G>>2];c[F>>2]=c[t>>2];d=c[F>>2]|0;b=c[d+4>>2]|0;c[E>>2]=d;c[D>>2]=b;b=c[D>>2]|0;c[B>>2]=C;c[A>>2]=b;b=c[A>>2]|0;c[z>>2]=c[B>>2];c[y>>2]=b;c[c[z>>2]>>2]=c[y>>2];a[x+0>>0]=a[K+0>>0]|0;a[x+1>>0]=a[K+1>>0]|0;a[x+2>>0]=a[K+2>>0]|0;a[x+3>>0]=a[K+3>>0]|0;a[w+0>>0]=a[C+0>>0]|0;a[w+1>>0]=a[C+1>>0]|0;a[w+2>>0]=a[C+2>>0]|0;a[w+3>>0]=a[C+3>>0]|0;a[u+0>>0]=a[v+0>>0]|0;c[s+0>>2]=c[x+0>>2];c[q+0>>2]=c[w+0>>2];c[p>>2]=w;c[o>>2]=x;c[n>>2]=c[p>>2];b=c[c[n>>2]>>2]|0;c[m>>2]=c[o>>2];b=(b-(c[c[m>>2]>>2]|0)|0)/32|0;c[l+0>>2]=c[s+0>>2];c[k+0>>2]=c[q+0>>2];Ee(l,k,u,b);i=M;return}function Bg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;t=i;i=i+144|0;h=t+60|0;u=t+48|0;v=t+124|0;e=t+116|0;f=t+8|0;r=t;o=t+84|0;q=t+52|0;A=t+40|0;z=t+104|0;y=t+112|0;x=t+120|0;w=t+128|0;g=t+132|0;F=t+136|0;p=t+64|0;l=t+68|0;m=t+72|0;n=t+76|0;E=t+16|0;D=t+88|0;C=t+96|0;B=t+4|0;G=t+92|0;H=t+44|0;I=t+100|0;J=t+108|0;s=t+12|0;k=t+80|0;j=t+20|0;c[J>>2]=b;c[s>>2]=d;d=c[J>>2]|0;c[I>>2]=d;c[H>>2]=(c[I>>2]|0)+8;c[G>>2]=c[H>>2];if((((c[c[G>>2]>>2]|0)-(c[d+4>>2]|0)|0)/1040|0)>>>0>=(c[s>>2]|0)>>>0){Cg(d,c[s>>2]|0);i=t;return}c[B>>2]=d;c[C>>2]=(c[B>>2]|0)+8;c[D>>2]=c[C>>2];c[k>>2]=c[D>>2];c[E>>2]=d;B=c[E>>2]|0;B=(((c[B+4>>2]|0)-(c[B>>2]|0)|0)/1040|0)+(c[s>>2]|0)|0;c[F>>2]=d;c[p>>2]=B;B=c[F>>2]|0;c[l>>2]=xg(B)|0;if((c[p>>2]|0)>>>0>(c[l>>2]|0)>>>0)ht(B);c[w>>2]=B;c[x>>2]=c[w>>2];J=c[x>>2]|0;c[y>>2]=J;c[z>>2]=(c[y>>2]|0)+8;c[A>>2]=c[z>>2];c[m>>2]=((c[c[A>>2]>>2]|0)-(c[J>>2]|0)|0)/1040|0;if((c[m>>2]|0)>>>0>=(((c[l>>2]|0)>>>0)/2|0)>>>0)c[g>>2]=c[l>>2];else{c[n>>2]=c[m>>2]<<1;c[o>>2]=n;c[q>>2]=p;J=c[o>>2]|0;I=c[q>>2]|0;a[r+0>>0]=a[t+140>>0]|0;c[e>>2]=J;c[f>>2]=I;I=c[e>>2]|0;J=c[f>>2]|0;c[t+56>>2]=r;c[u>>2]=I;c[v>>2]=J;c[g>>2]=c[((c[c[u>>2]>>2]|0)>>>0<(c[c[v>>2]>>2]|0)>>>0?c[f>>2]|0:c[e>>2]|0)>>2]}I=c[g>>2]|0;c[h>>2]=d;J=c[h>>2]|0;Dg(j,I,((c[J+4>>2]|0)-(c[J>>2]|0)|0)/1040|0,c[k>>2]|0);Eg(j,c[s>>2]|0);Fg(d,j);Gg(j);i=t;return}function Cg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;g=d+28|0;h=d+16|0;j=d+4|0;k=d+8|0;l=d+32|0;m=d;n=d+12|0;e=d+24|0;f=d+20|0;c[n>>2]=a;c[e>>2]=b;a=c[n>>2]|0;c[m>>2]=a;c[l>>2]=(c[m>>2]|0)+8;c[k>>2]=c[l>>2];c[f>>2]=c[k>>2];do{n=c[f>>2]|0;c[g>>2]=c[a+4>>2];b=c[g>>2]|0;c[h>>2]=n;c[j>>2]=b;b=c[j>>2]|0;if((b|0)!=0)kg(b);n=a+4|0;c[n>>2]=(c[n>>2]|0)+1040;c[e>>2]=(c[e>>2]|0)+ -1}while((c[e>>2]|0)>>>0>0);i=d;return}function Dg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;k=f+12|0;j=f+8|0;h=f+4|0;g=f;c[k>>2]=a;c[j>>2]=b;c[h>>2]=d;c[g>>2]=e;Ig(c[k>>2]|0,c[j>>2]|0,c[h>>2]|0,c[g>>2]|0);i=f;return}function Eg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;g=d+28|0;h=d+16|0;j=d+4|0;k=d+8|0;l=d+32|0;m=d;n=d+12|0;e=d+24|0;f=d+20|0;c[n>>2]=a;c[e>>2]=b;a=c[n>>2]|0;c[m>>2]=a;c[l>>2]=(c[m>>2]|0)+12;c[k>>2]=c[l>>2];c[f>>2]=c[(c[k>>2]|0)+4>>2];do{n=c[f>>2]|0;c[g>>2]=c[a+8>>2];b=c[g>>2]|0;c[h>>2]=n;c[j>>2]=b;b=c[j>>2]|0;if((b|0)!=0)kg(b);n=a+8|0;c[n>>2]=(c[n>>2]|0)+1040;c[e>>2]=(c[e>>2]|0)+ -1}while((c[e>>2]|0)>>>0>0);i=d;return}function Fg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=i;i=i+144|0;F=d+108|0;H=d+88|0;G=d+80|0;E=d+48|0;C=d+8|0;z=d+12|0;D=d+84|0;B=d+16|0;y=d+20|0;A=d+24|0;w=d+28|0;t=d+32|0;x=d+104|0;v=d+112|0;s=d+120|0;u=d+128|0;m=d+136|0;q=d+52|0;r=d+56|0;n=d+60|0;o=d+64|0;p=d+68|0;k=d+72|0;g=d+76|0;l=d+4|0;j=d;f=d+92|0;h=d+96|0;K=d+100|0;J=d+40|0;I=d+116|0;L=d+44|0;e=d+124|0;c[L>>2]=a;c[e>>2]=b;a=c[L>>2]|0;c[I>>2]=a;c[J>>2]=(c[I>>2]|0)+8;c[K>>2]=c[J>>2];J=c[a>>2]|0;I=c[a+4>>2]|0;b=(c[e>>2]|0)+4|0;c[d+132>>2]=c[K>>2];c[F>>2]=J;c[H>>2]=I;c[G>>2]=b;c[E>>2]=((c[H>>2]|0)-(c[F>>2]|0)|0)/1040|0;b=c[G>>2]|0;c[b>>2]=(c[b>>2]|0)+((0-(c[E>>2]|0)|0)*1040|0);By(c[c[G>>2]>>2]|0,c[F>>2]|0,(c[E>>2]|0)*1040|0)|0;b=(c[e>>2]|0)+4|0;c[B>>2]=a;c[y>>2]=b;c[D>>2]=c[B>>2];c[A>>2]=c[c[D>>2]>>2];c[C>>2]=c[y>>2];c[c[B>>2]>>2]=c[c[C>>2]>>2];c[z>>2]=A;c[c[y>>2]>>2]=c[c[z>>2]>>2];b=(c[e>>2]|0)+8|0;c[v>>2]=a+4;c[s>>2]=b;c[x>>2]=c[v>>2];c[u>>2]=c[c[x>>2]>>2];c[w>>2]=c[s>>2];c[c[v>>2]>>2]=c[c[w>>2]>>2];c[t>>2]=u;c[c[s>>2]>>2]=c[c[t>>2]>>2];c[r>>2]=a;c[q>>2]=(c[r>>2]|0)+8;c[m>>2]=c[q>>2];m=c[m>>2]|0;c[p>>2]=c[e>>2];c[o>>2]=(c[p>>2]|0)+12;c[n>>2]=c[o>>2];b=c[n>>2]|0;c[j>>2]=m;c[f>>2]=b;c[l>>2]=c[j>>2];c[h>>2]=c[c[l>>2]>>2];c[k>>2]=c[f>>2];c[c[j>>2]>>2]=c[c[k>>2]>>2];c[g>>2]=h;c[c[f>>2]>>2]=c[c[g>>2]>>2];c[c[e>>2]>>2]=c[(c[e>>2]|0)+4>>2];c[d+36>>2]=a;i=d;return}function Gg(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Hg(c[d>>2]|0);i=b;return}function Hg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;r=i;i=i+128|0;l=r+72|0;k=r+44|0;j=r+12|0;h=r+104|0;g=r+24|0;f=r+16|0;q=r+20|0;p=r+76|0;d=r+52|0;e=r+28|0;m=r+32|0;n=r+36|0;o=r+40|0;w=r+108|0;B=r+112|0;C=r+116|0;A=r;x=r+56|0;y=r+60|0;z=r+120|0;v=r+68|0;u=r+88|0;t=r+92|0;E=r+96|0;s=r+100|0;G=r+8|0;F=r+80|0;I=r+84|0;H=r+121|0;J=r+48|0;D=r+64|0;c[D>>2]=b;D=c[D>>2]|0;c[J>>2]=D;J=c[J>>2]|0;b=c[J+4>>2]|0;c[F>>2]=J;c[I>>2]=b;F=c[F>>2]|0;b=c[I>>2]|0;a[G+0>>0]=a[H+0>>0]|0;c[E>>2]=F;c[s>>2]=b;b=c[E>>2]|0;while(1){if((c[s>>2]|0)==(c[b+8>>2]|0))break;c[t>>2]=b;c[u>>2]=(c[t>>2]|0)+12;c[v>>2]=c[u>>2];J=c[(c[v>>2]|0)+4>>2]|0;H=b+8|0;I=(c[H>>2]|0)+ -1040|0;c[H>>2]=I;c[w>>2]=I;I=c[w>>2]|0;c[x>>2]=J;c[y>>2]=I;I=c[x>>2]|0;J=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=I;c[C>>2]=J}if((c[D>>2]|0)==0){i=r;return}c[q>>2]=D;c[f>>2]=(c[q>>2]|0)+12;c[g>>2]=c[f>>2];H=c[(c[g>>2]|0)+4>>2]|0;J=c[D>>2]|0;c[h>>2]=D;I=c[h>>2]|0;c[j>>2]=I;c[k>>2]=(c[j>>2]|0)+12;c[l>>2]=c[k>>2];I=((c[c[l>>2]>>2]|0)-(c[I>>2]|0)|0)/1040|0;c[m>>2]=H;c[n>>2]=J;c[o>>2]=I;I=c[n>>2]|0;J=c[o>>2]|0;c[p>>2]=c[m>>2];c[d>>2]=I;c[e>>2]=J;Sw(c[d>>2]|0);i=r;return}function Ig(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;q=i;i=i+176|0;C=q+80|0;x=q+76|0;z=q+4|0;B=q+148|0;A=q+156|0;y=q+72|0;E=q+20|0;G=q+24|0;F=q+28|0;D=q+32|0;H=q+36|0;J=q+40|0;I=q+44|0;p=q+48|0;g=q+52|0;r=q+56|0;m=q+144|0;n=q+160|0;f=q+164|0;u=q+84|0;v=q+92|0;w=q+96|0;t=q+100|0;o=q+108|0;h=q+112|0;j=q+116|0;N=q+120|0;O=q+124|0;P=q+60|0;M=q+16|0;Q=q+64|0;k=q+132|0;l=q+68|0;K=q+140|0;L=q;s=q+8|0;c[Q>>2]=a;c[k>>2]=b;c[l>>2]=d;c[K>>2]=e;e=c[Q>>2]|0;c[O>>2]=M;c[P>>2]=-1;b=c[P>>2]|0;c[N>>2]=c[O>>2];c[q+12>>2]=b;c[c[N>>2]>>2]=0;c[L>>2]=c[M>>2];c[q+128>>2]=L;b=c[K>>2]|0;c[H>>2]=e+12;c[J>>2]=0;c[I>>2]=b;b=c[J>>2]|0;d=c[I>>2]|0;c[G>>2]=c[H>>2];c[F>>2]=b;c[D>>2]=d;d=c[G>>2]|0;c[E>>2]=F;b=c[c[E>>2]>>2]|0;c[C>>2]=c[D>>2];a=c[C>>2]|0;c[B>>2]=d;c[A>>2]=b;c[y>>2]=a;a=c[B>>2]|0;c[z>>2]=A;c[a>>2]=c[c[z>>2]>>2];c[x>>2]=c[y>>2];c[a+4>>2]=c[x>>2];if((c[k>>2]|0)!=0){c[r>>2]=e;c[g>>2]=(c[r>>2]|0)+12;c[p>>2]=c[g>>2];Q=c[k>>2]|0;c[n>>2]=c[(c[p>>2]|0)+4>>2];c[f>>2]=Q;Q=c[f>>2]|0;c[q+136>>2]=c[n>>2];c[m>>2]=Q;c[q+152>>2]=0;Q=Qw((c[m>>2]|0)*1040|0)|0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P*1040|0)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P*1040|0)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}else{c[v>>2]=t;c[w>>2]=-1;Q=c[w>>2]|0;c[u>>2]=c[v>>2];c[q+88>>2]=Q;c[c[u>>2]>>2]=0;c[s>>2]=c[t>>2];c[q+104>>2]=s;Q=0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P*1040|0)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P*1040|0)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}}function Jg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;f=i;i=i+160|0;n=f+56|0;g=f+44|0;l=f+108|0;j=f+132|0;s=f+16|0;y=f+8|0;z=f+28|0;w=f+32|0;x=f+36|0;v=f;h=f+96|0;u=f+104|0;E=f+136|0;D=f+140|0;C=f+144|0;B=f+68|0;A=f+72|0;t=f+76|0;F=f+80|0;m=f+84|0;p=f+12|0;q=f+4|0;r=f+40|0;G=f+24|0;H=f+88|0;I=f+92|0;J=f+48|0;K=f+100|0;k=f+52|0;o=f+60|0;e=f+112|0;c[K>>2]=b;c[k>>2]=d;b=c[K>>2]|0;c[J>>2]=b;c[I>>2]=(c[J>>2]|0)+8;c[H>>2]=c[I>>2];c[o>>2]=c[H>>2];c[G>>2]=b;d=c[G>>2]|0;d=(((c[d+4>>2]|0)-(c[d>>2]|0)|0)/1040|0)+1|0;c[F>>2]=b;c[m>>2]=d;d=c[F>>2]|0;c[p>>2]=xg(d)|0;if((c[m>>2]|0)>>>0>(c[p>>2]|0)>>>0)ht(d);c[A>>2]=d;c[B>>2]=c[A>>2];K=c[B>>2]|0;c[C>>2]=K;c[D>>2]=(c[C>>2]|0)+8;c[E>>2]=c[D>>2];c[q>>2]=((c[c[E>>2]>>2]|0)-(c[K>>2]|0)|0)/1040|0;if((c[q>>2]|0)>>>0>=(((c[p>>2]|0)>>>0)/2|0)>>>0)c[t>>2]=c[p>>2];else{c[r>>2]=c[q>>2]<<1;c[h>>2]=r;c[u>>2]=m;K=c[h>>2]|0;J=c[u>>2]|0;a[v+0>>0]=a[f+148>>0]|0;c[w>>2]=K;c[x>>2]=J;J=c[w>>2]|0;K=c[x>>2]|0;c[f+20>>2]=v;c[y>>2]=J;c[z>>2]=K;c[t>>2]=c[((c[c[y>>2]>>2]|0)>>>0<(c[c[z>>2]>>2]|0)>>>0?c[x>>2]|0:c[w>>2]|0)>>2]}K=c[t>>2]|0;c[s>>2]=b;J=c[s>>2]|0;Dg(e,K,((c[J+4>>2]|0)-(c[J>>2]|0)|0)/1040|0,c[o>>2]|0);J=c[o>>2]|0;c[j>>2]=c[e+8>>2];K=c[j>>2]|0;c[l>>2]=c[k>>2];h=c[l>>2]|0;c[f+64>>2]=J;c[n>>2]=K;c[g>>2]=h;h=c[n>>2]|0;if((h|0)==0){K=e+8|0;J=c[K>>2]|0;J=J+1040|0;c[K>>2]=J;Fg(b,e);Gg(e);i=f;return}By(h|0,c[g>>2]|0,1040)|0;K=e+8|0;J=c[K>>2]|0;J=J+1040|0;c[K>>2]=J;Fg(b,e);Gg(e);i=f;return}function Kg(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;mg(c[d>>2]|0);i=b;return}function Lg(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;m=i;i=i+32|0;n=m+20|0;k=m+16|0;g=m+12|0;h=m+8|0;l=m+4|0;j=m;c[n>>2]=a;c[k>>2]=b;c[g>>2]=d;c[h>>2]=e;c[l>>2]=f;c[j>>2]=0;if((c[h>>2]|0)>>>0>=(c[g>>2]|0)>>>0){c[j>>2]=0;c[h>>2]=c[g>>2]}else{a=ey(c[n>>2]|0)|0;c[j>>2]=(a>>>0)%(((c[g>>2]|0)-(c[h>>2]|0)+1|0)>>>0)|0}Mg(c[l>>2]|0,(c[k>>2]|0)+(c[j>>2]|0)|0,c[h>>2]|0);i=m;return}function Mg(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+16|0;j=f+8|0;h=f+4|0;g=f;c[j>>2]=a;c[h>>2]=b;c[g>>2]=e;e=c[j>>2]|0;a=e+1024|0;c[a>>2]=(c[a>>2]|0)+(c[g>>2]|0);c[g>>2]=(c[g>>2]|0)+1;while(1){j=(c[g>>2]|0)+ -1|0;c[g>>2]=j;if((j|0)==0)break;j=c[h>>2]|0;c[h>>2]=j+1;j=e+((d[j>>0]|0)<<2)|0;c[j>>2]=(c[j>>2]|0)+1}i=f;return}function Ng(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;f=i;i=i+160|0;n=f+72|0;g=f+32|0;l=f+108|0;j=f+132|0;s=f+8|0;y=f+76|0;z=f+28|0;w=f+20|0;x=f+24|0;v=f;h=f+96|0;u=f+104|0;E=f+136|0;D=f+140|0;C=f+144|0;B=f+52|0;A=f+56|0;t=f+60|0;F=f+64|0;m=f+68|0;p=f+16|0;q=f+4|0;r=f+84|0;G=f+80|0;H=f+88|0;I=f+92|0;J=f+36|0;K=f+100|0;k=f+40|0;o=f+44|0;e=f+112|0;c[K>>2]=b;c[k>>2]=d;b=c[K>>2]|0;c[J>>2]=b;c[I>>2]=(c[J>>2]|0)+8;c[H>>2]=c[I>>2];c[o>>2]=c[H>>2];c[G>>2]=b;d=c[G>>2]|0;d=(((c[d+4>>2]|0)-(c[d>>2]|0)|0)/4|0)+1|0;c[F>>2]=b;c[m>>2]=d;d=c[F>>2]|0;c[p>>2]=Xe(d)|0;if((c[m>>2]|0)>>>0>(c[p>>2]|0)>>>0)ht(d);c[A>>2]=d;c[B>>2]=c[A>>2];K=c[B>>2]|0;c[C>>2]=K;c[D>>2]=(c[C>>2]|0)+8;c[E>>2]=c[D>>2];c[q>>2]=((c[c[E>>2]>>2]|0)-(c[K>>2]|0)|0)/4|0;if((c[q>>2]|0)>>>0>=(((c[p>>2]|0)>>>0)/2|0)>>>0)c[t>>2]=c[p>>2];else{c[r>>2]=c[q>>2]<<1;c[h>>2]=r;c[u>>2]=m;K=c[h>>2]|0;J=c[u>>2]|0;a[v+0>>0]=a[f+148>>0]|0;c[w>>2]=K;c[x>>2]=J;J=c[w>>2]|0;K=c[x>>2]|0;c[f+12>>2]=v;c[y>>2]=J;c[z>>2]=K;c[t>>2]=c[((c[c[y>>2]>>2]|0)>>>0<(c[c[z>>2]>>2]|0)>>>0?c[x>>2]|0:c[w>>2]|0)>>2]}K=c[t>>2]|0;c[s>>2]=b;J=c[s>>2]|0;Se(e,K,((c[J+4>>2]|0)-(c[J>>2]|0)|0)/4|0,c[o>>2]|0);J=c[o>>2]|0;c[j>>2]=c[e+8>>2];K=c[j>>2]|0;c[l>>2]=c[k>>2];h=c[l>>2]|0;c[f+48>>2]=J;c[n>>2]=K;c[g>>2]=h;h=c[n>>2]|0;if((h|0)==0){K=e+8|0;J=c[K>>2]|0;J=J+4|0;c[K>>2]=J;Ue(b,e);Ve(e);i=f;return}c[h>>2]=c[c[g>>2]>>2];K=e+8|0;J=c[K>>2]|0;J=J+4|0;c[K>>2]=J;Ue(b,e);Ve(e);i=f;return}function Og(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0;h=i;i=i+208|0;U=h+196|0;V=h+164|0;W=h+68|0;T=h+80|0;G=h+12|0;F=h+148|0;E=h+16|0;H=h+20|0;I=h+24|0;J=h+28|0;K=h+32|0;s=h+36|0;t=h+40|0;q=h+144|0;r=h+44|0;p=h+48|0;v=h+52|0;y=h+56|0;x=h+60|0;w=h+168|0;j=h+176|0;B=h+184|0;z=h+192|0;D=h+200|0;m=h+84|0;l=h+88|0;M=h+92|0;n=h+96|0;L=h+100|0;C=h+140|0;R=h+104|0;Q=h+108|0;P=h+112|0;O=h+116|0;N=h+120|0;X=h+124|0;Y=h+128|0;Z=h+132|0;_=h+136|0;$=h+8|0;aa=h+152|0;g=h+156|0;ba=h;f=h+4|0;A=h+160|0;o=h+64|0;S=h+172|0;u=h+72|0;k=h+180|0;c[ba>>2]=a;c[f>>2]=b;c[A>>2]=e;b=c[ba>>2]|0;c[aa>>2]=b;c[$>>2]=c[aa>>2];c[_>>2]=(c[$>>2]|0)+4;c[Z>>2]=c[_>>2];c[Y>>2]=c[Z>>2];c[X>>2]=c[Y>>2];c[o>>2]=c[c[X>>2]>>2];e=c[o>>2]|0;c[V>>2]=T;c[W>>2]=-1;a=c[W>>2]|0;c[U>>2]=c[V>>2];c[h+188>>2]=a;c[c[U>>2]>>2]=0;c[S>>2]=c[T>>2];c[h+76>>2]=S;if((e|0)==0){c[N>>2]=b;c[O>>2]=(c[N>>2]|0)+4;c[P>>2]=c[O>>2];c[Q>>2]=c[P>>2];c[R>>2]=c[Q>>2];c[c[f>>2]>>2]=c[R>>2];c[g>>2]=c[c[f>>2]>>2];ba=c[g>>2]|0;i=h;return ba|0}while(1){c[E>>2]=b;c[F>>2]=(c[E>>2]|0)+8;c[G>>2]=c[F>>2];c[H>>2]=c[G>>2];aa=c[A>>2]|0;ba=(c[o>>2]|0)+13|0;c[I>>2]=c[H>>2];c[J>>2]=aa;c[K>>2]=ba;if((d[c[J>>2]>>0]|0|0)<(d[c[K>>2]>>0]|0|0)){ba=c[c[o>>2]>>2]|0;c[q>>2]=p;c[r>>2]=-1;N=c[r>>2]|0;c[s>>2]=c[q>>2];c[t>>2]=N;c[c[s>>2]>>2]=0;c[u>>2]=c[p>>2];c[v>>2]=u;N=c[o>>2]|0;if((ba|0)==0){j=5;break}c[o>>2]=c[N>>2];continue}c[w>>2]=b;c[x>>2]=(c[w>>2]|0)+8;c[y>>2]=c[x>>2];c[j>>2]=c[y>>2];ba=(c[o>>2]|0)+13|0;N=c[A>>2]|0;c[B>>2]=c[j>>2];c[z>>2]=ba;c[D>>2]=N;N=c[o>>2]|0;if((d[c[z>>2]>>0]|0|0)>=(d[c[D>>2]>>0]|0|0)){j=10;break}ba=c[N+4>>2]|0;c[M>>2]=L;c[n>>2]=-1;N=c[n>>2]|0;c[m>>2]=c[M>>2];c[l>>2]=N;c[c[m>>2]>>2]=0;c[k>>2]=c[L>>2];c[C>>2]=k;N=c[o>>2]|0;if((ba|0)==0){j=9;break}c[o>>2]=c[N+4>>2]}if((j|0)==5){c[c[f>>2]>>2]=N;c[g>>2]=c[c[f>>2]>>2];ba=c[g>>2]|0;i=h;return ba|0}else if((j|0)==9){c[c[f>>2]>>2]=N;c[g>>2]=(c[c[f>>2]>>2]|0)+4;ba=c[g>>2]|0;i=h;return ba|0}else if((j|0)==10){c[c[f>>2]>>2]=N;c[g>>2]=c[f>>2];ba=c[g>>2]|0;i=h;return ba|0}return 0}function Pg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0,Uc=0,Vc=0,Wc=0,Xc=0,Yc=0,Zc=0,_c=0,$c=0,ad=0,bd=0,cd=0,dd=0,ed=0,fd=0,gd=0,hd=0,id=0,jd=0,kd=0,ld=0,md=0,nd=0,od=0,pd=0,qd=0,rd=0,sd=0,td=0,ud=0,vd=0,wd=0,xd=0,yd=0,zd=0,Ad=0,Bd=0,Cd=0,Dd=0,Ed=0,Fd=0,Gd=0,Hd=0,Id=0,Jd=0,Kd=0,Ld=0,Md=0,Nd=0,Od=0,Pd=0,Qd=0,Rd=0,Sd=0,Td=0,Ud=0,Vd=0,Wd=0,Xd=0,Yd=0,Zd=0,_d=0,$d=0,ae=0,be=0,ce=0,de=0,ee=0,fe=0,ge=0;g=i;i=i+1264|0;nd=g+808|0;md=g+1228|0;ld=g+1168|0;id=g+232|0;pd=g+260|0;qd=g+408|0;fd=g+1172|0;ed=g+1176|0;dd=g+1180|0;od=g+264|0;rd=g+1024|0;jd=g+1008|0;Hc=g+1188|0;Gc=g+228|0;Ec=g+216|0;Dc=g+1164|0;Cc=g+824|0;Fc=g+672|0;Ic=g+644|0;Lc=g+400|0;Kc=g+380|0;Jc=g+364|0;Mc=g+352|0;Vc=g+252|0;$c=g+248|0;_c=g+240|0;Yc=g+236|0;Zc=g+224|0;Xc=g+56|0;Uc=g+212|0;Sc=g+208|0;Tc=g+1160|0;Wc=g+1032|0;Rc=g+88|0;Pc=g+720|0;Qc=g+668|0;Oc=g+24|0;Bc=g+640|0;Ac=g+628|0;Nc=g+392|0;zc=g;yc=g+376|0;xc=g+32|0;Bb=g+360|0;Cb=g+356|0;Ib=g+348|0;Hb=g+344|0;gb=g+268|0;lb=g+272|0;mb=g+276|0;kb=g+96|0;hb=g+288|0;ib=g+292|0;jb=g+1248|0;sb=g+300|0;tb=g+304|0;sa=g+104|0;ob=g+220|0;pb=g+316|0;qb=g+1249|0;db=g+332|0;eb=g+336|0;fb=g+340|0;ab=g+1156|0;bb=g+1108|0;cb=g+1028|0;nb=g+960|0;Ab=g+820|0;$a=g+792|0;Gb=g+716|0;Fb=g+680|0;cd=g+664|0;Eb=g+660|0;Db=g+656|0;bd=g+648|0;ad=g+636|0;vc=g+632|0;wc=g+624|0;tc=g+616|0;uc=g+412|0;rc=g+416|0;Yb=g+384|0;Xb=g+424|0;Vb=g+428|0;Ub=g+432|0;Tb=g+372|0;Wb=g+440|0;Zb=g+444|0;ac=g+448|0;$b=g+452|0;_b=g+456|0;bc=g+460|0;kc=g+464|0;qc=g+468|0;pc=g+472|0;nc=g+476|0;oc=g+480|0;mc=g+8|0;jc=g+488|0;hc=g+492|0;ic=g+496|0;lc=g+280|0;gc=g+48|0;ec=g+516|0;fc=g+520|0;dc=g+136|0;Sb=g+528|0;Rb=g+532|0;cc=g+536|0;Qb=g+72|0;Pb=g+548|0;Nb=g+184|0;Lb=g+556|0;Mb=g+308|0;Jb=g+564|0;Kb=g+312|0;gd=g+572|0;sc=g+576|0;Ob=g+580|0;hd=g+592|0;ub=g+596|0;vb=g+600|0;_a=g+604|0;rb=g+608|0;Ya=g+612|0;za=g+1184|0;ya=g+1192|0;wa=g+1200|0;va=g+1208|0;ua=g+1104|0;xa=g+1224|0;Aa=g+1232|0;Da=g+1240|0;Ca=g+956|0;Ba=g+952|0;Ea=g+816|0;Na=g+812|0;Ta=g+788|0;Sa=g+776|0;Qa=g+712|0;Ra=g+704|0;Pa=g+80|0;Ma=g+684|0;Ka=g+688|0;La=g+692|0;Oa=g+696|0;Ja=g+120|0;Ha=g+652|0;Ia=g+708|0;Ga=g+112|0;ta=g+724|0;zb=g+728|0;Fa=g+736|0;yb=g+168|0;xb=g+744|0;wb=g+152|0;ud=g+748|0;td=g+752|0;sd=g+756|0;qa=g+760|0;ra=g+764|0;la=g+1216|0;ka=g+772|0;ia=g+420|0;P=g+780|0;Q=g+784|0;O=g+144|0;L=g+796|0;M=g+800|0;Y=g+1250|0;W=g+1244|0;X=g+436|0;V=g+176|0;S=g+828|0;T=g+832|0;U=g+1251|0;fa=g+848|0;ga=g+852|0;ha=g+856|0;ca=g+860|0;da=g+864|0;ea=g+868|0;R=g+872|0;oa=g+876|0;ba=g+880|0;ja=g+884|0;ma=g+888|0;Wa=g+892|0;na=g+896|0;pa=g+900|0;Va=g+904|0;Ua=g+908|0;xd=g+912|0;I=g+916|0;J=g+920|0;C=g+484|0;K=g+924|0;w=g+928|0;q=g+932|0;p=g+936|0;r=g+160|0;u=g+940|0;t=g+944|0;s=g+1252|0;m=g+948|0;n=g+512|0;l=g+16|0;h=g+964|0;j=g+968|0;k=g+1253|0;A=g+976|0;B=g+524|0;o=g+980|0;y=g+984|0;f=g+988|0;z=g+992|0;v=g+996|0;G=g+1e3|0;x=g+1004|0;D=g+544|0;E=g+1012|0;N=g+1016|0;F=g+1020|0;H=g+552|0;aa=g+1040|0;$=g+1044|0;yd=g+1048|0;zd=g+560|0;Ad=g+1052|0;Pd=g+1056|0;Gd=g+1060|0;Bd=g+568|0;Dd=g+1064|0;vd=g+1068|0;Ed=g+1072|0;Cd=g+128|0;Id=g+1080|0;Kd=g+1084|0;Jd=g+1088|0;Fd=g+1096|0;Hd=g+192|0;Nd=g+1112|0;Md=g+1116|0;Ld=g+40|0;Rd=g+1120|0;Td=g+1124|0;Sd=g+1128|0;Od=g+1136|0;Qd=g+200|0;Wd=g+1148|0;Vd=g+256|0;Ud=g+64|0;Zd=g+368|0;Yd=g+244|0;_d=g+676|0;$d=g+620|0;ae=g+1144|0;be=g+404|0;ce=g+768|0;de=g+1212|0;ee=g+1076|0;fe=g+1220|0;ge=g+1152|0;wd=g+1236|0;kd=g+972|0;_=g+500|0;Xd=g+840|0;Za=g+804|0;Xa=g+320|0;Z=g+296|0;c[ge>>2]=d;c[wd>>2]=e;c[fe>>2]=c[ge>>2];c[ee>>2]=(c[fe>>2]|0)+4;c[de>>2]=c[ee>>2];c[kd>>2]=c[de>>2];c[be>>2]=c[kd>>2];c[ce>>2]=1;d=c[ce>>2]|0;c[g+1196>>2]=c[be>>2];c[ae>>2]=d;c[g+1204>>2]=0;d=Qw(c[ae>>2]<<4)|0;e=c[kd>>2]|0;c[_d>>2]=Xd;c[$d>>2]=e;e=c[$d>>2]|0;c[Zd>>2]=c[_d>>2];c[Yd>>2]=e;e=c[Zd>>2]|0;c[e>>2]=c[Yd>>2];a[e+4>>0]=0;a[e+5>>0]=0;a[Ud+0>>0]=a[Xd+0>>0]|0;a[Ud+1>>0]=a[Xd+1>>0]|0;a[Ud+2>>0]=a[Xd+2>>0]|0;a[Ud+3>>0]=a[Xd+3>>0]|0;a[Ud+4>>0]=a[Xd+4>>0]|0;a[Ud+5>>0]=a[Xd+5>>0]|0;a[Ud+6>>0]=a[Xd+6>>0]|0;a[Ud+7>>0]=a[Xd+7>>0]|0;c[Wd>>2]=_;c[Vd>>2]=d;d=c[Wd>>2]|0;e=c[Vd>>2]|0;a[Qd+0>>0]=a[Ud+0>>0]|0;a[Qd+1>>0]=a[Ud+1>>0]|0;a[Qd+2>>0]=a[Ud+2>>0]|0;a[Qd+3>>0]=a[Ud+3>>0]|0;a[Qd+4>>0]=a[Ud+4>>0]|0;a[Qd+5>>0]=a[Ud+5>>0]|0;a[Qd+6>>0]=a[Ud+6>>0]|0;a[Qd+7>>0]=a[Ud+7>>0]|0;c[Td>>2]=d;c[Sd>>2]=e;e=c[Td>>2]|0;c[Rd>>2]=Sd;d=c[c[Rd>>2]>>2]|0;c[Pd>>2]=Qd;Pd=c[Pd>>2]|0;c[Od+0>>2]=c[Pd+0>>2];c[Od+4>>2]=c[Pd+4>>2];a[Ld+0>>0]=a[Od+0>>0]|0;a[Ld+1>>0]=a[Od+1>>0]|0;a[Ld+2>>0]=a[Od+2>>0]|0;a[Ld+3>>0]=a[Od+3>>0]|0;a[Ld+4>>0]=a[Od+4>>0]|0;a[Ld+5>>0]=a[Od+5>>0]|0;a[Ld+6>>0]=a[Od+6>>0]|0;a[Ld+7>>0]=a[Od+7>>0]|0;c[Nd>>2]=e;c[Md>>2]=d;d=c[Nd>>2]|0;e=c[Md>>2]|0;a[Hd+0>>0]=a[Ld+0>>0]|0;a[Hd+1>>0]=a[Ld+1>>0]|0;a[Hd+2>>0]=a[Ld+2>>0]|0;a[Hd+3>>0]=a[Ld+3>>0]|0;a[Hd+4>>0]=a[Ld+4>>0]|0;a[Hd+5>>0]=a[Ld+5>>0]|0;a[Hd+6>>0]=a[Ld+6>>0]|0;a[Hd+7>>0]=a[Ld+7>>0]|0;c[Kd>>2]=d;c[Jd>>2]=e;e=c[Kd>>2]|0;c[Id>>2]=Jd;d=c[c[Id>>2]>>2]|0;c[Gd>>2]=Hd;Gd=c[Gd>>2]|0;c[Fd+0>>2]=c[Gd+0>>2];c[Fd+4>>2]=c[Gd+4>>2];a[Cd+0>>0]=a[Fd+0>>0]|0;a[Cd+1>>0]=a[Fd+1>>0]|0;a[Cd+2>>0]=a[Fd+2>>0]|0;a[Cd+3>>0]=a[Fd+3>>0]|0;a[Cd+4>>0]=a[Fd+4>>0]|0;a[Cd+5>>0]=a[Fd+5>>0]|0;a[Cd+6>>0]=a[Fd+6>>0]|0;a[Cd+7>>0]=a[Fd+7>>0]|0;c[vd>>2]=e;c[Ed>>2]=d;vd=c[vd>>2]|0;c[Dd>>2]=Ed;c[vd>>2]=c[c[Dd>>2]>>2];vd=vd+4|0;c[Bd>>2]=Cd;d=c[Bd>>2]|0;c[vd+0>>2]=c[d+0>>2];c[vd+4>>2]=c[d+4>>2];vd=c[kd>>2]|0;c[Ad>>2]=_;c[zd>>2]=c[Ad>>2];c[yd>>2]=c[zd>>2];c[xd>>2]=(c[c[yd>>2]>>2]|0)+13;d=c[xd>>2]|0;e=c[wd>>2]|0;c[ud>>2]=vd;c[td>>2]=d;c[sd>>2]=e;e=c[td>>2]|0;if((e|0)!=0)a[e>>0]=a[c[sd>>2]>>0]|0;c[jd>>2]=_;c[rd>>2]=c[jd>>2];c[od>>2]=c[rd>>2];a[(c[od>>2]|0)+8>>0]=1;ge=c[kd>>2]|0;c[ld>>2]=_;c[md>>2]=c[ld>>2];c[nd>>2]=c[md>>2];c[id>>2]=(c[c[nd>>2]>>2]|0)+14;id=c[id>>2]|0;c[pd>>2]=ge;c[qd>>2]=id;id=c[qd>>2]|0;if((id|0)!=0)a[id>>0]=0;c[dd>>2]=_;c[ed>>2]=c[dd>>2];c[fd>>2]=c[ed>>2];a[(c[fd>>2]|0)+9>>0]=1;c[gd>>2]=_;ge=c[gd>>2]|0;c[Jb>>2]=hd;c[Kb>>2]=ge;ge=c[Kb>>2]|0;c[Lb>>2]=c[Jb>>2];c[Mb>>2]=ge;c[c[Lb>>2]>>2]=c[Mb>>2];a[Nb+0>>0]=a[hd+0>>0]|0;a[Nb+1>>0]=a[hd+1>>0]|0;a[Nb+2>>0]=a[hd+2>>0]|0;a[Nb+3>>0]=a[hd+3>>0]|0;c[Pb>>2]=Ob;Jb=c[Pb>>2]|0;a[Qb+0>>0]=a[Nb+0>>0]|0;a[Qb+1>>0]=a[Nb+1>>0]|0;a[Qb+2>>0]=a[Nb+2>>0]|0;a[Qb+3>>0]=a[Nb+3>>0]|0;c[Rb>>2]=Jb;Jb=c[Rb>>2]|0;c[Sb>>2]=Qb;c[Tb>>2]=c[c[Sb>>2]>>2];ge=c[Tb>>2]|0;c[Ub>>2]=ge;c[Vb>>2]=c[Ub>>2];c[Wb>>2]=c[c[Vb>>2]>>2];c[Xb>>2]=ge;c[Yb>>2]=c[Xb>>2];c[c[Yb>>2]>>2]=0;ge=c[Wb>>2]|0;c[Zb>>2]=Qb;c[_b>>2]=c[c[Zb>>2]>>2];c[$b>>2]=c[_b>>2];c[ac>>2]=c[$b>>2];c[bc>>2]=(c[ac>>2]|0)+4;fe=c[bc>>2]|0;c[cc+0>>2]=c[fe+0>>2];c[cc+4>>2]=c[fe+4>>2];a[dc+0>>0]=a[cc+0>>0]|0;a[dc+1>>0]=a[cc+1>>0]|0;a[dc+2>>0]=a[cc+2>>0]|0;a[dc+3>>0]=a[cc+3>>0]|0;a[dc+4>>0]=a[cc+4>>0]|0;a[dc+5>>0]=a[cc+5>>0]|0;a[dc+6>>0]=a[cc+6>>0]|0;a[dc+7>>0]=a[cc+7>>0]|0;c[ec>>2]=Jb;c[fc>>2]=ge;ge=c[ec>>2]|0;Jb=c[fc>>2]|0;a[gc+0>>0]=a[dc+0>>0]|0;a[gc+1>>0]=a[dc+1>>0]|0;a[gc+2>>0]=a[dc+2>>0]|0;a[gc+3>>0]=a[dc+3>>0]|0;a[gc+4>>0]=a[dc+4>>0]|0;a[gc+5>>0]=a[dc+5>>0]|0;a[gc+6>>0]=a[dc+6>>0]|0;a[gc+7>>0]=a[dc+7>>0]|0;c[hc>>2]=ge;c[ic>>2]=Jb;Jb=c[hc>>2]|0;c[jc>>2]=ic;ge=c[c[jc>>2]>>2]|0;c[kc>>2]=gc;fe=c[kc>>2]|0;c[lc+0>>2]=c[fe+0>>2];c[lc+4>>2]=c[fe+4>>2];a[mc+0>>0]=a[lc+0>>0]|0;a[mc+1>>0]=a[lc+1>>0]|0;a[mc+2>>0]=a[lc+2>>0]|0;a[mc+3>>0]=a[lc+3>>0]|0;a[mc+4>>0]=a[lc+4>>0]|0;a[mc+5>>0]=a[lc+5>>0]|0;a[mc+6>>0]=a[lc+6>>0]|0;a[mc+7>>0]=a[lc+7>>0]|0;c[nc>>2]=Jb;c[oc>>2]=ge;ge=c[nc>>2]|0;c[pc>>2]=oc;c[ge>>2]=c[c[pc>>2]>>2];ge=ge+4|0;c[qc>>2]=mc;Jb=c[qc>>2]|0;c[ge+0>>2]=c[Jb+0>>2];c[ge+4>>2]=c[Jb+4>>2];c[rc>>2]=Ob;ge=c[rc>>2]|0;c[tc>>2]=sc;c[uc>>2]=ge;ge=c[uc>>2]|0;c[vc>>2]=c[tc>>2];c[wc>>2]=ge;c[c[vc>>2]>>2]=c[wc>>2];a[xc+0>>0]=a[sc+0>>0]|0;a[xc+1>>0]=a[sc+1>>0]|0;a[xc+2>>0]=a[sc+2>>0]|0;a[xc+3>>0]=a[sc+3>>0]|0;c[yc>>2]=Xa;ge=c[yc>>2]|0;a[zc+0>>0]=a[xc+0>>0]|0;a[zc+1>>0]=a[xc+1>>0]|0;a[zc+2>>0]=a[xc+2>>0]|0;a[zc+3>>0]=a[xc+3>>0]|0;c[Ac>>2]=ge;ge=c[Ac>>2]|0;c[Bc>>2]=zc;c[Cc>>2]=c[c[Bc>>2]>>2];Jb=c[Cc>>2]|0;c[Dc>>2]=Jb;c[Ec>>2]=c[Dc>>2];c[Fc>>2]=c[c[Ec>>2]>>2];c[Gc>>2]=Jb;c[Hc>>2]=c[Gc>>2];c[c[Hc>>2]>>2]=0;Jb=c[Fc>>2]|0;c[Ic>>2]=zc;c[Jc>>2]=c[c[Ic>>2]>>2];c[Kc>>2]=c[Jc>>2];c[Lc>>2]=c[Kc>>2];c[Mc>>2]=(c[Lc>>2]|0)+4;fe=c[Mc>>2]|0;c[Nc+0>>2]=c[fe+0>>2];c[Nc+4>>2]=c[fe+4>>2];a[Oc+0>>0]=a[Nc+0>>0]|0;a[Oc+1>>0]=a[Nc+1>>0]|0;a[Oc+2>>0]=a[Nc+2>>0]|0;a[Oc+3>>0]=a[Nc+3>>0]|0;a[Oc+4>>0]=a[Nc+4>>0]|0;a[Oc+5>>0]=a[Nc+5>>0]|0;a[Oc+6>>0]=a[Nc+6>>0]|0;a[Oc+7>>0]=a[Nc+7>>0]|0;c[Pc>>2]=ge;c[Qc>>2]=Jb;Jb=c[Pc>>2]|0;ge=c[Qc>>2]|0;a[Rc+0>>0]=a[Oc+0>>0]|0;a[Rc+1>>0]=a[Oc+1>>0]|0;a[Rc+2>>0]=a[Oc+2>>0]|0;a[Rc+3>>0]=a[Oc+3>>0]|0;a[Rc+4>>0]=a[Oc+4>>0]|0;a[Rc+5>>0]=a[Oc+5>>0]|0;a[Rc+6>>0]=a[Oc+6>>0]|0;a[Rc+7>>0]=a[Oc+7>>0]|0;c[Sc>>2]=Jb;c[Tc>>2]=ge;ge=c[Sc>>2]|0;c[Uc>>2]=Tc;Jb=c[c[Uc>>2]>>2]|0;c[Vc>>2]=Rc;fe=c[Vc>>2]|0;c[Wc+0>>2]=c[fe+0>>2];c[Wc+4>>2]=c[fe+4>>2];a[Xc+0>>0]=a[Wc+0>>0]|0;a[Xc+1>>0]=a[Wc+1>>0]|0;a[Xc+2>>0]=a[Wc+2>>0]|0;a[Xc+3>>0]=a[Wc+3>>0]|0;a[Xc+4>>0]=a[Wc+4>>0]|0;a[Xc+5>>0]=a[Wc+5>>0]|0;a[Xc+6>>0]=a[Wc+6>>0]|0;a[Xc+7>>0]=a[Wc+7>>0]|0;c[Yc>>2]=ge;c[Zc>>2]=Jb;Jb=c[Yc>>2]|0;c[_c>>2]=Zc;c[Jb>>2]=c[c[_c>>2]>>2];Jb=Jb+4|0;c[$c>>2]=Xc;ge=c[$c>>2]|0;c[Jb+0>>2]=c[ge+0>>2];c[Jb+4>>2]=c[ge+4>>2];c[ad>>2]=Ob;c[bd>>2]=c[ad>>2];c[cd>>2]=c[bd>>2];c[Eb>>2]=0;Jb=c[cd>>2]|0;c[Fb>>2]=Jb;c[Gb>>2]=c[Fb>>2];c[Db>>2]=c[c[Gb>>2]>>2];ge=c[Eb>>2]|0;c[Hb>>2]=Jb;c[Ib>>2]=c[Hb>>2];c[c[Ib>>2]>>2]=ge;if((c[Db>>2]|0)!=0){c[Cb>>2]=Jb;c[Bb>>2]=c[Cb>>2];ge=c[Db>>2]|0;c[Ab>>2]=(c[Bb>>2]|0)+4;c[$a>>2]=ge;Ab=c[Ab>>2]|0;if(a[Ab+5>>0]&1){ge=c[Ab>>2]|0;c[nb>>2]=(c[$a>>2]|0)+14;fe=c[nb>>2]|0;c[ob>>2]=ge;c[pb>>2]=fe;fe=c[ob>>2]|0;ge=c[pb>>2]|0;a[sa+0>>0]=a[qb+0>>0]|0;c[sb>>2]=fe;c[tb>>2]=ge}if(a[Ab+4>>0]&1){ge=c[Ab>>2]|0;c[gb>>2]=(c[$a>>2]|0)+13;fe=c[gb>>2]|0;c[hb>>2]=ge;c[ib>>2]=fe;fe=c[hb>>2]|0;ge=c[ib>>2]|0;a[kb+0>>0]=a[jb+0>>0]|0;c[lb>>2]=fe;c[mb>>2]=ge}if((c[$a>>2]|0)!=0){fe=c[$a>>2]|0;c[ab>>2]=c[Ab>>2];c[bb>>2]=fe;c[cb>>2]=1;fe=c[bb>>2]|0;ge=c[cb>>2]|0;c[db>>2]=c[ab>>2];c[eb>>2]=fe;c[fb>>2]=ge;Sw(c[eb>>2]|0)}}c[Ya>>2]=Xa;ge=c[Ya>>2]|0;c[_a>>2]=Za;c[rb>>2]=ge;ge=c[rb>>2]|0;c[ub>>2]=c[_a>>2];c[vb>>2]=ge;c[c[ub>>2]>>2]=c[vb>>2];a[wb+0>>0]=a[Za+0>>0]|0;a[wb+1>>0]=a[Za+1>>0]|0;a[wb+2>>0]=a[Za+2>>0]|0;a[wb+3>>0]=a[Za+3>>0]|0;c[xb>>2]=b;ge=c[xb>>2]|0;a[yb+0>>0]=a[wb+0>>0]|0;a[yb+1>>0]=a[wb+1>>0]|0;a[yb+2>>0]=a[wb+2>>0]|0;a[yb+3>>0]=a[wb+3>>0]|0;c[zb>>2]=ge;ge=c[zb>>2]|0;c[ta>>2]=yb;c[ua>>2]=c[c[ta>>2]>>2];sa=c[ua>>2]|0;c[va>>2]=sa;c[wa>>2]=c[va>>2];c[xa>>2]=c[c[wa>>2]>>2];c[ya>>2]=sa;c[za>>2]=c[ya>>2];c[c[za>>2]>>2]=0;sa=c[xa>>2]|0;c[Aa>>2]=yb;c[Ba>>2]=c[c[Aa>>2]>>2];c[Ca>>2]=c[Ba>>2];c[Da>>2]=c[Ca>>2];c[Ea>>2]=(c[Da>>2]|0)+4;fe=c[Ea>>2]|0;c[Fa+0>>2]=c[fe+0>>2];c[Fa+4>>2]=c[fe+4>>2];a[Ga+0>>0]=a[Fa+0>>0]|0;a[Ga+1>>0]=a[Fa+1>>0]|0;a[Ga+2>>0]=a[Fa+2>>0]|0;a[Ga+3>>0]=a[Fa+3>>0]|0;a[Ga+4>>0]=a[Fa+4>>0]|0;a[Ga+5>>0]=a[Fa+5>>0]|0;a[Ga+6>>0]=a[Fa+6>>0]|0;a[Ga+7>>0]=a[Fa+7>>0]|0;c[Ha>>2]=ge;c[Ia>>2]=sa;sa=c[Ha>>2]|0;ge=c[Ia>>2]|0;a[Ja+0>>0]=a[Ga+0>>0]|0;a[Ja+1>>0]=a[Ga+1>>0]|0;a[Ja+2>>0]=a[Ga+2>>0]|0;a[Ja+3>>0]=a[Ga+3>>0]|0;a[Ja+4>>0]=a[Ga+4>>0]|0;a[Ja+5>>0]=a[Ga+5>>0]|0;a[Ja+6>>0]=a[Ga+6>>0]|0;a[Ja+7>>0]=a[Ga+7>>0]|0;c[Ka>>2]=sa;c[La>>2]=ge;ge=c[Ka>>2]|0;c[Ma>>2]=La;sa=c[c[Ma>>2]>>2]|0;c[Na>>2]=Ja;fe=c[Na>>2]|0;c[Oa+0>>2]=c[fe+0>>2];c[Oa+4>>2]=c[fe+4>>2];a[Pa+0>>0]=a[Oa+0>>0]|0;a[Pa+1>>0]=a[Oa+1>>0]|0;a[Pa+2>>0]=a[Oa+2>>0]|0;a[Pa+3>>0]=a[Oa+3>>0]|0;a[Pa+4>>0]=a[Oa+4>>0]|0;a[Pa+5>>0]=a[Oa+5>>0]|0;a[Pa+6>>0]=a[Oa+6>>0]|0;a[Pa+7>>0]=a[Oa+7>>0]|0;c[Qa>>2]=ge;c[Ra>>2]=sa;sa=c[Qa>>2]|0;c[Sa>>2]=Ra;c[sa>>2]=c[c[Sa>>2]>>2];sa=sa+4|0;c[Ta>>2]=Pa;ge=c[Ta>>2]|0;c[sa+0>>2]=c[ge+0>>2];c[sa+4>>2]=c[ge+4>>2];c[Ua>>2]=Xa;c[Va>>2]=c[Ua>>2];c[Wa>>2]=c[Va>>2];c[na>>2]=0;sa=c[Wa>>2]|0;c[ma>>2]=sa;c[ja>>2]=c[ma>>2];c[pa>>2]=c[c[ja>>2]>>2];ge=c[na>>2]|0;c[ka>>2]=sa;c[la>>2]=c[ka>>2];c[c[la>>2]>>2]=ge;if((c[pa>>2]|0)!=0){c[ra>>2]=sa;c[qa>>2]=c[ra>>2];ja=c[pa>>2]|0;c[oa>>2]=(c[qa>>2]|0)+4;c[ba>>2]=ja;ja=c[oa>>2]|0;if(a[ja+5>>0]&1){ge=c[ja>>2]|0;c[R>>2]=(c[ba>>2]|0)+14;fe=c[R>>2]|0;c[S>>2]=ge;c[T>>2]=fe;fe=c[S>>2]|0;ge=c[T>>2]|0;a[V+0>>0]=a[U+0>>0]|0;c[W>>2]=fe;c[X>>2]=ge}if(a[ja+4>>0]&1){ge=c[ja>>2]|0;c[ia>>2]=(c[ba>>2]|0)+13;fe=c[ia>>2]|0;c[L>>2]=ge;c[M>>2]=fe;fe=c[L>>2]|0;ge=c[M>>2]|0;a[O+0>>0]=a[Y+0>>0]|0;c[P>>2]=fe;c[Q>>2]=ge}if((c[ba>>2]|0)!=0){fe=c[ba>>2]|0;c[ca>>2]=c[ja>>2];c[da>>2]=fe;c[ea>>2]=1;fe=c[da>>2]|0;ge=c[ea>>2]|0;c[fa>>2]=c[ca>>2];c[ga>>2]=fe;c[ha>>2]=ge;Sw(c[ga>>2]|0)}}c[Z>>2]=1;c[$>>2]=_;c[aa>>2]=c[$>>2];c[N>>2]=c[aa>>2];c[F>>2]=0;L=c[N>>2]|0;c[E>>2]=L;c[D>>2]=c[E>>2];c[H>>2]=c[c[D>>2]>>2];ge=c[F>>2]|0;c[K>>2]=L;c[C>>2]=c[K>>2];c[c[C>>2]>>2]=ge;if((c[H>>2]|0)==0){i=g;return}c[J>>2]=L;c[I>>2]=c[J>>2];C=c[H>>2]|0;c[G>>2]=(c[I>>2]|0)+4;c[x>>2]=C;C=c[G>>2]|0;if(a[C+5>>0]&1){ge=c[C>>2]|0;c[v>>2]=(c[x>>2]|0)+14;fe=c[v>>2]|0;c[h>>2]=ge;c[j>>2]=fe;fe=c[h>>2]|0;ge=c[j>>2]|0;a[l+0>>0]=a[k+0>>0]|0;c[m>>2]=fe;c[n>>2]=ge}if(a[C+4>>0]&1){ge=c[C>>2]|0;c[w>>2]=(c[x>>2]|0)+13;fe=c[w>>2]|0;c[u>>2]=ge;c[t>>2]=fe;fe=c[u>>2]|0;ge=c[t>>2]|0;a[r+0>>0]=a[s+0>>0]|0;c[q>>2]=fe;c[p>>2]=ge}if((c[x>>2]|0)==0){i=g;return}fe=c[x>>2]|0;c[y>>2]=c[C>>2];c[f>>2]=fe;c[z>>2]=1;fe=c[f>>2]|0;ge=c[z>>2]|0;c[A>>2]=c[y>>2];c[B>>2]=fe;c[o>>2]=ge;Sw(c[B>>2]|0);i=g;return}function Qg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;n=i;i=i+144|0;C=n+52|0;D=n+96|0;E=n+108|0;B=n+132|0;x=n+12|0;u=n+88|0;v=n+20|0;w=n+24|0;t=n+28|0;r=n+104|0;q=n+112|0;l=n+120|0;f=n+128|0;g=n+136|0;o=n+140|0;p=n+56|0;m=n+64|0;h=n+68|0;j=n+72|0;H=n+76|0;I=n+4|0;J=n;G=n+92|0;K=n+100|0;z=n+36|0;k=n+40|0;y=n+116|0;F=n+44|0;A=n+124|0;s=n+8|0;c[K>>2]=a;c[z>>2]=b;c[k>>2]=d;c[y>>2]=e;e=c[K>>2]|0;c[I>>2]=G;c[J>>2]=-1;a=c[J>>2]|0;c[H>>2]=c[I>>2];c[n+80>>2]=a;c[c[H>>2]>>2]=0;c[F>>2]=c[G>>2];c[n+60>>2]=F;c[c[y>>2]>>2]=0;c[D>>2]=B;c[E>>2]=-1;a=c[E>>2]|0;c[C>>2]=c[D>>2];c[n+84>>2]=a;c[c[C>>2]>>2]=0;c[A>>2]=c[B>>2];c[n+48>>2]=A;c[(c[y>>2]|0)+4>>2]=0;c[(c[y>>2]|0)+8>>2]=c[z>>2];c[c[k>>2]>>2]=c[y>>2];c[x>>2]=e;a=c[c[c[x>>2]>>2]>>2]|0;c[v>>2]=t;c[w>>2]=-1;b=c[w>>2]|0;c[u>>2]=c[v>>2];c[n+16>>2]=b;c[c[u>>2]>>2]=0;c[s>>2]=c[t>>2];c[n+32>>2]=s;if((a|0)!=0){c[r>>2]=e;K=c[c[c[r>>2]>>2]>>2]|0;c[q>>2]=e;c[c[q>>2]>>2]=K}c[p>>2]=e;c[o>>2]=(c[p>>2]|0)+4;c[g>>2]=c[o>>2];c[f>>2]=c[g>>2];c[l>>2]=c[f>>2];_d(c[c[l>>2]>>2]|0,c[c[k>>2]>>2]|0);c[j>>2]=e;c[h>>2]=(c[j>>2]|0)+8;c[m>>2]=c[h>>2];K=c[m>>2]|0;c[K>>2]=(c[K>>2]|0)+1;i=n;return}function Rg(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0;g=i;i=i+208|0;R=g+188|0;T=g+180|0;U=g+164|0;V=g+68|0;W=g+76|0;H=g+72|0;I=g+12|0;J=g+140|0;K=g+16|0;L=g+20|0;M=g+24|0;N=g+28|0;O=g+32|0;P=g+36|0;Q=g+40|0;D=g+136|0;C=g+44|0;E=g+48|0;F=g+52|0;A=g+56|0;B=g+160|0;h=g+168|0;y=g+176|0;u=g+192|0;t=g+80|0;v=g+84|0;x=g+88|0;w=g+92|0;r=g+96|0;f=g+100|0;p=g+132|0;q=g+104|0;o=g+108|0;n=g+112|0;m=g+116|0;l=g+120|0;k=g+124|0;j=g+128|0;X=g+8|0;Y=g+144|0;Z=g+148|0;_=g+4|0;$=g+152|0;aa=g;S=g+60|0;z=g+156|0;s=g+64|0;G=g+172|0;c[S>>2]=b;c[z>>2]=e;e=c[S>>2]|0;S=c[z>>2]|0;c[aa>>2]=e;c[$>>2]=c[aa>>2];c[_>>2]=(c[$>>2]|0)+4;c[Z>>2]=c[_>>2];c[Y>>2]=c[Z>>2];c[X>>2]=c[Y>>2];b=c[c[X>>2]>>2]|0;c[W>>2]=e;c[V>>2]=(c[W>>2]|0)+4;c[U>>2]=c[V>>2];c[T>>2]=c[U>>2];c[R>>2]=c[T>>2];Sg(s,e,S,b,c[R>>2]|0);c[Q>>2]=e;c[P>>2]=c[Q>>2];c[O>>2]=(c[P>>2]|0)+4;c[N>>2]=c[O>>2];c[M>>2]=c[N>>2];c[L>>2]=c[M>>2];b=c[L>>2]|0;c[J>>2]=G;c[K>>2]=b;b=c[K>>2]|0;c[H>>2]=c[J>>2];c[I>>2]=b;c[c[H>>2]>>2]=c[I>>2];c[E>>2]=s;c[F>>2]=G;b=c[F>>2]|0;c[D>>2]=c[E>>2];c[C>>2]=b;if((c[c[D>>2]>>2]|0)==(c[c[C>>2]>>2]|0)^1?(c[h>>2]=e,c[B>>2]=(c[h>>2]|0)+8,c[A>>2]=c[B>>2],_=c[A>>2]|0,aa=c[z>>2]|0,c[y>>2]=s,$=(c[c[y>>2]>>2]|0)+13|0,c[v>>2]=_,c[x>>2]=aa,c[w>>2]=$,$=c[x>>2]|0,aa=c[w>>2]|0,c[g+184>>2]=c[v>>2],c[u>>2]=$,c[t>>2]=aa,(d[c[u>>2]>>0]|0|0)>=(d[c[t>>2]>>0]|0|0)):0){c[a+0>>2]=c[s+0>>2];i=g;return}c[j>>2]=e;c[k>>2]=c[j>>2];c[l>>2]=(c[k>>2]|0)+4;c[m>>2]=c[l>>2];c[n>>2]=c[m>>2];c[o>>2]=c[n>>2];aa=c[o>>2]|0;c[p>>2]=a;c[q>>2]=aa;aa=c[q>>2]|0;c[r>>2]=c[p>>2];c[f>>2]=aa;c[c[r>>2]>>2]=c[f>>2];i=g;return}function Sg(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;n=i;i=i+96|0;o=n+32|0;r=n+28|0;q=n;p=n+84|0;x=n+56|0;y=n+8|0;z=n+12|0;u=n+48|0;v=n+64|0;h=n+72|0;l=n+80|0;m=n+88|0;j=n+92|0;k=n+36|0;D=n+40|0;E=n+44|0;B=n+52|0;C=n+60|0;A=n+16|0;G=n+4|0;t=n+20|0;s=n+68|0;w=n+24|0;F=n+76|0;c[G>>2]=b;c[t>>2]=e;c[s>>2]=f;c[w>>2]=g;g=c[G>>2]|0;while(1){G=c[s>>2]|0;c[B>>2]=A;c[C>>2]=-1;b=c[C>>2]|0;c[D>>2]=c[B>>2];c[E>>2]=b;c[c[D>>2]>>2]=0;c[F>>2]=c[A>>2];c[o>>2]=F;if((G|0)==0)break;c[p>>2]=g;c[q>>2]=(c[p>>2]|0)+8;c[r>>2]=c[q>>2];f=(c[s>>2]|0)+13|0;G=c[t>>2]|0;c[u>>2]=c[r>>2];c[v>>2]=f;c[h>>2]=G;G=c[v>>2]|0;f=c[h>>2]|0;c[x>>2]=c[u>>2];c[y>>2]=G;c[z>>2]=f;f=c[s>>2]|0;if((d[c[y>>2]>>0]|0|0)<(d[c[z>>2]>>0]|0|0)){c[s>>2]=c[f+4>>2];continue}else{c[w>>2]=f;c[s>>2]=c[c[s>>2]>>2];continue}}G=c[w>>2]|0;c[j>>2]=a;c[k>>2]=G;G=c[k>>2]|0;c[l>>2]=c[j>>2];c[m>>2]=G;c[c[l>>2]>>2]=c[m>>2];i=n;return}function Tg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;Ug(c[f>>2]|0,c[e>>2]|0);i=d;return}function Ug(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;e=i;i=i+128|0;t=e+112|0;m=e+40|0;o=e+92|0;q=e+100|0;n=e+24|0;p=e;v=e+20|0;r=e+68|0;w=e+44|0;s=e+117|0;u=e+8|0;x=e+96|0;z=e+104|0;y=e+16|0;g=e+48|0;h=e+64|0;j=e+52|0;k=e+56|0;l=e+60|0;f=e+84|0;B=e+88|0;C=e+80|0;D=e+72|0;E=e+28|0;F=e+108|0;G=e+76|0;A=e+116|0;c[G>>2]=b;c[e+32>>2]=d;d=c[G>>2]|0;c[F>>2]=d+4;c[E>>2]=c[F>>2];c[D>>2]=c[E>>2];b=c[D>>2]|0;c[e+36>>2]=b;c[C>>2]=b;c[B>>2]=c[C>>2];c[c[B>>2]>>2]=0;b=d+8|0;a[y+0>>0]=a[A+0>>0]|0;c[x>>2]=b;c[z>>2]=0;x=c[x>>2]|0;b=c[z>>2]|0;a[u+0>>0]=a[y+0>>0]|0;c[r>>2]=x;c[w>>2]=b;r=c[r>>2]|0;c[v>>2]=w;b=c[c[v>>2]>>2]|0;c[t>>2]=u;a[p+0>>0]=a[s+0>>0]|0;c[q>>2]=r;c[n>>2]=b;b=c[q>>2]|0;c[o>>2]=p;c[m>>2]=n;c[b>>2]=c[c[m>>2]>>2];c[l>>2]=d;c[k>>2]=(c[l>>2]|0)+4;c[j>>2]=c[k>>2];c[h>>2]=c[j>>2];c[g>>2]=c[h>>2];b=c[g>>2]|0;c[f>>2]=d;c[c[f>>2]>>2]=b;i=e;return}function Vg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;f=i;i=i+160|0;n=f+72|0;g=f+32|0;l=f+108|0;j=f+132|0;s=f+8|0;y=f+76|0;z=f+28|0;w=f+20|0;x=f+24|0;v=f;h=f+96|0;u=f+104|0;E=f+136|0;D=f+140|0;C=f+144|0;B=f+52|0;A=f+56|0;t=f+60|0;F=f+64|0;m=f+68|0;p=f+16|0;q=f+4|0;r=f+84|0;G=f+80|0;H=f+88|0;I=f+92|0;J=f+36|0;K=f+100|0;k=f+40|0;o=f+44|0;e=f+112|0;c[K>>2]=b;c[k>>2]=d;b=c[K>>2]|0;c[J>>2]=b;c[I>>2]=(c[J>>2]|0)+8;c[H>>2]=c[I>>2];c[o>>2]=c[H>>2];c[G>>2]=b;d=c[G>>2]|0;d=(c[d+4>>2]|0)-(c[d>>2]|0)+1|0;c[F>>2]=b;c[m>>2]=d;d=c[F>>2]|0;c[p>>2]=qf(d)|0;if((c[m>>2]|0)>>>0>(c[p>>2]|0)>>>0)ht(d);c[A>>2]=d;c[B>>2]=c[A>>2];K=c[B>>2]|0;c[C>>2]=K;c[D>>2]=(c[C>>2]|0)+8;c[E>>2]=c[D>>2];c[q>>2]=(c[c[E>>2]>>2]|0)-(c[K>>2]|0);if((c[q>>2]|0)>>>0>=(((c[p>>2]|0)>>>0)/2|0)>>>0)c[t>>2]=c[p>>2];else{c[r>>2]=c[q>>2]<<1;c[h>>2]=r;c[u>>2]=m;K=c[h>>2]|0;J=c[u>>2]|0;a[v+0>>0]=a[f+148>>0]|0;c[w>>2]=K;c[x>>2]=J;J=c[w>>2]|0;K=c[x>>2]|0;c[f+12>>2]=v;c[y>>2]=J;c[z>>2]=K;c[t>>2]=c[((c[c[y>>2]>>2]|0)>>>0<(c[c[z>>2]>>2]|0)>>>0?c[x>>2]|0:c[w>>2]|0)>>2]}K=c[t>>2]|0;c[s>>2]=b;J=c[s>>2]|0;Wg(e,K,(c[J+4>>2]|0)-(c[J>>2]|0)|0,c[o>>2]|0);J=c[o>>2]|0;c[j>>2]=c[e+8>>2];K=c[j>>2]|0;c[l>>2]=c[k>>2];h=c[l>>2]|0;c[f+48>>2]=J;c[n>>2]=K;c[g>>2]=h;h=c[n>>2]|0;if((h|0)==0){K=e+8|0;J=c[K>>2]|0;J=J+1|0;c[K>>2]=J;Xg(b,e);Yg(e);i=f;return}a[h>>0]=a[c[g>>2]>>0]|0;K=e+8|0;J=c[K>>2]|0;J=J+1|0;c[K>>2]=J;Xg(b,e);Yg(e);i=f;return}function Wg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;k=f+12|0;j=f+8|0;h=f+4|0;g=f;c[k>>2]=a;c[j>>2]=b;c[h>>2]=d;c[g>>2]=e;_g(c[k>>2]|0,c[j>>2]|0,c[h>>2]|0,c[g>>2]|0);i=f;return}function Xg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=i;i=i+144|0;F=d+108|0;H=d+88|0;G=d+80|0;E=d+48|0;C=d+8|0;z=d+12|0;D=d+84|0;B=d+16|0;y=d+20|0;A=d+24|0;w=d+28|0;t=d+32|0;x=d+104|0;v=d+112|0;s=d+120|0;u=d+128|0;m=d+136|0;q=d+52|0;r=d+56|0;n=d+60|0;o=d+64|0;p=d+68|0;k=d+72|0;g=d+76|0;l=d+4|0;j=d;f=d+92|0;h=d+96|0;K=d+100|0;J=d+40|0;I=d+116|0;L=d+44|0;e=d+124|0;c[L>>2]=a;c[e>>2]=b;a=c[L>>2]|0;c[I>>2]=a;c[J>>2]=(c[I>>2]|0)+8;c[K>>2]=c[J>>2];J=c[a>>2]|0;I=c[a+4>>2]|0;b=(c[e>>2]|0)+4|0;c[d+132>>2]=c[K>>2];c[F>>2]=J;c[H>>2]=I;c[G>>2]=b;c[E>>2]=(c[H>>2]|0)-(c[F>>2]|0);b=c[G>>2]|0;c[b>>2]=(c[b>>2]|0)+(0-(c[E>>2]|0));By(c[c[G>>2]>>2]|0,c[F>>2]|0,c[E>>2]|0)|0;b=(c[e>>2]|0)+4|0;c[B>>2]=a;c[y>>2]=b;c[D>>2]=c[B>>2];c[A>>2]=c[c[D>>2]>>2];c[C>>2]=c[y>>2];c[c[B>>2]>>2]=c[c[C>>2]>>2];c[z>>2]=A;c[c[y>>2]>>2]=c[c[z>>2]>>2];b=(c[e>>2]|0)+8|0;c[v>>2]=a+4;c[s>>2]=b;c[x>>2]=c[v>>2];c[u>>2]=c[c[x>>2]>>2];c[w>>2]=c[s>>2];c[c[v>>2]>>2]=c[c[w>>2]>>2];c[t>>2]=u;c[c[s>>2]>>2]=c[c[t>>2]>>2];c[r>>2]=a;c[q>>2]=(c[r>>2]|0)+8;c[m>>2]=c[q>>2];m=c[m>>2]|0;c[p>>2]=c[e>>2];c[o>>2]=(c[p>>2]|0)+12;c[n>>2]=c[o>>2];b=c[n>>2]|0;c[j>>2]=m;c[f>>2]=b;c[l>>2]=c[j>>2];c[h>>2]=c[c[l>>2]>>2];c[k>>2]=c[f>>2];c[c[j>>2]>>2]=c[c[k>>2]>>2];c[g>>2]=h;c[c[f>>2]>>2]=c[c[g>>2]>>2];c[c[e>>2]>>2]=c[(c[e>>2]|0)+4>>2];c[d+36>>2]=a;i=d;return}function Yg(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Zg(c[d>>2]|0);i=b;return}function Zg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;r=i;i=i+128|0;l=r+72|0;k=r+44|0;j=r+12|0;h=r+104|0;g=r+24|0;f=r+16|0;q=r+20|0;p=r+76|0;d=r+52|0;e=r+28|0;m=r+32|0;n=r+36|0;o=r+40|0;w=r+108|0;B=r+112|0;C=r+116|0;A=r;x=r+56|0;y=r+60|0;z=r+120|0;v=r+68|0;u=r+88|0;t=r+92|0;E=r+96|0;s=r+100|0;G=r+8|0;F=r+80|0;I=r+84|0;H=r+121|0;J=r+48|0;D=r+64|0;c[D>>2]=b;D=c[D>>2]|0;c[J>>2]=D;J=c[J>>2]|0;b=c[J+4>>2]|0;c[F>>2]=J;c[I>>2]=b;F=c[F>>2]|0;b=c[I>>2]|0;a[G+0>>0]=a[H+0>>0]|0;c[E>>2]=F;c[s>>2]=b;b=c[E>>2]|0;while(1){if((c[s>>2]|0)==(c[b+8>>2]|0))break;c[t>>2]=b;c[u>>2]=(c[t>>2]|0)+12;c[v>>2]=c[u>>2];J=c[(c[v>>2]|0)+4>>2]|0;H=b+8|0;I=(c[H>>2]|0)+ -1|0;c[H>>2]=I;c[w>>2]=I;I=c[w>>2]|0;c[x>>2]=J;c[y>>2]=I;I=c[x>>2]|0;J=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=I;c[C>>2]=J}if((c[D>>2]|0)==0){i=r;return}c[q>>2]=D;c[f>>2]=(c[q>>2]|0)+12;c[g>>2]=c[f>>2];H=c[(c[g>>2]|0)+4>>2]|0;J=c[D>>2]|0;c[h>>2]=D;I=c[h>>2]|0;c[j>>2]=I;c[k>>2]=(c[j>>2]|0)+12;c[l>>2]=c[k>>2];I=(c[c[l>>2]>>2]|0)-(c[I>>2]|0)|0;c[m>>2]=H;c[n>>2]=J;c[o>>2]=I;I=c[n>>2]|0;J=c[o>>2]|0;c[p>>2]=c[m>>2];c[d>>2]=I;c[e>>2]=J;Sw(c[d>>2]|0);i=r;return}function _g(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;q=i;i=i+176|0;C=q+64|0;x=q+60|0;z=q;B=q+148|0;A=q+156|0;y=q+56|0;E=q+12|0;G=q+112|0;F=q+16|0;D=q+20|0;H=q+24|0;J=q+28|0;I=q+32|0;p=q+36|0;g=q+40|0;r=q+108|0;m=q+144|0;n=q+160|0;f=q+164|0;u=q+68|0;v=q+76|0;w=q+80|0;t=q+84|0;o=q+92|0;h=q+96|0;j=q+100|0;N=q+104|0;O=q+124|0;P=q+44|0;M=q+8|0;Q=q+48|0;k=q+132|0;l=q+52|0;K=q+140|0;L=q+120|0;s=q+116|0;c[Q>>2]=a;c[k>>2]=b;c[l>>2]=d;c[K>>2]=e;e=c[Q>>2]|0;c[O>>2]=M;c[P>>2]=-1;b=c[P>>2]|0;c[N>>2]=c[O>>2];c[q+4>>2]=b;c[c[N>>2]>>2]=0;c[L>>2]=c[M>>2];c[q+128>>2]=L;b=c[K>>2]|0;c[H>>2]=e+12;c[J>>2]=0;c[I>>2]=b;b=c[J>>2]|0;d=c[I>>2]|0;c[G>>2]=c[H>>2];c[F>>2]=b;c[D>>2]=d;d=c[G>>2]|0;c[E>>2]=F;b=c[c[E>>2]>>2]|0;c[C>>2]=c[D>>2];a=c[C>>2]|0;c[B>>2]=d;c[A>>2]=b;c[y>>2]=a;a=c[B>>2]|0;c[z>>2]=A;c[a>>2]=c[c[z>>2]>>2];c[x>>2]=c[y>>2];c[a+4>>2]=c[x>>2];if((c[k>>2]|0)!=0){c[r>>2]=e;c[g>>2]=(c[r>>2]|0)+12;c[p>>2]=c[g>>2];Q=c[k>>2]|0;c[n>>2]=c[(c[p>>2]|0)+4>>2];c[f>>2]=Q;Q=c[f>>2]|0;c[q+136>>2]=c[n>>2];c[m>>2]=Q;c[q+152>>2]=0;Q=Qw(c[m>>2]|0)|0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+P|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+P|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}else{c[v>>2]=t;c[w>>2]=-1;Q=c[w>>2]|0;c[u>>2]=c[v>>2];c[q+72>>2]=Q;c[c[u>>2]>>2]=0;c[s>>2]=c[t>>2];c[q+88>>2]=s;Q=0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+P|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+P|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}}function $g(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;g=i;i=i+160|0;o=g+72|0;h=g+32|0;m=g+108|0;k=g+132|0;t=g+8|0;z=g+76|0;A=g+28|0;x=g+20|0;y=g+24|0;w=g;j=g+96|0;v=g+104|0;F=g+136|0;E=g+140|0;D=g+144|0;C=g+52|0;B=g+56|0;u=g+60|0;G=g+64|0;n=g+68|0;q=g+16|0;r=g+4|0;s=g+84|0;H=g+80|0;I=g+88|0;J=g+92|0;K=g+36|0;L=g+100|0;l=g+40|0;p=g+44|0;f=g+112|0;c[L>>2]=d;c[l>>2]=e;d=c[L>>2]|0;c[K>>2]=d;c[J>>2]=(c[K>>2]|0)+8;c[I>>2]=c[J>>2];c[p>>2]=c[I>>2];c[H>>2]=d;e=c[H>>2]|0;e=(((c[e+4>>2]|0)-(c[e>>2]|0)|0)/2|0)+1|0;c[G>>2]=d;c[n>>2]=e;e=c[G>>2]|0;c[q>>2]=eh(e)|0;if((c[n>>2]|0)>>>0>(c[q>>2]|0)>>>0)ht(e);c[B>>2]=e;c[C>>2]=c[B>>2];L=c[C>>2]|0;c[D>>2]=L;c[E>>2]=(c[D>>2]|0)+8;c[F>>2]=c[E>>2];c[r>>2]=((c[c[F>>2]>>2]|0)-(c[L>>2]|0)|0)/2|0;if((c[r>>2]|0)>>>0>=(((c[q>>2]|0)>>>0)/2|0)>>>0)c[u>>2]=c[q>>2];else{c[s>>2]=c[r>>2]<<1;c[j>>2]=s;c[v>>2]=n;L=c[j>>2]|0;K=c[v>>2]|0;a[w+0>>0]=a[g+148>>0]|0;c[x>>2]=L;c[y>>2]=K;K=c[x>>2]|0;L=c[y>>2]|0;c[g+12>>2]=w;c[z>>2]=K;c[A>>2]=L;c[u>>2]=c[((c[c[z>>2]>>2]|0)>>>0<(c[c[A>>2]>>2]|0)>>>0?c[y>>2]|0:c[x>>2]|0)>>2]}L=c[u>>2]|0;c[t>>2]=d;K=c[t>>2]|0;ah(f,L,((c[K+4>>2]|0)-(c[K>>2]|0)|0)/2|0,c[p>>2]|0);K=c[p>>2]|0;c[k>>2]=c[f+8>>2];L=c[k>>2]|0;c[m>>2]=c[l>>2];j=c[m>>2]|0;c[g+48>>2]=K;c[o>>2]=L;c[h>>2]=j;j=c[o>>2]|0;if((j|0)==0){L=f+8|0;K=c[L>>2]|0;K=K+2|0;c[L>>2]=K;bh(d,f);ch(f);i=g;return}b[j>>1]=b[c[h>>2]>>1]|0;L=f+8|0;K=c[L>>2]|0;K=K+2|0;c[L>>2]=K;bh(d,f);ch(f);i=g;return}function ah(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;k=f+12|0;j=f+8|0;h=f+4|0;g=f;c[k>>2]=a;c[j>>2]=b;c[h>>2]=d;c[g>>2]=e;fh(c[k>>2]|0,c[j>>2]|0,c[h>>2]|0,c[g>>2]|0);i=f;return}function bh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=i;i=i+144|0;F=d+108|0;H=d+88|0;G=d+80|0;E=d+48|0;C=d+8|0;z=d+12|0;D=d+84|0;B=d+16|0;y=d+20|0;A=d+24|0;w=d+28|0;t=d+32|0;x=d+104|0;v=d+112|0;s=d+120|0;u=d+128|0;m=d+136|0;q=d+52|0;r=d+56|0;n=d+60|0;o=d+64|0;p=d+68|0;k=d+72|0;g=d+76|0;l=d+4|0;j=d;f=d+92|0;h=d+96|0;K=d+100|0;J=d+40|0;I=d+116|0;L=d+44|0;e=d+124|0;c[L>>2]=a;c[e>>2]=b;a=c[L>>2]|0;c[I>>2]=a;c[J>>2]=(c[I>>2]|0)+8;c[K>>2]=c[J>>2];J=c[a>>2]|0;I=c[a+4>>2]|0;b=(c[e>>2]|0)+4|0;c[d+132>>2]=c[K>>2];c[F>>2]=J;c[H>>2]=I;c[G>>2]=b;c[E>>2]=((c[H>>2]|0)-(c[F>>2]|0)|0)/2|0;b=c[G>>2]|0;c[b>>2]=(c[b>>2]|0)+(0-(c[E>>2]|0)<<1);By(c[c[G>>2]>>2]|0,c[F>>2]|0,c[E>>2]<<1|0)|0;b=(c[e>>2]|0)+4|0;c[B>>2]=a;c[y>>2]=b;c[D>>2]=c[B>>2];c[A>>2]=c[c[D>>2]>>2];c[C>>2]=c[y>>2];c[c[B>>2]>>2]=c[c[C>>2]>>2];c[z>>2]=A;c[c[y>>2]>>2]=c[c[z>>2]>>2];b=(c[e>>2]|0)+8|0;c[v>>2]=a+4;c[s>>2]=b;c[x>>2]=c[v>>2];c[u>>2]=c[c[x>>2]>>2];c[w>>2]=c[s>>2];c[c[v>>2]>>2]=c[c[w>>2]>>2];c[t>>2]=u;c[c[s>>2]>>2]=c[c[t>>2]>>2];c[r>>2]=a;c[q>>2]=(c[r>>2]|0)+8;c[m>>2]=c[q>>2];m=c[m>>2]|0;c[p>>2]=c[e>>2];c[o>>2]=(c[p>>2]|0)+12;c[n>>2]=c[o>>2];b=c[n>>2]|0;c[j>>2]=m;c[f>>2]=b;c[l>>2]=c[j>>2];c[h>>2]=c[c[l>>2]>>2];c[k>>2]=c[f>>2];c[c[j>>2]>>2]=c[c[k>>2]>>2];c[g>>2]=h;c[c[f>>2]>>2]=c[c[g>>2]>>2];c[c[e>>2]>>2]=c[(c[e>>2]|0)+4>>2];c[d+36>>2]=a;i=d;return}function ch(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;dh(c[d>>2]|0);i=b;return}function dh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;r=i;i=i+128|0;l=r+72|0;k=r+44|0;j=r+12|0;h=r+104|0;g=r+24|0;f=r+16|0;q=r+20|0;p=r+76|0;d=r+52|0;e=r+28|0;m=r+32|0;n=r+36|0;o=r+40|0;w=r+108|0;B=r+112|0;C=r+116|0;A=r;x=r+56|0;y=r+60|0;z=r+120|0;v=r+68|0;u=r+88|0;t=r+92|0;E=r+96|0;s=r+100|0;G=r+8|0;F=r+80|0;I=r+84|0;H=r+121|0;J=r+48|0;D=r+64|0;c[D>>2]=b;D=c[D>>2]|0;c[J>>2]=D;J=c[J>>2]|0;b=c[J+4>>2]|0;c[F>>2]=J;c[I>>2]=b;F=c[F>>2]|0;b=c[I>>2]|0;a[G+0>>0]=a[H+0>>0]|0;c[E>>2]=F;c[s>>2]=b;b=c[E>>2]|0;while(1){if((c[s>>2]|0)==(c[b+8>>2]|0))break;c[t>>2]=b;c[u>>2]=(c[t>>2]|0)+12;c[v>>2]=c[u>>2];J=c[(c[v>>2]|0)+4>>2]|0;H=b+8|0;I=(c[H>>2]|0)+ -2|0;c[H>>2]=I;c[w>>2]=I;I=c[w>>2]|0;c[x>>2]=J;c[y>>2]=I;I=c[x>>2]|0;J=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=I;c[C>>2]=J}if((c[D>>2]|0)==0){i=r;return}c[q>>2]=D;c[f>>2]=(c[q>>2]|0)+12;c[g>>2]=c[f>>2];H=c[(c[g>>2]|0)+4>>2]|0;J=c[D>>2]|0;c[h>>2]=D;I=c[h>>2]|0;c[j>>2]=I;c[k>>2]=(c[j>>2]|0)+12;c[l>>2]=c[k>>2];I=((c[c[l>>2]>>2]|0)-(c[I>>2]|0)|0)/2|0;c[m>>2]=H;c[n>>2]=J;c[o>>2]=I;I=c[n>>2]|0;J=c[o>>2]|0;c[p>>2]=c[m>>2];c[d>>2]=I;c[e>>2]=J;Sw(c[d>>2]|0);i=r;return}function eh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+80|0;q=h+44|0;r=h+40|0;s=h+8|0;u=h+12|0;t=h+76|0;k=h+36|0;g=h+16|0;f=h+20|0;d=h+68|0;e=h+32|0;l=h;n=h+48|0;j=h+52|0;m=h+77|0;v=h+60|0;w=h+64|0;x=h+28|0;y=h+24|0;p=h+56|0;o=h+72|0;c[y>>2]=b;c[x>>2]=c[y>>2];c[w>>2]=(c[x>>2]|0)+8;c[v>>2]=c[w>>2];c[u>>2]=c[v>>2];b=c[u>>2]|0;a[s+0>>0]=a[t+0>>0]|0;c[r>>2]=b;c[q>>2]=c[r>>2];c[p>>2]=2147483647;c[o>>2]=4294967295/2|0;c[n>>2]=p;c[j>>2]=o;b=c[n>>2]|0;j=c[j>>2]|0;a[l+0>>0]=a[m+0>>0]|0;c[d>>2]=b;c[e>>2]=j;j=c[e>>2]|0;b=c[d>>2]|0;c[k>>2]=l;c[g>>2]=j;c[f>>2]=b;i=h;return c[((c[c[g>>2]>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0?c[e>>2]|0:c[d>>2]|0)>>2]|0}function fh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;q=i;i=i+176|0;C=q+64|0;x=q+60|0;z=q;B=q+148|0;A=q+156|0;y=q+56|0;E=q+12|0;G=q+112|0;F=q+16|0;D=q+20|0;H=q+24|0;J=q+28|0;I=q+32|0;p=q+36|0;g=q+40|0;r=q+108|0;m=q+144|0;n=q+160|0;f=q+164|0;u=q+68|0;v=q+76|0;w=q+80|0;t=q+84|0;o=q+92|0;h=q+96|0;j=q+100|0;N=q+104|0;O=q+124|0;P=q+44|0;M=q+8|0;Q=q+48|0;k=q+132|0;l=q+52|0;K=q+140|0;L=q+120|0;s=q+116|0;c[Q>>2]=a;c[k>>2]=b;c[l>>2]=d;c[K>>2]=e;e=c[Q>>2]|0;c[O>>2]=M;c[P>>2]=-1;b=c[P>>2]|0;c[N>>2]=c[O>>2];c[q+4>>2]=b;c[c[N>>2]>>2]=0;c[L>>2]=c[M>>2];c[q+128>>2]=L;b=c[K>>2]|0;c[H>>2]=e+12;c[J>>2]=0;c[I>>2]=b;b=c[J>>2]|0;d=c[I>>2]|0;c[G>>2]=c[H>>2];c[F>>2]=b;c[D>>2]=d;d=c[G>>2]|0;c[E>>2]=F;b=c[c[E>>2]>>2]|0;c[C>>2]=c[D>>2];a=c[C>>2]|0;c[B>>2]=d;c[A>>2]=b;c[y>>2]=a;a=c[B>>2]|0;c[z>>2]=A;c[a>>2]=c[c[z>>2]>>2];c[x>>2]=c[y>>2];c[a+4>>2]=c[x>>2];if((c[k>>2]|0)!=0){c[r>>2]=e;c[g>>2]=(c[r>>2]|0)+12;c[p>>2]=c[g>>2];Q=c[k>>2]|0;c[n>>2]=c[(c[p>>2]|0)+4>>2];c[f>>2]=Q;Q=c[f>>2]|0;c[q+136>>2]=c[n>>2];c[m>>2]=Q;c[q+152>>2]=0;Q=Qw(c[m>>2]<<1)|0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P<<1)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P<<1)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}else{c[v>>2]=t;c[w>>2]=-1;Q=c[w>>2]|0;c[u>>2]=c[v>>2];c[q+72>>2]=Q;c[c[u>>2]>>2]=0;c[s>>2]=c[t>>2];c[q+88>>2]=s;Q=0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P<<1)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P<<1)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}}function gh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;t=i;i=i+144|0;h=t+76|0;u=t+60|0;v=t+124|0;e=t+116|0;f=t+16|0;r=t;o=t+8|0;q=t+28|0;A=t+52|0;z=t+104|0;y=t+112|0;x=t+120|0;w=t+128|0;g=t+132|0;F=t+136|0;p=t+80|0;l=t+84|0;m=t+88|0;n=t+92|0;E=t+12|0;D=t+24|0;C=t+96|0;B=t+4|0;G=t+64|0;H=t+56|0;I=t+100|0;J=t+108|0;s=t+20|0;k=t+72|0;j=t+32|0;c[J>>2]=b;c[s>>2]=d;d=c[J>>2]|0;c[I>>2]=d;c[H>>2]=(c[I>>2]|0)+8;c[G>>2]=c[H>>2];if(((c[c[G>>2]>>2]|0)-(c[d+4>>2]|0)|0)>>>0>=(c[s>>2]|0)>>>0){of(d,c[s>>2]|0);i=t;return}c[B>>2]=d;c[C>>2]=(c[B>>2]|0)+8;c[D>>2]=c[C>>2];c[k>>2]=c[D>>2];c[E>>2]=d;B=c[E>>2]|0;B=(c[B+4>>2]|0)-(c[B>>2]|0)+(c[s>>2]|0)|0;c[F>>2]=d;c[p>>2]=B;B=c[F>>2]|0;c[l>>2]=qf(B)|0;if((c[p>>2]|0)>>>0>(c[l>>2]|0)>>>0)ht(B);c[w>>2]=B;c[x>>2]=c[w>>2];J=c[x>>2]|0;c[y>>2]=J;c[z>>2]=(c[y>>2]|0)+8;c[A>>2]=c[z>>2];c[m>>2]=(c[c[A>>2]>>2]|0)-(c[J>>2]|0);if((c[m>>2]|0)>>>0>=(((c[l>>2]|0)>>>0)/2|0)>>>0)c[g>>2]=c[l>>2];else{c[n>>2]=c[m>>2]<<1;c[o>>2]=n;c[q>>2]=p;J=c[o>>2]|0;I=c[q>>2]|0;a[r+0>>0]=a[t+140>>0]|0;c[e>>2]=J;c[f>>2]=I;I=c[e>>2]|0;J=c[f>>2]|0;c[t+68>>2]=r;c[u>>2]=I;c[v>>2]=J;c[g>>2]=c[((c[c[u>>2]>>2]|0)>>>0<(c[c[v>>2]>>2]|0)>>>0?c[f>>2]|0:c[e>>2]|0)>>2]}I=c[g>>2]|0;c[h>>2]=d;J=c[h>>2]|0;Wg(j,I,(c[J+4>>2]|0)-(c[J>>2]|0)|0,c[k>>2]|0);hh(j,c[s>>2]|0);Xg(d,j);Yg(j);i=t;return}function hh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+48|0;h=e+28|0;j=e+16|0;k=e+4|0;l=e+8|0;m=e+32|0;n=e;o=e+12|0;f=e+24|0;g=e+20|0;c[o>>2]=b;c[f>>2]=d;b=c[o>>2]|0;c[n>>2]=b;c[m>>2]=(c[n>>2]|0)+12;c[l>>2]=c[m>>2];c[g>>2]=c[(c[l>>2]|0)+4>>2];do{o=c[g>>2]|0;c[h>>2]=c[b+8>>2];d=c[h>>2]|0;c[j>>2]=o;c[k>>2]=d;d=c[k>>2]|0;if((d|0)!=0)a[d>>0]=0;o=b+8|0;c[o>>2]=(c[o>>2]|0)+1;c[f>>2]=(c[f>>2]|0)+ -1}while((c[f>>2]|0)>>>0>0);i=e;return}function ih(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;rd(c[d>>2]|0);i=b;return}function jh(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;kh(c[d>>2]|0);i=b;return}function kh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=i;i=i+144|0;w=d+48|0;B=d+8|0;C=d+84|0;A=d;x=d+16|0;y=d+4|0;z=d+132|0;v=d+80|0;u=d+44|0;t=d+20|0;E=d+24|0;e=d+28|0;D=d+32|0;g=d+36|0;f=d+40|0;s=d+76|0;l=d+124|0;k=d+128|0;j=d+52|0;h=d+56|0;p=d+64|0;q=d+68|0;r=d+92|0;m=d+96|0;n=d+100|0;o=d+104|0;I=d+108|0;K=d+116|0;J=d+120|0;H=d+88|0;F=d+72|0;G=d+12|0;c[F>>2]=b;b=c[F>>2]|0;F=c[b>>2]|0;c[K>>2]=H;c[J>>2]=-1;J=c[J>>2]|0;c[I>>2]=c[K>>2];c[d+112>>2]=J;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[d+60>>2]=G;if((F|0)==0){i=d;return}c[D>>2]=b;K=c[D>>2]|0;D=c[K>>2]|0;c[E>>2]=K;c[e>>2]=D;D=c[E>>2]|0;while(1){if((c[e>>2]|0)==(c[D+4>>2]|0))break;c[t>>2]=D;c[u>>2]=(c[t>>2]|0)+8;c[v>>2]=c[u>>2];K=c[v>>2]|0;I=D+4|0;J=(c[I>>2]|0)+ -2|0;c[I>>2]=J;c[w>>2]=J;J=c[w>>2]|0;c[x>>2]=K;c[y>>2]=J;J=c[x>>2]|0;K=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=J;c[C>>2]=K}c[s>>2]=b;c[f>>2]=(c[s>>2]|0)+8;c[g>>2]=c[f>>2];I=c[g>>2]|0;K=c[b>>2]|0;c[h>>2]=b;J=c[h>>2]|0;c[j>>2]=J;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];J=((c[c[l>>2]>>2]|0)-(c[J>>2]|0)|0)/2|0;c[m>>2]=I;c[n>>2]=K;c[o>>2]=J;J=c[n>>2]|0;K=c[o>>2]|0;c[p>>2]=c[m>>2];c[q>>2]=J;c[r>>2]=K;Sw(c[q>>2]|0);i=d;return}function lh(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;pf(c[d>>2]|0);i=b;return}function mh(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;nh(c[d>>2]|0);i=b;return}function nh(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;oh(c[d>>2]|0);i=b;return}function oh(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+32|0;d=b+8|0;e=b+16|0;f=b+20|0;g=b+24|0;h=b+4|0;j=b;k=b+12|0;c[k>>2]=a;a=c[k>>2]|0;c[j>>2]=a;c[h>>2]=c[j>>2];c[g>>2]=(c[h>>2]|0)+4;c[f>>2]=c[g>>2];c[e>>2]=c[f>>2];c[d>>2]=c[e>>2];ph(a,c[c[d>>2]>>2]|0);i=b;return}function ph(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;p=i;i=i+112|0;j=p+12|0;h=p+28|0;g=p+60|0;l=p+84|0;q=p+4|0;r=p+8|0;f=p;m=p+52|0;n=p+36|0;e=p+100|0;v=p+80|0;w=p+88|0;x=p+92|0;s=p+96|0;t=p+40|0;u=p+48|0;A=p+56|0;C=p+16|0;B=p+20|0;z=p+68|0;D=p+24|0;o=p+76|0;y=p+32|0;k=p+72|0;c[D>>2]=b;c[o>>2]=d;d=c[D>>2]|0;b=c[o>>2]|0;c[C>>2]=z;c[B>>2]=-1;B=c[B>>2]|0;c[A>>2]=c[C>>2];c[p+64>>2]=B;c[c[A>>2]>>2]=0;c[y>>2]=c[z>>2];c[p+44>>2]=y;if((b|0)==0){i=p;return}ph(d,c[c[o>>2]>>2]|0);ph(d,c[(c[o>>2]|0)+4>>2]|0);c[g>>2]=d;c[h>>2]=(c[g>>2]|0)+4;c[j>>2]=c[h>>2];c[k>>2]=c[j>>2];C=c[k>>2]|0;c[l>>2]=(c[o>>2]|0)+13;D=c[l>>2]|0;c[m>>2]=C;c[n>>2]=D;D=c[m>>2]|0;C=c[n>>2]|0;a[f+0>>0]=a[e+0>>0]|0;c[q>>2]=D;c[r>>2]=C;C=c[o>>2]|0;c[s>>2]=c[k>>2];c[t>>2]=C;c[u>>2]=1;C=c[t>>2]|0;D=c[u>>2]|0;c[v>>2]=c[s>>2];c[w>>2]=C;c[x>>2]=D;Sw(c[w>>2]|0);i=p;return}function qh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e+12|0;h=e+8|0;j=e+4|0;g=e;c[f>>2]=a;c[h>>2]=b;c[j>>2]=d;b=c[h>>2]|0;d=c[j>>2]|0;if((c[f>>2]|0)==0){rh(1,0,0,b,d);i=e;return}rh(1,1,0,b,d);c[g>>2]=Oc(c[f>>2]|0)|0;a=c[g>>2]|0;rh(3,a,((a|0)<0)<<31>>31,c[h>>2]|0,c[j>>2]|0);if((c[g>>2]|0)<=0){i=e;return}a=(c[f>>2]|0)-(1<<c[g>>2])|0;rh(c[g>>2]|0,a,((a|0)<0)<<31>>31,c[h>>2]|0,c[j>>2]|0);i=e;return}function rh(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0;h=i;i=i+32|0;j=h+28|0;n=h+8|0;k=h+24|0;o=h+20|0;l=h+16|0;m=h;c[j>>2]=a;a=n;c[a>>2]=b;c[a+4>>2]=e;c[k>>2]=f;c[o>>2]=g;c[l>>2]=(c[o>>2]|0)+(c[c[k>>2]>>2]>>3);e=m;c[e>>2]=d[c[l>>2]>>0];c[e+4>>2]=0;e=n;e=Ay(c[e>>2]|0,c[e+4>>2]|0,c[c[k>>2]>>2]&7|0)|0;f=m;b=c[f+4>>2]|H;a=m;c[a>>2]=c[f>>2]|e;c[a+4>>2]=b;a=m;Vk(c[l>>2]|0,c[a>>2]|0,c[a+4>>2]|0);a=c[k>>2]|0;c[a>>2]=(c[a>>2]|0)+(c[j>>2]|0);i=h;return}function sh(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;g=i;i=i+16|0;f=g+12|0;j=g+8|0;h=g+4|0;k=g;c[j>>2]=a;c[h>>2]=b;c[k>>2]=e;if(((d[c[h>>2]>>0]|0)&128|0)==0?(c[c[j>>2]>>2]=d[c[h>>2]>>0],(c[c[j>>2]>>2]|0)>0):0){c[f>>2]=1;a=c[f>>2]|0;i=g;return a|0}if((((c[k>>2]|0)>1?((d[c[h>>2]>>0]|0)&224|0)==192:0)?((d[(c[h>>2]|0)+1>>0]|0)&192|0)==128:0)?(c[c[j>>2]>>2]=((d[c[h>>2]>>0]|0)&31)<<6|(d[(c[h>>2]|0)+1>>0]|0)&63,(c[c[j>>2]>>2]|0)>127):0){c[f>>2]=2;a=c[f>>2]|0;i=g;return a|0}if(((((c[k>>2]|0)>2?((d[c[h>>2]>>0]|0)&240|0)==224:0)?((d[(c[h>>2]|0)+1>>0]|0)&192|0)==128:0)?((d[(c[h>>2]|0)+2>>0]|0)&192|0)==128:0)?(c[c[j>>2]>>2]=((d[c[h>>2]>>0]|0)&15)<<12|((d[(c[h>>2]|0)+1>>0]|0)&63)<<6|(d[(c[h>>2]|0)+2>>0]|0)&63,(c[c[j>>2]>>2]|0)>2047):0){c[f>>2]=3;a=c[f>>2]|0;i=g;return a|0}if(((((((c[k>>2]|0)>3?((d[c[h>>2]>>0]|0)&248|0)==240:0)?((d[(c[h>>2]|0)+1>>0]|0)&192|0)==128:0)?((d[(c[h>>2]|0)+2>>0]|0)&192|0)==128:0)?((d[(c[h>>2]|0)+3>>0]|0)&192|0)==128:0)?(c[c[j>>2]>>2]=((d[c[h>>2]>>0]|0)&7)<<18|((d[(c[h>>2]|0)+1>>0]|0)&63)<<12|((d[(c[h>>2]|0)+2>>0]|0)&63)<<6|(d[(c[h>>2]|0)+3>>0]|0)&63,(c[c[j>>2]>>2]|0)>65535):0)?(c[c[j>>2]>>2]|0)<=1114111:0){c[f>>2]=4;a=c[f>>2]|0;i=g;return a|0}c[c[j>>2]>>2]=1114112|(d[c[h>>2]>>0]|0);c[f>>2]=1;a=c[f>>2]|0;i=g;return a|0}function th(a,b,d){a=a|0;b=b|0;d=+d;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0;k=i;i=i+32|0;l=k+16|0;j=k+24|0;g=k;f=k+28|0;m=k+12|0;e=k+8|0;n=k+20|0;c[l>>2]=a;c[j>>2]=b;h[g>>3]=d;c[f>>2]=0;c[m>>2]=0;while(1){if(!((c[m>>2]|0)>>>0<(c[j>>2]|0)>>>0))break;c[n>>2]=sh(e,(c[l>>2]|0)+(c[m>>2]|0)|0,(c[j>>2]|0)-(c[m>>2]|0)|0)|0;c[m>>2]=(c[m>>2]|0)+(c[n>>2]|0);if((c[e>>2]|0)>=1114112)continue;c[f>>2]=(c[f>>2]|0)+(c[n>>2]|0)}i=k;return+((c[f>>2]|0)>>>0)>+h[g>>3]*+((c[j>>2]|0)>>>0)|0}function uh(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0;o=i;i=i+32|0;h=o+12|0;m=o+17|0;j=o+16|0;k=o+8|0;l=o+4|0;n=o;c[h>>2]=b;a[m>>0]=d&1;a[j>>0]=e&1;c[k>>2]=f;c[l>>2]=g;rh(1,a[m>>0]&1,0,c[k>>2]|0,c[l>>2]|0);do if(a[m>>0]&1){f=c[k>>2]|0;g=c[l>>2]|0;if((c[h>>2]|0)!=0){rh(1,0,0,f,g);break}rh(1,1,0,f,g);i=o;return}while(0);c[h>>2]=(c[h>>2]|0)+ -1;b=(Oc(c[h>>2]|0)|0)+1|0;c[n>>2]=b;c[n>>2]=(c[n>>2]|0)<16?16:b;b=(c[n>>2]|0)-13>>2;rh(2,b,((b|0)<0)<<31>>31,c[k>>2]|0,c[l>>2]|0);while(1){if((c[n>>2]|0)<=0)break;rh(4,c[h>>2]&15,0,c[k>>2]|0,c[l>>2]|0);c[h>>2]=(c[h>>2]|0)>>>4;c[n>>2]=(c[n>>2]|0)-4}if(a[m>>0]&1){i=o;return}rh(1,a[j>>0]&1,0,c[k>>2]|0,c[l>>2]|0);i=o;return}function vh(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;n=i;i=i+48|0;m=n;o=n+16|0;p=n+8|0;j=n+20|0;r=n+28|0;s=n+32|0;q=n+12|0;h=n+24|0;k=n+36|0;l=n+42|0;g=n+4|0;c[m>>2]=b;c[o>>2]=e;c[p>>2]=f;c[j>>2]=18;while(1){if((c[j>>2]|0)<=0)break;if((d[(c[m>>2]|0)+(d[1224+((c[j>>2]|0)-1)>>0]|0)>>0]|0|0)!=0)break;c[j>>2]=(c[j>>2]|0)+ -1}c[r>>2]=0;c[s>>2]=0;while(1){if((c[s>>2]|0)>=(c[j>>2]|0))break;if((d[(c[m>>2]|0)+(d[1224+(c[s>>2]|0)>>0]|0)>>0]|0|0)!=0)c[r>>2]=(c[r>>2]|0)+1;c[s>>2]=(c[s>>2]|0)+1}if((c[r>>2]|0)==1)c[j>>2]=18;c[q>>2]=0;if((d[(c[m>>2]|0)+(d[1224]|0)>>0]|0|0)==0?(d[(c[m>>2]|0)+(d[1225]|0)>>0]|0|0)==0:0){c[q>>2]=2;c[q>>2]=(d[(c[m>>2]|0)+(d[1226]|0)>>0]|0|0)==0?3:2}b=c[q>>2]|0;rh(2,b,((b|0)<0)<<31>>31,c[o>>2]|0,c[p>>2]|0);c[h>>2]=c[q>>2];while(1){if((c[h>>2]|0)>=(c[j>>2]|0))break;a[k+0>>0]=a[1248]|0;a[k+1>>0]=a[1249]|0;a[k+2>>0]=a[1250]|0;a[k+3>>0]=a[1251]|0;a[k+4>>0]=a[1252]|0;a[k+5>>0]=a[1253]|0;a[l+0>>0]=a[1256]|0;a[l+1>>0]=a[1257]|0;a[l+2>>0]=a[1258]|0;a[l+3>>0]=a[1259]|0;a[l+4>>0]=a[1260]|0;a[l+5>>0]=a[1261]|0;c[g>>2]=d[(c[m>>2]|0)+(d[1224+(c[h>>2]|0)>>0]|0)>>0];rh(d[k+(c[g>>2]|0)>>0]|0,d[l+(c[g>>2]|0)>>0]|0,0,c[o>>2]|0,c[p>>2]|0);c[h>>2]=(c[h>>2]|0)+1}i=n;return}function wh(a,b,f,g,h,j){a=a|0;b=b|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;r=i;i=i+48|0;p=r+28|0;k=r+16|0;t=r+4|0;l=r+8|0;n=r+32|0;o=r;q=r+12|0;m=r+24|0;s=r+20|0;c[p>>2]=a;c[k>>2]=b;c[t>>2]=f;c[l>>2]=g;c[n>>2]=h;c[o>>2]=j;c[q>>2]=0;while(1){if((c[q>>2]|0)>=(c[t>>2]|0))break;c[m>>2]=d[(c[p>>2]|0)+(c[q>>2]|0)>>0];c[s>>2]=d[(c[k>>2]|0)+(c[q>>2]|0)>>0];if((c[(c[l>>2]|0)+56>>2]|0)>1)rh(d[(c[l>>2]|0)+(c[m>>2]|0)>>0]|0,e[(c[l>>2]|0)+18+(c[m>>2]<<1)>>1]|0,0,c[n>>2]|0,c[o>>2]|0);j=c[m>>2]|0;if((j|0)==16){a=c[s>>2]|0;rh(2,a,((a|0)<0)<<31>>31,c[n>>2]|0,c[o>>2]|0)}else if((j|0)==17){a=c[s>>2]|0;rh(3,a,((a|0)<0)<<31>>31,c[n>>2]|0,c[o>>2]|0)}c[q>>2]=(c[q>>2]|0)+1}i=r;return}function xh(a,b,f,g){a=a|0;b=b|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;n=i;i=i+48|0;q=n+24|0;r=n+32|0;l=n+28|0;m=n+20|0;p=n+40|0;o=n+16|0;h=n+8|0;k=n+36|0;j=n;c[q>>2]=a;c[r>>2]=b;c[l>>2]=f;c[m>>2]=g;c[p>>2]=e[(c[q>>2]|0)+22>>1];rh(d[(c[r>>2]|0)+(c[p>>2]|0)>>0]|0,e[(c[r>>2]|0)+704+(c[p>>2]<<1)>>1]|0,0,c[l>>2]|0,c[m>>2]|0);if((c[p>>2]|0)>=128)c[p>>2]=(c[p>>2]|0)-128;c[o>>2]=Hl(c[p>>2]|0)|0;r=c[c[q>>2]>>2]|0;a=h;c[a>>2]=r-(Il(c[p>>2]|0)|0);c[a+4>>2]=0;c[k>>2]=Jl(c[p>>2]|0)|0;a=c[(c[q>>2]|0)+8>>2]|0;r=j;c[r>>2]=a-(Kl(c[p>>2]|0)|0);c[r+4>>2]=0;if((c[o>>2]|0)>0){r=h;rh(c[o>>2]|0,c[r>>2]|0,c[r+4>>2]|0,c[l>>2]|0,c[m>>2]|0)}if((c[k>>2]|0)<=0){i=n;return}r=j;rh(c[k>>2]|0,c[r>>2]|0,c[r+4>>2]|0,c[l>>2]|0,c[m>>2]|0);i=n;return}function yh(a,b,f,g){a=a|0;b=b|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=i;i=i+32|0;p=h+24|0;o=h+16|0;l=h+20|0;m=h+28|0;n=h+12|0;k=h+8|0;j=h;c[p>>2]=a;c[o>>2]=b;c[l>>2]=f;c[m>>2]=g;c[n>>2]=e[(c[p>>2]|0)+20>>1];c[k>>2]=c[(c[p>>2]|0)+24>>2];a=j;c[a>>2]=c[(c[p>>2]|0)+28>>2];c[a+4>>2]=0;rh(d[(c[o>>2]|0)+(c[n>>2]|0)>>0]|0,e[(c[o>>2]|0)+520+(c[n>>2]<<1)>>1]|0,0,c[l>>2]|0,c[m>>2]|0);if((c[k>>2]|0)<=0){i=h;return}p=j;rh(c[k>>2]|0,c[p>>2]|0,c[p+4>>2]|0,c[l>>2]|0,c[m>>2]|0);i=h;return}function zh(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0;L=i;i=i+256|0;Q=L+76|0;R=L+68|0;V=L+4|0;W=L+220|0;w=L+228|0;x=L+64|0;N=L+12|0;O=L+124|0;P=L+52|0;j=L+20|0;M=L+24|0;K=L;G=L+32|0;I=L+36|0;J=L+244|0;Z=L+120|0;Y=L+80|0;X=L+144|0;aa=L+216|0;$=L+224|0;_=L+232|0;C=L+236|0;B=L+240|0;A=L+28|0;z=L+84|0;D=L+88|0;E=L+92|0;T=L+96|0;U=L+100|0;S=L+104|0;v=L+108|0;F=L+116|0;H=L+112|0;o=L+16|0;p=L+136|0;u=L+8|0;s=L+56|0;m=L+140|0;r=L+60|0;n=L+152|0;l=L+128|0;q=L+132|0;t=L+72|0;y=L+40|0;c[v>>2]=b;c[F>>2]=e;c[H>>2]=f;c[o>>2]=g;c[p>>2]=h;c[u>>2]=0;while(1){b=c[u>>2]|0;c[S>>2]=c[v>>2];g=c[S>>2]|0;if(!(b>>>0<(((c[g+4>>2]|0)-(c[g>>2]|0)|0)/32|0)>>>0)){k=19;break}h=c[u>>2]|0;c[D>>2]=c[v>>2];c[E>>2]=h;c[F>>2]=(c[F>>2]|0)+(c[(c[c[D>>2]>>2]|0)+(c[E>>2]<<5)>>2]|0);c[G>>2]=F;c[I>>2]=H;h=c[G>>2]|0;g=c[I>>2]|0;a[K+0>>0]=a[J+0>>0]|0;c[j>>2]=h;c[M>>2]=g;g=c[M>>2]|0;h=c[j>>2]|0;c[N>>2]=K;c[O>>2]=g;c[P>>2]=h;c[s>>2]=c[((c[c[O>>2]>>2]|0)>>>0<(c[c[P>>2]>>2]|0)>>>0?c[M>>2]|0:c[j>>2]|0)>>2];h=c[u>>2]|0;c[Q>>2]=c[v>>2];c[R>>2]=h;c[m>>2]=c[(c[c[Q>>2]>>2]|0)+(c[R>>2]<<5)+12>>2];c[r>>2]=(c[m>>2]|0)+16;h=c[m>>2]|0;if((c[m>>2]|0)>>>0<=(c[s>>2]|0)>>>0){if((h|0)==0){k=19;break}e=n+0|0;f=1392|0;h=e+64|0;do{c[e>>2]=c[f>>2];e=e+4|0;f=f+4|0}while((e|0)<(h|0));c[l>>2]=0;while(1){if((c[l>>2]|0)>=16)break;if((c[m>>2]|0)>=(c[n+(c[l>>2]<<2)>>2]|0)?(c[q>>2]=(c[(c[o>>2]|0)+(((c[c[p>>2]>>2]|0)+(c[1264+(c[l>>2]<<2)>>2]|0)&3)<<2)>>2]|0)+(c[1328+(c[l>>2]<<2)>>2]|0),(c[m>>2]|0)==(c[q>>2]|0)):0){k=9;break}c[l>>2]=(c[l>>2]|0)+1}if((k|0)==9){k=0;c[r>>2]=(c[l>>2]|0)+1}if((c[r>>2]|0)>1){c[(c[o>>2]|0)+((c[c[p>>2]>>2]&3)<<2)>>2]=c[m>>2];g=c[p>>2]|0;c[g>>2]=(c[g>>2]|0)+1}g=c[u>>2]|0;c[V>>2]=c[v>>2];c[W>>2]=g;c[F>>2]=(c[F>>2]|0)+(c[(c[c[V>>2]>>2]|0)+(c[W>>2]<<5)+4>>2]|0)}else{c[t>>2]=h-(c[s>>2]|0)-1;h=c[u>>2]|0;c[w>>2]=c[v>>2];c[x>>2]=h;Ah(y,c[(c[c[w>>2]>>2]|0)+(c[x>>2]<<5)+8>>2]|0,c[t>>2]|0);c[z>>2]=y;h=c[z>>2]|0;c[A>>2]=h;c[B>>2]=c[A>>2];c[C>>2]=c[B>>2];if(((d[c[C>>2]>>0]|0)&1|0)!=0){c[X>>2]=h;c[Y>>2]=c[X>>2];c[Z>>2]=c[Y>>2];h=c[(c[Z>>2]|0)+4>>2]|0}else{c[_>>2]=h;c[$>>2]=c[_>>2];c[aa>>2]=c[$>>2];h=(d[c[aa>>2]>>0]|0)>>1}c[F>>2]=(c[F>>2]|0)+h;Tm(y)}g=c[r>>2]|0;b=c[u>>2]|0;c[T>>2]=c[v>>2];c[U>>2]=b;c[(c[c[T>>2]>>2]|0)+(c[U>>2]<<5)+16>>2]=g;c[u>>2]=(c[u>>2]|0)+1}if((k|0)==19){i=L;return}}function Ah(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+32|0;f=e+8|0;m=e+16|0;l=e+20|0;j=e+24|0;h=e+4|0;k=e;g=e+12|0;c[f>>2]=b;c[m>>2]=d;c[l>>2]=1<<c[1472+(c[f>>2]<<2)>>2];c[j>>2]=c[3112+(c[f>>2]<<2)>>2];c[h>>2]=(c[m>>2]|0)/(c[l>>2]|0)|0;c[k>>2]=(c[m>>2]|0)%(c[l>>2]|0)|0;b=da(c[f>>2]|0,c[k>>2]|0)|0;c[j>>2]=(c[j>>2]|0)+b;c[g>>2]=3216+(c[j>>2]|0);Sk(a,126e3+((c[h>>2]|0)*12|0)|0,c[g>>2]|0,c[f>>2]|0);i=e;return}function Bh(a,d,f){a=a|0;d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;m=i;i=i+32|0;n=m+4|0;o=m+16|0;p=m+8|0;g=m+20|0;j=m+28|0;k=m;l=m+12|0;h=m+24|0;c[g>>2]=a;c[j>>2]=d;c[k>>2]=f;c[l>>2]=0;while(1){d=c[l>>2]|0;c[p>>2]=c[g>>2];a=c[p>>2]|0;if(!(d>>>0<(((c[a+4>>2]|0)-(c[a>>2]|0)|0)/32|0)>>>0))break;a=c[l>>2]|0;c[n>>2]=c[g>>2];c[o>>2]=a;c[h>>2]=(c[c[n>>2]>>2]|0)+(c[o>>2]<<5);a=(Gl(c[c[h>>2]>>2]|0,c[(c[h>>2]|0)+8>>2]|0)|0)&65535;b[(c[h>>2]|0)+22>>1]=a;if((c[(c[h>>2]|0)+8>>2]|0)>>>0>0)Ll(c[(c[h>>2]|0)+16>>2]|0,c[j>>2]|0,c[k>>2]|0,(c[h>>2]|0)+20|0,(c[h>>2]|0)+24|0,(c[h>>2]|0)+28|0);if((e[(c[h>>2]|0)+22>>1]|0|0)<128?(e[(c[h>>2]|0)+20>>1]|0|0)==0:0)b[(c[h>>2]|0)+20>>1]=-1;else{a=(c[h>>2]|0)+22|0;b[a>>1]=(e[a>>1]|0)+128}c[l>>2]=(c[l>>2]|0)+1}i=m;return}function Ch(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+32|0;j=d+8|0;f=d+16|0;l=d+20|0;e=d+24|0;h=d+4|0;k=d;g=d+12|0;c[h>>2]=a;c[k>>2]=b;c[g>>2]=0;while(1){b=c[g>>2]|0;c[l>>2]=c[h>>2];a=c[l>>2]|0;if(!(b>>>0<(((c[a+4>>2]|0)-(c[a>>2]|0)|0)/4|0)>>>0)){f=6;break}b=c[g>>2]|0;c[j>>2]=c[h>>2];c[f>>2]=b;b=c[g>>2]|0;if((c[(c[c[j>>2]>>2]|0)+(c[f>>2]<<2)>>2]|0)==(c[k>>2]|0)){f=4;break}c[g>>2]=b+1}if((f|0)==4){c[e>>2]=b;a=c[e>>2]|0;i=d;return a|0}else if((f|0)==6){c[e>>2]=-1;a=c[e>>2]|0;i=d;return a|0}return 0}function Dh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;h=i;i=i+48|0;k=h;l=h+8|0;m=h+36|0;n=h+16|0;f=h+32|0;g=h+40|0;q=h+44|0;p=h+24|0;e=h+20|0;o=h+12|0;j=h+4|0;d=h+28|0;c[e>>2]=a;c[o>>2]=b;a=c[o>>2]|0;c[q>>2]=c[e>>2];c[p>>2]=a;c[j>>2]=c[(c[c[q>>2]>>2]|0)+(c[p>>2]<<2)>>2];c[d>>2]=c[o>>2];while(1){if((c[d>>2]|0)<=0)break;q=(c[d>>2]|0)-1|0;c[k>>2]=c[e>>2];c[l>>2]=q;q=c[(c[c[k>>2]>>2]|0)+(c[l>>2]<<2)>>2]|0;p=c[d>>2]|0;c[m>>2]=c[e>>2];c[n>>2]=p;c[(c[c[m>>2]>>2]|0)+(c[n>>2]<<2)>>2]=q;c[d>>2]=(c[d>>2]|0)+ -1}q=c[j>>2]|0;c[f>>2]=c[e>>2];c[g>>2]=0;c[(c[c[f>>2]>>2]|0)+(c[g>>2]<<2)>>2]=q;i=h;return}function Eh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0;J=i;i=i+288|0;K=J+160|0;L=J+208|0;m=J+224|0;N=J+44|0;O=J+228|0;n=J+40|0;q=J+72|0;r=J+220|0;p=J+140|0;u=J+68|0;C=J+64|0;e=J+48|0;I=J+52|0;G=J+56|0;H=J+60|0;D=J+216|0;F=J+152|0;v=J+136|0;x=J+132|0;z=J+76|0;A=J+80|0;B=J+84|0;f=J+88|0;ka=J+92|0;ia=J+96|0;ja=J+100|0;ga=J+240|0;ha=J+248|0;w=J+256|0;y=J+16|0;E=J;s=J+32|0;da=J+212|0;ea=J+148|0;fa=J+276|0;ca=J+24|0;ba=J+8|0;$=J+268|0;aa=J+272|0;Z=J+164|0;_=J+168|0;X=J+176|0;W=J+180|0;U=J+184|0;V=J+188|0;S=J+192|0;T=J+196|0;Q=J+204|0;P=J+260|0;la=J+264|0;l=J+232|0;j=J+104|0;R=J+236|0;Y=J+36|0;t=J+116|0;o=J+244|0;g=J+120|0;k=J+252|0;M=J+156|0;h=J+144|0;c[l>>2]=d;c[la>>2]=c[l>>2];la=c[la>>2]|0;d=c[l>>2]|0;if((c[la>>2]|0)==(c[la+4>>2]|0)){Fh(b,d);i=J;return}c[P>>2]=d;la=c[P>>2]|0;d=c[la>>2]|0;c[J+200>>2]=la;c[Q>>2]=d;d=c[Q>>2]|0;c[S>>2]=R;c[T>>2]=d;d=c[T>>2]|0;c[U>>2]=c[S>>2];c[V>>2]=d;c[c[U>>2]>>2]=c[V>>2];c[W>>2]=c[l>>2];d=c[W>>2]|0;la=c[d+4>>2]|0;c[J+172>>2]=d;c[X>>2]=la;la=c[X>>2]|0;c[Z>>2]=Y;c[_>>2]=la;la=c[_>>2]|0;c[$>>2]=c[Z>>2];c[aa>>2]=la;c[c[$>>2]>>2]=c[aa>>2];a[ba+0>>0]=a[R+0>>0]|0;a[ba+1>>0]=a[R+1>>0]|0;a[ba+2>>0]=a[R+2>>0]|0;a[ba+3>>0]=a[R+3>>0]|0;a[ca+0>>0]=a[Y+0>>0]|0;a[ca+1>>0]=a[Y+1>>0]|0;a[ca+2>>0]=a[Y+2>>0]|0;a[ca+3>>0]=a[Y+3>>0]|0;c[da+0>>2]=c[ba+0>>2];c[ea+0>>2]=c[ca+0>>2];a[s+0>>0]=a[da+0>>0]|0;a[s+1>>0]=a[da+1>>0]|0;a[s+2>>0]=a[da+2>>0]|0;a[s+3>>0]=a[da+3>>0]|0;a[E+0>>0]=a[ea+0>>0]|0;a[E+1>>0]=a[ea+1>>0]|0;a[E+2>>0]=a[ea+2>>0]|0;a[E+3>>0]=a[ea+3>>0]|0;a[y+0>>0]=a[fa+0>>0]|0;c[ga>>2]=s;c[ha>>2]=E;la=c[ha>>2]|0;c[ia>>2]=c[ga>>2];c[ja>>2]=la;c[ka>>2]=c[ia>>2];la=c[c[ka>>2]>>2]|0;c[f>>2]=c[ja>>2];a:do if((la|0)==(c[c[f>>2]>>2]|0)^1){c[w+0>>2]=c[s+0>>2];while(1){c[C>>2]=w;la=c[C>>2]|0;c[la>>2]=(c[la>>2]|0)+4;c[D>>2]=la;c[F>>2]=E;la=c[F>>2]|0;c[G>>2]=c[D>>2];c[H>>2]=la;c[I>>2]=c[G>>2];la=c[c[I>>2]>>2]|0;c[e>>2]=c[H>>2];if(!((la|0)==(c[c[e>>2]>>2]|0)^1))break a;c[v>>2]=s;d=c[c[v>>2]>>2]|0;c[x>>2]=w;la=c[c[x>>2]>>2]|0;c[z>>2]=y;c[A>>2]=d;c[B>>2]=la;if((c[c[A>>2]>>2]|0)>=(c[c[B>>2]>>2]|0))continue;c[s+0>>2]=c[w+0>>2]}}while(0);c[t+0>>2]=c[s+0>>2];c[u>>2]=t;Bd(j,(c[c[c[u>>2]>>2]>>2]|0)+1|0);c[o>>2]=0;while(1){d=c[o>>2]|0;c[p>>2]=j;la=c[p>>2]|0;if(!(d>>>0<(((c[la+4>>2]|0)-(c[la>>2]|0)|0)/4|0)>>>0))break;la=c[o>>2]|0;d=c[o>>2]|0;c[q>>2]=j;c[r>>2]=d;c[(c[c[q>>2]>>2]|0)+(c[r>>2]<<2)>>2]=la;c[o>>2]=(c[o>>2]|0)+1}c[n>>2]=c[l>>2];la=c[n>>2]|0;Bd(g,((c[la+4>>2]|0)-(c[la>>2]|0)|0)/4|0);c[k>>2]=0;while(1){d=c[k>>2]|0;c[m>>2]=c[l>>2];la=c[m>>2]|0;if(!(d>>>0<(((c[la+4>>2]|0)-(c[la>>2]|0)|0)/4|0)>>>0))break;la=c[k>>2]|0;c[K>>2]=c[l>>2];c[L>>2]=la;c[M>>2]=Ch(j,c[(c[c[K>>2]>>2]|0)+(c[L>>2]<<2)>>2]|0)|0;la=c[M>>2]|0;d=c[k>>2]|0;c[N>>2]=g;c[O>>2]=d;c[(c[c[N>>2]>>2]|0)+(c[O>>2]<<2)>>2]=la;Dh(j,c[M>>2]|0);c[k>>2]=(c[k>>2]|0)+1}Fh(b,g);c[h>>2]=1;Gd(g);Gd(j);i=J;return}function Fh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;Wj(c[f>>2]|0,c[e>>2]|0);i=d;return}function Gh(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0;wa=i;i=i+496|0;R=wa+224|0;S=wa+216|0;H=wa+212|0;I=wa+24|0;T=wa+420|0;t=wa+448|0;v=wa+456|0;w=wa+464|0;p=wa+208|0;s=wa+28|0;r=wa+32|0;q=wa+36|0;O=wa+40|0;N=wa+44|0;M=wa+48|0;L=wa+412|0;u=wa+112|0;$a=wa+56|0;ab=wa+60|0;bb=wa+64|0;Za=wa+68|0;_a=wa+72|0;Ya=wa;Va=wa+80|0;Wa=wa+84|0;Xa=wa+480|0;A=wa+92|0;B=wa+96|0;C=wa+100|0;D=wa+104|0;z=wa+108|0;y=wa+408|0;x=wa+236|0;o=wa+116|0;n=wa+120|0;m=wa+124|0;k=wa+128|0;l=wa+132|0;U=wa+136|0;V=wa+140|0;W=wa+144|0;qb=wa+148|0;rb=wa+152|0;sb=wa+156|0;ob=wa+160|0;pb=wa+76|0;nb=wa+8|0;kb=wa+172|0;lb=wa+176|0;mb=wa+481|0;tb=wa+184|0;ub=wa+188|0;Da=wa+192|0;Ea=wa+196|0;Fa=wa+436|0;Ga=wa+444|0;Ca=wa+452|0;Ba=wa+460|0;Aa=wa+468|0;aa=wa+472|0;$=wa+476|0;_=wa+228|0;Y=wa+232|0;Z=wa+404|0;eb=wa+348|0;Qa=wa+240|0;Ra=wa+244|0;Sa=wa+248|0;Ta=wa+252|0;Pa=wa+256|0;Oa=wa+260|0;Na=wa+264|0;Ma=wa+268|0;La=wa+272|0;Ka=wa+276|0;Ia=wa+280|0;Ja=wa+284|0;gb=wa+288|0;hb=wa+292|0;ja=wa+296|0;ka=wa+300|0;la=wa+304|0;ma=wa+308|0;ia=wa+312|0;ha=wa+316|0;ga=wa+320|0;fa=wa+324|0;g=wa+328|0;da=wa+332|0;ba=wa+336|0;ca=wa+340|0;ib=wa+164|0;h=wa+344|0;xa=wa+168|0;ya=wa+352|0;za=wa+356|0;va=wa+360|0;ua=wa+364|0;ta=wa+368|0;sa=wa+372|0;ra=wa+376|0;qa=wa+380|0;oa=wa+384|0;pa=wa+388|0;jb=wa+392|0;G=wa+396|0;J=wa+400|0;E=wa+52|0;ea=wa+416|0;cb=wa+428|0;db=wa+200|0;fb=wa+432|0;Ua=wa+20|0;F=wa+424|0;K=wa+204|0;j=wa+440|0;P=wa+16|0;Q=wa+12|0;X=wa+220|0;Ha=wa+180|0;na=wa+88|0;c[G>>2]=b;c[J>>2]=d;c[E>>2]=e;c[ea>>2]=f;c[cb>>2]=0;c[db>>2]=0;while(1){d=c[db>>2]|0;c[jb>>2]=c[G>>2];b=c[jb>>2]|0;if(!(d>>>0<(((c[b+4>>2]|0)-(c[b>>2]|0)|0)/4|0)>>>0))break;while(1){d=c[db>>2]|0;c[ib>>2]=c[G>>2];b=c[ib>>2]|0;if(!(d>>>0<(((c[b+4>>2]|0)-(c[b>>2]|0)|0)/4|0)>>>0))break;b=c[db>>2]|0;c[gb>>2]=c[G>>2];c[hb>>2]=b;if((c[(c[c[gb>>2]>>2]|0)+(c[hb>>2]<<2)>>2]|0)==0)break;c[db>>2]=(c[db>>2]|0)+1}c[fb>>2]=0;while(1){d=c[db>>2]|0;c[eb>>2]=c[G>>2];b=c[eb>>2]|0;if(!(d>>>0<(((c[b+4>>2]|0)-(c[b>>2]|0)|0)/4|0)>>>0))break;b=c[db>>2]|0;c[tb>>2]=c[G>>2];c[ub>>2]=b;if((c[(c[c[tb>>2]>>2]|0)+(c[ub>>2]<<2)>>2]|0)!=0)break;c[fb>>2]=(c[fb>>2]|0)+1;c[db>>2]=(c[db>>2]|0)+1}c[kb>>2]=fb;c[lb>>2]=cb;b=c[kb>>2]|0;d=c[lb>>2]|0;a[nb+0>>0]=a[mb+0>>0]|0;c[ob>>2]=b;c[pb>>2]=d;d=c[ob>>2]|0;b=c[pb>>2]|0;c[qb>>2]=nb;c[rb>>2]=d;c[sb>>2]=b;c[cb>>2]=c[((c[c[rb>>2]>>2]|0)<(c[c[sb>>2]>>2]|0)?c[pb>>2]|0:c[ob>>2]|0)>>2]}if((c[cb>>2]|0)>0)f=Oc(c[cb>>2]|0)|0;else f=0;c[Ua>>2]=f;b=c[J>>2]|0;c[Va>>2]=Ua;c[Wa>>2]=b;b=c[Va>>2]|0;d=c[Wa>>2]|0;a[Ya+0>>0]=a[Xa+0>>0]|0;c[Za>>2]=b;c[_a>>2]=d;d=c[_a>>2]|0;b=c[Za>>2]|0;c[$a>>2]=Ya;c[ab>>2]=d;c[bb>>2]=b;c[c[J>>2]>>2]=c[((c[c[ab>>2]>>2]|0)<(c[c[bb>>2]>>2]|0)?c[_a>>2]|0:c[Za>>2]|0)>>2];c[F>>2]=0;a:while(1){d=c[F>>2]|0;c[T>>2]=c[G>>2];b=c[T>>2]|0;if(!(d>>>0<(((c[b+4>>2]|0)-(c[b>>2]|0)|0)/4|0)>>>0))break;b=c[F>>2]|0;c[R>>2]=c[G>>2];c[S>>2]=b;if((c[(c[c[R>>2]>>2]|0)+(c[S>>2]<<2)>>2]|0)!=0){Va=c[E>>2]|0;b=c[F>>2]|0;c[H>>2]=c[G>>2];c[I>>2]=b;c[K>>2]=(c[(c[c[H>>2]>>2]|0)+(c[I>>2]<<2)>>2]|0)+(c[c[J>>2]>>2]|0);c[L>>2]=Va;c[u>>2]=K;Va=c[L>>2]|0;b=c[Va+4>>2]|0;c[M>>2]=Va;c[N>>2]=(c[M>>2]|0)+8;c[O>>2]=c[N>>2];if((b|0)!=(c[c[O>>2]>>2]|0)){c[q>>2]=Va;c[r>>2]=(c[q>>2]|0)+8;c[s>>2]=c[r>>2];d=c[s>>2]|0;c[t>>2]=c[Va+4>>2];b=c[t>>2]|0;Ua=c[u>>2]|0;c[v>>2]=d;c[w>>2]=b;c[p>>2]=Ua;Ua=c[w>>2]|0;if((Ua|0)!=0)c[Ua>>2]=c[c[p>>2]>>2];b=Va+4|0;c[b>>2]=(c[b>>2]|0)+4}else Ng(Va,c[u>>2]|0);Ua=c[ea>>2]|0;c[j>>2]=0;c[k>>2]=Ua;c[l>>2]=j;Ua=c[k>>2]|0;b=c[Ua+4>>2]|0;c[m>>2]=Ua;c[n>>2]=(c[m>>2]|0)+8;c[o>>2]=c[n>>2];if((b|0)!=(c[c[o>>2]>>2]|0)){c[x>>2]=Ua;c[y>>2]=(c[x>>2]|0)+8;c[z>>2]=c[y>>2];d=c[z>>2]|0;c[A>>2]=c[Ua+4>>2];b=c[A>>2]|0;Va=c[l>>2]|0;c[B>>2]=d;c[C>>2]=b;c[D>>2]=Va;Va=c[C>>2]|0;if((Va|0)!=0)c[Va>>2]=c[c[D>>2]>>2];b=Ua+4|0;c[b>>2]=(c[b>>2]|0)+4}else Ng(Ua,c[l>>2]|0);c[F>>2]=(c[F>>2]|0)+1;continue}c[P>>2]=1;c[Q>>2]=(c[F>>2]|0)+1;while(1){d=c[Q>>2]|0;c[U>>2]=c[G>>2];b=c[U>>2]|0;if(d>>>0<(((c[b+4>>2]|0)-(c[b>>2]|0)|0)/4|0)>>>0){Va=c[Q>>2]|0;c[V>>2]=c[G>>2];c[W>>2]=Va;Va=(c[(c[c[V>>2]>>2]|0)+(c[W>>2]<<2)>>2]|0)==0}else Va=0;Ua=c[P>>2]|0;if(!Va)break;c[P>>2]=Ua+1;c[Q>>2]=(c[Q>>2]|0)+1}c[F>>2]=(c[F>>2]|0)+Ua;while(1){if((c[P>>2]|0)==0)continue a;if((c[P>>2]|0)<(2<<c[c[J>>2]>>2]|0))break;Ua=c[J>>2]|0;c[ba>>2]=c[E>>2];c[ca>>2]=Ua;Ua=c[ba>>2]|0;b=c[Ua+4>>2]|0;c[da>>2]=Ua;c[g>>2]=(c[da>>2]|0)+8;c[fa>>2]=c[g>>2];if((b|0)!=(c[c[fa>>2]>>2]|0)){c[ga>>2]=Ua;c[ha>>2]=(c[ga>>2]|0)+8;c[ia>>2]=c[ha>>2];d=c[ia>>2]|0;c[ja>>2]=c[Ua+4>>2];b=c[ja>>2]|0;Va=c[ca>>2]|0;c[ka>>2]=d;c[la>>2]=b;c[ma>>2]=Va;Va=c[la>>2]|0;if((Va|0)!=0)c[Va>>2]=c[c[ma>>2]>>2];b=Ua+4|0;c[b>>2]=(c[b>>2]|0)+4}else Ng(Ua,c[ca>>2]|0);Ua=c[ea>>2]|0;c[na>>2]=(1<<c[c[J>>2]>>2])-1;c[oa>>2]=Ua;c[pa>>2]=na;Ua=c[oa>>2]|0;b=c[Ua+4>>2]|0;c[qa>>2]=Ua;c[ra>>2]=(c[qa>>2]|0)+8;c[sa>>2]=c[ra>>2];if((b|0)!=(c[c[sa>>2]>>2]|0)){c[ta>>2]=Ua;c[ua>>2]=(c[ta>>2]|0)+8;c[va>>2]=c[ua>>2];d=c[va>>2]|0;c[h>>2]=c[Ua+4>>2];b=c[h>>2]|0;Va=c[pa>>2]|0;c[xa>>2]=d;c[ya>>2]=b;c[za>>2]=Va;Va=c[ya>>2]|0;if((Va|0)!=0)c[Va>>2]=c[c[za>>2]>>2];b=Ua+4|0;c[b>>2]=(c[b>>2]|0)+4}else Ng(Ua,c[pa>>2]|0);c[P>>2]=(c[P>>2]|0)-((2<<c[c[J>>2]>>2])-1)}c[X>>2]=Oc(c[P>>2]|0)|0;c[Y>>2]=c[E>>2];c[Z>>2]=X;Va=c[Y>>2]|0;b=c[Va+4>>2]|0;c[_>>2]=Va;c[$>>2]=(c[_>>2]|0)+8;c[aa>>2]=c[$>>2];if((b|0)!=(c[c[aa>>2]>>2]|0)){c[Aa>>2]=Va;c[Ba>>2]=(c[Aa>>2]|0)+8;c[Ca>>2]=c[Ba>>2];d=c[Ca>>2]|0;c[Da>>2]=c[Va+4>>2];b=c[Da>>2]|0;Ua=c[Z>>2]|0;c[Ea>>2]=d;c[Fa>>2]=b;c[Ga>>2]=Ua;Ua=c[Fa>>2]|0;if((Ua|0)!=0)c[Ua>>2]=c[c[Ga>>2]>>2];b=Va+4|0;c[b>>2]=(c[b>>2]|0)+4}else Ng(Va,c[Z>>2]|0);Va=c[ea>>2]|0;c[Ha>>2]=(c[P>>2]|0)-(1<<c[X>>2]);c[Ia>>2]=Va;c[Ja>>2]=Ha;Va=c[Ia>>2]|0;b=c[Va+4>>2]|0;c[Ka>>2]=Va;c[La>>2]=(c[Ka>>2]|0)+8;c[Ma>>2]=c[La>>2];if((b|0)==(c[c[Ma>>2]>>2]|0)){Ng(Va,c[Ja>>2]|0);continue}c[Na>>2]=Va;c[Oa>>2]=(c[Na>>2]|0)+8;c[Pa>>2]=c[Oa>>2];d=c[Pa>>2]|0;c[Qa>>2]=c[Va+4>>2];b=c[Qa>>2]|0;Ua=c[Ja>>2]|0;c[Ra>>2]=d;c[Sa>>2]=b;c[Ta>>2]=Ua;Ua=c[Sa>>2]|0;if((Ua|0)!=0)c[Ua>>2]=c[c[Ta>>2]>>2];b=Va+4|0;c[b>>2]=(c[b>>2]|0)+4}i=wa;return}function Hh(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0;d=i;i=i+1456|0;q=d+1440|0;r=d+1380|0;p=d+1116|0;fa=d+1232|0;ga=d+1276|0;ca=d+1144|0;ea=d+1248|0;ba=d+1432|0;ia=d+1376|0;ma=d+1120|0;na=d+1124|0;ka=d+1128|0;la=d+1132|0;ja=d+1136|0;pa=d+1140|0;ta=d+1372|0;ua=d+1204|0;ra=d+1148|0;sa=d+1152|0;qa=d+1156|0;wa=d+1160|0;Fa=d+1164|0;Ea=d+1168|0;Ca=d+1172|0;Da=d+1176|0;Ba=d+1180|0;za=d+1184|0;Aa=d+1188|0;xa=d+1192|0;ya=d+1196|0;aa=d+1200|0;$=d+1368|0;ha=d+1240|0;oa=d+1208|0;va=d+1212|0;_=d+1216|0;Z=d+1396|0;z=d+1412|0;A=d+1420|0;x=d+1428|0;y=d+1436|0;w=d+1444|0;C=d+1252|0;G=d+1256|0;H=d+1260|0;E=d+1264|0;F=d+1268|0;D=d+1272|0;J=d+1424|0;N=d+1280|0;O=d+1284|0;L=d+1288|0;M=d+1292|0;K=d+1296|0;Q=d+1300|0;Y=d+1304|0;X=d+1308|0;V=d+1312|0;W=d+1316|0;U=d+1320|0;T=d+1324|0;e=d+1328|0;R=d+1332|0;S=d+1364|0;v=d+1336|0;u=d+1340|0;B=d+1344|0;I=d+1348|0;P=d+1352|0;t=d+1356|0;s=d+1360|0;Ha=d+1112|0;k=d+1384|0;b=d+1108|0;l=d+1388|0;g=d+1220|0;f=d+1400|0;Ga=d+1236|0;h=d+1416|0;n=d;o=d+1392|0;j=d+1104|0;m=d+1244|0;c[Ha>>2]=a;c[k>>2]=2147483647;c[b>>2]=0;c[l>>2]=0;while(1){if((c[l>>2]|0)>16){e=18;break}c[s>>2]=g;c[t>>2]=c[s>>2];c[u>>2]=c[t>>2];a=c[u>>2]|0;c[v>>2]=a;c[x>>2]=w;c[y>>2]=-1;Ia=c[y>>2]|0;c[z>>2]=c[x>>2];c[A>>2]=Ia;c[c[z>>2]>>2]=0;c[B>>2]=c[w>>2];c[C>>2]=B;c[a>>2]=0;c[E>>2]=D;c[F>>2]=-1;Ia=c[F>>2]|0;c[G>>2]=c[E>>2];c[H>>2]=Ia;c[c[G>>2]>>2]=0;c[I>>2]=c[D>>2];c[J>>2]=I;c[a+4>>2]=0;c[L>>2]=K;c[M>>2]=-1;Ia=c[M>>2]|0;c[N>>2]=c[L>>2];c[O>>2]=Ia;c[c[N>>2]>>2]=0;c[P>>2]=c[K>>2];c[Q>>2]=P;c[R>>2]=a+8;c[S>>2]=0;a=c[S>>2]|0;c[T>>2]=c[R>>2];c[e>>2]=a;a=c[T>>2]|0;c[U>>2]=e;Ia=c[c[U>>2]>>2]|0;c[V>>2]=a;c[W>>2]=Ia;Ia=c[V>>2]|0;c[X>>2]=Ia;c[Y>>2]=W;c[Ia>>2]=c[c[Y>>2]>>2];c[Z>>2]=f;c[_>>2]=c[Z>>2];c[$>>2]=c[_>>2];Ia=c[$>>2]|0;c[aa>>2]=Ia;c[ca>>2]=ba;c[ea>>2]=-1;a=c[ea>>2]|0;c[fa>>2]=c[ca>>2];c[ga>>2]=a;c[c[fa>>2]>>2]=0;c[ha>>2]=c[ba>>2];c[ia>>2]=ha;c[Ia>>2]=0;c[ka>>2]=ja;c[la>>2]=-1;a=c[la>>2]|0;c[ma>>2]=c[ka>>2];c[na>>2]=a;c[c[ma>>2]>>2]=0;c[oa>>2]=c[ja>>2];c[pa>>2]=oa;c[Ia+4>>2]=0;c[ra>>2]=qa;c[sa>>2]=-1;a=c[sa>>2]|0;c[ta>>2]=c[ra>>2];c[ua>>2]=a;c[c[ta>>2]>>2]=0;c[va>>2]=c[qa>>2];c[wa>>2]=va;c[xa>>2]=Ia+8;c[ya>>2]=0;Ia=c[ya>>2]|0;c[za>>2]=c[xa>>2];c[Aa>>2]=Ia;Ia=c[za>>2]|0;c[Ba>>2]=Aa;a=c[c[Ba>>2]>>2]|0;c[Ca>>2]=Ia;c[Da>>2]=a;a=c[Ca>>2]|0;c[Ea>>2]=a;c[Fa>>2]=Da;c[a>>2]=c[c[Fa>>2]>>2];c[Ga>>2]=c[l>>2];Gh(c[Ha>>2]|0,Ga,g,f);if((c[Ga>>2]|0)<(c[l>>2]|0))c[h>>2]=2;else{Ih(n);c[o>>2]=0;while(1){a=c[o>>2]|0;c[p>>2]=g;Ia=c[p>>2]|0;if(!(a>>>0<(((c[Ia+4>>2]|0)-(c[Ia>>2]|0)|0)/4|0)>>>0))break;Ia=c[o>>2]|0;c[q>>2]=g;c[r>>2]=Ia;Jh(n,c[(c[c[q>>2]>>2]|0)+(c[r>>2]<<2)>>2]|0);c[o>>2]=(c[o>>2]|0)+1}c[j>>2]=~~+Kh(n);if((c[l>>2]|0)>0)c[j>>2]=(c[j>>2]|0)+4;c[m>>2]=1;while(1){if((c[m>>2]|0)>(c[l>>2]|0))break;Ia=da(c[n+(c[m>>2]<<2)>>2]|0,c[m>>2]|0)|0;c[j>>2]=(c[j>>2]|0)+Ia;c[m>>2]=(c[m>>2]|0)+1}if((c[j>>2]|0)<(c[k>>2]|0)){c[k>>2]=c[j>>2];c[b>>2]=c[l>>2]}c[h>>2]=0}Gd(f);Gd(g);if((c[h>>2]|0)==2){e=18;break}c[l>>2]=(c[l>>2]|0)+1}if((e|0)==18){i=d;return c[b>>2]|0}return 0}function Ih(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Uj(c[d>>2]|0);i=b;return}function Jh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;a=c[f>>2]|0;b=a+(c[e>>2]<<2)|0;c[b>>2]=(c[b>>2]|0)+1;a=a+1088|0;c[a>>2]=(c[a>>2]|0)+1;i=d;return}function Kh(a){a=a|0;var b=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0.0;b=i;i=i+304|0;e=b;f=b+16|0;l=b+12|0;m=b+24|0;g=b+32|0;j=b+20|0;k=b+8|0;c[f>>2]=a;if((c[(c[f>>2]|0)+1088>>2]|0)==0){h[e>>3]=12.0;n=+h[e>>3];i=b;return+n}c[l>>2]=0;c[m>>2]=0;while(1){if((c[m>>2]|0)>=272)break;if((c[l>>2]|0)>=5)break;if((c[(c[f>>2]|0)+(c[m>>2]<<2)>>2]|0)>0)c[l>>2]=(c[l>>2]|0)+1;c[m>>2]=(c[m>>2]|0)+1}if((c[l>>2]|0)==1){h[e>>3]=12.0;n=+h[e>>3];i=b;return+n}if((c[l>>2]|0)==2){h[e>>3]=+(20+(c[(c[f>>2]|0)+1088>>2]|0)|0);n=+h[e>>3];i=b;return+n}vy(g|0,0,272)|0;Wk(c[f>>2]|0,272,15,g);c[j>>2]=0;c[k>>2]=0;while(1){if((c[k>>2]|0)>=272)break;m=da(c[(c[f>>2]|0)+(c[k>>2]<<2)>>2]|0,d[g+(c[k>>2]|0)>>0]|0)|0;c[j>>2]=(c[j>>2]|0)+m;c[k>>2]=(c[k>>2]|0)+1}do if((c[l>>2]|0)!=3)if((c[l>>2]|0)==4){c[j>>2]=(c[j>>2]|0)+37;break}else{m=zj(g,272)|0;c[j>>2]=(c[j>>2]|0)+m;break}else c[j>>2]=(c[j>>2]|0)+28;while(0);h[e>>3]=+(c[j>>2]|0);n=+h[e>>3];i=b;return+n}function Lh(b,f,g,h){b=b|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0;Z=i;i=i+2352|0;q=Z+1284|0;r=Z+1488|0;s=Z+1160|0;t=Z+1440|0;u=Z+1264|0;v=Z+1268|0;C=Z+1280|0;D=Z+1472|0;A=Z+1464|0;B=Z+1136|0;x=Z+1140|0;y=Z+1144|0;E=Z+1148|0;K=Z+1152|0;L=Z+1156|0;J=Z+1432|0;ra=Z+1220|0;pa=Z+1168|0;qa=Z+1172|0;oa=Z+1176|0;wa=Z+1184|0;ua=Z+1192|0;va=Z+1196|0;ta=Z+1200|0;Ba=Z+1208|0;za=Z+1216|0;Aa=Z+1428|0;ya=Z+1276|0;Ka=Z+1228|0;Ia=Z+1236|0;Ja=Z+1240|0;Ha=Z+1244|0;Fa=Z+1248|0;Ga=Z+1252|0;Da=Z+1256|0;Ea=Z+1460|0;na=Z+1476|0;sa=Z+1484|0;xa=Z+1492|0;Ca=Z+2332|0;ma=Z+2336|0;la=Z+1288|0;T=Z+1292|0;R=Z+1300|0;S=Z+1304|0;Q=Z+1308|0;Y=Z+1316|0;W=Z+1324|0;X=Z+1328|0;V=Z+1332|0;ba=Z+1340|0;$=Z+1344|0;aa=Z+1348|0;_=Z+1352|0;ka=Z+1360|0;ia=Z+1368|0;ja=Z+1372|0;ha=Z+1376|0;fa=Z+1380|0;ga=Z+1384|0;da=Z+1388|0;ea=Z+1392|0;P=Z+1400|0;U=Z+1404|0;j=Z+1408|0;ca=Z+1412|0;O=Z+1416|0;N=Z+1420|0;M=Z+1436|0;G=Z+1116|0;k=Z+1444|0;l=Z+1120|0;o=Z+1104|0;n=Z+1124|0;m=Z+1448|0;w=Z+1260|0;F=Z;I=Z+1272|0;H=Z+2340|0;z=Z+1496|0;p=Z+1480|0;c[M>>2]=b;c[G>>2]=f;c[k>>2]=g;c[l>>2]=h;qh((c[G>>2]|0)-1|0,c[k>>2]|0,c[l>>2]|0);if((c[G>>2]|0)==1){i=Z;return}Eh(o,c[M>>2]|0);c[N>>2]=n;c[O>>2]=c[N>>2];c[P>>2]=c[O>>2];b=c[P>>2]|0;c[Z+1396>>2]=b;c[R>>2]=Q;c[S>>2]=-1;f=c[S>>2]|0;c[T>>2]=c[R>>2];c[Z+1296>>2]=f;c[c[T>>2]>>2]=0;c[U>>2]=c[Q>>2];c[Z+1312>>2]=U;c[b>>2]=0;c[W>>2]=V;c[X>>2]=-1;f=c[X>>2]|0;c[Y>>2]=c[W>>2];c[Z+1320>>2]=f;c[c[Y>>2]>>2]=0;c[j>>2]=c[V>>2];c[Z+1336>>2]=j;c[b+4>>2]=0;c[$>>2]=_;c[aa>>2]=-1;f=c[aa>>2]|0;c[ba>>2]=c[$>>2];c[Z+1424>>2]=f;c[c[ba>>2]>>2]=0;c[ca>>2]=c[_>>2];c[Z+1356>>2]=ca;c[da>>2]=b+8;c[ea>>2]=0;b=c[ea>>2]|0;c[fa>>2]=c[da>>2];c[ga>>2]=b;b=c[fa>>2]|0;c[ha>>2]=ga;f=c[c[ha>>2]>>2]|0;c[ia>>2]=b;c[ja>>2]=f;f=c[ia>>2]|0;c[Z+1364>>2]=f;c[ka>>2]=ja;c[f>>2]=c[c[ka>>2]>>2];c[la>>2]=m;c[ma>>2]=c[la>>2];c[na>>2]=c[ma>>2];f=c[na>>2]|0;c[Z+1468>>2]=f;c[pa>>2]=oa;c[qa>>2]=-1;b=c[qa>>2]|0;c[ra>>2]=c[pa>>2];c[Z+1164>>2]=b;c[c[ra>>2]>>2]=0;c[sa>>2]=c[oa>>2];c[Z+1180>>2]=sa;c[f>>2]=0;c[ua>>2]=ta;c[va>>2]=-1;b=c[va>>2]|0;c[wa>>2]=c[ua>>2];c[Z+1188>>2]=b;c[c[wa>>2]>>2]=0;c[xa>>2]=c[ta>>2];c[Z+1204>>2]=xa;c[f+4>>2]=0;c[za>>2]=ya;c[Aa>>2]=-1;b=c[Aa>>2]|0;c[Ba>>2]=c[za>>2];c[Z+1212>>2]=b;c[c[Ba>>2]>>2]=0;c[Ca>>2]=c[ya>>2];c[Z+1224>>2]=Ca;c[Da>>2]=f+8;c[Ea>>2]=0;f=c[Ea>>2]|0;c[Fa>>2]=c[Da>>2];c[Ga>>2]=f;f=c[Fa>>2]|0;c[Ha>>2]=Ga;b=c[c[Ha>>2]>>2]|0;c[Ia>>2]=f;c[Ja>>2]=b;b=c[Ia>>2]|0;c[Z+1232>>2]=b;c[Ka>>2]=Ja;c[b>>2]=c[c[Ka>>2]>>2];c[w>>2]=Hh(o)|0;Gh(o,w,n,m);Ih(F);c[I>>2]=0;while(1){f=c[I>>2]|0;c[J>>2]=n;b=c[J>>2]|0;if(!(f>>>0<(((c[b+4>>2]|0)-(c[b>>2]|0)|0)/4|0)>>>0))break;b=c[I>>2]|0;c[K>>2]=n;c[L>>2]=b;Jh(F,c[(c[c[K>>2]>>2]|0)+(c[L>>2]<<2)>>2]|0);c[I>>2]=(c[I>>2]|0)+1}a[H>>0]=(c[w>>2]|0)>0&1;rh(1,a[H>>0]&1,0,c[k>>2]|0,c[l>>2]|0);if(a[H>>0]&1){b=(c[w>>2]|0)-1|0;rh(4,b,((b|0)<0)<<31>>31,c[k>>2]|0,c[l>>2]|0)}Mh(F,15,(c[G>>2]|0)+(c[w>>2]|0)|0,z,c[k>>2]|0,c[l>>2]|0);c[p>>2]=0;while(1){f=c[p>>2]|0;c[E>>2]=n;b=c[E>>2]|0;if(!(f>>>0<(((c[b+4>>2]|0)-(c[b>>2]|0)|0)/4|0)>>>0))break;b=c[p>>2]|0;c[x>>2]=n;c[y>>2]=b;b=d[z+(c[(c[c[x>>2]>>2]|0)+(c[y>>2]<<2)>>2]|0)>>0]|0;f=c[p>>2]|0;c[A>>2]=n;c[B>>2]=f;rh(b,e[z+272+(c[(c[c[A>>2]>>2]|0)+(c[B>>2]<<2)>>2]<<1)>>1]|0,0,c[k>>2]|0,c[l>>2]|0);b=c[p>>2]|0;c[C>>2]=n;c[D>>2]=b;if((c[(c[c[C>>2]>>2]|0)+(c[D>>2]<<2)>>2]|0)>0?(b=c[p>>2]|0,c[u>>2]=n,c[v>>2]=b,(c[(c[c[u>>2]>>2]|0)+(c[v>>2]<<2)>>2]|0)<=(c[w>>2]|0)):0){f=c[p>>2]|0;c[q>>2]=n;c[r>>2]=f;f=c[(c[c[q>>2]>>2]|0)+(c[r>>2]<<2)>>2]|0;b=c[p>>2]|0;c[s>>2]=m;c[t>>2]=b;b=c[(c[c[s>>2]>>2]|0)+(c[t>>2]<<2)>>2]|0;rh(f,b,((b|0)<0)<<31>>31,c[k>>2]|0,c[l>>2]|0)}c[p>>2]=(c[p>>2]|0)+1}rh(1,1,0,c[k>>2]|0,c[l>>2]|0);Gd(m);Gd(n);Gd(o);i=Z;return}function Mh(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;l=i;i=i+80|0;u=l+28|0;v=l+24|0;s=l+52|0;o=l+60|0;p=l+40|0;q=l+48|0;r=l+56|0;w=l+64|0;n=l+68|0;j=l;m=l+36|0;h=l+4|0;y=l+32|0;k=l+8|0;x=l+44|0;t=l+12|0;c[r>>2]=a;c[w>>2]=b;c[n>>2]=d;c[j>>2]=e;c[m>>2]=f;c[h>>2]=g;vy(c[j>>2]|0,0,272)|0;vy((c[j>>2]|0)+272|0,0,544)|0;a=(c[j>>2]|0)+820|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[(c[j>>2]|0)+816>>2]=0;c[y>>2]=(c[n>>2]|0)-1;c[k>>2]=0;while(1){if((c[y>>2]|0)==0)break;c[y>>2]=c[y>>2]>>1;c[k>>2]=(c[k>>2]|0)+1}c[x>>2]=0;while(1){if(!((c[x>>2]|0)>>>0<(c[n>>2]|0)>>>0))break;if((c[(c[r>>2]|0)+(c[x>>2]<<2)>>2]|0)>0){if((c[(c[j>>2]|0)+816>>2]|0)<4)c[(c[j>>2]|0)+820+(c[(c[j>>2]|0)+816>>2]<<2)>>2]=c[x>>2];a=(c[j>>2]|0)+816|0;c[a>>2]=(c[a>>2]|0)+1}c[x>>2]=(c[x>>2]|0)+1}if((c[(c[j>>2]|0)+816>>2]|0)<=1){rh(2,1,0,c[m>>2]|0,c[h>>2]|0);rh(2,0,0,c[m>>2]|0,c[h>>2]|0);a=c[(c[j>>2]|0)+820>>2]|0;rh(c[k>>2]|0,a,((a|0)<0)<<31>>31,c[m>>2]|0,c[h>>2]|0);i=l;return}if((c[n>>2]|0)>=50?(c[(c[j>>2]|0)+816>>2]|0)>=16:0){Bd(t,c[n>>2]|0);c[p>>2]=t;c[q>>2]=0;By((c[c[p>>2]>>2]|0)+(c[q>>2]<<2)|0,c[r>>2]|0,c[n>>2]<<2|0)|0;a=c[n>>2]|0;c[s>>2]=t;c[o>>2]=0;bl(a,(c[c[s>>2]>>2]|0)+(c[o>>2]<<2)|0)|0;c[u>>2]=t;c[v>>2]=0;Wk((c[c[u>>2]>>2]|0)+(c[v>>2]<<2)|0,c[n>>2]|0,c[w>>2]|0,c[j>>2]|0);Gd(t)}else Wk(c[r>>2]|0,c[n>>2]|0,c[w>>2]|0,c[j>>2]|0);el(c[j>>2]|0,c[n>>2]|0,(c[j>>2]|0)+272|0);o=c[j>>2]|0;n=c[n>>2]|0;if((c[(c[j>>2]|0)+816>>2]|0)<=4){Sj(o,n,c[k>>2]|0,c[m>>2]|0,c[h>>2]|0);i=l;return}else{Tj(o,n,c[m>>2]|0,c[h>>2]|0);i=l;return}}function Nh(a,b,f,g){a=a|0;b=b|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=i;i=i+32|0;o=h+8|0;p=h+16|0;l=h+20|0;m=h+24|0;n=h+4|0;k=h;j=h+12|0;c[o>>2]=a;c[p>>2]=b;c[l>>2]=f;c[m>>2]=g;c[n>>2]=Ml(c[p>>2]|0)|0;c[k>>2]=Nl(c[n>>2]|0)|0;a=c[p>>2]|0;c[j>>2]=a-(Ol(c[n>>2]|0)|0);rh(d[(c[o>>2]|0)+(c[n>>2]|0)>>0]|0,e[(c[o>>2]|0)+26+(c[n>>2]<<1)>>1]|0,0,c[l>>2]|0,c[m>>2]|0);if((c[k>>2]|0)<=0){i=h;return}p=c[j>>2]|0;rh(c[k>>2]|0,p,((p|0)<0)<<31>>31,c[l>>2]|0,c[m>>2]|0);i=h;return}function Oh(a){a=a|0;var b=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;b=i;i=i+96|0;x=b+84|0;y=b+48|0;s=b+36|0;t=b+24|0;u=b+76|0;v=b+8|0;r=b+12|0;q=b+64|0;e=b+72|0;o=b+80|0;n=b+88|0;m=b+28|0;j=b+32|0;l=b+40|0;z=b+44|0;p=b;g=b+56|0;h=b+16|0;w=b+68|0;f=b+4|0;k=b+20|0;c[p>>2]=a;if((c[c[p>>2]>>2]|0)<=1){c[c[p>>2]>>2]=1;i=b;return}c[g+0>>2]=c[364];c[g+4>>2]=c[365];c[h>>2]=0;c[w>>2]=0;while(1){a=c[w>>2]|0;c[z>>2]=(c[p>>2]|0)+4;A=c[z>>2]|0;if(!(a>>>0<((c[A+4>>2]|0)-(c[A>>2]|0)|0)>>>0))break;A=c[w>>2]|0;c[x>>2]=(c[p>>2]|0)+4;c[y>>2]=A;c[f>>2]=d[(c[c[x>>2]>>2]|0)+(c[y>>2]|0)>>0];do if((c[f>>2]|0)!=(c[g+((c[h>>2]&1)<<2)>>2]|0))if((c[f>>2]|0)==((c[g+(((c[h>>2]|0)-1&1)<<2)>>2]|0)+1|0)){c[k>>2]=1;break}else{c[k>>2]=(c[f>>2]|0)+2;break}else c[k>>2]=0;while(0);c[g+((c[h>>2]&1)<<2)>>2]=c[f>>2];c[h>>2]=(c[h>>2]|0)+1;c[j>>2]=(c[p>>2]|0)+16;c[l>>2]=k;A=c[j>>2]|0;a=c[A+4>>2]|0;c[m>>2]=A;c[n>>2]=(c[m>>2]|0)+8;c[o>>2]=c[n>>2];if((a|0)!=(c[c[o>>2]>>2]|0)){c[e>>2]=A;c[q>>2]=(c[e>>2]|0)+8;c[r>>2]=c[q>>2];C=c[r>>2]|0;c[s>>2]=c[A+4>>2];B=c[s>>2]|0;a=c[l>>2]|0;c[t>>2]=C;c[u>>2]=B;c[v>>2]=a;a=c[u>>2]|0;if((a|0)!=0)c[a>>2]=c[c[v>>2]>>2];C=A+4|0;c[C>>2]=(c[C>>2]|0)+4}else Ng(A,c[l>>2]|0);c[w>>2]=(c[w>>2]|0)+1}i=b;return}function Ph(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;q=i;i=i+1232|0;r=q+1180|0;s=q+1172|0;g=q+1204|0;n=q+1208|0;o=q+1188|0;v=q+1196|0;w=q+1200|0;u=q+1216|0;f=q+1220|0;h=q+1184|0;j=q+1168|0;k=q+1192|0;m=q;t=q+1212|0;l=q+1048|0;p=q+1176|0;c[f>>2]=a;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;qh((c[c[f>>2]>>2]|0)-1|0,c[j>>2]|0,c[k>>2]|0);if((c[c[f>>2]>>2]|0)==1){i=q;return}Qh(m);c[t>>2]=1;while(1){b=c[t>>2]|0;c[u>>2]=(c[f>>2]|0)+16;a=c[u>>2]|0;if(!(b>>>0<(((c[a+4>>2]|0)-(c[a>>2]|0)|0)/4|0)>>>0))break;a=c[t>>2]|0;c[v>>2]=(c[f>>2]|0)+16;c[w>>2]=a;Rh(m,c[(c[c[v>>2]>>2]|0)+(c[w>>2]<<2)>>2]|0);c[t>>2]=(c[t>>2]|0)+1}Sh(l);c[p>>2]=0;while(1){b=c[p>>2]|0;c[g>>2]=(c[f>>2]|0)+28;a=c[g>>2]|0;e=c[f>>2]|0;if(!(b>>>0<(((c[a+4>>2]|0)-(c[a>>2]|0)|0)/4|0)>>>0))break;a=c[p>>2]|0;c[r>>2]=e+28;c[s>>2]=a;Th(l,Ml(c[(c[c[r>>2]>>2]|0)+(c[s>>2]<<2)>>2]|0)|0);c[p>>2]=(c[p>>2]|0)+1}Uh(m,15,(c[e>>2]|0)+2|0,c[h>>2]|0,c[j>>2]|0,c[k>>2]|0);Vh(l,15,26,(c[h>>2]|0)+796|0,c[j>>2]|0,c[k>>2]|0);a=(c[h>>2]|0)+796|0;c[n>>2]=(c[f>>2]|0)+28;c[o>>2]=0;Nh(a,c[(c[c[n>>2]>>2]|0)+(c[o>>2]<<2)>>2]|0,c[j>>2]|0,c[k>>2]|0);i=q;return}function Qh(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Qj(c[d>>2]|0);i=b;return}function Rh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;a=c[f>>2]|0;b=a+(c[e>>2]<<2)|0;c[b>>2]=(c[b>>2]|0)+1;a=a+1032|0;c[a>>2]=(c[a>>2]|0)+1;i=d;return}function Sh(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Oj(c[d>>2]|0);i=b;return}function Th(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;a=c[f>>2]|0;b=a+(c[e>>2]<<2)|0;c[b>>2]=(c[b>>2]|0)+1;a=a+104|0;c[a>>2]=(c[a>>2]|0)+1;i=d;return}function Uh(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;l=i;i=i+80|0;u=l+28|0;v=l+24|0;s=l+52|0;o=l+60|0;p=l+40|0;q=l+48|0;r=l+56|0;w=l+64|0;n=l+68|0;j=l;m=l+36|0;h=l+4|0;y=l+32|0;k=l+8|0;x=l+44|0;t=l+12|0;c[r>>2]=a;c[w>>2]=b;c[n>>2]=d;c[j>>2]=e;c[m>>2]=f;c[h>>2]=g;vy(c[j>>2]|0,0,258)|0;vy((c[j>>2]|0)+258|0,0,516)|0;a=(c[j>>2]|0)+780|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[(c[j>>2]|0)+776>>2]=0;c[y>>2]=(c[n>>2]|0)-1;c[k>>2]=0;while(1){if((c[y>>2]|0)==0)break;c[y>>2]=c[y>>2]>>1;c[k>>2]=(c[k>>2]|0)+1}c[x>>2]=0;while(1){if(!((c[x>>2]|0)>>>0<(c[n>>2]|0)>>>0))break;if((c[(c[r>>2]|0)+(c[x>>2]<<2)>>2]|0)>0){if((c[(c[j>>2]|0)+776>>2]|0)<4)c[(c[j>>2]|0)+780+(c[(c[j>>2]|0)+776>>2]<<2)>>2]=c[x>>2];a=(c[j>>2]|0)+776|0;c[a>>2]=(c[a>>2]|0)+1}c[x>>2]=(c[x>>2]|0)+1}if((c[(c[j>>2]|0)+776>>2]|0)<=1){rh(2,1,0,c[m>>2]|0,c[h>>2]|0);rh(2,0,0,c[m>>2]|0,c[h>>2]|0);a=c[(c[j>>2]|0)+780>>2]|0;rh(c[k>>2]|0,a,((a|0)<0)<<31>>31,c[m>>2]|0,c[h>>2]|0);i=l;return}if((c[n>>2]|0)>=50?(c[(c[j>>2]|0)+776>>2]|0)>=16:0){Bd(t,c[n>>2]|0);c[p>>2]=t;c[q>>2]=0;By((c[c[p>>2]>>2]|0)+(c[q>>2]<<2)|0,c[r>>2]|0,c[n>>2]<<2|0)|0;a=c[n>>2]|0;c[s>>2]=t;c[o>>2]=0;bl(a,(c[c[s>>2]>>2]|0)+(c[o>>2]<<2)|0)|0;c[u>>2]=t;c[v>>2]=0;Wk((c[c[u>>2]>>2]|0)+(c[v>>2]<<2)|0,c[n>>2]|0,c[w>>2]|0,c[j>>2]|0);Gd(t)}else Wk(c[r>>2]|0,c[n>>2]|0,c[w>>2]|0,c[j>>2]|0);el(c[j>>2]|0,c[n>>2]|0,(c[j>>2]|0)+258|0);o=c[j>>2]|0;n=c[n>>2]|0;if((c[(c[j>>2]|0)+776>>2]|0)<=4){Mj(o,n,c[k>>2]|0,c[m>>2]|0,c[h>>2]|0);i=l;return}else{Nj(o,n,c[m>>2]|0,c[h>>2]|0);i=l;return}}function Vh(d,e,f,g,h,j){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;k=i;i=i+80|0;y=k+28|0;z=k+24|0;r=k+52|0;x=k+60|0;u=k+40|0;v=k+48|0;w=k+56|0;A=k+64|0;p=k+68|0;o=k;m=k+36|0;n=k+4|0;q=k+32|0;l=k+8|0;s=k+44|0;t=k+12|0;c[w>>2]=d;c[A>>2]=e;c[p>>2]=f;c[o>>2]=g;c[m>>2]=h;c[n>>2]=j;h=(c[o>>2]|0)+0|0;j=h+26|0;do{a[h>>0]=0;h=h+1|0}while((h|0)<(j|0));h=(c[o>>2]|0)+26|0;j=h+52|0;do{b[h>>1]=0;h=h+2|0}while((h|0)<(j|0));d=(c[o>>2]|0)+84|0;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[(c[o>>2]|0)+80>>2]=0;c[q>>2]=(c[p>>2]|0)-1;c[l>>2]=0;while(1){if((c[q>>2]|0)==0)break;c[q>>2]=c[q>>2]>>1;c[l>>2]=(c[l>>2]|0)+1}c[s>>2]=0;while(1){if(!((c[s>>2]|0)>>>0<(c[p>>2]|0)>>>0))break;if((c[(c[w>>2]|0)+(c[s>>2]<<2)>>2]|0)>0){if((c[(c[o>>2]|0)+80>>2]|0)<4)c[(c[o>>2]|0)+84+(c[(c[o>>2]|0)+80>>2]<<2)>>2]=c[s>>2];d=(c[o>>2]|0)+80|0;c[d>>2]=(c[d>>2]|0)+1}c[s>>2]=(c[s>>2]|0)+1}if((c[(c[o>>2]|0)+80>>2]|0)<=1){rh(2,1,0,c[m>>2]|0,c[n>>2]|0);rh(2,0,0,c[m>>2]|0,c[n>>2]|0);d=c[(c[o>>2]|0)+84>>2]|0;rh(c[l>>2]|0,d,((d|0)<0)<<31>>31,c[m>>2]|0,c[n>>2]|0);i=k;return}if((c[p>>2]|0)>=50?(c[(c[o>>2]|0)+80>>2]|0)>=16:0){Bd(t,c[p>>2]|0);c[u>>2]=t;c[v>>2]=0;By((c[c[u>>2]>>2]|0)+(c[v>>2]<<2)|0,c[w>>2]|0,c[p>>2]<<2|0)|0;d=c[p>>2]|0;c[r>>2]=t;c[x>>2]=0;bl(d,(c[c[r>>2]>>2]|0)+(c[x>>2]<<2)|0)|0;c[y>>2]=t;c[z>>2]=0;Wk((c[c[y>>2]>>2]|0)+(c[z>>2]<<2)|0,c[p>>2]|0,c[A>>2]|0,c[o>>2]|0);Gd(t)}else Wk(c[w>>2]|0,c[p>>2]|0,c[A>>2]|0,c[o>>2]|0);el(c[o>>2]|0,c[p>>2]|0,(c[o>>2]|0)+26|0);q=c[o>>2]|0;p=c[p>>2]|0;if((c[(c[o>>2]|0)+80>>2]|0)<=4){Kj(q,p,c[l>>2]|0,c[m>>2]|0,c[n>>2]|0);i=k;return}else{Lj(q,p,c[m>>2]|0,c[n>>2]|0);i=k;return}}function Wh(a,b,f,g){a=a|0;b=b|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;p=i;i=i+48|0;o=p+36|0;h=p+16|0;m=p;n=p+28|0;k=p+32|0;l=p+40|0;r=p+12|0;j=p+24|0;s=p+20|0;t=p+8|0;q=p+4|0;c[r>>2]=a;c[j>>2]=b;c[s>>2]=f;c[t>>2]=g;if((c[(c[j>>2]|0)+12>>2]|0)!=0){a=c[j>>2]|0;a=a+12|0;b=c[a>>2]|0;b=b+ -1|0;c[a>>2]=b;i=p;return}a=(c[j>>2]|0)+4|0;c[a>>2]=(c[a>>2]|0)+1;a=c[(c[j>>2]|0)+4>>2]|0;c[k>>2]=(c[c[j>>2]>>2]|0)+4;c[l>>2]=a;c[(c[j>>2]|0)+8>>2]=d[(c[c[k>>2]>>2]|0)+(c[l>>2]|0)>>0];a=c[(c[j>>2]|0)+4>>2]|0;c[m>>2]=(c[c[j>>2]>>2]|0)+28;c[n>>2]=a;c[(c[j>>2]|0)+12>>2]=c[(c[c[m>>2]>>2]|0)+(c[n>>2]<<2)>>2];a=c[(c[j>>2]|0)+4>>2]|0;c[o>>2]=(c[c[j>>2]>>2]|0)+16;c[h>>2]=a;c[q>>2]=c[(c[c[o>>2]>>2]|0)+(c[h>>2]<<2)>>2];rh(d[(c[r>>2]|0)+(c[q>>2]|0)>>0]|0,e[(c[r>>2]|0)+258+(c[q>>2]<<1)>>1]|0,0,c[s>>2]|0,c[t>>2]|0);Nh((c[r>>2]|0)+796|0,c[(c[j>>2]|0)+12>>2]|0,c[s>>2]|0,c[t>>2]|0);a=c[j>>2]|0;a=a+12|0;b=c[a>>2]|0;b=b+ -1|0;c[a>>2]=b;i=p;return}function Xh(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;k=i;i=i+160|0;n=k+80|0;j=k+72|0;m=k+16|0;r=k+24|0;o=k+104|0;l=k+152|0;B=k+20|0;t=k+100|0;z=k+84|0;A=k+68|0;y=k;v=k+44|0;w=k+48|0;x=k+153|0;H=k+64|0;u=k+144|0;K=k+92|0;N=k+88|0;M=k+40|0;O=k+116|0;L=k+120|0;I=k+124|0;J=k+128|0;C=k+132|0;D=k+136|0;E=k+140|0;q=k+108|0;F=k+96|0;G=k+112|0;p=k+52|0;s=k+28|0;c[I>>2]=b;c[J>>2]=d;c[C>>2]=e;c[D>>2]=f;c[E>>2]=g;c[q>>2]=h;h=c[J>>2]|0;c[O>>2]=c[q>>2];c[L>>2]=h;h=c[O>>2]|0;if((h|0)!=(c[L>>2]|0)){b=c[L>>2]|0;c[N>>2]=h;c[M>>2]=b;b=c[N>>2]|0;O=c[M>>2]|0;a[k+8>>0]=a[k+154>>0]|0;c[k+148>>2]=b;c[k+76>>2]=O;Ij(h,c[c[L>>2]>>2]|0,c[(c[L>>2]|0)+4>>2]|0)}O=(c[q>>2]|0)+12|0;b=c[I>>2]|0;c[O+0>>2]=c[b+0>>2];c[O+4>>2]=c[b+4>>2];c[O+8>>2]=c[b+8>>2];c[K>>2]=c[J>>2];O=c[K>>2]|0;if((c[O>>2]|0)==(c[O+4>>2]|0)){i=k;return}Bh(c[q>>2]|0,c[(c[q>>2]|0)+12>>2]|0,c[(c[q>>2]|0)+16>>2]|0);id(c[q>>2]|0,(c[C>>2]|0)+(c[D>>2]&c[E>>2])|0,(c[q>>2]|0)+24|0,(c[q>>2]|0)+64|0,(c[q>>2]|0)+104|0);Oh((c[q>>2]|0)+24|0);Oh((c[q>>2]|0)+64|0);Oh((c[q>>2]|0)+104|0);Yh((c[q>>2]|0)+144|0,c[(c[q>>2]|0)+24>>2]|0,(c[q>>2]|0)+20|0);c[F>>2]=c[(c[q>>2]|0)+24>>2]<<6;c[G>>2]=c[(c[q>>2]|0)+104>>2]<<2;Zh(p,c[F>>2]|0);Ff((c[q>>2]|0)+192|0,c[(c[q>>2]|0)+64>>2]|0);_h(s,c[G>>2]|0);xl(c[q>>2]|0,(c[q>>2]|0)+24|0,(c[q>>2]|0)+64|0,(c[q>>2]|0)+104|0,c[C>>2]|0,c[D>>2]|0,c[E>>2]|0,(c[q>>2]|0)+144|0,p,(c[q>>2]|0)+192|0,s);c[H>>2]=(c[q>>2]|0)+180;c[u>>2]=p;C=c[H>>2]|0;if((C|0)!=(c[u>>2]|0)){b=c[u>>2]|0;c[v>>2]=C;c[w>>2]=b;b=c[v>>2]|0;O=c[w>>2]|0;a[y+0>>0]=a[x+0>>0]|0;c[z>>2]=b;c[A>>2]=O;Cj(C,c[c[u>>2]>>2]|0,c[(c[u>>2]|0)+4>>2]|0)}ng(p,64,c[(c[q>>2]|0)+24>>2]|0,256,(c[q>>2]|0)+180|0,(c[q>>2]|0)+156|0);c[B>>2]=(c[q>>2]|0)+204;c[t>>2]=s;u=c[B>>2]|0;if((u|0)!=(c[t>>2]|0)){b=c[t>>2]|0;c[r>>2]=u;c[o>>2]=b;b=c[r>>2]|0;O=c[o>>2]|0;a[m+0>>0]=a[l+0>>0]|0;c[n>>2]=b;c[j>>2]=O;Aj(u,c[c[t>>2]>>2]|0,c[(c[t>>2]|0)+4>>2]|0)}Fd(s,4,c[(c[q>>2]|0)+104>>2]|0,256,(c[q>>2]|0)+204|0,(c[q>>2]|0)+168|0);yd(s);hg(p);i=k;return}function Yh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;q=i;i=i+80|0;o=q+20|0;j=q+36|0;h=q+32|0;p=q;f=q+16|0;g=q+8|0;r=q+72|0;n=q+28|0;m=q+64|0;l=q+68|0;x=q+40|0;k=q+44|0;v=q+48|0;w=q+52|0;y=q+56|0;z=q+60|0;t=q+4|0;s=q+24|0;u=q+12|0;c[z>>2]=b;c[t>>2]=d;c[s>>2]=e;e=c[z>>2]|0;c[y>>2]=e;b=c[y>>2]|0;c[u>>2]=((c[b+4>>2]|0)-(c[b>>2]|0)|0)/4|0;if((c[u>>2]|0)>>>0<(c[t>>2]|0)>>>0){Gj(e,(c[t>>2]|0)-(c[u>>2]|0)|0,c[s>>2]|0);i=q;return}if(!((c[u>>2]|0)>>>0>(c[t>>2]|0)>>>0)){i=q;return}s=(c[e>>2]|0)+(c[t>>2]<<2)|0;c[v>>2]=e;c[w>>2]=s;s=c[w>>2]|0;c[x>>2]=c[v>>2];c[k>>2]=s;s=c[x>>2]|0;while(1){if((c[k>>2]|0)==(c[s+4>>2]|0))break;c[l>>2]=s;c[m>>2]=(c[l>>2]|0)+8;c[n>>2]=c[m>>2];z=c[n>>2]|0;b=s+4|0;y=(c[b>>2]|0)+ -4|0;c[b>>2]=y;c[o>>2]=y;y=c[o>>2]|0;c[f>>2]=z;c[g>>2]=y;y=c[f>>2]|0;z=c[g>>2]|0;a[p+0>>0]=a[r+0>>0]|0;c[j>>2]=y;c[h>>2]=z}i=q;return}function Zh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;Fj(c[f>>2]|0,c[e>>2]|0);i=d;return}function _h(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;Ej(c[f>>2]|0,c[e>>2]|0);i=d;return}function $h(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;b=i;i=i+32|0;h=b+8|0;j=b+16|0;g=b+20|0;f=b+24|0;d=b+4|0;e=b;k=b+12|0;c[f>>2]=a;c[d>>2]=0;c[e>>2]=0;while(1){l=c[e>>2]|0;c[g>>2]=c[f>>2];a=c[g>>2]|0;if(!(l>>>0<(((c[a+4>>2]|0)-(c[a>>2]|0)|0)/32|0)>>>0))break;l=c[e>>2]|0;c[h>>2]=c[f>>2];c[j>>2]=l;c[k>>2]=(c[c[h>>2]>>2]|0)+(c[j>>2]<<5);c[d>>2]=(c[d>>2]|0)+((c[c[k>>2]>>2]|0)+(c[(c[k>>2]|0)+4>>2]|0));c[e>>2]=(c[e>>2]|0)+1}i=b;return c[d>>2]|0}function ai(b,f,g,h,j,k,l){b=b|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0;n=i;i=i+3392|0;L=n+1240|0;M=n+3368|0;N=n+3360|0;m=n+3352|0;I=n+3344|0;J=n+1216|0;F=n+1220|0;G=n+1224|0;U=n+1228|0;V=n+1212|0;Y=n+56|0;Z=n+60|0;ga=n+64|0;ha=n+68|0;ia=n+72|0;ea=n+3288|0;fa=n+152|0;da=n;aa=n+100|0;ba=n+104|0;ca=n+3388|0;ka=n+112|0;la=n+116|0;Q=n+120|0;R=n+124|0;W=n+128|0;Kb=n+132|0;Lb=n+136|0;Ib=n+140|0;Jb=n+144|0;Hb=n+148|0;Nb=n+3284|0;Rb=n+276|0;Sb=n+156|0;Pb=n+160|0;Qb=n+96|0;Ob=n+168|0;Ub=n+172|0;Yb=n+176|0;Zb=n+180|0;Wb=n+184|0;Xb=n+188|0;Vb=n+192|0;$b=n+196|0;ic=n+200|0;hc=n+204|0;fc=n+208|0;gc=n+212|0;ec=n+216|0;cc=n+220|0;dc=n+224|0;ac=n+228|0;bc=n+232|0;Gb=n+236|0;Fb=n+240|0;Mb=n+244|0;Tb=n+248|0;_b=n+252|0;Eb=n+256|0;Db=n+260|0;cb=n+264|0;db=n+268|0;ab=n+272|0;bb=n+3280|0;$a=n+1420|0;fb=n+280|0;jb=n+284|0;kb=n+288|0;hb=n+292|0;ib=n+296|0;gb=n+300|0;mb=n+164|0;qb=n+1200|0;rb=n+3332|0;ob=n+3340|0;pb=n+3348|0;nb=n+3356|0;tb=n+3364|0;Cb=n+3372|0;Bb=n+3380|0;zb=n+1232|0;Ab=n+1236|0;yb=n+3384|0;wb=n+1244|0;xb=n+1248|0;ub=n+1252|0;vb=n+1256|0;_a=n+1260|0;Za=n+1264|0;eb=n+1268|0;lb=n+1272|0;sb=n+1276|0;Ya=n+1280|0;Xa=n+1284|0;wa=n+1288|0;xa=n+1292|0;ua=n+1296|0;va=n+1300|0;ta=n+1304|0;za=n+1308|0;Da=n+1312|0;Ea=n+1316|0;Ba=n+1320|0;Ca=n+1324|0;Aa=n+1328|0;Ga=n+1332|0;Ka=n+1336|0;La=n+1340|0;Ia=n+1344|0;Ja=n+1348|0;Ha=n+1352|0;na=n+1356|0;Wa=n+1360|0;Va=n+1364|0;Ta=n+1368|0;Ua=n+1372|0;Na=n+1376|0;Qa=n+1380|0;Ra=n+1384|0;Oa=n+1388|0;Pa=n+1392|0;sa=n+1396|0;ra=n+1400|0;ya=n+1404|0;Fa=n+1408|0;Ma=n+1412|0;qa=n+1416|0;pa=n+3276|0;oa=n+3264|0;Sa=n+1424|0;lc=n+1428|0;mc=n+1432|0;E=n+1436|0;oc=n+3389|0;x=n+1444|0;y=n+1448|0;u=n+1452|0;r=n+1456|0;s=n+1460|0;nc=n+1464|0;v=n+1468|0;z=n+1472|0;S=n+2368|0;p=n+304|0;jc=n+3268|0;kc=n+3272|0;o=n+44|0;O=n+3292|0;ma=n+4|0;A=n+24|0;T=n+3312|0;q=n+80|0;P=n+3304|0;t=n+16|0;C=n+3328|0;B=n+1204|0;w=n+3390|0;D=n+3391|0;H=n+3336|0;K=n+3376|0;X=n+1208|0;_=n+40|0;ja=n+1440|0;$=n+108|0;c[E>>2]=b;a[oc>>0]=f&1;c[x>>2]=g;c[y>>2]=h;c[u>>2]=j;c[r>>2]=k;c[s>>2]=l;c[nc>>2]=$h(c[E>>2]|0)|0;c[v>>2]=(c[c[u>>2]>>2]|0)+(c[nc>>2]|0);uh(c[nc>>2]|0,a[oc>>0]&1,0,c[r>>2]|0,c[s>>2]|0);if((c[nc>>2]|0)==0){i=n;return}Ph((c[E>>2]|0)+24|0,z,c[r>>2]|0,c[s>>2]|0);Ph((c[E>>2]|0)+64|0,S,c[r>>2]|0,c[s>>2]|0);Ph((c[E>>2]|0)+104|0,p,c[r>>2]|0,c[s>>2]|0);oc=c[(c[E>>2]|0)+16>>2]|0;rh(2,oc,((oc|0)<0)<<31>>31,c[r>>2]|0,c[s>>2]|0);oc=c[(c[E>>2]|0)+12>>2]>>c[(c[E>>2]|0)+16>>2];rh(4,oc,((oc|0)<0)<<31>>31,c[r>>2]|0,c[s>>2]|0);c[jc>>2]=16+(c[(c[E>>2]|0)+12>>2]|0)+(48<<c[(c[E>>2]|0)+16>>2]);c[kc>>2]=0;while(1){l=c[E>>2]|0;if((c[kc>>2]|0)>=(c[(c[E>>2]|0)+24>>2]|0))break;oc=c[kc>>2]|0;c[lc>>2]=l+144;c[mc>>2]=oc;oc=c[(c[c[lc>>2]>>2]|0)+(c[mc>>2]<<2)>>2]|0;rh(2,oc,((oc|0)<0)<<31>>31,c[r>>2]|0,c[s>>2]|0);c[kc>>2]=(c[kc>>2]|0)+1}c[Sa>>2]=(c[E>>2]|0)+180;oc=c[Sa>>2]|0;Lh(l+156|0,((c[oc+4>>2]|0)-(c[oc>>2]|0)|0)/1040|0,c[r>>2]|0,c[s>>2]|0);oc=(c[E>>2]|0)+168|0;c[oa>>2]=(c[E>>2]|0)+204;nc=c[oa>>2]|0;Lh(oc,((c[nc+4>>2]|0)-(c[nc>>2]|0)|0)/2096|0,c[r>>2]|0,c[s>>2]|0);c[pa>>2]=o;c[qa>>2]=c[pa>>2];c[ra>>2]=c[qa>>2];nc=c[ra>>2]|0;c[sa>>2]=nc;c[ua>>2]=ta;c[va>>2]=-1;oc=c[va>>2]|0;c[wa>>2]=c[ua>>2];c[xa>>2]=oc;c[c[wa>>2]>>2]=0;c[ya>>2]=c[ta>>2];c[za>>2]=ya;c[nc>>2]=0;c[Ba>>2]=Aa;c[Ca>>2]=-1;oc=c[Ca>>2]|0;c[Da>>2]=c[Ba>>2];c[Ea>>2]=oc;c[c[Da>>2]>>2]=0;c[Fa>>2]=c[Aa>>2];c[Ga>>2]=Fa;c[nc+4>>2]=0;c[Ia>>2]=Ha;c[Ja>>2]=-1;oc=c[Ja>>2]|0;c[Ka>>2]=c[Ia>>2];c[La>>2]=oc;c[c[Ka>>2]>>2]=0;c[Ma>>2]=c[Ha>>2];c[na>>2]=Ma;c[Oa>>2]=nc+8;c[Pa>>2]=0;nc=c[Pa>>2]|0;c[Qa>>2]=c[Oa>>2];c[Ra>>2]=nc;nc=c[Qa>>2]|0;c[Na>>2]=Ra;oc=c[c[Na>>2]>>2]|0;c[Ta>>2]=nc;c[Ua>>2]=oc;oc=c[Ta>>2]|0;c[Va>>2]=oc;c[Wa>>2]=Ua;c[oc>>2]=c[c[Wa>>2]>>2];c[Xa>>2]=O;c[Ya>>2]=c[Xa>>2];c[Za>>2]=c[Ya>>2];oc=c[Za>>2]|0;c[_a>>2]=oc;c[ab>>2]=$a;c[bb>>2]=-1;nc=c[bb>>2]|0;c[cb>>2]=c[ab>>2];c[db>>2]=nc;c[c[cb>>2]>>2]=0;c[eb>>2]=c[$a>>2];c[fb>>2]=eb;c[oc>>2]=0;c[hb>>2]=gb;c[ib>>2]=-1;nc=c[ib>>2]|0;c[jb>>2]=c[hb>>2];c[kb>>2]=nc;c[c[jb>>2]>>2]=0;c[lb>>2]=c[gb>>2];c[mb>>2]=lb;c[oc+4>>2]=0;c[ob>>2]=nb;c[pb>>2]=-1;nc=c[pb>>2]|0;c[qb>>2]=c[ob>>2];c[rb>>2]=nc;c[c[qb>>2]>>2]=0;c[sb>>2]=c[nb>>2];c[tb>>2]=sb;c[ub>>2]=oc+8;c[vb>>2]=0;oc=c[vb>>2]|0;c[wb>>2]=c[ub>>2];c[xb>>2]=oc;oc=c[wb>>2]|0;c[yb>>2]=xb;nc=c[c[yb>>2]>>2]|0;c[zb>>2]=oc;c[Ab>>2]=nc;nc=c[zb>>2]|0;c[Bb>>2]=nc;c[Cb>>2]=Ab;c[nc>>2]=c[c[Cb>>2]>>2];c[Db>>2]=ma;c[Eb>>2]=c[Db>>2];c[Fb>>2]=c[Eb>>2];nc=c[Fb>>2]|0;c[Gb>>2]=nc;c[Ib>>2]=Hb;c[Jb>>2]=-1;oc=c[Jb>>2]|0;c[Kb>>2]=c[Ib>>2];c[Lb>>2]=oc;c[c[Kb>>2]>>2]=0;c[Mb>>2]=c[Hb>>2];c[Nb>>2]=Mb;c[nc>>2]=0;c[Pb>>2]=Ob;c[Qb>>2]=-1;oc=c[Qb>>2]|0;c[Rb>>2]=c[Pb>>2];c[Sb>>2]=oc;c[c[Rb>>2]>>2]=0;c[Tb>>2]=c[Ob>>2];c[Ub>>2]=Tb;c[nc+4>>2]=0;c[Wb>>2]=Vb;c[Xb>>2]=-1;oc=c[Xb>>2]|0;c[Yb>>2]=c[Wb>>2];c[Zb>>2]=oc;c[c[Yb>>2]>>2]=0;c[_b>>2]=c[Vb>>2];c[$b>>2]=_b;c[ac>>2]=nc+8;c[bc>>2]=0;nc=c[bc>>2]|0;c[cc>>2]=c[ac>>2];c[dc>>2]=nc;nc=c[cc>>2]|0;c[ec>>2]=dc;oc=c[c[ec>>2]>>2]|0;c[fc>>2]=nc;c[gc>>2]=oc;oc=c[fc>>2]|0;c[hc>>2]=oc;c[ic>>2]=gc;c[oc>>2]=c[c[ic>>2]>>2];bi((c[E>>2]|0)+180|0,256,o,c[r>>2]|0,c[s>>2]|0);ci((c[E>>2]|0)+192|0,704,O,c[r>>2]|0,c[s>>2]|0);di((c[E>>2]|0)+204|0,c[jc>>2]|0,ma,c[r>>2]|0,c[s>>2]|0);ei(A,(c[E>>2]|0)+24|0);ei(T,(c[E>>2]|0)+64|0);ei(q,(c[E>>2]|0)+104|0);c[P>>2]=0;while(1){nc=c[P>>2]|0;c[W>>2]=c[E>>2];oc=c[W>>2]|0;if(!(nc>>>0<(((c[oc+4>>2]|0)-(c[oc>>2]|0)|0)/32|0)>>>0))break;oc=c[P>>2]|0;c[Q>>2]=c[E>>2];c[R>>2]=oc;c[t>>2]=(c[c[Q>>2]>>2]|0)+(c[R>>2]<<5);Wh(S,T,c[r>>2]|0,c[s>>2]|0);oc=c[t>>2]|0;nc=c[T+8>>2]|0;c[U>>2]=O;c[V>>2]=nc;xh(oc,(c[c[U>>2]>>2]|0)+((c[V>>2]|0)*2132|0)|0,c[r>>2]|0,c[s>>2]|0);c[C>>2]=0;while(1){if(!((c[C>>2]|0)>>>0<(c[c[t>>2]>>2]|0)>>>0))break;Wh(z,A,c[r>>2]|0,c[s>>2]|0);c[B>>2]=c[A+8>>2];if((c[c[u>>2]>>2]|0)>>>0>0)na=d[(c[x>>2]|0)+((c[c[u>>2]>>2]|0)-1&c[y>>2])>>0]|0;else na=0;a[w>>0]=na;if((c[c[u>>2]>>2]|0)>>>0>1)na=d[(c[x>>2]|0)+((c[c[u>>2]>>2]|0)-2&c[y>>2])>>0]|0;else na=0;a[D>>0]=na;b=c[A+8>>2]<<6;oc=a[w>>0]|0;nc=a[D>>0]|0;f=c[A+8>>2]|0;c[F>>2]=(c[E>>2]|0)+144;c[G>>2]=f;c[H>>2]=b+((fi(oc,nc,c[(c[c[F>>2]>>2]|0)+(c[G>>2]<<2)>>2]|0)|0)&255);nc=c[H>>2]|0;c[I>>2]=(c[E>>2]|0)+156;c[J>>2]=nc;c[B>>2]=c[(c[c[I>>2]>>2]|0)+(c[J>>2]<<2)>>2];c[K>>2]=d[(c[x>>2]|0)+(c[c[u>>2]>>2]&c[y>>2])>>0];nc=c[K>>2]|0;oc=c[B>>2]|0;c[L>>2]=o;c[M>>2]=oc;nc=d[(c[c[L>>2]>>2]|0)+((c[M>>2]|0)*788|0)+nc>>0]|0;oc=c[K>>2]|0;b=c[B>>2]|0;c[N>>2]=o;c[m>>2]=b;rh(nc,e[(c[c[N>>2]>>2]|0)+((c[m>>2]|0)*788|0)+256+(oc<<1)>>1]|0,0,c[r>>2]|0,c[s>>2]|0);oc=c[u>>2]|0;c[oc>>2]=(c[oc>>2]|0)+1;c[C>>2]=(c[C>>2]|0)+1}if((c[c[u>>2]>>2]|0)>>>0<(c[v>>2]|0)>>>0?(e[(c[t>>2]|0)+20>>1]|0|0)!=65535:0){Wh(p,q,c[r>>2]|0,c[s>>2]|0);if((c[(c[t>>2]|0)+8>>2]|0)>>>0>4)na=3;else na=(c[(c[t>>2]|0)+8>>2]|0)-2|0;c[X>>2]=(c[q+8>>2]<<2)+na;oc=c[X>>2]|0;c[Y>>2]=(c[E>>2]|0)+168;c[Z>>2]=oc;c[_>>2]=c[(c[c[Y>>2]>>2]|0)+(c[Z>>2]<<2)>>2];oc=c[u>>2]|0;c[$>>2]=4194288;c[aa>>2]=oc;c[ba>>2]=$;oc=c[aa>>2]|0;nc=c[ba>>2]|0;a[da+0>>0]=a[ca+0>>0]|0;c[ea>>2]=oc;c[fa>>2]=nc;nc=c[fa>>2]|0;oc=c[ea>>2]|0;c[ga>>2]=da;c[ha>>2]=nc;c[ia>>2]=oc;c[ja>>2]=c[((c[c[ha>>2]>>2]|0)>>>0<(c[c[ia>>2]>>2]|0)>>>0?c[fa>>2]|0:c[ea>>2]|0)>>2];oc=c[t>>2]|0;nc=c[_>>2]|0;c[ka>>2]=ma;c[la>>2]=nc;yh(oc,(c[c[ka>>2]>>2]|0)+((c[la>>2]|0)*1580|0)|0,c[r>>2]|0,c[s>>2]|0)}oc=c[u>>2]|0;c[oc>>2]=(c[oc>>2]|0)+(c[(c[t>>2]|0)+4>>2]|0);c[P>>2]=(c[P>>2]|0)+1}gi(ma);hi(O);ii(o);i=n;return}function bi(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;o=i;i=i+48|0;l=o;m=o+8|0;p=o+36|0;q=o+16|0;k=o+32|0;t=o+40|0;j=o+44|0;n=o+24|0;g=o+20|0;r=o+12|0;s=o+4|0;h=o+28|0;c[j>>2]=a;c[n>>2]=b;c[g>>2]=d;c[r>>2]=e;c[s>>2]=f;b=c[g>>2]|0;c[t>>2]=c[j>>2];a=c[t>>2]|0;mj(b,((c[a+4>>2]|0)-(c[a>>2]|0)|0)/1040|0);c[h>>2]=0;while(1){a=c[h>>2]|0;c[k>>2]=c[j>>2];t=c[k>>2]|0;if(!(a>>>0<(((c[t+4>>2]|0)-(c[t>>2]|0)|0)/1040|0)>>>0))break;a=c[h>>2]|0;c[l>>2]=c[j>>2];c[m>>2]=a;a=(c[c[l>>2]>>2]|0)+((c[m>>2]|0)*1040|0)|0;t=c[n>>2]|0;b=c[h>>2]|0;c[p>>2]=c[g>>2];c[q>>2]=b;nj(a,15,t,(c[c[p>>2]>>2]|0)+((c[q>>2]|0)*788|0)|0,c[r>>2]|0,c[s>>2]|0);c[h>>2]=(c[h>>2]|0)+1}i=o;return}function ci(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;o=i;i=i+48|0;l=o;m=o+8|0;p=o+36|0;q=o+16|0;k=o+32|0;t=o+40|0;j=o+44|0;n=o+24|0;g=o+20|0;r=o+12|0;s=o+4|0;h=o+28|0;c[j>>2]=a;c[n>>2]=b;c[g>>2]=d;c[r>>2]=e;c[s>>2]=f;b=c[g>>2]|0;c[t>>2]=c[j>>2];a=c[t>>2]|0;$i(b,((c[a+4>>2]|0)-(c[a>>2]|0)|0)/2832|0);c[h>>2]=0;while(1){a=c[h>>2]|0;c[k>>2]=c[j>>2];t=c[k>>2]|0;if(!(a>>>0<(((c[t+4>>2]|0)-(c[t>>2]|0)|0)/2832|0)>>>0))break;a=c[h>>2]|0;c[l>>2]=c[j>>2];c[m>>2]=a;a=(c[c[l>>2]>>2]|0)+((c[m>>2]|0)*2832|0)|0;t=c[n>>2]|0;b=c[h>>2]|0;c[p>>2]=c[g>>2];c[q>>2]=b;aj(a,15,t,(c[c[p>>2]>>2]|0)+((c[q>>2]|0)*2132|0)|0,c[r>>2]|0,c[s>>2]|0);c[h>>2]=(c[h>>2]|0)+1}i=o;return}function di(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;o=i;i=i+48|0;l=o;m=o+8|0;p=o+36|0;q=o+16|0;k=o+32|0;t=o+40|0;j=o+44|0;n=o+24|0;g=o+20|0;r=o+12|0;s=o+4|0;h=o+28|0;c[j>>2]=a;c[n>>2]=b;c[g>>2]=d;c[r>>2]=e;c[s>>2]=f;b=c[g>>2]|0;c[t>>2]=c[j>>2];a=c[t>>2]|0;Ji(b,((c[a+4>>2]|0)-(c[a>>2]|0)|0)/2096|0);c[h>>2]=0;while(1){a=c[h>>2]|0;c[k>>2]=c[j>>2];t=c[k>>2]|0;if(!(a>>>0<(((c[t+4>>2]|0)-(c[t>>2]|0)|0)/2096|0)>>>0))break;a=c[h>>2]|0;c[l>>2]=c[j>>2];c[m>>2]=a;a=(c[c[l>>2]>>2]|0)+((c[m>>2]|0)*2096|0)|0;t=c[n>>2]|0;b=c[h>>2]|0;c[p>>2]=c[g>>2];c[q>>2]=b;Ki(a,15,t,(c[c[p>>2]>>2]|0)+((c[q>>2]|0)*1580|0)|0,c[r>>2]|0,c[s>>2]|0);c[h>>2]=(c[h>>2]|0)+1}i=o;return}function ei(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;Rk(c[f>>2]|0,c[e>>2]|0);i=d;return}function fi(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+16|0;h=g+6|0;k=g+5|0;j=g+4|0;l=g;a[k>>0]=b;a[j>>0]=e;c[l>>2]=f;f=c[l>>2]|0;if((f|0)==3){a[h>>0]=(c[2088+((d[k>>0]|0)<<2)>>2]<<3)+(c[2088+((d[j>>0]|0)<<2)>>2]|0);l=a[h>>0]|0;i=g;return l|0}else if((f|0)==1){a[h>>0]=(d[k>>0]|0)>>2;l=a[h>>0]|0;i=g;return l|0}else if((f|0)==0){a[h>>0]=(d[k>>0]|0)&63;l=a[h>>0]|0;i=g;return l|0}else if((f|0)==2){a[h>>0]=d[1576+(d[k>>0]|0)>>0]|0|(d[(d[j>>0]|0)+1832>>0]|0);l=a[h>>0]|0;i=g;return l|0}else{a[h>>0]=0;l=a[h>>0]|0;i=g;return l|0}return 0}function gi(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Pk(c[d>>2]|0);i=b;return}function hi(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Nk(c[d>>2]|0);i=b;return}function ii(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Lk(c[d>>2]|0);i=b;return}



function gk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0;f=i;i=i+784|0;wa=f+484|0;oa=f+748|0;na=f+616|0;Ja=f+168|0;Ma=f+692|0;Ra=f+696|0;Qa=f+364|0;L=f+368|0;Ba=f+376|0;Ca=f+372|0;Aa=f+96|0;xa=f+164|0;la=f+128|0;za=f+772|0;Ia=f+116|0;ka=f+680|0;Ha=f+8|0;Ea=f+360|0;Fa=f+312|0;Ga=f+773|0;ta=f+188|0;ua=f+180|0;va=f+176|0;qa=f+160|0;ra=f+132|0;sa=f+136|0;Da=f+140|0;La=f+144|0;pa=f+148|0;Pa=f+152|0;Oa=f+156|0;Hb=f+676|0;Na=f+568|0;Ka=f+440|0;Gb=f+392|0;Fb=f+356|0;V=f+316|0;U=f+112|0;T=f+304|0;S=f+40|0;P=f+192|0;Q=f+196|0;R=f+200|0;N=f+204|0;O=f+208|0;$=f+212|0;_=f+216|0;Y=f+220|0;X=f+224|0;W=f+228|0;Z=f+232|0;fa=f+236|0;ea=f+240|0;da=f+244|0;ca=f+248|0;ba=f+252|0;aa=f+256|0;Sa=f+260|0;jb=f+264|0;hb=f+268|0;gb=f+272|0;fb=f+276|0;ib=f+280|0;lb=f+672|0;ob=f+612|0;nb=f+564|0;mb=f+560|0;pb=f+436|0;yb=f+428|0;Eb=f+388|0;Db=f+380|0;Bb=f+352|0;Cb=f+320|0;Ab=f+24|0;xb=f+328|0;vb=f+308|0;wb=f+336|0;zb=f+344|0;ub=f+88|0;sb=f+712|0;tb=f+720|0;rb=f+32|0;eb=f+744|0;db=f+752|0;qb=f+760|0;cb=f;bb=f+384|0;ab=f+64|0;C=f+396|0;K=f+400|0;J=f+404|0;I=f+408|0;n=f+412|0;s=f+416|0;t=f+420|0;r=f+72|0;o=f+424|0;p=f+700|0;q=f+774|0;z=f+444|0;A=f+448|0;y=f+16|0;e=f+452|0;w=f+456|0;x=f+775|0;h=f+472|0;g=f+476|0;v=f+480|0;l=f+768|0;k=f+488|0;j=f+492|0;u=f+496|0;E=f+500|0;m=f+504|0;H=f+508|0;G=f+512|0;ja=f+516|0;F=f+520|0;D=f+524|0;ia=f+528|0;ha=f+532|0;_a=f+536|0;$a=f+540|0;Ya=f+544|0;Za=f+548|0;Wa=f+552|0;Ta=f+556|0;Mb=f+668|0;Lb=f+648|0;Kb=f+608|0;Jb=f+600|0;Ib=f+572|0;Ob=f+576|0;Nb=f+580|0;Pb=f+584|0;Qb=f+432|0;Rb=f+588|0;Sb=f+592|0;Vb=f+596|0;Ub=f+48|0;Xb=f+604|0;Wb=f+104|0;bc=f+728|0;Zb=f+620|0;_b=f+624|0;$b=f+628|0;ac=f+632|0;ec=f+324|0;fc=f+636|0;gc=f+640|0;hc=f+644|0;dc=f+332|0;ic=f+652|0;cc=f+656|0;jc=f+660|0;Yb=f+664|0;lc=f+296|0;kc=f+56|0;nc=f+688|0;mc=f+80|0;qc=f+684|0;pc=f+724|0;oc=f+172|0;B=f+184|0;rc=f+124|0;Va=f+284|0;kb=f+716|0;Tb=f+300|0;ma=f+732|0;Xa=f+756|0;Ua=f+460|0;M=f+704|0;ya=f+288|0;ga=f+120|0;c[rc>>2]=b;c[Va>>2]=d;b=c[rc>>2]|0;d=c[Va>>2]|0;c[qc>>2]=b;c[pc>>2]=d;lk(oc,c[qc>>2]|0,c[pc>>2]|0);a[mc+0>>0]=a[oc+0>>0]|0;a[mc+1>>0]=a[oc+1>>0]|0;a[mc+2>>0]=a[oc+2>>0]|0;a[mc+3>>0]=a[oc+3>>0]|0;c[nc>>2]=kb;d=c[nc>>2]|0;a[kc+0>>0]=a[mc+0>>0]|0;a[kc+1>>0]=a[mc+1>>0]|0;a[kc+2>>0]=a[mc+2>>0]|0;a[kc+3>>0]=a[mc+3>>0]|0;c[lc>>2]=d;d=c[lc>>2]|0;c[d+0>>2]=c[kc+0>>2];c[jc>>2]=b;c[ic>>2]=c[jc>>2];c[gc>>2]=dc;c[hc>>2]=-1;d=c[hc>>2]|0;c[ec>>2]=c[gc>>2];c[fc>>2]=d;c[c[ec>>2]>>2]=0;c[cc>>2]=c[dc>>2];c[bc>>2]=cc;c[$b>>2]=Yb;c[ac>>2]=0;d=c[ac>>2]|0;c[Zb>>2]=c[$b>>2];c[_b>>2]=d;c[c[Zb>>2]>>2]=c[_b>>2];a[Wb+0>>0]=a[Yb+0>>0]|0;a[Wb+1>>0]=a[Yb+1>>0]|0;a[Wb+2>>0]=a[Yb+2>>0]|0;a[Wb+3>>0]=a[Yb+3>>0]|0;c[Xb>>2]=Tb;d=c[Xb>>2]|0;a[Ub+0>>0]=a[Wb+0>>0]|0;a[Ub+1>>0]=a[Wb+1>>0]|0;a[Ub+2>>0]=a[Wb+2>>0]|0;a[Ub+3>>0]=a[Wb+3>>0]|0;c[Vb>>2]=d;d=c[Vb>>2]|0;c[d+0>>2]=c[Ub+0>>2];c[Rb>>2]=kb;c[Sb>>2]=Tb;d=c[Sb>>2]|0;c[Pb>>2]=c[Rb>>2];c[Qb>>2]=d;d=c[Qb>>2]|0;c[Ob>>2]=c[Pb>>2];c[Nb>>2]=d;if((c[c[Ob>>2]>>2]|0)==(c[c[Nb>>2]>>2]|0)^1){c[Ib>>2]=kb;c[Jb>>2]=c[Ib>>2];c[Kb>>2]=(c[c[Jb>>2]>>2]|0)+8;c[Lb>>2]=c[Kb>>2];c[Mb>>2]=c[Lb>>2];c[Ta>>2]=c[Mb>>2];c[B>>2]=(c[Ta>>2]|0)+4;rc=c[B>>2]|0;i=f;return rc|0}hk(Ua,b,c[Va>>2]|0);c[Wa>>2]=Ua;rc=c[Wa>>2]|0;c[Ya>>2]=Xa;c[Za>>2]=rc;rc=c[Za>>2]|0;c[_a>>2]=c[Ya>>2];c[$a>>2]=rc;c[c[_a>>2]>>2]=c[$a>>2];a[ab+0>>0]=a[Xa+0>>0]|0;a[ab+1>>0]=a[Xa+1>>0]|0;a[ab+2>>0]=a[Xa+2>>0]|0;a[ab+3>>0]=a[Xa+3>>0]|0;c[bb>>2]=ma;rc=c[bb>>2]|0;a[cb+0>>0]=a[ab+0>>0]|0;a[cb+1>>0]=a[ab+1>>0]|0;a[cb+2>>0]=a[ab+2>>0]|0;a[cb+3>>0]=a[ab+3>>0]|0;c[db>>2]=rc;rc=c[db>>2]|0;c[eb>>2]=cb;c[fb>>2]=c[c[eb>>2]>>2];qc=c[fb>>2]|0;c[gb>>2]=qc;c[hb>>2]=c[gb>>2];c[ib>>2]=c[c[hb>>2]>>2];c[jb>>2]=qc;c[Sa>>2]=c[jb>>2];c[c[Sa>>2]>>2]=0;Sa=c[ib>>2]|0;c[lb>>2]=cb;c[mb>>2]=c[c[lb>>2]>>2];c[nb>>2]=c[mb>>2];c[ob>>2]=c[nb>>2];c[pb>>2]=(c[ob>>2]|0)+4;qc=c[pb>>2]|0;c[qb+0>>2]=c[qc+0>>2];c[qb+4>>2]=c[qc+4>>2];a[rb+0>>0]=a[qb+0>>0]|0;a[rb+1>>0]=a[qb+1>>0]|0;a[rb+2>>0]=a[qb+2>>0]|0;a[rb+3>>0]=a[qb+3>>0]|0;a[rb+4>>0]=a[qb+4>>0]|0;a[rb+5>>0]=a[qb+5>>0]|0;a[rb+6>>0]=a[qb+6>>0]|0;a[rb+7>>0]=a[qb+7>>0]|0;c[sb>>2]=rc;c[tb>>2]=Sa;Sa=c[sb>>2]|0;rc=c[tb>>2]|0;a[ub+0>>0]=a[rb+0>>0]|0;a[ub+1>>0]=a[rb+1>>0]|0;a[ub+2>>0]=a[rb+2>>0]|0;a[ub+3>>0]=a[rb+3>>0]|0;a[ub+4>>0]=a[rb+4>>0]|0;a[ub+5>>0]=a[rb+5>>0]|0;a[ub+6>>0]=a[rb+6>>0]|0;a[ub+7>>0]=a[rb+7>>0]|0;c[vb>>2]=Sa;c[wb>>2]=rc;rc=c[vb>>2]|0;c[xb>>2]=wb;Sa=c[c[xb>>2]>>2]|0;c[yb>>2]=ub;qc=c[yb>>2]|0;c[zb+0>>2]=c[qc+0>>2];c[zb+4>>2]=c[qc+4>>2];a[Ab+0>>0]=a[zb+0>>0]|0;a[Ab+1>>0]=a[zb+1>>0]|0;a[Ab+2>>0]=a[zb+2>>0]|0;a[Ab+3>>0]=a[zb+3>>0]|0;a[Ab+4>>0]=a[zb+4>>0]|0;a[Ab+5>>0]=a[zb+5>>0]|0;a[Ab+6>>0]=a[zb+6>>0]|0;a[Ab+7>>0]=a[zb+7>>0]|0;c[Bb>>2]=rc;c[Cb>>2]=Sa;Sa=c[Bb>>2]|0;c[Db>>2]=Cb;c[Sa>>2]=c[c[Db>>2]>>2];Sa=Sa+4|0;c[Eb>>2]=Ab;rc=c[Eb>>2]|0;c[Sa+0>>2]=c[rc+0>>2];c[Sa+4>>2]=c[rc+4>>2];c[Fb>>2]=Ua;c[Gb>>2]=c[Fb>>2];c[Hb>>2]=c[Gb>>2];c[Na>>2]=0;Sa=c[Hb>>2]|0;c[Oa>>2]=Sa;c[Pa>>2]=c[Oa>>2];c[Ka>>2]=c[c[Pa>>2]>>2];rc=c[Na>>2]|0;c[Qa>>2]=Sa;c[Ra>>2]=c[Qa>>2];c[c[Ra>>2]>>2]=rc;if((c[Ka>>2]|0)!=0){c[Ma>>2]=Sa;c[Ja>>2]=c[Ma>>2];rc=c[Ka>>2]|0;c[La>>2]=(c[Ja>>2]|0)+4;c[pa>>2]=rc;Ja=c[La>>2]|0;if(a[Ja+5>>0]&1){rc=c[Ja>>2]|0;c[Da>>2]=(c[pa>>2]|0)+12;qc=c[Da>>2]|0;c[Ea>>2]=rc;c[Fa>>2]=qc;qc=c[Ea>>2]|0;rc=c[Fa>>2]|0;a[Ha+0>>0]=a[Ga+0>>0]|0;c[Ia>>2]=qc;c[ka>>2]=rc}if(a[Ja+4>>0]&1){rc=c[Ja>>2]|0;c[L>>2]=(c[pa>>2]|0)+8;qc=c[L>>2]|0;c[xa>>2]=rc;c[la>>2]=qc;qc=c[xa>>2]|0;rc=c[la>>2]|0;a[Aa+0>>0]=a[za+0>>0]|0;c[Ba>>2]=qc;c[Ca>>2]=rc}if((c[pa>>2]|0)!=0){qc=c[pa>>2]|0;c[qa>>2]=c[Ja>>2];c[ra>>2]=qc;c[sa>>2]=1;qc=c[ra>>2]|0;rc=c[sa>>2]|0;c[ta>>2]=c[qa>>2];c[ua>>2]=qc;c[va>>2]=rc;Sw(c[ua>>2]|0)}}c[na>>2]=ma;c[oa>>2]=c[na>>2];c[wa>>2]=c[oa>>2];ik(ya,b,c[c[wa>>2]>>2]|0);c[N>>2]=M;c[O>>2]=ya;L=c[O>>2]|0;c[P>>2]=c[N>>2];c[Q>>2]=L;L=c[P>>2]|0;rc=c[Q>>2]|0;c[R+0>>2]=c[rc+0>>2];a[S+0>>0]=a[R+0>>0]|0;a[S+1>>0]=a[R+1>>0]|0;a[S+2>>0]=a[R+2>>0]|0;a[S+3>>0]=a[R+3>>0]|0;c[T>>2]=L;rc=c[T>>2]|0;a[U+0>>0]=a[S+0>>0]|0;a[U+1>>0]=a[S+1>>0]|0;a[U+2>>0]=a[S+2>>0]|0;a[U+3>>0]=a[S+3>>0]|0;c[V>>2]=rc;rc=c[V>>2]|0;c[rc+0>>2]=c[U+0>>2];a[L+4>>0]=a[(c[Q>>2]|0)+4>>0]&1;c[W>>2]=ma;L=c[W>>2]|0;c[X>>2]=L;c[Y>>2]=c[X>>2];c[Z>>2]=c[c[Y>>2]>>2];c[_>>2]=L;c[$>>2]=c[_>>2];c[c[$>>2]>>2]=0;c[aa>>2]=M;c[ba>>2]=c[aa>>2];c[ca>>2]=(c[c[ba>>2]>>2]|0)+8;c[da>>2]=c[ca>>2];c[ea>>2]=c[da>>2];c[fa>>2]=c[ea>>2];c[B>>2]=(c[fa>>2]|0)+4;c[ga>>2]=1;c[ha>>2]=ma;c[ia>>2]=c[ha>>2];c[ja>>2]=c[ia>>2];c[F>>2]=0;L=c[ja>>2]|0;c[G>>2]=L;c[H>>2]=c[G>>2];c[D>>2]=c[c[H>>2]>>2];rc=c[F>>2]|0;c[I>>2]=L;c[J>>2]=c[I>>2];c[c[J>>2]>>2]=rc;if((c[D>>2]|0)==0){rc=c[B>>2]|0;i=f;return rc|0}c[K>>2]=L;c[C>>2]=c[K>>2];rc=c[D>>2]|0;c[E>>2]=(c[C>>2]|0)+4;c[m>>2]=rc;C=c[E>>2]|0;if(a[C+5>>0]&1){rc=c[C>>2]|0;c[u>>2]=(c[m>>2]|0)+12;qc=c[u>>2]|0;c[e>>2]=rc;c[w>>2]=qc;qc=c[e>>2]|0;rc=c[w>>2]|0;a[y+0>>0]=a[x+0>>0]|0;c[z>>2]=qc;c[A>>2]=rc}if(a[C+4>>0]&1){rc=c[C>>2]|0;c[n>>2]=(c[m>>2]|0)+8;qc=c[n>>2]|0;c[o>>2]=rc;c[p>>2]=qc;qc=c[o>>2]|0;rc=c[p>>2]|0;a[r+0>>0]=a[q+0>>0]|0;c[s>>2]=qc;c[t>>2]=rc}if((c[m>>2]|0)==0){rc=c[B>>2]|0;i=f;return rc|0}qc=c[m>>2]|0;c[l>>2]=c[C>>2];c[k>>2]=qc;c[j>>2]=1;qc=c[k>>2]|0;rc=c[j>>2]|0;c[h>>2]=c[l>>2];c[g>>2]=qc;c[v>>2]=rc;Sw(c[g>>2]|0);rc=c[B>>2]|0;i=f;return rc|0}function hk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0,Uc=0,Vc=0,Wc=0,Xc=0,Yc=0,Zc=0,_c=0,$c=0,ad=0,bd=0,cd=0,dd=0,ed=0,fd=0,gd=0,hd=0,id=0,jd=0,kd=0,ld=0,md=0,nd=0,od=0,pd=0,qd=0,rd=0,sd=0,td=0,ud=0,vd=0,wd=0,xd=0,yd=0,zd=0,Ad=0,Bd=0,Cd=0,Dd=0,Ed=0,Fd=0,Gd=0,Hd=0,Id=0,Jd=0,Kd=0,Ld=0,Md=0,Nd=0,Od=0,Pd=0,Qd=0,Rd=0,Sd=0,Td=0,Ud=0,Vd=0,Wd=0,Xd=0,Yd=0,Zd=0,_d=0,$d=0,ae=0,be=0,ce=0,de=0,ee=0,fe=0,ge=0;g=i;i=i+1264|0;nd=g+808|0;md=g+1228|0;ld=g+1168|0;id=g+232|0;pd=g+260|0;qd=g+408|0;fd=g+1172|0;ed=g+1176|0;dd=g+1180|0;od=g+264|0;rd=g+1024|0;jd=g+1008|0;Hc=g+1188|0;Gc=g+228|0;Ec=g+216|0;Dc=g+1164|0;Cc=g+824|0;Fc=g+672|0;Ic=g+644|0;Lc=g+400|0;Kc=g+380|0;Jc=g+364|0;Mc=g+352|0;Vc=g+252|0;$c=g+248|0;_c=g+240|0;Yc=g+236|0;Zc=g+224|0;Xc=g+56|0;Uc=g+212|0;Sc=g+208|0;Tc=g+1160|0;Wc=g+1032|0;Rc=g+88|0;Pc=g+720|0;Qc=g+668|0;Oc=g+24|0;Bc=g+640|0;Ac=g+628|0;Nc=g+392|0;zc=g;yc=g+376|0;xc=g+32|0;Bb=g+360|0;Cb=g+356|0;Ib=g+348|0;Hb=g+344|0;gb=g+268|0;lb=g+272|0;mb=g+276|0;kb=g+96|0;hb=g+288|0;ib=g+292|0;jb=g+1248|0;sb=g+300|0;tb=g+304|0;sa=g+104|0;ob=g+220|0;pb=g+316|0;qb=g+1249|0;db=g+332|0;eb=g+336|0;fb=g+340|0;ab=g+1156|0;bb=g+1108|0;cb=g+1028|0;nb=g+960|0;Ab=g+820|0;$a=g+792|0;Gb=g+716|0;Fb=g+680|0;cd=g+664|0;Eb=g+660|0;Db=g+656|0;bd=g+648|0;ad=g+636|0;vc=g+632|0;wc=g+624|0;tc=g+616|0;uc=g+412|0;rc=g+416|0;Yb=g+384|0;Xb=g+424|0;Vb=g+428|0;Ub=g+432|0;Tb=g+372|0;Wb=g+440|0;Zb=g+444|0;ac=g+448|0;$b=g+452|0;_b=g+456|0;bc=g+460|0;kc=g+464|0;qc=g+468|0;pc=g+472|0;nc=g+476|0;oc=g+480|0;mc=g+8|0;jc=g+488|0;hc=g+492|0;ic=g+496|0;lc=g+280|0;gc=g+48|0;ec=g+516|0;fc=g+520|0;dc=g+136|0;Sb=g+528|0;Rb=g+532|0;cc=g+536|0;Qb=g+72|0;Pb=g+548|0;Nb=g+184|0;Lb=g+556|0;Mb=g+308|0;Jb=g+564|0;Kb=g+312|0;gd=g+572|0;sc=g+576|0;Ob=g+580|0;hd=g+592|0;ub=g+596|0;vb=g+600|0;_a=g+604|0;rb=g+608|0;Ya=g+612|0;za=g+1184|0;ya=g+1192|0;wa=g+1200|0;va=g+1208|0;ua=g+1104|0;xa=g+1224|0;Aa=g+1232|0;Da=g+1240|0;Ca=g+956|0;Ba=g+952|0;Ea=g+816|0;Na=g+812|0;Ta=g+788|0;Sa=g+776|0;Qa=g+712|0;Ra=g+704|0;Pa=g+80|0;Ma=g+684|0;Ka=g+688|0;La=g+692|0;Oa=g+696|0;Ja=g+120|0;Ha=g+652|0;Ia=g+708|0;Ga=g+112|0;ta=g+724|0;zb=g+728|0;Fa=g+736|0;yb=g+168|0;xb=g+744|0;wb=g+152|0;ud=g+748|0;td=g+752|0;sd=g+756|0;qa=g+760|0;ra=g+764|0;la=g+1216|0;ka=g+772|0;ia=g+420|0;P=g+780|0;Q=g+784|0;O=g+144|0;L=g+796|0;M=g+800|0;Y=g+1250|0;W=g+1244|0;X=g+436|0;V=g+176|0;S=g+828|0;T=g+832|0;U=g+1251|0;fa=g+848|0;ga=g+852|0;ha=g+856|0;ca=g+860|0;da=g+864|0;ea=g+868|0;R=g+872|0;oa=g+876|0;ba=g+880|0;ja=g+884|0;ma=g+888|0;Wa=g+892|0;na=g+896|0;pa=g+900|0;Va=g+904|0;Ua=g+908|0;xd=g+912|0;I=g+916|0;J=g+920|0;C=g+484|0;K=g+924|0;w=g+928|0;q=g+932|0;p=g+936|0;r=g+160|0;u=g+940|0;t=g+944|0;s=g+1252|0;m=g+948|0;n=g+512|0;l=g+16|0;h=g+964|0;j=g+968|0;k=g+1253|0;A=g+976|0;B=g+524|0;o=g+980|0;y=g+984|0;f=g+988|0;z=g+992|0;v=g+996|0;G=g+1e3|0;x=g+1004|0;D=g+544|0;E=g+1012|0;N=g+1016|0;F=g+1020|0;H=g+552|0;aa=g+1040|0;$=g+1044|0;yd=g+1048|0;zd=g+560|0;Ad=g+1052|0;Pd=g+1056|0;Gd=g+1060|0;Bd=g+568|0;Dd=g+1064|0;vd=g+1068|0;Ed=g+1072|0;Cd=g+128|0;Id=g+1080|0;Kd=g+1084|0;Jd=g+1088|0;Fd=g+1096|0;Hd=g+192|0;Nd=g+1112|0;Md=g+1116|0;Ld=g+40|0;Rd=g+1120|0;Td=g+1124|0;Sd=g+1128|0;Od=g+1136|0;Qd=g+200|0;Wd=g+1148|0;Vd=g+256|0;Ud=g+64|0;Zd=g+368|0;Yd=g+244|0;_d=g+676|0;$d=g+620|0;ae=g+1144|0;be=g+404|0;ce=g+768|0;de=g+1212|0;ee=g+1076|0;fe=g+1220|0;ge=g+1152|0;wd=g+1236|0;kd=g+972|0;_=g+500|0;Xd=g+840|0;Za=g+804|0;Xa=g+320|0;Z=g+296|0;c[ge>>2]=d;c[wd>>2]=e;c[fe>>2]=c[ge>>2];c[ee>>2]=(c[fe>>2]|0)+8;c[de>>2]=c[ee>>2];c[kd>>2]=c[de>>2];c[be>>2]=c[kd>>2];c[ce>>2]=1;d=c[ce>>2]|0;c[g+1196>>2]=c[be>>2];c[ae>>2]=d;c[g+1204>>2]=0;d=Qw(c[ae>>2]<<4)|0;e=c[kd>>2]|0;c[_d>>2]=Xd;c[$d>>2]=e;e=c[$d>>2]|0;c[Zd>>2]=c[_d>>2];c[Yd>>2]=e;e=c[Zd>>2]|0;c[e>>2]=c[Yd>>2];a[e+4>>0]=0;a[e+5>>0]=0;a[Ud+0>>0]=a[Xd+0>>0]|0;a[Ud+1>>0]=a[Xd+1>>0]|0;a[Ud+2>>0]=a[Xd+2>>0]|0;a[Ud+3>>0]=a[Xd+3>>0]|0;a[Ud+4>>0]=a[Xd+4>>0]|0;a[Ud+5>>0]=a[Xd+5>>0]|0;a[Ud+6>>0]=a[Xd+6>>0]|0;a[Ud+7>>0]=a[Xd+7>>0]|0;c[Wd>>2]=_;c[Vd>>2]=d;d=c[Wd>>2]|0;e=c[Vd>>2]|0;a[Qd+0>>0]=a[Ud+0>>0]|0;a[Qd+1>>0]=a[Ud+1>>0]|0;a[Qd+2>>0]=a[Ud+2>>0]|0;a[Qd+3>>0]=a[Ud+3>>0]|0;a[Qd+4>>0]=a[Ud+4>>0]|0;a[Qd+5>>0]=a[Ud+5>>0]|0;a[Qd+6>>0]=a[Ud+6>>0]|0;a[Qd+7>>0]=a[Ud+7>>0]|0;c[Td>>2]=d;c[Sd>>2]=e;e=c[Td>>2]|0;c[Rd>>2]=Sd;d=c[c[Rd>>2]>>2]|0;c[Pd>>2]=Qd;Pd=c[Pd>>2]|0;c[Od+0>>2]=c[Pd+0>>2];c[Od+4>>2]=c[Pd+4>>2];a[Ld+0>>0]=a[Od+0>>0]|0;a[Ld+1>>0]=a[Od+1>>0]|0;a[Ld+2>>0]=a[Od+2>>0]|0;a[Ld+3>>0]=a[Od+3>>0]|0;a[Ld+4>>0]=a[Od+4>>0]|0;a[Ld+5>>0]=a[Od+5>>0]|0;a[Ld+6>>0]=a[Od+6>>0]|0;a[Ld+7>>0]=a[Od+7>>0]|0;c[Nd>>2]=e;c[Md>>2]=d;d=c[Nd>>2]|0;e=c[Md>>2]|0;a[Hd+0>>0]=a[Ld+0>>0]|0;a[Hd+1>>0]=a[Ld+1>>0]|0;a[Hd+2>>0]=a[Ld+2>>0]|0;a[Hd+3>>0]=a[Ld+3>>0]|0;a[Hd+4>>0]=a[Ld+4>>0]|0;a[Hd+5>>0]=a[Ld+5>>0]|0;a[Hd+6>>0]=a[Ld+6>>0]|0;a[Hd+7>>0]=a[Ld+7>>0]|0;c[Kd>>2]=d;c[Jd>>2]=e;e=c[Kd>>2]|0;c[Id>>2]=Jd;d=c[c[Id>>2]>>2]|0;c[Gd>>2]=Hd;Gd=c[Gd>>2]|0;c[Fd+0>>2]=c[Gd+0>>2];c[Fd+4>>2]=c[Gd+4>>2];a[Cd+0>>0]=a[Fd+0>>0]|0;a[Cd+1>>0]=a[Fd+1>>0]|0;a[Cd+2>>0]=a[Fd+2>>0]|0;a[Cd+3>>0]=a[Fd+3>>0]|0;a[Cd+4>>0]=a[Fd+4>>0]|0;a[Cd+5>>0]=a[Fd+5>>0]|0;a[Cd+6>>0]=a[Fd+6>>0]|0;a[Cd+7>>0]=a[Fd+7>>0]|0;c[vd>>2]=e;c[Ed>>2]=d;vd=c[vd>>2]|0;c[Dd>>2]=Ed;c[vd>>2]=c[c[Dd>>2]>>2];vd=vd+4|0;c[Bd>>2]=Cd;d=c[Bd>>2]|0;c[vd+0>>2]=c[d+0>>2];c[vd+4>>2]=c[d+4>>2];vd=c[kd>>2]|0;c[Ad>>2]=_;c[zd>>2]=c[Ad>>2];c[yd>>2]=c[zd>>2];c[xd>>2]=(c[c[yd>>2]>>2]|0)+8;d=c[xd>>2]|0;e=c[wd>>2]|0;c[ud>>2]=vd;c[td>>2]=d;c[sd>>2]=e;e=c[td>>2]|0;if((e|0)!=0)c[e>>2]=c[c[sd>>2]>>2];c[jd>>2]=_;c[rd>>2]=c[jd>>2];c[od>>2]=c[rd>>2];a[(c[od>>2]|0)+8>>0]=1;ge=c[kd>>2]|0;c[ld>>2]=_;c[md>>2]=c[ld>>2];c[nd>>2]=c[md>>2];c[id>>2]=(c[c[nd>>2]>>2]|0)+12;id=c[id>>2]|0;c[pd>>2]=ge;c[qd>>2]=id;id=c[qd>>2]|0;if((id|0)!=0)c[id>>2]=0;c[dd>>2]=_;c[ed>>2]=c[dd>>2];c[fd>>2]=c[ed>>2];a[(c[fd>>2]|0)+9>>0]=1;c[gd>>2]=_;ge=c[gd>>2]|0;c[Jb>>2]=hd;c[Kb>>2]=ge;ge=c[Kb>>2]|0;c[Lb>>2]=c[Jb>>2];c[Mb>>2]=ge;c[c[Lb>>2]>>2]=c[Mb>>2];a[Nb+0>>0]=a[hd+0>>0]|0;a[Nb+1>>0]=a[hd+1>>0]|0;a[Nb+2>>0]=a[hd+2>>0]|0;a[Nb+3>>0]=a[hd+3>>0]|0;c[Pb>>2]=Ob;Jb=c[Pb>>2]|0;a[Qb+0>>0]=a[Nb+0>>0]|0;a[Qb+1>>0]=a[Nb+1>>0]|0;a[Qb+2>>0]=a[Nb+2>>0]|0;a[Qb+3>>0]=a[Nb+3>>0]|0;c[Rb>>2]=Jb;Jb=c[Rb>>2]|0;c[Sb>>2]=Qb;c[Tb>>2]=c[c[Sb>>2]>>2];ge=c[Tb>>2]|0;c[Ub>>2]=ge;c[Vb>>2]=c[Ub>>2];c[Wb>>2]=c[c[Vb>>2]>>2];c[Xb>>2]=ge;c[Yb>>2]=c[Xb>>2];c[c[Yb>>2]>>2]=0;ge=c[Wb>>2]|0;c[Zb>>2]=Qb;c[_b>>2]=c[c[Zb>>2]>>2];c[$b>>2]=c[_b>>2];c[ac>>2]=c[$b>>2];c[bc>>2]=(c[ac>>2]|0)+4;fe=c[bc>>2]|0;c[cc+0>>2]=c[fe+0>>2];c[cc+4>>2]=c[fe+4>>2];a[dc+0>>0]=a[cc+0>>0]|0;a[dc+1>>0]=a[cc+1>>0]|0;a[dc+2>>0]=a[cc+2>>0]|0;a[dc+3>>0]=a[cc+3>>0]|0;a[dc+4>>0]=a[cc+4>>0]|0;a[dc+5>>0]=a[cc+5>>0]|0;a[dc+6>>0]=a[cc+6>>0]|0;a[dc+7>>0]=a[cc+7>>0]|0;c[ec>>2]=Jb;c[fc>>2]=ge;ge=c[ec>>2]|0;Jb=c[fc>>2]|0;a[gc+0>>0]=a[dc+0>>0]|0;a[gc+1>>0]=a[dc+1>>0]|0;a[gc+2>>0]=a[dc+2>>0]|0;a[gc+3>>0]=a[dc+3>>0]|0;a[gc+4>>0]=a[dc+4>>0]|0;a[gc+5>>0]=a[dc+5>>0]|0;a[gc+6>>0]=a[dc+6>>0]|0;a[gc+7>>0]=a[dc+7>>0]|0;c[hc>>2]=ge;c[ic>>2]=Jb;Jb=c[hc>>2]|0;c[jc>>2]=ic;ge=c[c[jc>>2]>>2]|0;c[kc>>2]=gc;fe=c[kc>>2]|0;c[lc+0>>2]=c[fe+0>>2];c[lc+4>>2]=c[fe+4>>2];a[mc+0>>0]=a[lc+0>>0]|0;a[mc+1>>0]=a[lc+1>>0]|0;a[mc+2>>0]=a[lc+2>>0]|0;a[mc+3>>0]=a[lc+3>>0]|0;a[mc+4>>0]=a[lc+4>>0]|0;a[mc+5>>0]=a[lc+5>>0]|0;a[mc+6>>0]=a[lc+6>>0]|0;a[mc+7>>0]=a[lc+7>>0]|0;c[nc>>2]=Jb;c[oc>>2]=ge;ge=c[nc>>2]|0;c[pc>>2]=oc;c[ge>>2]=c[c[pc>>2]>>2];ge=ge+4|0;c[qc>>2]=mc;Jb=c[qc>>2]|0;c[ge+0>>2]=c[Jb+0>>2];c[ge+4>>2]=c[Jb+4>>2];c[rc>>2]=Ob;ge=c[rc>>2]|0;c[tc>>2]=sc;c[uc>>2]=ge;ge=c[uc>>2]|0;c[vc>>2]=c[tc>>2];c[wc>>2]=ge;c[c[vc>>2]>>2]=c[wc>>2];a[xc+0>>0]=a[sc+0>>0]|0;a[xc+1>>0]=a[sc+1>>0]|0;a[xc+2>>0]=a[sc+2>>0]|0;a[xc+3>>0]=a[sc+3>>0]|0;c[yc>>2]=Xa;ge=c[yc>>2]|0;a[zc+0>>0]=a[xc+0>>0]|0;a[zc+1>>0]=a[xc+1>>0]|0;a[zc+2>>0]=a[xc+2>>0]|0;a[zc+3>>0]=a[xc+3>>0]|0;c[Ac>>2]=ge;ge=c[Ac>>2]|0;c[Bc>>2]=zc;c[Cc>>2]=c[c[Bc>>2]>>2];Jb=c[Cc>>2]|0;c[Dc>>2]=Jb;c[Ec>>2]=c[Dc>>2];c[Fc>>2]=c[c[Ec>>2]>>2];c[Gc>>2]=Jb;c[Hc>>2]=c[Gc>>2];c[c[Hc>>2]>>2]=0;Jb=c[Fc>>2]|0;c[Ic>>2]=zc;c[Jc>>2]=c[c[Ic>>2]>>2];c[Kc>>2]=c[Jc>>2];c[Lc>>2]=c[Kc>>2];c[Mc>>2]=(c[Lc>>2]|0)+4;fe=c[Mc>>2]|0;c[Nc+0>>2]=c[fe+0>>2];c[Nc+4>>2]=c[fe+4>>2];a[Oc+0>>0]=a[Nc+0>>0]|0;a[Oc+1>>0]=a[Nc+1>>0]|0;a[Oc+2>>0]=a[Nc+2>>0]|0;a[Oc+3>>0]=a[Nc+3>>0]|0;a[Oc+4>>0]=a[Nc+4>>0]|0;a[Oc+5>>0]=a[Nc+5>>0]|0;a[Oc+6>>0]=a[Nc+6>>0]|0;a[Oc+7>>0]=a[Nc+7>>0]|0;c[Pc>>2]=ge;c[Qc>>2]=Jb;Jb=c[Pc>>2]|0;ge=c[Qc>>2]|0;a[Rc+0>>0]=a[Oc+0>>0]|0;a[Rc+1>>0]=a[Oc+1>>0]|0;a[Rc+2>>0]=a[Oc+2>>0]|0;a[Rc+3>>0]=a[Oc+3>>0]|0;a[Rc+4>>0]=a[Oc+4>>0]|0;a[Rc+5>>0]=a[Oc+5>>0]|0;a[Rc+6>>0]=a[Oc+6>>0]|0;a[Rc+7>>0]=a[Oc+7>>0]|0;c[Sc>>2]=Jb;c[Tc>>2]=ge;ge=c[Sc>>2]|0;c[Uc>>2]=Tc;Jb=c[c[Uc>>2]>>2]|0;c[Vc>>2]=Rc;fe=c[Vc>>2]|0;c[Wc+0>>2]=c[fe+0>>2];c[Wc+4>>2]=c[fe+4>>2];a[Xc+0>>0]=a[Wc+0>>0]|0;a[Xc+1>>0]=a[Wc+1>>0]|0;a[Xc+2>>0]=a[Wc+2>>0]|0;a[Xc+3>>0]=a[Wc+3>>0]|0;a[Xc+4>>0]=a[Wc+4>>0]|0;a[Xc+5>>0]=a[Wc+5>>0]|0;a[Xc+6>>0]=a[Wc+6>>0]|0;a[Xc+7>>0]=a[Wc+7>>0]|0;c[Yc>>2]=ge;c[Zc>>2]=Jb;Jb=c[Yc>>2]|0;c[_c>>2]=Zc;c[Jb>>2]=c[c[_c>>2]>>2];Jb=Jb+4|0;c[$c>>2]=Xc;ge=c[$c>>2]|0;c[Jb+0>>2]=c[ge+0>>2];c[Jb+4>>2]=c[ge+4>>2];c[ad>>2]=Ob;c[bd>>2]=c[ad>>2];c[cd>>2]=c[bd>>2];c[Eb>>2]=0;Jb=c[cd>>2]|0;c[Fb>>2]=Jb;c[Gb>>2]=c[Fb>>2];c[Db>>2]=c[c[Gb>>2]>>2];ge=c[Eb>>2]|0;c[Hb>>2]=Jb;c[Ib>>2]=c[Hb>>2];c[c[Ib>>2]>>2]=ge;if((c[Db>>2]|0)!=0){c[Cb>>2]=Jb;c[Bb>>2]=c[Cb>>2];ge=c[Db>>2]|0;c[Ab>>2]=(c[Bb>>2]|0)+4;c[$a>>2]=ge;Ab=c[Ab>>2]|0;if(a[Ab+5>>0]&1){ge=c[Ab>>2]|0;c[nb>>2]=(c[$a>>2]|0)+12;fe=c[nb>>2]|0;c[ob>>2]=ge;c[pb>>2]=fe;fe=c[ob>>2]|0;ge=c[pb>>2]|0;a[sa+0>>0]=a[qb+0>>0]|0;c[sb>>2]=fe;c[tb>>2]=ge}if(a[Ab+4>>0]&1){ge=c[Ab>>2]|0;c[gb>>2]=(c[$a>>2]|0)+8;fe=c[gb>>2]|0;c[hb>>2]=ge;c[ib>>2]=fe;fe=c[hb>>2]|0;ge=c[ib>>2]|0;a[kb+0>>0]=a[jb+0>>0]|0;c[lb>>2]=fe;c[mb>>2]=ge}if((c[$a>>2]|0)!=0){fe=c[$a>>2]|0;c[ab>>2]=c[Ab>>2];c[bb>>2]=fe;c[cb>>2]=1;fe=c[bb>>2]|0;ge=c[cb>>2]|0;c[db>>2]=c[ab>>2];c[eb>>2]=fe;c[fb>>2]=ge;Sw(c[eb>>2]|0)}}c[Ya>>2]=Xa;ge=c[Ya>>2]|0;c[_a>>2]=Za;c[rb>>2]=ge;ge=c[rb>>2]|0;c[ub>>2]=c[_a>>2];c[vb>>2]=ge;c[c[ub>>2]>>2]=c[vb>>2];a[wb+0>>0]=a[Za+0>>0]|0;a[wb+1>>0]=a[Za+1>>0]|0;a[wb+2>>0]=a[Za+2>>0]|0;a[wb+3>>0]=a[Za+3>>0]|0;c[xb>>2]=b;ge=c[xb>>2]|0;a[yb+0>>0]=a[wb+0>>0]|0;a[yb+1>>0]=a[wb+1>>0]|0;a[yb+2>>0]=a[wb+2>>0]|0;a[yb+3>>0]=a[wb+3>>0]|0;c[zb>>2]=ge;ge=c[zb>>2]|0;c[ta>>2]=yb;c[ua>>2]=c[c[ta>>2]>>2];sa=c[ua>>2]|0;c[va>>2]=sa;c[wa>>2]=c[va>>2];c[xa>>2]=c[c[wa>>2]>>2];c[ya>>2]=sa;c[za>>2]=c[ya>>2];c[c[za>>2]>>2]=0;sa=c[xa>>2]|0;c[Aa>>2]=yb;c[Ba>>2]=c[c[Aa>>2]>>2];c[Ca>>2]=c[Ba>>2];c[Da>>2]=c[Ca>>2];c[Ea>>2]=(c[Da>>2]|0)+4;fe=c[Ea>>2]|0;c[Fa+0>>2]=c[fe+0>>2];c[Fa+4>>2]=c[fe+4>>2];a[Ga+0>>0]=a[Fa+0>>0]|0;a[Ga+1>>0]=a[Fa+1>>0]|0;a[Ga+2>>0]=a[Fa+2>>0]|0;a[Ga+3>>0]=a[Fa+3>>0]|0;a[Ga+4>>0]=a[Fa+4>>0]|0;a[Ga+5>>0]=a[Fa+5>>0]|0;a[Ga+6>>0]=a[Fa+6>>0]|0;a[Ga+7>>0]=a[Fa+7>>0]|0;c[Ha>>2]=ge;c[Ia>>2]=sa;sa=c[Ha>>2]|0;ge=c[Ia>>2]|0;a[Ja+0>>0]=a[Ga+0>>0]|0;a[Ja+1>>0]=a[Ga+1>>0]|0;a[Ja+2>>0]=a[Ga+2>>0]|0;a[Ja+3>>0]=a[Ga+3>>0]|0;a[Ja+4>>0]=a[Ga+4>>0]|0;a[Ja+5>>0]=a[Ga+5>>0]|0;a[Ja+6>>0]=a[Ga+6>>0]|0;a[Ja+7>>0]=a[Ga+7>>0]|0;c[Ka>>2]=sa;c[La>>2]=ge;ge=c[Ka>>2]|0;c[Ma>>2]=La;sa=c[c[Ma>>2]>>2]|0;c[Na>>2]=Ja;fe=c[Na>>2]|0;c[Oa+0>>2]=c[fe+0>>2];c[Oa+4>>2]=c[fe+4>>2];a[Pa+0>>0]=a[Oa+0>>0]|0;a[Pa+1>>0]=a[Oa+1>>0]|0;a[Pa+2>>0]=a[Oa+2>>0]|0;a[Pa+3>>0]=a[Oa+3>>0]|0;a[Pa+4>>0]=a[Oa+4>>0]|0;a[Pa+5>>0]=a[Oa+5>>0]|0;a[Pa+6>>0]=a[Oa+6>>0]|0;a[Pa+7>>0]=a[Oa+7>>0]|0;c[Qa>>2]=ge;c[Ra>>2]=sa;sa=c[Qa>>2]|0;c[Sa>>2]=Ra;c[sa>>2]=c[c[Sa>>2]>>2];sa=sa+4|0;c[Ta>>2]=Pa;ge=c[Ta>>2]|0;c[sa+0>>2]=c[ge+0>>2];c[sa+4>>2]=c[ge+4>>2];c[Ua>>2]=Xa;c[Va>>2]=c[Ua>>2];c[Wa>>2]=c[Va>>2];c[na>>2]=0;sa=c[Wa>>2]|0;c[ma>>2]=sa;c[ja>>2]=c[ma>>2];c[pa>>2]=c[c[ja>>2]>>2];ge=c[na>>2]|0;c[ka>>2]=sa;c[la>>2]=c[ka>>2];c[c[la>>2]>>2]=ge;if((c[pa>>2]|0)!=0){c[ra>>2]=sa;c[qa>>2]=c[ra>>2];ja=c[pa>>2]|0;c[oa>>2]=(c[qa>>2]|0)+4;c[ba>>2]=ja;ja=c[oa>>2]|0;if(a[ja+5>>0]&1){ge=c[ja>>2]|0;c[R>>2]=(c[ba>>2]|0)+12;fe=c[R>>2]|0;c[S>>2]=ge;c[T>>2]=fe;fe=c[S>>2]|0;ge=c[T>>2]|0;a[V+0>>0]=a[U+0>>0]|0;c[W>>2]=fe;c[X>>2]=ge}if(a[ja+4>>0]&1){ge=c[ja>>2]|0;c[ia>>2]=(c[ba>>2]|0)+8;fe=c[ia>>2]|0;c[L>>2]=ge;c[M>>2]=fe;fe=c[L>>2]|0;ge=c[M>>2]|0;a[O+0>>0]=a[Y+0>>0]|0;c[P>>2]=fe;c[Q>>2]=ge}if((c[ba>>2]|0)!=0){fe=c[ba>>2]|0;c[ca>>2]=c[ja>>2];c[da>>2]=fe;c[ea>>2]=1;fe=c[da>>2]|0;ge=c[ea>>2]|0;c[fa>>2]=c[ca>>2];c[ga>>2]=fe;c[ha>>2]=ge;Sw(c[ga>>2]|0)}}c[Z>>2]=1;c[$>>2]=_;c[aa>>2]=c[$>>2];c[N>>2]=c[aa>>2];c[F>>2]=0;L=c[N>>2]|0;c[E>>2]=L;c[D>>2]=c[E>>2];c[H>>2]=c[c[D>>2]>>2];ge=c[F>>2]|0;c[K>>2]=L;c[C>>2]=c[K>>2];c[c[C>>2]>>2]=ge;if((c[H>>2]|0)==0){i=g;return}c[J>>2]=L;c[I>>2]=c[J>>2];C=c[H>>2]|0;c[G>>2]=(c[I>>2]|0)+4;c[x>>2]=C;C=c[G>>2]|0;if(a[C+5>>0]&1){ge=c[C>>2]|0;c[v>>2]=(c[x>>2]|0)+12;fe=c[v>>2]|0;c[h>>2]=ge;c[j>>2]=fe;fe=c[h>>2]|0;ge=c[j>>2]|0;a[l+0>>0]=a[k+0>>0]|0;c[m>>2]=fe;c[n>>2]=ge}if(a[C+4>>0]&1){ge=c[C>>2]|0;c[w>>2]=(c[x>>2]|0)+8;fe=c[w>>2]|0;c[u>>2]=ge;c[t>>2]=fe;fe=c[u>>2]|0;ge=c[t>>2]|0;a[r+0>>0]=a[s+0>>0]|0;c[q>>2]=fe;c[p>>2]=ge}if((c[x>>2]|0)==0){i=g;return}fe=c[x>>2]|0;c[y>>2]=c[C>>2];c[f>>2]=fe;c[z>>2]=1;fe=c[f>>2]|0;ge=c[z>>2]|0;c[A>>2]=c[y>>2];c[B>>2]=fe;c[o>>2]=ge;Sw(c[B>>2]|0);i=g;return}function ik(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0.0,Hb=0.0;m=i;i=i+528|0;rb=m+236|0;qb=m+500|0;ib=m+492|0;hb=m+476|0;fb=m+460|0;gb=m+220|0;mb=m+436|0;nb=m+416|0;kb=m+224|0;lb=m+20|0;jb=m+24|0;pb=m+28|0;Ya=m+32|0;Za=m+36|0;Wa=m+40|0;Xa=m+444|0;Va=m+104|0;$a=m+48|0;Ta=m+52|0;Ja=m+56|0;Ma=m+60|0;La=m+64|0;Ka=m+68|0;Qa=m+72|0;Ra=m+76|0;Sa=m+80|0;Na=m+84|0;Oa=m+88|0;Pa=m+92|0;ab=m+96|0;bb=m+100|0;cb=m+440|0;Ua=m+228|0;eb=m+108|0;db=m+112|0;Ia=m+116|0;Ga=m+120|0;Fa=m+124|0;Ea=m+128|0;ja=m+132|0;ia=m+136|0;Ha=m+140|0;sb=m+144|0;tb=m+148|0;ub=m+152|0;vb=m+156|0;wb=m+160|0;xb=m+164|0;yb=m+168|0;ka=m+172|0;sa=m+176|0;ta=m+180|0;ua=m+184|0;qa=m+188|0;ra=m+192|0;pa=m;ma=m+200|0;na=m+204|0;oa=m+520|0;zb=m+480|0;Ab=m+488|0;Bb=m+496|0;Ba=m+504|0;Aa=m+512|0;za=m+232|0;ya=m+516|0;xa=m+240|0;wa=m+244|0;va=m+248|0;Ca=m+252|0;ha=m+256|0;V=m+260|0;U=m+264|0;ga=m+268|0;T=m+272|0;Z=m+276|0;_=m+280|0;X=m+284|0;Y=m+288|0;W=m+292|0;aa=m+296|0;R=m+300|0;ba=m+304|0;P=m+308|0;Q=m+312|0;J=m+316|0;K=m+320|0;M=m+324|0;L=m+328|0;ea=m+332|0;da=m+336|0;G=m+340|0;fa=m+344|0;I=m+348|0;H=m+352|0;F=m+356|0;D=m+360|0;k=m+364|0;j=m+368|0;C=m+372|0;h=m+376|0;y=m+380|0;z=m+384|0;A=m+388|0;u=m+392|0;t=m+396|0;f=m+400|0;v=m+404|0;p=m+408|0;o=m+412|0;n=m+196|0;s=m+420|0;r=m+424|0;q=m+428|0;Cb=m+432|0;Db=m+44|0;Eb=m+8|0;Fb=m+4|0;l=m+12|0;E=m+452|0;x=m+521|0;B=m+456|0;N=m+448|0;ob=m+208|0;_a=m+212|0;Da=m+468|0;la=m+216|0;O=m+484|0;$=m+508|0;S=m+16|0;w=m+464|0;c[Fb>>2]=d;c[l>>2]=e;e=c[Fb>>2]|0;c[Eb>>2]=e;c[Db>>2]=(c[Eb>>2]|0)+12;c[Cb>>2]=c[Db>>2];d=(c[l>>2]|0)+8|0;c[Ab>>2]=c[Cb>>2];c[Bb>>2]=d;d=c[c[Bb>>2]>>2]|0;c[m+472>>2]=c[Ab>>2];c[zb>>2]=d;c[(c[l>>2]|0)+4>>2]=c[zb>>2];c[yb>>2]=e;c[xb>>2]=c[yb>>2];c[wb>>2]=c[xb>>2];c[vb>>2]=c[wb>>2];c[ub>>2]=(c[vb>>2]|0)+4;c[tb>>2]=c[ub>>2];c[sb>>2]=c[tb>>2];c[E>>2]=c[c[sb>>2]>>2];a[x>>0]=0;a:do if((c[E>>2]|0)!=0){d=c[E>>2]|0;c[rb>>2]=c[(c[l>>2]|0)+4>>2];c[qb>>2]=d;d=c[rb>>2]|0;rb=c[qb>>2]|0;if((c[qb>>2]&(c[qb>>2]|0)-1|0)!=0)qb=(d>>>0)%(rb>>>0)|0;else qb=d&rb-1;c[N>>2]=qb;Fb=c[N>>2]|0;c[fb>>2]=e;c[gb>>2]=Fb;Fb=c[gb>>2]|0;c[hb>>2]=c[fb>>2];c[ib>>2]=c[hb>>2];c[B>>2]=c[(c[c[ib>>2]>>2]|0)+(Fb<<2)>>2];Fb=c[B>>2]|0;c[kb>>2]=jb;c[lb>>2]=-1;Eb=c[lb>>2]|0;c[mb>>2]=c[kb>>2];c[nb>>2]=Eb;c[c[mb>>2]>>2]=0;c[ob>>2]=c[jb>>2];c[pb>>2]=ob;if((Fb|0)!=0){c[B>>2]=c[c[B>>2]>>2];while(1){Fb=c[B>>2]|0;c[Wa>>2]=Va;c[Xa>>2]=-1;Eb=c[Xa>>2]|0;c[Ya>>2]=c[Wa>>2];c[Za>>2]=Eb;c[c[Ya>>2]>>2]=0;c[_a>>2]=c[Va>>2];c[$a>>2]=_a;if((Fb|0)==0)break a;gb=c[E>>2]|0;c[Ta>>2]=c[(c[B>>2]|0)+4>>2];c[Ja>>2]=gb;gb=c[Ta>>2]|0;fb=c[Ja>>2]|0;if((c[Ja>>2]&(c[Ja>>2]|0)-1|0)!=0)fb=(gb>>>0)%(fb>>>0)|0;else fb=gb&fb-1;if((fb|0)!=(c[N>>2]|0))break a;c[Ka>>2]=e;c[La>>2]=(c[Ka>>2]|0)+16;c[Ma>>2]=c[La>>2];Fb=(c[B>>2]|0)+8|0;Eb=(c[l>>2]|0)+8|0;c[Na>>2]=c[Ma>>2];c[Oa>>2]=Fb;c[Pa>>2]=Eb;Eb=c[Oa>>2]|0;Fb=c[Pa>>2]|0;c[Qa>>2]=c[Na>>2];c[Ra>>2]=Eb;c[Sa>>2]=Fb;if((c[c[Ra>>2]>>2]|0)==(c[c[Sa>>2]>>2]|0))break;c[B>>2]=c[c[B>>2]>>2]}Fb=c[B>>2]|0;c[f>>2]=w;c[v>>2]=Fb;Fb=c[f>>2]|0;Db=c[v>>2]|0;c[u>>2]=Fb;c[t>>2]=Db;Db=c[u>>2]|0;Fb=c[t>>2]|0;c[Db>>2]=Fb;c[s>>2]=b;c[r>>2]=w;c[q>>2]=x;Db=c[s>>2]|0;Fb=c[q>>2]|0;Eb=c[r>>2]|0;c[p>>2]=Db;c[o>>2]=Eb;c[n>>2]=Fb;Fb=c[p>>2]|0;Eb=c[o>>2]|0;c[Fb+0>>2]=c[Eb+0>>2];Fb=Fb+4|0;Eb=c[n>>2]|0;Eb=a[Eb>>0]|0;Eb=Eb&1;Eb=Eb&1;a[Fb>>0]=Eb;i=m;return}}while(0);c[cb>>2]=e;c[bb>>2]=(c[cb>>2]|0)+12;c[ab>>2]=c[bb>>2];Hb=+(((c[c[ab>>2]>>2]|0)+1|0)>>>0);Gb=+((c[E>>2]|0)>>>0);c[db>>2]=e;c[eb>>2]=(c[db>>2]|0)+16;c[Ua>>2]=c[eb>>2];if(!(!(Hb>Gb*+g[c[Ua>>2]>>2])?(c[E>>2]|0)!=0:0)){Ja=c[E>>2]<<1;c[Ia>>2]=c[E>>2];if((c[Ia>>2]|0)>>>0>2)Ia=(c[Ia>>2]&(c[Ia>>2]|0)-1|0)!=0^1;else Ia=0;c[Da>>2]=Ja+((Ia^1)&1);c[Ea>>2]=e;c[Fa>>2]=(c[Ea>>2]|0)+12;c[Ga>>2]=c[Fa>>2];Hb=+(((c[c[Ga>>2]>>2]|0)+1|0)>>>0);c[Ha>>2]=e;c[ia>>2]=(c[Ha>>2]|0)+16;c[ja>>2]=c[ia>>2];g[ka>>2]=Hb/+g[c[ja>>2]>>2];c[la>>2]=~~+ca(+(+g[ka>>2]))>>>0;c[ma>>2]=Da;c[na>>2]=la;ja=c[ma>>2]|0;ia=c[na>>2]|0;a[pa+0>>0]=a[oa+0>>0]|0;c[qa>>2]=ja;c[ra>>2]=ia;ia=c[qa>>2]|0;ja=c[ra>>2]|0;c[sa>>2]=pa;c[ta>>2]=ia;c[ua>>2]=ja;jk(e,c[((c[c[ta>>2]>>2]|0)>>>0<(c[c[ua>>2]>>2]|0)>>>0?c[ra>>2]|0:c[qa>>2]|0)>>2]|0);c[va>>2]=e;c[wa>>2]=c[va>>2];c[xa>>2]=c[wa>>2];c[ya>>2]=c[xa>>2];c[za>>2]=(c[ya>>2]|0)+4;c[Aa>>2]=c[za>>2];c[Ba>>2]=c[Aa>>2];c[E>>2]=c[c[Ba>>2]>>2];ja=c[E>>2]|0;c[Ca>>2]=c[(c[l>>2]|0)+4>>2];c[ha>>2]=ja;ja=c[Ca>>2]|0;ia=c[ha>>2]|0;if((c[ha>>2]&(c[ha>>2]|0)-1|0)!=0)ha=(ja>>>0)%(ia>>>0)|0;else ha=ja&ia-1;c[N>>2]=ha}Fb=c[N>>2]|0;c[ga>>2]=e;c[T>>2]=Fb;Fb=c[T>>2]|0;c[U>>2]=c[ga>>2];c[V>>2]=c[U>>2];c[O>>2]=c[(c[c[V>>2]>>2]|0)+(Fb<<2)>>2];Fb=c[O>>2]|0;c[X>>2]=W;c[Y>>2]=-1;Eb=c[Y>>2]|0;c[Z>>2]=c[X>>2];c[_>>2]=Eb;c[c[Z>>2]>>2]=0;c[$>>2]=c[W>>2];c[aa>>2]=$;if((Fb|0)==0){c[ba>>2]=e+8;c[R>>2]=c[ba>>2];c[Q>>2]=c[R>>2];c[P>>2]=c[Q>>2];c[O>>2]=c[P>>2];c[c[l>>2]>>2]=c[c[O>>2]>>2];c[c[O>>2]>>2]=c[l>>2];Eb=c[O>>2]|0;Fb=c[N>>2]|0;c[M>>2]=e;c[L>>2]=Fb;Fb=c[L>>2]|0;c[K>>2]=c[M>>2];c[J>>2]=c[K>>2];c[(c[c[J>>2]>>2]|0)+(Fb<<2)>>2]=Eb;Fb=c[c[l>>2]>>2]|0;c[G>>2]=I;c[fa>>2]=-1;Eb=c[fa>>2]|0;c[ea>>2]=c[G>>2];c[da>>2]=Eb;c[c[ea>>2]>>2]=0;c[S>>2]=c[I>>2];c[H>>2]=S;if((Fb|0)!=0){G=c[l>>2]|0;E=c[E>>2]|0;c[F>>2]=c[(c[c[l>>2]>>2]|0)+4>>2];c[D>>2]=E;F=c[F>>2]|0;E=c[D>>2]|0;if((c[D>>2]&(c[D>>2]|0)-1|0)!=0)D=(F>>>0)%(E>>>0)|0;else D=F&E-1;c[C>>2]=e;c[h>>2]=D;Fb=c[h>>2]|0;c[j>>2]=c[C>>2];c[k>>2]=c[j>>2];c[(c[c[k>>2]>>2]|0)+(Fb<<2)>>2]=G}}else{c[c[l>>2]>>2]=c[c[O>>2]>>2];c[c[O>>2]>>2]=c[l>>2]}c[B>>2]=c[l>>2];c[A>>2]=e;c[z>>2]=(c[A>>2]|0)+12;c[y>>2]=c[z>>2];Fb=c[y>>2]|0;c[Fb>>2]=(c[Fb>>2]|0)+1;a[x>>0]=1;Fb=c[B>>2]|0;c[f>>2]=w;c[v>>2]=Fb;Fb=c[f>>2]|0;Db=c[v>>2]|0;c[u>>2]=Fb;c[t>>2]=Db;Db=c[u>>2]|0;Fb=c[t>>2]|0;c[Db>>2]=Fb;c[s>>2]=b;c[r>>2]=w;c[q>>2]=x;Db=c[s>>2]|0;Fb=c[q>>2]|0;Eb=c[r>>2]|0;c[p>>2]=Db;c[o>>2]=Eb;c[n>>2]=Fb;Fb=c[p>>2]|0;Eb=c[o>>2]|0;c[Fb+0>>2]=c[Eb+0>>2];Fb=Fb+4|0;Eb=c[n>>2]|0;Eb=a[Eb>>0]|0;Eb=Eb&1;Eb=Eb&1;a[Fb>>0]=Eb;i=m;return}function jk(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0.0;f=i;i=i+160|0;y=f+52|0;x=f+108|0;w=f+96|0;t=f+84|0;B=f+48|0;z=f+8|0;E=f+12|0;D=f+88|0;C=f+44|0;H=f+20|0;G=f+24|0;F=f+28|0;v=f+32|0;u=f+104|0;A=f+112|0;I=f+120|0;o=f+128|0;p=f+136|0;q=f+140|0;m=f+56|0;e=f+60|0;l=f;h=f+68|0;j=f+72|0;k=f+144|0;J=f+80|0;Q=f+16|0;P=f+4|0;O=f+92|0;N=f+100|0;M=f+36|0;L=f+40|0;K=f+116|0;R=f+64|0;n=f+124|0;r=f+132|0;s=f+76|0;c[R>>2]=b;c[n>>2]=d;b=c[R>>2]|0;if((c[n>>2]|0)!=1){if((c[n>>2]&(c[n>>2]|0)-1|0)!=0)c[n>>2]=Km(c[n>>2]|0)|0}else c[n>>2]=2;c[K>>2]=b;c[L>>2]=c[K>>2];c[M>>2]=c[L>>2];c[N>>2]=c[M>>2];c[O>>2]=(c[N>>2]|0)+4;c[P>>2]=c[O>>2];c[Q>>2]=c[P>>2];c[r>>2]=c[c[Q>>2]>>2];K=c[n>>2]|0;if((c[n>>2]|0)>>>0>(c[r>>2]|0)>>>0){kk(b,K);i=f;return}if(!(K>>>0<(c[r>>2]|0)>>>0)){i=f;return}c[J>>2]=c[r>>2];if((c[J>>2]|0)>>>0>2?(c[J>>2]&(c[J>>2]|0)-1|0)!=0^1:0){c[A>>2]=b;c[u>>2]=(c[A>>2]|0)+12;c[v>>2]=c[u>>2];S=+((c[c[v>>2]>>2]|0)>>>0);c[w>>2]=b;c[x>>2]=(c[w>>2]|0)+16;c[y>>2]=c[x>>2];g[t>>2]=S/+g[c[y>>2]>>2];c[z>>2]=~~+ca(+(+g[t>>2]))>>>0;c[B>>2]=(c[z>>2]|0)-1;t=1<<32-(zy(c[B>>2]|0)|0)}else{c[C>>2]=b;c[D>>2]=(c[C>>2]|0)+12;c[E>>2]=c[D>>2];S=+((c[c[E>>2]>>2]|0)>>>0);c[F>>2]=b;c[G>>2]=(c[F>>2]|0)+16;c[H>>2]=c[G>>2];g[I>>2]=S/+g[c[H>>2]>>2];t=Km(~~+ca(+(+g[I>>2]))>>>0)|0}c[s>>2]=t;c[h>>2]=n;c[j>>2]=s;R=c[h>>2]|0;d=c[j>>2]|0;a[l+0>>0]=a[k+0>>0]|0;c[m>>2]=R;c[e>>2]=d;d=c[m>>2]|0;R=c[e>>2]|0;c[o>>2]=l;c[p>>2]=d;c[q>>2]=R;c[n>>2]=c[((c[c[p>>2]>>2]|0)>>>0<(c[c[q>>2]>>2]|0)>>>0?c[e>>2]|0:c[m>>2]|0)>>2];if(!((c[n>>2]|0)>>>0<(c[r>>2]|0)>>>0)){i=f;return}kk(b,c[n>>2]|0);i=f;return}function kk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0;ea=i;i=i+528|0;kb=ea+256|0;hb=ea+240|0;ib=ea;mb=ea+476|0;nb=ea+516|0;ob=ea+508|0;lb=ea+32|0;qb=ea+40|0;rb=ea+44|0;sb=ea+48|0;ka=ea+52|0;Na=ea+56|0;ab=ea+60|0;eb=ea+64|0;Xa=ea+68|0;Wa=ea+72|0;Va=ea+76|0;$a=ea+84|0;Ya=ea+92|0;Za=ea+96|0;_a=ea+100|0;Ua=ea+104|0;Ta=ea+108|0;Sa=ea+112|0;Qa=ea+116|0;Ra=ea+120|0;db=ea+124|0;cb=ea+128|0;gb=ea+132|0;bb=ea+136|0;Pa=ea+140|0;Ja=ea+144|0;Ia=ea+148|0;Ha=ea+152|0;Ma=ea+156|0;La=ea+160|0;Ka=ea+164|0;za=ea+168|0;Aa=ea+172|0;xa=ea+176|0;ya=ea+180|0;wa=ea+184|0;Ca=ea+188|0;Ga=ea+192|0;Fa=ea+196|0;Da=ea+200|0;Ea=ea+204|0;Oa=ea+208|0;la=ea+212|0;fb=ea+216|0;ma=ea+220|0;ra=ea+224|0;sa=ea+228|0;pa=ea+472|0;qa=ea+480|0;oa=ea+488|0;ua=ea+496|0;na=ea+504|0;ja=ea+512|0;ha=ea+520|0;ga=ea+524|0;ia=ea+264|0;fa=ea+268|0;z=ea+272|0;A=ea+276|0;x=ea+280|0;y=ea+284|0;w=ea+288|0;C=ea+292|0;u=ea+296|0;v=ea+300|0;k=ea+304|0;j=ea+308|0;g=ea+312|0;h=ea+316|0;o=ea+320|0;p=ea+324|0;m=ea+328|0;n=ea+332|0;l=ea+336|0;r=ea+340|0;G=ea+344|0;F=ea+348|0;D=ea+352|0;E=ea+356|0;L=ea+360|0;M=ea+364|0;J=ea+368|0;K=ea+372|0;d=ea+376|0;O=ea+380|0;Z=ea+384|0;Y=ea+388|0;X=ea+392|0;ba=ea+396|0;ca=ea+400|0;da=ea+404|0;_=ea+408|0;$=ea+412|0;aa=ea+416|0;S=ea+420|0;R=ea+424|0;P=ea+428|0;Q=ea+432|0;W=ea+436|0;V=ea+440|0;T=ea+444|0;U=ea+448|0;tb=ea+452|0;ub=ea+456|0;vb=ea+460|0;wb=ea+464|0;t=ea+28|0;jb=ea+16|0;pb=ea+8|0;va=ea+12|0;Ba=ea+4|0;I=ea+20|0;e=ea+24|0;ta=ea+468|0;f=ea+232|0;s=ea+236|0;B=ea+484|0;q=ea+244|0;H=ea+492|0;N=ea+248|0;c[wb>>2]=a;c[t>>2]=b;a=c[wb>>2]|0;c[vb>>2]=a;c[ub>>2]=c[vb>>2];c[tb>>2]=c[ub>>2];c[sb>>2]=(c[tb>>2]|0)+4;c[rb>>2]=c[sb>>2];c[qb>>2]=c[rb>>2];c[jb>>2]=c[qb>>2];if((c[t>>2]|0)>>>0>0){wb=c[t>>2]|0;c[hb>>2]=c[jb>>2];c[ib>>2]=wb;wb=c[ib>>2]|0;c[ea+260>>2]=c[hb>>2];c[kb>>2]=wb;c[ea+252>>2]=0;hb=Qw(c[kb>>2]<<2)|0}else{c[nb>>2]=lb;c[ob>>2]=-1;hb=c[ob>>2]|0;c[mb>>2]=c[nb>>2];c[ea+500>>2]=hb;c[c[mb>>2]>>2]=0;c[pb>>2]=c[lb>>2];c[ea+36>>2]=pb;hb=0}c[gb>>2]=a;c[bb>>2]=hb;gb=c[gb>>2]|0;c[cb>>2]=gb;c[db>>2]=c[cb>>2];c[Pa>>2]=c[c[db>>2]>>2];wb=c[bb>>2]|0;c[eb>>2]=gb;c[ab>>2]=c[eb>>2];c[c[ab>>2]>>2]=wb;if((c[Pa>>2]|0)!=0){c[Na>>2]=gb;c[ka>>2]=c[Na>>2];vb=c[Pa>>2]|0;c[Qa>>2]=(c[ka>>2]|0)+4;c[Ra>>2]=vb;vb=c[Qa>>2]|0;c[Sa>>2]=vb;c[Ta>>2]=c[Sa>>2];c[Ua>>2]=c[Ta>>2];ub=c[Ua>>2]|0;wb=c[Ra>>2]|0;c[Va>>2]=vb;c[Wa>>2]=c[Va>>2];c[Xa>>2]=c[Wa>>2];vb=c[c[Xa>>2]>>2]|0;c[Ya>>2]=ub;c[Za>>2]=wb;c[_a>>2]=vb;vb=c[Za>>2]|0;wb=c[_a>>2]|0;c[ea+80>>2]=c[Ya>>2];c[$a>>2]=vb;c[ea+88>>2]=wb;Sw(c[$a>>2]|0)}wb=c[t>>2]|0;c[Ha>>2]=a;c[Ia>>2]=c[Ha>>2];c[Ja>>2]=c[Ia>>2];c[Ka>>2]=(c[Ja>>2]|0)+4;c[La>>2]=c[Ka>>2];c[Ma>>2]=c[La>>2];c[c[Ma>>2]>>2]=wb;if(!((c[t>>2]|0)>>>0>0)){i=ea;return}c[va>>2]=0;while(1){if(!((c[va>>2]|0)>>>0<(c[t>>2]|0)>>>0))break;c[xa>>2]=wa;c[ya>>2]=-1;wb=c[ya>>2]|0;c[za>>2]=c[xa>>2];c[Aa>>2]=wb;c[c[za>>2]>>2]=0;c[Ba>>2]=c[wa>>2];c[Ca>>2]=Ba;wb=c[va>>2]|0;c[Da>>2]=a;c[Ea>>2]=wb;wb=c[Ea>>2]|0;c[Fa>>2]=c[Da>>2];c[Ga>>2]=c[Fa>>2];c[(c[c[Ga>>2]>>2]|0)+(wb<<2)>>2]=0;c[va>>2]=(c[va>>2]|0)+1}c[la>>2]=a+8;c[Oa>>2]=c[la>>2];c[ma>>2]=c[Oa>>2];c[fb>>2]=c[ma>>2];c[I>>2]=c[fb>>2];c[e>>2]=c[c[I>>2]>>2];wb=c[e>>2]|0;c[pa>>2]=oa;c[qa>>2]=-1;vb=c[qa>>2]|0;c[ra>>2]=c[pa>>2];c[sa>>2]=vb;c[c[ra>>2]>>2]=0;c[ta>>2]=c[oa>>2];c[ua>>2]=ta;if((wb|0)==0){i=ea;return}la=c[t>>2]|0;c[na>>2]=c[(c[e>>2]|0)+4>>2];c[ja>>2]=la;la=c[na>>2]|0;ka=c[ja>>2]|0;if((c[ja>>2]&(c[ja>>2]|0)-1|0)!=0)ja=(la>>>0)%(ka>>>0)|0;else ja=la&ka-1;c[f>>2]=ja;vb=c[I>>2]|0;wb=c[f>>2]|0;c[ia>>2]=a;c[fa>>2]=wb;wb=c[fa>>2]|0;c[ga>>2]=c[ia>>2];c[ha>>2]=c[ga>>2];c[(c[c[ha>>2]>>2]|0)+(wb<<2)>>2]=vb;c[s>>2]=c[f>>2];c[I>>2]=c[e>>2];c[e>>2]=c[c[e>>2]>>2];while(1){wb=c[e>>2]|0;c[x>>2]=w;c[y>>2]=-1;vb=c[y>>2]|0;c[z>>2]=c[x>>2];c[A>>2]=vb;c[c[z>>2]>>2]=0;c[B>>2]=c[w>>2];c[C>>2]=B;if((wb|0)==0)break;ga=c[t>>2]|0;c[u>>2]=c[(c[e>>2]|0)+4>>2];c[v>>2]=ga;ga=c[u>>2]|0;fa=c[v>>2]|0;if((c[v>>2]&(c[v>>2]|0)-1|0)!=0)fa=(ga>>>0)%(fa>>>0)|0;else fa=ga&fa-1;c[f>>2]=fa;do if((c[f>>2]|0)==(c[s>>2]|0))c[I>>2]=c[e>>2];else{wb=c[f>>2]|0;c[g>>2]=a;c[h>>2]=wb;wb=c[h>>2]|0;c[j>>2]=c[g>>2];c[k>>2]=c[j>>2];wb=c[(c[c[k>>2]>>2]|0)+(wb<<2)>>2]|0;c[m>>2]=l;c[n>>2]=-1;vb=c[n>>2]|0;c[o>>2]=c[m>>2];c[p>>2]=vb;c[c[o>>2]>>2]=0;c[q>>2]=c[l>>2];c[r>>2]=q;if((wb|0)==0){vb=c[I>>2]|0;wb=c[f>>2]|0;c[D>>2]=a;c[E>>2]=wb;wb=c[E>>2]|0;c[F>>2]=c[D>>2];c[G>>2]=c[F>>2];c[(c[c[G>>2]>>2]|0)+(wb<<2)>>2]=vb;c[I>>2]=c[e>>2];c[s>>2]=c[f>>2];break}c[H>>2]=c[e>>2];while(1){wb=c[c[H>>2]>>2]|0;c[J>>2]=d;c[K>>2]=-1;vb=c[K>>2]|0;c[L>>2]=c[J>>2];c[M>>2]=vb;c[c[L>>2]>>2]=0;c[N>>2]=c[d>>2];c[O>>2]=N;if((wb|0)==0)break;c[X>>2]=a;c[Y>>2]=(c[X>>2]|0)+16;c[Z>>2]=c[Y>>2];wb=(c[e>>2]|0)+8|0;vb=(c[c[H>>2]>>2]|0)+8|0;c[_>>2]=c[Z>>2];c[$>>2]=wb;c[aa>>2]=vb;vb=c[$>>2]|0;wb=c[aa>>2]|0;c[ba>>2]=c[_>>2];c[ca>>2]=vb;c[da>>2]=wb;if((c[c[ca>>2]>>2]|0)!=(c[c[da>>2]>>2]|0))break;c[H>>2]=c[c[H>>2]>>2]}c[c[I>>2]>>2]=c[c[H>>2]>>2];vb=c[f>>2]|0;c[P>>2]=a;c[Q>>2]=vb;vb=c[Q>>2]|0;c[R>>2]=c[P>>2];c[S>>2]=c[R>>2];c[c[H>>2]>>2]=c[c[(c[c[S>>2]>>2]|0)+(vb<<2)>>2]>>2];vb=c[e>>2]|0;wb=c[f>>2]|0;c[T>>2]=a;c[U>>2]=wb;wb=c[U>>2]|0;c[V>>2]=c[T>>2];c[W>>2]=c[V>>2];c[c[(c[c[W>>2]>>2]|0)+(wb<<2)>>2]>>2]=vb}while(0);c[e>>2]=c[c[I>>2]>>2]}i=ea;return}function lk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0;s=i;i=i+272|0;la=s+252|0;ma=s+244|0;na=s+196|0;ea=s+104|0;fa=s+108|0;ga=s+236|0;ha=s+204|0;ia=s+16|0;ja=s+20|0;ka=s+24|0;ca=s+28|0;ba=s+32|0;U=s+36|0;T=s+40|0;S=s+200|0;X=s+44|0;Y=s+48|0;Z=s+52|0;W=s+56|0;aa=s+60|0;V=s+64|0;$=s+68|0;P=s+72|0;Q=s+76|0;N=s+80|0;O=s+84|0;M=s+88|0;K=s+224|0;e=s+232|0;L=s+240|0;z=s+248|0;y=s+256|0;x=s+264|0;F=s+112|0;G=s+116|0;H=s+120|0;C=s+124|0;D=s+128|0;E=s+132|0;v=s+136|0;w=s+140|0;t=s+144|0;u=s+148|0;n=s+152|0;q=s+156|0;r=s+160|0;o=s+164|0;p=s+168|0;k=s+172|0;l=s+176|0;h=s+180|0;j=s+184|0;g=s+188|0;f=s+192|0;m=s+12|0;oa=s+8|0;pa=s+216|0;qa=s+92|0;ra=s+220|0;B=s+4|0;da=s+212|0;J=s+96|0;I=s+228|0;A=s+208|0;_=s;R=s+100|0;c[ra>>2]=b;c[B>>2]=d;d=c[ra>>2]|0;c[qa>>2]=d;c[pa>>2]=(c[qa>>2]|0)+12;c[oa>>2]=c[pa>>2];b=c[B>>2]|0;c[ma>>2]=c[oa>>2];c[na>>2]=b;b=c[c[na>>2]>>2]|0;c[s+260>>2]=c[ma>>2];c[la>>2]=b;c[da>>2]=c[la>>2];c[ka>>2]=d;c[ja>>2]=c[ka>>2];c[ia>>2]=c[ja>>2];c[ha>>2]=c[ia>>2];c[ga>>2]=(c[ha>>2]|0)+4;c[fa>>2]=c[ga>>2];c[ea>>2]=c[fa>>2];c[J>>2]=c[c[ea>>2]>>2];a:do if((c[J>>2]|0)!=0){ra=c[J>>2]|0;c[ca>>2]=c[da>>2];c[ba>>2]=ra;da=c[ca>>2]|0;ca=c[ba>>2]|0;if((c[ba>>2]&(c[ba>>2]|0)-1|0)!=0)ba=(da>>>0)%(ca>>>0)|0;else ba=da&ca-1;c[I>>2]=ba;ra=c[I>>2]|0;c[S>>2]=d;c[X>>2]=ra;ra=c[X>>2]|0;c[T>>2]=c[S>>2];c[U>>2]=c[T>>2];c[A>>2]=c[(c[c[U>>2]>>2]|0)+(ra<<2)>>2];ra=c[A>>2]|0;c[W>>2]=V;c[aa>>2]=-1;qa=c[aa>>2]|0;c[Y>>2]=c[W>>2];c[Z>>2]=qa;c[c[Y>>2]>>2]=0;c[_>>2]=c[V>>2];c[$>>2]=_;if((ra|0)!=0){c[A>>2]=c[c[A>>2]>>2];while(1){ra=c[A>>2]|0;c[N>>2]=M;c[O>>2]=-1;qa=c[O>>2]|0;c[P>>2]=c[N>>2];c[Q>>2]=qa;c[c[P>>2]>>2]=0;c[R>>2]=c[M>>2];c[K>>2]=R;if((ra|0)==0)break a;T=c[J>>2]|0;c[e>>2]=c[(c[A>>2]|0)+4>>2];c[L>>2]=T;T=c[e>>2]|0;S=c[L>>2]|0;if((c[L>>2]&(c[L>>2]|0)-1|0)!=0)S=(T>>>0)%(S>>>0)|0;else S=T&S-1;if((S|0)!=(c[I>>2]|0))break a;c[x>>2]=d;c[y>>2]=(c[x>>2]|0)+16;c[z>>2]=c[y>>2];S=(c[A>>2]|0)+8|0;ra=c[B>>2]|0;c[C>>2]=c[z>>2];c[D>>2]=S;c[E>>2]=ra;ra=c[D>>2]|0;S=c[E>>2]|0;c[F>>2]=c[C>>2];c[G>>2]=ra;c[H>>2]=S;S=c[A>>2]|0;if((c[c[G>>2]>>2]|0)==(c[c[H>>2]>>2]|0))break;c[A>>2]=c[S>>2]}c[t>>2]=a;c[u>>2]=S;ra=c[u>>2]|0;c[v>>2]=c[t>>2];c[w>>2]=ra;c[c[v>>2]>>2]=c[w>>2];i=s;return}}while(0);c[f>>2]=d;c[h>>2]=g;c[j>>2]=-1;ra=c[j>>2]|0;c[k>>2]=c[h>>2];c[l>>2]=ra;c[c[k>>2]>>2]=0;c[m>>2]=c[g>>2];c[n>>2]=m;c[o>>2]=a;c[p>>2]=0;ra=c[p>>2]|0;c[q>>2]=c[o>>2];c[r>>2]=ra;c[c[q>>2]>>2]=c[r>>2];i=s;return}function mk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0,Uc=0,Vc=0,Wc=0,Xc=0,Yc=0,Zc=0,_c=0,$c=0,ad=0,bd=0,cd=0,dd=0,ed=0,fd=0,gd=0,hd=0,id=0,jd=0,kd=0,ld=0,md=0,nd=0,od=0,pd=0,qd=0,rd=0,sd=0,td=0,ud=0,vd=0,wd=0,xd=0,yd=0,zd=0,Ad=0,Bd=0,Cd=0,Dd=0,Ed=0,Fd=0,Gd=0,Hd=0,Id=0,Jd=0,Kd=0,Ld=0,Md=0,Nd=0,Od=0,Pd=0,Qd=0,Rd=0,Sd=0,Td=0,Ud=0,Vd=0,Wd=0,Xd=0,Yd=0,Zd=0,_d=0,$d=0,ae=0,be=0,ce=0,de=0,ee=0,fe=0,ge=0;g=i;i=i+1248|0;qa=g+768|0;ra=g+1208|0;la=g+1164|0;ka=g+1144|0;ia=g+228|0;P=g+256|0;Q=g+1148|0;O=g+144|0;L=g+1152|0;M=g+1156|0;Y=g+1236|0;W=g+1068|0;X=g+396|0;V=g+48|0;S=g+212|0;T=g+1140|0;U=g+1237|0;fa=g+636|0;ga=g+608|0;ha=g+388|0;ca=g+376|0;da=g+360|0;ea=g+348|0;R=g+248|0;oa=g+244|0;ba=g+236|0;ja=g+232|0;ma=g+224|0;Wa=g+216|0;na=g+208|0;pa=g+204|0;Va=g+1136|0;Ua=g+1076|0;za=g+868|0;ya=g+708|0;wa=g+632|0;va=g+620|0;ua=g+604|0;xa=g+588|0;Aa=g+384|0;Da=g+380|0;Ca=g+372|0;Ba=g+368|0;Ea=g+356|0;Na=g+352|0;Ta=g+344|0;Sa=g+340|0;Qa=g+264|0;Ra=g+268|0;Pa=g+32|0;Ma=g+276|0;Ka=g+280|0;La=g+284|0;Oa=g+288|0;Ja=g+56|0;Ha=g+220|0;Ia=g+304|0;Ga=g+16|0;ta=g+312|0;zb=g+316|0;Fa=g+320|0;yb=g+168|0;xb=g+336|0;wb=g+200|0;ub=g+1120|0;vb=g+1072|0;_a=g+1048|0;rb=g+864|0;Ya=g+760|0;Bb=g+704|0;Cb=g+644|0;Ib=g+628|0;Hb=g+624|0;gb=g+616|0;lb=g+612|0;mb=g+600|0;kb=g+112|0;hb=g+584|0;ib=g+412|0;jb=g+1238|0;sb=g+404|0;tb=g+408|0;sa=g+64|0;ob=g+416|0;pb=g+420|0;qb=g+1239|0;db=g+432|0;eb=g+436|0;fb=g+440|0;ab=g+444|0;bb=g+448|0;cb=g+452|0;nb=g+456|0;Ab=g+460|0;$a=g+464|0;Gb=g+468|0;Fb=g+472|0;cd=g+476|0;Eb=g+480|0;Db=g+272|0;bd=g+488|0;ad=g+492|0;Hc=g+496|0;Gc=g+500|0;Ec=g+504|0;Dc=g+508|0;Cc=g+512|0;Fc=g+516|0;Ic=g+520|0;Lc=g+296|0;Kc=g+528|0;Jc=g+300|0;Mc=g+536|0;Vc=g+540|0;$c=g+544|0;_c=g+308|0;Yc=g+552|0;Zc=g+556|0;Xc=g+184|0;Uc=g+564|0;Sc=g+568|0;Tc=g+572|0;Wc=g+576|0;Rc=g+192|0;Pc=g+592|0;Qc=g+1160|0;Oc=g+104|0;Bc=g+1176|0;Ac=g+1184|0;Nc=g+1192|0;zc=g+160|0;yc=g+1212|0;xc=g+152|0;vc=g+1044|0;wc=g+1012|0;tc=g+860|0;uc=g+1232|0;rc=g+756|0;Yb=g+744|0;Xb=g+700|0;Vb=g+648|0;Ub=g+652|0;Tb=g+656|0;Wb=g+660|0;Zb=g+664|0;ac=g+668|0;$b=g+672|0;_b=g+676|0;bc=g+680|0;kc=g+684|0;qc=g+688|0;pc=g+692|0;nc=g+696|0;oc=g+596|0;mc=g+120|0;jc=g+712|0;hc=g+716|0;ic=g+1168|0;lc=g+728|0;gc=g+24|0;ec=g+736|0;fc=g+740|0;dc=g;Sb=g+748|0;Rb=g+752|0;cc=g+1224|0;Qb=g+80|0;Pb=g+764|0;Nb=g+88|0;Lb=g+772|0;Mb=g+776|0;Jb=g+780|0;Kb=g+784|0;gd=g+788|0;sc=g+792|0;Ob=g+796|0;hd=g+808|0;fd=g+812|0;ed=g+816|0;dd=g+820|0;qd=g+824|0;rd=g+828|0;I=g+832|0;J=g+836|0;C=g+840|0;K=g+844|0;w=g+848|0;q=g+852|0;p=g+856|0;r=g+176|0;u=g+884|0;t=g+888|0;s=g+1240|0;m=g+904|0;n=g+908|0;l=g+96|0;h=g+912|0;j=g+916|0;k=g+1241|0;A=g+484|0;B=g+924|0;o=g+928|0;y=g+932|0;f=g+936|0;z=g+940|0;v=g+944|0;G=g+948|0;x=g+952|0;D=g+956|0;E=g+960|0;N=g+964|0;F=g+968|0;H=g+972|0;aa=g+976|0;$=g+980|0;pd=g+984|0;od=g+988|0;nd=g+992|0;md=g+996|0;kd=g+524|0;sd=g+1e3|0;jd=g+1004|0;ud=g+1008|0;td=g+532|0;id=g+1016|0;xd=g+1020|0;yd=g+1024|0;zd=g+1028|0;Ad=g+1204|0;Pd=g+1036|0;Gd=g+1040|0;Bd=g+548|0;Dd=g+1052|0;vd=g+1056|0;Ed=g+1060|0;Cd=g+72|0;Id=g+1064|0;Kd=g+560|0;Jd=g+1080|0;Fd=g+1088|0;Hd=g+136|0;Nd=g+1096|0;Md=g+1100|0;Ld=g+128|0;Rd=g+1104|0;Td=g+1108|0;Sd=g+1112|0;Od=g+328|0;Qd=g+8|0;Wd=g+1124|0;Vd=g+252|0;Ud=g+40|0;Zd=g+364|0;Yd=g+240|0;_d=g+640|0;$d=g+720|0;ae=g+1128|0;be=g+1200|0;ce=g+1116|0;de=g+1188|0;ee=g+392|0;fe=g+1032|0;ge=g+1132|0;wd=g+1216|0;ld=g+920|0;_=g+892|0;Xd=g+424|0;Za=g+400|0;Xa=g+872|0;Z=g+260|0;c[ge>>2]=d;c[wd>>2]=e;c[fe>>2]=c[ge>>2];c[ee>>2]=(c[fe>>2]|0)+8;c[de>>2]=c[ee>>2];c[ld>>2]=c[de>>2];c[be>>2]=c[ld>>2];c[ce>>2]=1;d=c[ce>>2]|0;c[g+1172>>2]=c[be>>2];c[ae>>2]=d;c[g+1180>>2]=0;d=Qw((c[ae>>2]|0)*24|0)|0;e=c[ld>>2]|0;c[_d>>2]=Xd;c[$d>>2]=e;e=c[$d>>2]|0;c[Zd>>2]=c[_d>>2];c[Yd>>2]=e;e=c[Zd>>2]|0;c[e>>2]=c[Yd>>2];a[e+4>>0]=0;a[e+5>>0]=0;a[Ud+0>>0]=a[Xd+0>>0]|0;a[Ud+1>>0]=a[Xd+1>>0]|0;a[Ud+2>>0]=a[Xd+2>>0]|0;a[Ud+3>>0]=a[Xd+3>>0]|0;a[Ud+4>>0]=a[Xd+4>>0]|0;a[Ud+5>>0]=a[Xd+5>>0]|0;a[Ud+6>>0]=a[Xd+6>>0]|0;a[Ud+7>>0]=a[Xd+7>>0]|0;c[Wd>>2]=_;c[Vd>>2]=d;d=c[Wd>>2]|0;e=c[Vd>>2]|0;a[Qd+0>>0]=a[Ud+0>>0]|0;a[Qd+1>>0]=a[Ud+1>>0]|0;a[Qd+2>>0]=a[Ud+2>>0]|0;a[Qd+3>>0]=a[Ud+3>>0]|0;a[Qd+4>>0]=a[Ud+4>>0]|0;a[Qd+5>>0]=a[Ud+5>>0]|0;a[Qd+6>>0]=a[Ud+6>>0]|0;a[Qd+7>>0]=a[Ud+7>>0]|0;c[Td>>2]=d;c[Sd>>2]=e;e=c[Td>>2]|0;c[Rd>>2]=Sd;d=c[c[Rd>>2]>>2]|0;c[Pd>>2]=Qd;Pd=c[Pd>>2]|0;c[Od+0>>2]=c[Pd+0>>2];c[Od+4>>2]=c[Pd+4>>2];a[Ld+0>>0]=a[Od+0>>0]|0;a[Ld+1>>0]=a[Od+1>>0]|0;a[Ld+2>>0]=a[Od+2>>0]|0;a[Ld+3>>0]=a[Od+3>>0]|0;a[Ld+4>>0]=a[Od+4>>0]|0;a[Ld+5>>0]=a[Od+5>>0]|0;a[Ld+6>>0]=a[Od+6>>0]|0;a[Ld+7>>0]=a[Od+7>>0]|0;c[Nd>>2]=e;c[Md>>2]=d;d=c[Nd>>2]|0;e=c[Md>>2]|0;a[Hd+0>>0]=a[Ld+0>>0]|0;a[Hd+1>>0]=a[Ld+1>>0]|0;a[Hd+2>>0]=a[Ld+2>>0]|0;a[Hd+3>>0]=a[Ld+3>>0]|0;a[Hd+4>>0]=a[Ld+4>>0]|0;a[Hd+5>>0]=a[Ld+5>>0]|0;a[Hd+6>>0]=a[Ld+6>>0]|0;a[Hd+7>>0]=a[Ld+7>>0]|0;c[Kd>>2]=d;c[Jd>>2]=e;e=c[Kd>>2]|0;c[Id>>2]=Jd;d=c[c[Id>>2]>>2]|0;c[Gd>>2]=Hd;Gd=c[Gd>>2]|0;c[Fd+0>>2]=c[Gd+0>>2];c[Fd+4>>2]=c[Gd+4>>2];a[Cd+0>>0]=a[Fd+0>>0]|0;a[Cd+1>>0]=a[Fd+1>>0]|0;a[Cd+2>>0]=a[Fd+2>>0]|0;a[Cd+3>>0]=a[Fd+3>>0]|0;a[Cd+4>>0]=a[Fd+4>>0]|0;a[Cd+5>>0]=a[Fd+5>>0]|0;a[Cd+6>>0]=a[Fd+6>>0]|0;a[Cd+7>>0]=a[Fd+7>>0]|0;c[vd>>2]=e;c[Ed>>2]=d;vd=c[vd>>2]|0;c[Dd>>2]=Ed;c[vd>>2]=c[c[Dd>>2]>>2];vd=vd+4|0;c[Bd>>2]=Cd;d=c[Bd>>2]|0;c[vd+0>>2]=c[d+0>>2];c[vd+4>>2]=c[d+4>>2];vd=c[ld>>2]|0;c[Ad>>2]=_;c[zd>>2]=c[Ad>>2];c[yd>>2]=c[zd>>2];c[xd>>2]=(c[c[yd>>2]>>2]|0)+8;d=c[xd>>2]|0;e=c[wd>>2]|0;c[ud>>2]=vd;c[td>>2]=d;c[id>>2]=e;e=c[td>>2]|0;if((e|0)!=0)Om(e,c[id>>2]|0);c[jd>>2]=_;c[sd>>2]=c[jd>>2];c[kd>>2]=c[sd>>2];a[(c[kd>>2]|0)+8>>0]=1;ge=c[ld>>2]|0;c[md>>2]=_;c[nd>>2]=c[md>>2];c[od>>2]=c[nd>>2];c[pd>>2]=(c[c[od>>2]>>2]|0)+20;id=c[pd>>2]|0;c[qd>>2]=ge;c[rd>>2]=id;id=c[rd>>2]|0;if((id|0)!=0)c[id>>2]=0;c[dd>>2]=_;c[ed>>2]=c[dd>>2];c[fd>>2]=c[ed>>2];a[(c[fd>>2]|0)+9>>0]=1;c[gd>>2]=_;ge=c[gd>>2]|0;c[Jb>>2]=hd;c[Kb>>2]=ge;ge=c[Kb>>2]|0;c[Lb>>2]=c[Jb>>2];c[Mb>>2]=ge;c[c[Lb>>2]>>2]=c[Mb>>2];a[Nb+0>>0]=a[hd+0>>0]|0;a[Nb+1>>0]=a[hd+1>>0]|0;a[Nb+2>>0]=a[hd+2>>0]|0;a[Nb+3>>0]=a[hd+3>>0]|0;c[Pb>>2]=Ob;Jb=c[Pb>>2]|0;a[Qb+0>>0]=a[Nb+0>>0]|0;a[Qb+1>>0]=a[Nb+1>>0]|0;a[Qb+2>>0]=a[Nb+2>>0]|0;a[Qb+3>>0]=a[Nb+3>>0]|0;c[Rb>>2]=Jb;Jb=c[Rb>>2]|0;c[Sb>>2]=Qb;c[Tb>>2]=c[c[Sb>>2]>>2];ge=c[Tb>>2]|0;c[Ub>>2]=ge;c[Vb>>2]=c[Ub>>2];c[Wb>>2]=c[c[Vb>>2]>>2];c[Xb>>2]=ge;c[Yb>>2]=c[Xb>>2];c[c[Yb>>2]>>2]=0;ge=c[Wb>>2]|0;c[Zb>>2]=Qb;c[_b>>2]=c[c[Zb>>2]>>2];c[$b>>2]=c[_b>>2];c[ac>>2]=c[$b>>2];c[bc>>2]=(c[ac>>2]|0)+4;fe=c[bc>>2]|0;c[cc+0>>2]=c[fe+0>>2];c[cc+4>>2]=c[fe+4>>2];a[dc+0>>0]=a[cc+0>>0]|0;a[dc+1>>0]=a[cc+1>>0]|0;a[dc+2>>0]=a[cc+2>>0]|0;a[dc+3>>0]=a[cc+3>>0]|0;a[dc+4>>0]=a[cc+4>>0]|0;a[dc+5>>0]=a[cc+5>>0]|0;a[dc+6>>0]=a[cc+6>>0]|0;a[dc+7>>0]=a[cc+7>>0]|0;c[ec>>2]=Jb;c[fc>>2]=ge;ge=c[ec>>2]|0;Jb=c[fc>>2]|0;a[gc+0>>0]=a[dc+0>>0]|0;a[gc+1>>0]=a[dc+1>>0]|0;a[gc+2>>0]=a[dc+2>>0]|0;a[gc+3>>0]=a[dc+3>>0]|0;a[gc+4>>0]=a[dc+4>>0]|0;a[gc+5>>0]=a[dc+5>>0]|0;a[gc+6>>0]=a[dc+6>>0]|0;a[gc+7>>0]=a[dc+7>>0]|0;c[hc>>2]=ge;c[ic>>2]=Jb;Jb=c[hc>>2]|0;c[jc>>2]=ic;ge=c[c[jc>>2]>>2]|0;c[kc>>2]=gc;fe=c[kc>>2]|0;c[lc+0>>2]=c[fe+0>>2];c[lc+4>>2]=c[fe+4>>2];a[mc+0>>0]=a[lc+0>>0]|0;a[mc+1>>0]=a[lc+1>>0]|0;a[mc+2>>0]=a[lc+2>>0]|0;a[mc+3>>0]=a[lc+3>>0]|0;a[mc+4>>0]=a[lc+4>>0]|0;a[mc+5>>0]=a[lc+5>>0]|0;a[mc+6>>0]=a[lc+6>>0]|0;a[mc+7>>0]=a[lc+7>>0]|0;c[nc>>2]=Jb;c[oc>>2]=ge;ge=c[nc>>2]|0;c[pc>>2]=oc;c[ge>>2]=c[c[pc>>2]>>2];ge=ge+4|0;c[qc>>2]=mc;Jb=c[qc>>2]|0;c[ge+0>>2]=c[Jb+0>>2];c[ge+4>>2]=c[Jb+4>>2];c[rc>>2]=Ob;ge=c[rc>>2]|0;c[tc>>2]=sc;c[uc>>2]=ge;ge=c[uc>>2]|0;c[vc>>2]=c[tc>>2];c[wc>>2]=ge;c[c[vc>>2]>>2]=c[wc>>2];a[xc+0>>0]=a[sc+0>>0]|0;a[xc+1>>0]=a[sc+1>>0]|0;a[xc+2>>0]=a[sc+2>>0]|0;a[xc+3>>0]=a[sc+3>>0]|0;c[yc>>2]=Xa;ge=c[yc>>2]|0;a[zc+0>>0]=a[xc+0>>0]|0;a[zc+1>>0]=a[xc+1>>0]|0;a[zc+2>>0]=a[xc+2>>0]|0;a[zc+3>>0]=a[xc+3>>0]|0;c[Ac>>2]=ge;ge=c[Ac>>2]|0;c[Bc>>2]=zc;c[Cc>>2]=c[c[Bc>>2]>>2];Jb=c[Cc>>2]|0;c[Dc>>2]=Jb;c[Ec>>2]=c[Dc>>2];c[Fc>>2]=c[c[Ec>>2]>>2];c[Gc>>2]=Jb;c[Hc>>2]=c[Gc>>2];c[c[Hc>>2]>>2]=0;Jb=c[Fc>>2]|0;c[Ic>>2]=zc;c[Jc>>2]=c[c[Ic>>2]>>2];c[Kc>>2]=c[Jc>>2];c[Lc>>2]=c[Kc>>2];c[Mc>>2]=(c[Lc>>2]|0)+4;fe=c[Mc>>2]|0;c[Nc+0>>2]=c[fe+0>>2];c[Nc+4>>2]=c[fe+4>>2];a[Oc+0>>0]=a[Nc+0>>0]|0;a[Oc+1>>0]=a[Nc+1>>0]|0;a[Oc+2>>0]=a[Nc+2>>0]|0;a[Oc+3>>0]=a[Nc+3>>0]|0;a[Oc+4>>0]=a[Nc+4>>0]|0;a[Oc+5>>0]=a[Nc+5>>0]|0;a[Oc+6>>0]=a[Nc+6>>0]|0;a[Oc+7>>0]=a[Nc+7>>0]|0;c[Pc>>2]=ge;c[Qc>>2]=Jb;Jb=c[Pc>>2]|0;ge=c[Qc>>2]|0;a[Rc+0>>0]=a[Oc+0>>0]|0;a[Rc+1>>0]=a[Oc+1>>0]|0;a[Rc+2>>0]=a[Oc+2>>0]|0;a[Rc+3>>0]=a[Oc+3>>0]|0;a[Rc+4>>0]=a[Oc+4>>0]|0;a[Rc+5>>0]=a[Oc+5>>0]|0;a[Rc+6>>0]=a[Oc+6>>0]|0;a[Rc+7>>0]=a[Oc+7>>0]|0;c[Sc>>2]=Jb;c[Tc>>2]=ge;ge=c[Sc>>2]|0;c[Uc>>2]=Tc;Jb=c[c[Uc>>2]>>2]|0;c[Vc>>2]=Rc;fe=c[Vc>>2]|0;c[Wc+0>>2]=c[fe+0>>2];c[Wc+4>>2]=c[fe+4>>2];a[Xc+0>>0]=a[Wc+0>>0]|0;a[Xc+1>>0]=a[Wc+1>>0]|0;a[Xc+2>>0]=a[Wc+2>>0]|0;a[Xc+3>>0]=a[Wc+3>>0]|0;a[Xc+4>>0]=a[Wc+4>>0]|0;a[Xc+5>>0]=a[Wc+5>>0]|0;a[Xc+6>>0]=a[Wc+6>>0]|0;a[Xc+7>>0]=a[Wc+7>>0]|0;c[Yc>>2]=ge;c[Zc>>2]=Jb;Jb=c[Yc>>2]|0;c[_c>>2]=Zc;c[Jb>>2]=c[c[_c>>2]>>2];Jb=Jb+4|0;c[$c>>2]=Xc;ge=c[$c>>2]|0;c[Jb+0>>2]=c[ge+0>>2];c[Jb+4>>2]=c[ge+4>>2];c[ad>>2]=Ob;c[bd>>2]=c[ad>>2];c[cd>>2]=c[bd>>2];c[Eb>>2]=0;Jb=c[cd>>2]|0;c[Fb>>2]=Jb;c[Gb>>2]=c[Fb>>2];c[Db>>2]=c[c[Gb>>2]>>2];ge=c[Eb>>2]|0;c[Hb>>2]=Jb;c[Ib>>2]=c[Hb>>2];c[c[Ib>>2]>>2]=ge;if((c[Db>>2]|0)!=0){c[Cb>>2]=Jb;c[Bb>>2]=c[Cb>>2];ge=c[Db>>2]|0;c[Ab>>2]=(c[Bb>>2]|0)+4;c[$a>>2]=ge;Ab=c[Ab>>2]|0;if(a[Ab+5>>0]&1){ge=c[Ab>>2]|0;c[nb>>2]=(c[$a>>2]|0)+20;fe=c[nb>>2]|0;c[ob>>2]=ge;c[pb>>2]=fe;fe=c[ob>>2]|0;ge=c[pb>>2]|0;a[sa+0>>0]=a[qb+0>>0]|0;c[sb>>2]=fe;c[tb>>2]=ge}if(a[Ab+4>>0]&1){ge=c[Ab>>2]|0;c[gb>>2]=(c[$a>>2]|0)+8;fe=c[gb>>2]|0;c[hb>>2]=ge;c[ib>>2]=fe;fe=c[hb>>2]|0;ge=c[ib>>2]|0;a[kb+0>>0]=a[jb+0>>0]|0;c[lb>>2]=fe;c[mb>>2]=ge;Tm(c[mb>>2]|0)}if((c[$a>>2]|0)!=0){fe=c[$a>>2]|0;c[ab>>2]=c[Ab>>2];c[bb>>2]=fe;c[cb>>2]=1;fe=c[bb>>2]|0;ge=c[cb>>2]|0;c[db>>2]=c[ab>>2];c[eb>>2]=fe;c[fb>>2]=ge;Sw(c[eb>>2]|0)}}c[Ya>>2]=Xa;ge=c[Ya>>2]|0;c[_a>>2]=Za;c[rb>>2]=ge;ge=c[rb>>2]|0;c[ub>>2]=c[_a>>2];c[vb>>2]=ge;c[c[ub>>2]>>2]=c[vb>>2];a[wb+0>>0]=a[Za+0>>0]|0;a[wb+1>>0]=a[Za+1>>0]|0;a[wb+2>>0]=a[Za+2>>0]|0;a[wb+3>>0]=a[Za+3>>0]|0;c[xb>>2]=b;ge=c[xb>>2]|0;a[yb+0>>0]=a[wb+0>>0]|0;a[yb+1>>0]=a[wb+1>>0]|0;a[yb+2>>0]=a[wb+2>>0]|0;a[yb+3>>0]=a[wb+3>>0]|0;c[zb>>2]=ge;ge=c[zb>>2]|0;c[ta>>2]=yb;c[ua>>2]=c[c[ta>>2]>>2];sa=c[ua>>2]|0;c[va>>2]=sa;c[wa>>2]=c[va>>2];c[xa>>2]=c[c[wa>>2]>>2];c[ya>>2]=sa;c[za>>2]=c[ya>>2];c[c[za>>2]>>2]=0;sa=c[xa>>2]|0;c[Aa>>2]=yb;c[Ba>>2]=c[c[Aa>>2]>>2];c[Ca>>2]=c[Ba>>2];c[Da>>2]=c[Ca>>2];c[Ea>>2]=(c[Da>>2]|0)+4;fe=c[Ea>>2]|0;c[Fa+0>>2]=c[fe+0>>2];c[Fa+4>>2]=c[fe+4>>2];a[Ga+0>>0]=a[Fa+0>>0]|0;a[Ga+1>>0]=a[Fa+1>>0]|0;a[Ga+2>>0]=a[Fa+2>>0]|0;a[Ga+3>>0]=a[Fa+3>>0]|0;a[Ga+4>>0]=a[Fa+4>>0]|0;a[Ga+5>>0]=a[Fa+5>>0]|0;a[Ga+6>>0]=a[Fa+6>>0]|0;a[Ga+7>>0]=a[Fa+7>>0]|0;c[Ha>>2]=ge;c[Ia>>2]=sa;sa=c[Ha>>2]|0;ge=c[Ia>>2]|0;a[Ja+0>>0]=a[Ga+0>>0]|0;a[Ja+1>>0]=a[Ga+1>>0]|0;a[Ja+2>>0]=a[Ga+2>>0]|0;a[Ja+3>>0]=a[Ga+3>>0]|0;a[Ja+4>>0]=a[Ga+4>>0]|0;a[Ja+5>>0]=a[Ga+5>>0]|0;a[Ja+6>>0]=a[Ga+6>>0]|0;a[Ja+7>>0]=a[Ga+7>>0]|0;c[Ka>>2]=sa;c[La>>2]=ge;ge=c[Ka>>2]|0;c[Ma>>2]=La;sa=c[c[Ma>>2]>>2]|0;c[Na>>2]=Ja;fe=c[Na>>2]|0;c[Oa+0>>2]=c[fe+0>>2];c[Oa+4>>2]=c[fe+4>>2];a[Pa+0>>0]=a[Oa+0>>0]|0;a[Pa+1>>0]=a[Oa+1>>0]|0;a[Pa+2>>0]=a[Oa+2>>0]|0;a[Pa+3>>0]=a[Oa+3>>0]|0;a[Pa+4>>0]=a[Oa+4>>0]|0;a[Pa+5>>0]=a[Oa+5>>0]|0;a[Pa+6>>0]=a[Oa+6>>0]|0;a[Pa+7>>0]=a[Oa+7>>0]|0;c[Qa>>2]=ge;c[Ra>>2]=sa;sa=c[Qa>>2]|0;c[Sa>>2]=Ra;c[sa>>2]=c[c[Sa>>2]>>2];sa=sa+4|0;c[Ta>>2]=Pa;ge=c[Ta>>2]|0;c[sa+0>>2]=c[ge+0>>2];c[sa+4>>2]=c[ge+4>>2];c[Ua>>2]=Xa;c[Va>>2]=c[Ua>>2];c[Wa>>2]=c[Va>>2];c[na>>2]=0;sa=c[Wa>>2]|0;c[ma>>2]=sa;c[ja>>2]=c[ma>>2];c[pa>>2]=c[c[ja>>2]>>2];ge=c[na>>2]|0;c[ka>>2]=sa;c[la>>2]=c[ka>>2];c[c[la>>2]>>2]=ge;if((c[pa>>2]|0)!=0){c[ra>>2]=sa;c[qa>>2]=c[ra>>2];ja=c[pa>>2]|0;c[oa>>2]=(c[qa>>2]|0)+4;c[ba>>2]=ja;ja=c[oa>>2]|0;if(a[ja+5>>0]&1){ge=c[ja>>2]|0;c[R>>2]=(c[ba>>2]|0)+20;fe=c[R>>2]|0;c[S>>2]=ge;c[T>>2]=fe;fe=c[S>>2]|0;ge=c[T>>2]|0;a[V+0>>0]=a[U+0>>0]|0;c[W>>2]=fe;c[X>>2]=ge}if(a[ja+4>>0]&1){ge=c[ja>>2]|0;c[ia>>2]=(c[ba>>2]|0)+8;fe=c[ia>>2]|0;c[L>>2]=ge;c[M>>2]=fe;fe=c[L>>2]|0;ge=c[M>>2]|0;a[O+0>>0]=a[Y+0>>0]|0;c[P>>2]=fe;c[Q>>2]=ge;Tm(c[Q>>2]|0)}if((c[ba>>2]|0)!=0){fe=c[ba>>2]|0;c[ca>>2]=c[ja>>2];c[da>>2]=fe;c[ea>>2]=1;fe=c[da>>2]|0;ge=c[ea>>2]|0;c[fa>>2]=c[ca>>2];c[ga>>2]=fe;c[ha>>2]=ge;Sw(c[ga>>2]|0)}}c[Z>>2]=1;c[$>>2]=_;c[aa>>2]=c[$>>2];c[N>>2]=c[aa>>2];c[F>>2]=0;L=c[N>>2]|0;c[E>>2]=L;c[D>>2]=c[E>>2];c[H>>2]=c[c[D>>2]>>2];ge=c[F>>2]|0;c[K>>2]=L;c[C>>2]=c[K>>2];c[c[C>>2]>>2]=ge;if((c[H>>2]|0)==0){i=g;return}c[J>>2]=L;c[I>>2]=c[J>>2];C=c[H>>2]|0;c[G>>2]=(c[I>>2]|0)+4;c[x>>2]=C;C=c[G>>2]|0;if(a[C+5>>0]&1){ge=c[C>>2]|0;c[v>>2]=(c[x>>2]|0)+20;fe=c[v>>2]|0;c[h>>2]=ge;c[j>>2]=fe;fe=c[h>>2]|0;ge=c[j>>2]|0;a[l+0>>0]=a[k+0>>0]|0;c[m>>2]=fe;c[n>>2]=ge}if(a[C+4>>0]&1){ge=c[C>>2]|0;c[w>>2]=(c[x>>2]|0)+8;fe=c[w>>2]|0;c[u>>2]=ge;c[t>>2]=fe;fe=c[u>>2]|0;ge=c[t>>2]|0;a[r+0>>0]=a[s+0>>0]|0;c[q>>2]=fe;c[p>>2]=ge;Tm(c[p>>2]|0)}if((c[x>>2]|0)==0){i=g;return}fe=c[x>>2]|0;c[y>>2]=c[C>>2];c[f>>2]=fe;c[z>>2]=1;fe=c[f>>2]|0;ge=c[z>>2]|0;c[A>>2]=c[y>>2];c[B>>2]=fe;c[o>>2]=ge;Sw(c[B>>2]|0);i=g;return}function nk(b,e,f){b=b|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0.0,Nc=0.0;n=i;i=i+752|0;uc=n+352|0;ec=n+340|0;fc=n+336|0;cc=n+12|0;dc=n+8|0;bc=n+16|0;hc=n+680|0;$b=n+716|0;ac=n+724|0;Qb=n+732|0;Pb=n+332|0;Ob=n+28|0;rc=n+32|0;mc=n+36|0;pc=n+40|0;qc=n+672|0;oc=n+104|0;sc=n+48|0;vc=n+52|0;nc=n+56|0;wc=n+60|0;eb=n+64|0;nb=n+68|0;mb=n+72|0;lb=n+76|0;sb=n+80|0;rb=n+84|0;qb=n+88|0;pb=n+92|0;ob=n+96|0;xb=n+100|0;wb=n+668|0;vb=n+228|0;ub=n+108|0;tb=n+112|0;Ta=n+116|0;_a=n+120|0;Za=n+124|0;Ya=n+128|0;db=n+132|0;cb=n+136|0;bb=n+140|0;ab=n+144|0;$a=n+148|0;kb=n+152|0;jb=n+156|0;ib=n+160|0;hb=n+164|0;gb=n+168|0;Xa=n+172|0;Wa=n+176|0;Va=n+180|0;Ab=n+184|0;zb=n+188|0;yb=n+192|0;Db=n+196|0;Cb=n+200|0;Bb=n+204|0;Hb=n+208|0;Gb=n+212|0;Fb=n+216|0;Eb=n+220|0;Qa=n+224|0;Ra=n+664|0;Sa=n+404|0;Kb=n+232|0;Jb=n+236|0;Ib=n+240|0;Nb=n+244|0;Mb=n+248|0;Lb=n+252|0;_b=n+256|0;Zb=n+260|0;Yb=n+264|0;Xb=n+268|0;Ma=n+748|0;Ua=n+276|0;fb=n+280|0;Oa=n+284|0;Pa=n+288|0;Na=n+292|0;Ub=n+296|0;Vb=n+300|0;Wb=n+304|0;Rb=n+308|0;Sb=n+312|0;Tb=n+316|0;kc=n+696|0;jc=n+704|0;ic=n+712|0;La=n+720|0;Ka=n+728|0;lc=n+736|0;Ja=n+740|0;Ia=n+348|0;Ga=n+744|0;Ha=n+356|0;wa=n+360|0;Da=n+364|0;Fa=n+368|0;yc=n+372|0;xc=n+376|0;ka=n+380|0;sa=n+384|0;ta=n+388|0;ua=n+392|0;qa=n+396|0;ra=n+400|0;pa=n;ma=n+408|0;na=n+412|0;oa=n+749|0;zc=n+420|0;Ac=n+424|0;Bc=n+428|0;Cc=n+432|0;Dc=n+436|0;Ec=n+440|0;Fc=n+444|0;Hc=n+448|0;Gc=n+452|0;Ba=n+456|0;Aa=n+460|0;za=n+464|0;ya=n+468|0;xa=n+472|0;ja=n+476|0;va=n+660|0;Ca=n+480|0;ia=n+484|0;W=n+488|0;V=n+492|0;T=n+496|0;U=n+500|0;_=n+504|0;$=n+508|0;Y=n+512|0;Z=n+516|0;X=n+520|0;ba=n+524|0;S=n+528|0;ha=n+532|0;Q=n+536|0;R=n+540|0;K=n+544|0;L=n+548|0;N=n+552|0;M=n+556|0;ea=n+560|0;da=n+564|0;I=n+568|0;fa=n+572|0;J=n+576|0;H=n+580|0;G=n+584|0;E=n+588|0;h=n+592|0;j=n+596|0;l=n+600|0;k=n+604|0;A=n+608|0;B=n+612|0;C=n+616|0;v=n+620|0;u=n+624|0;x=n+628|0;w=n+632|0;q=n+636|0;p=n+640|0;o=n+644|0;t=n+648|0;s=n+652|0;r=n+656|0;Ic=n+20|0;Jc=n+688|0;Kc=n+24|0;Lc=n+320|0;m=n+692|0;F=n+324|0;z=n+750|0;D=n+44|0;O=n+684|0;tc=n+328|0;gc=n+708|0;Ea=n+676|0;la=n+4|0;P=n+344|0;aa=n+700|0;ga=n+416|0;y=n+272|0;c[Lc>>2]=e;c[m>>2]=f;e=c[Lc>>2]|0;c[Kc>>2]=e;c[Jc>>2]=(c[Kc>>2]|0)+12;c[Ic>>2]=c[Jc>>2];f=(c[m>>2]|0)+8|0;c[Hc>>2]=c[Ic>>2];c[Gc>>2]=f;f=Tc(c[Hc>>2]|0,c[Gc>>2]|0)|0;c[(c[m>>2]|0)+4>>2]=f;c[Fc>>2]=e;c[Ec>>2]=c[Fc>>2];c[Dc>>2]=c[Ec>>2];c[Cc>>2]=c[Dc>>2];c[Bc>>2]=(c[Cc>>2]|0)+4;c[Ac>>2]=c[Bc>>2];c[zc>>2]=c[Ac>>2];c[F>>2]=c[c[zc>>2]>>2];a[z>>0]=0;a:do if((c[F>>2]|0)!=0){f=c[F>>2]|0;c[yc>>2]=c[(c[m>>2]|0)+4>>2];c[xc>>2]=f;f=c[yc>>2]|0;yc=c[xc>>2]|0;if((c[xc>>2]&(c[xc>>2]|0)-1|0)!=0)xc=(f>>>0)%(yc>>>0)|0;else xc=f&yc-1;c[O>>2]=xc;Lc=c[O>>2]|0;c[nc>>2]=e;c[wc>>2]=Lc;Lc=c[wc>>2]|0;c[vc>>2]=c[nc>>2];c[sc>>2]=c[vc>>2];c[D>>2]=c[(c[c[sc>>2]>>2]|0)+(Lc<<2)>>2];Lc=c[D>>2]|0;c[pc>>2]=oc;c[qc>>2]=-1;Kc=c[qc>>2]|0;c[rc>>2]=c[pc>>2];c[mc>>2]=Kc;c[c[rc>>2]>>2]=0;c[tc>>2]=c[oc>>2];c[uc>>2]=tc;if((Lc|0)!=0){c[D>>2]=c[c[D>>2]>>2];while(1){Lc=c[D>>2]|0;c[cc>>2]=bc;c[dc>>2]=-1;Kc=c[dc>>2]|0;c[ec>>2]=c[cc>>2];c[fc>>2]=Kc;c[c[ec>>2]>>2]=0;c[gc>>2]=c[bc>>2];c[hc>>2]=gc;if((Lc|0)==0)break a;nc=c[F>>2]|0;c[$b>>2]=c[(c[D>>2]|0)+4>>2];c[ac>>2]=nc;nc=c[$b>>2]|0;mc=c[ac>>2]|0;if((c[ac>>2]&(c[ac>>2]|0)-1|0)!=0)mc=(nc>>>0)%(mc>>>0)|0;else mc=nc&mc-1;if((mc|0)!=(c[O>>2]|0))break a;c[Ob>>2]=e;c[Pb>>2]=(c[Ob>>2]|0)+16;c[Qb>>2]=c[Pb>>2];mc=(c[D>>2]|0)+8|0;Lc=(c[m>>2]|0)+8|0;c[Rb>>2]=c[Qb>>2];c[Sb>>2]=mc;c[Tb>>2]=Lc;Lc=c[Sb>>2]|0;mc=c[Tb>>2]|0;c[Ub>>2]=c[Rb>>2];c[Vb>>2]=Lc;c[Wb>>2]=mc;mc=c[Wb>>2]|0;c[Ua>>2]=c[Vb>>2];c[fb>>2]=mc;c[Xb>>2]=c[Ua>>2];mc=c[Xb>>2]|0;c[Yb>>2]=mc;c[Zb>>2]=c[Yb>>2];c[_b>>2]=c[Zb>>2];if((d[c[_b>>2]>>0]&1|0)!=0){c[Ib>>2]=mc;c[Jb>>2]=c[Ib>>2];c[Kb>>2]=c[Jb>>2];mc=c[(c[Kb>>2]|0)+4>>2]|0}else{c[Lb>>2]=mc;c[Mb>>2]=c[Lb>>2];c[Nb>>2]=c[Mb>>2];mc=d[c[Nb>>2]>>0]>>1}c[Oa>>2]=mc;mc=c[Oa>>2]|0;c[Eb>>2]=c[fb>>2];nc=c[Eb>>2]|0;c[Fb>>2]=nc;c[Gb>>2]=c[Fb>>2];c[Hb>>2]=c[Gb>>2];if((d[c[Hb>>2]>>0]&1|0)!=0){c[yb>>2]=nc;c[zb>>2]=c[yb>>2];c[Ab>>2]=c[zb>>2];nc=c[(c[Ab>>2]|0)+4>>2]|0}else{c[Bb>>2]=nc;c[Cb>>2]=c[Bb>>2];c[Db>>2]=c[Cb>>2];nc=d[c[Db>>2]>>0]>>1}do if((mc|0)==(nc|0)){c[tb>>2]=c[Ua>>2];c[ub>>2]=c[tb>>2];mc=c[ub>>2]|0;c[vb>>2]=mc;c[wb>>2]=c[vb>>2];c[xb>>2]=c[wb>>2];if((d[c[xb>>2]>>0]&1|0)!=0){c[lb>>2]=mc;c[mb>>2]=c[lb>>2];c[nb>>2]=c[mb>>2];mc=c[(c[nb>>2]|0)+8>>2]|0}else{c[ob>>2]=mc;c[pb>>2]=c[ob>>2];c[qb>>2]=c[pb>>2];c[rb>>2]=(c[qb>>2]|0)+1;c[sb>>2]=c[rb>>2];mc=c[sb>>2]|0}c[eb>>2]=mc;c[Pa>>2]=c[eb>>2];c[gb>>2]=c[fb>>2];c[hb>>2]=c[gb>>2];mc=c[hb>>2]|0;c[ib>>2]=mc;c[jb>>2]=c[ib>>2];c[kb>>2]=c[jb>>2];if((d[c[kb>>2]>>0]&1|0)!=0){c[Ya>>2]=mc;c[Za>>2]=c[Ya>>2];c[_a>>2]=c[Za>>2];mc=c[(c[_a>>2]|0)+8>>2]|0}else{c[$a>>2]=mc;c[ab>>2]=c[$a>>2];c[bb>>2]=c[ab>>2];c[cb>>2]=(c[bb>>2]|0)+1;c[db>>2]=c[cb>>2];mc=c[db>>2]|0}c[Ta>>2]=mc;c[Na>>2]=c[Ta>>2];c[Va>>2]=c[Ua>>2];c[Wa>>2]=c[Va>>2];c[Xa>>2]=c[Wa>>2];if((d[c[Xa>>2]>>0]&1|0)!=0){Kc=c[Na>>2]|0;Lc=c[Oa>>2]|0;c[Qa>>2]=c[Pa>>2];c[Ra>>2]=Kc;c[Sa>>2]=Lc;a[Ma>>0]=(sy(c[Qa>>2]|0,c[Ra>>2]|0,c[Sa>>2]|0)|0)==0&1;break}while(1){if((c[Oa>>2]|0)==0){mc=32;break}if((a[c[Pa>>2]>>0]|0)!=(a[c[Na>>2]>>0]|0)){mc=30;break}c[Oa>>2]=(c[Oa>>2]|0)+ -1;c[Pa>>2]=(c[Pa>>2]|0)+1;c[Na>>2]=(c[Na>>2]|0)+1}if((mc|0)==30){a[Ma>>0]=0;break}else if((mc|0)==32){a[Ma>>0]=1;break}}else a[Ma>>0]=0;while(0);if(a[Ma>>0]&1)break;c[D>>2]=c[c[D>>2]>>2]}Lc=c[D>>2]|0;c[x>>2]=y;c[w>>2]=Lc;Lc=c[x>>2]|0;Jc=c[w>>2]|0;c[v>>2]=Lc;c[u>>2]=Jc;Jc=c[v>>2]|0;Lc=c[u>>2]|0;c[Jc>>2]=Lc;c[t>>2]=b;c[s>>2]=y;c[r>>2]=z;Jc=c[t>>2]|0;Lc=c[r>>2]|0;Kc=c[s>>2]|0;c[q>>2]=Jc;c[p>>2]=Kc;c[o>>2]=Lc;Lc=c[q>>2]|0;Kc=c[p>>2]|0;c[Lc+0>>2]=c[Kc+0>>2];Lc=Lc+4|0;Kc=c[o>>2]|0;Kc=a[Kc>>0]|0;Kc=Kc&1;Kc=Kc&1;a[Lc>>0]=Kc;i=n;return}}while(0);c[ic>>2]=e;c[jc>>2]=(c[ic>>2]|0)+12;c[kc>>2]=c[jc>>2];Nc=+(((c[c[kc>>2]>>2]|0)+1|0)>>>0);Mc=+((c[F>>2]|0)>>>0);c[lc>>2]=e;c[Ka>>2]=(c[lc>>2]|0)+16;c[La>>2]=c[Ka>>2];if(!(!(Nc>Mc*+g[c[La>>2]>>2])?(c[F>>2]|0)!=0:0)){Ka=c[F>>2]<<1;c[Ja>>2]=c[F>>2];if((c[Ja>>2]|0)>>>0>2)Ja=(c[Ja>>2]&(c[Ja>>2]|0)-1|0)!=0^1;else Ja=0;c[Ea>>2]=Ka+((Ja^1)&1);c[Ha>>2]=e;c[Ga>>2]=(c[Ha>>2]|0)+12;c[Ia>>2]=c[Ga>>2];Nc=+(((c[c[Ia>>2]>>2]|0)+1|0)>>>0);c[Fa>>2]=e;c[Da>>2]=(c[Fa>>2]|0)+16;c[wa>>2]=c[Da>>2];g[ka>>2]=Nc/+g[c[wa>>2]>>2];c[la>>2]=~~+ca(+(+g[ka>>2]))>>>0;c[ma>>2]=Ea;c[na>>2]=la;ka=c[ma>>2]|0;Lc=c[na>>2]|0;a[pa+0>>0]=a[oa+0>>0]|0;c[qa>>2]=ka;c[ra>>2]=Lc;Lc=c[qa>>2]|0;ka=c[ra>>2]|0;c[sa>>2]=pa;c[ta>>2]=Lc;c[ua>>2]=ka;ok(e,c[((c[c[ta>>2]>>2]|0)>>>0<(c[c[ua>>2]>>2]|0)>>>0?c[ra>>2]|0:c[qa>>2]|0)>>2]|0);c[va>>2]=e;c[ja>>2]=c[va>>2];c[xa>>2]=c[ja>>2];c[ya>>2]=c[xa>>2];c[za>>2]=(c[ya>>2]|0)+4;c[Aa>>2]=c[za>>2];c[Ba>>2]=c[Aa>>2];c[F>>2]=c[c[Ba>>2]>>2];ka=c[F>>2]|0;c[Ca>>2]=c[(c[m>>2]|0)+4>>2];c[ia>>2]=ka;ka=c[Ca>>2]|0;ja=c[ia>>2]|0;if((c[ia>>2]&(c[ia>>2]|0)-1|0)!=0)ia=(ka>>>0)%(ja>>>0)|0;else ia=ka&ja-1;c[O>>2]=ia}Lc=c[O>>2]|0;c[T>>2]=e;c[U>>2]=Lc;Lc=c[U>>2]|0;c[V>>2]=c[T>>2];c[W>>2]=c[V>>2];c[P>>2]=c[(c[c[W>>2]>>2]|0)+(Lc<<2)>>2];Lc=c[P>>2]|0;c[Y>>2]=X;c[Z>>2]=-1;Kc=c[Z>>2]|0;c[_>>2]=c[Y>>2];c[$>>2]=Kc;c[c[_>>2]>>2]=0;c[aa>>2]=c[X>>2];c[ba>>2]=aa;if((Lc|0)==0){c[ha>>2]=e+8;c[S>>2]=c[ha>>2];c[R>>2]=c[S>>2];c[Q>>2]=c[R>>2];c[P>>2]=c[Q>>2];c[c[m>>2]>>2]=c[c[P>>2]>>2];c[c[P>>2]>>2]=c[m>>2];Kc=c[P>>2]|0;Lc=c[O>>2]|0;c[N>>2]=e;c[M>>2]=Lc;Lc=c[M>>2]|0;c[L>>2]=c[N>>2];c[K>>2]=c[L>>2];c[(c[c[K>>2]>>2]|0)+(Lc<<2)>>2]=Kc;Lc=c[c[m>>2]>>2]|0;c[I>>2]=J;c[fa>>2]=-1;Kc=c[fa>>2]|0;c[ea>>2]=c[I>>2];c[da>>2]=Kc;c[c[ea>>2]>>2]=0;c[ga>>2]=c[J>>2];c[H>>2]=ga;if((Lc|0)!=0){H=c[m>>2]|0;F=c[F>>2]|0;c[G>>2]=c[(c[c[m>>2]>>2]|0)+4>>2];c[E>>2]=F;G=c[G>>2]|0;F=c[E>>2]|0;if((c[E>>2]&(c[E>>2]|0)-1|0)!=0)E=(G>>>0)%(F>>>0)|0;else E=G&F-1;c[l>>2]=e;c[k>>2]=E;Lc=c[k>>2]|0;c[j>>2]=c[l>>2];c[h>>2]=c[j>>2];c[(c[c[h>>2]>>2]|0)+(Lc<<2)>>2]=H}}else{c[c[m>>2]>>2]=c[c[P>>2]>>2];c[c[P>>2]>>2]=c[m>>2]}c[D>>2]=c[m>>2];c[C>>2]=e;c[B>>2]=(c[C>>2]|0)+12;c[A>>2]=c[B>>2];Lc=c[A>>2]|0;c[Lc>>2]=(c[Lc>>2]|0)+1;a[z>>0]=1;Lc=c[D>>2]|0;c[x>>2]=y;c[w>>2]=Lc;Lc=c[x>>2]|0;Jc=c[w>>2]|0;c[v>>2]=Lc;c[u>>2]=Jc;Jc=c[v>>2]|0;Lc=c[u>>2]|0;c[Jc>>2]=Lc;c[t>>2]=b;c[s>>2]=y;c[r>>2]=z;Jc=c[t>>2]|0;Lc=c[r>>2]|0;Kc=c[s>>2]|0;c[q>>2]=Jc;c[p>>2]=Kc;c[o>>2]=Lc;Lc=c[q>>2]|0;Kc=c[p>>2]|0;c[Lc+0>>2]=c[Kc+0>>2];Lc=Lc+4|0;Kc=c[o>>2]|0;Kc=a[Kc>>0]|0;Kc=Kc&1;Kc=Kc&1;a[Lc>>0]=Kc;i=n;return}function ok(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0.0;f=i;i=i+160|0;y=f+68|0;x=f+108|0;w=f+80|0;t=f+8|0;B=f+64|0;z=f+16|0;E=f+20|0;D=f+24|0;C=f+28|0;H=f+32|0;G=f+36|0;F=f+40|0;v=f+44|0;u=f+104|0;A=f+112|0;I=f+120|0;o=f+128|0;p=f+136|0;q=f+140|0;m=f+72|0;e=f+76|0;l=f;h=f+84|0;j=f+88|0;k=f+144|0;J=f+96|0;Q=f+12|0;P=f+4|0;O=f+56|0;N=f+100|0;M=f+48|0;L=f+52|0;K=f+116|0;R=f+60|0;n=f+124|0;r=f+132|0;s=f+92|0;c[R>>2]=b;c[n>>2]=d;b=c[R>>2]|0;if((c[n>>2]|0)!=1){if((c[n>>2]&(c[n>>2]|0)-1|0)!=0)c[n>>2]=Km(c[n>>2]|0)|0}else c[n>>2]=2;c[K>>2]=b;c[L>>2]=c[K>>2];c[M>>2]=c[L>>2];c[N>>2]=c[M>>2];c[O>>2]=(c[N>>2]|0)+4;c[P>>2]=c[O>>2];c[Q>>2]=c[P>>2];c[r>>2]=c[c[Q>>2]>>2];K=c[n>>2]|0;if((c[n>>2]|0)>>>0>(c[r>>2]|0)>>>0){pk(b,K);i=f;return}if(!(K>>>0<(c[r>>2]|0)>>>0)){i=f;return}c[J>>2]=c[r>>2];if((c[J>>2]|0)>>>0>2?(c[J>>2]&(c[J>>2]|0)-1|0)!=0^1:0){c[A>>2]=b;c[u>>2]=(c[A>>2]|0)+12;c[v>>2]=c[u>>2];S=+((c[c[v>>2]>>2]|0)>>>0);c[w>>2]=b;c[x>>2]=(c[w>>2]|0)+16;c[y>>2]=c[x>>2];g[t>>2]=S/+g[c[y>>2]>>2];c[z>>2]=~~+ca(+(+g[t>>2]))>>>0;c[B>>2]=(c[z>>2]|0)-1;t=1<<32-(zy(c[B>>2]|0)|0)}else{c[C>>2]=b;c[D>>2]=(c[C>>2]|0)+12;c[E>>2]=c[D>>2];S=+((c[c[E>>2]>>2]|0)>>>0);c[F>>2]=b;c[G>>2]=(c[F>>2]|0)+16;c[H>>2]=c[G>>2];g[I>>2]=S/+g[c[H>>2]>>2];t=Km(~~+ca(+(+g[I>>2]))>>>0)|0}c[s>>2]=t;c[h>>2]=n;c[j>>2]=s;R=c[h>>2]|0;d=c[j>>2]|0;a[l+0>>0]=a[k+0>>0]|0;c[m>>2]=R;c[e>>2]=d;d=c[m>>2]|0;R=c[e>>2]|0;c[o>>2]=l;c[p>>2]=d;c[q>>2]=R;c[n>>2]=c[((c[c[p>>2]>>2]|0)>>>0<(c[c[q>>2]>>2]|0)>>>0?c[e>>2]|0:c[m>>2]|0)>>2];if(!((c[n>>2]|0)>>>0<(c[r>>2]|0)>>>0)){i=f;return}pk(b,c[n>>2]|0);i=f;return}function pk(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0;Za=i;i=i+768|0;Wb=Za+348|0;nc=Za+344|0;ic=Za+340|0;mc=Za+8|0;dc=Za+4|0;cc=Za+724|0;bc=Za+732|0;hc=Za+748|0;ec=Za+28|0;fc=Za+32|0;gc=Za+36|0;ac=Za+40|0;$b=Za+688|0;_b=Za+44|0;Yb=Za+48|0;Zb=Za+52|0;lc=Za+56|0;kc=Za+60|0;oc=Za+64|0;jc=Za+68|0;Xb=Za+72|0;Rb=Za+76|0;Qb=Za+80|0;Pb=Za+84|0;Ub=Za+88|0;sb=Za+92|0;Sb=Za+96|0;Hb=Za+100|0;Ib=Za+684|0;Fb=Za+104|0;Gb=Za+108|0;Eb=Za+112|0;Kb=Za+116|0;Ob=Za+120|0;Nb=Za+124|0;Lb=Za+128|0;Mb=Za+132|0;tb=Za+136|0;Vb=Za+140|0;vb=Za+144|0;ub=Za+148|0;zb=Za+152|0;Ab=Za+156|0;xb=Za+160|0;yb=Za+164|0;wb=Za+168|0;Cb=Za+172|0;Tb=Za+176|0;rb=Za+180|0;pb=Za+184|0;ob=Za+188|0;nb=Za+192|0;qb=Za+196|0;C=Za+200|0;D=Za+204|0;A=Za+208|0;B=Za+212|0;z=Za+216|0;F=Za+220|0;x=Za+224|0;y=Za+680|0;n=Za+228|0;m=Za+232|0;k=Za+236|0;l=Za+240|0;r=Za+244|0;s=Za+248|0;p=Za+252|0;q=Za+256|0;o=Za+260|0;u=Za+264|0;J=Za+268|0;I=Za+272|0;G=Za+276|0;H=Za+280|0;O=Za+284|0;P=Za+288|0;M=Za+292|0;N=Za+296|0;L=Za+300|0;R=Za+304|0;aa=Za+308|0;$=Za+312|0;_=Za+316|0;uc=Za+320|0;vc=Za+712|0;wc=Za+720|0;tc=Za+728|0;sc=Za+744|0;pc=Za+756|0;qc=Za+760|0;yc=Za+360|0;zc=Za+364|0;Ac=Za+368|0;Sa=Za+372|0;Ma=Za+376|0;La=Za+380|0;Ka=Za+384|0;Ra=Za+388|0;f=Za+392|0;Pa=Za+396|0;Oa=Za+400|0;Na=Za+404|0;Ia=Za+408|0;Ha=Za+412|0;Ga=Za+416|0;Fa=Za+420|0;Ea=Za+424|0;fb=Za+428|0;$a=Za+432|0;_a=Za+436|0;g=Za+440|0;eb=Za+444|0;db=Za+448|0;cb=Za+452|0;bb=Za+456|0;ab=Za+460|0;Ya=Za+464|0;Xa=Za+468|0;Wa=Za+472|0;Va=Za+476|0;Ua=Za+676|0;jb=Za+480|0;ib=Za+484|0;hb=Za+488|0;Aa=Za+492|0;za=Za+496|0;ya=Za+500|0;Da=Za+504|0;Ca=Za+508|0;Ba=Za+512|0;xa=Za+516|0;wa=Za+520|0;va=Za+524|0;ua=Za+528|0;kb=Za+532|0;lb=Za+536|0;mb=Za+540|0;pa=Za+544|0;oa=Za+548|0;na=Za+552|0;sa=Za+556|0;ra=Za+560|0;qa=Za+564|0;ma=Za+568|0;la=Za+572|0;ka=Za+576|0;ja=Za+580|0;Ja=Za+764|0;ha=Za+588|0;ia=Za+592|0;ta=Za+596|0;Ta=Za+600|0;gb=Za+604|0;ea=Za+608|0;fa=Za+612|0;ga=Za+616|0;ba=Za+620|0;ca=Za+624|0;da=Za+628|0;V=Za+632|0;U=Za+636|0;S=Za+640|0;T=Za+644|0;Z=Za+648|0;Y=Za+652|0;W=Za+656|0;X=Za+660|0;Bc=Za+664|0;Cc=Za+668|0;Dc=Za+672|0;Ec=Za+24|0;w=Za+20|0;rc=Za+704|0;xc=Za+16|0;Db=Za+700|0;Jb=Za+328|0;h=Za+708|0;Qa=Za+692|0;Bb=Za;j=Za+332|0;v=Za+716|0;E=Za+12|0;t=Za+696|0;K=Za+352|0;Q=Za+584|0;c[Ec>>2]=b;c[w>>2]=e;b=c[Ec>>2]|0;c[Dc>>2]=b;c[Cc>>2]=c[Dc>>2];c[Bc>>2]=c[Cc>>2];c[Ac>>2]=(c[Bc>>2]|0)+4;c[zc>>2]=c[Ac>>2];c[yc>>2]=c[zc>>2];c[rc>>2]=c[yc>>2];if((c[w>>2]|0)>>>0>0){Ec=c[w>>2]|0;c[pc>>2]=c[rc>>2];c[qc>>2]=Ec;Ec=c[qc>>2]|0;c[Za+736>>2]=c[pc>>2];c[sc>>2]=Ec;c[Za+752>>2]=0;pc=Qw(c[sc>>2]<<2)|0}else{c[vc>>2]=tc;c[wc>>2]=-1;pc=c[wc>>2]|0;c[uc>>2]=c[vc>>2];c[Za+324>>2]=pc;c[c[uc>>2]>>2]=0;c[xc>>2]=c[tc>>2];c[Za+356>>2]=xc;pc=0}c[oc>>2]=b;c[jc>>2]=pc;oc=c[oc>>2]|0;c[kc>>2]=oc;c[lc>>2]=c[kc>>2];c[Xb>>2]=c[c[lc>>2]>>2];Ec=c[jc>>2]|0;c[mc>>2]=oc;c[ic>>2]=c[mc>>2];c[c[ic>>2]>>2]=Ec;if((c[Xb>>2]|0)!=0){c[nc>>2]=oc;c[Wb>>2]=c[nc>>2];Dc=c[Xb>>2]|0;c[Yb>>2]=(c[Wb>>2]|0)+4;c[Zb>>2]=Dc;Dc=c[Yb>>2]|0;c[_b>>2]=Dc;c[$b>>2]=c[_b>>2];c[ac>>2]=c[$b>>2];Cc=c[ac>>2]|0;Ec=c[Zb>>2]|0;c[bc>>2]=Dc;c[cc>>2]=c[bc>>2];c[dc>>2]=c[cc>>2];Dc=c[c[dc>>2]>>2]|0;c[ec>>2]=Cc;c[fc>>2]=Ec;c[gc>>2]=Dc;Dc=c[fc>>2]|0;Ec=c[gc>>2]|0;c[Za+740>>2]=c[ec>>2];c[hc>>2]=Dc;c[Za+336>>2]=Ec;Sw(c[hc>>2]|0)}Ec=c[w>>2]|0;c[Pb>>2]=b;c[Qb>>2]=c[Pb>>2];c[Rb>>2]=c[Qb>>2];c[Sb>>2]=(c[Rb>>2]|0)+4;c[sb>>2]=c[Sb>>2];c[Ub>>2]=c[sb>>2];c[c[Ub>>2]>>2]=Ec;if(!((c[w>>2]|0)>>>0>0)){i=Za;return}c[Db>>2]=0;while(1){if(!((c[Db>>2]|0)>>>0<(c[w>>2]|0)>>>0))break;c[Fb>>2]=Eb;c[Gb>>2]=-1;Ec=c[Gb>>2]|0;c[Hb>>2]=c[Fb>>2];c[Ib>>2]=Ec;c[c[Hb>>2]>>2]=0;c[Jb>>2]=c[Eb>>2];c[Kb>>2]=Jb;Ec=c[Db>>2]|0;c[Lb>>2]=b;c[Mb>>2]=Ec;Ec=c[Mb>>2]|0;c[Nb>>2]=c[Lb>>2];c[Ob>>2]=c[Nb>>2];c[(c[c[Ob>>2]>>2]|0)+(Ec<<2)>>2]=0;c[Db>>2]=(c[Db>>2]|0)+1}c[Vb>>2]=b+8;c[tb>>2]=c[Vb>>2];c[ub>>2]=c[tb>>2];c[vb>>2]=c[ub>>2];c[h>>2]=c[vb>>2];c[Qa>>2]=c[c[h>>2]>>2];Ec=c[Qa>>2]|0;c[xb>>2]=wb;c[yb>>2]=-1;Dc=c[yb>>2]|0;c[zb>>2]=c[xb>>2];c[Ab>>2]=Dc;c[c[zb>>2]>>2]=0;c[Bb>>2]=c[wb>>2];c[Cb>>2]=Bb;if((Ec|0)==0){i=Za;return}tb=c[w>>2]|0;c[Tb>>2]=c[(c[Qa>>2]|0)+4>>2];c[rb>>2]=tb;tb=c[Tb>>2]|0;sb=c[rb>>2]|0;if((c[rb>>2]&(c[rb>>2]|0)-1|0)!=0)rb=(tb>>>0)%(sb>>>0)|0;else rb=tb&sb-1;c[j>>2]=rb;Dc=c[h>>2]|0;Ec=c[j>>2]|0;c[nb>>2]=b;c[qb>>2]=Ec;Ec=c[qb>>2]|0;c[ob>>2]=c[nb>>2];c[pb>>2]=c[ob>>2];c[(c[c[pb>>2]>>2]|0)+(Ec<<2)>>2]=Dc;c[v>>2]=c[j>>2];c[h>>2]=c[Qa>>2];c[Qa>>2]=c[c[Qa>>2]>>2];while(1){Ec=c[Qa>>2]|0;c[A>>2]=z;c[B>>2]=-1;Dc=c[B>>2]|0;c[C>>2]=c[A>>2];c[D>>2]=Dc;c[c[C>>2]>>2]=0;c[E>>2]=c[z>>2];c[F>>2]=E;if((Ec|0)==0)break;ob=c[w>>2]|0;c[x>>2]=c[(c[Qa>>2]|0)+4>>2];c[y>>2]=ob;ob=c[x>>2]|0;nb=c[y>>2]|0;if((c[y>>2]&(c[y>>2]|0)-1|0)!=0)nb=(ob>>>0)%(nb>>>0)|0;else nb=ob&nb-1;c[j>>2]=nb;do if((c[j>>2]|0)==(c[v>>2]|0))c[h>>2]=c[Qa>>2];else{Ec=c[j>>2]|0;c[k>>2]=b;c[l>>2]=Ec;Ec=c[l>>2]|0;c[m>>2]=c[k>>2];c[n>>2]=c[m>>2];Ec=c[(c[c[n>>2]>>2]|0)+(Ec<<2)>>2]|0;c[p>>2]=o;c[q>>2]=-1;Dc=c[q>>2]|0;c[r>>2]=c[p>>2];c[s>>2]=Dc;c[c[r>>2]>>2]=0;c[t>>2]=c[o>>2];c[u>>2]=t;if((Ec|0)==0){Dc=c[h>>2]|0;Ec=c[j>>2]|0;c[G>>2]=b;c[H>>2]=Ec;Ec=c[H>>2]|0;c[I>>2]=c[G>>2];c[J>>2]=c[I>>2];c[(c[c[J>>2]>>2]|0)+(Ec<<2)>>2]=Dc;c[h>>2]=c[Qa>>2];c[v>>2]=c[j>>2];break}c[K>>2]=c[Qa>>2];while(1){Ec=c[c[K>>2]>>2]|0;c[M>>2]=L;c[N>>2]=-1;Dc=c[N>>2]|0;c[O>>2]=c[M>>2];c[P>>2]=Dc;c[c[O>>2]>>2]=0;c[Q>>2]=c[L>>2];c[R>>2]=Q;if((Ec|0)==0)break;c[_>>2]=b;c[$>>2]=(c[_>>2]|0)+16;c[aa>>2]=c[$>>2];nb=(c[Qa>>2]|0)+8|0;Ec=(c[c[K>>2]>>2]|0)+8|0;c[ba>>2]=c[aa>>2];c[ca>>2]=nb;c[da>>2]=Ec;Ec=c[ca>>2]|0;nb=c[da>>2]|0;c[ea>>2]=c[ba>>2];c[fa>>2]=Ec;c[ga>>2]=nb;nb=c[ga>>2]|0;c[ha>>2]=c[fa>>2];c[ia>>2]=nb;c[ja>>2]=c[ha>>2];nb=c[ja>>2]|0;c[ka>>2]=nb;c[la>>2]=c[ka>>2];c[ma>>2]=c[la>>2];if((d[c[ma>>2]>>0]&1|0)!=0){c[na>>2]=nb;c[oa>>2]=c[na>>2];c[pa>>2]=c[oa>>2];nb=c[(c[pa>>2]|0)+4>>2]|0}else{c[qa>>2]=nb;c[ra>>2]=c[qa>>2];c[sa>>2]=c[ra>>2];nb=d[c[sa>>2]>>0]>>1}c[ta>>2]=nb;nb=c[ta>>2]|0;c[ua>>2]=c[ia>>2];ob=c[ua>>2]|0;c[va>>2]=ob;c[wa>>2]=c[va>>2];c[xa>>2]=c[wa>>2];if((d[c[xa>>2]>>0]&1|0)!=0){c[ya>>2]=ob;c[za>>2]=c[ya>>2];c[Aa>>2]=c[za>>2];ob=c[(c[Aa>>2]|0)+4>>2]|0}else{c[Ba>>2]=ob;c[Ca>>2]=c[Ba>>2];c[Da>>2]=c[Ca>>2];ob=d[c[Da>>2]>>0]>>1}do if((nb|0)==(ob|0)){c[Ea>>2]=c[ha>>2];c[Fa>>2]=c[Ea>>2];nb=c[Fa>>2]|0;c[Ga>>2]=nb;c[Ha>>2]=c[Ga>>2];c[Ia>>2]=c[Ha>>2];if((d[c[Ia>>2]>>0]&1|0)!=0){c[Ka>>2]=nb;c[La>>2]=c[Ka>>2];c[Ma>>2]=c[La>>2];nb=c[(c[Ma>>2]|0)+8>>2]|0}else{c[Na>>2]=nb;c[Oa>>2]=c[Na>>2];c[Pa>>2]=c[Oa>>2];c[f>>2]=(c[Pa>>2]|0)+1;c[Ra>>2]=c[f>>2];nb=c[Ra>>2]|0}c[Sa>>2]=nb;c[Ta>>2]=c[Sa>>2];c[Ua>>2]=c[ia>>2];c[Va>>2]=c[Ua>>2];nb=c[Va>>2]|0;c[Wa>>2]=nb;c[Xa>>2]=c[Wa>>2];c[Ya>>2]=c[Xa>>2];if((d[c[Ya>>2]>>0]&1|0)!=0){c[g>>2]=nb;c[_a>>2]=c[g>>2];c[$a>>2]=c[_a>>2];nb=c[(c[$a>>2]|0)+8>>2]|0}else{c[ab>>2]=nb;c[bb>>2]=c[ab>>2];c[cb>>2]=c[bb>>2];c[db>>2]=(c[cb>>2]|0)+1;c[eb>>2]=c[db>>2];nb=c[eb>>2]|0}c[fb>>2]=nb;c[gb>>2]=c[fb>>2];c[hb>>2]=c[ha>>2];c[ib>>2]=c[hb>>2];c[jb>>2]=c[ib>>2];if((d[c[jb>>2]>>0]&1|0)!=0){Dc=c[gb>>2]|0;Ec=c[ta>>2]|0;c[kb>>2]=c[Ta>>2];c[lb>>2]=Dc;c[mb>>2]=Ec;a[Ja>>0]=(sy(c[kb>>2]|0,c[lb>>2]|0,c[mb>>2]|0)|0)==0&1;break}while(1){if((c[ta>>2]|0)==0){nb=45;break}if((a[c[Ta>>2]>>0]|0)!=(a[c[gb>>2]>>0]|0)){nb=43;break}c[ta>>2]=(c[ta>>2]|0)+ -1;c[Ta>>2]=(c[Ta>>2]|0)+1;c[gb>>2]=(c[gb>>2]|0)+1}if((nb|0)==43){a[Ja>>0]=0;break}else if((nb|0)==45){a[Ja>>0]=1;break}}else a[Ja>>0]=0;while(0);if(!(a[Ja>>0]&1))break;c[K>>2]=c[c[K>>2]>>2]}c[c[h>>2]>>2]=c[c[K>>2]>>2];Dc=c[j>>2]|0;c[S>>2]=b;c[T>>2]=Dc;Dc=c[T>>2]|0;c[U>>2]=c[S>>2];c[V>>2]=c[U>>2];c[c[K>>2]>>2]=c[c[(c[c[V>>2]>>2]|0)+(Dc<<2)>>2]>>2];Dc=c[Qa>>2]|0;Ec=c[j>>2]|0;c[W>>2]=b;c[X>>2]=Ec;Ec=c[X>>2]|0;c[Y>>2]=c[W>>2];c[Z>>2]=c[Y>>2];c[c[(c[c[Z>>2]>>2]|0)+(Ec<<2)>>2]>>2]=Dc}while(0);c[Qa>>2]=c[c[h>>2]>>2]}i=Za;return}function qk(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0;u=i;i=i+512|0;ab=u+224|0;$a=u+476|0;_a=u+468|0;fb=u+460|0;eb=u+208|0;ib=u+212|0;cb=u+216|0;db=u+220|0;bb=u+452|0;hb=u+20|0;Xa=u+24|0;Ya=u+28|0;Va=u+32|0;Wa=u+36|0;Ua=u+40|0;ta=u+428|0;Sa=u+44|0;Ta=u+48|0;Ea=u+52|0;Da=u+56|0;Ca=u+60|0;kb=u+64|0;jb=u+68|0;mb=u+72|0;nb=u+76|0;ob=u+80|0;pb=u+84|0;qb=u+88|0;rb=u+92|0;sb=u+96|0;ub=u+100|0;tb=u+424|0;Q=u+104|0;Z=u+108|0;Y=u+112|0;X=u+116|0;ca=u+120|0;ba=u+124|0;aa=u+128|0;$=u+132|0;_=u+136|0;ha=u+140|0;ga=u+144|0;fa=u+148|0;ea=u+152|0;da=u+156|0;D=u+160|0;K=u+164|0;J=u+168|0;I=u+172|0;P=u+176|0;O=u+180|0;N=u+184|0;M=u+188|0;L=u+192|0;W=u+196|0;V=u+448|0;U=u+456|0;T=u+464|0;S=u+472|0;H=u+480|0;G=u+488|0;F=u+492|0;oa=u+420|0;na=u+228|0;ma=u+232|0;ra=u+236|0;qa=u+240|0;pa=u+244|0;va=u+248|0;ua=u+252|0;g=u+256|0;sa=u+260|0;A=u+264|0;B=u+268|0;C=u+272|0;ya=u+276|0;xa=u+280|0;wa=u+284|0;Ba=u+288|0;Aa=u+292|0;za=u+296|0;Pa=u+300|0;Oa=u+304|0;Na=u+308|0;Ma=u+312|0;w=u+496|0;E=u+320|0;R=u+324|0;y=u+328|0;z=u+332|0;x=u+336|0;Ja=u+340|0;Ka=u+344|0;La=u+348|0;Ga=u+352|0;Ha=u+356|0;Ia=u+360|0;ka=u+364|0;la=u+368|0;ia=u+372|0;ja=u+376|0;p=u+380|0;s=u+384|0;t=u+388|0;q=u+392|0;r=u+396|0;m=u+400|0;n=u+404|0;k=u+408|0;l=u+412|0;j=u+416|0;h=u+16|0;o=u+12|0;vb=u+440|0;wb=u+432|0;xb=u;yb=u+8|0;Fa=u+444|0;lb=u+200|0;Ra=u+436|0;Qa=u+4|0;v=u+204|0;gb=u+484|0;Za=u+316|0;c[yb>>2]=e;c[Fa>>2]=f;f=c[yb>>2]|0;c[xb>>2]=f;c[wb>>2]=(c[xb>>2]|0)+12;c[vb>>2]=c[wb>>2];e=c[Fa>>2]|0;c[ub>>2]=c[vb>>2];c[tb>>2]=e;c[lb>>2]=Tc(c[ub>>2]|0,c[tb>>2]|0)|0;c[sb>>2]=f;c[rb>>2]=c[sb>>2];c[qb>>2]=c[rb>>2];c[pb>>2]=c[qb>>2];c[ob>>2]=(c[pb>>2]|0)+4;c[nb>>2]=c[ob>>2];c[mb>>2]=c[nb>>2];c[Ra>>2]=c[c[mb>>2]>>2];a:do if((c[Ra>>2]|0)!=0){yb=c[Ra>>2]|0;c[kb>>2]=c[lb>>2];c[jb>>2]=yb;lb=c[kb>>2]|0;kb=c[jb>>2]|0;if((c[jb>>2]&(c[jb>>2]|0)-1|0)!=0)jb=(lb>>>0)%(kb>>>0)|0;else jb=lb&kb-1;c[Qa>>2]=jb;yb=c[Qa>>2]|0;c[_a>>2]=f;c[fb>>2]=yb;yb=c[fb>>2]|0;c[$a>>2]=c[_a>>2];c[ab>>2]=c[$a>>2];c[v>>2]=c[(c[c[ab>>2]>>2]|0)+(yb<<2)>>2];yb=c[v>>2]|0;c[cb>>2]=bb;c[db>>2]=-1;xb=c[db>>2]|0;c[eb>>2]=c[cb>>2];c[ib>>2]=xb;c[c[eb>>2]>>2]=0;c[gb>>2]=c[bb>>2];c[hb>>2]=gb;if((yb|0)!=0){c[v>>2]=c[c[v>>2]>>2];while(1){yb=c[v>>2]|0;c[Va>>2]=Ua;c[Wa>>2]=-1;xb=c[Wa>>2]|0;c[Xa>>2]=c[Va>>2];c[Ya>>2]=xb;c[c[Xa>>2]>>2]=0;c[Za>>2]=c[Ua>>2];c[ta>>2]=Za;if((yb|0)==0)break a;$a=c[Ra>>2]|0;c[Sa>>2]=c[(c[v>>2]|0)+4>>2];c[Ta>>2]=$a;$a=c[Sa>>2]|0;_a=c[Ta>>2]|0;if((c[Ta>>2]&(c[Ta>>2]|0)-1|0)!=0)_a=($a>>>0)%(_a>>>0)|0;else _a=$a&_a-1;if((_a|0)!=(c[Qa>>2]|0))break a;c[Ca>>2]=f;c[Da>>2]=(c[Ca>>2]|0)+16;c[Ea>>2]=c[Da>>2];_a=(c[v>>2]|0)+8|0;yb=c[Fa>>2]|0;c[Ga>>2]=c[Ea>>2];c[Ha>>2]=_a;c[Ia>>2]=yb;yb=c[Ha>>2]|0;_a=c[Ia>>2]|0;c[Ja>>2]=c[Ga>>2];c[Ka>>2]=yb;c[La>>2]=_a;_a=c[La>>2]|0;c[E>>2]=c[Ka>>2];c[R>>2]=_a;c[Ma>>2]=c[E>>2];_a=c[Ma>>2]|0;c[Na>>2]=_a;c[Oa>>2]=c[Na>>2];c[Pa>>2]=c[Oa>>2];if((d[c[Pa>>2]>>0]&1|0)!=0){c[wa>>2]=_a;c[xa>>2]=c[wa>>2];c[ya>>2]=c[xa>>2];_a=c[(c[ya>>2]|0)+4>>2]|0}else{c[za>>2]=_a;c[Aa>>2]=c[za>>2];c[Ba>>2]=c[Aa>>2];_a=d[c[Ba>>2]>>0]>>1}c[y>>2]=_a;_a=c[y>>2]|0;c[sa>>2]=c[R>>2];$a=c[sa>>2]|0;c[g>>2]=$a;c[ua>>2]=c[g>>2];c[va>>2]=c[ua>>2];if((d[c[va>>2]>>0]&1|0)!=0){c[ma>>2]=$a;c[na>>2]=c[ma>>2];c[oa>>2]=c[na>>2];$a=c[(c[oa>>2]|0)+4>>2]|0}else{c[pa>>2]=$a;c[qa>>2]=c[pa>>2];c[ra>>2]=c[qa>>2];$a=d[c[ra>>2]>>0]>>1}do if((_a|0)==($a|0)){c[da>>2]=c[E>>2];c[ea>>2]=c[da>>2];_a=c[ea>>2]|0;c[fa>>2]=_a;c[ga>>2]=c[fa>>2];c[ha>>2]=c[ga>>2];if((d[c[ha>>2]>>0]&1|0)!=0){c[X>>2]=_a;c[Y>>2]=c[X>>2];c[Z>>2]=c[Y>>2];_a=c[(c[Z>>2]|0)+8>>2]|0}else{c[_>>2]=_a;c[$>>2]=c[_>>2];c[aa>>2]=c[$>>2];c[ba>>2]=(c[aa>>2]|0)+1;c[ca>>2]=c[ba>>2];_a=c[ca>>2]|0}c[Q>>2]=_a;c[z>>2]=c[Q>>2];c[S>>2]=c[R>>2];c[T>>2]=c[S>>2];_a=c[T>>2]|0;c[U>>2]=_a;c[V>>2]=c[U>>2];c[W>>2]=c[V>>2];if((d[c[W>>2]>>0]&1|0)!=0){c[I>>2]=_a;c[J>>2]=c[I>>2];c[K>>2]=c[J>>2];_a=c[(c[K>>2]|0)+8>>2]|0}else{c[L>>2]=_a;c[M>>2]=c[L>>2];c[N>>2]=c[M>>2];c[O>>2]=(c[N>>2]|0)+1;c[P>>2]=c[O>>2];_a=c[P>>2]|0}c[D>>2]=_a;c[x>>2]=c[D>>2];c[F>>2]=c[E>>2];c[G>>2]=c[F>>2];c[H>>2]=c[G>>2];if((d[c[H>>2]>>0]&1|0)!=0){xb=c[x>>2]|0;yb=c[y>>2]|0;c[A>>2]=c[z>>2];c[B>>2]=xb;c[C>>2]=yb;a[w>>0]=(sy(c[A>>2]|0,c[B>>2]|0,c[C>>2]|0)|0)==0&1;break}while(1){if((c[y>>2]|0)==0){_a=32;break}if((a[c[z>>2]>>0]|0)!=(a[c[x>>2]>>0]|0)){_a=30;break}c[y>>2]=(c[y>>2]|0)+ -1;c[z>>2]=(c[z>>2]|0)+1;c[x>>2]=(c[x>>2]|0)+1}if((_a|0)==30){a[w>>0]=0;break}else if((_a|0)==32){a[w>>0]=1;break}}else a[w>>0]=0;while(0);_a=c[v>>2]|0;if(a[w>>0]&1)break;c[v>>2]=c[_a>>2]}c[ia>>2]=b;c[ja>>2]=_a;yb=c[ja>>2]|0;c[ka>>2]=c[ia>>2];c[la>>2]=yb;c[c[ka>>2]>>2]=c[la>>2];i=u;return}}while(0);c[h>>2]=f;c[k>>2]=j;c[l>>2]=-1;yb=c[l>>2]|0;c[m>>2]=c[k>>2];c[n>>2]=yb;c[c[m>>2]>>2]=0;c[o>>2]=c[j>>2];c[p>>2]=o;c[q>>2]=b;c[r>>2]=0;yb=c[r>>2]|0;c[s>>2]=c[q>>2];c[t>>2]=yb;c[c[s>>2]>>2]=c[t>>2];i=u;return}function rk(a){a=a|0;var b=0,d=0,e=0,f=0,h=0.0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0;b=i;i=i+464|0;d=b+444|0;f=b;e=b+392|0;j=b+4|0;l=b+8|0;k=b+196|0;m=b+200|0;n=b+400|0;p=b+20|0;o=b+28|0;q=b+32|0;r=b+36|0;s=b+40|0;t=b+384|0;v=b+44|0;u=b+48|0;z=b+56|0;B=b+64|0;A=b+68|0;y=b+72|0;w=b+76|0;x=b+80|0;C=b+84|0;D=b+92|0;E=b+96|0;F=b+100|0;H=b+380|0;G=b+108|0;I=b+112|0;J=b+116|0;K=b+120|0;L=b+124|0;N=b+128|0;M=b+132|0;O=b+136|0;P=b+140|0;R=b+144|0;Q=b+148|0;S=b+152|0;T=b+156|0;U=b+160|0;V=b+164|0;X=b+168|0;W=b+172|0;Y=b+176|0;Z=b+408|0;_=b+416|0;$=b+424|0;aa=b+432|0;ba=b+440|0;da=b+448|0;ca=b+208|0;ea=b+212|0;ga=b+216|0;fa=b+220|0;ha=b+224|0;ia=b+376|0;ja=b+228|0;ma=b+232|0;la=b+240|0;na=b+244|0;oa=b+248|0;pa=b+252|0;qa=b+256|0;sa=b+260|0;ra=b+264|0;wa=b+272|0;ya=b+280|0;xa=b+284|0;va=b+288|0;ta=b+292|0;ua=b+296|0;za=b+300|0;Aa=b+308|0;Ba=b+312|0;Ca=b+316|0;Ea=b+320|0;Da=b+328|0;Fa=b+332|0;Ga=b+336|0;Ha=b+340|0;Ia=b+344|0;Ka=b+348|0;Ja=b+352|0;La=b+356|0;Ma=b+360|0;Oa=b+364|0;Na=b+368|0;Pa=b+372|0;Qa=b+388|0;Ra=b+396|0;Sa=b+12|0;Ua=b+404|0;Ta=b+184|0;Va=b+412|0;Wa=b+16|0;ka=b+188|0;Xa=b+420|0;Ya=b+192|0;Za=b+428|0;_a=b+180|0;c[_a>>2]=a;a=c[_a>>2]|0;c[Za>>2]=a;c[Ya>>2]=c[Za>>2];c[Xa>>2]=c[Ya>>2];c[ka>>2]=c[Xa>>2];ka=c[ka>>2]|0;c[Wa>>2]=ka;c[Va>>2]=c[Wa>>2];c[Ua>>2]=c[Va>>2];c[Ta>>2]=0;Ta=c[Ta>>2]|0;c[Ra>>2]=c[Ua>>2];c[Sa>>2]=Ta;Ra=c[Ra>>2]|0;c[Qa>>2]=Sa;Qa=c[c[Qa>>2]>>2]|0;c[Na>>2]=Ra;c[Pa>>2]=Qa;Na=c[Na>>2]|0;c[Oa>>2]=Pa;c[Na>>2]=c[c[Oa>>2]>>2];c[Ma>>2]=Na+4;c[La>>2]=c[Ma>>2];c[Ka>>2]=c[La>>2];c[Ja>>2]=0;Ja=c[Ja>>2]|0;c[Ha>>2]=c[Ka>>2];c[Ia>>2]=Ja;Ha=c[Ha>>2]|0;c[Ga>>2]=Ia;Ga=c[c[Ga>>2]>>2]|0;c[Da>>2]=Ha;c[Fa>>2]=Ga;Da=c[Da>>2]|0;c[b+324>>2]=Da;c[Ea>>2]=Fa;c[Da>>2]=c[c[Ea>>2]>>2];c[Ca>>2]=ka+8;c[Ba>>2]=c[Ca>>2];c[Aa>>2]=c[Ba>>2];Aa=c[Aa>>2]|0;c[b+304>>2]=Aa;c[za>>2]=Aa;c[ta>>2]=c[za>>2];ta=c[ta>>2]|0;c[ya>>2]=va;c[xa>>2]=-1;xa=c[xa>>2]|0;c[wa>>2]=c[ya>>2];c[b+276>>2]=xa;c[c[wa>>2]>>2]=0;c[ua>>2]=c[va>>2];c[b+268>>2]=ua;c[ta>>2]=0;c[sa>>2]=ka+12;c[ra>>2]=0;ra=c[ra>>2]|0;c[pa>>2]=c[sa>>2];c[qa>>2]=ra;pa=c[pa>>2]|0;c[oa>>2]=qa;oa=c[c[oa>>2]>>2]|0;c[la>>2]=pa;c[na>>2]=oa;la=c[la>>2]|0;c[b+236>>2]=la;c[ma>>2]=na;c[la>>2]=c[c[ma>>2]>>2];c[ia>>2]=ka+16;g[ja>>2]=1.0;h=+g[ja>>2];c[fa>>2]=c[ia>>2];g[ha>>2]=h;fa=c[fa>>2]|0;c[ga>>2]=ha;h=+g[c[ga>>2]>>2];c[ca>>2]=fa;g[ea>>2]=h;ca=c[ca>>2]|0;c[b+204>>2]=ca;c[da>>2]=ea;g[ca>>2]=+g[c[da>>2]>>2];c[ba>>2]=a+20;c[aa>>2]=c[ba>>2];c[$>>2]=c[aa>>2];c[_>>2]=c[$>>2];a=c[_>>2]|0;c[Z>>2]=a;c[Y>>2]=c[Z>>2];c[X>>2]=c[Y>>2];c[W>>2]=0;W=c[W>>2]|0;c[U>>2]=c[X>>2];c[V>>2]=W;U=c[U>>2]|0;c[T>>2]=V;T=c[c[T>>2]>>2]|0;c[Q>>2]=U;c[S>>2]=T;Q=c[Q>>2]|0;c[R>>2]=S;c[Q>>2]=c[c[R>>2]>>2];c[P>>2]=Q+4;c[O>>2]=c[P>>2];c[N>>2]=c[O>>2];c[M>>2]=0;M=c[M>>2]|0;c[K>>2]=c[N>>2];c[L>>2]=M;K=c[K>>2]|0;c[J>>2]=L;J=c[c[J>>2]>>2]|0;c[G>>2]=K;c[I>>2]=J;G=c[G>>2]|0;c[b+104>>2]=G;c[H>>2]=I;c[G>>2]=c[c[H>>2]>>2];c[F>>2]=a+8;c[E>>2]=c[F>>2];c[D>>2]=c[E>>2];D=c[D>>2]|0;c[b+88>>2]=D;c[C>>2]=D;c[w>>2]=c[C>>2];w=c[w>>2]|0;c[B>>2]=y;c[A>>2]=-1;A=c[A>>2]|0;c[z>>2]=c[B>>2];c[b+60>>2]=A;c[c[z>>2]>>2]=0;c[x>>2]=c[y>>2];c[b+52>>2]=x;c[w>>2]=0;c[v>>2]=a+12;c[u>>2]=0;u=c[u>>2]|0;c[s>>2]=c[v>>2];c[t>>2]=u;s=c[s>>2]|0;c[r>>2]=t;r=c[c[r>>2]>>2]|0;c[o>>2]=s;c[q>>2]=r;o=c[o>>2]|0;c[b+24>>2]=o;c[p>>2]=q;c[o>>2]=c[c[p>>2]>>2];c[m>>2]=a+16;g[n>>2]=1.0;h=+g[n>>2];c[l>>2]=c[m>>2];g[k>>2]=h;a=c[l>>2]|0;c[j>>2]=k;h=+g[c[j>>2]>>2];c[f>>2]=a;g[e>>2]=h;a=c[f>>2]|0;c[b+436>>2]=a;c[d>>2]=e;g[a>>2]=+g[c[d>>2]>>2];i=b;return}function sk(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;tk(c[d>>2]|0);i=b;return}function tk(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;uk(c[d>>2]|0);i=b;return}function uk(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;vk(c[d>>2]|0);i=b;return}function vk(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;b=i;i=i+112|0;e=b+40|0;l=b+36|0;t=b+32|0;v=b+100|0;o=b+92|0;n=b+8|0;m=b+12|0;s=b+16|0;p=b+80|0;q=b+88|0;r=b+96|0;d=b+104|0;k=b+108|0;j=b+60|0;g=b+44|0;h=b+48|0;w=b+52|0;x=b+56|0;y=b+4|0;u=b+68|0;f=b+76|0;z=b+24|0;A=b+72|0;B=b;C=b+28|0;D=b+84|0;c[D>>2]=a;a=c[D>>2]|0;c[C>>2]=a+8;c[B>>2]=c[C>>2];wk(a,c[c[B>>2]>>2]|0);c[A>>2]=a;c[z>>2]=c[A>>2];c[y>>2]=c[z>>2];c[u>>2]=0;a=c[y>>2]|0;c[x>>2]=a;c[w>>2]=c[x>>2];c[f>>2]=c[c[w>>2]>>2];u=c[u>>2]|0;c[v>>2]=a;c[t>>2]=c[v>>2];c[c[t>>2]>>2]=u;if((c[f>>2]|0)==0){i=b;return}c[l>>2]=a;c[e>>2]=c[l>>2];C=c[f>>2]|0;c[g>>2]=(c[e>>2]|0)+4;c[h>>2]=C;C=c[g>>2]|0;c[j>>2]=C;c[k>>2]=c[j>>2];c[d>>2]=c[k>>2];B=c[d>>2]|0;D=c[h>>2]|0;c[m>>2]=C;c[n>>2]=c[m>>2];c[o>>2]=c[n>>2];C=c[c[o>>2]>>2]|0;c[p>>2]=B;c[q>>2]=D;c[r>>2]=C;C=c[q>>2]|0;D=c[r>>2]|0;c[b+64>>2]=c[p>>2];c[s>>2]=C;c[b+20>>2]=D;Sw(c[s>>2]|0);i=b;return}function wk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;r=i;i=i+112|0;q=r+36|0;n=r+64|0;v=r+4|0;w=r+32|0;u=r;e=r+68|0;s=r+12|0;t=r+104|0;k=r+44|0;l=r+20|0;h=r+24|0;j=r+28|0;g=r+96|0;A=r+100|0;B=r+40|0;C=r+56|0;x=r+52|0;y=r+48|0;z=r+72|0;D=r+76|0;E=r+80|0;F=r+84|0;G=r+88|0;f=r+16|0;p=r+8|0;m=r+92|0;o=r+60|0;c[G>>2]=b;c[f>>2]=d;c[F>>2]=c[G>>2];c[E>>2]=(c[F>>2]|0)+8;c[D>>2]=c[E>>2];c[p>>2]=c[D>>2];while(1){G=c[f>>2]|0;c[h>>2]=g;c[j>>2]=-1;F=c[j>>2]|0;c[k>>2]=c[h>>2];c[l>>2]=F;c[c[k>>2]>>2]=0;c[m>>2]=c[g>>2];c[n>>2]=m;if((G|0)==0)break;c[o>>2]=c[c[f>>2]>>2];F=c[p>>2]|0;c[q>>2]=(c[f>>2]|0)+8;G=c[q>>2]|0;c[e>>2]=F;c[s>>2]=G;G=c[e>>2]|0;F=c[s>>2]|0;a[u+0>>0]=a[t+0>>0]|0;c[v>>2]=G;c[w>>2]=F;xk(c[w>>2]|0);F=c[f>>2]|0;c[x>>2]=c[p>>2];c[y>>2]=F;c[z>>2]=1;F=c[y>>2]|0;G=c[z>>2]|0;c[A>>2]=c[x>>2];c[B>>2]=F;c[C>>2]=G;Sw(c[B>>2]|0);c[f>>2]=c[o>>2]}i=r;return}function xk(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;yk(c[d>>2]|0);i=b;return}function yk(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;zk(c[d>>2]|0);i=b;return}function zk(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Ak(c[d>>2]|0);i=b;return}function Ak(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Tm(c[d>>2]|0);i=b;return}function Bk(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=c[(c[d>>2]|0)+12>>2]|0;if((a|0)==0){i=b;return}Tw(a);i=b;return}function Ck(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Hi(c[d>>2]|0);i=b;return}function Dk(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Hk(c[d>>2]|0);i=b;return}function Ek(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Fk(c[d>>2]|0);i=b;return}function Fk(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;c[a+33619968>>2]=4;c[a+33619972>>2]=11;c[a+33619976>>2]=15;c[a+33619980>>2]=16;c[a+33619984>>2]=0;h[a+33619992>>3]=5.4;c[a+3362e4>>2]=0;Gk(a);i=b;return}function Gk(d){d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=i;i=i+64|0;h=e+32|0;f=e+20|0;g=e+44|0;k=e+36|0;j=e+12|0;l=e+40|0;n=e+48|0;m=e+52|0;o=e+56|0;r=e;q=e+8|0;p=e+4|0;t=e+24|0;s=e+60|0;v=e+28|0;u=e+16|0;c[v>>2]=d;d=c[v>>2]|0;c[u>>2]=0;c[q>>2]=d;c[p>>2]=d+65536;c[t>>2]=u;q=c[q>>2]|0;p=c[p>>2]|0;d=c[t>>2]|0;a[r+0>>0]=a[s+0>>0]|0;c[n>>2]=q;c[m>>2]=p;c[o>>2]=d;m=((c[m>>2]|0)-(c[n>>2]|0)|0)/2|0;d=c[o>>2]|0;c[k>>2]=c[n>>2];c[j>>2]=m;c[l>>2]=d;j=c[j>>2]|0;d=c[l>>2]|0;c[h>>2]=c[k>>2];c[f>>2]=j;c[g>>2]=d;while(1){if((c[f>>2]|0)<=0)break;b[c[h>>2]>>1]=c[c[g>>2]>>2];c[h>>2]=(c[h>>2]|0)+2;c[f>>2]=(c[f>>2]|0)+ -1}i=e;return}function Hk(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;c[a+33619968>>2]=4;c[a+33619972>>2]=11;c[a+33619976>>2]=15;c[a+33619980>>2]=16;c[a+33619984>>2]=0;h[a+33619992>>3]=5.4;c[a+3362e4>>2]=0;Ik(a);i=b;return}function Ik(d){d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=i;i=i+64|0;h=e+32|0;f=e+12|0;g=e+44|0;k=e+36|0;j=e+16|0;l=e+40|0;n=e+48|0;m=e+52|0;o=e+56|0;r=e;q=e+20|0;p=e+4|0;t=e+24|0;s=e+60|0;v=e+28|0;u=e+8|0;c[v>>2]=d;d=c[v>>2]|0;c[u>>2]=0;c[q>>2]=d;c[p>>2]=d+65536;c[t>>2]=u;q=c[q>>2]|0;p=c[p>>2]|0;d=c[t>>2]|0;a[r+0>>0]=a[s+0>>0]|0;c[n>>2]=q;c[m>>2]=p;c[o>>2]=d;m=((c[m>>2]|0)-(c[n>>2]|0)|0)/2|0;d=c[o>>2]|0;c[k>>2]=c[n>>2];c[j>>2]=m;c[l>>2]=d;j=c[j>>2]|0;d=c[l>>2]|0;c[h>>2]=c[k>>2];c[f>>2]=j;c[g>>2]=d;while(1){if((c[f>>2]|0)<=0)break;b[c[h>>2]>>1]=c[c[g>>2]>>2];c[h>>2]=(c[h>>2]|0)+2;c[f>>2]=(c[f>>2]|0)+ -1}i=e;return}function Jk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+32|0;l=f+16|0;k=f+12|0;j=f+8|0;h=f+4|0;g=f;c[l>>2]=b;c[k>>2]=d;c[j>>2]=e;e=c[l>>2]|0;c[e>>2]=c[k>>2];c[e+4>>2]=c[j>>2];c[e+8>>2]=0;c[h>>2]=(1<<c[e>>2])+(1<<c[e+4>>2]);b=(c[h>>2]|0)+2|0;c[e+12>>2]=Rw((b|0)<0?-1:b)|0;c[g>>2]=0;while(1){if((c[g>>2]|0)>=2)break;a[(c[e+12>>2]|0)+((c[h>>2]|0)+(c[g>>2]|0))>>0]=0;c[g>>2]=(c[g>>2]|0)+1}i=f;return}function Kk(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;b=i;i=i+96|0;d=b+84|0;f=b;e=b+28|0;h=b+76|0;g=b+8|0;j=b+12|0;k=b+44|0;l=b+64|0;m=b+72|0;n=b+80|0;p=b+88|0;o=b+36|0;q=b+40|0;r=b+48|0;s=b+56|0;t=b+16|0;v=b+60|0;u=b+4|0;w=b+20|0;x=b+68|0;y=b+24|0;c[y>>2]=a;a=c[y>>2]|0;c[x>>2]=a;c[w>>2]=c[x>>2];c[v>>2]=c[w>>2];c[u>>2]=0;u=c[u>>2]|0;c[s>>2]=c[v>>2];c[t>>2]=u;s=c[s>>2]|0;c[r>>2]=t;r=c[c[r>>2]>>2]|0;c[o>>2]=s;c[q>>2]=r;o=c[o>>2]|0;c[b+32>>2]=o;c[p>>2]=q;c[o>>2]=c[c[p>>2]>>2];c[n>>2]=a+4;c[m>>2]=c[n>>2];c[k>>2]=c[m>>2];c[l>>2]=0;a=c[l>>2]|0;c[g>>2]=c[k>>2];c[j>>2]=a;g=c[g>>2]|0;c[h>>2]=j;a=c[c[h>>2]>>2]|0;c[f>>2]=g;c[e>>2]=a;a=c[f>>2]|0;c[b+52>>2]=a;c[d>>2]=e;c[a>>2]=c[c[d>>2]>>2];i=b;return}function Lk(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Mk(c[d>>2]|0);i=b;return}function Mk(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=i;i=i+144|0;w=d+48|0;B=d+8|0;C=d+84|0;A=d;x=d+16|0;y=d+4|0;z=d+132|0;v=d+80|0;u=d+44|0;t=d+20|0;E=d+24|0;e=d+28|0;D=d+32|0;g=d+36|0;f=d+40|0;s=d+76|0;l=d+124|0;k=d+128|0;j=d+52|0;h=d+56|0;p=d+64|0;q=d+68|0;r=d+92|0;m=d+96|0;n=d+100|0;o=d+104|0;I=d+108|0;K=d+116|0;J=d+120|0;H=d+88|0;F=d+72|0;G=d+12|0;c[F>>2]=b;b=c[F>>2]|0;F=c[b>>2]|0;c[K>>2]=H;c[J>>2]=-1;J=c[J>>2]|0;c[I>>2]=c[K>>2];c[d+112>>2]=J;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[d+60>>2]=G;if((F|0)==0){i=d;return}c[D>>2]=b;K=c[D>>2]|0;D=c[K>>2]|0;c[E>>2]=K;c[e>>2]=D;D=c[E>>2]|0;while(1){if((c[e>>2]|0)==(c[D+4>>2]|0))break;c[t>>2]=D;c[u>>2]=(c[t>>2]|0)+8;c[v>>2]=c[u>>2];K=c[v>>2]|0;I=D+4|0;J=(c[I>>2]|0)+ -788|0;c[I>>2]=J;c[w>>2]=J;J=c[w>>2]|0;c[x>>2]=K;c[y>>2]=J;J=c[x>>2]|0;K=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=J;c[C>>2]=K}c[s>>2]=b;c[f>>2]=(c[s>>2]|0)+8;c[g>>2]=c[f>>2];I=c[g>>2]|0;K=c[b>>2]|0;c[h>>2]=b;J=c[h>>2]|0;c[j>>2]=J;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];J=((c[c[l>>2]>>2]|0)-(c[J>>2]|0)|0)/788|0;c[m>>2]=I;c[n>>2]=K;c[o>>2]=J;J=c[n>>2]|0;K=c[o>>2]|0;c[p>>2]=c[m>>2];c[q>>2]=J;c[r>>2]=K;Sw(c[q>>2]|0);i=d;return}function Nk(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Ok(c[d>>2]|0);i=b;return}function Ok(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=i;i=i+144|0;w=d+48|0;B=d+8|0;C=d+84|0;A=d;x=d+16|0;y=d+4|0;z=d+132|0;v=d+80|0;u=d+44|0;t=d+20|0;E=d+24|0;e=d+28|0;D=d+32|0;g=d+36|0;f=d+40|0;s=d+76|0;l=d+124|0;k=d+128|0;j=d+52|0;h=d+56|0;p=d+64|0;q=d+68|0;r=d+92|0;m=d+96|0;n=d+100|0;o=d+104|0;I=d+108|0;K=d+116|0;J=d+120|0;H=d+88|0;F=d+72|0;G=d+12|0;c[F>>2]=b;b=c[F>>2]|0;F=c[b>>2]|0;c[K>>2]=H;c[J>>2]=-1;J=c[J>>2]|0;c[I>>2]=c[K>>2];c[d+112>>2]=J;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[d+60>>2]=G;if((F|0)==0){i=d;return}c[D>>2]=b;K=c[D>>2]|0;D=c[K>>2]|0;c[E>>2]=K;c[e>>2]=D;D=c[E>>2]|0;while(1){if((c[e>>2]|0)==(c[D+4>>2]|0))break;c[t>>2]=D;c[u>>2]=(c[t>>2]|0)+8;c[v>>2]=c[u>>2];K=c[v>>2]|0;I=D+4|0;J=(c[I>>2]|0)+ -2132|0;c[I>>2]=J;c[w>>2]=J;J=c[w>>2]|0;c[x>>2]=K;c[y>>2]=J;J=c[x>>2]|0;K=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=J;c[C>>2]=K}c[s>>2]=b;c[f>>2]=(c[s>>2]|0)+8;c[g>>2]=c[f>>2];I=c[g>>2]|0;K=c[b>>2]|0;c[h>>2]=b;J=c[h>>2]|0;c[j>>2]=J;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];J=((c[c[l>>2]>>2]|0)-(c[J>>2]|0)|0)/2132|0;c[m>>2]=I;c[n>>2]=K;c[o>>2]=J;J=c[n>>2]|0;K=c[o>>2]|0;c[p>>2]=c[m>>2];c[q>>2]=J;c[r>>2]=K;Sw(c[q>>2]|0);i=d;return}function Pk(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Qk(c[d>>2]|0);i=b;return}function Qk(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=i;i=i+144|0;w=d+48|0;B=d+8|0;C=d+84|0;A=d;x=d+16|0;y=d+4|0;z=d+132|0;v=d+80|0;u=d+44|0;t=d+20|0;E=d+24|0;e=d+28|0;D=d+32|0;g=d+36|0;f=d+40|0;s=d+76|0;l=d+124|0;k=d+128|0;j=d+52|0;h=d+56|0;p=d+64|0;q=d+68|0;r=d+92|0;m=d+96|0;n=d+100|0;o=d+104|0;I=d+108|0;K=d+116|0;J=d+120|0;H=d+88|0;F=d+72|0;G=d+12|0;c[F>>2]=b;b=c[F>>2]|0;F=c[b>>2]|0;c[K>>2]=H;c[J>>2]=-1;J=c[J>>2]|0;c[I>>2]=c[K>>2];c[d+112>>2]=J;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[d+60>>2]=G;if((F|0)==0){i=d;return}c[D>>2]=b;K=c[D>>2]|0;D=c[K>>2]|0;c[E>>2]=K;c[e>>2]=D;D=c[E>>2]|0;while(1){if((c[e>>2]|0)==(c[D+4>>2]|0))break;c[t>>2]=D;c[u>>2]=(c[t>>2]|0)+8;c[v>>2]=c[u>>2];K=c[v>>2]|0;I=D+4|0;J=(c[I>>2]|0)+ -1580|0;c[I>>2]=J;c[w>>2]=J;J=c[w>>2]|0;c[x>>2]=K;c[y>>2]=J;J=c[x>>2]|0;K=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=J;c[C>>2]=K}c[s>>2]=b;c[f>>2]=(c[s>>2]|0)+8;c[g>>2]=c[f>>2];I=c[g>>2]|0;K=c[b>>2]|0;c[h>>2]=b;J=c[h>>2]|0;c[j>>2]=J;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];J=((c[c[l>>2]>>2]|0)-(c[J>>2]|0)|0)/1580|0;c[m>>2]=I;c[n>>2]=K;c[o>>2]=J;J=c[n>>2]|0;K=c[o>>2]|0;c[p>>2]=c[m>>2];c[q>>2]=J;c[r>>2]=K;Sw(c[q>>2]|0);i=d;return}function Rk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+32|0;f=d+16|0;g=d+12|0;h=d+8|0;j=d+4|0;e=d;c[j>>2]=a;c[e>>2]=b;b=c[j>>2]|0;c[b>>2]=c[e>>2];c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[h>>2]=(c[e>>2]|0)+28;a=c[h>>2]|0;if((c[a>>2]|0)==(c[a+4>>2]|0)){i=d;return}c[f>>2]=(c[e>>2]|0)+28;c[g>>2]=0;c[b+12>>2]=c[(c[c[f>>2]>>2]|0)+(c[g>>2]<<2)>>2];i=d;return}function Sk(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0;j=i;i=i+656|0;q=j+284|0;o=j+620|0;u=j+612|0;s=j+604|0;p=j+4|0;n=j+268|0;t=j+272|0;m=j+276|0;r=j+280|0;v=j+596|0;x=j+24|0;E=j+28|0;D=j+32|0;y=j+36|0;C=j+40|0;B=j+548|0;A=j+44|0;z=j+48|0;I=j+52|0;F=j+56|0;H=j+60|0;G=j+64|0;J=j+68|0;K=j+72|0;Q=j+76|0;w=j+80|0;O=j+84|0;P=j+88|0;N=j+92|0;M=j+96|0;L=j+100|0;X=j+544|0;W=j+104|0;U=j+108|0;V=j+112|0;S=j+116|0;T=j+120|0;ea=j+124|0;fa=j+128|0;ga=j+132|0;ka=j+136|0;aa=j+140|0;ba=j+144|0;ca=j+148|0;da=j+152|0;ha=j+156|0;ia=j+160|0;ja=j+164|0;la=j+168|0;ma=j+172|0;Y=j+176|0;ra=j+180|0;qa=j+184|0;pa=j+188|0;ua=j+192|0;ta=j+196|0;na=j+200|0;sa=j+204|0;oa=j+208|0;va=j+212|0;wa=j+216|0;Ma=j+220|0;Na=j+224|0;Oa=j+540|0;Ba=j+228|0;Ha=j+232|0;Ia=j+236|0;Ca=j+240|0;Ea=j+244|0;Ga=j+248|0;Ua=j+252|0;Wa=j+576|0;ob=j+592|0;qb=j+600|0;Xa=j+608|0;jb=j+616|0;kb=j+624|0;lb=j+640|0;mb=j+644|0;nb=j+288|0;ab=j+292|0;hb=j+296|0;ib=j+300|0;tb=j+304|0;sb=j+308|0;Qb=j+312|0;Ta=j+316|0;Ob=j+320|0;Pb=j+324|0;Nb=j+328|0;Mb=j+332|0;Lb=j+336|0;Kb=j+340|0;Hb=j+344|0;Ib=j+348|0;Jb=j+352|0;Eb=j+356|0;Fb=j+360|0;Gb=j+364|0;Da=j+368|0;za=j+372|0;Fa=j+376|0;Pa=j+380|0;Qa=j+384|0;Aa=j+388|0;Ja=j+392|0;Ka=j+396|0;La=j+400|0;Sa=j+404|0;Va=j+408|0;gb=j+412|0;eb=j+416|0;fb=j+420|0;_a=j+424|0;Za=j+428|0;Ya=j+432|0;pb=j+436|0;$a=j+440|0;db=j+444|0;cb=j+448|0;bb=j+452|0;rb=j+456|0;ub=j+460|0;Sb=j+464|0;Ra=j+468|0;vb=j+472|0;Tb=j+476|0;wb=j+536|0;xb=j+480|0;yb=j+484|0;zb=j+488|0;Cb=j+492|0;Bb=j+496|0;Ab=j+500|0;Ub=j+504|0;Rb=j+508|0;Db=j+512|0;Xb=j+516|0;Zb=j+524|0;_b=j+528|0;$b=j+532|0;ac=j+20|0;Yb=j+16|0;bc=j+568|0;cc=j+552|0;R=j+572|0;Wb=j+256|0;$=j;k=j+648|0;Vb=j+260|0;ya=j+580|0;xa=j+556|0;_=j+8|0;Z=j+264|0;h=j+628|0;l=j+12|0;c[R>>2]=e;c[Wb>>2]=f;c[$>>2]=g;a[k>>0]=0;f=c[c[R>>2]>>2]|0;c[bc>>2]=b;c[cc>>2]=f;f=c[cc>>2]|0;c[ac>>2]=c[bc>>2];c[Yb>>2]=f;f=c[ac>>2]|0;c[$b>>2]=f;c[_b>>2]=c[$b>>2];c[Zb>>2]=c[_b>>2];c[j+520>>2]=c[Zb>>2];e=c[Yb>>2]|0;c[Xb>>2]=c[Yb>>2];Qm(f,e,wy(c[Xb>>2]|0)|0);if((c[(c[R>>2]|0)+4>>2]|0)<=9)c[$>>2]=(c[$>>2]|0)-(c[(c[R>>2]|0)+4>>2]|0);a:do if((c[$>>2]|0)>0){if((c[(c[R>>2]|0)+4>>2]|0)>=12){c[Vb>>2]=(c[(c[R>>2]|0)+4>>2]|0)-11;if((c[$>>2]|0)<=(c[Vb>>2]|0))break;Y=(c[Wb>>2]|0)+(c[Vb>>2]|0)|0;Z=(c[Wb>>2]|0)+(c[$>>2]|0)|0;c[Ub>>2]=ya;c[Rb>>2]=Y;c[Db>>2]=Z;Z=c[Rb>>2]|0;Y=c[Db>>2]|0;c[Cb>>2]=c[Ub>>2];c[Bb>>2]=Z;c[Ab>>2]=Y;Y=c[Cb>>2]|0;c[zb>>2]=Y;c[yb>>2]=c[zb>>2];c[xb>>2]=c[yb>>2];c[wb>>2]=c[xb>>2];Uk(Y,c[Bb>>2]|0,c[Ab>>2]|0);c[vb>>2]=b;c[Tb>>2]=ya;Y=c[Tb>>2]|0;c[Sb>>2]=c[vb>>2];c[Ra>>2]=Y;Y=c[Sb>>2]|0;c[ub>>2]=c[Ra>>2];c[rb>>2]=c[ub>>2];Z=c[rb>>2]|0;c[bb>>2]=Z;c[cb>>2]=c[bb>>2];c[db>>2]=c[cb>>2];if(((d[c[db>>2]>>0]|0)&1|0)!=0){c[fb>>2]=Z;c[eb>>2]=c[fb>>2];c[gb>>2]=c[eb>>2];Z=c[(c[gb>>2]|0)+8>>2]|0}else{c[$a>>2]=Z;c[pb>>2]=c[$a>>2];c[Ya>>2]=c[pb>>2];c[Za>>2]=(c[Ya>>2]|0)+1;c[_a>>2]=c[Za>>2];Z=c[_a>>2]|0}c[Va>>2]=Z;Z=c[Va>>2]|0;c[Sa>>2]=c[Ra>>2];_=c[Sa>>2]|0;c[La>>2]=_;c[Ka>>2]=c[La>>2];c[Ja>>2]=c[Ka>>2];if(((d[c[Ja>>2]>>0]|0)&1|0)!=0){c[Fa>>2]=_;c[za>>2]=c[Fa>>2];c[Da>>2]=c[za>>2];_=c[(c[Da>>2]|0)+4>>2]|0}else{c[Aa>>2]=_;c[Qa>>2]=c[Aa>>2];c[Pa>>2]=c[Qa>>2];_=(d[c[Pa>>2]>>0]|0)>>1}an(Y,Z,_)|0;Tm(ya);break}ya=c[Wb>>2]|0;za=(c[Wb>>2]|0)+(c[$>>2]|0)|0;c[Eb>>2]=xa;c[Fb>>2]=ya;c[Gb>>2]=za;za=c[Fb>>2]|0;ya=c[Gb>>2]|0;c[Hb>>2]=c[Eb>>2];c[Ib>>2]=za;c[Jb>>2]=ya;ya=c[Hb>>2]|0;c[Kb>>2]=ya;c[Lb>>2]=c[Kb>>2];c[Mb>>2]=c[Lb>>2];c[Nb>>2]=c[Mb>>2];Uk(ya,c[Ib>>2]|0,c[Jb>>2]|0);c[Ob>>2]=b;c[Pb>>2]=xa;ya=c[Pb>>2]|0;c[Qb>>2]=c[Ob>>2];c[Ta>>2]=ya;ya=c[Qb>>2]|0;c[sb>>2]=c[Ta>>2];c[tb>>2]=c[sb>>2];za=c[tb>>2]|0;c[ib>>2]=za;c[hb>>2]=c[ib>>2];c[ab>>2]=c[hb>>2];if(((d[c[ab>>2]>>0]|0)&1|0)!=0){c[Xa>>2]=za;c[qb>>2]=c[Xa>>2];c[ob>>2]=c[qb>>2];za=c[(c[ob>>2]|0)+8>>2]|0}else{c[nb>>2]=za;c[mb>>2]=c[nb>>2];c[lb>>2]=c[mb>>2];c[kb>>2]=(c[lb>>2]|0)+1;c[jb>>2]=c[kb>>2];za=c[jb>>2]|0}c[Wa>>2]=za;za=c[Wa>>2]|0;c[Ua>>2]=c[Ta>>2];Aa=c[Ua>>2]|0;c[Ga>>2]=Aa;c[Ea>>2]=c[Ga>>2];c[Ca>>2]=c[Ea>>2];if(((d[c[Ca>>2]>>0]|0)&1|0)!=0){c[Oa>>2]=Aa;c[Na>>2]=c[Oa>>2];c[Ma>>2]=c[Na>>2];Aa=c[(c[Ma>>2]|0)+4>>2]|0}else{c[Ia>>2]=Aa;c[Ha>>2]=c[Ia>>2];c[Ba>>2]=c[Ha>>2];Aa=(d[c[Ba>>2]>>0]|0)>>1}an(ya,za,Aa)|0;Tm(xa);c[wa>>2]=b;wa=c[wa>>2]|0;c[va>>2]=wa;c[oa>>2]=c[va>>2];c[sa>>2]=c[oa>>2];if(((d[c[sa>>2]>>0]|0)&1|0)!=0){c[pa>>2]=wa;c[qa>>2]=c[pa>>2];c[ra>>2]=c[qa>>2];na=c[(c[ra>>2]|0)+4>>2]|0}else{c[na>>2]=wa;c[ta>>2]=c[na>>2];c[ua>>2]=c[ta>>2];na=(d[c[ua>>2]>>0]|0)>>1}cc=na-(c[$>>2]|0)|0;c[ma>>2]=b;c[Y>>2]=cc;c[la>>2]=c[ma>>2];la=c[la>>2]|0;c[ja>>2]=la;c[ia>>2]=c[ja>>2];c[ha>>2]=c[ia>>2];if(((d[c[ha>>2]>>0]|0)&1|0)!=0){c[ga>>2]=la;c[fa>>2]=c[ga>>2];c[ea>>2]=c[fa>>2];aa=c[(c[ea>>2]|0)+8>>2]|0}else{c[da>>2]=la;c[ca>>2]=c[da>>2];c[ba>>2]=c[ca>>2];c[aa>>2]=(c[ba>>2]|0)+1;c[ka>>2]=c[aa>>2];aa=c[ka>>2]|0}c[_>>2]=aa+(c[Y>>2]|0);if((c[(c[R>>2]|0)+4>>2]|0)==10){Tk(c[_>>2]|0,c[$>>2]|0)|0;break}if((c[(c[R>>2]|0)+4>>2]|0)==11)while(1){if((c[$>>2]|0)<=0)break a;c[Z>>2]=Tk(c[_>>2]|0,c[$>>2]|0)|0;c[_>>2]=(c[_>>2]|0)+(c[Z>>2]|0);c[$>>2]=(c[$>>2]|0)-(c[Z>>2]|0)}}while(0);cc=c[(c[R>>2]|0)+8>>2]|0;c[S>>2]=h;c[T>>2]=cc;cc=c[T>>2]|0;c[U>>2]=c[S>>2];c[V>>2]=cc;cc=c[U>>2]|0;c[W>>2]=cc;c[X>>2]=c[W>>2];c[L>>2]=c[X>>2];c[M>>2]=c[L>>2];L=c[V>>2]|0;c[N>>2]=c[V>>2];Qm(cc,L,wy(c[N>>2]|0)|0);c[O>>2]=b;c[P>>2]=h;L=c[P>>2]|0;c[Q>>2]=c[O>>2];c[w>>2]=L;L=c[Q>>2]|0;c[K>>2]=c[w>>2];c[J>>2]=c[K>>2];J=c[J>>2]|0;c[G>>2]=J;c[H>>2]=c[G>>2];c[F>>2]=c[H>>2];if(((d[c[F>>2]>>0]|0)&1|0)!=0){c[y>>2]=J;c[D>>2]=c[y>>2];c[E>>2]=c[D>>2];y=c[(c[E>>2]|0)+8>>2]|0}else{c[I>>2]=J;c[z>>2]=c[I>>2];c[A>>2]=c[z>>2];c[B>>2]=(c[A>>2]|0)+1;c[C>>2]=c[B>>2];y=c[C>>2]|0}c[x>>2]=y;x=c[x>>2]|0;c[v>>2]=c[w>>2];v=c[v>>2]|0;c[r>>2]=v;c[m>>2]=c[r>>2];c[t>>2]=c[m>>2];if(((d[c[t>>2]>>0]|0)&1|0)!=0){c[u>>2]=v;c[o>>2]=c[u>>2];c[q>>2]=c[o>>2];m=c[(c[q>>2]|0)+4>>2]|0}else{c[n>>2]=v;c[p>>2]=c[n>>2];c[s>>2]=c[p>>2];m=(d[c[s>>2]>>0]|0)>>1}an(L,x,m)|0;Tm(h);a[k>>0]=1;c[l>>2]=1;if(a[k>>0]&1){i=j;return}Tm(b);i=j;return}function Tk(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+16|0;g=f+8|0;h=f+4|0;j=f;c[h>>2]=b;c[j>>2]=e;if((c[j>>2]|0)!=1?(d[c[h>>2]>>0]|0|0)>=192:0){if((d[c[h>>2]>>0]|0|0)<224){b=(c[h>>2]|0)+1|0;a[b>>0]=(d[b>>0]|0)^32;c[g>>2]=2;b=c[g>>2]|0;i=f;return b|0}if((c[j>>2]|0)==2){c[g>>2]=2;b=c[g>>2]|0;i=f;return b|0}else{b=(c[h>>2]|0)+2|0;a[b>>0]=(d[b>>0]|0)^5;c[g>>2]=3;b=c[g>>2]|0;i=f;return b|0}}if((d[c[h>>2]>>0]|0|0)>=97?(d[c[h>>2]>>0]|0|0)<=122:0){b=c[h>>2]|0;a[b>>0]=(d[b>>0]|0)^32}c[g>>2]=1;b=c[g>>2]|0;i=f;return b|0}function Uk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0;h=i;i=i+240|0;M=h+116|0;S=h+100|0;U=h+124|0;T=h+112|0;N=h+192|0;R=h+208|0;O=h+132|0;P=h+92|0;Q=h+28|0;W=h+36|0;V=h+40|0;C=h+44|0;q=h+48|0;A=h+52|0;Y=h+56|0;Z=h+64|0;_=h+8|0;aa=h+68|0;$=h+226|0;ba=h+76|0;ca=h+80|0;da=h+84|0;ea=h+88|0;X=h+188|0;F=h+196|0;G=h+204|0;H=h+212|0;D=h+216|0;B=h+184|0;L=h+220|0;K=h+120|0;I=h+60|0;J=h+128|0;v=h+32|0;w=h+136|0;y=h+140|0;x=h+144|0;E=h+148|0;r=h+152|0;t=h+156|0;s=h+160|0;n=h+164|0;o=h+168|0;p=h+172|0;l=h+176|0;fa=h+20|0;ga=h+12|0;ha=h;ka=h+180|0;ja=h+24|0;ia=h+227|0;la=h+96|0;k=h+200|0;f=h+104|0;u=h+108|0;j=h+16|0;z=h+72|0;m=h+225|0;g=h+224|0;c[la>>2]=b;c[k>>2]=d;c[f>>2]=e;e=c[la>>2]|0;d=c[f>>2]|0;c[ka>>2]=c[k>>2];c[ja>>2]=d;d=c[ka>>2]|0;b=c[ja>>2]|0;a[ha+0>>0]=a[ia+0>>0]|0;c[fa>>2]=d;c[ga>>2]=b;c[u>>2]=(c[ga>>2]|0)-(c[fa>>2]|0);b=c[u>>2]|0;c[ea>>2]=e;c[da>>2]=c[ea>>2];c[ca>>2]=c[da>>2];c[ba>>2]=c[ca>>2];c[aa>>2]=c[ba>>2];d=c[aa>>2]|0;a[_+0>>0]=a[$+0>>0]|0;c[Z>>2]=d;c[Y>>2]=c[Z>>2];c[X>>2]=-1;if(b>>>0>((c[X>>2]|0)-16|0)>>>0)Nm(e);d=c[u>>2]|0;if((c[u>>2]|0)>>>0<11){c[U>>2]=e;c[T>>2]=d;la=c[T>>2]<<1&255;c[S>>2]=c[U>>2];c[M>>2]=c[S>>2];a[c[M>>2]>>0]=la;c[Q>>2]=e;c[P>>2]=c[Q>>2];c[O>>2]=c[P>>2];c[R>>2]=(c[O>>2]|0)+1;c[N>>2]=c[R>>2];c[j>>2]=c[N>>2]}else{c[V>>2]=d;if((c[V>>2]|0)>>>0<11)M=11;else{c[W>>2]=(c[V>>2]|0)+1;M=(c[W>>2]|0)+15&-16}c[z>>2]=M-1;c[A>>2]=e;c[q>>2]=c[A>>2];c[C>>2]=c[q>>2];la=(c[z>>2]|0)+1|0;c[D>>2]=c[C>>2];c[B>>2]=la;la=c[B>>2]|0;c[F>>2]=c[D>>2];c[G>>2]=la;c[H>>2]=0;c[j>>2]=Qw(c[G>>2]|0)|0;la=c[j>>2]|0;c[I>>2]=e;c[J>>2]=la;la=c[J>>2]|0;c[K>>2]=c[I>>2];c[L>>2]=c[K>>2];c[(c[L>>2]|0)+8>>2]=la;la=(c[z>>2]|0)+1|0;c[y>>2]=e;c[x>>2]=la;la=1|c[x>>2];c[w>>2]=c[y>>2];c[v>>2]=c[w>>2];c[c[v>>2]>>2]=la;la=c[u>>2]|0;c[t>>2]=e;c[s>>2]=la;la=c[s>>2]|0;c[r>>2]=c[t>>2];c[E>>2]=c[r>>2];c[(c[E>>2]|0)+4>>2]=la}while(1){q=c[j>>2]|0;if((c[k>>2]|0)==(c[f>>2]|0))break;a[m>>0]=a[c[k>>2]>>0]|0;c[n>>2]=q;c[o>>2]=m;a[c[n>>2]>>0]=a[c[o>>2]>>0]|0;c[k>>2]=(c[k>>2]|0)+1;c[j>>2]=(c[j>>2]|0)+1}a[g>>0]=0;c[p>>2]=q;c[l>>2]=g;a[c[p>>2]>>0]=a[c[l>>2]>>0]|0;i=h;return}function Vk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;h=f+8|0;g=f;c[h>>2]=b;b=g;c[b>>2]=d;c[b+4>>2]=e;b=c[h>>2]|0;a[b+0>>0]=a[g+0>>0]|0;a[b+1>>0]=a[g+1>>0]|0;a[b+2>>0]=a[g+2>>0]|0;a[b+3>>0]=a[g+3>>0]|0;a[b+4>>0]=a[g+4>>0]|0;a[b+5>>0]=a[g+5>>0]|0;a[b+6>>0]=a[g+6>>0]|0;a[b+7>>0]=a[g+7>>0]|0;i=f;return}function Wk(e,f,g,h){e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0;$a=i;i=i+544|0;ja=$a+268|0;ka=$a+260|0;da=$a+256|0;ea=$a+252|0;fa=$a+248|0;ga=$a+504|0;K=$a+512|0;N=$a+520|0;O=$a+496|0;Q=$a+40|0;R=$a+56|0;S=$a+60|0;T=$a+64|0;U=$a+68|0;V=$a+72|0;W=$a+276|0;X=$a+140|0;ha=$a+76|0;ia=$a+88|0;qa=$a+92|0;sa=$a+96|0;j=$a+100|0;ma=$a+104|0;pa=$a+108|0;oa=$a+112|0;na=$a+116|0;k=$a+120|0;xa=$a+124|0;wa=$a+128|0;va=$a+132|0;ra=$a+136|0;Da=$a+272|0;Fa=$a+144|0;Ga=$a+84|0;za=$a+152|0;Ca=$a+156|0;Ba=$a+160|0;Aa=$a+164|0;_a=$a+168|0;Za=$a+172|0;Ya=$a+176|0;Xa=$a+180|0;Ea=$a+184|0;F=$a+188|0;H=$a+192|0;I=$a+196|0;J=$a+200|0;E=$a+204|0;D=$a+208|0;C=$a+212|0;aa=$a+216|0;$=$a+220|0;_=$a+224|0;Y=$a+228|0;G=$a+232|0;t=$a+236|0;u=$a+240|0;v=$a+492|0;w=$a+500|0;Ta=$a+508|0;Ua=$a+516|0;Va=$a+524|0;Wa=$a+528|0;Sa=$a+532|0;Ra=$a+148|0;Qa=$a+8|0;Pa=$a;Ma=$a+284|0;Na=$a+288|0;La=$a+292|0;Ia=$a+296|0;Ja=$a+300|0;Ha=$a+304|0;n=$a+308|0;o=$a+312|0;p=$a+316|0;ya=$a+320|0;q=$a+324|0;l=$a+328|0;m=$a+24|0;z=$a+336|0;A=$a+340|0;B=$a+536|0;ab=$a+348|0;bb=$a+352|0;cb=$a+356|0;zb=$a+360|0;Ab=$a+364|0;Bb=$a+368|0;Cb=$a+372|0;yb=$a+376|0;xb=$a+380|0;wb=$a+384|0;vb=$a+388|0;ub=$a+392|0;tb=$a+396|0;rb=$a+400|0;sb=$a+404|0;mb=$a+408|0;nb=$a+412|0;ob=$a+416|0;kb=$a+420|0;lb=$a+424|0;jb=$a+16|0;fb=$a+440|0;hb=$a+444|0;ib=$a+537|0;db=$a+452|0;y=$a+456|0;ta=$a+460|0;x=$a+464|0;gb=$a+468|0;s=$a+472|0;eb=$a+80|0;pb=$a+32|0;qb=$a+432|0;r=$a+28|0;ua=$a+36|0;Ka=$a+280|0;Oa=$a+484|0;Z=$a+48|0;ba=$a+332|0;ca=$a+244|0;la=$a+488|0;M=$a+264|0;P=$a+448|0;L=$a+344|0;c[db>>2]=e;c[y>>2]=f;c[ta>>2]=g;c[x>>2]=h;c[gb>>2]=1;while(1){tl(s);Xk(s,(c[y>>2]<<1)+1|0);c[eb>>2]=0;while(1){if((c[eb>>2]|0)>=(c[y>>2]|0))break;do if((c[(c[db>>2]|0)+(c[eb>>2]<<2)>>2]|0)!=0){c[fb>>2]=(c[db>>2]|0)+(c[eb>>2]<<2);c[hb>>2]=gb;h=c[fb>>2]|0;e=c[hb>>2]|0;a[jb+0>>0]=a[ib+0>>0]|0;c[kb>>2]=h;c[lb>>2]=e;e=c[kb>>2]|0;h=c[lb>>2]|0;c[mb>>2]=jb;c[nb>>2]=e;c[ob>>2]=h;c[pb>>2]=c[((c[c[nb>>2]>>2]|0)<(c[c[ob>>2]>>2]|0)?c[lb>>2]|0:c[kb>>2]|0)>>2];wl(qb,c[pb>>2]|0,-1,c[eb>>2]&65535);c[rb>>2]=s;c[sb>>2]=qb;h=c[rb>>2]|0;e=c[h+4>>2]|0;c[tb>>2]=h;c[ub>>2]=(c[tb>>2]|0)+8;c[vb>>2]=c[ub>>2];if((e|0)==(c[c[vb>>2]>>2]|0)){nl(h,c[sb>>2]|0);break}c[wb>>2]=h;c[xb>>2]=(c[wb>>2]|0)+8;c[yb>>2]=c[xb>>2];f=c[yb>>2]|0;c[zb>>2]=c[h+4>>2];e=c[zb>>2]|0;g=c[sb>>2]|0;c[Ab>>2]=f;c[Bb>>2]=e;c[Cb>>2]=g;g=c[Bb>>2]|0;if((g|0)!=0){e=c[Cb>>2]|0;c[g+0>>2]=c[e+0>>2];c[g+4>>2]=c[e+4>>2]}e=h+4|0;c[e>>2]=(c[e>>2]|0)+8}while(0);c[eb>>2]=(c[eb>>2]|0)+1}c[cb>>2]=s;e=c[cb>>2]|0;c[r>>2]=((c[e+4>>2]|0)-(c[e>>2]|0)|0)/8|0;do if((c[r>>2]|0)!=1){c[Ha>>2]=s;e=c[Ha>>2]|0;h=c[e>>2]|0;c[Ia>>2]=e;c[Ja>>2]=h;ml(Ka,c[Ja>>2]|0);c[La>>2]=s;h=c[La>>2]|0;e=c[h+4>>2]|0;c[Ma>>2]=h;c[Na>>2]=e;ml(Oa,c[Na>>2]|0);a[Pa+0>>0]=a[Ka+0>>0]|0;a[Pa+1>>0]=a[Ka+1>>0]|0;a[Pa+2>>0]=a[Ka+2>>0]|0;a[Pa+3>>0]=a[Ka+3>>0]|0;a[Qa+0>>0]=a[Oa+0>>0]|0;a[Qa+1>>0]=a[Oa+1>>0]|0;a[Qa+2>>0]=a[Oa+2>>0]|0;a[Qa+3>>0]=a[Oa+3>>0]|0;c[Ra>>2]=15;c[Sa>>2]=Pa;e=c[c[Sa>>2]>>2]|0;c[Ta>>2]=Qa;h=c[c[Ta>>2]>>2]|0;c[Ua>>2]=e;c[Va>>2]=h;c[Wa>>2]=Ra;gl(c[Ua>>2]|0,c[Va>>2]|0,c[Wa>>2]|0);wl(Z,2147483647,-1,-1);c[Xa>>2]=s;c[Ea>>2]=Z;h=c[Xa>>2]|0;e=c[h+4>>2]|0;c[Ya>>2]=h;c[Za>>2]=(c[Ya>>2]|0)+8;c[_a>>2]=c[Za>>2];if((e|0)!=(c[c[_a>>2]>>2]|0)){c[Aa>>2]=h;c[Ba>>2]=(c[Aa>>2]|0)+8;c[Ca>>2]=c[Ba>>2];f=c[Ca>>2]|0;c[Da>>2]=c[h+4>>2];e=c[Da>>2]|0;g=c[Ea>>2]|0;c[Fa>>2]=f;c[Ga>>2]=e;c[za>>2]=g;g=c[Ga>>2]|0;if((g|0)!=0){e=c[za>>2]|0;c[g+0>>2]=c[e+0>>2];c[g+4>>2]=c[e+4>>2]}e=h+4|0;c[e>>2]=(c[e>>2]|0)+8}else nl(h,c[Ea>>2]|0);c[va>>2]=s;c[ra>>2]=Z;h=c[va>>2]|0;e=c[h+4>>2]|0;c[wa>>2]=h;c[xa>>2]=(c[wa>>2]|0)+8;c[k>>2]=c[xa>>2];if((e|0)!=(c[c[k>>2]>>2]|0)){c[na>>2]=h;c[oa>>2]=(c[na>>2]|0)+8;c[pa>>2]=c[oa>>2];f=c[pa>>2]|0;c[qa>>2]=c[h+4>>2];e=c[qa>>2]|0;g=c[ra>>2]|0;c[sa>>2]=f;c[j>>2]=e;c[ma>>2]=g;g=c[j>>2]|0;if((g|0)!=0){e=c[ma>>2]|0;c[g+0>>2]=c[e+0>>2];c[g+4>>2]=c[e+4>>2]}e=h+4|0;c[e>>2]=(c[e>>2]|0)+8}else nl(h,c[ra>>2]|0);c[ba>>2]=0;c[ca>>2]=(c[r>>2]|0)+1;c[la>>2]=(c[r>>2]|0)-1;while(1){if((c[la>>2]|0)<=0)break;e=c[ba>>2]|0;c[ha>>2]=s;c[ia>>2]=e;e=c[(c[c[ha>>2]>>2]|0)+(c[ia>>2]<<3)>>2]|0;f=c[ca>>2]|0;c[ja>>2]=s;c[ka>>2]=f;if((e|0)<=(c[(c[c[ja>>2]>>2]|0)+(c[ka>>2]<<3)>>2]|0)){c[M>>2]=c[ba>>2];c[ba>>2]=(c[ba>>2]|0)+1}else{c[M>>2]=c[ca>>2];c[ca>>2]=(c[ca>>2]|0)+1}e=c[ba>>2]|0;c[da>>2]=s;c[ea>>2]=e;e=c[(c[c[da>>2]>>2]|0)+(c[ea>>2]<<3)>>2]|0;f=c[ca>>2]|0;c[fa>>2]=s;c[ga>>2]=f;if((e|0)<=(c[(c[c[fa>>2]>>2]|0)+(c[ga>>2]<<3)>>2]|0)){c[P>>2]=c[ba>>2];c[ba>>2]=(c[ba>>2]|0)+1}else{c[P>>2]=c[ca>>2];c[ca>>2]=(c[ca>>2]|0)+1}c[K>>2]=s;h=c[K>>2]|0;c[L>>2]=(((c[h+4>>2]|0)-(c[h>>2]|0)|0)/8|0)-1;h=c[M>>2]|0;c[N>>2]=s;c[O>>2]=h;h=c[(c[c[N>>2]>>2]|0)+(c[O>>2]<<3)>>2]|0;e=c[P>>2]|0;c[Q>>2]=s;c[R>>2]=e;h=h+(c[(c[c[Q>>2]>>2]|0)+(c[R>>2]<<3)>>2]|0)|0;e=c[L>>2]|0;c[S>>2]=s;c[T>>2]=e;c[(c[c[S>>2]>>2]|0)+(c[T>>2]<<3)>>2]=h;h=c[M>>2]&65535;e=c[L>>2]|0;c[U>>2]=s;c[V>>2]=e;b[(c[c[U>>2]>>2]|0)+(c[V>>2]<<3)+4>>1]=h;h=c[P>>2]&65535;e=c[L>>2]|0;c[W>>2]=s;c[X>>2]=e;b[(c[c[W>>2]>>2]|0)+(c[X>>2]<<3)+6>>1]=h;c[Y>>2]=s;c[G>>2]=Z;h=c[Y>>2]|0;e=c[h+4>>2]|0;c[_>>2]=h;c[$>>2]=(c[_>>2]|0)+8;c[aa>>2]=c[$>>2];if((e|0)!=(c[c[aa>>2]>>2]|0)){c[C>>2]=h;c[D>>2]=(c[C>>2]|0)+8;c[E>>2]=c[D>>2];f=c[E>>2]|0;c[F>>2]=c[h+4>>2];e=c[F>>2]|0;g=c[G>>2]|0;c[H>>2]=f;c[I>>2]=e;c[J>>2]=g;g=c[I>>2]|0;if((g|0)!=0){e=c[J>>2]|0;c[g+0>>2]=c[e+0>>2];c[g+4>>2]=c[e+4>>2]}e=h+4|0;c[e>>2]=(c[e>>2]|0)+8}else nl(h,c[G>>2]|0);c[la>>2]=(c[la>>2]|0)+ -1}f=(c[r>>2]<<1)-1|0;c[t>>2]=s;c[u>>2]=f;f=(c[c[t>>2]>>2]|0)+(c[u>>2]<<3)|0;c[v>>2]=s;c[w>>2]=0;Zk(f,(c[c[v>>2]>>2]|0)+(c[w>>2]<<3)|0,c[x>>2]|0,0);f=(c[x>>2]|0)+(c[y>>2]|0)|0;c[z>>2]=c[x>>2];c[A>>2]=f;f=c[z>>2]|0;e=c[A>>2]|0;a[m+0>>0]=a[B+0>>0]|0;c[ya>>2]=f;c[q>>2]=e;a:do if((c[ya>>2]|0)!=(c[q>>2]|0)){c[l>>2]=c[ya>>2];while(1){e=(c[l>>2]|0)+1|0;c[l>>2]=e;if((e|0)==(c[q>>2]|0))break a;f=c[ya>>2]|0;e=c[l>>2]|0;c[n>>2]=m;c[o>>2]=f;c[p>>2]=e;if((d[c[o>>2]>>0]|0)>=(d[c[p>>2]>>0]|0))continue;c[ya>>2]=c[l>>2]}}while(0);if((d[c[ya>>2]>>0]|0)<=(c[ta>>2]|0)){c[ua>>2]=2;break}else{c[ua>>2]=0;break}}else{c[ab>>2]=s;c[bb>>2]=0;a[(c[x>>2]|0)+(b[(c[c[ab>>2]>>2]|0)+(c[bb>>2]<<3)+6>>1]|0)>>0]=1;c[ua>>2]=2}while(0);vl(s);if((c[ua>>2]|0)==2)break;c[gb>>2]=c[gb>>2]<<1}i=$a;return}function Xk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;h=i;i=i+80|0;k=h+60|0;g=h+52|0;f=h+12|0;e=h+8|0;m=h+48|0;o=h+56|0;p=h+64|0;q=h+16|0;r=h;n=h+40|0;j=h+4|0;d=h+44|0;l=h+20|0;c[n>>2]=a;c[j>>2]=b;b=c[n>>2]|0;n=c[j>>2]|0;c[r>>2]=b;c[q>>2]=c[r>>2];a=c[q>>2]|0;c[p>>2]=a;c[o>>2]=(c[p>>2]|0)+8;c[m>>2]=c[o>>2];if(!(n>>>0>(((c[c[m>>2]>>2]|0)-(c[a>>2]|0)|0)/8|0)>>>0)){i=h;return}c[e>>2]=b;c[f>>2]=(c[e>>2]|0)+8;c[g>>2]=c[f>>2];c[d>>2]=c[g>>2];q=c[j>>2]|0;c[k>>2]=b;r=c[k>>2]|0;rl(l,q,((c[r+4>>2]|0)-(c[r>>2]|0)|0)/8|0,c[d>>2]|0);ol(b,l);pl(l);i=h;return}function Yk(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+16|0;g=f+8|0;j=f+4|0;h=f;c[j>>2]=d;c[h>>2]=e;e=c[j>>2]|0;if((c[c[j>>2]>>2]|0)==(c[c[h>>2]>>2]|0)){a[g>>0]=(b[e+6>>1]|0)>(b[(c[h>>2]|0)+6>>1]|0)&1;j=a[g>>0]|0;j=j&1;i=f;return j|0}else{a[g>>0]=(c[e>>2]|0)<(c[c[h>>2]>>2]|0)&1;j=a[g>>0]|0;j=j&1;i=f;return j|0}return 0}function Zk(d,e,f,g){d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;m=h+12|0;l=h+8|0;k=h+4|0;j=h;c[m>>2]=d;c[l>>2]=e;c[k>>2]=f;c[j>>2]=g;g=c[j>>2]|0;if((b[(c[m>>2]|0)+4>>1]|0)>=0){c[j>>2]=g+1;Zk((c[l>>2]|0)+(b[(c[m>>2]|0)+4>>1]<<3)|0,c[l>>2]|0,c[k>>2]|0,c[j>>2]|0);Zk((c[l>>2]|0)+(b[(c[m>>2]|0)+6>>1]<<3)|0,c[l>>2]|0,c[k>>2]|0,c[j>>2]|0);i=h;return}else{a[(c[k>>2]|0)+(b[(c[m>>2]|0)+6>>1]|0)>>0]=g;i=h;return}}function _k(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+16|0;k=g+12|0;h=g+8|0;j=g+4|0;l=g;c[k>>2]=b;c[h>>2]=e;c[j>>2]=f;c[j>>2]=(c[j>>2]|0)+ -1;while(1){if((c[h>>2]|0)>=(c[j>>2]|0))break;c[l>>2]=d[(c[k>>2]|0)+(c[h>>2]|0)>>0];a[(c[k>>2]|0)+(c[h>>2]|0)>>0]=a[(c[k>>2]|0)+(c[j>>2]|0)>>0]|0;a[(c[k>>2]|0)+(c[j>>2]|0)>>0]=c[l>>2];c[h>>2]=(c[h>>2]|0)+1;c[j>>2]=(c[j>>2]|0)+ -1}i=g;return}



function ji(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=i;i=i+80|0;h=e+20|0;g=e+24|0;f=e+44|0;k=e+60|0;m=e+4|0;j=e+40|0;l=e+48|0;n=e+56|0;o=e+64|0;p=e+68|0;r=e+28|0;q=e;s=e+32|0;t=e+36|0;u=e+8|0;w=e+12|0;v=e+52|0;y=e+16|0;c[y>>2]=b;b=c[y>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=22;y=b+8|0;x=Qw(8)|0;c[x+0>>2]=0;c[x+4>>2]=0;ki(x);c[w>>2]=y;c[v>>2]=x;v=c[v>>2]|0;c[t>>2]=c[w>>2];c[u>>2]=v;t=c[t>>2]|0;c[s>>2]=u;s=c[c[s>>2]>>2]|0;c[r>>2]=t;c[q>>2]=s;q=c[q>>2]|0;c[o>>2]=c[r>>2];c[p>>2]=q;o=c[o>>2]|0;c[n>>2]=p;n=c[c[n>>2]>>2]|0;c[j>>2]=o;c[l>>2]=n;j=c[j>>2]|0;c[m>>2]=j;c[k>>2]=l;c[j>>2]=c[c[k>>2]>>2];c[b+32>>2]=0;c[b+36>>2]=0;li(b+40|0,23,21);mi(b+56|0,8388608);c[b+68>>2]=0;c[b+72>>2]=Rw(4194304)|0;c[b+16>>2]=16;c[b+20>>2]=15;c[b+24>>2]=11;c[b+28>>2]=4;a[c[b+72>>2]>>0]=0;j=c[d>>2]|0;if((j|0)==1)c[b+12>>2]=1;else if((j|0)==0)c[b+12>>2]=0;c[f>>2]=b+8;c[g>>2]=c[f>>2];c[h>>2]=c[g>>2];ni(c[c[h>>2]>>2]|0,c[b+12>>2]|0);if((c[d>>2]|0)!=0){i=e;return}oi(b);i=e;return}function ki(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Kk(c[d>>2]|0);i=b;return}function li(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;h=e+8|0;g=e+4|0;f=e;c[h>>2]=a;c[g>>2]=b;c[f>>2]=d;Jk(c[h>>2]|0,c[g>>2]|0,c[f>>2]|0);i=e;return}function mi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;Ei(c[f>>2]|0,c[e>>2]|0);i=d;return}function ni(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;d=i;i=i+96|0;r=d+32|0;q=d+28|0;s=d;v=d+84|0;t=d+56|0;u=d+8|0;y=d+12|0;x=d+48|0;z=d+64|0;w=d+72|0;e=d+80|0;f=d+88|0;p=d+92|0;k=d+36|0;l=d+40|0;h=d+44|0;j=d+52|0;n=d+60|0;o=d+16|0;A=d+4|0;m=d+20|0;g=d+68|0;C=d+24|0;B=d+76|0;c[C>>2]=a;c[B>>2]=b;a=c[C>>2]|0;b=c[B>>2]|0;if((b|0)==0){e=Qw(33620008)|0;Dk(e);c[A>>2]=a;c[m>>2]=e;e=c[A>>2]|0;c[o>>2]=e;c[n>>2]=c[o>>2];c[g>>2]=c[c[n>>2]>>2];C=c[m>>2]|0;c[l>>2]=e;c[k>>2]=c[l>>2];c[c[k>>2]>>2]=C;if((c[g>>2]|0)==0){i=d;return}c[p>>2]=e;c[f>>2]=c[p>>2];e=c[g>>2]|0;c[h>>2]=c[f>>2];c[j>>2]=e;e=c[j>>2]|0;if((e|0)==0){i=d;return}Sw(e);i=d;return}else if((b|0)==1){f=Qw(33620008)|0;Ek(f);c[z>>2]=a+4;c[w>>2]=f;f=c[z>>2]|0;c[x>>2]=f;c[y>>2]=c[x>>2];c[e>>2]=c[c[y>>2]>>2];C=c[w>>2]|0;c[v>>2]=f;c[s>>2]=c[v>>2];c[c[s>>2]>>2]=C;if((c[e>>2]|0)==0){i=d;return}c[q>>2]=f;c[r>>2]=c[q>>2];e=c[e>>2]|0;c[t>>2]=c[r>>2];c[u>>2]=e;e=c[u>>2]|0;if((e|0)==0){i=d;return}Sw(e);i=d;return}else{i=d;return}}function oi(a){a=a|0;var b=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;p=i;i=i+96|0;o=p+84|0;f=p+56|0;g=p+44|0;u=p+32|0;t=p+76|0;s=p+8|0;x=p+12|0;w=p+64|0;v=p+72|0;r=p+80|0;q=p+88|0;e=p+36|0;b=p+40|0;y=p+48|0;j=p;h=p+60|0;k=p+16|0;l=p+68|0;m=p+4|0;n=p+20|0;c[y>>2]=a;a=c[y>>2]|0;c[p+52>>2]=121;if((c[366]|0)!=0){a=a+8|0;c[g>>2]=a;a=c[g>>2]|0;c[f>>2]=a;a=c[f>>2]|0;c[o>>2]=a;a=c[o>>2]|0;a=c[a>>2]|0;y=c[366]|0;ui(a,y);i=p;return}y=Qw(40)|0;si(y);c[366]=y;c[j>>2]=120;while(1){if((c[j>>2]|0)<0)break;c[h>>2]=24;while(1){if((c[h>>2]|0)<4)break;c[k>>2]=1<<c[1472+(c[h>>2]<<2)>>2];c[l>>2]=(c[k>>2]|0)-1;while(1){if((c[l>>2]|0)<0)break;y=da(c[j>>2]|0,c[k>>2]|0)|0;c[m>>2]=y+(c[l>>2]|0);Ah(n,c[h>>2]|0,c[m>>2]|0);c[b>>2]=n;y=c[b>>2]|0;c[e>>2]=y;c[q>>2]=c[e>>2];c[r>>2]=c[q>>2];if(((d[c[r>>2]>>0]|0)&1|0)!=0){c[s>>2]=y;c[t>>2]=c[s>>2];c[u>>2]=c[t>>2];y=c[(c[u>>2]|0)+4>>2]|0}else{c[v>>2]=y;c[w>>2]=c[v>>2];c[x>>2]=c[w>>2];y=(d[c[x>>2]>>0]|0)>>1}if(y>>>0>=4)ti(c[366]|0,n,c[h>>2]|0,c[m>>2]|0);Tm(n);c[l>>2]=(c[l>>2]|0)+ -1}c[h>>2]=(c[h>>2]|0)+ -1}c[j>>2]=(c[j>>2]|0)+ -1}a=a+8|0;c[g>>2]=a;a=c[g>>2]|0;c[f>>2]=a;a=c[f>>2]|0;c[o>>2]=a;a=c[o>>2]|0;a=c[a>>2]|0;y=c[366]|0;ui(a,y);i=p;return}function pi(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Ck(c[d>>2]|0);i=b;return}function qi(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Bk(c[d>>2]|0);i=b;return}function ri(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;b=i;i=i+64|0;e=b+16|0;h=b+12|0;m=b+44|0;l=b+36|0;g=b+40|0;k=b+48|0;j=b+52|0;n=b+20|0;d=b;f=b+28|0;p=b+4|0;o=b+24|0;q=b+8|0;c[q>>2]=a;a=c[q>>2]|0;q=c[a+72>>2]|0;if((q|0)!=0)Tw(q);pi(a+56|0);qi(a+40|0);c[o>>2]=a+8;c[p>>2]=c[o>>2];c[n>>2]=c[p>>2];c[d>>2]=0;n=c[n>>2]|0;c[j>>2]=n;c[k>>2]=c[j>>2];c[f>>2]=c[c[k>>2]>>2];q=c[d>>2]|0;c[l>>2]=n;c[m>>2]=c[l>>2];c[c[m>>2]>>2]=q;if((c[f>>2]|0)==0){i=b;return}c[h>>2]=n;c[e>>2]=c[h>>2];d=c[f>>2]|0;c[b+32>>2]=c[e>>2];c[g>>2]=d;d=c[g>>2]|0;if((d|0)==0){i=b;return}Ci(d);Sw(d);i=b;return}function si(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;rk(c[d>>2]|0);i=b;return}function ti(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0;h=i;i=i+480|0;fa=h+224|0;ga=h+208|0;ha=h+412|0;ia=h+408|0;ja=h+144|0;ka=h+80|0;na=h+424|0;ma=h+456|0;oa=h+220|0;pa=h+140|0;qa=h+88|0;ra=h+76|0;W=h+72|0;V=h+64|0;U=h+68|0;Z=h+400|0;Y=h+284|0;X=h+264|0;ba=h+148|0;aa=h+136|0;$=h+132|0;_=h+92|0;ca=h+96|0;G=h+100|0;F=h+104|0;Q=h+108|0;L=h+112|0;da=h+116|0;J=h+120|0;I=h+124|0;H=h+128|0;T=h+396|0;S=h+372|0;R=h+280|0;K=h+272|0;P=h+260|0;N=h+256|0;O=h+152|0;ta=h+156|0;ua=h+160|0;va=h+164|0;wa=h+168|0;ya=h+172|0;xa=h+16|0;Aa=h+180|0;za=h+48|0;v=h+188|0;A=h+192|0;z=h+196|0;y=h+420|0;x=h+428|0;w=h+436|0;D=h+444|0;C=h+452|0;B=h+460|0;E=h+464|0;o=h+228|0;s=h+232|0;n=h+236|0;m=h+240|0;l=h+244|0;k=h+248|0;r=h+252|0;q=h+392|0;p=h+380|0;u=h+368|0;Da=h+364|0;Ca=h;Fa=h+276|0;Ea=h+40|0;La=h+288|0;Ha=h+292|0;Ia=h+296|0;Ja=h+300|0;Ka=h+304|0;Oa=h+308|0;Pa=h+312|0;Qa=h+316|0;Ra=h+320|0;Na=h+324|0;Sa=h+328|0;Ma=h+332|0;Ta=h+336|0;Ga=h+340|0;Ua=h+344|0;Va=h+348|0;Wa=h+352|0;Xa=h+176|0;Za=h+356|0;Ya=h+24|0;$a=h+360|0;_a=h+8|0;cb=h+184|0;bb=h+32|0;eb=h+376|0;db=h+56|0;hb=h+384|0;gb=h+388|0;fb=h+404|0;kb=h+84|0;t=h+60|0;ib=h+416|0;jb=h+200|0;ea=h+204|0;la=h+432|0;ab=h+212|0;sa=h+440|0;Ba=h+268|0;j=h+216|0;M=h+448|0;c[kb>>2]=b;c[t>>2]=e;c[ib>>2]=f;c[jb>>2]=g;f=c[kb>>2]|0;c[ea>>2]=(c[jb>>2]<<6)+(c[ib>>2]|0);g=c[t>>2]|0;c[hb>>2]=f;c[gb>>2]=g;qk(fb,c[hb>>2]|0,c[gb>>2]|0);a[db+0>>0]=a[fb+0>>0]|0;a[db+1>>0]=a[fb+1>>0]|0;a[db+2>>0]=a[fb+2>>0]|0;a[db+3>>0]=a[fb+3>>0]|0;c[eb>>2]=ab;g=c[eb>>2]|0;a[bb+0>>0]=a[db+0>>0]|0;a[bb+1>>0]=a[db+1>>0]|0;a[bb+2>>0]=a[db+2>>0]|0;a[bb+3>>0]=a[db+3>>0]|0;c[cb>>2]=g;g=c[cb>>2]|0;c[g+0>>2]=c[bb+0>>2];a[_a+0>>0]=a[ab+0>>0]|0;a[_a+1>>0]=a[ab+1>>0]|0;a[_a+2>>0]=a[ab+2>>0]|0;a[_a+3>>0]=a[ab+3>>0]|0;c[$a>>2]=la;g=c[$a>>2]|0;a[Ya+0>>0]=a[_a+0>>0]|0;a[Ya+1>>0]=a[_a+1>>0]|0;a[Ya+2>>0]=a[_a+2>>0]|0;a[Ya+3>>0]=a[_a+3>>0]|0;c[Za>>2]=g;c[Wa>>2]=c[Za>>2];c[Xa>>2]=Ya;g=c[Xa>>2]|0;c[Ua>>2]=c[Wa>>2];c[Va>>2]=g;c[c[Ua>>2]>>2]=c[c[Va>>2]>>2];c[Ta>>2]=f;c[Sa>>2]=c[Ta>>2];c[Qa>>2]=Na;c[Ra>>2]=-1;g=c[Ra>>2]|0;c[Oa>>2]=c[Qa>>2];c[Pa>>2]=g;c[c[Oa>>2]>>2]=0;c[Ma>>2]=c[Na>>2];c[La>>2]=Ma;c[Ja>>2]=Ga;c[Ka>>2]=0;g=c[Ka>>2]|0;c[Ha>>2]=c[Ja>>2];c[Ia>>2]=g;c[c[Ha>>2]>>2]=c[Ia>>2];a[Ea+0>>0]=a[Ga+0>>0]|0;a[Ea+1>>0]=a[Ga+1>>0]|0;a[Ea+2>>0]=a[Ga+2>>0]|0;a[Ea+3>>0]=a[Ga+3>>0]|0;c[Fa>>2]=Ba;g=c[Fa>>2]|0;a[Ca+0>>0]=a[Ea+0>>0]|0;a[Ca+1>>0]=a[Ea+1>>0]|0;a[Ca+2>>0]=a[Ea+2>>0]|0;a[Ca+3>>0]=a[Ea+3>>0]|0;c[Da>>2]=g;g=c[Da>>2]|0;c[g+0>>2]=c[Ca+0>>2];a[za+0>>0]=a[Ba+0>>0]|0;a[za+1>>0]=a[Ba+1>>0]|0;a[za+2>>0]=a[Ba+2>>0]|0;a[za+3>>0]=a[Ba+3>>0]|0;c[Aa>>2]=sa;g=c[Aa>>2]|0;a[xa+0>>0]=a[za+0>>0]|0;a[xa+1>>0]=a[za+1>>0]|0;a[xa+2>>0]=a[za+2>>0]|0;a[xa+3>>0]=a[za+3>>0]|0;c[ya>>2]=g;c[va>>2]=c[ya>>2];c[wa>>2]=xa;g=c[wa>>2]|0;c[ta>>2]=c[va>>2];c[ua>>2]=g;c[c[ta>>2]>>2]=c[c[ua>>2]>>2];c[qa>>2]=la;c[ra>>2]=sa;g=c[ra>>2]|0;c[oa>>2]=c[qa>>2];c[pa>>2]=g;g=c[pa>>2]|0;c[na>>2]=c[oa>>2];c[ma>>2]=g;if((c[c[na>>2]>>2]|0)==(c[c[ma>>2]>>2]|0)^1?(kb=c[ea>>2]|0,c[ka>>2]=la,c[ja>>2]=c[ka>>2],c[ia>>2]=(c[c[ja>>2]>>2]|0)+8,c[ha>>2]=c[ia>>2],c[ga>>2]=c[ha>>2],c[fa>>2]=c[ga>>2],(kb|0)>=(c[(c[fa>>2]|0)+12>>2]|0)):0){i=h;return}kb=c[ea>>2]|0;c[(fk(f,c[t>>2]|0)|0)>>2]=kb;c[j>>2]=0;c[M>>2]=0;while(1){if((c[M>>2]|0)>=4)break;ea=c[M>>2]|0;c[_>>2]=c[t>>2];fa=c[_>>2]|0;c[$>>2]=fa;c[aa>>2]=c[$>>2];c[ba>>2]=c[aa>>2];if((d[c[ba>>2]>>0]&1|0)!=0){c[U>>2]=fa;c[V>>2]=c[U>>2];c[W>>2]=c[V>>2];fa=c[(c[W>>2]|0)+4>>2]|0}else{c[X>>2]=fa;c[Y>>2]=c[X>>2];c[Z>>2]=c[Y>>2];fa=d[c[Z>>2]>>0]>>1}if(!(ea>>>0<fa>>>0))break;ea=c[M>>2]|0;c[N>>2]=c[t>>2];c[O>>2]=ea;c[P>>2]=c[N>>2];c[K>>2]=c[P>>2];ea=c[K>>2]|0;c[R>>2]=ea;c[S>>2]=c[R>>2];c[T>>2]=c[S>>2];if((d[c[T>>2]>>0]&1|0)!=0){c[Q>>2]=ea;c[F>>2]=c[Q>>2];c[G>>2]=c[F>>2];ea=c[(c[G>>2]|0)+8>>2]|0}else{c[H>>2]=ea;c[I>>2]=c[H>>2];c[J>>2]=c[I>>2];c[da>>2]=(c[J>>2]|0)+1;c[L>>2]=c[da>>2];ea=c[L>>2]|0}c[ca>>2]=ea;c[j>>2]=(c[j>>2]|0)+(a[(c[ca>>2]|0)+(c[O>>2]|0)>>0]<<(c[M>>2]<<3));c[M>>2]=(c[M>>2]|0)+1}F=c[(gk(f+20|0,j)|0)>>2]|0;c[E>>2]=c[t>>2];E=c[E>>2]|0;c[B>>2]=E;c[C>>2]=c[B>>2];c[D>>2]=c[C>>2];if((d[c[D>>2]>>0]&1|0)!=0){c[z>>2]=E;c[A>>2]=c[z>>2];c[v>>2]=c[A>>2];v=c[(c[v>>2]|0)+4>>2]|0}else{c[w>>2]=E;c[x>>2]=c[w>>2];c[y>>2]=c[x>>2];v=d[c[y>>2]>>0]>>1}if(!(F>>>0<v>>>0)){i=h;return}c[u>>2]=c[t>>2];t=c[u>>2]|0;c[p>>2]=t;c[q>>2]=c[p>>2];c[r>>2]=c[q>>2];if((d[c[r>>2]>>0]&1|0)!=0){c[n>>2]=t;c[s>>2]=c[n>>2];c[o>>2]=c[s>>2];k=c[(c[o>>2]|0)+4>>2]|0}else{c[k>>2]=t;c[l>>2]=c[k>>2];c[m>>2]=c[l>>2];k=d[c[m>>2]>>0]>>1}c[(gk(f+20|0,j)|0)>>2]=k;i=h;return}function ui(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;k=i;i=i+64|0;l=k+16|0;e=k+12|0;d=k+44|0;g=k+36|0;f=k+32|0;j=k+40|0;m=k+48|0;n=k+52|0;o=k+20|0;p=k;q=k+28|0;r=k+4|0;s=k+24|0;h=k+8|0;c[s>>2]=a;c[h>>2]=b;b=c[s>>2]|0;c[r>>2]=b;c[q>>2]=c[r>>2];c[p>>2]=c[q>>2];if((c[c[p>>2]>>2]|0)!=0){c[o>>2]=b;c[n>>2]=c[o>>2];c[m>>2]=c[n>>2];dk(c[c[m>>2]>>2]|0,c[h>>2]|0)}c[d>>2]=b+4;c[e>>2]=c[d>>2];c[l>>2]=c[e>>2];if((c[c[l>>2]>>2]|0)==0){i=k;return}c[j>>2]=b+4;c[f>>2]=c[j>>2];c[g>>2]=c[f>>2];ek(c[c[g>>2]>>2]|0,c[h>>2]|0);i=k;return}function vi(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;e=b;c[e>>2]=a;e=c[e>>2]|0;d=e+68|0;a=c[e+72>>2]|0;if((c[e+4>>2]|0)==16){rh(1,0,0,d,a);i=b;return}else{rh(1,1,0,d,a);d=(c[e+4>>2]|0)-17|0;rh(3,d,((d|0)<0)<<31>>31,e+68|0,c[e+72>>2]|0);i=b;return}}function wi(b,e,f,g,h,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0;m=i;i=i+464|0;A=m+100|0;l=m+204|0;y=m+4|0;w=m+180|0;x=m+88|0;D=m+92|0;E=m+12|0;B=m+168|0;C=m+16|0;_=m+20|0;$=m+28|0;aa=m+32|0;Z=m+36|0;V=m+164|0;W=m+48|0;X=m+52|0;U=m+56|0;Q=m+64|0;R=m+200|0;S=m+208|0;P=m+216|0;G=m+96|0;I=m+104|0;H=m+108|0;J=m+160|0;L=m+112|0;K=m+116|0;M=m+120|0;N=m+124|0;ba=m+132|0;Y=m+136|0;T=m+140|0;O=m+144|0;ca=m+148|0;da=m+152|0;ea=m+156|0;q=m+8|0;s=m;t=m+448|0;o=m+176|0;n=m+68|0;F=m+449|0;v=m+188|0;k=m+76|0;p=m+212|0;z=m+224|0;u=m+72|0;r=m+172|0;c[ea>>2]=b;c[q>>2]=e;c[s>>2]=f;a[t>>0]=g&1;c[o>>2]=h;c[n>>2]=j;j=c[ea>>2]|0;a[F>>0]=0;c[da>>2]=v;c[ca>>2]=c[da>>2];c[ba>>2]=c[ca>>2];e=c[ba>>2]|0;c[m+128>>2]=e;c[$>>2]=Z;c[aa>>2]=-1;b=c[aa>>2]|0;c[_>>2]=c[$>>2];c[m+24>>2]=b;c[c[_>>2]>>2]=0;c[Y>>2]=c[Z>>2];c[m+40>>2]=Y;c[e>>2]=0;c[W>>2]=U;c[X>>2]=-1;b=c[X>>2]|0;c[V>>2]=c[W>>2];c[m+44>>2]=b;c[c[V>>2]>>2]=0;c[T>>2]=c[U>>2];c[m+60>>2]=T;c[e+4>>2]=0;c[R>>2]=P;c[S>>2]=-1;b=c[S>>2]|0;c[Q>>2]=c[R>>2];c[m+184>>2]=b;c[c[Q>>2]>>2]=0;c[O>>2]=c[P>>2];c[m+440>>2]=O;c[M>>2]=e+8;c[N>>2]=0;e=c[N>>2]|0;c[L>>2]=c[M>>2];c[K>>2]=e;e=c[L>>2]|0;c[J>>2]=K;b=c[c[J>>2]>>2]|0;c[I>>2]=e;c[H>>2]=b;b=c[I>>2]|0;c[m+444>>2]=b;c[G>>2]=H;c[b>>2]=c[c[G>>2]>>2];if((c[q>>2]|0)>>>0>0){xi(j+40|0,c[s>>2]|0,c[q>>2]|0);ea=c[j+36>>2]&8388607;ea=(yi(j+40|0)|0)+ea|0;a[F>>0]=(th(ea,c[q>>2]|0,.75)|0)&1;ea=a[F>>0]&1;g=c[j+36>>2]|0;h=c[q>>2]|0;F=yi(j+40|0)|0;f=j+56|0;if(ea){c[B>>2]=f;c[C>>2]=0;Al(g,h,8388607,8388607,F,(c[c[B>>2]>>2]|0)+(c[C>>2]<<2)|0)}else{c[D>>2]=f;c[E>>2]=0;Dl(g,h,8388607,8388607,F,(c[c[D>>2]>>2]|0)+(c[E>>2]<<2)|0)}ba=c[q>>2]|0;ca=c[j+36>>2]|0;da=yi(j+40|0)|0;c[w>>2]=j+56;c[x>>2]=0;ea=(c[c[w>>2]>>2]|0)+(c[x>>2]<<2)|0;c[y>>2]=j+8;c[l>>2]=c[y>>2];c[A>>2]=c[l>>2];rc(ba,ca,da,ea,8388607,4194288,c[c[A>>2]>>2]|0,c[j+12>>2]|0,v);zh(v,c[j+36>>2]|0,4194288,j+16|0,j+32|0)}c[k>>2]=(c[j>>2]|0)==1?12:0;c[k+4>>2]=(c[j>>2]|0)==1?1:0;c[k+8>>2]=3;c[p>>2]=c[j+68>>2];zi(z);da=yi(j+40|0)|0;Xh(k,v,da,c[j+36>>2]|0,8388607,z);da=a[t>>0]&1;ea=yi(j+40|0)|0;ai(z,da,ea,8388607,j+36|0,j+68|0,c[j+72>>2]|0);ea=c[j+68>>2]|0;c[u>>2]=(a[t>>0]&1?ea+7|0:ea)>>3;c[u>>2]=(c[u>>2]|0)-(c[p>>2]>>3);if(((c[q>>2]|0)+4|0)>>>0<(c[u>>2]|0)>>>0){c[j+68>>2]=c[p>>2];ea=(c[j+72>>2]|0)+(c[j+68>>2]>>3)|0;a[ea>>0]=(d[ea>>0]|0)&(1<<(c[j+68>>2]&7))-1;uh(c[q>>2]|0,0,1,j+68|0,c[j+72>>2]|0);c[r>>2]=(c[j+68>>2]|0)+7>>3;By(c[n>>2]|0,c[j+72>>2]|0,c[r>>2]|0)|0;By((c[n>>2]|0)+(c[r>>2]|0)|0,c[s>>2]|0,c[q>>2]|0)|0;c[c[o>>2]>>2]=(c[r>>2]|0)+(c[q>>2]|0);if(a[t>>0]&1){a[(c[n>>2]|0)+(c[c[o>>2]>>2]|0)>>0]=3;ea=c[o>>2]|0;c[ea>>2]=(c[ea>>2]|0)+1}c[j+68>>2]=0;a[c[j+72>>2]>>0]=0;Ai(z);od(v);i=m;return}By(c[n>>2]|0,c[j+72>>2]|0,c[u>>2]|0)|0;c[c[o>>2]>>2]=c[u>>2];if(a[t>>0]&1){c[j+68>>2]=0;a[c[j+72>>2]>>0]=0;Ai(z);od(v);i=m;return}else{ea=j+68|0;c[ea>>2]=(c[ea>>2]|0)-(c[u>>2]<<3);a[(c[j+72>>2]|0)+(c[j+68>>2]>>3)>>0]=a[(c[j+72>>2]|0)+(c[u>>2]|0)>>0]|0;Ai(z);od(v);i=m;return}}function xi(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;o=i;i=i+64|0;n=o+24|0;f=o+8|0;k=o+20|0;l=o+32|0;g=o;q=o+44|0;p=o+48|0;s=o+36|0;j=o+40|0;m=o+28|0;h=o+12|0;r=o+4|0;c[s>>2]=b;c[j>>2]=d;c[m>>2]=e;e=c[s>>2]|0;c[h>>2]=c[e+8>>2]&(1<<c[e>>2])-1;ck(e,c[j>>2]|0,c[m>>2]|0);b=(c[e+12>>2]|0)+(c[h>>2]|0)|0;d=c[j>>2]|0;if(((c[h>>2]|0)+(c[m>>2]|0)|0)>>>0<=1<<c[e>>2]>>>0){By(b|0,d|0,c[m>>2]|0)|0;b=c[m>>2]|0;s=e+8|0;d=c[s>>2]|0;b=d+b|0;c[s>>2]=b;i=o;return}else{c[r>>2]=(1<<c[e>>2])+(1<<c[e+4>>2])-(c[h>>2]|0);c[q>>2]=m;c[p>>2]=r;s=c[q>>2]|0;r=c[p>>2]|0;a[g+0>>0]=a[o+52>>0]|0;c[k>>2]=s;c[l>>2]=r;r=c[l>>2]|0;s=c[k>>2]|0;c[o+16>>2]=g;c[n>>2]=r;c[f>>2]=s;By(b|0,d|0,c[((c[c[n>>2]>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0?c[l>>2]|0:c[k>>2]|0)>>2]|0)|0;By(c[e+12>>2]|0,(c[j>>2]|0)+((1<<c[e>>2])-(c[h>>2]|0))|0,(c[m>>2]|0)-((1<<c[e>>2])-(c[h>>2]|0))|0)|0;b=c[m>>2]|0;s=e+8|0;d=c[s>>2]|0;b=d+b|0;c[s>>2]=b;i=o;return}}function yi(a){a=a|0;var b=0,d=0;d=i;i=i+16|0;b=d;c[b>>2]=a;i=d;return c[(c[b>>2]|0)+12>>2]|0}function zi(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;$j(c[d>>2]|0);i=b;return}function Ai(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Yj(c[d>>2]|0);i=b;return}function Bi(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;r=i;i=i+144|0;v=r+16|0;j=r+36|0;x=r+12|0;h=r+8|0;k=r+32|0;l=r+40|0;n=r+48|0;u=r+124|0;w=r+20|0;s=r;q=r+28|0;o=r+4|0;p=r+128|0;t=r+44|0;m=r+24|0;c[x>>2]=d;c[h>>2]=e;c[k>>2]=f;c[l>>2]=g;if((c[x>>2]|0)==0){a[c[l>>2]>>0]=6;c[c[k>>2]>>2]=1;c[j>>2]=1;d=c[j>>2]|0;i=r;return d|0}c[u+0>>2]=c[b+0>>2];c[v+0>>2]=c[u+0>>2];ji(n,v);vi(n);c[w>>2]=2097152;c[s>>2]=c[c[k>>2]>>2];c[q>>2]=(c[h>>2]|0)+(c[x>>2]|0);c[c[k>>2]>>2]=0;while(1){if(!((c[h>>2]|0)>>>0<(c[q>>2]|0)>>>0))break;c[o>>2]=2097152;a[p>>0]=0;if((c[o>>2]|0)>=((c[q>>2]|0)-(c[h>>2]|0)|0)){c[o>>2]=(c[q>>2]|0)-(c[h>>2]|0);a[p>>0]=1}c[t>>2]=c[s>>2];wi(n,c[o>>2]|0,c[h>>2]|0,a[p>>0]&1,t,(c[l>>2]|0)+(c[c[k>>2]>>2]|0)|0);c[h>>2]=(c[h>>2]|0)+(c[o>>2]|0);d=c[k>>2]|0;c[d>>2]=(c[d>>2]|0)+(c[t>>2]|0);c[s>>2]=(c[s>>2]|0)-(c[t>>2]|0)}c[j>>2]=1;c[m>>2]=1;ri(n);d=c[j>>2]|0;i=r;return d|0}function Ci(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Di(c[d>>2]|0);i=b;return}function Di(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;b=i;i=i+112|0;e=b+100|0;h=b+92|0;n=b+32|0;m=b+36|0;g=b+84|0;d=b+8|0;l=b+12|0;k=b+60|0;s=b+16|0;j=b+20|0;f=b+80|0;r=b+88|0;q=b+96|0;u=b+104|0;p=b+40|0;x=b+56|0;z=b+44|0;t=b+52|0;A=b+4|0;B=b+64|0;w=b+72|0;y=b+24|0;v=b+76|0;C=b;D=b+68|0;E=b+28|0;c[E>>2]=a;a=c[E>>2]|0;c[D>>2]=a+4;c[C>>2]=c[D>>2];c[w>>2]=c[C>>2];c[y>>2]=0;w=c[w>>2]|0;c[B>>2]=w;c[A>>2]=c[B>>2];c[v>>2]=c[c[A>>2]>>2];y=c[y>>2]|0;c[z>>2]=w;c[x>>2]=c[z>>2];c[c[x>>2]>>2]=y;if((c[v>>2]|0)!=0?(c[p>>2]=w,c[u>>2]=c[p>>2],o=c[v>>2]|0,c[b+48>>2]=c[u>>2],c[t>>2]=o,o=c[t>>2]|0,(o|0)!=0):0)Sw(o);c[q>>2]=a;c[r>>2]=c[q>>2];c[s>>2]=c[r>>2];c[j>>2]=0;o=c[s>>2]|0;c[k>>2]=o;c[l>>2]=c[k>>2];c[f>>2]=c[c[l>>2]>>2];E=c[j>>2]|0;c[m>>2]=o;c[n>>2]=c[m>>2];c[c[n>>2]>>2]=E;if((c[f>>2]|0)==0){i=b;return}c[h>>2]=o;c[e>>2]=c[h>>2];E=c[f>>2]|0;c[g>>2]=c[e>>2];c[d>>2]=E;d=c[d>>2]|0;if((d|0)==0){i=b;return}Sw(d);i=b;return}function Ei(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;d=i;i=i+144|0;A=d+48|0;C=d+92|0;B=d+108|0;z=d+124|0;v=d+12|0;x=d+16|0;w=d+20|0;u=d+24|0;q=d+96|0;s=d+112|0;r=d+120|0;p=d+128|0;f=d+52|0;h=d+60|0;g=d+64|0;k=d+68|0;j=d+72|0;l=d+4|0;m=d;n=d+88|0;D=d+32|0;y=d+36|0;t=d+100|0;o=d+40|0;E=d+116|0;e=d+44|0;c[E>>2]=a;c[e>>2]=b;b=c[E>>2]|0;c[D>>2]=b;a=c[D>>2]|0;c[d+84>>2]=a;c[C>>2]=z;c[B>>2]=-1;B=c[B>>2]|0;c[A>>2]=c[C>>2];c[d+76>>2]=B;c[c[A>>2]>>2]=0;c[y>>2]=c[z>>2];c[d+8>>2]=y;c[a>>2]=0;c[x>>2]=u;c[w>>2]=-1;w=c[w>>2]|0;c[v>>2]=c[x>>2];c[d+80>>2]=w;c[c[v>>2]>>2]=0;c[t>>2]=c[u>>2];c[d+28>>2]=t;c[a+4>>2]=0;c[s>>2]=p;c[r>>2]=-1;r=c[r>>2]|0;c[q>>2]=c[s>>2];c[d+104>>2]=r;c[c[q>>2]>>2]=0;c[o>>2]=c[p>>2];c[d+132>>2]=o;c[m>>2]=a+8;c[n>>2]=0;a=c[n>>2]|0;c[j>>2]=c[m>>2];c[l>>2]=a;j=c[j>>2]|0;c[k>>2]=l;a=c[c[k>>2]>>2]|0;c[h>>2]=j;c[g>>2]=a;a=c[h>>2]|0;c[d+56>>2]=a;c[f>>2]=g;c[a>>2]=c[c[f>>2]>>2];if(!((c[e>>2]|0)>>>0>0)){i=d;return}Fi(b,c[e>>2]|0);Gi(b,c[e>>2]|0);i=d;return}function Fi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;k=i;i=i+64|0;d=k+36|0;e=k+8|0;l=k+32|0;j=k+40|0;f=k+48|0;g=k+16|0;m=k;n=k+24|0;o=k+4|0;p=k+28|0;h=k+20|0;c[p>>2]=a;c[h>>2]=b;b=c[p>>2]|0;a=c[h>>2]|0;if(a>>>0>(Ii(b)|0)>>>0)ht(b);else{c[o>>2]=b;c[n>>2]=(c[o>>2]|0)+8;c[m>>2]=c[n>>2];p=c[h>>2]|0;c[e>>2]=c[m>>2];c[l>>2]=p;p=c[l>>2]|0;c[k+44>>2]=c[e>>2];c[d>>2]=p;c[k+12>>2]=0;p=Qw(c[d>>2]<<2)|0;c[b+4>>2]=p;c[b>>2]=p;p=(c[b>>2]|0)+(c[h>>2]<<2)|0;c[g>>2]=b;c[f>>2]=(c[g>>2]|0)+8;c[j>>2]=c[f>>2];c[c[j>>2]>>2]=p;i=k;return}}function Gi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;d=i;i=i+48|0;h=d+28|0;j=d+16|0;k=d+4|0;l=d+8|0;m=d+32|0;n=d;o=d+12|0;e=d+24|0;f=d+20|0;c[o>>2]=a;c[e>>2]=b;a=c[o>>2]|0;c[n>>2]=a;c[m>>2]=(c[n>>2]|0)+8;c[l>>2]=c[m>>2];c[f>>2]=c[l>>2];do{o=c[f>>2]|0;c[h>>2]=c[a+4>>2];b=c[h>>2]|0;c[j>>2]=o;c[k>>2]=b;b=c[k>>2]|0;if((b|0)!=0)g[b>>2]=0.0;o=a+4|0;c[o>>2]=(c[o>>2]|0)+4;c[e>>2]=(c[e>>2]|0)+ -1}while((c[e>>2]|0)>>>0>0);i=d;return}function Hi(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=i;i=i+144|0;w=d+48|0;B=d+8|0;C=d+84|0;A=d;x=d+16|0;y=d+4|0;z=d+132|0;v=d+80|0;u=d+44|0;t=d+20|0;E=d+24|0;e=d+28|0;D=d+32|0;g=d+36|0;f=d+40|0;s=d+76|0;l=d+124|0;k=d+128|0;j=d+52|0;h=d+56|0;p=d+64|0;q=d+68|0;r=d+92|0;m=d+96|0;n=d+100|0;o=d+104|0;I=d+108|0;K=d+116|0;J=d+120|0;H=d+88|0;F=d+72|0;G=d+12|0;c[F>>2]=b;b=c[F>>2]|0;F=c[b>>2]|0;c[K>>2]=H;c[J>>2]=-1;J=c[J>>2]|0;c[I>>2]=c[K>>2];c[d+112>>2]=J;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[d+60>>2]=G;if((F|0)==0){i=d;return}c[D>>2]=b;K=c[D>>2]|0;D=c[K>>2]|0;c[E>>2]=K;c[e>>2]=D;D=c[E>>2]|0;while(1){if((c[e>>2]|0)==(c[D+4>>2]|0))break;c[t>>2]=D;c[u>>2]=(c[t>>2]|0)+8;c[v>>2]=c[u>>2];K=c[v>>2]|0;I=D+4|0;J=(c[I>>2]|0)+ -4|0;c[I>>2]=J;c[w>>2]=J;J=c[w>>2]|0;c[x>>2]=K;c[y>>2]=J;J=c[x>>2]|0;K=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=J;c[C>>2]=K}c[s>>2]=b;c[f>>2]=(c[s>>2]|0)+8;c[g>>2]=c[f>>2];I=c[g>>2]|0;K=c[b>>2]|0;c[h>>2]=b;J=c[h>>2]|0;c[j>>2]=J;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];J=((c[c[l>>2]>>2]|0)-(c[J>>2]|0)|0)/4|0;c[m>>2]=I;c[n>>2]=K;c[o>>2]=J;J=c[n>>2]|0;K=c[o>>2]|0;c[p>>2]=c[m>>2];c[q>>2]=J;c[r>>2]=K;Sw(c[q>>2]|0);i=d;return}function Ii(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+80|0;q=h+44|0;r=h+40|0;s=h+8|0;u=h+12|0;t=h+76|0;k=h+36|0;g=h+16|0;f=h+20|0;d=h+68|0;e=h+32|0;l=h;n=h+48|0;j=h+52|0;m=h+77|0;v=h+60|0;w=h+64|0;x=h+28|0;y=h+24|0;p=h+56|0;o=h+72|0;c[y>>2]=b;c[x>>2]=c[y>>2];c[w>>2]=(c[x>>2]|0)+8;c[v>>2]=c[w>>2];c[u>>2]=c[v>>2];b=c[u>>2]|0;a[s+0>>0]=a[t+0>>0]|0;c[r>>2]=b;c[q>>2]=c[r>>2];c[p>>2]=1073741823;c[o>>2]=4294967295/2|0;c[n>>2]=p;c[j>>2]=o;b=c[n>>2]|0;j=c[j>>2]|0;a[l+0>>0]=a[m+0>>0]|0;c[d>>2]=b;c[e>>2]=j;j=c[e>>2]|0;b=c[d>>2]|0;c[k>>2]=l;c[g>>2]=j;c[f>>2]=b;i=h;return c[((c[c[g>>2]>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0?c[e>>2]|0:c[d>>2]|0)>>2]|0}function Ji(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;o=i;i=i+80|0;m=o+36|0;n=o+4|0;g=o+28|0;q=o;e=o+32|0;f=o+8|0;p=o+68|0;l=o+24|0;k=o+60|0;j=o+64|0;v=o+40|0;h=o+44|0;t=o+48|0;u=o+52|0;w=o+56|0;x=o+16|0;s=o+20|0;r=o+12|0;c[x>>2]=b;c[s>>2]=d;d=c[x>>2]|0;c[w>>2]=d;b=c[w>>2]|0;c[r>>2]=((c[b+4>>2]|0)-(c[b>>2]|0)|0)/1580|0;if((c[r>>2]|0)>>>0<(c[s>>2]|0)>>>0){Si(d,(c[s>>2]|0)-(c[r>>2]|0)|0);i=o;return}if(!((c[r>>2]|0)>>>0>(c[s>>2]|0)>>>0)){i=o;return}r=(c[d>>2]|0)+((c[s>>2]|0)*1580|0)|0;c[t>>2]=d;c[u>>2]=r;r=c[u>>2]|0;c[v>>2]=c[t>>2];c[h>>2]=r;r=c[v>>2]|0;while(1){if((c[h>>2]|0)==(c[r+4>>2]|0))break;c[j>>2]=r;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];x=c[l>>2]|0;b=r+4|0;w=(c[b>>2]|0)+ -1580|0;c[b>>2]=w;c[m>>2]=w;w=c[m>>2]|0;c[e>>2]=x;c[f>>2]=w;w=c[e>>2]|0;x=c[f>>2]|0;a[q+0>>0]=a[p+0>>0]|0;c[n>>2]=w;c[g>>2]=x}i=o;return}function Ki(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;l=i;i=i+80|0;u=l+28|0;v=l+24|0;s=l+52|0;o=l+60|0;p=l+40|0;q=l+48|0;r=l+56|0;w=l+64|0;n=l+68|0;j=l;m=l+36|0;h=l+4|0;y=l+32|0;k=l+8|0;x=l+44|0;t=l+12|0;c[r>>2]=a;c[w>>2]=b;c[n>>2]=d;c[j>>2]=e;c[m>>2]=f;c[h>>2]=g;vy(c[j>>2]|0,0,520)|0;vy((c[j>>2]|0)+520|0,0,1040)|0;a=(c[j>>2]|0)+1564|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[(c[j>>2]|0)+1560>>2]=0;c[y>>2]=(c[n>>2]|0)-1;c[k>>2]=0;while(1){if((c[y>>2]|0)==0)break;c[y>>2]=c[y>>2]>>1;c[k>>2]=(c[k>>2]|0)+1}c[x>>2]=0;while(1){if(!((c[x>>2]|0)>>>0<(c[n>>2]|0)>>>0))break;if((c[(c[r>>2]|0)+(c[x>>2]<<2)>>2]|0)>0){if((c[(c[j>>2]|0)+1560>>2]|0)<4)c[(c[j>>2]|0)+1564+(c[(c[j>>2]|0)+1560>>2]<<2)>>2]=c[x>>2];a=(c[j>>2]|0)+1560|0;c[a>>2]=(c[a>>2]|0)+1}c[x>>2]=(c[x>>2]|0)+1}if((c[(c[j>>2]|0)+1560>>2]|0)<=1){rh(2,1,0,c[m>>2]|0,c[h>>2]|0);rh(2,0,0,c[m>>2]|0,c[h>>2]|0);a=c[(c[j>>2]|0)+1564>>2]|0;rh(c[k>>2]|0,a,((a|0)<0)<<31>>31,c[m>>2]|0,c[h>>2]|0);i=l;return}if((c[n>>2]|0)>=50?(c[(c[j>>2]|0)+1560>>2]|0)>=16:0){Bd(t,c[n>>2]|0);c[p>>2]=t;c[q>>2]=0;By((c[c[p>>2]>>2]|0)+(c[q>>2]<<2)|0,c[r>>2]|0,c[n>>2]<<2|0)|0;a=c[n>>2]|0;c[s>>2]=t;c[o>>2]=0;bl(a,(c[c[s>>2]>>2]|0)+(c[o>>2]<<2)|0)|0;c[u>>2]=t;c[v>>2]=0;Wk((c[c[u>>2]>>2]|0)+(c[v>>2]<<2)|0,c[n>>2]|0,c[w>>2]|0,c[j>>2]|0);Gd(t)}else Wk(c[r>>2]|0,c[n>>2]|0,c[w>>2]|0,c[j>>2]|0);el(c[j>>2]|0,c[n>>2]|0,(c[j>>2]|0)+520|0);o=c[j>>2]|0;n=c[n>>2]|0;if((c[(c[j>>2]|0)+1560>>2]|0)<=4){Li(o,n,c[k>>2]|0,c[m>>2]|0,c[h>>2]|0);i=l;return}else{Mi(o,n,c[m>>2]|0,c[h>>2]|0);i=l;return}}function Li(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;p=i;i=i+64|0;j=p+52|0;m=p;n=p+44|0;o=p+48|0;r=p+56|0;l=p+16|0;h=p+40|0;q=p+36|0;s=p+8|0;k=p+4|0;c[j>>2]=a;c[p+32>>2]=b;c[m>>2]=e;c[n>>2]=f;c[o>>2]=g;c[r>>2]=c[j>>2];c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[(c[j>>2]|0)+1560>>2]|0))break;c[l+(c[h>>2]<<2)>>2]=c[(c[j>>2]|0)+1564+(c[h>>2]<<2)>>2];c[h>>2]=(c[h>>2]|0)+1}c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[(c[j>>2]|0)+1560>>2]|0))break;c[q>>2]=(c[h>>2]|0)+1;while(1){if((c[q>>2]|0)>=(c[(c[j>>2]|0)+1560>>2]|0))break;if((d[(c[r>>2]|0)+(c[l+(c[q>>2]<<2)>>2]|0)>>0]|0|0)<(d[(c[r>>2]|0)+(c[l+(c[h>>2]<<2)>>2]|0)>>0]|0|0)){c[s>>2]=c[l+(c[h>>2]<<2)>>2];c[l+(c[h>>2]<<2)>>2]=c[l+(c[q>>2]<<2)>>2];c[l+(c[q>>2]<<2)>>2]=c[s>>2]}c[q>>2]=(c[q>>2]|0)+1}c[h>>2]=(c[h>>2]|0)+1}rh(2,1,0,c[n>>2]|0,c[o>>2]|0);a=(c[(c[j>>2]|0)+1560>>2]|0)-1|0;rh(2,a,((a|0)<0)<<31>>31,c[n>>2]|0,c[o>>2]|0);c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[(c[j>>2]|0)+1560>>2]|0))break;a=c[l+(c[k>>2]<<2)>>2]|0;rh(c[m>>2]|0,a,((a|0)<0)<<31>>31,c[n>>2]|0,c[o>>2]|0);c[k>>2]=(c[k>>2]|0)+1}if((c[(c[j>>2]|0)+1560>>2]|0)!=4){i=p;return}if((((d[(c[r>>2]|0)+(c[l>>2]|0)>>0]|0|0)==2?(d[(c[r>>2]|0)+(c[l+4>>2]|0)>>0]|0|0)==2:0)?(d[(c[r>>2]|0)+(c[l+8>>2]|0)>>0]|0|0)==2:0)?(d[(c[r>>2]|0)+(c[l+12>>2]|0)>>0]|0|0)==2:0){rh(1,0,0,c[n>>2]|0,c[o>>2]|0);i=p;return}rh(1,1,0,c[n>>2]|0,c[o>>2]|0);i=p;return}function Mi(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;p=i;i=i+1232|0;s=p+188|0;q=p+164|0;m=p+176|0;g=p+172|0;r=p+180|0;l=p+192|0;o=p+712|0;h=p+184|0;k=p;n=p+168|0;j=p+88|0;c[s>>2]=a;c[q>>2]=b;c[m>>2]=e;c[g>>2]=f;c[r>>2]=c[s>>2];c[h>>2]=0;cl(c[r>>2]|0,c[q>>2]|0,l,o,h);Ni(k);e=k+0|0;f=e+72|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));c[n>>2]=0;while(1){if((c[n>>2]|0)>=(c[h>>2]|0))break;Oi(k,d[l+(c[n>>2]|0)>>0]|0);c[n>>2]=(c[n>>2]|0)+1}e=j+0|0;f=e+76|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));Pi(k,5,18,j);vh(j,c[m>>2]|0,c[g>>2]|0);wh(l,o,c[h>>2]|0,j,c[m>>2]|0,c[g>>2]|0);i=p;return}function Ni(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Qi(c[d>>2]|0);i=b;return}function Oi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;a=c[f>>2]|0;b=a+(c[e>>2]<<2)|0;c[b>>2]=(c[b>>2]|0)+1;a=a+72|0;c[a>>2]=(c[a>>2]|0)+1;i=d;return}function Pi(d,e,f,g){d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0;j=i;i=i+96|0;n=j+88|0;h=j+84|0;k=j+80|0;m=j+76|0;o=j+72|0;l=j;c[n>>2]=d;c[h>>2]=e;c[k>>2]=f;c[m>>2]=g;f=(c[m>>2]|0)+0|0;g=f+18|0;do{a[f>>0]=0;f=f+1|0}while((f|0)<(g|0));f=(c[m>>2]|0)+18|0;g=f+36|0;do{b[f>>1]=0;f=f+2|0}while((f|0)<(g|0));d=(c[m>>2]|0)+60|0;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[(c[m>>2]|0)+56>>2]=0;if((c[(c[n>>2]|0)+72>>2]|0)==0){i=j;return}c[o>>2]=0;while(1){if((c[o>>2]|0)>=18)break;if((c[(c[n>>2]|0)+(c[o>>2]<<2)>>2]|0)>0){if((c[(c[m>>2]|0)+56>>2]|0)<4)c[(c[m>>2]|0)+60+(c[(c[m>>2]|0)+56>>2]<<2)>>2]=c[o>>2];d=(c[m>>2]|0)+56|0;c[d>>2]=(c[d>>2]|0)+1}c[o>>2]=(c[o>>2]|0)+1}if((c[k>>2]|0)>=50?(c[(c[m>>2]|0)+56>>2]|0)>=16:0){f=l+0|0;n=(c[n>>2]|0)+0|0;g=f+72|0;do{c[f>>2]=c[n>>2];f=f+4|0;n=n+4|0}while((f|0)<(g|0));bl(c[k>>2]|0,l)|0;Wk(l,c[k>>2]|0,c[h>>2]|0,c[m>>2]|0)}else Wk(c[n>>2]|0,c[k>>2]|0,c[h>>2]|0,c[m>>2]|0);el(c[m>>2]|0,c[k>>2]|0,(c[m>>2]|0)+18|0);i=j;return}function Qi(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Ri(c[d>>2]|0);i=b;return}function Ri(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b;c[d>>2]=a;d=c[d>>2]|0;e=d+0|0;a=e+72|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(a|0));c[d+72>>2]=0;i=b;return}function Si(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;t=i;i=i+144|0;h=t+60|0;u=t+48|0;v=t+124|0;e=t+116|0;f=t+8|0;r=t;o=t+84|0;q=t+52|0;A=t+40|0;z=t+104|0;y=t+112|0;x=t+120|0;w=t+128|0;g=t+132|0;F=t+136|0;p=t+64|0;l=t+68|0;m=t+72|0;n=t+76|0;E=t+16|0;D=t+88|0;C=t+96|0;B=t+4|0;G=t+92|0;H=t+44|0;I=t+100|0;J=t+108|0;s=t+12|0;k=t+80|0;j=t+20|0;c[J>>2]=b;c[s>>2]=d;d=c[J>>2]|0;c[I>>2]=d;c[H>>2]=(c[I>>2]|0)+8;c[G>>2]=c[H>>2];if((((c[c[G>>2]>>2]|0)-(c[d+4>>2]|0)|0)/1580|0)>>>0>=(c[s>>2]|0)>>>0){Ti(d,c[s>>2]|0);i=t;return}c[B>>2]=d;c[C>>2]=(c[B>>2]|0)+8;c[D>>2]=c[C>>2];c[k>>2]=c[D>>2];c[E>>2]=d;B=c[E>>2]|0;B=(((c[B+4>>2]|0)-(c[B>>2]|0)|0)/1580|0)+(c[s>>2]|0)|0;c[F>>2]=d;c[p>>2]=B;B=c[F>>2]|0;c[l>>2]=Zi(B)|0;if((c[p>>2]|0)>>>0>(c[l>>2]|0)>>>0)ht(B);c[w>>2]=B;c[x>>2]=c[w>>2];J=c[x>>2]|0;c[y>>2]=J;c[z>>2]=(c[y>>2]|0)+8;c[A>>2]=c[z>>2];c[m>>2]=((c[c[A>>2]>>2]|0)-(c[J>>2]|0)|0)/1580|0;if((c[m>>2]|0)>>>0>=(((c[l>>2]|0)>>>0)/2|0)>>>0)c[g>>2]=c[l>>2];else{c[n>>2]=c[m>>2]<<1;c[o>>2]=n;c[q>>2]=p;J=c[o>>2]|0;I=c[q>>2]|0;a[r+0>>0]=a[t+140>>0]|0;c[e>>2]=J;c[f>>2]=I;I=c[e>>2]|0;J=c[f>>2]|0;c[t+56>>2]=r;c[u>>2]=I;c[v>>2]=J;c[g>>2]=c[((c[c[u>>2]>>2]|0)>>>0<(c[c[v>>2]>>2]|0)>>>0?c[f>>2]|0:c[e>>2]|0)>>2]}I=c[g>>2]|0;c[h>>2]=d;J=c[h>>2]|0;Ui(j,I,((c[J+4>>2]|0)-(c[J>>2]|0)|0)/1580|0,c[k>>2]|0);Vi(j,c[s>>2]|0);Wi(d,j);Xi(j);i=t;return}function Ti(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;g=d+28|0;h=d+16|0;j=d+4|0;k=d+8|0;l=d+32|0;m=d;n=d+12|0;e=d+24|0;f=d+20|0;c[n>>2]=a;c[e>>2]=b;a=c[n>>2]|0;c[m>>2]=a;c[l>>2]=(c[m>>2]|0)+8;c[k>>2]=c[l>>2];c[f>>2]=c[k>>2];do{n=c[f>>2]|0;c[g>>2]=c[a+4>>2];b=c[g>>2]|0;c[h>>2]=n;c[j>>2]=b;b=c[j>>2]|0;if((b|0)!=0)vy(b|0,0,1580)|0;n=a+4|0;c[n>>2]=(c[n>>2]|0)+1580;c[e>>2]=(c[e>>2]|0)+ -1}while((c[e>>2]|0)>>>0>0);i=d;return}function Ui(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;k=f+12|0;j=f+8|0;h=f+4|0;g=f;c[k>>2]=a;c[j>>2]=b;c[h>>2]=d;c[g>>2]=e;_i(c[k>>2]|0,c[j>>2]|0,c[h>>2]|0,c[g>>2]|0);i=f;return}function Vi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;g=d+28|0;h=d+16|0;j=d+4|0;k=d+8|0;l=d+32|0;m=d;n=d+12|0;e=d+24|0;f=d+20|0;c[n>>2]=a;c[e>>2]=b;a=c[n>>2]|0;c[m>>2]=a;c[l>>2]=(c[m>>2]|0)+12;c[k>>2]=c[l>>2];c[f>>2]=c[(c[k>>2]|0)+4>>2];do{n=c[f>>2]|0;c[g>>2]=c[a+8>>2];b=c[g>>2]|0;c[h>>2]=n;c[j>>2]=b;b=c[j>>2]|0;if((b|0)!=0)vy(b|0,0,1580)|0;n=a+8|0;c[n>>2]=(c[n>>2]|0)+1580;c[e>>2]=(c[e>>2]|0)+ -1}while((c[e>>2]|0)>>>0>0);i=d;return}function Wi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=i;i=i+144|0;F=d+108|0;H=d+88|0;G=d+80|0;E=d+48|0;C=d+8|0;z=d+12|0;D=d+84|0;B=d+16|0;y=d+20|0;A=d+24|0;w=d+28|0;t=d+32|0;x=d+104|0;v=d+112|0;s=d+120|0;u=d+128|0;m=d+136|0;q=d+52|0;r=d+56|0;n=d+60|0;o=d+64|0;p=d+68|0;k=d+72|0;g=d+76|0;l=d+4|0;j=d;f=d+92|0;h=d+96|0;K=d+100|0;J=d+40|0;I=d+116|0;L=d+44|0;e=d+124|0;c[L>>2]=a;c[e>>2]=b;a=c[L>>2]|0;c[I>>2]=a;c[J>>2]=(c[I>>2]|0)+8;c[K>>2]=c[J>>2];J=c[a>>2]|0;I=c[a+4>>2]|0;b=(c[e>>2]|0)+4|0;c[d+132>>2]=c[K>>2];c[F>>2]=J;c[H>>2]=I;c[G>>2]=b;c[E>>2]=((c[H>>2]|0)-(c[F>>2]|0)|0)/1580|0;b=c[G>>2]|0;c[b>>2]=(c[b>>2]|0)+((0-(c[E>>2]|0)|0)*1580|0);By(c[c[G>>2]>>2]|0,c[F>>2]|0,(c[E>>2]|0)*1580|0)|0;b=(c[e>>2]|0)+4|0;c[B>>2]=a;c[y>>2]=b;c[D>>2]=c[B>>2];c[A>>2]=c[c[D>>2]>>2];c[C>>2]=c[y>>2];c[c[B>>2]>>2]=c[c[C>>2]>>2];c[z>>2]=A;c[c[y>>2]>>2]=c[c[z>>2]>>2];b=(c[e>>2]|0)+8|0;c[v>>2]=a+4;c[s>>2]=b;c[x>>2]=c[v>>2];c[u>>2]=c[c[x>>2]>>2];c[w>>2]=c[s>>2];c[c[v>>2]>>2]=c[c[w>>2]>>2];c[t>>2]=u;c[c[s>>2]>>2]=c[c[t>>2]>>2];c[r>>2]=a;c[q>>2]=(c[r>>2]|0)+8;c[m>>2]=c[q>>2];m=c[m>>2]|0;c[p>>2]=c[e>>2];c[o>>2]=(c[p>>2]|0)+12;c[n>>2]=c[o>>2];b=c[n>>2]|0;c[j>>2]=m;c[f>>2]=b;c[l>>2]=c[j>>2];c[h>>2]=c[c[l>>2]>>2];c[k>>2]=c[f>>2];c[c[j>>2]>>2]=c[c[k>>2]>>2];c[g>>2]=h;c[c[f>>2]>>2]=c[c[g>>2]>>2];c[c[e>>2]>>2]=c[(c[e>>2]|0)+4>>2];c[d+36>>2]=a;i=d;return}function Xi(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Yi(c[d>>2]|0);i=b;return}function Yi(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;r=i;i=i+128|0;l=r+72|0;k=r+44|0;j=r+12|0;h=r+104|0;g=r+24|0;f=r+16|0;q=r+20|0;p=r+76|0;d=r+52|0;e=r+28|0;m=r+32|0;n=r+36|0;o=r+40|0;w=r+108|0;B=r+112|0;C=r+116|0;A=r;x=r+56|0;y=r+60|0;z=r+120|0;v=r+68|0;u=r+88|0;t=r+92|0;E=r+96|0;s=r+100|0;G=r+8|0;F=r+80|0;I=r+84|0;H=r+121|0;J=r+48|0;D=r+64|0;c[D>>2]=b;D=c[D>>2]|0;c[J>>2]=D;J=c[J>>2]|0;b=c[J+4>>2]|0;c[F>>2]=J;c[I>>2]=b;F=c[F>>2]|0;b=c[I>>2]|0;a[G+0>>0]=a[H+0>>0]|0;c[E>>2]=F;c[s>>2]=b;b=c[E>>2]|0;while(1){if((c[s>>2]|0)==(c[b+8>>2]|0))break;c[t>>2]=b;c[u>>2]=(c[t>>2]|0)+12;c[v>>2]=c[u>>2];J=c[(c[v>>2]|0)+4>>2]|0;H=b+8|0;I=(c[H>>2]|0)+ -1580|0;c[H>>2]=I;c[w>>2]=I;I=c[w>>2]|0;c[x>>2]=J;c[y>>2]=I;I=c[x>>2]|0;J=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=I;c[C>>2]=J}if((c[D>>2]|0)==0){i=r;return}c[q>>2]=D;c[f>>2]=(c[q>>2]|0)+12;c[g>>2]=c[f>>2];H=c[(c[g>>2]|0)+4>>2]|0;J=c[D>>2]|0;c[h>>2]=D;I=c[h>>2]|0;c[j>>2]=I;c[k>>2]=(c[j>>2]|0)+12;c[l>>2]=c[k>>2];I=((c[c[l>>2]>>2]|0)-(c[I>>2]|0)|0)/1580|0;c[m>>2]=H;c[n>>2]=J;c[o>>2]=I;I=c[n>>2]|0;J=c[o>>2]|0;c[p>>2]=c[m>>2];c[d>>2]=I;c[e>>2]=J;Sw(c[d>>2]|0);i=r;return}function Zi(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+80|0;q=h+44|0;r=h+40|0;s=h+8|0;u=h+12|0;t=h+76|0;k=h+36|0;g=h+16|0;f=h+20|0;d=h+68|0;e=h+32|0;l=h;n=h+48|0;j=h+52|0;m=h+77|0;v=h+60|0;w=h+64|0;x=h+28|0;y=h+24|0;p=h+56|0;o=h+72|0;c[y>>2]=b;c[x>>2]=c[y>>2];c[w>>2]=(c[x>>2]|0)+8;c[v>>2]=c[w>>2];c[u>>2]=c[v>>2];b=c[u>>2]|0;a[s+0>>0]=a[t+0>>0]|0;c[r>>2]=b;c[q>>2]=c[r>>2];c[p>>2]=2718333;c[o>>2]=4294967295/2|0;c[n>>2]=p;c[j>>2]=o;b=c[n>>2]|0;j=c[j>>2]|0;a[l+0>>0]=a[m+0>>0]|0;c[d>>2]=b;c[e>>2]=j;j=c[e>>2]|0;b=c[d>>2]|0;c[k>>2]=l;c[g>>2]=j;c[f>>2]=b;i=h;return c[((c[c[g>>2]>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0?c[e>>2]|0:c[d>>2]|0)>>2]|0}function _i(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;q=i;i=i+176|0;C=q+64|0;x=q+60|0;z=q;B=q+148|0;A=q+156|0;y=q+56|0;E=q+12|0;G=q+112|0;F=q+16|0;D=q+20|0;H=q+24|0;J=q+28|0;I=q+32|0;p=q+36|0;g=q+40|0;r=q+108|0;m=q+144|0;n=q+160|0;f=q+164|0;u=q+68|0;v=q+76|0;w=q+80|0;t=q+84|0;o=q+92|0;h=q+96|0;j=q+100|0;N=q+104|0;O=q+124|0;P=q+44|0;M=q+8|0;Q=q+48|0;k=q+132|0;l=q+52|0;K=q+140|0;L=q+120|0;s=q+116|0;c[Q>>2]=a;c[k>>2]=b;c[l>>2]=d;c[K>>2]=e;e=c[Q>>2]|0;c[O>>2]=M;c[P>>2]=-1;b=c[P>>2]|0;c[N>>2]=c[O>>2];c[q+4>>2]=b;c[c[N>>2]>>2]=0;c[L>>2]=c[M>>2];c[q+128>>2]=L;b=c[K>>2]|0;c[H>>2]=e+12;c[J>>2]=0;c[I>>2]=b;b=c[J>>2]|0;d=c[I>>2]|0;c[G>>2]=c[H>>2];c[F>>2]=b;c[D>>2]=d;d=c[G>>2]|0;c[E>>2]=F;b=c[c[E>>2]>>2]|0;c[C>>2]=c[D>>2];a=c[C>>2]|0;c[B>>2]=d;c[A>>2]=b;c[y>>2]=a;a=c[B>>2]|0;c[z>>2]=A;c[a>>2]=c[c[z>>2]>>2];c[x>>2]=c[y>>2];c[a+4>>2]=c[x>>2];if((c[k>>2]|0)!=0){c[r>>2]=e;c[g>>2]=(c[r>>2]|0)+12;c[p>>2]=c[g>>2];Q=c[k>>2]|0;c[n>>2]=c[(c[p>>2]|0)+4>>2];c[f>>2]=Q;Q=c[f>>2]|0;c[q+136>>2]=c[n>>2];c[m>>2]=Q;c[q+152>>2]=0;Q=Qw((c[m>>2]|0)*1580|0)|0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P*1580|0)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P*1580|0)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}else{c[v>>2]=t;c[w>>2]=-1;Q=c[w>>2]|0;c[u>>2]=c[v>>2];c[q+72>>2]=Q;c[c[u>>2]>>2]=0;c[s>>2]=c[t>>2];c[q+88>>2]=s;Q=0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P*1580|0)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P*1580|0)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}}function $i(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;o=i;i=i+80|0;m=o+36|0;n=o+4|0;g=o+28|0;q=o;e=o+32|0;f=o+8|0;p=o+68|0;l=o+24|0;k=o+60|0;j=o+64|0;v=o+40|0;h=o+44|0;t=o+48|0;u=o+52|0;w=o+56|0;x=o+16|0;s=o+20|0;r=o+12|0;c[x>>2]=b;c[s>>2]=d;d=c[x>>2]|0;c[w>>2]=d;b=c[w>>2]|0;c[r>>2]=((c[b+4>>2]|0)-(c[b>>2]|0)|0)/2132|0;if((c[r>>2]|0)>>>0<(c[s>>2]|0)>>>0){dj(d,(c[s>>2]|0)-(c[r>>2]|0)|0);i=o;return}if(!((c[r>>2]|0)>>>0>(c[s>>2]|0)>>>0)){i=o;return}r=(c[d>>2]|0)+((c[s>>2]|0)*2132|0)|0;c[t>>2]=d;c[u>>2]=r;r=c[u>>2]|0;c[v>>2]=c[t>>2];c[h>>2]=r;r=c[v>>2]|0;while(1){if((c[h>>2]|0)==(c[r+4>>2]|0))break;c[j>>2]=r;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];x=c[l>>2]|0;b=r+4|0;w=(c[b>>2]|0)+ -2132|0;c[b>>2]=w;c[m>>2]=w;w=c[m>>2]|0;c[e>>2]=x;c[f>>2]=w;w=c[e>>2]|0;x=c[f>>2]|0;a[q+0>>0]=a[p+0>>0]|0;c[n>>2]=w;c[g>>2]=x}i=o;return}function aj(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;l=i;i=i+80|0;u=l+28|0;v=l+24|0;s=l+52|0;o=l+60|0;p=l+40|0;q=l+48|0;r=l+56|0;w=l+64|0;n=l+68|0;j=l;m=l+36|0;h=l+4|0;y=l+32|0;k=l+8|0;x=l+44|0;t=l+12|0;c[r>>2]=a;c[w>>2]=b;c[n>>2]=d;c[j>>2]=e;c[m>>2]=f;c[h>>2]=g;vy(c[j>>2]|0,0,704)|0;vy((c[j>>2]|0)+704|0,0,1408)|0;a=(c[j>>2]|0)+2116|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[(c[j>>2]|0)+2112>>2]=0;c[y>>2]=(c[n>>2]|0)-1;c[k>>2]=0;while(1){if((c[y>>2]|0)==0)break;c[y>>2]=c[y>>2]>>1;c[k>>2]=(c[k>>2]|0)+1}c[x>>2]=0;while(1){if(!((c[x>>2]|0)>>>0<(c[n>>2]|0)>>>0))break;if((c[(c[r>>2]|0)+(c[x>>2]<<2)>>2]|0)>0){if((c[(c[j>>2]|0)+2112>>2]|0)<4)c[(c[j>>2]|0)+2116+(c[(c[j>>2]|0)+2112>>2]<<2)>>2]=c[x>>2];a=(c[j>>2]|0)+2112|0;c[a>>2]=(c[a>>2]|0)+1}c[x>>2]=(c[x>>2]|0)+1}if((c[(c[j>>2]|0)+2112>>2]|0)<=1){rh(2,1,0,c[m>>2]|0,c[h>>2]|0);rh(2,0,0,c[m>>2]|0,c[h>>2]|0);a=c[(c[j>>2]|0)+2116>>2]|0;rh(c[k>>2]|0,a,((a|0)<0)<<31>>31,c[m>>2]|0,c[h>>2]|0);i=l;return}if((c[n>>2]|0)>=50?(c[(c[j>>2]|0)+2112>>2]|0)>=16:0){Bd(t,c[n>>2]|0);c[p>>2]=t;c[q>>2]=0;By((c[c[p>>2]>>2]|0)+(c[q>>2]<<2)|0,c[r>>2]|0,c[n>>2]<<2|0)|0;a=c[n>>2]|0;c[s>>2]=t;c[o>>2]=0;bl(a,(c[c[s>>2]>>2]|0)+(c[o>>2]<<2)|0)|0;c[u>>2]=t;c[v>>2]=0;Wk((c[c[u>>2]>>2]|0)+(c[v>>2]<<2)|0,c[n>>2]|0,c[w>>2]|0,c[j>>2]|0);Gd(t)}else Wk(c[r>>2]|0,c[n>>2]|0,c[w>>2]|0,c[j>>2]|0);el(c[j>>2]|0,c[n>>2]|0,(c[j>>2]|0)+704|0);o=c[j>>2]|0;n=c[n>>2]|0;if((c[(c[j>>2]|0)+2112>>2]|0)<=4){bj(o,n,c[k>>2]|0,c[m>>2]|0,c[h>>2]|0);i=l;return}else{cj(o,n,c[m>>2]|0,c[h>>2]|0);i=l;return}}function bj(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;p=i;i=i+64|0;j=p+52|0;m=p;n=p+44|0;o=p+48|0;r=p+56|0;l=p+16|0;h=p+40|0;q=p+36|0;s=p+8|0;k=p+4|0;c[j>>2]=a;c[p+32>>2]=b;c[m>>2]=e;c[n>>2]=f;c[o>>2]=g;c[r>>2]=c[j>>2];c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[(c[j>>2]|0)+2112>>2]|0))break;c[l+(c[h>>2]<<2)>>2]=c[(c[j>>2]|0)+2116+(c[h>>2]<<2)>>2];c[h>>2]=(c[h>>2]|0)+1}c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[(c[j>>2]|0)+2112>>2]|0))break;c[q>>2]=(c[h>>2]|0)+1;while(1){if((c[q>>2]|0)>=(c[(c[j>>2]|0)+2112>>2]|0))break;if((d[(c[r>>2]|0)+(c[l+(c[q>>2]<<2)>>2]|0)>>0]|0|0)<(d[(c[r>>2]|0)+(c[l+(c[h>>2]<<2)>>2]|0)>>0]|0|0)){c[s>>2]=c[l+(c[h>>2]<<2)>>2];c[l+(c[h>>2]<<2)>>2]=c[l+(c[q>>2]<<2)>>2];c[l+(c[q>>2]<<2)>>2]=c[s>>2]}c[q>>2]=(c[q>>2]|0)+1}c[h>>2]=(c[h>>2]|0)+1}rh(2,1,0,c[n>>2]|0,c[o>>2]|0);a=(c[(c[j>>2]|0)+2112>>2]|0)-1|0;rh(2,a,((a|0)<0)<<31>>31,c[n>>2]|0,c[o>>2]|0);c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[(c[j>>2]|0)+2112>>2]|0))break;a=c[l+(c[k>>2]<<2)>>2]|0;rh(c[m>>2]|0,a,((a|0)<0)<<31>>31,c[n>>2]|0,c[o>>2]|0);c[k>>2]=(c[k>>2]|0)+1}if((c[(c[j>>2]|0)+2112>>2]|0)!=4){i=p;return}if((((d[(c[r>>2]|0)+(c[l>>2]|0)>>0]|0|0)==2?(d[(c[r>>2]|0)+(c[l+4>>2]|0)>>0]|0|0)==2:0)?(d[(c[r>>2]|0)+(c[l+8>>2]|0)>>0]|0|0)==2:0)?(d[(c[r>>2]|0)+(c[l+12>>2]|0)>>0]|0|0)==2:0){rh(1,0,0,c[n>>2]|0,c[o>>2]|0);i=p;return}rh(1,1,0,c[n>>2]|0,c[o>>2]|0);i=p;return}function cj(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;p=i;i=i+1600|0;s=p+188|0;q=p+164|0;m=p+176|0;g=p+172|0;r=p+180|0;l=p+192|0;o=p+896|0;h=p+184|0;k=p;n=p+168|0;j=p+88|0;c[s>>2]=a;c[q>>2]=b;c[m>>2]=e;c[g>>2]=f;c[r>>2]=c[s>>2];c[h>>2]=0;cl(c[r>>2]|0,c[q>>2]|0,l,o,h);Ni(k);e=k+0|0;f=e+72|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));c[n>>2]=0;while(1){if((c[n>>2]|0)>=(c[h>>2]|0))break;Oi(k,d[l+(c[n>>2]|0)>>0]|0);c[n>>2]=(c[n>>2]|0)+1}e=j+0|0;f=e+76|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));Pi(k,5,18,j);vh(j,c[m>>2]|0,c[g>>2]|0);wh(l,o,c[h>>2]|0,j,c[m>>2]|0,c[g>>2]|0);i=p;return}function dj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;t=i;i=i+144|0;h=t+60|0;u=t+48|0;v=t+124|0;e=t+116|0;f=t+8|0;r=t;o=t+84|0;q=t+52|0;A=t+40|0;z=t+104|0;y=t+112|0;x=t+120|0;w=t+128|0;g=t+132|0;F=t+136|0;p=t+64|0;l=t+68|0;m=t+72|0;n=t+76|0;E=t+16|0;D=t+88|0;C=t+96|0;B=t+4|0;G=t+92|0;H=t+44|0;I=t+100|0;J=t+108|0;s=t+12|0;k=t+80|0;j=t+20|0;c[J>>2]=b;c[s>>2]=d;d=c[J>>2]|0;c[I>>2]=d;c[H>>2]=(c[I>>2]|0)+8;c[G>>2]=c[H>>2];if((((c[c[G>>2]>>2]|0)-(c[d+4>>2]|0)|0)/2132|0)>>>0>=(c[s>>2]|0)>>>0){ej(d,c[s>>2]|0);i=t;return}c[B>>2]=d;c[C>>2]=(c[B>>2]|0)+8;c[D>>2]=c[C>>2];c[k>>2]=c[D>>2];c[E>>2]=d;B=c[E>>2]|0;B=(((c[B+4>>2]|0)-(c[B>>2]|0)|0)/2132|0)+(c[s>>2]|0)|0;c[F>>2]=d;c[p>>2]=B;B=c[F>>2]|0;c[l>>2]=kj(B)|0;if((c[p>>2]|0)>>>0>(c[l>>2]|0)>>>0)ht(B);c[w>>2]=B;c[x>>2]=c[w>>2];J=c[x>>2]|0;c[y>>2]=J;c[z>>2]=(c[y>>2]|0)+8;c[A>>2]=c[z>>2];c[m>>2]=((c[c[A>>2]>>2]|0)-(c[J>>2]|0)|0)/2132|0;if((c[m>>2]|0)>>>0>=(((c[l>>2]|0)>>>0)/2|0)>>>0)c[g>>2]=c[l>>2];else{c[n>>2]=c[m>>2]<<1;c[o>>2]=n;c[q>>2]=p;J=c[o>>2]|0;I=c[q>>2]|0;a[r+0>>0]=a[t+140>>0]|0;c[e>>2]=J;c[f>>2]=I;I=c[e>>2]|0;J=c[f>>2]|0;c[t+56>>2]=r;c[u>>2]=I;c[v>>2]=J;c[g>>2]=c[((c[c[u>>2]>>2]|0)>>>0<(c[c[v>>2]>>2]|0)>>>0?c[f>>2]|0:c[e>>2]|0)>>2]}I=c[g>>2]|0;c[h>>2]=d;J=c[h>>2]|0;fj(j,I,((c[J+4>>2]|0)-(c[J>>2]|0)|0)/2132|0,c[k>>2]|0);gj(j,c[s>>2]|0);hj(d,j);ij(j);i=t;return}function ej(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;g=d+28|0;h=d+16|0;j=d+4|0;k=d+8|0;l=d+32|0;m=d;n=d+12|0;e=d+24|0;f=d+20|0;c[n>>2]=a;c[e>>2]=b;a=c[n>>2]|0;c[m>>2]=a;c[l>>2]=(c[m>>2]|0)+8;c[k>>2]=c[l>>2];c[f>>2]=c[k>>2];do{n=c[f>>2]|0;c[g>>2]=c[a+4>>2];b=c[g>>2]|0;c[h>>2]=n;c[j>>2]=b;b=c[j>>2]|0;if((b|0)!=0)vy(b|0,0,2132)|0;n=a+4|0;c[n>>2]=(c[n>>2]|0)+2132;c[e>>2]=(c[e>>2]|0)+ -1}while((c[e>>2]|0)>>>0>0);i=d;return}function fj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;k=f+12|0;j=f+8|0;h=f+4|0;g=f;c[k>>2]=a;c[j>>2]=b;c[h>>2]=d;c[g>>2]=e;lj(c[k>>2]|0,c[j>>2]|0,c[h>>2]|0,c[g>>2]|0);i=f;return}function gj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;g=d+28|0;h=d+16|0;j=d+4|0;k=d+8|0;l=d+32|0;m=d;n=d+12|0;e=d+24|0;f=d+20|0;c[n>>2]=a;c[e>>2]=b;a=c[n>>2]|0;c[m>>2]=a;c[l>>2]=(c[m>>2]|0)+12;c[k>>2]=c[l>>2];c[f>>2]=c[(c[k>>2]|0)+4>>2];do{n=c[f>>2]|0;c[g>>2]=c[a+8>>2];b=c[g>>2]|0;c[h>>2]=n;c[j>>2]=b;b=c[j>>2]|0;if((b|0)!=0)vy(b|0,0,2132)|0;n=a+8|0;c[n>>2]=(c[n>>2]|0)+2132;c[e>>2]=(c[e>>2]|0)+ -1}while((c[e>>2]|0)>>>0>0);i=d;return}function hj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=i;i=i+144|0;F=d+108|0;H=d+88|0;G=d+80|0;E=d+48|0;C=d+8|0;z=d+12|0;D=d+84|0;B=d+16|0;y=d+20|0;A=d+24|0;w=d+28|0;t=d+32|0;x=d+104|0;v=d+112|0;s=d+120|0;u=d+128|0;m=d+136|0;q=d+52|0;r=d+56|0;n=d+60|0;o=d+64|0;p=d+68|0;k=d+72|0;g=d+76|0;l=d+4|0;j=d;f=d+92|0;h=d+96|0;K=d+100|0;J=d+40|0;I=d+116|0;L=d+44|0;e=d+124|0;c[L>>2]=a;c[e>>2]=b;a=c[L>>2]|0;c[I>>2]=a;c[J>>2]=(c[I>>2]|0)+8;c[K>>2]=c[J>>2];J=c[a>>2]|0;I=c[a+4>>2]|0;b=(c[e>>2]|0)+4|0;c[d+132>>2]=c[K>>2];c[F>>2]=J;c[H>>2]=I;c[G>>2]=b;c[E>>2]=((c[H>>2]|0)-(c[F>>2]|0)|0)/2132|0;b=c[G>>2]|0;c[b>>2]=(c[b>>2]|0)+((0-(c[E>>2]|0)|0)*2132|0);By(c[c[G>>2]>>2]|0,c[F>>2]|0,(c[E>>2]|0)*2132|0)|0;b=(c[e>>2]|0)+4|0;c[B>>2]=a;c[y>>2]=b;c[D>>2]=c[B>>2];c[A>>2]=c[c[D>>2]>>2];c[C>>2]=c[y>>2];c[c[B>>2]>>2]=c[c[C>>2]>>2];c[z>>2]=A;c[c[y>>2]>>2]=c[c[z>>2]>>2];b=(c[e>>2]|0)+8|0;c[v>>2]=a+4;c[s>>2]=b;c[x>>2]=c[v>>2];c[u>>2]=c[c[x>>2]>>2];c[w>>2]=c[s>>2];c[c[v>>2]>>2]=c[c[w>>2]>>2];c[t>>2]=u;c[c[s>>2]>>2]=c[c[t>>2]>>2];c[r>>2]=a;c[q>>2]=(c[r>>2]|0)+8;c[m>>2]=c[q>>2];m=c[m>>2]|0;c[p>>2]=c[e>>2];c[o>>2]=(c[p>>2]|0)+12;c[n>>2]=c[o>>2];b=c[n>>2]|0;c[j>>2]=m;c[f>>2]=b;c[l>>2]=c[j>>2];c[h>>2]=c[c[l>>2]>>2];c[k>>2]=c[f>>2];c[c[j>>2]>>2]=c[c[k>>2]>>2];c[g>>2]=h;c[c[f>>2]>>2]=c[c[g>>2]>>2];c[c[e>>2]>>2]=c[(c[e>>2]|0)+4>>2];c[d+36>>2]=a;i=d;return}function ij(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;jj(c[d>>2]|0);i=b;return}function jj(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;r=i;i=i+128|0;l=r+72|0;k=r+44|0;j=r+12|0;h=r+104|0;g=r+24|0;f=r+16|0;q=r+20|0;p=r+76|0;d=r+52|0;e=r+28|0;m=r+32|0;n=r+36|0;o=r+40|0;w=r+108|0;B=r+112|0;C=r+116|0;A=r;x=r+56|0;y=r+60|0;z=r+120|0;v=r+68|0;u=r+88|0;t=r+92|0;E=r+96|0;s=r+100|0;G=r+8|0;F=r+80|0;I=r+84|0;H=r+121|0;J=r+48|0;D=r+64|0;c[D>>2]=b;D=c[D>>2]|0;c[J>>2]=D;J=c[J>>2]|0;b=c[J+4>>2]|0;c[F>>2]=J;c[I>>2]=b;F=c[F>>2]|0;b=c[I>>2]|0;a[G+0>>0]=a[H+0>>0]|0;c[E>>2]=F;c[s>>2]=b;b=c[E>>2]|0;while(1){if((c[s>>2]|0)==(c[b+8>>2]|0))break;c[t>>2]=b;c[u>>2]=(c[t>>2]|0)+12;c[v>>2]=c[u>>2];J=c[(c[v>>2]|0)+4>>2]|0;H=b+8|0;I=(c[H>>2]|0)+ -2132|0;c[H>>2]=I;c[w>>2]=I;I=c[w>>2]|0;c[x>>2]=J;c[y>>2]=I;I=c[x>>2]|0;J=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=I;c[C>>2]=J}if((c[D>>2]|0)==0){i=r;return}c[q>>2]=D;c[f>>2]=(c[q>>2]|0)+12;c[g>>2]=c[f>>2];H=c[(c[g>>2]|0)+4>>2]|0;J=c[D>>2]|0;c[h>>2]=D;I=c[h>>2]|0;c[j>>2]=I;c[k>>2]=(c[j>>2]|0)+12;c[l>>2]=c[k>>2];I=((c[c[l>>2]>>2]|0)-(c[I>>2]|0)|0)/2132|0;c[m>>2]=H;c[n>>2]=J;c[o>>2]=I;I=c[n>>2]|0;J=c[o>>2]|0;c[p>>2]=c[m>>2];c[d>>2]=I;c[e>>2]=J;Sw(c[d>>2]|0);i=r;return}function kj(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+80|0;q=h+44|0;r=h+40|0;s=h+8|0;u=h+12|0;t=h+76|0;k=h+36|0;g=h+16|0;f=h+20|0;d=h+68|0;e=h+32|0;l=h;n=h+48|0;j=h+52|0;m=h+77|0;v=h+60|0;w=h+64|0;x=h+28|0;y=h+24|0;p=h+56|0;o=h+72|0;c[y>>2]=b;c[x>>2]=c[y>>2];c[w>>2]=(c[x>>2]|0)+8;c[v>>2]=c[w>>2];c[u>>2]=c[v>>2];b=c[u>>2]|0;a[s+0>>0]=a[t+0>>0]|0;c[r>>2]=b;c[q>>2]=c[r>>2];c[p>>2]=2014524;c[o>>2]=4294967295/2|0;c[n>>2]=p;c[j>>2]=o;b=c[n>>2]|0;j=c[j>>2]|0;a[l+0>>0]=a[m+0>>0]|0;c[d>>2]=b;c[e>>2]=j;j=c[e>>2]|0;b=c[d>>2]|0;c[k>>2]=l;c[g>>2]=j;c[f>>2]=b;i=h;return c[((c[c[g>>2]>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0?c[e>>2]|0:c[d>>2]|0)>>2]|0}function lj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;q=i;i=i+176|0;C=q+64|0;x=q+60|0;z=q;B=q+148|0;A=q+156|0;y=q+56|0;E=q+12|0;G=q+112|0;F=q+16|0;D=q+20|0;H=q+24|0;J=q+28|0;I=q+32|0;p=q+36|0;g=q+40|0;r=q+108|0;m=q+144|0;n=q+160|0;f=q+164|0;u=q+68|0;v=q+76|0;w=q+80|0;t=q+84|0;o=q+92|0;h=q+96|0;j=q+100|0;N=q+104|0;O=q+124|0;P=q+44|0;M=q+8|0;Q=q+48|0;k=q+132|0;l=q+52|0;K=q+140|0;L=q+120|0;s=q+116|0;c[Q>>2]=a;c[k>>2]=b;c[l>>2]=d;c[K>>2]=e;e=c[Q>>2]|0;c[O>>2]=M;c[P>>2]=-1;b=c[P>>2]|0;c[N>>2]=c[O>>2];c[q+4>>2]=b;c[c[N>>2]>>2]=0;c[L>>2]=c[M>>2];c[q+128>>2]=L;b=c[K>>2]|0;c[H>>2]=e+12;c[J>>2]=0;c[I>>2]=b;b=c[J>>2]|0;d=c[I>>2]|0;c[G>>2]=c[H>>2];c[F>>2]=b;c[D>>2]=d;d=c[G>>2]|0;c[E>>2]=F;b=c[c[E>>2]>>2]|0;c[C>>2]=c[D>>2];a=c[C>>2]|0;c[B>>2]=d;c[A>>2]=b;c[y>>2]=a;a=c[B>>2]|0;c[z>>2]=A;c[a>>2]=c[c[z>>2]>>2];c[x>>2]=c[y>>2];c[a+4>>2]=c[x>>2];if((c[k>>2]|0)!=0){c[r>>2]=e;c[g>>2]=(c[r>>2]|0)+12;c[p>>2]=c[g>>2];Q=c[k>>2]|0;c[n>>2]=c[(c[p>>2]|0)+4>>2];c[f>>2]=Q;Q=c[f>>2]|0;c[q+136>>2]=c[n>>2];c[m>>2]=Q;c[q+152>>2]=0;Q=Qw((c[m>>2]|0)*2132|0)|0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P*2132|0)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P*2132|0)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}else{c[v>>2]=t;c[w>>2]=-1;Q=c[w>>2]|0;c[u>>2]=c[v>>2];c[q+72>>2]=Q;c[c[u>>2]>>2]=0;c[s>>2]=c[t>>2];c[q+88>>2]=s;Q=0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P*2132|0)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P*2132|0)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}}function mj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;o=i;i=i+80|0;m=o+36|0;n=o+4|0;g=o+28|0;q=o;e=o+32|0;f=o+8|0;p=o+68|0;l=o+24|0;k=o+60|0;j=o+64|0;v=o+40|0;h=o+44|0;t=o+48|0;u=o+52|0;w=o+56|0;x=o+16|0;s=o+20|0;r=o+12|0;c[x>>2]=b;c[s>>2]=d;d=c[x>>2]|0;c[w>>2]=d;b=c[w>>2]|0;c[r>>2]=((c[b+4>>2]|0)-(c[b>>2]|0)|0)/788|0;if((c[r>>2]|0)>>>0<(c[s>>2]|0)>>>0){qj(d,(c[s>>2]|0)-(c[r>>2]|0)|0);i=o;return}if(!((c[r>>2]|0)>>>0>(c[s>>2]|0)>>>0)){i=o;return}r=(c[d>>2]|0)+((c[s>>2]|0)*788|0)|0;c[t>>2]=d;c[u>>2]=r;r=c[u>>2]|0;c[v>>2]=c[t>>2];c[h>>2]=r;r=c[v>>2]|0;while(1){if((c[h>>2]|0)==(c[r+4>>2]|0))break;c[j>>2]=r;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];x=c[l>>2]|0;b=r+4|0;w=(c[b>>2]|0)+ -788|0;c[b>>2]=w;c[m>>2]=w;w=c[m>>2]|0;c[e>>2]=x;c[f>>2]=w;w=c[e>>2]|0;x=c[f>>2]|0;a[q+0>>0]=a[p+0>>0]|0;c[n>>2]=w;c[g>>2]=x}i=o;return}function nj(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;l=i;i=i+80|0;u=l+28|0;v=l+24|0;s=l+52|0;o=l+60|0;p=l+40|0;q=l+48|0;r=l+56|0;w=l+64|0;n=l+68|0;j=l;m=l+36|0;h=l+4|0;y=l+32|0;k=l+8|0;x=l+44|0;t=l+12|0;c[r>>2]=a;c[w>>2]=b;c[n>>2]=d;c[j>>2]=e;c[m>>2]=f;c[h>>2]=g;vy(c[j>>2]|0,0,256)|0;vy((c[j>>2]|0)+256|0,0,512)|0;a=(c[j>>2]|0)+772|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[(c[j>>2]|0)+768>>2]=0;c[y>>2]=(c[n>>2]|0)-1;c[k>>2]=0;while(1){if((c[y>>2]|0)==0)break;c[y>>2]=c[y>>2]>>1;c[k>>2]=(c[k>>2]|0)+1}c[x>>2]=0;while(1){if(!((c[x>>2]|0)>>>0<(c[n>>2]|0)>>>0))break;if((c[(c[r>>2]|0)+(c[x>>2]<<2)>>2]|0)>0){if((c[(c[j>>2]|0)+768>>2]|0)<4)c[(c[j>>2]|0)+772+(c[(c[j>>2]|0)+768>>2]<<2)>>2]=c[x>>2];a=(c[j>>2]|0)+768|0;c[a>>2]=(c[a>>2]|0)+1}c[x>>2]=(c[x>>2]|0)+1}if((c[(c[j>>2]|0)+768>>2]|0)<=1){rh(2,1,0,c[m>>2]|0,c[h>>2]|0);rh(2,0,0,c[m>>2]|0,c[h>>2]|0);a=c[(c[j>>2]|0)+772>>2]|0;rh(c[k>>2]|0,a,((a|0)<0)<<31>>31,c[m>>2]|0,c[h>>2]|0);i=l;return}if((c[n>>2]|0)>=50?(c[(c[j>>2]|0)+768>>2]|0)>=16:0){Bd(t,c[n>>2]|0);c[p>>2]=t;c[q>>2]=0;By((c[c[p>>2]>>2]|0)+(c[q>>2]<<2)|0,c[r>>2]|0,c[n>>2]<<2|0)|0;a=c[n>>2]|0;c[s>>2]=t;c[o>>2]=0;bl(a,(c[c[s>>2]>>2]|0)+(c[o>>2]<<2)|0)|0;c[u>>2]=t;c[v>>2]=0;Wk((c[c[u>>2]>>2]|0)+(c[v>>2]<<2)|0,c[n>>2]|0,c[w>>2]|0,c[j>>2]|0);Gd(t)}else Wk(c[r>>2]|0,c[n>>2]|0,c[w>>2]|0,c[j>>2]|0);el(c[j>>2]|0,c[n>>2]|0,(c[j>>2]|0)+256|0);o=c[j>>2]|0;n=c[n>>2]|0;if((c[(c[j>>2]|0)+768>>2]|0)<=4){oj(o,n,c[k>>2]|0,c[m>>2]|0,c[h>>2]|0);i=l;return}else{pj(o,n,c[m>>2]|0,c[h>>2]|0);i=l;return}}function oj(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;p=i;i=i+64|0;j=p+52|0;m=p;n=p+44|0;o=p+48|0;r=p+56|0;l=p+16|0;h=p+40|0;q=p+36|0;s=p+8|0;k=p+4|0;c[j>>2]=a;c[p+32>>2]=b;c[m>>2]=e;c[n>>2]=f;c[o>>2]=g;c[r>>2]=c[j>>2];c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[(c[j>>2]|0)+768>>2]|0))break;c[l+(c[h>>2]<<2)>>2]=c[(c[j>>2]|0)+772+(c[h>>2]<<2)>>2];c[h>>2]=(c[h>>2]|0)+1}c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[(c[j>>2]|0)+768>>2]|0))break;c[q>>2]=(c[h>>2]|0)+1;while(1){if((c[q>>2]|0)>=(c[(c[j>>2]|0)+768>>2]|0))break;if((d[(c[r>>2]|0)+(c[l+(c[q>>2]<<2)>>2]|0)>>0]|0|0)<(d[(c[r>>2]|0)+(c[l+(c[h>>2]<<2)>>2]|0)>>0]|0|0)){c[s>>2]=c[l+(c[h>>2]<<2)>>2];c[l+(c[h>>2]<<2)>>2]=c[l+(c[q>>2]<<2)>>2];c[l+(c[q>>2]<<2)>>2]=c[s>>2]}c[q>>2]=(c[q>>2]|0)+1}c[h>>2]=(c[h>>2]|0)+1}rh(2,1,0,c[n>>2]|0,c[o>>2]|0);a=(c[(c[j>>2]|0)+768>>2]|0)-1|0;rh(2,a,((a|0)<0)<<31>>31,c[n>>2]|0,c[o>>2]|0);c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[(c[j>>2]|0)+768>>2]|0))break;a=c[l+(c[k>>2]<<2)>>2]|0;rh(c[m>>2]|0,a,((a|0)<0)<<31>>31,c[n>>2]|0,c[o>>2]|0);c[k>>2]=(c[k>>2]|0)+1}if((c[(c[j>>2]|0)+768>>2]|0)!=4){i=p;return}if((((d[(c[r>>2]|0)+(c[l>>2]|0)>>0]|0|0)==2?(d[(c[r>>2]|0)+(c[l+4>>2]|0)>>0]|0|0)==2:0)?(d[(c[r>>2]|0)+(c[l+8>>2]|0)>>0]|0|0)==2:0)?(d[(c[r>>2]|0)+(c[l+12>>2]|0)>>0]|0|0)==2:0){rh(1,0,0,c[n>>2]|0,c[o>>2]|0);i=p;return}rh(1,1,0,c[n>>2]|0,c[o>>2]|0);i=p;return}function pj(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;p=i;i=i+704|0;s=p+188|0;q=p+164|0;m=p+176|0;g=p+172|0;r=p+180|0;l=p+192|0;o=p+448|0;h=p+184|0;k=p;n=p+168|0;j=p+88|0;c[s>>2]=a;c[q>>2]=b;c[m>>2]=e;c[g>>2]=f;c[r>>2]=c[s>>2];c[h>>2]=0;cl(c[r>>2]|0,c[q>>2]|0,l,o,h);Ni(k);e=k+0|0;f=e+72|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));c[n>>2]=0;while(1){if((c[n>>2]|0)>=(c[h>>2]|0))break;Oi(k,d[l+(c[n>>2]|0)>>0]|0);c[n>>2]=(c[n>>2]|0)+1}e=j+0|0;f=e+76|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));Pi(k,5,18,j);vh(j,c[m>>2]|0,c[g>>2]|0);wh(l,o,c[h>>2]|0,j,c[m>>2]|0,c[g>>2]|0);i=p;return}function qj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;t=i;i=i+144|0;h=t+60|0;u=t+48|0;v=t+124|0;e=t+116|0;f=t+8|0;r=t;o=t+84|0;q=t+52|0;A=t+40|0;z=t+104|0;y=t+112|0;x=t+120|0;w=t+128|0;g=t+132|0;F=t+136|0;p=t+64|0;l=t+68|0;m=t+72|0;n=t+76|0;E=t+16|0;D=t+88|0;C=t+96|0;B=t+4|0;G=t+92|0;H=t+44|0;I=t+100|0;J=t+108|0;s=t+12|0;k=t+80|0;j=t+20|0;c[J>>2]=b;c[s>>2]=d;d=c[J>>2]|0;c[I>>2]=d;c[H>>2]=(c[I>>2]|0)+8;c[G>>2]=c[H>>2];if((((c[c[G>>2]>>2]|0)-(c[d+4>>2]|0)|0)/788|0)>>>0>=(c[s>>2]|0)>>>0){rj(d,c[s>>2]|0);i=t;return}c[B>>2]=d;c[C>>2]=(c[B>>2]|0)+8;c[D>>2]=c[C>>2];c[k>>2]=c[D>>2];c[E>>2]=d;B=c[E>>2]|0;B=(((c[B+4>>2]|0)-(c[B>>2]|0)|0)/788|0)+(c[s>>2]|0)|0;c[F>>2]=d;c[p>>2]=B;B=c[F>>2]|0;c[l>>2]=xj(B)|0;if((c[p>>2]|0)>>>0>(c[l>>2]|0)>>>0)ht(B);c[w>>2]=B;c[x>>2]=c[w>>2];J=c[x>>2]|0;c[y>>2]=J;c[z>>2]=(c[y>>2]|0)+8;c[A>>2]=c[z>>2];c[m>>2]=((c[c[A>>2]>>2]|0)-(c[J>>2]|0)|0)/788|0;if((c[m>>2]|0)>>>0>=(((c[l>>2]|0)>>>0)/2|0)>>>0)c[g>>2]=c[l>>2];else{c[n>>2]=c[m>>2]<<1;c[o>>2]=n;c[q>>2]=p;J=c[o>>2]|0;I=c[q>>2]|0;a[r+0>>0]=a[t+140>>0]|0;c[e>>2]=J;c[f>>2]=I;I=c[e>>2]|0;J=c[f>>2]|0;c[t+56>>2]=r;c[u>>2]=I;c[v>>2]=J;c[g>>2]=c[((c[c[u>>2]>>2]|0)>>>0<(c[c[v>>2]>>2]|0)>>>0?c[f>>2]|0:c[e>>2]|0)>>2]}I=c[g>>2]|0;c[h>>2]=d;J=c[h>>2]|0;sj(j,I,((c[J+4>>2]|0)-(c[J>>2]|0)|0)/788|0,c[k>>2]|0);tj(j,c[s>>2]|0);uj(d,j);vj(j);i=t;return}function rj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;g=d+28|0;h=d+16|0;j=d+4|0;k=d+8|0;l=d+32|0;m=d;n=d+12|0;e=d+24|0;f=d+20|0;c[n>>2]=a;c[e>>2]=b;a=c[n>>2]|0;c[m>>2]=a;c[l>>2]=(c[m>>2]|0)+8;c[k>>2]=c[l>>2];c[f>>2]=c[k>>2];do{n=c[f>>2]|0;c[g>>2]=c[a+4>>2];b=c[g>>2]|0;c[h>>2]=n;c[j>>2]=b;b=c[j>>2]|0;if((b|0)!=0)vy(b|0,0,788)|0;n=a+4|0;c[n>>2]=(c[n>>2]|0)+788;c[e>>2]=(c[e>>2]|0)+ -1}while((c[e>>2]|0)>>>0>0);i=d;return}function sj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;k=f+12|0;j=f+8|0;h=f+4|0;g=f;c[k>>2]=a;c[j>>2]=b;c[h>>2]=d;c[g>>2]=e;yj(c[k>>2]|0,c[j>>2]|0,c[h>>2]|0,c[g>>2]|0);i=f;return}function tj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;g=d+28|0;h=d+16|0;j=d+4|0;k=d+8|0;l=d+32|0;m=d;n=d+12|0;e=d+24|0;f=d+20|0;c[n>>2]=a;c[e>>2]=b;a=c[n>>2]|0;c[m>>2]=a;c[l>>2]=(c[m>>2]|0)+12;c[k>>2]=c[l>>2];c[f>>2]=c[(c[k>>2]|0)+4>>2];do{n=c[f>>2]|0;c[g>>2]=c[a+8>>2];b=c[g>>2]|0;c[h>>2]=n;c[j>>2]=b;b=c[j>>2]|0;if((b|0)!=0)vy(b|0,0,788)|0;n=a+8|0;c[n>>2]=(c[n>>2]|0)+788;c[e>>2]=(c[e>>2]|0)+ -1}while((c[e>>2]|0)>>>0>0);i=d;return}function uj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=i;i=i+144|0;F=d+108|0;H=d+88|0;G=d+80|0;E=d+48|0;C=d+8|0;z=d+12|0;D=d+84|0;B=d+16|0;y=d+20|0;A=d+24|0;w=d+28|0;t=d+32|0;x=d+104|0;v=d+112|0;s=d+120|0;u=d+128|0;m=d+136|0;q=d+52|0;r=d+56|0;n=d+60|0;o=d+64|0;p=d+68|0;k=d+72|0;g=d+76|0;l=d+4|0;j=d;f=d+92|0;h=d+96|0;K=d+100|0;J=d+40|0;I=d+116|0;L=d+44|0;e=d+124|0;c[L>>2]=a;c[e>>2]=b;a=c[L>>2]|0;c[I>>2]=a;c[J>>2]=(c[I>>2]|0)+8;c[K>>2]=c[J>>2];J=c[a>>2]|0;I=c[a+4>>2]|0;b=(c[e>>2]|0)+4|0;c[d+132>>2]=c[K>>2];c[F>>2]=J;c[H>>2]=I;c[G>>2]=b;c[E>>2]=((c[H>>2]|0)-(c[F>>2]|0)|0)/788|0;b=c[G>>2]|0;c[b>>2]=(c[b>>2]|0)+((0-(c[E>>2]|0)|0)*788|0);By(c[c[G>>2]>>2]|0,c[F>>2]|0,(c[E>>2]|0)*788|0)|0;b=(c[e>>2]|0)+4|0;c[B>>2]=a;c[y>>2]=b;c[D>>2]=c[B>>2];c[A>>2]=c[c[D>>2]>>2];c[C>>2]=c[y>>2];c[c[B>>2]>>2]=c[c[C>>2]>>2];c[z>>2]=A;c[c[y>>2]>>2]=c[c[z>>2]>>2];b=(c[e>>2]|0)+8|0;c[v>>2]=a+4;c[s>>2]=b;c[x>>2]=c[v>>2];c[u>>2]=c[c[x>>2]>>2];c[w>>2]=c[s>>2];c[c[v>>2]>>2]=c[c[w>>2]>>2];c[t>>2]=u;c[c[s>>2]>>2]=c[c[t>>2]>>2];c[r>>2]=a;c[q>>2]=(c[r>>2]|0)+8;c[m>>2]=c[q>>2];m=c[m>>2]|0;c[p>>2]=c[e>>2];c[o>>2]=(c[p>>2]|0)+12;c[n>>2]=c[o>>2];b=c[n>>2]|0;c[j>>2]=m;c[f>>2]=b;c[l>>2]=c[j>>2];c[h>>2]=c[c[l>>2]>>2];c[k>>2]=c[f>>2];c[c[j>>2]>>2]=c[c[k>>2]>>2];c[g>>2]=h;c[c[f>>2]>>2]=c[c[g>>2]>>2];c[c[e>>2]>>2]=c[(c[e>>2]|0)+4>>2];c[d+36>>2]=a;i=d;return}function vj(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;wj(c[d>>2]|0);i=b;return}function wj(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;r=i;i=i+128|0;l=r+72|0;k=r+44|0;j=r+12|0;h=r+104|0;g=r+24|0;f=r+16|0;q=r+20|0;p=r+76|0;d=r+52|0;e=r+28|0;m=r+32|0;n=r+36|0;o=r+40|0;w=r+108|0;B=r+112|0;C=r+116|0;A=r;x=r+56|0;y=r+60|0;z=r+120|0;v=r+68|0;u=r+88|0;t=r+92|0;E=r+96|0;s=r+100|0;G=r+8|0;F=r+80|0;I=r+84|0;H=r+121|0;J=r+48|0;D=r+64|0;c[D>>2]=b;D=c[D>>2]|0;c[J>>2]=D;J=c[J>>2]|0;b=c[J+4>>2]|0;c[F>>2]=J;c[I>>2]=b;F=c[F>>2]|0;b=c[I>>2]|0;a[G+0>>0]=a[H+0>>0]|0;c[E>>2]=F;c[s>>2]=b;b=c[E>>2]|0;while(1){if((c[s>>2]|0)==(c[b+8>>2]|0))break;c[t>>2]=b;c[u>>2]=(c[t>>2]|0)+12;c[v>>2]=c[u>>2];J=c[(c[v>>2]|0)+4>>2]|0;H=b+8|0;I=(c[H>>2]|0)+ -788|0;c[H>>2]=I;c[w>>2]=I;I=c[w>>2]|0;c[x>>2]=J;c[y>>2]=I;I=c[x>>2]|0;J=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=I;c[C>>2]=J}if((c[D>>2]|0)==0){i=r;return}c[q>>2]=D;c[f>>2]=(c[q>>2]|0)+12;c[g>>2]=c[f>>2];H=c[(c[g>>2]|0)+4>>2]|0;J=c[D>>2]|0;c[h>>2]=D;I=c[h>>2]|0;c[j>>2]=I;c[k>>2]=(c[j>>2]|0)+12;c[l>>2]=c[k>>2];I=((c[c[l>>2]>>2]|0)-(c[I>>2]|0)|0)/788|0;c[m>>2]=H;c[n>>2]=J;c[o>>2]=I;I=c[n>>2]|0;J=c[o>>2]|0;c[p>>2]=c[m>>2];c[d>>2]=I;c[e>>2]=J;Sw(c[d>>2]|0);i=r;return}function xj(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+80|0;q=h+44|0;r=h+40|0;s=h+8|0;u=h+12|0;t=h+76|0;k=h+36|0;g=h+16|0;f=h+20|0;d=h+68|0;e=h+32|0;l=h;n=h+48|0;j=h+52|0;m=h+77|0;v=h+60|0;w=h+64|0;x=h+28|0;y=h+24|0;p=h+56|0;o=h+72|0;c[y>>2]=b;c[x>>2]=c[y>>2];c[w>>2]=(c[x>>2]|0)+8;c[v>>2]=c[w>>2];c[u>>2]=c[v>>2];b=c[u>>2]|0;a[s+0>>0]=a[t+0>>0]|0;c[r>>2]=b;c[q>>2]=c[r>>2];c[p>>2]=5450466;c[o>>2]=4294967295/2|0;c[n>>2]=p;c[j>>2]=o;b=c[n>>2]|0;j=c[j>>2]|0;a[l+0>>0]=a[m+0>>0]|0;c[d>>2]=b;c[e>>2]=j;j=c[e>>2]|0;b=c[d>>2]|0;c[k>>2]=l;c[g>>2]=j;c[f>>2]=b;i=h;return c[((c[c[g>>2]>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0?c[e>>2]|0:c[d>>2]|0)>>2]|0}function yj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;q=i;i=i+176|0;C=q+64|0;x=q+60|0;z=q;B=q+148|0;A=q+156|0;y=q+56|0;E=q+12|0;G=q+112|0;F=q+16|0;D=q+20|0;H=q+24|0;J=q+28|0;I=q+32|0;p=q+36|0;g=q+40|0;r=q+108|0;m=q+144|0;n=q+160|0;f=q+164|0;u=q+68|0;v=q+76|0;w=q+80|0;t=q+84|0;o=q+92|0;h=q+96|0;j=q+100|0;N=q+104|0;O=q+124|0;P=q+44|0;M=q+8|0;Q=q+48|0;k=q+132|0;l=q+52|0;K=q+140|0;L=q+120|0;s=q+116|0;c[Q>>2]=a;c[k>>2]=b;c[l>>2]=d;c[K>>2]=e;e=c[Q>>2]|0;c[O>>2]=M;c[P>>2]=-1;b=c[P>>2]|0;c[N>>2]=c[O>>2];c[q+4>>2]=b;c[c[N>>2]>>2]=0;c[L>>2]=c[M>>2];c[q+128>>2]=L;b=c[K>>2]|0;c[H>>2]=e+12;c[J>>2]=0;c[I>>2]=b;b=c[J>>2]|0;d=c[I>>2]|0;c[G>>2]=c[H>>2];c[F>>2]=b;c[D>>2]=d;d=c[G>>2]|0;c[E>>2]=F;b=c[c[E>>2]>>2]|0;c[C>>2]=c[D>>2];a=c[C>>2]|0;c[B>>2]=d;c[A>>2]=b;c[y>>2]=a;a=c[B>>2]|0;c[z>>2]=A;c[a>>2]=c[c[z>>2]>>2];c[x>>2]=c[y>>2];c[a+4>>2]=c[x>>2];if((c[k>>2]|0)!=0){c[r>>2]=e;c[g>>2]=(c[r>>2]|0)+12;c[p>>2]=c[g>>2];Q=c[k>>2]|0;c[n>>2]=c[(c[p>>2]|0)+4>>2];c[f>>2]=Q;Q=c[f>>2]|0;c[q+136>>2]=c[n>>2];c[m>>2]=Q;c[q+152>>2]=0;Q=Qw((c[m>>2]|0)*788|0)|0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P*788|0)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P*788|0)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}else{c[v>>2]=t;c[w>>2]=-1;Q=c[w>>2]|0;c[u>>2]=c[v>>2];c[q+72>>2]=Q;c[c[u>>2]>>2]=0;c[s>>2]=c[t>>2];c[q+88>>2]=s;Q=0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P*788|0)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P*788|0)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}}function zj(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;u=i;i=i+144|0;l=u+16|0;j=u+8|0;f=u+108|0;g=u+24|0;q=u+104|0;n=u+112|0;h=u+116|0;m=u+120|0;o=u;p=u+96|0;k=u+124|0;r=u+100|0;s=u+12|0;t=u+4|0;c[l>>2]=b;c[j>>2]=e;c[f>>2]=1;b=g+0|0;e=b+72|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(e|0));c[q>>2]=0;c[n>>2]=8;c[h>>2]=0;a:while(1){if((c[h>>2]|0)>=(c[j>>2]|0))break;c[m>>2]=d[(c[l>>2]|0)+(c[h>>2]|0)>>0];if((c[m>>2]|0)>(c[f>>2]|0))c[f>>2]=c[m>>2];c[o>>2]=1;c[p>>2]=(c[h>>2]|0)+1;while(1){if((c[p>>2]|0)<(c[j>>2]|0))b=(d[(c[l>>2]|0)+(c[p>>2]|0)>>0]|0|0)==(c[m>>2]|0);else b=0;e=c[o>>2]|0;if(!b)break;c[o>>2]=e+1;c[p>>2]=(c[p>>2]|0)+1}c[h>>2]=(c[h>>2]|0)+e;if((c[h>>2]|0)==(c[j>>2]|0)?(c[m>>2]|0)==0:0)break;if((c[m>>2]|0)==0){e=c[o>>2]|0;if((c[o>>2]|0)<3){c[g>>2]=(c[g>>2]|0)+e;continue}c[o>>2]=e-2;while(1){if((c[o>>2]|0)<=0)continue a;b=g+68|0;c[b>>2]=(c[b>>2]|0)+1;c[o>>2]=c[o>>2]>>3}}c[q>>2]=c[h>>2];if((c[m>>2]|0)!=(c[n>>2]|0)){b=g+(c[m>>2]<<2)|0;c[b>>2]=(c[b>>2]|0)+1;c[o>>2]=(c[o>>2]|0)+ -1}c[n>>2]=c[m>>2];e=c[o>>2]|0;if((c[o>>2]|0)<3){b=g+(c[m>>2]<<2)|0;c[b>>2]=(c[b>>2]|0)+e;continue}c[o>>2]=e-2;while(1){if((c[o>>2]|0)<=0)continue a;b=g+64|0;c[b>>2]=(c[b>>2]|0)+1;c[o>>2]=c[o>>2]>>2}}b=k+0|0;e=b+18|0;do{a[b>>0]=0;b=b+1|0}while((b|0)<(e|0));Wk(g,18,7,k);b=k+16|0;a[b>>0]=(d[b>>0]|0)+2;b=k+17|0;a[b>>0]=(d[b>>0]|0)+3;c[r>>2]=0;c[s>>2]=18+(c[f>>2]<<1);c[t>>2]=0;while(1){if((c[t>>2]|0)>=18)break;b=da(c[g+(c[t>>2]<<2)>>2]|0,d[k+(c[t>>2]|0)>>0]|0)|0;c[s>>2]=(c[s>>2]|0)+b;c[r>>2]=(c[r>>2]|0)+(c[g+(c[t>>2]<<2)>>2]|0);c[t>>2]=(c[t>>2]|0)+1}i=u;return c[s>>2]|0}function Aj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0;f=i;i=i+288|0;g=f+132|0;D=f+140|0;C=f+116|0;E=f+24|0;K=f+232|0;j=f+64|0;M=f+272|0;I=f+188|0;H=f+112|0;G=f+60|0;T=f+56|0;F=f+40|0;R=f+44|0;S=f+48|0;Y=f+52|0;Z=f+204|0;N=f+120|0;$=f+108|0;aa=f+96|0;ba=f+68|0;X=f+72|0;U=f+76|0;V=f+80|0;W=f+84|0;ia=f+88|0;ja=f+92|0;ha=f;ea=f+228|0;fa=f+236|0;ga=f+274|0;da=f+252|0;u=f+260|0;v=f+264|0;w=f+124|0;s=f+128|0;t=f+268|0;r=f+8|0;n=f+136|0;p=f+256|0;q=f+275|0;B=f+148|0;A=f+152|0;z=f+156|0;y=f+160|0;x=f+164|0;L=f+168|0;P=f+172|0;o=f+176|0;k=f+180|0;l=f+184|0;m=f+240|0;ka=f+192|0;la=f+196|0;ma=f+32|0;na=f+220|0;oa=f+28|0;pa=f+100|0;qa=f+224|0;ra=f+104|0;sa=f+16|0;va=f+216|0;ua=f+212|0;ta=f+276|0;wa=f+36|0;J=f+200|0;h=f+208|0;_=f+144|0;O=f+244|0;ca=f+273|0;Q=f+248|0;c[wa>>2]=b;c[J>>2]=d;c[h>>2]=e;e=c[wa>>2]|0;b=c[h>>2]|0;c[va>>2]=c[J>>2];c[ua>>2]=b;b=c[va>>2]|0;d=c[ua>>2]|0;a[sa+0>>0]=a[ta+0>>0]|0;c[qa>>2]=b;c[ra>>2]=d;c[_>>2]=((c[ra>>2]|0)-(c[qa>>2]|0)|0)/2096|0;d=c[_>>2]|0;c[pa>>2]=e;c[oa>>2]=c[pa>>2];b=c[oa>>2]|0;c[na>>2]=b;c[ma>>2]=(c[na>>2]|0)+8;c[la>>2]=c[ma>>2];if(!(d>>>0<=(((c[c[la>>2]>>2]|0)-(c[b>>2]|0)|0)/2096|0)>>>0)){Bj(e);g=c[_>>2]|0;c[P>>2]=e;c[o>>2]=g;g=c[P>>2]|0;c[k>>2]=ie(g)|0;if((c[o>>2]|0)>>>0>(c[k>>2]|0)>>>0)ht(g);c[x>>2]=g;c[y>>2]=c[x>>2];wa=c[y>>2]|0;c[z>>2]=wa;c[A>>2]=(c[z>>2]|0)+8;c[B>>2]=c[A>>2];c[l>>2]=((c[c[B>>2]>>2]|0)-(c[wa>>2]|0)|0)/2096|0;if((c[l>>2]|0)>>>0>=(((c[k>>2]|0)>>>0)/2|0)>>>0)c[L>>2]=c[k>>2];else{c[m>>2]=c[l>>2]<<1;c[n>>2]=m;c[p>>2]=o;wa=c[n>>2]|0;va=c[p>>2]|0;a[r+0>>0]=a[q+0>>0]|0;c[s>>2]=wa;c[t>>2]=va;va=c[s>>2]|0;wa=c[t>>2]|0;c[u>>2]=r;c[v>>2]=va;c[w>>2]=wa;c[L>>2]=c[((c[c[v>>2]>>2]|0)>>>0<(c[c[w>>2]>>2]|0)>>>0?c[t>>2]|0:c[s>>2]|0)>>2]}ge(e,c[L>>2]|0);he(e,c[J>>2]|0,c[h>>2]|0);i=f;return}c[O>>2]=c[h>>2];a[ca>>0]=0;va=c[_>>2]|0;c[ka>>2]=e;wa=c[ka>>2]|0;if(va>>>0>(((c[wa+4>>2]|0)-(c[wa>>2]|0)|0)/2096|0)>>>0){a[ca>>0]=1;c[O>>2]=c[J>>2];c[da>>2]=e;va=c[da>>2]|0;va=((c[va+4>>2]|0)-(c[va>>2]|0)|0)/2096|0;c[ea>>2]=O;c[fa>>2]=va;va=c[ea>>2]|0;wa=c[fa>>2]|0;a[ha+0>>0]=a[ga+0>>0]|0;c[ia>>2]=va;c[ja>>2]=wa;wa=c[ia>>2]|0;c[wa>>2]=(c[wa>>2]|0)+((c[ja>>2]|0)*2096|0)}va=c[O>>2]|0;ua=c[e>>2]|0;c[U>>2]=c[J>>2];c[V>>2]=va;c[W>>2]=ua;c[X>>2]=c[U>>2];ua=c[X>>2]|0;c[Y>>2]=c[V>>2];va=c[Y>>2]|0;c[Z>>2]=c[W>>2];wa=c[Z>>2]|0;c[N>>2]=ua;c[$>>2]=va;c[aa>>2]=wa;c[ba>>2]=((c[$>>2]|0)-(c[N>>2]|0)|0)/2096|0;Cy(c[aa>>2]|0,c[N>>2]|0,(c[ba>>2]|0)*2096|0)|0;c[Q>>2]=(c[aa>>2]|0)+((c[ba>>2]|0)*2096|0);if(a[ca>>0]&1){he(e,c[O>>2]|0,c[h>>2]|0);i=f;return}h=c[Q>>2]|0;c[R>>2]=e;c[S>>2]=h;h=c[S>>2]|0;c[T>>2]=c[R>>2];c[F>>2]=h;h=c[T>>2]|0;while(1){if((c[F>>2]|0)==(c[h+4>>2]|0))break;c[G>>2]=h;c[H>>2]=(c[G>>2]|0)+8;c[I>>2]=c[H>>2];wa=c[I>>2]|0;ua=h+4|0;va=(c[ua>>2]|0)+ -2096|0;c[ua>>2]=va;c[g>>2]=va;va=c[g>>2]|0;c[K>>2]=wa;c[j>>2]=va;va=c[K>>2]|0;wa=c[j>>2]|0;a[E+0>>0]=a[M+0>>0]|0;c[D>>2]=va;c[C>>2]=wa}i=f;return}function Bj(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;d=i;i=i+192|0;z=d+72|0;I=d+164|0;N=d+156|0;O=d+64|0;M=d;J=d+60|0;K=d+12|0;L=d+184|0;H=d+44|0;G=d+20|0;F=d+24|0;Q=d+28|0;E=d+32|0;P=d+36|0;R=d+40|0;h=d+124|0;g=d+68|0;f=d+48|0;n=d+144|0;m=d+152|0;l=d+160|0;k=d+168|0;j=d+176|0;r=d+76|0;s=d+80|0;t=d+84|0;o=d+88|0;p=d+92|0;q=d+96|0;x=d+100|0;y=d+120|0;v=d+104|0;w=d+108|0;u=d+112|0;A=d+116|0;D=d+8|0;C=d+16|0;B=d+140|0;V=d+52|0;X=d+132|0;W=d+56|0;U=d+148|0;S=d+4|0;T=d+172|0;e=d+128|0;c[S>>2]=b;b=c[S>>2]|0;S=c[b>>2]|0;c[X>>2]=U;c[W>>2]=-1;W=c[W>>2]|0;c[V>>2]=c[X>>2];c[d+136>>2]=W;c[c[V>>2]>>2]=0;c[T>>2]=c[U>>2];c[d+180>>2]=T;if((S|0)==0){i=d;return}c[R>>2]=b;R=c[R>>2]|0;c[P>>2]=R;X=c[P>>2]|0;P=c[X>>2]|0;c[Q>>2]=X;c[E>>2]=P;P=c[Q>>2]|0;while(1){if((c[E>>2]|0)==(c[P+4>>2]|0))break;c[F>>2]=P;c[G>>2]=(c[F>>2]|0)+8;c[H>>2]=c[G>>2];X=c[H>>2]|0;V=P+4|0;W=(c[V>>2]|0)+ -2096|0;c[V>>2]=W;c[I>>2]=W;W=c[I>>2]|0;c[J>>2]=X;c[K>>2]=W;W=c[J>>2]|0;X=c[K>>2]|0;a[M+0>>0]=a[L+0>>0]|0;c[N>>2]=W;c[O>>2]=X}c[z>>2]=R;c[f>>2]=b;c[g>>2]=(c[f>>2]|0)+8;c[h>>2]=c[g>>2];V=c[h>>2]|0;X=c[b>>2]|0;c[j>>2]=b;c[k>>2]=c[j>>2];W=c[k>>2]|0;c[l>>2]=W;c[m>>2]=(c[l>>2]|0)+8;c[n>>2]=c[m>>2];W=((c[c[n>>2]>>2]|0)-(c[W>>2]|0)|0)/2096|0;c[o>>2]=V;c[p>>2]=X;c[q>>2]=W;W=c[p>>2]|0;X=c[q>>2]|0;c[r>>2]=c[o>>2];c[s>>2]=W;c[t>>2]=X;Sw(c[s>>2]|0);c[v>>2]=u;c[w>>2]=-1;X=c[w>>2]|0;c[x>>2]=c[v>>2];c[y>>2]=X;c[c[x>>2]>>2]=0;c[e>>2]=c[u>>2];c[A>>2]=e;c[B>>2]=b;c[C>>2]=(c[B>>2]|0)+8;c[D>>2]=c[C>>2];c[c[D>>2]>>2]=0;c[b+4>>2]=0;c[b>>2]=0;i=d;return}function Cj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0;f=i;i=i+288|0;g=f+132|0;D=f+140|0;C=f+116|0;E=f+24|0;K=f+232|0;j=f+64|0;M=f+272|0;I=f+188|0;H=f+112|0;G=f+60|0;T=f+56|0;F=f+40|0;R=f+44|0;S=f+48|0;Y=f+52|0;Z=f+204|0;N=f+120|0;$=f+108|0;aa=f+96|0;ba=f+68|0;X=f+72|0;U=f+76|0;V=f+80|0;W=f+84|0;ia=f+88|0;ja=f+92|0;ha=f;ea=f+228|0;fa=f+236|0;ga=f+274|0;da=f+252|0;u=f+260|0;v=f+264|0;w=f+124|0;s=f+128|0;t=f+268|0;r=f+8|0;n=f+136|0;p=f+256|0;q=f+275|0;B=f+148|0;A=f+152|0;z=f+156|0;y=f+160|0;x=f+164|0;L=f+168|0;P=f+172|0;o=f+176|0;k=f+180|0;l=f+184|0;m=f+240|0;ka=f+192|0;la=f+196|0;ma=f+32|0;na=f+220|0;oa=f+28|0;pa=f+100|0;qa=f+224|0;ra=f+104|0;sa=f+16|0;va=f+216|0;ua=f+212|0;ta=f+276|0;wa=f+36|0;J=f+200|0;h=f+208|0;_=f+144|0;O=f+244|0;ca=f+273|0;Q=f+248|0;c[wa>>2]=b;c[J>>2]=d;c[h>>2]=e;e=c[wa>>2]|0;b=c[h>>2]|0;c[va>>2]=c[J>>2];c[ua>>2]=b;b=c[va>>2]|0;d=c[ua>>2]|0;a[sa+0>>0]=a[ta+0>>0]|0;c[qa>>2]=b;c[ra>>2]=d;c[_>>2]=((c[ra>>2]|0)-(c[qa>>2]|0)|0)/1040|0;d=c[_>>2]|0;c[pa>>2]=e;c[oa>>2]=c[pa>>2];b=c[oa>>2]|0;c[na>>2]=b;c[ma>>2]=(c[na>>2]|0)+8;c[la>>2]=c[ma>>2];if(!(d>>>0<=(((c[c[la>>2]>>2]|0)-(c[b>>2]|0)|0)/1040|0)>>>0)){Dj(e);g=c[_>>2]|0;c[P>>2]=e;c[o>>2]=g;g=c[P>>2]|0;c[k>>2]=xg(g)|0;if((c[o>>2]|0)>>>0>(c[k>>2]|0)>>>0)ht(g);c[x>>2]=g;c[y>>2]=c[x>>2];wa=c[y>>2]|0;c[z>>2]=wa;c[A>>2]=(c[z>>2]|0)+8;c[B>>2]=c[A>>2];c[l>>2]=((c[c[B>>2]>>2]|0)-(c[wa>>2]|0)|0)/1040|0;if((c[l>>2]|0)>>>0>=(((c[k>>2]|0)>>>0)/2|0)>>>0)c[L>>2]=c[k>>2];else{c[m>>2]=c[l>>2]<<1;c[n>>2]=m;c[p>>2]=o;wa=c[n>>2]|0;va=c[p>>2]|0;a[r+0>>0]=a[q+0>>0]|0;c[s>>2]=wa;c[t>>2]=va;va=c[s>>2]|0;wa=c[t>>2]|0;c[u>>2]=r;c[v>>2]=va;c[w>>2]=wa;c[L>>2]=c[((c[c[v>>2]>>2]|0)>>>0<(c[c[w>>2]>>2]|0)>>>0?c[t>>2]|0:c[s>>2]|0)>>2]}vg(e,c[L>>2]|0);wg(e,c[J>>2]|0,c[h>>2]|0);i=f;return}c[O>>2]=c[h>>2];a[ca>>0]=0;va=c[_>>2]|0;c[ka>>2]=e;wa=c[ka>>2]|0;if(va>>>0>(((c[wa+4>>2]|0)-(c[wa>>2]|0)|0)/1040|0)>>>0){a[ca>>0]=1;c[O>>2]=c[J>>2];c[da>>2]=e;va=c[da>>2]|0;va=((c[va+4>>2]|0)-(c[va>>2]|0)|0)/1040|0;c[ea>>2]=O;c[fa>>2]=va;va=c[ea>>2]|0;wa=c[fa>>2]|0;a[ha+0>>0]=a[ga+0>>0]|0;c[ia>>2]=va;c[ja>>2]=wa;wa=c[ia>>2]|0;c[wa>>2]=(c[wa>>2]|0)+((c[ja>>2]|0)*1040|0)}va=c[O>>2]|0;ua=c[e>>2]|0;c[U>>2]=c[J>>2];c[V>>2]=va;c[W>>2]=ua;c[X>>2]=c[U>>2];ua=c[X>>2]|0;c[Y>>2]=c[V>>2];va=c[Y>>2]|0;c[Z>>2]=c[W>>2];wa=c[Z>>2]|0;c[N>>2]=ua;c[$>>2]=va;c[aa>>2]=wa;c[ba>>2]=((c[$>>2]|0)-(c[N>>2]|0)|0)/1040|0;Cy(c[aa>>2]|0,c[N>>2]|0,(c[ba>>2]|0)*1040|0)|0;c[Q>>2]=(c[aa>>2]|0)+((c[ba>>2]|0)*1040|0);if(a[ca>>0]&1){wg(e,c[O>>2]|0,c[h>>2]|0);i=f;return}h=c[Q>>2]|0;c[R>>2]=e;c[S>>2]=h;h=c[S>>2]|0;c[T>>2]=c[R>>2];c[F>>2]=h;h=c[T>>2]|0;while(1){if((c[F>>2]|0)==(c[h+4>>2]|0))break;c[G>>2]=h;c[H>>2]=(c[G>>2]|0)+8;c[I>>2]=c[H>>2];wa=c[I>>2]|0;ua=h+4|0;va=(c[ua>>2]|0)+ -1040|0;c[ua>>2]=va;c[g>>2]=va;va=c[g>>2]|0;c[K>>2]=wa;c[j>>2]=va;va=c[K>>2]|0;wa=c[j>>2]|0;a[E+0>>0]=a[M+0>>0]|0;c[D>>2]=va;c[C>>2]=wa}i=f;return}function Dj(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;d=i;i=i+192|0;z=d+72|0;I=d+164|0;N=d+156|0;O=d+64|0;M=d;J=d+60|0;K=d+12|0;L=d+184|0;H=d+44|0;G=d+20|0;F=d+24|0;Q=d+28|0;E=d+32|0;P=d+36|0;R=d+40|0;h=d+124|0;g=d+68|0;f=d+48|0;n=d+144|0;m=d+152|0;l=d+160|0;k=d+168|0;j=d+176|0;r=d+76|0;s=d+80|0;t=d+84|0;o=d+88|0;p=d+92|0;q=d+96|0;x=d+100|0;y=d+120|0;v=d+104|0;w=d+108|0;u=d+112|0;A=d+116|0;D=d+8|0;C=d+16|0;B=d+140|0;V=d+52|0;X=d+132|0;W=d+56|0;U=d+148|0;S=d+4|0;T=d+172|0;e=d+128|0;c[S>>2]=b;b=c[S>>2]|0;S=c[b>>2]|0;c[X>>2]=U;c[W>>2]=-1;W=c[W>>2]|0;c[V>>2]=c[X>>2];c[d+136>>2]=W;c[c[V>>2]>>2]=0;c[T>>2]=c[U>>2];c[d+180>>2]=T;if((S|0)==0){i=d;return}c[R>>2]=b;R=c[R>>2]|0;c[P>>2]=R;X=c[P>>2]|0;P=c[X>>2]|0;c[Q>>2]=X;c[E>>2]=P;P=c[Q>>2]|0;while(1){if((c[E>>2]|0)==(c[P+4>>2]|0))break;c[F>>2]=P;c[G>>2]=(c[F>>2]|0)+8;c[H>>2]=c[G>>2];X=c[H>>2]|0;V=P+4|0;W=(c[V>>2]|0)+ -1040|0;c[V>>2]=W;c[I>>2]=W;W=c[I>>2]|0;c[J>>2]=X;c[K>>2]=W;W=c[J>>2]|0;X=c[K>>2]|0;a[M+0>>0]=a[L+0>>0]|0;c[N>>2]=W;c[O>>2]=X}c[z>>2]=R;c[f>>2]=b;c[g>>2]=(c[f>>2]|0)+8;c[h>>2]=c[g>>2];V=c[h>>2]|0;X=c[b>>2]|0;c[j>>2]=b;c[k>>2]=c[j>>2];W=c[k>>2]|0;c[l>>2]=W;c[m>>2]=(c[l>>2]|0)+8;c[n>>2]=c[m>>2];W=((c[c[n>>2]>>2]|0)-(c[W>>2]|0)|0)/1040|0;c[o>>2]=V;c[p>>2]=X;c[q>>2]=W;W=c[p>>2]|0;X=c[q>>2]|0;c[r>>2]=c[o>>2];c[s>>2]=W;c[t>>2]=X;Sw(c[s>>2]|0);c[v>>2]=u;c[w>>2]=-1;X=c[w>>2]|0;c[x>>2]=c[v>>2];c[y>>2]=X;c[c[x>>2]>>2]=0;c[e>>2]=c[u>>2];c[A>>2]=e;c[B>>2]=b;c[C>>2]=(c[B>>2]|0)+8;c[D>>2]=c[C>>2];c[c[D>>2]>>2]=0;c[b+4>>2]=0;c[b>>2]=0;i=d;return}function Ej(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;d=i;i=i+144|0;A=d+48|0;C=d+92|0;B=d+108|0;z=d+124|0;v=d+12|0;x=d+16|0;w=d+20|0;u=d+24|0;q=d+96|0;s=d+112|0;r=d+120|0;p=d+128|0;f=d+52|0;h=d+60|0;g=d+64|0;k=d+68|0;j=d+72|0;l=d+4|0;m=d;n=d+88|0;D=d+32|0;y=d+36|0;t=d+100|0;o=d+40|0;E=d+116|0;e=d+44|0;c[E>>2]=a;c[e>>2]=b;b=c[E>>2]|0;c[D>>2]=b;a=c[D>>2]|0;c[d+84>>2]=a;c[C>>2]=z;c[B>>2]=-1;B=c[B>>2]|0;c[A>>2]=c[C>>2];c[d+76>>2]=B;c[c[A>>2]>>2]=0;c[y>>2]=c[z>>2];c[d+8>>2]=y;c[a>>2]=0;c[x>>2]=u;c[w>>2]=-1;w=c[w>>2]|0;c[v>>2]=c[x>>2];c[d+80>>2]=w;c[c[v>>2]>>2]=0;c[t>>2]=c[u>>2];c[d+28>>2]=t;c[a+4>>2]=0;c[s>>2]=p;c[r>>2]=-1;r=c[r>>2]|0;c[q>>2]=c[s>>2];c[d+104>>2]=r;c[c[q>>2]>>2]=0;c[o>>2]=c[p>>2];c[d+132>>2]=o;c[m>>2]=a+8;c[n>>2]=0;a=c[n>>2]|0;c[j>>2]=c[m>>2];c[l>>2]=a;j=c[j>>2]|0;c[k>>2]=l;a=c[c[k>>2]>>2]|0;c[h>>2]=j;c[g>>2]=a;a=c[h>>2]|0;c[d+56>>2]=a;c[f>>2]=g;c[a>>2]=c[c[f>>2]>>2];if(!((c[e>>2]|0)>>>0>0)){i=d;return}ge(b,c[e>>2]|0);_e(b,c[e>>2]|0);i=d;return}function Fj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;d=i;i=i+144|0;A=d+48|0;C=d+92|0;B=d+108|0;z=d+124|0;v=d+12|0;x=d+16|0;w=d+20|0;u=d+24|0;q=d+96|0;s=d+112|0;r=d+120|0;p=d+128|0;f=d+52|0;h=d+60|0;g=d+64|0;k=d+68|0;j=d+72|0;l=d+4|0;m=d;n=d+88|0;D=d+32|0;y=d+36|0;t=d+100|0;o=d+40|0;E=d+116|0;e=d+44|0;c[E>>2]=a;c[e>>2]=b;b=c[E>>2]|0;c[D>>2]=b;a=c[D>>2]|0;c[d+84>>2]=a;c[C>>2]=z;c[B>>2]=-1;B=c[B>>2]|0;c[A>>2]=c[C>>2];c[d+76>>2]=B;c[c[A>>2]>>2]=0;c[y>>2]=c[z>>2];c[d+8>>2]=y;c[a>>2]=0;c[x>>2]=u;c[w>>2]=-1;w=c[w>>2]|0;c[v>>2]=c[x>>2];c[d+80>>2]=w;c[c[v>>2]>>2]=0;c[t>>2]=c[u>>2];c[d+28>>2]=t;c[a+4>>2]=0;c[s>>2]=p;c[r>>2]=-1;r=c[r>>2]|0;c[q>>2]=c[s>>2];c[d+104>>2]=r;c[c[q>>2]>>2]=0;c[o>>2]=c[p>>2];c[d+132>>2]=o;c[m>>2]=a+8;c[n>>2]=0;a=c[n>>2]|0;c[j>>2]=c[m>>2];c[l>>2]=a;j=c[j>>2]|0;c[k>>2]=l;a=c[c[k>>2]>>2]|0;c[h>>2]=j;c[g>>2]=a;a=c[h>>2]|0;c[d+56>>2]=a;c[f>>2]=g;c[a>>2]=c[c[f>>2]>>2];if(!((c[e>>2]|0)>>>0>0)){i=d;return}vg(b,c[e>>2]|0);Cg(b,c[e>>2]|0);i=d;return}function Gj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;f=i;i=i+192|0;v=f+84|0;I=f+76|0;J=f+4|0;K=f+164|0;G=f+172|0;H=f+72|0;F=f;B=f+132|0;A=f+60|0;E=f+188|0;r=f+40|0;O=f+44|0;N=f+48|0;M=f+12|0;L=f+56|0;u=f+128|0;U=f+104|0;C=f+152|0;y=f+160|0;z=f+168|0;o=f+176|0;T=f+180|0;S=f+184|0;R=f+88|0;Q=f+92|0;j=f+96|0;l=f+100|0;m=f+52|0;g=f+108|0;D=f+112|0;p=f+116|0;q=f+124|0;P=f+120|0;n=f+16|0;k=f+144|0;h=f+8|0;V=f+64|0;W=f+148|0;X=f+68|0;Y=f+156|0;t=f+136|0;s=f+140|0;x=f+80|0;w=f+20|0;c[Y>>2]=b;c[t>>2]=d;c[s>>2]=e;e=c[Y>>2]|0;c[X>>2]=e;c[W>>2]=(c[X>>2]|0)+8;c[V>>2]=c[W>>2];if((((c[c[V>>2]>>2]|0)-(c[e+4>>2]|0)|0)/4|0)>>>0>=(c[t>>2]|0)>>>0){Y=c[t>>2]|0;o=c[s>>2]|0;c[P>>2]=e;c[n>>2]=Y;c[k>>2]=o;o=c[P>>2]|0;c[q>>2]=o;c[p>>2]=(c[q>>2]|0)+8;c[D>>2]=c[p>>2];c[h>>2]=c[D>>2];do{X=c[h>>2]|0;c[j>>2]=c[o+4>>2];Y=c[j>>2]|0;p=c[k>>2]|0;c[l>>2]=X;c[m>>2]=Y;c[g>>2]=p;p=c[m>>2]|0;if((p|0)!=0)c[p>>2]=c[c[g>>2]>>2];Y=o+4|0;c[Y>>2]=(c[Y>>2]|0)+4;c[n>>2]=(c[n>>2]|0)+ -1}while((c[n>>2]|0)>>>0>0);i=f;return}c[Q>>2]=e;c[R>>2]=(c[Q>>2]|0)+8;c[S>>2]=c[R>>2];c[x>>2]=c[S>>2];c[T>>2]=e;g=c[T>>2]|0;g=(((c[g+4>>2]|0)-(c[g>>2]|0)|0)/4|0)+(c[t>>2]|0)|0;c[U>>2]=e;c[C>>2]=g;g=c[U>>2]|0;c[y>>2]=Xe(g)|0;if((c[C>>2]|0)>>>0>(c[y>>2]|0)>>>0)ht(g);c[L>>2]=g;c[M>>2]=c[L>>2];Y=c[M>>2]|0;c[N>>2]=Y;c[O>>2]=(c[N>>2]|0)+8;c[r>>2]=c[O>>2];c[z>>2]=((c[c[r>>2]>>2]|0)-(c[Y>>2]|0)|0)/4|0;if((c[z>>2]|0)>>>0>=(((c[y>>2]|0)>>>0)/2|0)>>>0)c[u>>2]=c[y>>2];else{c[o>>2]=c[z>>2]<<1;c[B>>2]=o;c[A>>2]=C;Y=c[B>>2]|0;X=c[A>>2]|0;a[F+0>>0]=a[E+0>>0]|0;c[G>>2]=Y;c[H>>2]=X;X=c[G>>2]|0;Y=c[H>>2]|0;c[I>>2]=F;c[J>>2]=X;c[K>>2]=Y;c[u>>2]=c[((c[c[J>>2]>>2]|0)>>>0<(c[c[K>>2]>>2]|0)>>>0?c[H>>2]|0:c[G>>2]|0)>>2]}X=c[u>>2]|0;c[v>>2]=e;Y=c[v>>2]|0;Se(w,X,((c[Y+4>>2]|0)-(c[Y>>2]|0)|0)/4|0,c[x>>2]|0);Hj(w,c[t>>2]|0,c[s>>2]|0);Ue(e,w);Ve(w);i=f;return}function Hj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;k=i;i=i+48|0;j=k+36|0;l=k+16|0;m=k;g=k+28|0;n=k+32|0;o=k+40|0;p=k+12|0;q=k+24|0;f=k+20|0;e=k+8|0;h=k+4|0;c[q>>2]=a;c[f>>2]=b;c[e>>2]=d;b=c[q>>2]|0;c[p>>2]=b;c[o>>2]=(c[p>>2]|0)+12;c[n>>2]=c[o>>2];c[h>>2]=c[(c[n>>2]|0)+4>>2];do{p=c[h>>2]|0;c[j>>2]=c[b+8>>2];q=c[j>>2]|0;d=c[e>>2]|0;c[l>>2]=p;c[m>>2]=q;c[g>>2]=d;d=c[m>>2]|0;if((d|0)!=0)c[d>>2]=c[c[g>>2]>>2];q=b+8|0;c[q>>2]=(c[q>>2]|0)+4;c[f>>2]=(c[f>>2]|0)+ -1}while((c[f>>2]|0)>>>0>0);i=k;return}function Ij(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0;f=i;i=i+288|0;g=f+132|0;D=f+140|0;C=f+116|0;E=f+24|0;K=f+232|0;j=f+64|0;M=f+272|0;I=f+188|0;H=f+112|0;G=f+60|0;T=f+56|0;F=f+40|0;R=f+44|0;S=f+48|0;Y=f+52|0;Z=f+204|0;N=f+120|0;$=f+108|0;aa=f+96|0;ba=f+68|0;X=f+72|0;U=f+76|0;V=f+80|0;W=f+84|0;ia=f+88|0;ja=f+92|0;ha=f;ea=f+228|0;fa=f+236|0;ga=f+274|0;da=f+252|0;u=f+260|0;v=f+264|0;w=f+124|0;s=f+128|0;t=f+268|0;r=f+8|0;n=f+136|0;p=f+256|0;q=f+275|0;B=f+148|0;A=f+152|0;z=f+156|0;y=f+160|0;x=f+164|0;L=f+168|0;P=f+172|0;o=f+176|0;k=f+180|0;l=f+184|0;m=f+240|0;ka=f+192|0;la=f+196|0;ma=f+32|0;na=f+220|0;oa=f+28|0;pa=f+100|0;qa=f+224|0;ra=f+104|0;sa=f+16|0;va=f+216|0;ua=f+212|0;ta=f+276|0;wa=f+36|0;J=f+200|0;h=f+208|0;_=f+144|0;O=f+244|0;ca=f+273|0;Q=f+248|0;c[wa>>2]=b;c[J>>2]=d;c[h>>2]=e;e=c[wa>>2]|0;b=c[h>>2]|0;c[va>>2]=c[J>>2];c[ua>>2]=b;b=c[va>>2]|0;d=c[ua>>2]|0;a[sa+0>>0]=a[ta+0>>0]|0;c[qa>>2]=b;c[ra>>2]=d;c[_>>2]=((c[ra>>2]|0)-(c[qa>>2]|0)|0)/32|0;d=c[_>>2]|0;c[pa>>2]=e;c[oa>>2]=c[pa>>2];b=c[oa>>2]|0;c[na>>2]=b;c[ma>>2]=(c[na>>2]|0)+8;c[la>>2]=c[ma>>2];if(!(d>>>0<=(((c[c[la>>2]>>2]|0)-(c[b>>2]|0)|0)/32|0)>>>0)){Jj(e);g=c[_>>2]|0;c[P>>2]=e;c[o>>2]=g;g=c[P>>2]|0;c[k>>2]=Hc(g)|0;if((c[o>>2]|0)>>>0>(c[k>>2]|0)>>>0)ht(g);c[x>>2]=g;c[y>>2]=c[x>>2];wa=c[y>>2]|0;c[z>>2]=wa;c[A>>2]=(c[z>>2]|0)+8;c[B>>2]=c[A>>2];c[l>>2]=((c[c[B>>2]>>2]|0)-(c[wa>>2]|0)|0)/32|0;if((c[l>>2]|0)>>>0>=(((c[k>>2]|0)>>>0)/2|0)>>>0)c[L>>2]=c[k>>2];else{c[m>>2]=c[l>>2]<<1;c[n>>2]=m;c[p>>2]=o;wa=c[n>>2]|0;va=c[p>>2]|0;a[r+0>>0]=a[q+0>>0]|0;c[s>>2]=wa;c[t>>2]=va;va=c[s>>2]|0;wa=c[t>>2]|0;c[u>>2]=r;c[v>>2]=va;c[w>>2]=wa;c[L>>2]=c[((c[c[v>>2]>>2]|0)>>>0<(c[c[w>>2]>>2]|0)>>>0?c[t>>2]|0:c[s>>2]|0)>>2]}pd(e,c[L>>2]|0);qd(e,c[J>>2]|0,c[h>>2]|0);i=f;return}c[O>>2]=c[h>>2];a[ca>>0]=0;va=c[_>>2]|0;c[ka>>2]=e;wa=c[ka>>2]|0;if(va>>>0>(((c[wa+4>>2]|0)-(c[wa>>2]|0)|0)/32|0)>>>0){a[ca>>0]=1;c[O>>2]=c[J>>2];c[da>>2]=e;va=c[da>>2]|0;va=((c[va+4>>2]|0)-(c[va>>2]|0)|0)/32|0;c[ea>>2]=O;c[fa>>2]=va;va=c[ea>>2]|0;wa=c[fa>>2]|0;a[ha+0>>0]=a[ga+0>>0]|0;c[ia>>2]=va;c[ja>>2]=wa;wa=c[ia>>2]|0;c[wa>>2]=(c[wa>>2]|0)+(c[ja>>2]<<5)}va=c[O>>2]|0;ua=c[e>>2]|0;c[U>>2]=c[J>>2];c[V>>2]=va;c[W>>2]=ua;c[X>>2]=c[U>>2];ua=c[X>>2]|0;c[Y>>2]=c[V>>2];va=c[Y>>2]|0;c[Z>>2]=c[W>>2];wa=c[Z>>2]|0;c[N>>2]=ua;c[$>>2]=va;c[aa>>2]=wa;c[ba>>2]=((c[$>>2]|0)-(c[N>>2]|0)|0)/32|0;Cy(c[aa>>2]|0,c[N>>2]|0,c[ba>>2]<<5|0)|0;c[Q>>2]=(c[aa>>2]|0)+(c[ba>>2]<<5);if(a[ca>>0]&1){qd(e,c[O>>2]|0,c[h>>2]|0);i=f;return}h=c[Q>>2]|0;c[R>>2]=e;c[S>>2]=h;h=c[S>>2]|0;c[T>>2]=c[R>>2];c[F>>2]=h;h=c[T>>2]|0;while(1){if((c[F>>2]|0)==(c[h+4>>2]|0))break;c[G>>2]=h;c[H>>2]=(c[G>>2]|0)+8;c[I>>2]=c[H>>2];wa=c[I>>2]|0;ua=h+4|0;va=(c[ua>>2]|0)+ -32|0;c[ua>>2]=va;c[g>>2]=va;va=c[g>>2]|0;c[K>>2]=wa;c[j>>2]=va;va=c[K>>2]|0;wa=c[j>>2]|0;a[E+0>>0]=a[M+0>>0]|0;c[D>>2]=va;c[C>>2]=wa}i=f;return}function Jj(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;d=i;i=i+192|0;z=d+72|0;I=d+164|0;N=d+156|0;O=d+64|0;M=d;J=d+60|0;K=d+12|0;L=d+184|0;H=d+44|0;G=d+20|0;F=d+24|0;Q=d+28|0;E=d+32|0;P=d+36|0;R=d+40|0;h=d+124|0;g=d+68|0;f=d+48|0;n=d+144|0;m=d+152|0;l=d+160|0;k=d+168|0;j=d+176|0;r=d+76|0;s=d+80|0;t=d+84|0;o=d+88|0;p=d+92|0;q=d+96|0;x=d+100|0;y=d+120|0;v=d+104|0;w=d+108|0;u=d+112|0;A=d+116|0;D=d+8|0;C=d+16|0;B=d+140|0;V=d+52|0;X=d+132|0;W=d+56|0;U=d+148|0;S=d+4|0;T=d+172|0;e=d+128|0;c[S>>2]=b;b=c[S>>2]|0;S=c[b>>2]|0;c[X>>2]=U;c[W>>2]=-1;W=c[W>>2]|0;c[V>>2]=c[X>>2];c[d+136>>2]=W;c[c[V>>2]>>2]=0;c[T>>2]=c[U>>2];c[d+180>>2]=T;if((S|0)==0){i=d;return}c[R>>2]=b;R=c[R>>2]|0;c[P>>2]=R;X=c[P>>2]|0;P=c[X>>2]|0;c[Q>>2]=X;c[E>>2]=P;P=c[Q>>2]|0;while(1){if((c[E>>2]|0)==(c[P+4>>2]|0))break;c[F>>2]=P;c[G>>2]=(c[F>>2]|0)+8;c[H>>2]=c[G>>2];X=c[H>>2]|0;V=P+4|0;W=(c[V>>2]|0)+ -32|0;c[V>>2]=W;c[I>>2]=W;W=c[I>>2]|0;c[J>>2]=X;c[K>>2]=W;W=c[J>>2]|0;X=c[K>>2]|0;a[M+0>>0]=a[L+0>>0]|0;c[N>>2]=W;c[O>>2]=X}c[z>>2]=R;c[f>>2]=b;c[g>>2]=(c[f>>2]|0)+8;c[h>>2]=c[g>>2];V=c[h>>2]|0;X=c[b>>2]|0;c[j>>2]=b;c[k>>2]=c[j>>2];W=c[k>>2]|0;c[l>>2]=W;c[m>>2]=(c[l>>2]|0)+8;c[n>>2]=c[m>>2];W=((c[c[n>>2]>>2]|0)-(c[W>>2]|0)|0)/32|0;c[o>>2]=V;c[p>>2]=X;c[q>>2]=W;W=c[p>>2]|0;X=c[q>>2]|0;c[r>>2]=c[o>>2];c[s>>2]=W;c[t>>2]=X;Sw(c[s>>2]|0);c[v>>2]=u;c[w>>2]=-1;X=c[w>>2]|0;c[x>>2]=c[v>>2];c[y>>2]=X;c[c[x>>2]>>2]=0;c[e>>2]=c[u>>2];c[A>>2]=e;c[B>>2]=b;c[C>>2]=(c[B>>2]|0)+8;c[D>>2]=c[C>>2];c[c[D>>2]>>2]=0;c[b+4>>2]=0;c[b>>2]=0;i=d;return}function Kj(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;p=i;i=i+64|0;j=p+52|0;m=p;n=p+44|0;o=p+48|0;r=p+56|0;l=p+16|0;h=p+40|0;q=p+36|0;s=p+8|0;k=p+4|0;c[j>>2]=a;c[p+32>>2]=b;c[m>>2]=e;c[n>>2]=f;c[o>>2]=g;c[r>>2]=c[j>>2];c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[(c[j>>2]|0)+80>>2]|0))break;c[l+(c[h>>2]<<2)>>2]=c[(c[j>>2]|0)+84+(c[h>>2]<<2)>>2];c[h>>2]=(c[h>>2]|0)+1}c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[(c[j>>2]|0)+80>>2]|0))break;c[q>>2]=(c[h>>2]|0)+1;while(1){if((c[q>>2]|0)>=(c[(c[j>>2]|0)+80>>2]|0))break;if((d[(c[r>>2]|0)+(c[l+(c[q>>2]<<2)>>2]|0)>>0]|0|0)<(d[(c[r>>2]|0)+(c[l+(c[h>>2]<<2)>>2]|0)>>0]|0|0)){c[s>>2]=c[l+(c[h>>2]<<2)>>2];c[l+(c[h>>2]<<2)>>2]=c[l+(c[q>>2]<<2)>>2];c[l+(c[q>>2]<<2)>>2]=c[s>>2]}c[q>>2]=(c[q>>2]|0)+1}c[h>>2]=(c[h>>2]|0)+1}rh(2,1,0,c[n>>2]|0,c[o>>2]|0);a=(c[(c[j>>2]|0)+80>>2]|0)-1|0;rh(2,a,((a|0)<0)<<31>>31,c[n>>2]|0,c[o>>2]|0);c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[(c[j>>2]|0)+80>>2]|0))break;a=c[l+(c[k>>2]<<2)>>2]|0;rh(c[m>>2]|0,a,((a|0)<0)<<31>>31,c[n>>2]|0,c[o>>2]|0);c[k>>2]=(c[k>>2]|0)+1}if((c[(c[j>>2]|0)+80>>2]|0)!=4){i=p;return}if((((d[(c[r>>2]|0)+(c[l>>2]|0)>>0]|0|0)==2?(d[(c[r>>2]|0)+(c[l+4>>2]|0)>>0]|0|0)==2:0)?(d[(c[r>>2]|0)+(c[l+8>>2]|0)>>0]|0|0)==2:0)?(d[(c[r>>2]|0)+(c[l+12>>2]|0)>>0]|0|0)==2:0){rh(1,0,0,c[n>>2]|0,c[o>>2]|0);i=p;return}rh(1,1,0,c[n>>2]|0,c[o>>2]|0);i=p;return}function Lj(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;p=i;i=i+256|0;s=p+188|0;q=p+164|0;m=p+176|0;g=p+172|0;r=p+180|0;l=p+192|0;o=p+218|0;h=p+184|0;k=p;n=p+168|0;j=p+88|0;c[s>>2]=a;c[q>>2]=b;c[m>>2]=e;c[g>>2]=f;c[r>>2]=c[s>>2];c[h>>2]=0;cl(c[r>>2]|0,c[q>>2]|0,l,o,h);Ni(k);e=k+0|0;f=e+72|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));c[n>>2]=0;while(1){if((c[n>>2]|0)>=(c[h>>2]|0))break;Oi(k,d[l+(c[n>>2]|0)>>0]|0);c[n>>2]=(c[n>>2]|0)+1}e=j+0|0;f=e+76|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));Pi(k,5,18,j);vh(j,c[m>>2]|0,c[g>>2]|0);wh(l,o,c[h>>2]|0,j,c[m>>2]|0,c[g>>2]|0);i=p;return}function Mj(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;p=i;i=i+64|0;j=p+52|0;m=p;n=p+44|0;o=p+48|0;r=p+56|0;l=p+16|0;h=p+40|0;q=p+36|0;s=p+8|0;k=p+4|0;c[j>>2]=a;c[p+32>>2]=b;c[m>>2]=e;c[n>>2]=f;c[o>>2]=g;c[r>>2]=c[j>>2];c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[(c[j>>2]|0)+776>>2]|0))break;c[l+(c[h>>2]<<2)>>2]=c[(c[j>>2]|0)+780+(c[h>>2]<<2)>>2];c[h>>2]=(c[h>>2]|0)+1}c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[(c[j>>2]|0)+776>>2]|0))break;c[q>>2]=(c[h>>2]|0)+1;while(1){if((c[q>>2]|0)>=(c[(c[j>>2]|0)+776>>2]|0))break;if((d[(c[r>>2]|0)+(c[l+(c[q>>2]<<2)>>2]|0)>>0]|0|0)<(d[(c[r>>2]|0)+(c[l+(c[h>>2]<<2)>>2]|0)>>0]|0|0)){c[s>>2]=c[l+(c[h>>2]<<2)>>2];c[l+(c[h>>2]<<2)>>2]=c[l+(c[q>>2]<<2)>>2];c[l+(c[q>>2]<<2)>>2]=c[s>>2]}c[q>>2]=(c[q>>2]|0)+1}c[h>>2]=(c[h>>2]|0)+1}rh(2,1,0,c[n>>2]|0,c[o>>2]|0);a=(c[(c[j>>2]|0)+776>>2]|0)-1|0;rh(2,a,((a|0)<0)<<31>>31,c[n>>2]|0,c[o>>2]|0);c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[(c[j>>2]|0)+776>>2]|0))break;a=c[l+(c[k>>2]<<2)>>2]|0;rh(c[m>>2]|0,a,((a|0)<0)<<31>>31,c[n>>2]|0,c[o>>2]|0);c[k>>2]=(c[k>>2]|0)+1}if((c[(c[j>>2]|0)+776>>2]|0)!=4){i=p;return}if((((d[(c[r>>2]|0)+(c[l>>2]|0)>>0]|0|0)==2?(d[(c[r>>2]|0)+(c[l+4>>2]|0)>>0]|0|0)==2:0)?(d[(c[r>>2]|0)+(c[l+8>>2]|0)>>0]|0|0)==2:0)?(d[(c[r>>2]|0)+(c[l+12>>2]|0)>>0]|0|0)==2:0){rh(1,0,0,c[n>>2]|0,c[o>>2]|0);i=p;return}rh(1,1,0,c[n>>2]|0,c[o>>2]|0);i=p;return}function Nj(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;p=i;i=i+720|0;s=p+188|0;q=p+164|0;m=p+176|0;g=p+172|0;r=p+180|0;l=p+192|0;o=p+450|0;h=p+184|0;k=p;n=p+168|0;j=p+88|0;c[s>>2]=a;c[q>>2]=b;c[m>>2]=e;c[g>>2]=f;c[r>>2]=c[s>>2];c[h>>2]=0;cl(c[r>>2]|0,c[q>>2]|0,l,o,h);Ni(k);e=k+0|0;f=e+72|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));c[n>>2]=0;while(1){if((c[n>>2]|0)>=(c[h>>2]|0))break;Oi(k,d[l+(c[n>>2]|0)>>0]|0);c[n>>2]=(c[n>>2]|0)+1}e=j+0|0;f=e+76|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));Pi(k,5,18,j);vh(j,c[m>>2]|0,c[g>>2]|0);wh(l,o,c[h>>2]|0,j,c[m>>2]|0,c[g>>2]|0);i=p;return}function Oj(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Pj(c[d>>2]|0);i=b;return}function Pj(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b;c[d>>2]=a;d=c[d>>2]|0;e=d+0|0;a=e+104|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(a|0));c[d+104>>2]=0;i=b;return}function Qj(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Rj(c[d>>2]|0);i=b;return}function Rj(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;vy(a|0,0,1032)|0;c[a+1032>>2]=0;i=b;return}function Sj(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;p=i;i=i+64|0;j=p+52|0;m=p;n=p+44|0;o=p+48|0;r=p+56|0;l=p+16|0;h=p+40|0;q=p+36|0;s=p+8|0;k=p+4|0;c[j>>2]=a;c[p+32>>2]=b;c[m>>2]=e;c[n>>2]=f;c[o>>2]=g;c[r>>2]=c[j>>2];c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[(c[j>>2]|0)+816>>2]|0))break;c[l+(c[h>>2]<<2)>>2]=c[(c[j>>2]|0)+820+(c[h>>2]<<2)>>2];c[h>>2]=(c[h>>2]|0)+1}c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[(c[j>>2]|0)+816>>2]|0))break;c[q>>2]=(c[h>>2]|0)+1;while(1){if((c[q>>2]|0)>=(c[(c[j>>2]|0)+816>>2]|0))break;if((d[(c[r>>2]|0)+(c[l+(c[q>>2]<<2)>>2]|0)>>0]|0|0)<(d[(c[r>>2]|0)+(c[l+(c[h>>2]<<2)>>2]|0)>>0]|0|0)){c[s>>2]=c[l+(c[h>>2]<<2)>>2];c[l+(c[h>>2]<<2)>>2]=c[l+(c[q>>2]<<2)>>2];c[l+(c[q>>2]<<2)>>2]=c[s>>2]}c[q>>2]=(c[q>>2]|0)+1}c[h>>2]=(c[h>>2]|0)+1}rh(2,1,0,c[n>>2]|0,c[o>>2]|0);a=(c[(c[j>>2]|0)+816>>2]|0)-1|0;rh(2,a,((a|0)<0)<<31>>31,c[n>>2]|0,c[o>>2]|0);c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[(c[j>>2]|0)+816>>2]|0))break;a=c[l+(c[k>>2]<<2)>>2]|0;rh(c[m>>2]|0,a,((a|0)<0)<<31>>31,c[n>>2]|0,c[o>>2]|0);c[k>>2]=(c[k>>2]|0)+1}if((c[(c[j>>2]|0)+816>>2]|0)!=4){i=p;return}if((((d[(c[r>>2]|0)+(c[l>>2]|0)>>0]|0|0)==2?(d[(c[r>>2]|0)+(c[l+4>>2]|0)>>0]|0|0)==2:0)?(d[(c[r>>2]|0)+(c[l+8>>2]|0)>>0]|0|0)==2:0)?(d[(c[r>>2]|0)+(c[l+12>>2]|0)>>0]|0|0)==2:0){rh(1,0,0,c[n>>2]|0,c[o>>2]|0);i=p;return}rh(1,1,0,c[n>>2]|0,c[o>>2]|0);i=p;return}function Tj(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;p=i;i=i+736|0;s=p+188|0;q=p+164|0;m=p+176|0;g=p+172|0;r=p+180|0;l=p+192|0;o=p+464|0;h=p+184|0;k=p;n=p+168|0;j=p+88|0;c[s>>2]=a;c[q>>2]=b;c[m>>2]=e;c[g>>2]=f;c[r>>2]=c[s>>2];c[h>>2]=0;cl(c[r>>2]|0,c[q>>2]|0,l,o,h);Ni(k);e=k+0|0;f=e+72|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));c[n>>2]=0;while(1){if((c[n>>2]|0)>=(c[h>>2]|0))break;Oi(k,d[l+(c[n>>2]|0)>>0]|0);c[n>>2]=(c[n>>2]|0)+1}e=j+0|0;f=e+76|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));Pi(k,5,18,j);vh(j,c[m>>2]|0,c[g>>2]|0);wh(l,o,c[h>>2]|0,j,c[m>>2]|0,c[g>>2]|0);i=p;return}function Uj(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Vj(c[d>>2]|0);i=b;return}function Vj(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;vy(a|0,0,1088)|0;c[a+1088>>2]=0;i=b;return}function Wj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;e=i;i=i+208|0;h=e+96|0;P=e+80|0;Q=e+76|0;S=e+176|0;R=e+184|0;O=e+36|0;M=e+156|0;I=e+144|0;J=e+92|0;L=e+60|0;K=e+56|0;H=e+40|0;F=e+44|0;B=e+48|0;C=e+52|0;E=e+140|0;D=e+116|0;A=e+88|0;y=e+72|0;q=e+164|0;j=e+172|0;l=e+180|0;n=e+188|0;k=e+192|0;m=e+16|0;s=e+196|0;o=e+100|0;t=e+104|0;p=e+200|0;r=e+8|0;u=e+112|0;w=e+136|0;v=e+24|0;T=e+120|0;U=e+124|0;V=e+128|0;N=e+132|0;G=e+32|0;z=e+64|0;x=e+202|0;X=e+148|0;Y=e;_=e+160|0;Z=e+203|0;$=e+152|0;aa=e+28|0;ba=e+84|0;ca=e+68|0;g=e+168|0;W=e+201|0;f=e+108|0;c[ca>>2]=b;c[g>>2]=d;d=c[ca>>2]|0;c[ba>>2]=c[g>>2];c[aa>>2]=(c[ba>>2]|0)+8;c[$>>2]=c[aa>>2];c[_>>2]=c[$>>2];b=c[_>>2]|0;a[Y+0>>0]=a[Z+0>>0]|0;c[X>>2]=b;c[U>>2]=d;c[V>>2]=W;b=c[U>>2]|0;c[T>>2]=b;c[S>>2]=O;c[R>>2]=-1;R=c[R>>2]|0;c[P>>2]=c[S>>2];c[Q>>2]=R;c[c[P>>2]>>2]=0;c[N>>2]=c[O>>2];c[M>>2]=N;c[b>>2]=0;c[L>>2]=H;c[K>>2]=-1;K=c[K>>2]|0;c[I>>2]=c[L>>2];c[J>>2]=K;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[F>>2]=G;c[b+4>>2]=0;b=b+8|0;c[E>>2]=A;c[D>>2]=-1;D=c[D>>2]|0;c[B>>2]=c[E>>2];c[C>>2]=D;c[c[B>>2]>>2]=0;c[z>>2]=c[A>>2];c[y>>2]=z;a[v+0>>0]=a[x+0>>0]|0;c[u>>2]=b;c[w>>2]=0;u=c[u>>2]|0;b=c[w>>2]|0;a[r+0>>0]=a[v+0>>0]|0;c[o>>2]=u;c[t>>2]=b;o=c[o>>2]|0;c[s>>2]=t;b=c[c[s>>2]>>2]|0;c[q>>2]=r;a[m+0>>0]=a[p+0>>0]|0;c[n>>2]=o;c[k>>2]=b;b=c[n>>2]|0;c[l>>2]=m;c[j>>2]=k;c[b>>2]=c[c[j>>2]>>2];c[h>>2]=c[g>>2];b=c[h>>2]|0;c[f>>2]=((c[b+4>>2]|0)-(c[b>>2]|0)|0)/4|0;if(!((c[f>>2]|0)>>>0>0)){i=e;return}gf(d,c[f>>2]|0);Xj(d,c[c[g>>2]>>2]|0,c[(c[g>>2]|0)+4>>2]|0);i=e;return}function Xj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;k=i;i=i+48|0;g=k+36|0;j=k+16|0;e=k;l=k+28|0;n=k+32|0;o=k+40|0;p=k+12|0;q=k+24|0;h=k+20|0;m=k+8|0;f=k+4|0;c[q>>2]=a;c[h>>2]=b;c[m>>2]=d;d=c[q>>2]|0;c[p>>2]=d;c[o>>2]=(c[p>>2]|0)+8;c[n>>2]=c[o>>2];c[f>>2]=c[n>>2];while(1){if((c[h>>2]|0)==(c[m>>2]|0))break;p=c[f>>2]|0;c[g>>2]=c[d+4>>2];q=c[g>>2]|0;b=c[h>>2]|0;c[j>>2]=p;c[e>>2]=q;c[l>>2]=b;b=c[e>>2]|0;if((b|0)!=0)c[b>>2]=c[c[l>>2]>>2];q=d+4|0;c[q>>2]=(c[q>>2]|0)+4;c[h>>2]=(c[h>>2]|0)+4}i=k;return}function Yj(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;yd(a+204|0);yf(a+192|0);hg(a+180|0);Gd(a+168|0);Gd(a+156|0);Gd(a+144|0);Zj(a+104|0);Zj(a+64|0);Zj(a+24|0);od(a);i=b;return}function Zj(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;_j(c[d>>2]|0);i=b;return}function _j(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;Gd(a+28|0);Gd(a+16|0);md(a+4|0);i=b;return}function $j(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0;b=i;i=i+960|0;y=b+948|0;A=b+932|0;z=b+924|0;x=b+916|0;t=b+432|0;v=b+440|0;u=b+444|0;s=b+448|0;o=b+32|0;q=b+40|0;p=b+880|0;n=b+44|0;d=b+52|0;f=b+60|0;e=b+64|0;h=b+68|0;g=b+72|0;j=b+76|0;k=b+80|0;l=b+84|0;B=b+92|0;w=b+96|0;r=b+100|0;m=b+876|0;C=b+104|0;D=b+108|0;Z=b+112|0;$=b+120|0;_=b+124|0;Y=b+128|0;U=b+136|0;W=b+144|0;V=b+148|0;T=b+152|0;P=b+160|0;R=b+168|0;Q=b+172|0;O=b+176|0;F=b+184|0;E=b+192|0;G=b+196|0;H=b+200|0;I=b+204|0;J=b+208|0;L=b+212|0;K=b+216|0;M=b+224|0;X=b+872|0;S=b+228|0;N=b+232|0;aa=b+236|0;ba=b+240|0;xa=b+244|0;za=b+252|0;ya=b+256|0;wa=b+260|0;sa=b+268|0;ua=b+276|0;ta=b+280|0;ra=b+284|0;na=b+292|0;pa=b+300|0;oa=b+304|0;ma=b+308|0;da=b+316|0;ca=b+324|0;ea=b+328|0;fa=b+332|0;ga=b+336|0;ha=b+340|0;ja=b+344|0;ia=b+348|0;ka=b+356|0;va=b+360|0;qa=b+364|0;la=b+368|0;Aa=b+372|0;Ba=b+376|0;Xa=b+380|0;Za=b+388|0;Ya=b+392|0;Wa=b+396|0;Sa=b+404|0;Ua=b+412|0;Ta=b+416|0;Ra=b+420|0;Na=b+912|0;Pa=b+928|0;Oa=b+936|0;Ma=b+944|0;Da=b+452|0;Ca=b+460|0;Ea=b+464|0;Fa=b+468|0;Ga=b+472|0;Ha=b+476|0;Ja=b+868|0;Ia=b+480|0;Ka=b+488|0;Va=b+492|0;Qa=b+496|0;La=b+500|0;_a=b+504|0;$a=b+508|0;vb=b+512|0;xb=b+520|0;wb=b+524|0;ub=b+528|0;qb=b+536|0;sb=b+544|0;rb=b+548|0;pb=b+552|0;lb=b+560|0;nb=b+568|0;mb=b+572|0;kb=b+576|0;bb=b+584|0;ab=b+592|0;cb=b+596|0;db=b+600|0;eb=b+604|0;fb=b+608|0;hb=b+612|0;gb=b+616|0;ib=b+624|0;tb=b+628|0;ob=b+632|0;jb=b+636|0;yb=b+640|0;zb=b+644|0;Vb=b+648|0;Xb=b+656|0;Wb=b+660|0;Ub=b+664|0;Qb=b+672|0;Sb=b+680|0;Rb=b+684|0;Pb=b+688|0;Lb=b+696|0;Nb=b+704|0;Mb=b+708|0;Kb=b+712|0;Bb=b+720|0;Ab=b+728|0;Cb=b+732|0;Db=b+736|0;Eb=b+740|0;Fb=b+744|0;Hb=b+748|0;Gb=b+752|0;Ib=b+760|0;Tb=b+764|0;Ob=b+768|0;Jb=b+772|0;Yb=b+776|0;Zb=b+780|0;tc=b+784|0;vc=b+792|0;uc=b+796|0;sc=b+800|0;oc=b+808|0;qc=b+816|0;pc=b+820|0;nc=b+824|0;jc=b+832|0;lc=b+840|0;kc=b+844|0;ic=b+848|0;$b=b+856|0;_b=b+864|0;ac=b+28|0;bc=b+16|0;cc=b;dc=b+884|0;fc=b+888|0;ec=b+20|0;gc=b+12|0;rc=b+4|0;mc=b+24|0;hc=b+896|0;wc=b+8|0;xc=b+424|0;yc=b+900|0;c[yc>>2]=a;a=c[yc>>2]|0;c[xc>>2]=a;c[wc>>2]=c[xc>>2];c[gc>>2]=c[wc>>2];gc=c[gc>>2]|0;c[b+892>>2]=gc;c[vc>>2]=sc;c[uc>>2]=-1;uc=c[uc>>2]|0;c[tc>>2]=c[vc>>2];c[b+788>>2]=uc;c[c[tc>>2]>>2]=0;c[rc>>2]=c[sc>>2];c[b+804>>2]=rc;c[gc>>2]=0;c[qc>>2]=nc;c[pc>>2]=-1;pc=c[pc>>2]|0;c[oc>>2]=c[qc>>2];c[b+812>>2]=pc;c[c[oc>>2]>>2]=0;c[mc>>2]=c[nc>>2];c[b+828>>2]=mc;c[gc+4>>2]=0;c[lc>>2]=ic;c[kc>>2]=-1;kc=c[kc>>2]|0;c[jc>>2]=c[lc>>2];c[b+836>>2]=kc;c[c[jc>>2]>>2]=0;c[hc>>2]=c[ic>>2];c[b+852>>2]=hc;c[fc>>2]=gc+8;c[ec>>2]=0;ec=c[ec>>2]|0;c[cc>>2]=c[fc>>2];c[dc>>2]=ec;cc=c[cc>>2]|0;c[bc>>2]=dc;bc=c[c[bc>>2]>>2]|0;c[_b>>2]=cc;c[ac>>2]=bc;_b=c[_b>>2]|0;c[b+860>>2]=_b;c[$b>>2]=ac;c[_b>>2]=c[c[$b>>2]>>2];ak(a+24|0);ak(a+64|0);ak(a+104|0);c[Zb>>2]=a+144;c[Yb>>2]=c[Zb>>2];c[Ib>>2]=c[Yb>>2];Ib=c[Ib>>2]|0;c[b+756>>2]=Ib;c[Xb>>2]=Ub;c[Wb>>2]=-1;Wb=c[Wb>>2]|0;c[Vb>>2]=c[Xb>>2];c[b+652>>2]=Wb;c[c[Vb>>2]>>2]=0;c[Tb>>2]=c[Ub>>2];c[b+668>>2]=Tb;c[Ib>>2]=0;c[Sb>>2]=Pb;c[Rb>>2]=-1;Rb=c[Rb>>2]|0;c[Qb>>2]=c[Sb>>2];c[b+676>>2]=Rb;c[c[Qb>>2]>>2]=0;c[Ob>>2]=c[Pb>>2];c[b+692>>2]=Ob;c[Ib+4>>2]=0;c[Nb>>2]=Kb;c[Mb>>2]=-1;Mb=c[Mb>>2]|0;c[Lb>>2]=c[Nb>>2];c[b+700>>2]=Mb;c[c[Lb>>2]>>2]=0;c[Jb>>2]=c[Kb>>2];c[b+716>>2]=Jb;c[Hb>>2]=Ib+8;c[Gb>>2]=0;Gb=c[Gb>>2]|0;c[Eb>>2]=c[Hb>>2];c[Fb>>2]=Gb;Eb=c[Eb>>2]|0;c[Db>>2]=Fb;Db=c[c[Db>>2]>>2]|0;c[Ab>>2]=Eb;c[Cb>>2]=Db;Ab=c[Ab>>2]|0;c[b+724>>2]=Ab;c[Bb>>2]=Cb;c[Ab>>2]=c[c[Bb>>2]>>2];c[zb>>2]=a+156;c[yb>>2]=c[zb>>2];c[ib>>2]=c[yb>>2];ib=c[ib>>2]|0;c[b+620>>2]=ib;c[xb>>2]=ub;c[wb>>2]=-1;wb=c[wb>>2]|0;c[vb>>2]=c[xb>>2];c[b+516>>2]=wb;c[c[vb>>2]>>2]=0;c[tb>>2]=c[ub>>2];c[b+532>>2]=tb;c[ib>>2]=0;c[sb>>2]=pb;c[rb>>2]=-1;rb=c[rb>>2]|0;c[qb>>2]=c[sb>>2];c[b+540>>2]=rb;c[c[qb>>2]>>2]=0;c[ob>>2]=c[pb>>2];c[b+556>>2]=ob;c[ib+4>>2]=0;c[nb>>2]=kb;c[mb>>2]=-1;mb=c[mb>>2]|0;c[lb>>2]=c[nb>>2];c[b+564>>2]=mb;c[c[lb>>2]>>2]=0;c[jb>>2]=c[kb>>2];c[b+580>>2]=jb;c[hb>>2]=ib+8;c[gb>>2]=0;gb=c[gb>>2]|0;c[eb>>2]=c[hb>>2];c[fb>>2]=gb;eb=c[eb>>2]|0;c[db>>2]=fb;db=c[c[db>>2]>>2]|0;c[ab>>2]=eb;c[cb>>2]=db;ab=c[ab>>2]|0;c[b+588>>2]=ab;c[bb>>2]=cb;c[ab>>2]=c[c[bb>>2]>>2];c[$a>>2]=a+168;c[_a>>2]=c[$a>>2];c[Ka>>2]=c[_a>>2];Ka=c[Ka>>2]|0;c[b+484>>2]=Ka;c[Za>>2]=Wa;c[Ya>>2]=-1;Ya=c[Ya>>2]|0;c[Xa>>2]=c[Za>>2];c[b+384>>2]=Ya;c[c[Xa>>2]>>2]=0;c[Va>>2]=c[Wa>>2];c[b+400>>2]=Va;c[Ka>>2]=0;c[Ua>>2]=Ra;c[Ta>>2]=-1;Ta=c[Ta>>2]|0;c[Sa>>2]=c[Ua>>2];c[b+408>>2]=Ta;c[c[Sa>>2]>>2]=0;c[Qa>>2]=c[Ra>>2];c[b+904>>2]=Qa;c[Ka+4>>2]=0;c[Pa>>2]=Ma;c[Oa>>2]=-1;Oa=c[Oa>>2]|0;c[Na>>2]=c[Pa>>2];c[b+920>>2]=Oa;c[c[Na>>2]>>2]=0;c[La>>2]=c[Ma>>2];c[b+952>>2]=La;c[Ja>>2]=Ka+8;c[Ia>>2]=0;Ia=c[Ia>>2]|0;c[Ga>>2]=c[Ja>>2];c[Ha>>2]=Ia;Ga=c[Ga>>2]|0;c[Fa>>2]=Ha;Fa=c[c[Fa>>2]>>2]|0;c[Ca>>2]=Ga;c[Ea>>2]=Fa;Ca=c[Ca>>2]|0;c[b+456>>2]=Ca;c[Da>>2]=Ea;c[Ca>>2]=c[c[Da>>2]>>2];c[Ba>>2]=a+180;c[Aa>>2]=c[Ba>>2];c[ka>>2]=c[Aa>>2];ka=c[ka>>2]|0;c[b+352>>2]=ka;c[za>>2]=wa;c[ya>>2]=-1;ya=c[ya>>2]|0;c[xa>>2]=c[za>>2];c[b+248>>2]=ya;c[c[xa>>2]>>2]=0;c[va>>2]=c[wa>>2];c[b+264>>2]=va;c[ka>>2]=0;c[ua>>2]=ra;c[ta>>2]=-1;ta=c[ta>>2]|0;c[sa>>2]=c[ua>>2];c[b+272>>2]=ta;c[c[sa>>2]>>2]=0;c[qa>>2]=c[ra>>2];c[b+288>>2]=qa;c[ka+4>>2]=0;c[pa>>2]=ma;c[oa>>2]=-1;oa=c[oa>>2]|0;c[na>>2]=c[pa>>2];c[b+296>>2]=oa;c[c[na>>2]>>2]=0;c[la>>2]=c[ma>>2];c[b+312>>2]=la;c[ja>>2]=ka+8;c[ia>>2]=0;ia=c[ia>>2]|0;c[ga>>2]=c[ja>>2];c[ha>>2]=ia;ga=c[ga>>2]|0;c[fa>>2]=ha;fa=c[c[fa>>2]>>2]|0;c[ca>>2]=ga;c[ea>>2]=fa;ca=c[ca>>2]|0;c[b+320>>2]=ca;c[da>>2]=ea;c[ca>>2]=c[c[da>>2]>>2];c[ba>>2]=a+192;c[aa>>2]=c[ba>>2];c[M>>2]=c[aa>>2];M=c[M>>2]|0;c[b+220>>2]=M;c[$>>2]=Y;c[_>>2]=-1;_=c[_>>2]|0;c[Z>>2]=c[$>>2];c[b+116>>2]=_;c[c[Z>>2]>>2]=0;c[X>>2]=c[Y>>2];c[b+132>>2]=X;c[M>>2]=0;c[W>>2]=T;c[V>>2]=-1;V=c[V>>2]|0;c[U>>2]=c[W>>2];c[b+140>>2]=V;c[c[U>>2]>>2]=0;c[S>>2]=c[T>>2];c[b+156>>2]=S;c[M+4>>2]=0;c[R>>2]=O;c[Q>>2]=-1;Q=c[Q>>2]|0;c[P>>2]=c[R>>2];c[b+164>>2]=Q;c[c[P>>2]>>2]=0;c[N>>2]=c[O>>2];c[b+180>>2]=N;c[L>>2]=M+8;c[K>>2]=0;K=c[K>>2]|0;c[I>>2]=c[L>>2];c[J>>2]=K;I=c[I>>2]|0;c[H>>2]=J;H=c[c[H>>2]>>2]|0;c[E>>2]=I;c[G>>2]=H;E=c[E>>2]|0;c[b+188>>2]=E;c[F>>2]=G;c[E>>2]=c[c[F>>2]>>2];c[D>>2]=a+204;c[C>>2]=c[D>>2];c[B>>2]=c[C>>2];a=c[B>>2]|0;c[b+88>>2]=a;c[A>>2]=x;c[z>>2]=-1;z=c[z>>2]|0;c[y>>2]=c[A>>2];c[b+940>>2]=z;c[c[y>>2]>>2]=0;c[w>>2]=c[x>>2];c[b+908>>2]=w;c[a>>2]=0;c[v>>2]=s;c[u>>2]=-1;u=c[u>>2]|0;c[t>>2]=c[v>>2];c[b+436>>2]=u;c[c[t>>2]>>2]=0;c[r>>2]=c[s>>2];c[b+428>>2]=r;c[a+4>>2]=0;c[q>>2]=n;c[p>>2]=-1;p=c[p>>2]|0;c[o>>2]=c[q>>2];c[b+36>>2]=p;c[c[o>>2]>>2]=0;c[m>>2]=c[n>>2];c[b+48>>2]=m;c[k>>2]=a+8;c[l>>2]=0;a=c[l>>2]|0;c[g>>2]=c[k>>2];c[j>>2]=a;g=c[g>>2]|0;c[h>>2]=j;a=c[c[h>>2]>>2]|0;c[f>>2]=g;c[e>>2]=a;a=c[f>>2]|0;c[b+56>>2]=a;c[d>>2]=e;c[a>>2]=c[c[d>>2]>>2];i=b;return}function ak(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;bk(c[d>>2]|0);i=b;return}function bk(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0;b=i;i=i+416|0;y=b+404|0;A=b+372|0;z=b+356|0;x=b+12|0;t=b+180|0;v=b+16|0;u=b+20|0;s=b+24|0;o=b+32|0;q=b+40|0;p=b+344|0;n=b+44|0;d=b+52|0;f=b+60|0;e=b+64|0;h=b+68|0;g=b+72|0;j=b+76|0;k=b+80|0;l=b+84|0;B=b+92|0;w=b+96|0;r=b+100|0;m=b+340|0;C=b+104|0;D=b+108|0;Z=b+112|0;$=b+120|0;_=b+124|0;Y=b+128|0;U=b+136|0;W=b+144|0;V=b+148|0;T=b+152|0;P=b+368|0;R=b+384|0;Q=b+392|0;O=b+400|0;F=b+184|0;E=b+192|0;G=b+196|0;H=b+200|0;I=b+204|0;J=b+208|0;L=b+212|0;K=b+216|0;M=b+224|0;X=b+336|0;S=b+228|0;N=b+232|0;aa=b+236|0;ba=b+240|0;xa=b+244|0;za=b+252|0;ya=b+256|0;wa=b+260|0;sa=b+268|0;ua=b+276|0;ta=b+280|0;ra=b+284|0;na=b+292|0;pa=b+300|0;oa=b+304|0;ma=b+308|0;da=b+316|0;ca=b+324|0;ea=b+328|0;fa=b+332|0;ga=b+348|0;ha=b+352|0;ja=b+4|0;ia=b;ka=b+360|0;va=b+160|0;qa=b+364|0;la=b+164|0;Aa=b+380|0;Ba=b+172|0;Ca=b+388|0;c[Ca>>2]=a;a=c[Ca>>2]|0;c[Ba>>2]=a+4;c[Aa>>2]=c[Ba>>2];c[ka>>2]=c[Aa>>2];ka=c[ka>>2]|0;c[b+8>>2]=ka;c[za>>2]=wa;c[ya>>2]=-1;ya=c[ya>>2]|0;c[xa>>2]=c[za>>2];c[b+248>>2]=ya;c[c[xa>>2]>>2]=0;c[va>>2]=c[wa>>2];c[b+264>>2]=va;c[ka>>2]=0;c[ua>>2]=ra;c[ta>>2]=-1;ta=c[ta>>2]|0;c[sa>>2]=c[ua>>2];c[b+272>>2]=ta;c[c[sa>>2]>>2]=0;c[qa>>2]=c[ra>>2];c[b+288>>2]=qa;c[ka+4>>2]=0;c[pa>>2]=ma;c[oa>>2]=-1;oa=c[oa>>2]|0;c[na>>2]=c[pa>>2];c[b+296>>2]=oa;c[c[na>>2]>>2]=0;c[la>>2]=c[ma>>2];c[b+312>>2]=la;c[ja>>2]=ka+8;c[ia>>2]=0;ia=c[ia>>2]|0;c[ga>>2]=c[ja>>2];c[ha>>2]=ia;ga=c[ga>>2]|0;c[fa>>2]=ha;fa=c[c[fa>>2]>>2]|0;c[ca>>2]=ga;c[ea>>2]=fa;ca=c[ca>>2]|0;c[b+320>>2]=ca;c[da>>2]=ea;c[ca>>2]=c[c[da>>2]>>2];c[ba>>2]=a+16;c[aa>>2]=c[ba>>2];c[M>>2]=c[aa>>2];M=c[M>>2]|0;c[b+220>>2]=M;c[$>>2]=Y;c[_>>2]=-1;_=c[_>>2]|0;c[Z>>2]=c[$>>2];c[b+116>>2]=_;c[c[Z>>2]>>2]=0;c[X>>2]=c[Y>>2];c[b+132>>2]=X;c[M>>2]=0;c[W>>2]=T;c[V>>2]=-1;V=c[V>>2]|0;c[U>>2]=c[W>>2];c[b+140>>2]=V;c[c[U>>2]>>2]=0;c[S>>2]=c[T>>2];c[b+156>>2]=S;c[M+4>>2]=0;c[R>>2]=O;c[Q>>2]=-1;Q=c[Q>>2]|0;c[P>>2]=c[R>>2];c[b+376>>2]=Q;c[c[P>>2]>>2]=0;c[N>>2]=c[O>>2];c[b+408>>2]=N;c[L>>2]=M+8;c[K>>2]=0;K=c[K>>2]|0;c[I>>2]=c[L>>2];c[J>>2]=K;I=c[I>>2]|0;c[H>>2]=J;H=c[c[H>>2]>>2]|0;c[E>>2]=I;c[G>>2]=H;E=c[E>>2]|0;c[b+188>>2]=E;c[F>>2]=G;c[E>>2]=c[c[F>>2]>>2];c[D>>2]=a+28;c[C>>2]=c[D>>2];c[B>>2]=c[C>>2];a=c[B>>2]|0;c[b+88>>2]=a;c[A>>2]=x;c[z>>2]=-1;z=c[z>>2]|0;c[y>>2]=c[A>>2];c[b+396>>2]=z;c[c[y>>2]>>2]=0;c[w>>2]=c[x>>2];c[b+168>>2]=w;c[a>>2]=0;c[v>>2]=s;c[u>>2]=-1;u=c[u>>2]|0;c[t>>2]=c[v>>2];c[b+176>>2]=u;c[c[t>>2]>>2]=0;c[r>>2]=c[s>>2];c[b+28>>2]=r;c[a+4>>2]=0;c[q>>2]=n;c[p>>2]=-1;p=c[p>>2]|0;c[o>>2]=c[q>>2];c[b+36>>2]=p;c[c[o>>2]>>2]=0;c[m>>2]=c[n>>2];c[b+48>>2]=m;c[k>>2]=a+8;c[l>>2]=0;a=c[l>>2]|0;c[g>>2]=c[k>>2];c[j>>2]=a;g=c[g>>2]|0;c[h>>2]=j;a=c[c[h>>2]>>2]|0;c[f>>2]=g;c[e>>2]=a;a=c[f>>2]|0;c[b+56>>2]=a;c[d>>2]=e;c[a>>2]=c[c[d>>2]>>2];i=b;return}function ck(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;o=i;i=i+64|0;s=o+16|0;t=o+28|0;u=o+12|0;q=o+4|0;r=o+32|0;p=o;m=o+48|0;f=o+52|0;g=o+56|0;v=o+36|0;j=o+40|0;l=o+8|0;n=o+24|0;h=o+44|0;k=o+20|0;c[v>>2]=b;c[j>>2]=d;c[l>>2]=e;e=c[v>>2]|0;c[n>>2]=c[e+8>>2]&(1<<c[e>>2])-1;if(!((c[n>>2]|0)>>>0<1<<c[e+4>>2]>>>0)){i=o;return}c[h>>2]=(1<<c[e>>2])+(c[n>>2]|0);b=(c[e+12>>2]|0)+(c[h>>2]|0)|0;v=c[j>>2]|0;c[k>>2]=(1<<c[e+4>>2])-(c[n>>2]|0);c[m>>2]=l;c[f>>2]=k;d=c[m>>2]|0;e=c[f>>2]|0;a[p+0>>0]=a[g+0>>0]|0;c[q>>2]=d;c[r>>2]=e;e=c[r>>2]|0;d=c[q>>2]|0;c[s>>2]=p;c[t>>2]=e;c[u>>2]=d;By(b|0,v|0,c[((c[c[t>>2]>>2]|0)>>>0<(c[c[u>>2]>>2]|0)>>>0?c[r>>2]|0:c[q>>2]|0)>>2]|0)|0;i=o;return}function dk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;c[(c[e>>2]|0)+3362e4>>2]=c[f>>2];i=d;return}function ek(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;c[(c[e>>2]|0)+3362e4>>2]=c[f>>2];i=d;return}function fk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0;f=i;i=i+784|0;C=f+396|0;K=f+752|0;J=f+736|0;I=f+168|0;n=f+304|0;s=f+192|0;t=f+704|0;r=f+40|0;o=f+380|0;p=f+384|0;q=f+772|0;z=f+164|0;A=f+128|0;y=f+56|0;e=f+116|0;w=f+696|0;x=f+773|0;h=f+364|0;g=f+316|0;v=f+296|0;l=f+196|0;k=f+188|0;j=f+184|0;u=f+160|0;E=f+132|0;m=f+136|0;H=f+140|0;G=f+120|0;ja=f+148|0;F=f+152|0;D=f+156|0;ia=f+692|0;ha=f+580|0;fa=f+512|0;ea=f+472|0;da=f+360|0;ca=f+320|0;ba=f+312|0;aa=f+308|0;$=f+292|0;_=f+200|0;Y=f+204|0;X=f+208|0;W=f+212|0;Z=f+216|0;V=f+220|0;U=f+32|0;T=f+228|0;S=f;P=f+236|0;Q=f+240|0;R=f+244|0;N=f+248|0;O=f+252|0;wa=f+256|0;oa=f+144|0;na=f+264|0;Ja=f+268|0;Ma=f+272|0;Ra=f+276|0;Qa=f+280|0;L=f+284|0;Ba=f+288|0;Ca=f+688|0;Aa=f+48|0;xa=f+576|0;la=f+572|0;za=f+774|0;Ia=f+496|0;ka=f+468|0;Ha=f+112|0;Ea=f+356|0;Fa=f+324|0;Ga=f+775|0;ta=f+340|0;ua=f+344|0;va=f+348|0;qa=f+352|0;ra=f+716|0;sa=f+724|0;Da=f+732|0;La=f+740|0;pa=f+748|0;Pa=f+756|0;Oa=f+764|0;Hb=f+388|0;Na=f+392|0;Ka=f+768|0;Gb=f+400|0;Fb=f+404|0;Sa=f+408|0;jb=f+412|0;hb=f+416|0;gb=f+224|0;fb=f+420|0;ib=f+424|0;lb=f+428|0;ob=f+232|0;nb=f+720|0;mb=f+440|0;pb=f+444|0;yb=f+448|0;Eb=f+452|0;Db=f+456|0;Bb=f+460|0;Cb=f+464|0;Ab=f+64|0;xb=f+476|0;vb=f+480|0;wb=f+484|0;zb=f+488|0;ub=f+72|0;sb=f+260|0;tb=f+500|0;rb=f+96|0;eb=f+528|0;db=f+532|0;qb=f+536|0;cb=f+16|0;bb=f+544|0;ab=f+8|0;_a=f+548|0;$a=f+552|0;Ya=f+556|0;Za=f+560|0;Wa=f+564|0;Ta=f+568|0;Mb=f+684|0;Lb=f+628|0;Kb=f+620|0;Jb=f+616|0;Ib=f+584|0;Ob=f+588|0;Nb=f+592|0;Pb=f+596|0;Qb=f+600|0;Rb=f+604|0;Sb=f+608|0;Vb=f+612|0;Ub=f+104|0;Xb=f+624|0;Wb=f+24|0;bc=f+432|0;Zb=f+632|0;_b=f+636|0;$b=f+640|0;ac=f+644|0;ec=f+648|0;fc=f+652|0;gc=f+656|0;hc=f+660|0;dc=f+664|0;ic=f+668|0;cc=f+672|0;jc=f+676|0;Yb=f+680|0;lc=f+300|0;kc=f+88|0;nc=f+368|0;mc=f+80|0;qc=f+700|0;pc=f+436|0;oc=f+712|0;B=f+708|0;rc=f+124|0;Va=f+372|0;kb=f+728|0;Tb=f+376|0;ma=f+172|0;Xa=f+760|0;Ua=f+328|0;M=f+504|0;ya=f+520|0;ga=f+744|0;c[rc>>2]=b;c[Va>>2]=d;b=c[rc>>2]|0;d=c[Va>>2]|0;c[qc>>2]=b;c[pc>>2]=d;qk(oc,c[qc>>2]|0,c[pc>>2]|0);a[mc+0>>0]=a[oc+0>>0]|0;a[mc+1>>0]=a[oc+1>>0]|0;a[mc+2>>0]=a[oc+2>>0]|0;a[mc+3>>0]=a[oc+3>>0]|0;c[nc>>2]=kb;d=c[nc>>2]|0;a[kc+0>>0]=a[mc+0>>0]|0;a[kc+1>>0]=a[mc+1>>0]|0;a[kc+2>>0]=a[mc+2>>0]|0;a[kc+3>>0]=a[mc+3>>0]|0;c[lc>>2]=d;d=c[lc>>2]|0;c[d+0>>2]=c[kc+0>>2];c[jc>>2]=b;c[ic>>2]=c[jc>>2];c[gc>>2]=dc;c[hc>>2]=-1;d=c[hc>>2]|0;c[ec>>2]=c[gc>>2];c[fc>>2]=d;c[c[ec>>2]>>2]=0;c[cc>>2]=c[dc>>2];c[bc>>2]=cc;c[$b>>2]=Yb;c[ac>>2]=0;d=c[ac>>2]|0;c[Zb>>2]=c[$b>>2];c[_b>>2]=d;c[c[Zb>>2]>>2]=c[_b>>2];a[Wb+0>>0]=a[Yb+0>>0]|0;a[Wb+1>>0]=a[Yb+1>>0]|0;a[Wb+2>>0]=a[Yb+2>>0]|0;a[Wb+3>>0]=a[Yb+3>>0]|0;c[Xb>>2]=Tb;d=c[Xb>>2]|0;a[Ub+0>>0]=a[Wb+0>>0]|0;a[Ub+1>>0]=a[Wb+1>>0]|0;a[Ub+2>>0]=a[Wb+2>>0]|0;a[Ub+3>>0]=a[Wb+3>>0]|0;c[Vb>>2]=d;d=c[Vb>>2]|0;c[d+0>>2]=c[Ub+0>>2];c[Rb>>2]=kb;c[Sb>>2]=Tb;d=c[Sb>>2]|0;c[Pb>>2]=c[Rb>>2];c[Qb>>2]=d;d=c[Qb>>2]|0;c[Ob>>2]=c[Pb>>2];c[Nb>>2]=d;if((c[c[Ob>>2]>>2]|0)==(c[c[Nb>>2]>>2]|0)^1){c[Ib>>2]=kb;c[Jb>>2]=c[Ib>>2];c[Kb>>2]=(c[c[Jb>>2]>>2]|0)+8;c[Lb>>2]=c[Kb>>2];c[Mb>>2]=c[Lb>>2];c[Ta>>2]=c[Mb>>2];c[B>>2]=(c[Ta>>2]|0)+12;rc=c[B>>2]|0;i=f;return rc|0}mk(Ua,b,c[Va>>2]|0);c[Wa>>2]=Ua;rc=c[Wa>>2]|0;c[Ya>>2]=Xa;c[Za>>2]=rc;rc=c[Za>>2]|0;c[_a>>2]=c[Ya>>2];c[$a>>2]=rc;c[c[_a>>2]>>2]=c[$a>>2];a[ab+0>>0]=a[Xa+0>>0]|0;a[ab+1>>0]=a[Xa+1>>0]|0;a[ab+2>>0]=a[Xa+2>>0]|0;a[ab+3>>0]=a[Xa+3>>0]|0;c[bb>>2]=ma;rc=c[bb>>2]|0;a[cb+0>>0]=a[ab+0>>0]|0;a[cb+1>>0]=a[ab+1>>0]|0;a[cb+2>>0]=a[ab+2>>0]|0;a[cb+3>>0]=a[ab+3>>0]|0;c[db>>2]=rc;rc=c[db>>2]|0;c[eb>>2]=cb;c[fb>>2]=c[c[eb>>2]>>2];qc=c[fb>>2]|0;c[gb>>2]=qc;c[hb>>2]=c[gb>>2];c[ib>>2]=c[c[hb>>2]>>2];c[jb>>2]=qc;c[Sa>>2]=c[jb>>2];c[c[Sa>>2]>>2]=0;Sa=c[ib>>2]|0;c[lb>>2]=cb;c[mb>>2]=c[c[lb>>2]>>2];c[nb>>2]=c[mb>>2];c[ob>>2]=c[nb>>2];c[pb>>2]=(c[ob>>2]|0)+4;qc=c[pb>>2]|0;c[qb+0>>2]=c[qc+0>>2];c[qb+4>>2]=c[qc+4>>2];a[rb+0>>0]=a[qb+0>>0]|0;a[rb+1>>0]=a[qb+1>>0]|0;a[rb+2>>0]=a[qb+2>>0]|0;a[rb+3>>0]=a[qb+3>>0]|0;a[rb+4>>0]=a[qb+4>>0]|0;a[rb+5>>0]=a[qb+5>>0]|0;a[rb+6>>0]=a[qb+6>>0]|0;a[rb+7>>0]=a[qb+7>>0]|0;c[sb>>2]=rc;c[tb>>2]=Sa;Sa=c[sb>>2]|0;rc=c[tb>>2]|0;a[ub+0>>0]=a[rb+0>>0]|0;a[ub+1>>0]=a[rb+1>>0]|0;a[ub+2>>0]=a[rb+2>>0]|0;a[ub+3>>0]=a[rb+3>>0]|0;a[ub+4>>0]=a[rb+4>>0]|0;a[ub+5>>0]=a[rb+5>>0]|0;a[ub+6>>0]=a[rb+6>>0]|0;a[ub+7>>0]=a[rb+7>>0]|0;c[vb>>2]=Sa;c[wb>>2]=rc;rc=c[vb>>2]|0;c[xb>>2]=wb;Sa=c[c[xb>>2]>>2]|0;c[yb>>2]=ub;qc=c[yb>>2]|0;c[zb+0>>2]=c[qc+0>>2];c[zb+4>>2]=c[qc+4>>2];a[Ab+0>>0]=a[zb+0>>0]|0;a[Ab+1>>0]=a[zb+1>>0]|0;a[Ab+2>>0]=a[zb+2>>0]|0;a[Ab+3>>0]=a[zb+3>>0]|0;a[Ab+4>>0]=a[zb+4>>0]|0;a[Ab+5>>0]=a[zb+5>>0]|0;a[Ab+6>>0]=a[zb+6>>0]|0;a[Ab+7>>0]=a[zb+7>>0]|0;c[Bb>>2]=rc;c[Cb>>2]=Sa;Sa=c[Bb>>2]|0;c[Db>>2]=Cb;c[Sa>>2]=c[c[Db>>2]>>2];Sa=Sa+4|0;c[Eb>>2]=Ab;rc=c[Eb>>2]|0;c[Sa+0>>2]=c[rc+0>>2];c[Sa+4>>2]=c[rc+4>>2];c[Fb>>2]=Ua;c[Gb>>2]=c[Fb>>2];c[Hb>>2]=c[Gb>>2];c[Na>>2]=0;Sa=c[Hb>>2]|0;c[Oa>>2]=Sa;c[Pa>>2]=c[Oa>>2];c[Ka>>2]=c[c[Pa>>2]>>2];rc=c[Na>>2]|0;c[Qa>>2]=Sa;c[Ra>>2]=c[Qa>>2];c[c[Ra>>2]>>2]=rc;if((c[Ka>>2]|0)!=0){c[Ma>>2]=Sa;c[Ja>>2]=c[Ma>>2];rc=c[Ka>>2]|0;c[La>>2]=(c[Ja>>2]|0)+4;c[pa>>2]=rc;Ja=c[La>>2]|0;if(a[Ja+5>>0]&1){rc=c[Ja>>2]|0;c[Da>>2]=(c[pa>>2]|0)+20;qc=c[Da>>2]|0;c[Ea>>2]=rc;c[Fa>>2]=qc;qc=c[Ea>>2]|0;rc=c[Fa>>2]|0;a[Ha+0>>0]=a[Ga+0>>0]|0;c[Ia>>2]=qc;c[ka>>2]=rc}if(a[Ja+4>>0]&1){rc=c[Ja>>2]|0;c[L>>2]=(c[pa>>2]|0)+8;qc=c[L>>2]|0;c[xa>>2]=rc;c[la>>2]=qc;qc=c[xa>>2]|0;rc=c[la>>2]|0;a[Aa+0>>0]=a[za+0>>0]|0;c[Ba>>2]=qc;c[Ca>>2]=rc;Tm(c[Ca>>2]|0)}if((c[pa>>2]|0)!=0){qc=c[pa>>2]|0;c[qa>>2]=c[Ja>>2];c[ra>>2]=qc;c[sa>>2]=1;qc=c[ra>>2]|0;rc=c[sa>>2]|0;c[ta>>2]=c[qa>>2];c[ua>>2]=qc;c[va>>2]=rc;Sw(c[ua>>2]|0)}}c[na>>2]=ma;c[oa>>2]=c[na>>2];c[wa>>2]=c[oa>>2];nk(ya,b,c[c[wa>>2]>>2]|0);c[N>>2]=M;c[O>>2]=ya;L=c[O>>2]|0;c[P>>2]=c[N>>2];c[Q>>2]=L;L=c[P>>2]|0;rc=c[Q>>2]|0;c[R+0>>2]=c[rc+0>>2];a[S+0>>0]=a[R+0>>0]|0;a[S+1>>0]=a[R+1>>0]|0;a[S+2>>0]=a[R+2>>0]|0;a[S+3>>0]=a[R+3>>0]|0;c[T>>2]=L;rc=c[T>>2]|0;a[U+0>>0]=a[S+0>>0]|0;a[U+1>>0]=a[S+1>>0]|0;a[U+2>>0]=a[S+2>>0]|0;a[U+3>>0]=a[S+3>>0]|0;c[V>>2]=rc;rc=c[V>>2]|0;c[rc+0>>2]=c[U+0>>2];a[L+4>>0]=a[(c[Q>>2]|0)+4>>0]&1;c[W>>2]=ma;L=c[W>>2]|0;c[X>>2]=L;c[Y>>2]=c[X>>2];c[Z>>2]=c[c[Y>>2]>>2];c[_>>2]=L;c[$>>2]=c[_>>2];c[c[$>>2]>>2]=0;c[aa>>2]=M;c[ba>>2]=c[aa>>2];c[ca>>2]=(c[c[ba>>2]>>2]|0)+8;c[da>>2]=c[ca>>2];c[ea>>2]=c[da>>2];c[fa>>2]=c[ea>>2];c[B>>2]=(c[fa>>2]|0)+12;c[ga>>2]=1;c[ha>>2]=ma;c[ia>>2]=c[ha>>2];c[ja>>2]=c[ia>>2];c[F>>2]=0;L=c[ja>>2]|0;c[G>>2]=L;c[H>>2]=c[G>>2];c[D>>2]=c[c[H>>2]>>2];rc=c[F>>2]|0;c[I>>2]=L;c[J>>2]=c[I>>2];c[c[J>>2]>>2]=rc;if((c[D>>2]|0)==0){rc=c[B>>2]|0;i=f;return rc|0}c[K>>2]=L;c[C>>2]=c[K>>2];rc=c[D>>2]|0;c[E>>2]=(c[C>>2]|0)+4;c[m>>2]=rc;C=c[E>>2]|0;if(a[C+5>>0]&1){rc=c[C>>2]|0;c[u>>2]=(c[m>>2]|0)+20;qc=c[u>>2]|0;c[e>>2]=rc;c[w>>2]=qc;qc=c[e>>2]|0;rc=c[w>>2]|0;a[y+0>>0]=a[x+0>>0]|0;c[z>>2]=qc;c[A>>2]=rc}if(a[C+4>>0]&1){rc=c[C>>2]|0;c[n>>2]=(c[m>>2]|0)+8;qc=c[n>>2]|0;c[o>>2]=rc;c[p>>2]=qc;qc=c[o>>2]|0;rc=c[p>>2]|0;a[r+0>>0]=a[q+0>>0]|0;c[s>>2]=qc;c[t>>2]=rc;Tm(c[t>>2]|0)}if((c[m>>2]|0)==0){rc=c[B>>2]|0;i=f;return rc|0}qc=c[m>>2]|0;c[l>>2]=c[C>>2];c[k>>2]=qc;c[j>>2]=1;qc=c[k>>2]|0;rc=c[j>>2]|0;c[h>>2]=c[l>>2];c[g>>2]=qc;c[v>>2]=rc;Sw(c[g>>2]|0);rc=c[B>>2]|0;i=f;return rc|0}



function gc(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+15&-16;return b|0}function hc(){return i|0}function ic(a){a=a|0;i=a}function jc(a,b){a=a|0;b=b|0;if((s|0)==0){s=a;t=b}}function kc(b){b=b|0;a[k>>0]=a[b>>0];a[k+1>>0]=a[b+1>>0];a[k+2>>0]=a[b+2>>0];a[k+3>>0]=a[b+3>>0]}function lc(b){b=b|0;a[k>>0]=a[b>>0];a[k+1>>0]=a[b+1>>0];a[k+2>>0]=a[b+2>>0];a[k+3>>0]=a[b+3>>0];a[k+4>>0]=a[b+4>>0];a[k+5>>0]=a[b+5>>0];a[k+6>>0]=a[b+6>>0];a[k+7>>0]=a[b+7>>0]}function mc(a){a=a|0;H=a}function nc(){return H|0}function oc(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+48|0;k=g+28|0;h=g+16|0;q=g+4|0;o=g+8|0;n=g+32|0;j=g;m=g+12|0;p=g+24|0;l=g+20|0;c[q>>2]=a;c[o>>2]=b;c[n>>2]=d;c[j>>2]=e;c[m>>2]=f;pc(p);c[p>>2]=c[q>>2];c[l+0>>2]=c[p+0>>2];d=c[o>>2]|0;b=c[n>>2]|0;a=c[m>>2]|0;c[k+0>>2]=c[l+0>>2];if((Bi(k,d,b,j,a)|0)!=0){c[h>>2]=c[j>>2];q=c[h>>2]|0;i=g;return q|0}else{c[h>>2]=-1;q=c[h>>2]|0;i=g;return q|0}return 0}function pc(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;qc(c[d>>2]|0);i=b;return}function qc(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;c[c[d>>2]>>2]=0;i=b;return}function rc(a,b,d,e,f,g,h,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;w=i;i=i+64|0;x=w+52|0;y=w+44|0;z=w+20|0;n=w+12|0;o=w+4|0;p=w+40|0;m=w+48|0;v=w+56|0;u=w+16|0;t=w+24|0;l=w;r=w+32|0;q=w+28|0;A=w+8|0;s=w+36|0;c[m>>2]=a;c[v>>2]=b;c[u>>2]=d;c[t>>2]=e;c[l>>2]=f;c[r>>2]=g;c[q>>2]=h;c[A>>2]=j;c[s>>2]=k;k=c[A>>2]|0;if((k|0)==0){f=c[m>>2]|0;e=c[v>>2]|0;d=c[u>>2]|0;b=c[t>>2]|0;a=c[l>>2]|0;A=c[r>>2]|0;c[p>>2]=c[q>>2];c[o>>2]=c[p>>2];c[n>>2]=c[o>>2];sc(f,e,d,b,a,A,c[c[n>>2]>>2]|0,c[s>>2]|0);i=w;return}else if((k|0)==1){f=c[m>>2]|0;e=c[v>>2]|0;d=c[u>>2]|0;b=c[t>>2]|0;a=c[l>>2]|0;A=c[r>>2]|0;c[z>>2]=(c[q>>2]|0)+4;c[y>>2]=c[z>>2];c[x>>2]=c[y>>2];tc(f,e,d,b,a,A,c[c[x>>2]>>2]|0,c[s>>2]|0);i=w;return}else{i=w;return}}function sc(b,d,e,f,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0;n=i;i=i+768|0;Tb=n+448|0;Ub=n+700|0;Vb=n+676|0;Rb=n+300|0;Sb=n+692|0;Qb=n+72|0;Nb=n+176|0;Ob=n+128|0;Pb=n+754|0;Ib=n+172|0;Jb=n+188|0;Kb=n+168|0;Gb=n+132|0;Hb=n+124|0;Fb=n+16|0;Cb=n+608|0;Db=n+508|0;Eb=n+757|0;xb=n+312|0;yb=n+292|0;zb=n+192|0;Ab=n+184|0;wb=n+180|0;vb=n+164|0;ub=n+136|0;tb=n+140|0;sb=n+144|0;rb=n+148|0;pb=n+152|0;qb=n+120|0;kc=n+160|0;lc=n+604|0;mc=n+552|0;ic=n+504|0;jc=n+416|0;hc=n+88|0;ec=n+316|0;fc=n+308|0;gc=n+758|0;na=n+288|0;oa=n+196|0;pa=n+200|0;la=n+204|0;ma=n+208|0;ka=n;ha=n+216|0;ia=n+220|0;ja=n+755|0;kb=n+228|0;jb=n+232|0;ib=n+236|0;hb=n+240|0;za=n+244|0;Aa=n+248|0;Ba=n+252|0;xa=n+256|0;ya=n+260|0;wa=n+96|0;ta=n+268|0;ua=n+156|0;va=n+761|0;gb=n+280|0;fb=n+8|0;eb=n+600|0;cb=n+104|0;ab=n+548|0;bb=n+544|0;_a=n+500|0;$a=n+472|0;Xa=n+412|0;Ya=n+664|0;z=n+672|0;Va=n+680|0;Za=n+688|0;Ua=n+696|0;Ta=n+340|0;Sa=n+344|0;Ra=n+348|0;Qa=n+352|0;Pa=n+40|0;Oa=n+356|0;Ma=n+32|0;Ka=n+360|0;La=n+364|0;Ia=n+368|0;Ja=n+372|0;Fa=n+376|0;Ga=n+380|0;Ea=n+384|0;Da=n+212|0;Ha=n+400|0;s=n+404|0;v=n+408|0;u=n+704|0;o=n+420|0;r=n+744|0;q=n+424|0;p=n+428|0;y=n+432|0;x=n+436|0;w=n+440|0;A=n+444|0;t=n+748|0;Y=n+452|0;Z=n+456|0;_=n+460|0;W=n+464|0;X=n+468|0;V=n+56|0;R=n+476|0;T=n+480|0;U=n+760|0;nc=n+488|0;oc=n+492|0;I=n+496|0;aa=n+264|0;ba=n+512|0;S=n+516|0;H=n+520|0;Wa=n+272|0;D=n+524|0;F=n+528|0;J=n+532|0;E=n+536|0;K=n+284|0;$b=n+24|0;pc=n+596|0;G=n+753|0;lb=n+556|0;mb=n+560|0;nb=n+564|0;L=n+48|0;N=n+568|0;O=n+572|0;P=n+576|0;M=n+112|0;$=n+584|0;Q=n+588|0;ca=n+759|0;da=n+756|0;ea=n+752|0;Na=n+656|0;db=n+392|0;Yb=n+648|0;ac=n+612|0;bc=n+320|0;cc=n+668|0;Wb=n+80|0;dc=n+336|0;Xb=n+64|0;_b=n+332|0;Zb=n+684|0;ob=n+712|0;Bb=n+328|0;Lb=n+296|0;Mb=n+592|0;qa=n+580|0;fa=n+484|0;ga=n+276|0;Ca=n+224|0;ra=n+304|0;sa=n+324|0;C=n+616|0;c[nc>>2]=b;c[oc>>2]=d;c[I>>2]=e;c[aa>>2]=f;c[ba>>2]=j;c[S>>2]=k;c[H>>2]=l;c[Wa>>2]=m;c[D>>2]=0;c[F>>2]=c[oc>>2]&c[ba>>2];c[J>>2]=(c[oc>>2]|0)-(c[F>>2]|0);c[E>>2]=(c[F>>2]|0)+(c[nc>>2]|0);c[n+540>>2]=512;c[K>>2]=(c[F>>2]|0)+512;h[$b>>3]=0.0;c[pc>>2]=c[oc>>2];while(1){if(!((c[pc>>2]|0)>>>0<((c[oc>>2]|0)+(c[nc>>2]|0)|0)>>>0))break;h[$b>>3]=+h[$b>>3]+ +g[(c[aa>>2]|0)+((c[pc>>2]&c[ba>>2])<<2)>>2];c[pc>>2]=(c[pc>>2]|0)+1}h[$b>>3]=+h[$b>>3]/+((c[nc>>2]|0)>>>0);Wc(c[H>>2]|0,+h[$b>>3]);a[G>>0]=0;c[lb>>2]=0;c[mb>>2]=0;c[nb>>2]=0;h[L>>3]=0.0;a:while(1){if(!(((c[F>>2]|0)+2|0)>>>0<(c[E>>2]|0)>>>0))break;c[N>>2]=0;c[O>>2]=0;c[P>>2]=0;h[M>>3]=0.0;c[Q>>2]=(c[F>>2]|0)+(c[J>>2]|0);c[R>>2]=Q;c[T>>2]=S;b=c[R>>2]|0;d=c[T>>2]|0;a[V+0>>0]=a[U+0>>0]|0;c[W>>2]=b;c[X>>2]=d;d=c[X>>2]|0;b=c[W>>2]|0;c[Y>>2]=V;c[Z>>2]=d;c[_>>2]=b;c[$>>2]=c[((c[c[Z>>2]>>2]|0)>>>0<(c[c[_>>2]>>2]|0)>>>0?c[X>>2]|0:c[W>>2]|0)>>2];Xc(c[H>>2]|0,c[D>>2]|0);a[da>>0]=(Yc(c[H>>2]|0,c[I>>2]|0,c[aa>>2]|0,c[ba>>2]|0,(c[F>>2]|0)+(c[J>>2]|0)|0,(c[E>>2]|0)-(c[F>>2]|0)|0,c[$>>2]|0,N,O,P,M,ca)|0)&1;a[ea>>0]=a[ca>>0]&1;if(!(a[da>>0]&1)){a[G>>0]=0;c[D>>2]=(c[D>>2]|0)+1;Zc(c[H>>2]|0,(c[I>>2]|0)+(c[F>>2]|0)|0,(c[F>>2]|0)+(c[J>>2]|0)|0);c[F>>2]=(c[F>>2]|0)+1;if(!((c[F>>2]|0)>>>0>(c[K>>2]|0)>>>0))continue;e=c[F>>2]|0;if((c[F>>2]|0)>>>0>((c[K>>2]|0)+2048|0)>>>0){c[fa>>2]=e+16;c[ga>>2]=(c[E>>2]|0)-4;c[ha>>2]=fa;c[ia>>2]=ga;b=c[ha>>2]|0;d=c[ia>>2]|0;a[ka+0>>0]=a[ja+0>>0]|0;c[la>>2]=b;c[ma>>2]=d;d=c[ma>>2]|0;b=c[la>>2]|0;c[na>>2]=ka;c[oa>>2]=d;c[pa>>2]=b;c[qa>>2]=c[((c[c[oa>>2]>>2]|0)>>>0<(c[c[pa>>2]>>2]|0)>>>0?c[ma>>2]|0:c[la>>2]|0)>>2];while(1){if(!((c[F>>2]|0)>>>0<(c[qa>>2]|0)>>>0))continue a;Zc(c[H>>2]|0,(c[I>>2]|0)+(c[F>>2]|0)|0,(c[F>>2]|0)+(c[J>>2]|0)|0);c[D>>2]=(c[D>>2]|0)+4;c[F>>2]=(c[F>>2]|0)+4}}else{c[ra>>2]=e+8;c[sa>>2]=(c[E>>2]|0)-2;c[ta>>2]=ra;c[ua>>2]=sa;b=c[ta>>2]|0;d=c[ua>>2]|0;a[wa+0>>0]=a[va+0>>0]|0;c[xa>>2]=b;c[ya>>2]=d;d=c[ya>>2]|0;b=c[xa>>2]|0;c[za>>2]=wa;c[Aa>>2]=d;c[Ba>>2]=b;c[Ca>>2]=c[((c[c[Aa>>2]>>2]|0)>>>0<(c[c[Ba>>2]>>2]|0)>>>0?c[ya>>2]|0:c[xa>>2]|0)>>2];while(1){if(!((c[F>>2]|0)>>>0<(c[Ca>>2]|0)>>>0))continue a;Zc(c[H>>2]|0,(c[I>>2]|0)+(c[F>>2]|0)|0,(c[F>>2]|0)+(c[J>>2]|0)|0);c[D>>2]=(c[D>>2]|0)+2;c[F>>2]=(c[F>>2]|0)+2}}}if(a[G>>0]&1?+h[L>>3]>+h[M>>3]:0){c[Da>>2]=c[Wa>>2];c[Ea>>2]=c[Da>>2];b=c[Ea>>2]|0;d=c[b+4>>2]|0;c[Fa>>2]=b;c[Ga>>2]=d;d=c[Ga>>2]|0;c[Ia>>2]=Ha;c[Ja>>2]=d;d=c[Ja>>2]|0;c[Ka>>2]=c[Ia>>2];c[La>>2]=d;c[c[Ka>>2]>>2]=c[La>>2];a[Ma+0>>0]=a[Ha+0>>0]|0;a[Ma+1>>0]=a[Ha+1>>0]|0;a[Ma+2>>0]=a[Ha+2>>0]|0;a[Ma+3>>0]=a[Ha+3>>0]|0;c[Oa>>2]=Na;d=c[Oa>>2]|0;a[Pa+0>>0]=a[Ma+0>>0]|0;a[Pa+1>>0]=a[Ma+1>>0]|0;a[Pa+2>>0]=a[Ma+2>>0]|0;a[Pa+3>>0]=a[Ma+3>>0]|0;c[Qa>>2]=d;d=c[Qa>>2]|0;c[d+0>>2]=c[Pa+0>>2];d=d+4|0;c[d+0>>2]=c[Pa+0>>2];c[Ra>>2]=Na;c[Sa>>2]=c[Ra>>2];d=c[Sa>>2]|0;b=d+4|0;c[d+0>>2]=c[b+0>>2];c[Ta>>2]=d;d=c[Ta>>2]|0;c[d>>2]=(c[d>>2]|0)+ -32;c[Ua>>2]=d;d=(c[c[Ua>>2]>>2]|0)+4|0;c[d>>2]=(c[d>>2]|0)-1;c[Va>>2]=c[Wa>>2];c[z>>2]=c[Va>>2];d=c[z>>2]|0;b=c[d+4>>2]|0;c[Xa>>2]=d;c[Ya>>2]=b;b=c[Ya>>2]|0;c[_a>>2]=Za;c[$a>>2]=b;b=c[$a>>2]|0;c[ab>>2]=c[_a>>2];c[bb>>2]=b;c[c[ab>>2]>>2]=c[bb>>2];a[cb+0>>0]=a[Za+0>>0]|0;a[cb+1>>0]=a[Za+1>>0]|0;a[cb+2>>0]=a[Za+2>>0]|0;a[cb+3>>0]=a[Za+3>>0]|0;c[eb>>2]=db;b=c[eb>>2]|0;a[fb+0>>0]=a[cb+0>>0]|0;a[fb+1>>0]=a[cb+1>>0]|0;a[fb+2>>0]=a[cb+2>>0]|0;a[fb+3>>0]=a[cb+3>>0]|0;c[gb>>2]=b;b=c[gb>>2]|0;c[b+0>>2]=c[fb+0>>2];b=b+4|0;c[b+0>>2]=c[fb+0>>2];c[hb>>2]=db;c[ib>>2]=c[hb>>2];b=c[ib>>2]|0;d=b+4|0;c[b+0>>2]=c[d+0>>2];c[jb>>2]=b;b=c[jb>>2]|0;c[b>>2]=(c[b>>2]|0)+ -32;c[kb>>2]=b;b=(c[c[kb>>2]>>2]|0)+8|0;c[b>>2]=(c[b>>2]|0)-1;Zc(c[H>>2]|0,(c[I>>2]|0)+(c[F>>2]|0)|0,(c[F>>2]|0)+(c[J>>2]|0)|0);c[F>>2]=(c[F>>2]|0)+ -1;c[N>>2]=c[lb>>2];c[O>>2]=c[mb>>2];c[P>>2]=c[nb>>2];h[M>>3]=+h[L>>3];a[ea>>0]=1;a[ca>>0]=1}else B=10;b:do if((B|0)==10){B=0;c[Yb>>2]=0;while(1){if(!(((c[F>>2]|0)+4|0)>>>0<(c[E>>2]|0)>>>0))break b;if((c[Yb>>2]|0)>=4)break b;c[ac>>2]=0;c[bc>>2]=0;c[cc>>2]=0;h[Wb>>3]=0.0;c[dc>>2]=(c[F>>2]|0)+(c[J>>2]|0)+1;c[ec>>2]=dc;c[fc>>2]=S;b=c[ec>>2]|0;d=c[fc>>2]|0;a[hc+0>>0]=a[gc+0>>0]|0;c[ic>>2]=b;c[jc>>2]=d;d=c[jc>>2]|0;b=c[ic>>2]|0;c[kc>>2]=hc;c[lc>>2]=d;c[mc>>2]=b;c[$>>2]=c[((c[c[lc>>2]>>2]|0)>>>0<(c[c[mc>>2]>>2]|0)>>>0?c[jc>>2]|0:c[ic>>2]|0)>>2];Zc(c[H>>2]|0,(c[I>>2]|0)+(c[F>>2]|0)|0,(c[F>>2]|0)+(c[J>>2]|0)|0);a[da>>0]=(Yc(c[H>>2]|0,c[I>>2]|0,c[aa>>2]|0,c[ba>>2]|0,(c[F>>2]|0)+(c[J>>2]|0)+1|0,(c[E>>2]|0)-(c[F>>2]|0)-1|0,c[$>>2]|0,ac,bc,cc,Wb,ca)|0)&1;h[Xb>>3]=0.0;if((c[N>>2]|0)>>>0>=4)h[Xb>>3]=+h[Xb>>3]+(+g[(c[aa>>2]|0)+(((c[F>>2]|0)+4&c[ba>>2])<<2)>>2]- +h[$b>>3]);c[_b>>2]=(c[ac>>2]|0)-(c[N>>2]|0)+1;c[Zb>>2]=0;while(1){if((c[Zb>>2]|0)>=(c[_b>>2]|0))break;h[Xb>>3]=+h[Xb>>3]-(+g[(c[aa>>2]|0)+(((c[F>>2]|0)+(c[N>>2]|0)+(c[Zb>>2]|0)&c[ba>>2])<<2)>>2]- +h[$b>>3]);c[Zb>>2]=(c[Zb>>2]|0)+1}if((c[D>>2]|0)<1)h[Xb>>3]=+h[Xb>>3]+.97;h[Xb>>3]=+h[Xb>>3]+(+(c[Yb>>2]|0)*.2+2.0);h[Xb>>3]=+h[Xb>>3]+ +g[(c[aa>>2]|0)+((c[F>>2]&c[ba>>2])<<2)>>2]*.04;if(!(a[da>>0]&1))break b;if(!(+h[Wb>>3]>=+h[M>>3]+ +h[Xb>>3]))break b;c[D>>2]=(c[D>>2]|0)+1;c[Yb>>2]=(c[Yb>>2]|0)+1;c[N>>2]=c[ac>>2];c[O>>2]=c[bc>>2];c[P>>2]=c[cc>>2];h[M>>3]=+h[Wb>>3];a[ea>>0]=a[ca>>0]&1;c[F>>2]=(c[F>>2]|0)+1}}while(0);c[K>>2]=(c[F>>2]|0)+(c[N>>2]<<1)+512;yc(ob);c[ob>>2]=c[D>>2];c[ob+4>>2]=c[N>>2];c[ob+8>>2]=c[O>>2];c[ob+12>>2]=c[P>>2];c[pb>>2]=c[Wa>>2];c[qb>>2]=ob;e=c[pb>>2]|0;b=c[e+4>>2]|0;c[rb>>2]=e;c[sb>>2]=(c[rb>>2]|0)+8;c[tb>>2]=c[sb>>2];if((b|0)!=(c[c[tb>>2]>>2]|0)){c[ub>>2]=e;c[vb>>2]=(c[ub>>2]|0)+8;c[wb>>2]=c[vb>>2];d=c[wb>>2]|0;c[xb>>2]=c[e+4>>2];b=c[xb>>2]|0;nc=c[qb>>2]|0;c[yb>>2]=d;c[zb>>2]=b;c[Ab>>2]=nc;nc=c[zb>>2]|0;if((nc|0)!=0){b=c[Ab>>2]|0;c[nc+0>>2]=c[b+0>>2];c[nc+4>>2]=c[b+4>>2];c[nc+8>>2]=c[b+8>>2];c[nc+12>>2]=c[b+12>>2];c[nc+16>>2]=c[b+16>>2];c[nc+20>>2]=c[b+20>>2];c[nc+24>>2]=c[b+24>>2];c[nc+28>>2]=c[b+28>>2]}b=e+4|0;c[b>>2]=(c[b>>2]|0)+32}else Bc(e,c[qb>>2]|0);c[D>>2]=0;c[F>>2]=(c[F>>2]|0)+1;b=c[P>>2]|0;c[Bb>>2]=(c[F>>2]|0)+(c[J>>2]|0);c[Cb>>2]=Bb;c[Db>>2]=S;d=c[Cb>>2]|0;pc=c[Db>>2]|0;a[Fb+0>>0]=a[Eb+0>>0]|0;c[Gb>>2]=d;c[Hb>>2]=pc;pc=c[Hb>>2]|0;d=c[Gb>>2]|0;c[Ib>>2]=Fb;c[Jb>>2]=pc;c[Kb>>2]=d;if(b>>>0<=(c[((c[c[Jb>>2]>>2]|0)>>>0<(c[c[Kb>>2]>>2]|0)>>>0?c[Hb>>2]|0:c[Gb>>2]|0)>>2]|0)>>>0)_c(c[H>>2]|0,c[P>>2]|0);c[Lb>>2]=1;while(1){if(!((c[Lb>>2]|0)>>>0<((c[N>>2]|0)-1|0)>>>0))break;if(((c[F>>2]|0)+2|0)>>>0<(c[E>>2]|0)>>>0)Zc(c[H>>2]|0,(c[I>>2]|0)+(c[F>>2]|0)|0,(c[F>>2]|0)+(c[J>>2]|0)|0);c[F>>2]=(c[F>>2]|0)+1;c[Lb>>2]=(c[Lb>>2]|0)+1}if((($c(c[H>>2]|0)|0?(c[N>>2]|0)>>>0>=4:0)?((c[F>>2]|0)+20|0)>>>0<(c[E>>2]|0)>>>0:0)?!(a[ea>>0]&1):0){c[Mb>>2]=(c[F>>2]|0)+(c[J>>2]|0);c[Nb>>2]=Mb;c[Ob>>2]=S;b=c[Nb>>2]|0;d=c[Ob>>2]|0;a[Qb+0>>0]=a[Pb+0>>0]|0;c[Rb>>2]=b;c[Sb>>2]=d;d=c[Sb>>2]|0;b=c[Rb>>2]|0;c[Tb>>2]=Qb;c[Ub>>2]=d;c[Vb>>2]=b;c[$>>2]=c[((c[c[Ub>>2]>>2]|0)>>>0<(c[c[Vb>>2]>>2]|0)>>>0?c[Sb>>2]|0:c[Rb>>2]|0)>>2];a[G>>0]=(Yc(c[H>>2]|0,c[I>>2]|0,c[aa>>2]|0,c[ba>>2]|0,(c[F>>2]|0)+(c[J>>2]|0)|0,(c[E>>2]|0)-(c[F>>2]|0)|0,c[$>>2]|0,lb,mb,nb,L,ca)|0)&1}else{a[G>>0]=0;a[ca>>0]=0}h[L>>3]=+h[L>>3]- +g[(c[aa>>2]|0)+((c[F>>2]&c[ba>>2])<<2)>>2];h[L>>3]=+h[L>>3]-3.75;if(((c[F>>2]|0)+2|0)>>>0<(c[E>>2]|0)>>>0)Zc(c[H>>2]|0,(c[I>>2]|0)+(c[F>>2]|0)|0,(c[F>>2]|0)+(c[J>>2]|0)|0);c[F>>2]=(c[F>>2]|0)+1}c[D>>2]=(c[D>>2]|0)+((c[E>>2]|0)-(c[F>>2]|0));if((c[D>>2]|0)<=0){i=n;return}yc(C);c[C>>2]=c[D>>2];c[C+4>>2]=0;c[C+12>>2]=0;c[A>>2]=c[Wa>>2];c[t>>2]=C;z=c[A>>2]|0;b=c[z+4>>2]|0;c[w>>2]=z;c[x>>2]=(c[w>>2]|0)+8;c[y>>2]=c[x>>2];if((b|0)==(c[c[y>>2]>>2]|0)){Bc(z,c[t>>2]|0);i=n;return}c[p>>2]=z;c[q>>2]=(c[p>>2]|0)+8;c[r>>2]=c[q>>2];d=c[r>>2]|0;c[s>>2]=c[z+4>>2];b=c[s>>2]|0;p=c[t>>2]|0;c[v>>2]=d;c[u>>2]=b;c[o>>2]=p;p=c[u>>2]|0;if((p|0)!=0){b=c[o>>2]|0;c[p+0>>2]=c[b+0>>2];c[p+4>>2]=c[b+4>>2];c[p+8>>2]=c[b+8>>2];c[p+12>>2]=c[b+12>>2];c[p+16>>2]=c[b+16>>2];c[p+20>>2]=c[b+20>>2];c[p+24>>2]=c[b+24>>2];c[p+28>>2]=c[b+28>>2]}b=z+4|0;c[b>>2]=(c[b>>2]|0)+32;i=n;return}function tc(b,d,e,f,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0;n=i;i=i+768|0;Tb=n+448|0;Ub=n+700|0;Vb=n+676|0;Rb=n+300|0;Sb=n+692|0;Qb=n+72|0;Nb=n+176|0;Ob=n+128|0;Pb=n+754|0;Ib=n+172|0;Jb=n+188|0;Kb=n+168|0;Gb=n+132|0;Hb=n+124|0;Fb=n+16|0;Cb=n+608|0;Db=n+508|0;Eb=n+757|0;xb=n+312|0;yb=n+292|0;zb=n+192|0;Ab=n+184|0;wb=n+180|0;vb=n+164|0;ub=n+136|0;tb=n+140|0;sb=n+144|0;rb=n+148|0;pb=n+152|0;qb=n+120|0;kc=n+160|0;lc=n+604|0;mc=n+552|0;ic=n+504|0;jc=n+416|0;hc=n+88|0;ec=n+316|0;fc=n+308|0;gc=n+758|0;na=n+288|0;oa=n+196|0;pa=n+200|0;la=n+204|0;ma=n+208|0;ka=n;ha=n+216|0;ia=n+220|0;ja=n+755|0;kb=n+228|0;jb=n+232|0;ib=n+236|0;hb=n+240|0;za=n+244|0;Aa=n+248|0;Ba=n+252|0;xa=n+256|0;ya=n+260|0;wa=n+96|0;ta=n+268|0;ua=n+156|0;va=n+761|0;gb=n+280|0;fb=n+8|0;eb=n+600|0;cb=n+104|0;ab=n+548|0;bb=n+544|0;_a=n+500|0;$a=n+472|0;Xa=n+412|0;Ya=n+664|0;z=n+672|0;Va=n+680|0;Za=n+688|0;Ua=n+696|0;Ta=n+340|0;Sa=n+344|0;Ra=n+348|0;Qa=n+352|0;Pa=n+40|0;Oa=n+356|0;Ma=n+32|0;Ka=n+360|0;La=n+364|0;Ia=n+368|0;Ja=n+372|0;Fa=n+376|0;Ga=n+380|0;Ea=n+384|0;Da=n+212|0;Ha=n+400|0;s=n+404|0;v=n+408|0;u=n+704|0;o=n+420|0;r=n+744|0;q=n+424|0;p=n+428|0;y=n+432|0;x=n+436|0;w=n+440|0;A=n+444|0;t=n+748|0;Y=n+452|0;Z=n+456|0;_=n+460|0;W=n+464|0;X=n+468|0;V=n+56|0;R=n+476|0;T=n+480|0;U=n+760|0;nc=n+488|0;oc=n+492|0;I=n+496|0;aa=n+264|0;ba=n+512|0;S=n+516|0;H=n+520|0;Wa=n+272|0;D=n+524|0;F=n+528|0;J=n+532|0;E=n+536|0;K=n+284|0;$b=n+24|0;pc=n+596|0;G=n+753|0;lb=n+556|0;mb=n+560|0;nb=n+564|0;L=n+48|0;N=n+568|0;O=n+572|0;P=n+576|0;M=n+112|0;$=n+584|0;Q=n+588|0;ca=n+759|0;da=n+756|0;ea=n+752|0;Na=n+656|0;db=n+392|0;Yb=n+648|0;ac=n+612|0;bc=n+320|0;cc=n+668|0;Wb=n+80|0;dc=n+336|0;Xb=n+64|0;_b=n+332|0;Zb=n+684|0;ob=n+712|0;Bb=n+328|0;Lb=n+296|0;Mb=n+592|0;qa=n+580|0;fa=n+484|0;ga=n+276|0;Ca=n+224|0;ra=n+304|0;sa=n+324|0;C=n+616|0;c[nc>>2]=b;c[oc>>2]=d;c[I>>2]=e;c[aa>>2]=f;c[ba>>2]=j;c[S>>2]=k;c[H>>2]=l;c[Wa>>2]=m;c[D>>2]=0;c[F>>2]=c[oc>>2]&c[ba>>2];c[J>>2]=(c[oc>>2]|0)-(c[F>>2]|0);c[E>>2]=(c[F>>2]|0)+(c[nc>>2]|0);c[n+540>>2]=512;c[K>>2]=(c[F>>2]|0)+512;h[$b>>3]=0.0;c[pc>>2]=c[oc>>2];while(1){if(!((c[pc>>2]|0)>>>0<((c[oc>>2]|0)+(c[nc>>2]|0)|0)>>>0))break;h[$b>>3]=+h[$b>>3]+ +g[(c[aa>>2]|0)+((c[pc>>2]&c[ba>>2])<<2)>>2];c[pc>>2]=(c[pc>>2]|0)+1}h[$b>>3]=+h[$b>>3]/+((c[nc>>2]|0)>>>0);uc(c[H>>2]|0,+h[$b>>3]);a[G>>0]=0;c[lb>>2]=0;c[mb>>2]=0;c[nb>>2]=0;h[L>>3]=0.0;a:while(1){if(!(((c[F>>2]|0)+2|0)>>>0<(c[E>>2]|0)>>>0))break;c[N>>2]=0;c[O>>2]=0;c[P>>2]=0;h[M>>3]=0.0;c[Q>>2]=(c[F>>2]|0)+(c[J>>2]|0);c[R>>2]=Q;c[T>>2]=S;b=c[R>>2]|0;d=c[T>>2]|0;a[V+0>>0]=a[U+0>>0]|0;c[W>>2]=b;c[X>>2]=d;d=c[X>>2]|0;b=c[W>>2]|0;c[Y>>2]=V;c[Z>>2]=d;c[_>>2]=b;c[$>>2]=c[((c[c[Z>>2]>>2]|0)>>>0<(c[c[_>>2]>>2]|0)>>>0?c[X>>2]|0:c[W>>2]|0)>>2];vc(c[H>>2]|0,c[D>>2]|0);a[da>>0]=(wc(c[H>>2]|0,c[I>>2]|0,c[aa>>2]|0,c[ba>>2]|0,(c[F>>2]|0)+(c[J>>2]|0)|0,(c[E>>2]|0)-(c[F>>2]|0)|0,c[$>>2]|0,N,O,P,M,ca)|0)&1;a[ea>>0]=a[ca>>0]&1;if(!(a[da>>0]&1)){a[G>>0]=0;c[D>>2]=(c[D>>2]|0)+1;xc(c[H>>2]|0,(c[I>>2]|0)+(c[F>>2]|0)|0,(c[F>>2]|0)+(c[J>>2]|0)|0);c[F>>2]=(c[F>>2]|0)+1;if(!((c[F>>2]|0)>>>0>(c[K>>2]|0)>>>0))continue;e=c[F>>2]|0;if((c[F>>2]|0)>>>0>((c[K>>2]|0)+2048|0)>>>0){c[fa>>2]=e+16;c[ga>>2]=(c[E>>2]|0)-4;c[ha>>2]=fa;c[ia>>2]=ga;b=c[ha>>2]|0;d=c[ia>>2]|0;a[ka+0>>0]=a[ja+0>>0]|0;c[la>>2]=b;c[ma>>2]=d;d=c[ma>>2]|0;b=c[la>>2]|0;c[na>>2]=ka;c[oa>>2]=d;c[pa>>2]=b;c[qa>>2]=c[((c[c[oa>>2]>>2]|0)>>>0<(c[c[pa>>2]>>2]|0)>>>0?c[ma>>2]|0:c[la>>2]|0)>>2];while(1){if(!((c[F>>2]|0)>>>0<(c[qa>>2]|0)>>>0))continue a;xc(c[H>>2]|0,(c[I>>2]|0)+(c[F>>2]|0)|0,(c[F>>2]|0)+(c[J>>2]|0)|0);c[D>>2]=(c[D>>2]|0)+4;c[F>>2]=(c[F>>2]|0)+4}}else{c[ra>>2]=e+8;c[sa>>2]=(c[E>>2]|0)-2;c[ta>>2]=ra;c[ua>>2]=sa;b=c[ta>>2]|0;d=c[ua>>2]|0;a[wa+0>>0]=a[va+0>>0]|0;c[xa>>2]=b;c[ya>>2]=d;d=c[ya>>2]|0;b=c[xa>>2]|0;c[za>>2]=wa;c[Aa>>2]=d;c[Ba>>2]=b;c[Ca>>2]=c[((c[c[Aa>>2]>>2]|0)>>>0<(c[c[Ba>>2]>>2]|0)>>>0?c[ya>>2]|0:c[xa>>2]|0)>>2];while(1){if(!((c[F>>2]|0)>>>0<(c[Ca>>2]|0)>>>0))continue a;xc(c[H>>2]|0,(c[I>>2]|0)+(c[F>>2]|0)|0,(c[F>>2]|0)+(c[J>>2]|0)|0);c[D>>2]=(c[D>>2]|0)+2;c[F>>2]=(c[F>>2]|0)+2}}}if(a[G>>0]&1?+h[L>>3]>+h[M>>3]:0){c[Da>>2]=c[Wa>>2];c[Ea>>2]=c[Da>>2];b=c[Ea>>2]|0;d=c[b+4>>2]|0;c[Fa>>2]=b;c[Ga>>2]=d;d=c[Ga>>2]|0;c[Ia>>2]=Ha;c[Ja>>2]=d;d=c[Ja>>2]|0;c[Ka>>2]=c[Ia>>2];c[La>>2]=d;c[c[Ka>>2]>>2]=c[La>>2];a[Ma+0>>0]=a[Ha+0>>0]|0;a[Ma+1>>0]=a[Ha+1>>0]|0;a[Ma+2>>0]=a[Ha+2>>0]|0;a[Ma+3>>0]=a[Ha+3>>0]|0;c[Oa>>2]=Na;d=c[Oa>>2]|0;a[Pa+0>>0]=a[Ma+0>>0]|0;a[Pa+1>>0]=a[Ma+1>>0]|0;a[Pa+2>>0]=a[Ma+2>>0]|0;a[Pa+3>>0]=a[Ma+3>>0]|0;c[Qa>>2]=d;d=c[Qa>>2]|0;c[d+0>>2]=c[Pa+0>>2];d=d+4|0;c[d+0>>2]=c[Pa+0>>2];c[Ra>>2]=Na;c[Sa>>2]=c[Ra>>2];d=c[Sa>>2]|0;b=d+4|0;c[d+0>>2]=c[b+0>>2];c[Ta>>2]=d;d=c[Ta>>2]|0;c[d>>2]=(c[d>>2]|0)+ -32;c[Ua>>2]=d;d=(c[c[Ua>>2]>>2]|0)+4|0;c[d>>2]=(c[d>>2]|0)-1;c[Va>>2]=c[Wa>>2];c[z>>2]=c[Va>>2];d=c[z>>2]|0;b=c[d+4>>2]|0;c[Xa>>2]=d;c[Ya>>2]=b;b=c[Ya>>2]|0;c[_a>>2]=Za;c[$a>>2]=b;b=c[$a>>2]|0;c[ab>>2]=c[_a>>2];c[bb>>2]=b;c[c[ab>>2]>>2]=c[bb>>2];a[cb+0>>0]=a[Za+0>>0]|0;a[cb+1>>0]=a[Za+1>>0]|0;a[cb+2>>0]=a[Za+2>>0]|0;a[cb+3>>0]=a[Za+3>>0]|0;c[eb>>2]=db;b=c[eb>>2]|0;a[fb+0>>0]=a[cb+0>>0]|0;a[fb+1>>0]=a[cb+1>>0]|0;a[fb+2>>0]=a[cb+2>>0]|0;a[fb+3>>0]=a[cb+3>>0]|0;c[gb>>2]=b;b=c[gb>>2]|0;c[b+0>>2]=c[fb+0>>2];b=b+4|0;c[b+0>>2]=c[fb+0>>2];c[hb>>2]=db;c[ib>>2]=c[hb>>2];b=c[ib>>2]|0;d=b+4|0;c[b+0>>2]=c[d+0>>2];c[jb>>2]=b;b=c[jb>>2]|0;c[b>>2]=(c[b>>2]|0)+ -32;c[kb>>2]=b;b=(c[c[kb>>2]>>2]|0)+8|0;c[b>>2]=(c[b>>2]|0)-1;xc(c[H>>2]|0,(c[I>>2]|0)+(c[F>>2]|0)|0,(c[F>>2]|0)+(c[J>>2]|0)|0);c[F>>2]=(c[F>>2]|0)+ -1;c[N>>2]=c[lb>>2];c[O>>2]=c[mb>>2];c[P>>2]=c[nb>>2];h[M>>3]=+h[L>>3];a[ea>>0]=1;a[ca>>0]=1}else B=10;b:do if((B|0)==10){B=0;c[Yb>>2]=0;while(1){if(!(((c[F>>2]|0)+4|0)>>>0<(c[E>>2]|0)>>>0))break b;if((c[Yb>>2]|0)>=4)break b;c[ac>>2]=0;c[bc>>2]=0;c[cc>>2]=0;h[Wb>>3]=0.0;c[dc>>2]=(c[F>>2]|0)+(c[J>>2]|0)+1;c[ec>>2]=dc;c[fc>>2]=S;b=c[ec>>2]|0;d=c[fc>>2]|0;a[hc+0>>0]=a[gc+0>>0]|0;c[ic>>2]=b;c[jc>>2]=d;d=c[jc>>2]|0;b=c[ic>>2]|0;c[kc>>2]=hc;c[lc>>2]=d;c[mc>>2]=b;c[$>>2]=c[((c[c[lc>>2]>>2]|0)>>>0<(c[c[mc>>2]>>2]|0)>>>0?c[jc>>2]|0:c[ic>>2]|0)>>2];xc(c[H>>2]|0,(c[I>>2]|0)+(c[F>>2]|0)|0,(c[F>>2]|0)+(c[J>>2]|0)|0);a[da>>0]=(wc(c[H>>2]|0,c[I>>2]|0,c[aa>>2]|0,c[ba>>2]|0,(c[F>>2]|0)+(c[J>>2]|0)+1|0,(c[E>>2]|0)-(c[F>>2]|0)-1|0,c[$>>2]|0,ac,bc,cc,Wb,ca)|0)&1;h[Xb>>3]=0.0;if((c[N>>2]|0)>>>0>=4)h[Xb>>3]=+h[Xb>>3]+(+g[(c[aa>>2]|0)+(((c[F>>2]|0)+4&c[ba>>2])<<2)>>2]- +h[$b>>3]);c[_b>>2]=(c[ac>>2]|0)-(c[N>>2]|0)+1;c[Zb>>2]=0;while(1){if((c[Zb>>2]|0)>=(c[_b>>2]|0))break;h[Xb>>3]=+h[Xb>>3]-(+g[(c[aa>>2]|0)+(((c[F>>2]|0)+(c[N>>2]|0)+(c[Zb>>2]|0)&c[ba>>2])<<2)>>2]- +h[$b>>3]);c[Zb>>2]=(c[Zb>>2]|0)+1}if((c[D>>2]|0)<1)h[Xb>>3]=+h[Xb>>3]+.97;h[Xb>>3]=+h[Xb>>3]+(+(c[Yb>>2]|0)*.2+2.0);h[Xb>>3]=+h[Xb>>3]+ +g[(c[aa>>2]|0)+((c[F>>2]&c[ba>>2])<<2)>>2]*.04;if(!(a[da>>0]&1))break b;if(!(+h[Wb>>3]>=+h[M>>3]+ +h[Xb>>3]))break b;c[D>>2]=(c[D>>2]|0)+1;c[Yb>>2]=(c[Yb>>2]|0)+1;c[N>>2]=c[ac>>2];c[O>>2]=c[bc>>2];c[P>>2]=c[cc>>2];h[M>>3]=+h[Wb>>3];a[ea>>0]=a[ca>>0]&1;c[F>>2]=(c[F>>2]|0)+1}}while(0);c[K>>2]=(c[F>>2]|0)+(c[N>>2]<<1)+512;yc(ob);c[ob>>2]=c[D>>2];c[ob+4>>2]=c[N>>2];c[ob+8>>2]=c[O>>2];c[ob+12>>2]=c[P>>2];c[pb>>2]=c[Wa>>2];c[qb>>2]=ob;e=c[pb>>2]|0;b=c[e+4>>2]|0;c[rb>>2]=e;c[sb>>2]=(c[rb>>2]|0)+8;c[tb>>2]=c[sb>>2];if((b|0)!=(c[c[tb>>2]>>2]|0)){c[ub>>2]=e;c[vb>>2]=(c[ub>>2]|0)+8;c[wb>>2]=c[vb>>2];d=c[wb>>2]|0;c[xb>>2]=c[e+4>>2];b=c[xb>>2]|0;nc=c[qb>>2]|0;c[yb>>2]=d;c[zb>>2]=b;c[Ab>>2]=nc;nc=c[zb>>2]|0;if((nc|0)!=0){b=c[Ab>>2]|0;c[nc+0>>2]=c[b+0>>2];c[nc+4>>2]=c[b+4>>2];c[nc+8>>2]=c[b+8>>2];c[nc+12>>2]=c[b+12>>2];c[nc+16>>2]=c[b+16>>2];c[nc+20>>2]=c[b+20>>2];c[nc+24>>2]=c[b+24>>2];c[nc+28>>2]=c[b+28>>2]}b=e+4|0;c[b>>2]=(c[b>>2]|0)+32}else Bc(e,c[qb>>2]|0);c[D>>2]=0;c[F>>2]=(c[F>>2]|0)+1;b=c[P>>2]|0;c[Bb>>2]=(c[F>>2]|0)+(c[J>>2]|0);c[Cb>>2]=Bb;c[Db>>2]=S;d=c[Cb>>2]|0;pc=c[Db>>2]|0;a[Fb+0>>0]=a[Eb+0>>0]|0;c[Gb>>2]=d;c[Hb>>2]=pc;pc=c[Hb>>2]|0;d=c[Gb>>2]|0;c[Ib>>2]=Fb;c[Jb>>2]=pc;c[Kb>>2]=d;if(b>>>0<=(c[((c[c[Jb>>2]>>2]|0)>>>0<(c[c[Kb>>2]>>2]|0)>>>0?c[Hb>>2]|0:c[Gb>>2]|0)>>2]|0)>>>0)zc(c[H>>2]|0,c[P>>2]|0);c[Lb>>2]=1;while(1){if(!((c[Lb>>2]|0)>>>0<((c[N>>2]|0)-1|0)>>>0))break;if(((c[F>>2]|0)+2|0)>>>0<(c[E>>2]|0)>>>0)xc(c[H>>2]|0,(c[I>>2]|0)+(c[F>>2]|0)|0,(c[F>>2]|0)+(c[J>>2]|0)|0);c[F>>2]=(c[F>>2]|0)+1;c[Lb>>2]=(c[Lb>>2]|0)+1}if(((Ac(c[H>>2]|0)|0?(c[N>>2]|0)>>>0>=4:0)?((c[F>>2]|0)+20|0)>>>0<(c[E>>2]|0)>>>0:0)?!(a[ea>>0]&1):0){c[Mb>>2]=(c[F>>2]|0)+(c[J>>2]|0);c[Nb>>2]=Mb;c[Ob>>2]=S;b=c[Nb>>2]|0;d=c[Ob>>2]|0;a[Qb+0>>0]=a[Pb+0>>0]|0;c[Rb>>2]=b;c[Sb>>2]=d;d=c[Sb>>2]|0;b=c[Rb>>2]|0;c[Tb>>2]=Qb;c[Ub>>2]=d;c[Vb>>2]=b;c[$>>2]=c[((c[c[Ub>>2]>>2]|0)>>>0<(c[c[Vb>>2]>>2]|0)>>>0?c[Sb>>2]|0:c[Rb>>2]|0)>>2];a[G>>0]=(wc(c[H>>2]|0,c[I>>2]|0,c[aa>>2]|0,c[ba>>2]|0,(c[F>>2]|0)+(c[J>>2]|0)|0,(c[E>>2]|0)-(c[F>>2]|0)|0,c[$>>2]|0,lb,mb,nb,L,ca)|0)&1}else{a[G>>0]=0;a[ca>>0]=0}h[L>>3]=+h[L>>3]- +g[(c[aa>>2]|0)+((c[F>>2]&c[ba>>2])<<2)>>2];h[L>>3]=+h[L>>3]-3.75;if(((c[F>>2]|0)+2|0)>>>0<(c[E>>2]|0)>>>0)xc(c[H>>2]|0,(c[I>>2]|0)+(c[F>>2]|0)|0,(c[F>>2]|0)+(c[J>>2]|0)|0);c[F>>2]=(c[F>>2]|0)+1}c[D>>2]=(c[D>>2]|0)+((c[E>>2]|0)-(c[F>>2]|0));if((c[D>>2]|0)<=0){i=n;return}yc(C);c[C>>2]=c[D>>2];c[C+4>>2]=0;c[C+12>>2]=0;c[A>>2]=c[Wa>>2];c[t>>2]=C;z=c[A>>2]|0;b=c[z+4>>2]|0;c[w>>2]=z;c[x>>2]=(c[w>>2]|0)+8;c[y>>2]=c[x>>2];if((b|0)==(c[c[y>>2]>>2]|0)){Bc(z,c[t>>2]|0);i=n;return}c[p>>2]=z;c[q>>2]=(c[p>>2]|0)+8;c[r>>2]=c[q>>2];d=c[r>>2]|0;c[s>>2]=c[z+4>>2];b=c[s>>2]|0;p=c[t>>2]|0;c[v>>2]=d;c[u>>2]=b;c[o>>2]=p;p=c[u>>2]|0;if((p|0)!=0){b=c[o>>2]|0;c[p+0>>2]=c[b+0>>2];c[p+4>>2]=c[b+4>>2];c[p+8>>2]=c[b+8>>2];c[p+12>>2]=c[b+12>>2];c[p+16>>2]=c[b+16>>2];c[p+20>>2]=c[b+20>>2];c[p+24>>2]=c[b+24>>2];c[p+28>>2]=c[b+28>>2]}b=z+4|0;c[b>>2]=(c[b>>2]|0)+32;i=n;return}function uc(a,b){a=a|0;b=+b;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+8|0;f=d;c[e>>2]=a;h[f>>3]=b;h[(c[e>>2]|0)+33619992>>3]=+h[f>>3];i=d;return}function vc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;c[(c[e>>2]|0)+33619984>>2]=c[f>>2];i=d;return}function wc(b,f,j,k,l,m,n,o,p,q,r,s){b=b|0;f=f|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;s=s|0;var t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0.0,cb=0;ka=i;i=i+432|0;Q=ka+224|0;P=ka+392|0;O=ka+376|0;N=ka+136|0;K=ka+200|0;L=ka+208|0;M=ka+212|0;H=ka+260|0;I=ka+204|0;J=ka+196|0;ba=ka+184|0;ca=ka+132|0;da=ka+128|0;$=ka+120|0;aa=ka+116|0;_=ka+112|0;W=ka+304|0;Y=ka+256|0;Z=ka+420|0;wa=ka+192|0;xa=ka+188|0;ya=ka+180|0;ua=ka+176|0;va=ka+144|0;ta=ka+16|0;qa=ka+152|0;ra=ka+156|0;u=ka+421|0;Xa=ka+164|0;Ya=ka+168|0;Za=ka+172|0;Va=ka+344|0;Wa=ka+324|0;Ua=ka+48|0;Fa=ka+296|0;Sa=ka+252|0;Ta=ka+422|0;cb=ka+364|0;E=ka+372|0;ab=ka+380|0;za=ka+388|0;Aa=ka+396|0;X=ka+412|0;v=ka+216|0;ia=ka+220|0;ja=ka+416|0;t=ka+228|0;la=ka+232|0;ma=ka+236|0;F=ka+148|0;y=ka;z=ka+32|0;A=ka+96|0;sa=ka+423|0;D=ka+40|0;$a=ka+56|0;S=ka+268|0;ha=ka+272|0;Ma=ka+276|0;Oa=ka+280|0;_a=ka+284|0;La=ka+288|0;Pa=ka+292|0;Qa=ka+340|0;Na=ka+24|0;Ka=ka+320|0;Ja=ka+308|0;Ia=ka+300|0;Ha=ka+312|0;Ra=ka+316|0;Ga=ka+104|0;Ea=ka+328|0;Ba=ka+332|0;Da=ka+336|0;Ca=ka+124|0;na=ka+356|0;ga=ka+244|0;fa=ka+240|0;oa=ka+368|0;pa=ka+348|0;ea=ka+8|0;T=ka+360|0;U=ka+140|0;B=ka+384|0;V=ka+352|0;G=ka+400|0;R=ka+264|0;w=ka+248|0;x=ka+160|0;C=ka+88|0;c[cb>>2]=b;c[E>>2]=f;c[ab>>2]=j;c[za>>2]=k;c[Aa>>2]=l;c[X>>2]=m;c[v>>2]=n;c[ia>>2]=o;c[ja>>2]=p;c[t>>2]=q;c[la>>2]=r;c[ma>>2]=s;s=c[cb>>2]|0;a[c[ma>>2]>>0]=1;c[c[ja>>2]>>2]=0;c[F>>2]=c[Aa>>2]&c[za>>2];if((c[ab>>2]|0)==0)bb=20.0;else bb=+g[(c[ab>>2]|0)+(c[F>>2]<<2)>>2]+ +g[(c[ab>>2]|0)+(((c[Aa>>2]|0)+1&c[za>>2])<<2)>>2]+ +g[(c[ab>>2]|0)+(((c[Aa>>2]|0)+2&c[za>>2])<<2)>>2]+ +g[(c[ab>>2]|0)+(((c[Aa>>2]|0)+3&c[za>>2])<<2)>>2];h[y>>3]=bb;if((c[ab>>2]|0)==0)bb=15.0;else bb=+g[(c[ab>>2]|0)+(c[F>>2]<<2)>>2]+ +g[(c[ab>>2]|0)+(((c[Aa>>2]|0)+1&c[za>>2])<<2)>>2]+ +g[(c[ab>>2]|0)+(((c[Aa>>2]|0)+2&c[za>>2])<<2)>>2]+.3;h[z>>3]=bb;if((c[ab>>2]|0)==0)bb=10.0;else bb=+g[(c[ab>>2]|0)+(c[F>>2]<<2)>>2]+ +g[(c[ab>>2]|0)+(((c[Aa>>2]|0)+1&c[za>>2])<<2)>>2]+1.2;h[A>>3]=bb;a[sa>>0]=0;h[D>>3]=8.115;if((c[s+33619984>>2]|0)<4){c[$a+0>>2]=c[2];c[$a+4>>2]=c[3];c[$a+8>>2]=c[4];c[$a+12>>2]=c[5];c[$a+16>>2]=c[6];c[$a+20>>2]=c[7];c[$a+24>>2]=c[8];c[$a+28>>2]=c[9];h[D>>3]=+h[D>>3]+ +h[$a+(c[s+33619984>>2]<<3)>>3]}c[S>>2]=c[c[ia>>2]>>2];c[c[ia>>2]>>2]=0;c[ha>>2]=1;c[Ma>>2]=0;while(1){$a=c[Aa>>2]|0;if((c[Ma>>2]|0)>=16)break;c[Oa>>2]=$a;do switch(c[Ma>>2]|0){case 0:{c[Oa>>2]=(c[Oa>>2]|0)-(c[s+33619968>>2]|0);break};case 1:{c[Oa>>2]=(c[Oa>>2]|0)-(c[s+33619972>>2]|0);break};case 2:{c[Oa>>2]=(c[Oa>>2]|0)-(c[s+33619976>>2]|0);break};case 3:{c[Oa>>2]=(c[Oa>>2]|0)-(c[s+33619980>>2]|0);break};case 4:{c[Oa>>2]=(c[Oa>>2]|0)-((c[s+33619968>>2]|0)-1);break};case 5:{c[Oa>>2]=(c[Oa>>2]|0)-((c[s+33619968>>2]|0)+1);break};case 6:{c[Oa>>2]=(c[Oa>>2]|0)-((c[s+33619968>>2]|0)-2);break};case 7:{c[Oa>>2]=(c[Oa>>2]|0)-((c[s+33619968>>2]|0)+2);break};case 8:{c[Oa>>2]=(c[Oa>>2]|0)-((c[s+33619968>>2]|0)-3);break};case 9:{c[Oa>>2]=(c[Oa>>2]|0)-((c[s+33619968>>2]|0)+3);break};case 10:{c[Oa>>2]=(c[Oa>>2]|0)-((c[s+33619972>>2]|0)-1);break};case 11:{c[Oa>>2]=(c[Oa>>2]|0)-((c[s+33619972>>2]|0)+1);break};case 12:{c[Oa>>2]=(c[Oa>>2]|0)-((c[s+33619972>>2]|0)-2);break};case 13:{c[Oa>>2]=(c[Oa>>2]|0)-((c[s+33619972>>2]|0)+2);break};case 14:{c[Oa>>2]=(c[Oa>>2]|0)-((c[s+33619972>>2]|0)-3);break};case 15:{c[Oa>>2]=(c[Oa>>2]|0)-((c[s+33619972>>2]|0)+3);break};default:{}}while(0);do if((((!((c[Oa>>2]|0)>>>0>=(c[Aa>>2]|0)>>>0)?(c[_a>>2]=(c[Aa>>2]|0)-(c[Oa>>2]|0),!((c[_a>>2]|0)>>>0>(c[v>>2]|0)>>>0)):0)?(c[Oa>>2]=c[Oa>>2]&c[za>>2],!(((c[F>>2]|0)+(c[S>>2]|0)|0)>>>0>(c[za>>2]|0)>>>0)):0)?!(((c[Oa>>2]|0)+(c[S>>2]|0)|0)>>>0>(c[za>>2]|0)>>>0):0)?(d[(c[E>>2]|0)+((c[F>>2]|0)+(c[S>>2]|0))>>0]|0|0)==(d[(c[E>>2]|0)+((c[Oa>>2]|0)+(c[S>>2]|0))>>0]|0|0):0){c[La>>2]=Mc((c[E>>2]|0)+(c[Oa>>2]|0)|0,(c[E>>2]|0)+(c[F>>2]|0)|0,c[X>>2]|0)|0;cb=c[La>>2]|0;c[Pa>>2]=2;c[Qa>>2]=3;c[Fa>>2]=Pa;c[Sa>>2]=Qa;b=c[Fa>>2]|0;f=c[Sa>>2]|0;a[Ua+0>>0]=a[Ta+0>>0]|0;c[Va>>2]=b;c[Wa>>2]=f;f=c[Va>>2]|0;b=c[Wa>>2]|0;c[Xa>>2]=Ua;c[Ya>>2]=f;c[Za>>2]=b;if(!(cb>>>0>=(c[((c[c[Ya>>2]>>2]|0)<(c[c[Za>>2]>>2]|0)?c[Wa>>2]|0:c[Va>>2]|0)>>2]|0)>>>0)){if((c[La>>2]|0)!=2)break;if((c[Ma>>2]|0)>=2)break}h[Na>>3]=+Nc(+h[s+33619992>>3],+h[y>>3],+h[z>>3],+h[A>>3],c[La>>2]|0,c[Ma>>2]|0);if(+h[D>>3]<+h[Na>>3]){h[D>>3]=+h[Na>>3];c[S>>2]=c[La>>2];c[ha>>2]=c[_a>>2];c[c[ia>>2]>>2]=c[S>>2];c[c[ja>>2]>>2]=c[S>>2];c[c[t>>2]>>2]=c[ha>>2];h[c[la>>2]>>3]=+h[D>>3];a[sa>>0]=1;a[c[ma>>2]>>0]=(c[_a>>2]|0)>>>0>(c[v>>2]|0)>>>0&1}}while(0);c[Ma>>2]=(c[Ma>>2]|0)+1}cb=$a-64|0;c[Ka>>2]=cb;c[Ka>>2]=(c[Ka>>2]|0)<0?0:cb;h[A>>3]=+h[A>>3]-1.0;c[Ja>>2]=(c[Aa>>2]|0)-1;while(1){if((c[Ja>>2]|0)<=(c[Ka>>2]|0))break;c[Ia>>2]=c[Ja>>2];c[Ha>>2]=(c[Aa>>2]|0)-(c[Ia>>2]|0);if((c[Ha>>2]|0)>>>0>(c[v>>2]|0)>>>0)break;c[Ia>>2]=c[Ia>>2]&c[za>>2];if(((d[(c[E>>2]|0)+(c[F>>2]|0)>>0]|0|0)==(d[(c[E>>2]|0)+(c[Ia>>2]|0)>>0]|0|0)?(d[(c[E>>2]|0)+((c[F>>2]|0)+1)>>0]|0|0)==(d[(c[E>>2]|0)+((c[Ia>>2]|0)+1)>>0]|0|0):0)?(c[Ra>>2]=2,bb=+h[A>>3],h[Ga>>3]=bb- +(Oc(c[Ha>>2]|0)|0)*2.3,+h[D>>3]<+h[Ga>>3]):0){h[D>>3]=+h[Ga>>3];c[S>>2]=c[Ra>>2];c[ha>>2]=c[Ha>>2];c[c[ia>>2]>>2]=c[S>>2];c[c[ja>>2]>>2]=c[S>>2];c[c[t>>2]>>2]=c[ha>>2];a[sa>>0]=1}c[Ja>>2]=(c[Ja>>2]|0)+ -1}c[Ea>>2]=Kc((c[E>>2]|0)+(c[F>>2]|0)|0)|0;c[Ba>>2]=s+65536+(c[Ea>>2]<<10);if((e[s+(c[Ea>>2]<<1)>>1]|0)>>>0>256)Fa=(e[s+(c[Ea>>2]<<1)>>1]|0)-256|0;else Fa=0;c[Da>>2]=Fa;c[Ca>>2]=(e[s+(c[Ea>>2]<<1)>>1]|0)-1;while(1){if((c[Ca>>2]|0)<(c[Da>>2]|0))break;c[na>>2]=c[(c[Ba>>2]|0)+((c[Ca>>2]&255)<<2)>>2];if((c[na>>2]|0)>=0){c[ga>>2]=(c[Aa>>2]|0)-(c[na>>2]|0);if((c[ga>>2]|0)>>>0>(c[v>>2]|0)>>>0)break;c[na>>2]=c[na>>2]&c[za>>2];if((!(((c[F>>2]|0)+(c[S>>2]|0)|0)>>>0>(c[za>>2]|0)>>>0)?!(((c[na>>2]|0)+(c[S>>2]|0)|0)>>>0>(c[za>>2]|0)>>>0):0)?(d[(c[E>>2]|0)+((c[F>>2]|0)+(c[S>>2]|0))>>0]|0|0)==(d[(c[E>>2]|0)+((c[na>>2]|0)+(c[S>>2]|0))>>0]|0|0):0){c[fa>>2]=Mc((c[E>>2]|0)+(c[na>>2]|0)|0,(c[E>>2]|0)+(c[F>>2]|0)|0,c[X>>2]|0)|0;cb=c[fa>>2]|0;c[oa>>2]=2;c[pa>>2]=3;c[qa>>2]=oa;c[ra>>2]=pa;b=c[qa>>2]|0;f=c[ra>>2]|0;a[ta+0>>0]=a[u+0>>0]|0;c[ua>>2]=b;c[va>>2]=f;f=c[ua>>2]|0;b=c[va>>2]|0;c[wa>>2]=ta;c[xa>>2]=f;c[ya>>2]=b;if(cb>>>0>=(c[((c[c[xa>>2]>>2]|0)<(c[c[ya>>2]>>2]|0)?c[va>>2]|0:c[ua>>2]|0)>>2]|0)>>>0?(h[ea>>3]=+Pc(+h[s+33619992>>3],+h[y>>3],+h[z>>3],+h[A>>3],c[fa>>2]|0,c[ga>>2]|0),+h[D>>3]<+h[ea>>3]):0){h[D>>3]=+h[ea>>3];c[S>>2]=c[fa>>2];c[ha>>2]=c[ga>>2];c[c[ia>>2]>>2]=c[S>>2];c[c[ja>>2]>>2]=c[S>>2];c[c[t>>2]>>2]=c[ha>>2];h[c[la>>2]>>3]=+h[D>>3];a[sa>>0]=1;a[c[ma>>2]>>0]=0}}}c[Ca>>2]=(c[Ca>>2]|0)+ -1}if((c[s+3362e4>>2]|0)==0){cb=a[sa>>0]|0;cb=cb&1;i=ka;return cb|0}c[T>>2]=Lc((c[E>>2]|0)+(c[F>>2]|0)|0)|0;c[U>>2]=Qc(c[s+3362e4>>2]|0,c[T>>2]|0)|0;c[V>>2]=c[U>>2];c[W>>2]=V;c[Y>>2]=X;cb=c[W>>2]|0;b=c[Y>>2]|0;a[_+0>>0]=a[Z+0>>0]|0;c[$>>2]=cb;c[aa>>2]=b;b=c[aa>>2]|0;cb=c[$>>2]|0;c[ba>>2]=_;c[ca>>2]=b;c[da>>2]=cb;c[B>>2]=c[((c[c[ca>>2]>>2]|0)>>>0<(c[c[da>>2]>>2]|0)>>>0?c[aa>>2]|0:c[$>>2]|0)>>2];while(1){if(!((c[B>>2]|0)>=4?(c[B>>2]|0)>>>0>(c[S>>2]|0)>>>0:0))break;cb=(c[E>>2]|0)+(c[F>>2]|0)|0;b=c[B>>2]|0;c[H>>2]=G;c[I>>2]=cb;c[J>>2]=b;b=c[I>>2]|0;cb=c[J>>2]|0;c[K>>2]=c[H>>2];c[L>>2]=b;c[M>>2]=cb;cb=c[K>>2]|0;c[N>>2]=cb;c[O>>2]=c[N>>2];c[P>>2]=c[O>>2];c[Q>>2]=c[P>>2];Qm(cb,c[L>>2]|0,c[M>>2]|0);if(Rc(c[s+3362e4>>2]|0,G,R,w)|0?(c[x>>2]=(c[v>>2]|0)+(c[w>>2]|0)+1,h[C>>3]=+Pc(+h[s+33619992>>3],+h[y>>3],+h[z>>3],+h[A>>3],c[B>>2]|0,c[x>>2]|0),+h[D>>3]<+h[C>>3]):0){h[D>>3]=+h[C>>3];c[S>>2]=c[B>>2];c[ha>>2]=c[x>>2];c[c[ia>>2]>>2]=c[S>>2];c[c[ja>>2]>>2]=c[R>>2];c[c[t>>2]>>2]=c[ha>>2];h[c[la>>2]>>3]=+h[D>>3];a[sa>>0]=1;a[c[ma>>2]>>0]=1}Tm(G);c[B>>2]=(c[B>>2]|0)+ -1}cb=a[sa>>0]|0;cb=cb&1;i=ka;return cb|0}function xc(a,d,f){a=a|0;d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+32|0;m=g+16|0;l=g+12|0;k=g+8|0;h=g+4|0;j=g;c[m>>2]=a;c[l>>2]=d;c[k>>2]=f;a=c[m>>2]|0;c[h>>2]=Kc(c[l>>2]|0)|0;c[j>>2]=(e[a+(c[h>>2]<<1)>>1]|0)&255;c[a+65536+(c[h>>2]<<10)+(c[j>>2]<<2)>>2]=c[k>>2];a=a+(c[h>>2]<<1)|0;b[a>>1]=(b[a>>1]|0)+1<<16>>16;i=g;return}function yc(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Jc(c[d>>2]|0);i=b;return}function zc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;b=c[f>>2]|0;if((c[b+33619968>>2]|0)==(c[e>>2]|0)){i=d;return}c[b+33619980>>2]=c[b+33619976>>2];c[b+33619976>>2]=c[b+33619972>>2];c[b+33619972>>2]=c[b+33619968>>2];c[b+33619968>>2]=c[e>>2];i=d;return}function Ac(a){a=a|0;var b=0,d=0;d=i;i=i+16|0;b=d;c[b>>2]=a;i=d;return(c[(c[b>>2]|0)+3362e4>>2]|0)!=0|0}function Bc(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;f=i;i=i+160|0;n=f+72|0;g=f+32|0;l=f+108|0;j=f+132|0;s=f+8|0;y=f+76|0;z=f+28|0;w=f+20|0;x=f+24|0;v=f;h=f+96|0;u=f+104|0;E=f+136|0;D=f+140|0;C=f+144|0;B=f+52|0;A=f+56|0;t=f+60|0;F=f+64|0;m=f+68|0;p=f+16|0;q=f+4|0;r=f+84|0;G=f+80|0;H=f+88|0;I=f+92|0;J=f+36|0;K=f+100|0;k=f+40|0;o=f+44|0;e=f+112|0;c[K>>2]=b;c[k>>2]=d;b=c[K>>2]|0;c[J>>2]=b;c[I>>2]=(c[J>>2]|0)+8;c[H>>2]=c[I>>2];c[o>>2]=c[H>>2];c[G>>2]=b;d=c[G>>2]|0;d=(((c[d+4>>2]|0)-(c[d>>2]|0)|0)/32|0)+1|0;c[F>>2]=b;c[m>>2]=d;d=c[F>>2]|0;c[p>>2]=Hc(d)|0;if((c[m>>2]|0)>>>0>(c[p>>2]|0)>>>0)ht(d);c[A>>2]=d;c[B>>2]=c[A>>2];K=c[B>>2]|0;c[C>>2]=K;c[D>>2]=(c[C>>2]|0)+8;c[E>>2]=c[D>>2];c[q>>2]=((c[c[E>>2]>>2]|0)-(c[K>>2]|0)|0)/32|0;if((c[q>>2]|0)>>>0>=(((c[p>>2]|0)>>>0)/2|0)>>>0)c[t>>2]=c[p>>2];else{c[r>>2]=c[q>>2]<<1;c[h>>2]=r;c[u>>2]=m;K=c[h>>2]|0;J=c[u>>2]|0;a[v+0>>0]=a[f+148>>0]|0;c[w>>2]=K;c[x>>2]=J;J=c[w>>2]|0;K=c[x>>2]|0;c[f+12>>2]=v;c[y>>2]=J;c[z>>2]=K;c[t>>2]=c[((c[c[y>>2]>>2]|0)>>>0<(c[c[z>>2]>>2]|0)>>>0?c[x>>2]|0:c[w>>2]|0)>>2]}K=c[t>>2]|0;c[s>>2]=b;J=c[s>>2]|0;Cc(e,K,((c[J+4>>2]|0)-(c[J>>2]|0)|0)/32|0,c[o>>2]|0);J=c[o>>2]|0;c[j>>2]=c[e+8>>2];K=c[j>>2]|0;c[l>>2]=c[k>>2];h=c[l>>2]|0;c[f+48>>2]=J;c[n>>2]=K;c[g>>2]=h;h=c[n>>2]|0;if((h|0)==0){K=e+8|0;J=c[K>>2]|0;J=J+32|0;c[K>>2]=J;Dc(b,e);Ec(e);i=f;return}K=c[g>>2]|0;c[h+0>>2]=c[K+0>>2];c[h+4>>2]=c[K+4>>2];c[h+8>>2]=c[K+8>>2];c[h+12>>2]=c[K+12>>2];c[h+16>>2]=c[K+16>>2];c[h+20>>2]=c[K+20>>2];c[h+24>>2]=c[K+24>>2];c[h+28>>2]=c[K+28>>2];K=e+8|0;J=c[K>>2]|0;J=J+32|0;c[K>>2]=J;Dc(b,e);Ec(e);i=f;return}function Cc(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;k=f+12|0;j=f+8|0;h=f+4|0;g=f;c[k>>2]=a;c[j>>2]=b;c[h>>2]=d;c[g>>2]=e;Ic(c[k>>2]|0,c[j>>2]|0,c[h>>2]|0,c[g>>2]|0);i=f;return}function Dc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=i;i=i+144|0;F=d+108|0;H=d+88|0;G=d+80|0;E=d+48|0;C=d+8|0;z=d+12|0;D=d+84|0;B=d+16|0;y=d+20|0;A=d+24|0;w=d+28|0;t=d+32|0;x=d+104|0;v=d+112|0;s=d+120|0;u=d+128|0;m=d+136|0;q=d+52|0;r=d+56|0;n=d+60|0;o=d+64|0;p=d+68|0;k=d+72|0;g=d+76|0;l=d+4|0;j=d;f=d+92|0;h=d+96|0;K=d+100|0;J=d+40|0;I=d+116|0;L=d+44|0;e=d+124|0;c[L>>2]=a;c[e>>2]=b;a=c[L>>2]|0;c[I>>2]=a;c[J>>2]=(c[I>>2]|0)+8;c[K>>2]=c[J>>2];J=c[a>>2]|0;I=c[a+4>>2]|0;b=(c[e>>2]|0)+4|0;c[d+132>>2]=c[K>>2];c[F>>2]=J;c[H>>2]=I;c[G>>2]=b;c[E>>2]=((c[H>>2]|0)-(c[F>>2]|0)|0)/32|0;b=c[G>>2]|0;c[b>>2]=(c[b>>2]|0)+(0-(c[E>>2]|0)<<5);By(c[c[G>>2]>>2]|0,c[F>>2]|0,c[E>>2]<<5|0)|0;b=(c[e>>2]|0)+4|0;c[B>>2]=a;c[y>>2]=b;c[D>>2]=c[B>>2];c[A>>2]=c[c[D>>2]>>2];c[C>>2]=c[y>>2];c[c[B>>2]>>2]=c[c[C>>2]>>2];c[z>>2]=A;c[c[y>>2]>>2]=c[c[z>>2]>>2];b=(c[e>>2]|0)+8|0;c[v>>2]=a+4;c[s>>2]=b;c[x>>2]=c[v>>2];c[u>>2]=c[c[x>>2]>>2];c[w>>2]=c[s>>2];c[c[v>>2]>>2]=c[c[w>>2]>>2];c[t>>2]=u;c[c[s>>2]>>2]=c[c[t>>2]>>2];c[r>>2]=a;c[q>>2]=(c[r>>2]|0)+8;c[m>>2]=c[q>>2];m=c[m>>2]|0;c[p>>2]=c[e>>2];c[o>>2]=(c[p>>2]|0)+12;c[n>>2]=c[o>>2];b=c[n>>2]|0;c[j>>2]=m;c[f>>2]=b;c[l>>2]=c[j>>2];c[h>>2]=c[c[l>>2]>>2];c[k>>2]=c[f>>2];c[c[j>>2]>>2]=c[c[k>>2]>>2];c[g>>2]=h;c[c[f>>2]>>2]=c[c[g>>2]>>2];c[c[e>>2]>>2]=c[(c[e>>2]|0)+4>>2];c[d+36>>2]=a;i=d;return}function Ec(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Gc(c[d>>2]|0);i=b;return}function Fc(a){a=a|0;ab(a|0)|0;Zw()}function Gc(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;r=i;i=i+128|0;l=r+72|0;k=r+44|0;j=r+12|0;h=r+104|0;g=r+24|0;f=r+16|0;q=r+20|0;p=r+76|0;d=r+52|0;e=r+28|0;m=r+32|0;n=r+36|0;o=r+40|0;w=r+108|0;B=r+112|0;C=r+116|0;A=r;x=r+56|0;y=r+60|0;z=r+120|0;v=r+68|0;u=r+88|0;t=r+92|0;E=r+96|0;s=r+100|0;G=r+8|0;F=r+80|0;I=r+84|0;H=r+121|0;J=r+48|0;D=r+64|0;c[D>>2]=b;D=c[D>>2]|0;c[J>>2]=D;J=c[J>>2]|0;b=c[J+4>>2]|0;c[F>>2]=J;c[I>>2]=b;F=c[F>>2]|0;b=c[I>>2]|0;a[G+0>>0]=a[H+0>>0]|0;c[E>>2]=F;c[s>>2]=b;b=c[E>>2]|0;while(1){if((c[s>>2]|0)==(c[b+8>>2]|0))break;c[t>>2]=b;c[u>>2]=(c[t>>2]|0)+12;c[v>>2]=c[u>>2];J=c[(c[v>>2]|0)+4>>2]|0;H=b+8|0;I=(c[H>>2]|0)+ -32|0;c[H>>2]=I;c[w>>2]=I;I=c[w>>2]|0;c[x>>2]=J;c[y>>2]=I;I=c[x>>2]|0;J=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=I;c[C>>2]=J}if((c[D>>2]|0)==0){i=r;return}c[q>>2]=D;c[f>>2]=(c[q>>2]|0)+12;c[g>>2]=c[f>>2];H=c[(c[g>>2]|0)+4>>2]|0;J=c[D>>2]|0;c[h>>2]=D;I=c[h>>2]|0;c[j>>2]=I;c[k>>2]=(c[j>>2]|0)+12;c[l>>2]=c[k>>2];I=((c[c[l>>2]>>2]|0)-(c[I>>2]|0)|0)/32|0;c[m>>2]=H;c[n>>2]=J;c[o>>2]=I;I=c[n>>2]|0;J=c[o>>2]|0;c[p>>2]=c[m>>2];c[d>>2]=I;c[e>>2]=J;Sw(c[d>>2]|0);i=r;return}function Hc(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+80|0;q=h+44|0;r=h+40|0;s=h+8|0;u=h+12|0;t=h+76|0;k=h+36|0;g=h+16|0;f=h+20|0;d=h+68|0;e=h+32|0;l=h;n=h+48|0;j=h+52|0;m=h+77|0;v=h+60|0;w=h+64|0;x=h+28|0;y=h+24|0;p=h+56|0;o=h+72|0;c[y>>2]=b;c[x>>2]=c[y>>2];c[w>>2]=(c[x>>2]|0)+8;c[v>>2]=c[w>>2];c[u>>2]=c[v>>2];b=c[u>>2]|0;a[s+0>>0]=a[t+0>>0]|0;c[r>>2]=b;c[q>>2]=c[r>>2];c[p>>2]=134217727;c[o>>2]=4294967295/2|0;c[n>>2]=p;c[j>>2]=o;b=c[n>>2]|0;j=c[j>>2]|0;a[l+0>>0]=a[m+0>>0]|0;c[d>>2]=b;c[e>>2]=j;j=c[e>>2]|0;b=c[d>>2]|0;c[k>>2]=l;c[g>>2]=j;c[f>>2]=b;i=h;return c[((c[c[g>>2]>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0?c[e>>2]|0:c[d>>2]|0)>>2]|0}function Ic(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;q=i;i=i+176|0;C=q+64|0;x=q+60|0;z=q;B=q+148|0;A=q+156|0;y=q+56|0;E=q+12|0;G=q+112|0;F=q+16|0;D=q+20|0;H=q+24|0;J=q+28|0;I=q+32|0;p=q+36|0;g=q+40|0;r=q+108|0;m=q+144|0;n=q+160|0;f=q+164|0;u=q+68|0;v=q+76|0;w=q+80|0;t=q+84|0;o=q+92|0;h=q+96|0;j=q+100|0;N=q+104|0;O=q+124|0;P=q+44|0;M=q+8|0;Q=q+48|0;k=q+132|0;l=q+52|0;K=q+140|0;L=q+120|0;s=q+116|0;c[Q>>2]=a;c[k>>2]=b;c[l>>2]=d;c[K>>2]=e;e=c[Q>>2]|0;c[O>>2]=M;c[P>>2]=-1;b=c[P>>2]|0;c[N>>2]=c[O>>2];c[q+4>>2]=b;c[c[N>>2]>>2]=0;c[L>>2]=c[M>>2];c[q+128>>2]=L;b=c[K>>2]|0;c[H>>2]=e+12;c[J>>2]=0;c[I>>2]=b;b=c[J>>2]|0;d=c[I>>2]|0;c[G>>2]=c[H>>2];c[F>>2]=b;c[D>>2]=d;d=c[G>>2]|0;c[E>>2]=F;b=c[c[E>>2]>>2]|0;c[C>>2]=c[D>>2];a=c[C>>2]|0;c[B>>2]=d;c[A>>2]=b;c[y>>2]=a;a=c[B>>2]|0;c[z>>2]=A;c[a>>2]=c[c[z>>2]>>2];c[x>>2]=c[y>>2];c[a+4>>2]=c[x>>2];if((c[k>>2]|0)!=0){c[r>>2]=e;c[g>>2]=(c[r>>2]|0)+12;c[p>>2]=c[g>>2];Q=c[k>>2]|0;c[n>>2]=c[(c[p>>2]|0)+4>>2];c[f>>2]=Q;Q=c[f>>2]|0;c[q+136>>2]=c[n>>2];c[m>>2]=Q;c[q+152>>2]=0;Q=Qw(c[m>>2]<<5)|0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P<<5)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P<<5)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}else{c[v>>2]=t;c[w>>2]=-1;Q=c[w>>2]|0;c[u>>2]=c[v>>2];c[q+72>>2]=Q;c[c[u>>2]>>2]=0;c[s>>2]=c[t>>2];c[q+88>>2]=s;Q=0;c[e>>2]=Q;Q=c[e>>2]|0;P=c[l>>2]|0;P=Q+(P<<5)|0;Q=e+8|0;c[Q>>2]=P;Q=e+4|0;c[Q>>2]=P;Q=c[e>>2]|0;P=c[k>>2]|0;P=Q+(P<<5)|0;c[j>>2]=e;Q=c[j>>2]|0;Q=Q+12|0;c[h>>2]=Q;Q=c[h>>2]|0;c[o>>2]=Q;Q=c[o>>2]|0;c[Q>>2]=P;i=q;return}}function Jc(a){a=a|0;var d=0,e=0;d=i;i=i+16|0;e=d;c[e>>2]=a;a=c[e>>2]|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[a+16>>2]=17;b[a+20>>1]=16;b[a+22>>1]=0;c[a+24>>2]=0;c[a+28>>2]=0;i=d;return}function Kc(a){a=a|0;var b=0,d=0,e=0;d=i;i=i+16|0;e=d+4|0;b=d;c[e>>2]=a;c[b>>2]=da((Lc(c[e>>2]|0)|0)&16777215,506832829)|0;i=d;return(c[b>>2]|0)>>>17|0}function Lc(b){b=b|0;var d=0,e=0,f=0;e=i;i=i+16|0;f=e+4|0;d=e;c[f>>2]=b;b=c[f>>2]|0;a[d+0>>0]=a[b+0>>0]|0;a[d+1>>0]=a[b+1>>0]|0;a[d+2>>0]=a[b+2>>0]|0;a[d+3>>0]=a[b+3>>0]|0;i=e;return c[d>>2]|0}function Mc(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+32|0;h=f+20|0;l=f+16|0;m=f+12|0;g=f+8|0;k=f+4|0;j=f;c[h>>2]=a;c[l>>2]=b;c[m>>2]=e;c[g>>2]=0;c[k>>2]=(c[l>>2]|0)+(c[m>>2]|0);c[j>>2]=c[l>>2];while(1){if(!((c[j>>2]|0)>>>0<=((c[k>>2]|0)+ -4|0)>>>0))break;m=Lc(c[j>>2]|0)|0;if((m|0)!=(Lc((c[h>>2]|0)+(c[g>>2]|0)|0)|0))break;c[j>>2]=(c[j>>2]|0)+4;c[g>>2]=(c[g>>2]|0)+4}while(1){if(!((c[j>>2]|0)>>>0<(c[k>>2]|0)>>>0)){e=8;break}if((d[(c[h>>2]|0)+(c[g>>2]|0)>>0]|0|0)!=(d[c[j>>2]>>0]|0|0)){e=8;break}c[j>>2]=(c[j>>2]|0)+1;c[g>>2]=(c[g>>2]|0)+1}if((e|0)==8){i=f;return c[g>>2]|0}return 0}function Nc(a,b,d,e,f,g){a=+a;b=+b;d=+d;e=+e;f=f|0;g=g|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;k=i;i=i+48|0;q=k;o=k+16|0;m=k+8|0;n=k+32|0;j=k+40|0;l=k+44|0;p=k+24|0;h[q>>3]=a;h[o>>3]=b;h[m>>3]=d;h[n>>3]=e;c[j>>2]=f;c[l>>2]=g;h[p>>3]=0.0;g=c[j>>2]|0;if((g|0)==3)h[p>>3]=+h[m>>3];else if((g|0)==2)h[p>>3]=+h[n>>3];else h[p>>3]=+h[o>>3]+ +((c[j>>2]|0)-4|0)*+h[q>>3];h[p>>3]=+h[p>>3]- +h[40+(c[l>>2]<<3)>>3];i=k;return+(+h[p>>3])}function Oc(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;if((c[d>>2]|0)==0){d=-1;i=b;return d|0}d=31^(zy(c[d>>2]|0)|0);i=b;return d|0}function Pc(a,b,d,e,f,g){a=+a;b=+b;d=+d;e=+e;f=f|0;g=g|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;k=i;i=i+48|0;q=k;o=k+16|0;m=k+8|0;n=k+32|0;j=k+40|0;l=k+44|0;p=k+24|0;h[q>>3]=a;h[o>>3]=b;h[m>>3]=d;h[n>>3]=e;c[j>>2]=f;c[l>>2]=g;h[p>>3]=0.0;g=c[j>>2]|0;if((g|0)==3)h[p>>3]=+h[m>>3];else if((g|0)==2)h[p>>3]=+h[n>>3];else h[p>>3]=+h[o>>3]+ +((c[j>>2]|0)-4|0)*+h[q>>3];a=+(Oc(c[l>>2]|0)|0)*1.2;h[p>>3]=+h[p>>3]-a;i=k;return+(+h[p>>3])}function Qc(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;j=i;i=i+176|0;p=j+72|0;o=j+68|0;q=j+128|0;r=j+124|0;g=j+160|0;h=j+36|0;e=j+28|0;k=j+120|0;l=j+104|0;m=j+60|0;u=j+56|0;t=j;w=j+44|0;v=j+16|0;C=j+52|0;y=j+116|0;z=j+140|0;A=j+148|0;B=j+156|0;F=j+164|0;G=j+168|0;H=j+76|0;I=j+80|0;E=j+40|0;J=j+88|0;D=j+92|0;K=j+96|0;x=j+48|0;M=j+108|0;L=j+8|0;O=j+132|0;N=j+24|0;R=j+64|0;Q=j+112|0;P=j+136|0;f=j+32|0;T=j+100|0;S=j+144|0;n=j+84|0;s=j+152|0;c[T>>2]=b;c[S>>2]=d;b=c[T>>2]|0;c[R>>2]=b+20;c[Q>>2]=S;Vc(P,c[R>>2]|0,c[Q>>2]|0);a[N+0>>0]=a[P+0>>0]|0;a[N+1>>0]=a[P+1>>0]|0;a[N+2>>0]=a[P+2>>0]|0;a[N+3>>0]=a[P+3>>0]|0;c[O>>2]=n;d=c[O>>2]|0;a[L+0>>0]=a[N+0>>0]|0;a[L+1>>0]=a[N+1>>0]|0;a[L+2>>0]=a[N+2>>0]|0;a[L+3>>0]=a[N+3>>0]|0;c[M>>2]=d;d=c[M>>2]|0;c[d+0>>2]=c[L+0>>2];c[K>>2]=b+20;c[J>>2]=c[K>>2];c[H>>2]=E;c[I>>2]=-1;b=c[I>>2]|0;c[F>>2]=c[H>>2];c[G>>2]=b;c[c[F>>2]>>2]=0;c[D>>2]=c[E>>2];c[C>>2]=D;c[A>>2]=x;c[B>>2]=0;b=c[B>>2]|0;c[y>>2]=c[A>>2];c[z>>2]=b;c[c[y>>2]>>2]=c[z>>2];a[v+0>>0]=a[x+0>>0]|0;a[v+1>>0]=a[x+1>>0]|0;a[v+2>>0]=a[x+2>>0]|0;a[v+3>>0]=a[x+3>>0]|0;c[w>>2]=s;b=c[w>>2]|0;a[t+0>>0]=a[v+0>>0]|0;a[t+1>>0]=a[v+1>>0]|0;a[t+2>>0]=a[v+2>>0]|0;a[t+3>>0]=a[v+3>>0]|0;c[u>>2]=b;b=c[u>>2]|0;c[b+0>>2]=c[t+0>>2];c[q>>2]=n;c[r>>2]=s;b=c[r>>2]|0;c[p>>2]=c[q>>2];c[o>>2]=b;if((c[c[p>>2]>>2]|0)==(c[c[o>>2]>>2]|0)){c[f>>2]=0;T=c[f>>2]|0;i=j;return T|0}else{c[m>>2]=n;c[l>>2]=c[m>>2];c[k>>2]=(c[c[l>>2]>>2]|0)+8;c[e>>2]=c[k>>2];c[h>>2]=c[e>>2];c[g>>2]=c[h>>2];c[f>>2]=c[(c[g>>2]|0)+4>>2];T=c[f>>2]|0;i=j;return T|0}return 0}function Rc(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;o=i;i=i+192|0;u=o+76|0;t=o+160|0;v=o+36|0;w=o+68|0;m=o+72|0;n=o+128|0;g=o+28|0;p=o+124|0;q=o+104|0;r=o+60|0;z=o+56|0;y=o;B=o+44|0;A=o+16|0;H=o+52|0;D=o+120|0;E=o+140|0;F=o+148|0;G=o+156|0;K=o+164|0;L=o+172|0;M=o+176|0;N=o+80|0;J=o+40|0;O=o+88|0;I=o+92|0;P=o+96|0;C=o+48|0;R=o+108|0;Q=o+8|0;T=o+112|0;S=o+24|0;W=o+64|0;V=o+136|0;U=o+116|0;h=o+180|0;Y=o+100|0;X=o+144|0;l=o+84|0;j=o+152|0;s=o+132|0;x=o+168|0;k=o+32|0;c[Y>>2]=b;c[X>>2]=d;c[l>>2]=e;c[j>>2]=f;b=c[Y>>2]|0;d=c[X>>2]|0;c[W>>2]=b;c[V>>2]=d;Sc(U,c[W>>2]|0,c[V>>2]|0);a[S+0>>0]=a[U+0>>0]|0;a[S+1>>0]=a[U+1>>0]|0;a[S+2>>0]=a[U+2>>0]|0;a[S+3>>0]=a[U+3>>0]|0;c[T>>2]=s;d=c[T>>2]|0;a[Q+0>>0]=a[S+0>>0]|0;a[Q+1>>0]=a[S+1>>0]|0;a[Q+2>>0]=a[S+2>>0]|0;a[Q+3>>0]=a[S+3>>0]|0;c[R>>2]=d;d=c[R>>2]|0;c[d+0>>2]=c[Q+0>>2];c[P>>2]=b;c[O>>2]=c[P>>2];c[M>>2]=J;c[N>>2]=-1;b=c[N>>2]|0;c[K>>2]=c[M>>2];c[L>>2]=b;c[c[K>>2]>>2]=0;c[I>>2]=c[J>>2];c[H>>2]=I;c[F>>2]=C;c[G>>2]=0;b=c[G>>2]|0;c[D>>2]=c[F>>2];c[E>>2]=b;c[c[D>>2]>>2]=c[E>>2];a[A+0>>0]=a[C+0>>0]|0;a[A+1>>0]=a[C+1>>0]|0;a[A+2>>0]=a[C+2>>0]|0;a[A+3>>0]=a[C+3>>0]|0;c[B>>2]=x;b=c[B>>2]|0;a[y+0>>0]=a[A+0>>0]|0;a[y+1>>0]=a[A+1>>0]|0;a[y+2>>0]=a[A+2>>0]|0;a[y+3>>0]=a[A+3>>0]|0;c[z>>2]=b;b=c[z>>2]|0;c[b+0>>2]=c[y+0>>2];c[v>>2]=s;c[w>>2]=x;b=c[w>>2]|0;c[u>>2]=c[v>>2];c[t>>2]=b;if((c[c[u>>2]>>2]|0)==(c[c[t>>2]>>2]|0)){a[h>>0]=0;Y=a[h>>0]|0;Y=Y&1;i=o;return Y|0}else{c[r>>2]=s;c[q>>2]=c[r>>2];c[p>>2]=(c[c[q>>2]>>2]|0)+8;c[g>>2]=c[p>>2];c[n>>2]=c[g>>2];c[m>>2]=c[n>>2];c[k>>2]=c[(c[m>>2]|0)+12>>2];c[c[l>>2]>>2]=c[k>>2]&63;c[c[j>>2]>>2]=c[k>>2]>>6;a[h>>0]=1;Y=a[h>>0]|0;Y=Y&1;i=o;return Y|0}return 0}function Sc(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0;u=i;i=i+512|0;ab=u+224|0;$a=u+476|0;_a=u+468|0;fb=u+460|0;eb=u+208|0;ib=u+212|0;cb=u+216|0;db=u+220|0;bb=u+452|0;hb=u+20|0;Xa=u+24|0;Ya=u+28|0;Va=u+32|0;Wa=u+36|0;Ua=u+40|0;ta=u+428|0;Sa=u+44|0;Ta=u+48|0;Ea=u+52|0;Da=u+56|0;Ca=u+60|0;kb=u+64|0;jb=u+68|0;mb=u+72|0;nb=u+76|0;ob=u+80|0;pb=u+84|0;qb=u+88|0;rb=u+92|0;sb=u+96|0;ub=u+100|0;tb=u+424|0;Q=u+104|0;Z=u+108|0;Y=u+112|0;X=u+116|0;ca=u+120|0;ba=u+124|0;aa=u+128|0;$=u+132|0;_=u+136|0;ha=u+140|0;ga=u+144|0;fa=u+148|0;ea=u+152|0;da=u+156|0;D=u+160|0;K=u+164|0;J=u+168|0;I=u+172|0;P=u+176|0;O=u+180|0;N=u+184|0;M=u+188|0;L=u+192|0;W=u+196|0;V=u+448|0;U=u+456|0;T=u+464|0;S=u+472|0;H=u+480|0;G=u+488|0;F=u+492|0;oa=u+420|0;na=u+228|0;ma=u+232|0;ra=u+236|0;qa=u+240|0;pa=u+244|0;va=u+248|0;ua=u+252|0;g=u+256|0;sa=u+260|0;A=u+264|0;B=u+268|0;C=u+272|0;ya=u+276|0;xa=u+280|0;wa=u+284|0;Ba=u+288|0;Aa=u+292|0;za=u+296|0;Pa=u+300|0;Oa=u+304|0;Na=u+308|0;Ma=u+312|0;w=u+496|0;E=u+320|0;R=u+324|0;y=u+328|0;z=u+332|0;x=u+336|0;Ja=u+340|0;Ka=u+344|0;La=u+348|0;Ga=u+352|0;Ha=u+356|0;Ia=u+360|0;ka=u+364|0;la=u+368|0;ia=u+372|0;ja=u+376|0;p=u+380|0;s=u+384|0;t=u+388|0;q=u+392|0;r=u+396|0;m=u+400|0;n=u+404|0;k=u+408|0;l=u+412|0;j=u+416|0;h=u+16|0;o=u+12|0;vb=u+440|0;wb=u+432|0;xb=u;yb=u+8|0;Fa=u+444|0;lb=u+200|0;Ra=u+436|0;Qa=u+4|0;v=u+204|0;gb=u+484|0;Za=u+316|0;c[yb>>2]=e;c[Fa>>2]=f;f=c[yb>>2]|0;c[xb>>2]=f;c[wb>>2]=(c[xb>>2]|0)+12;c[vb>>2]=c[wb>>2];e=c[Fa>>2]|0;c[ub>>2]=c[vb>>2];c[tb>>2]=e;c[lb>>2]=Tc(c[ub>>2]|0,c[tb>>2]|0)|0;c[sb>>2]=f;c[rb>>2]=c[sb>>2];c[qb>>2]=c[rb>>2];c[pb>>2]=c[qb>>2];c[ob>>2]=(c[pb>>2]|0)+4;c[nb>>2]=c[ob>>2];c[mb>>2]=c[nb>>2];c[Ra>>2]=c[c[mb>>2]>>2];a:do if((c[Ra>>2]|0)!=0){yb=c[Ra>>2]|0;c[kb>>2]=c[lb>>2];c[jb>>2]=yb;lb=c[kb>>2]|0;kb=c[jb>>2]|0;if((c[jb>>2]&(c[jb>>2]|0)-1|0)!=0)jb=(lb>>>0)%(kb>>>0)|0;else jb=lb&kb-1;c[Qa>>2]=jb;yb=c[Qa>>2]|0;c[_a>>2]=f;c[fb>>2]=yb;yb=c[fb>>2]|0;c[$a>>2]=c[_a>>2];c[ab>>2]=c[$a>>2];c[v>>2]=c[(c[c[ab>>2]>>2]|0)+(yb<<2)>>2];yb=c[v>>2]|0;c[cb>>2]=bb;c[db>>2]=-1;xb=c[db>>2]|0;c[eb>>2]=c[cb>>2];c[ib>>2]=xb;c[c[eb>>2]>>2]=0;c[gb>>2]=c[bb>>2];c[hb>>2]=gb;if((yb|0)!=0){c[v>>2]=c[c[v>>2]>>2];while(1){yb=c[v>>2]|0;c[Va>>2]=Ua;c[Wa>>2]=-1;xb=c[Wa>>2]|0;c[Xa>>2]=c[Va>>2];c[Ya>>2]=xb;c[c[Xa>>2]>>2]=0;c[Za>>2]=c[Ua>>2];c[ta>>2]=Za;if((yb|0)==0)break a;$a=c[Ra>>2]|0;c[Sa>>2]=c[(c[v>>2]|0)+4>>2];c[Ta>>2]=$a;$a=c[Sa>>2]|0;_a=c[Ta>>2]|0;if((c[Ta>>2]&(c[Ta>>2]|0)-1|0)!=0)_a=($a>>>0)%(_a>>>0)|0;else _a=$a&_a-1;if((_a|0)!=(c[Qa>>2]|0))break a;c[Ca>>2]=f;c[Da>>2]=(c[Ca>>2]|0)+16;c[Ea>>2]=c[Da>>2];_a=(c[v>>2]|0)+8|0;yb=c[Fa>>2]|0;c[Ga>>2]=c[Ea>>2];c[Ha>>2]=_a;c[Ia>>2]=yb;yb=c[Ha>>2]|0;_a=c[Ia>>2]|0;c[Ja>>2]=c[Ga>>2];c[Ka>>2]=yb;c[La>>2]=_a;_a=c[La>>2]|0;c[E>>2]=c[Ka>>2];c[R>>2]=_a;c[Ma>>2]=c[E>>2];_a=c[Ma>>2]|0;c[Na>>2]=_a;c[Oa>>2]=c[Na>>2];c[Pa>>2]=c[Oa>>2];if((d[c[Pa>>2]>>0]&1|0)!=0){c[wa>>2]=_a;c[xa>>2]=c[wa>>2];c[ya>>2]=c[xa>>2];_a=c[(c[ya>>2]|0)+4>>2]|0}else{c[za>>2]=_a;c[Aa>>2]=c[za>>2];c[Ba>>2]=c[Aa>>2];_a=d[c[Ba>>2]>>0]>>1}c[y>>2]=_a;_a=c[y>>2]|0;c[sa>>2]=c[R>>2];$a=c[sa>>2]|0;c[g>>2]=$a;c[ua>>2]=c[g>>2];c[va>>2]=c[ua>>2];if((d[c[va>>2]>>0]&1|0)!=0){c[ma>>2]=$a;c[na>>2]=c[ma>>2];c[oa>>2]=c[na>>2];$a=c[(c[oa>>2]|0)+4>>2]|0}else{c[pa>>2]=$a;c[qa>>2]=c[pa>>2];c[ra>>2]=c[qa>>2];$a=d[c[ra>>2]>>0]>>1}do if((_a|0)==($a|0)){c[da>>2]=c[E>>2];c[ea>>2]=c[da>>2];_a=c[ea>>2]|0;c[fa>>2]=_a;c[ga>>2]=c[fa>>2];c[ha>>2]=c[ga>>2];if((d[c[ha>>2]>>0]&1|0)!=0){c[X>>2]=_a;c[Y>>2]=c[X>>2];c[Z>>2]=c[Y>>2];_a=c[(c[Z>>2]|0)+8>>2]|0}else{c[_>>2]=_a;c[$>>2]=c[_>>2];c[aa>>2]=c[$>>2];c[ba>>2]=(c[aa>>2]|0)+1;c[ca>>2]=c[ba>>2];_a=c[ca>>2]|0}c[Q>>2]=_a;c[z>>2]=c[Q>>2];c[S>>2]=c[R>>2];c[T>>2]=c[S>>2];_a=c[T>>2]|0;c[U>>2]=_a;c[V>>2]=c[U>>2];c[W>>2]=c[V>>2];if((d[c[W>>2]>>0]&1|0)!=0){c[I>>2]=_a;c[J>>2]=c[I>>2];c[K>>2]=c[J>>2];_a=c[(c[K>>2]|0)+8>>2]|0}else{c[L>>2]=_a;c[M>>2]=c[L>>2];c[N>>2]=c[M>>2];c[O>>2]=(c[N>>2]|0)+1;c[P>>2]=c[O>>2];_a=c[P>>2]|0}c[D>>2]=_a;c[x>>2]=c[D>>2];c[F>>2]=c[E>>2];c[G>>2]=c[F>>2];c[H>>2]=c[G>>2];if((d[c[H>>2]>>0]&1|0)!=0){xb=c[x>>2]|0;yb=c[y>>2]|0;c[A>>2]=c[z>>2];c[B>>2]=xb;c[C>>2]=yb;a[w>>0]=(sy(c[A>>2]|0,c[B>>2]|0,c[C>>2]|0)|0)==0&1;break}while(1){if((c[y>>2]|0)==0){_a=32;break}if((a[c[z>>2]>>0]|0)!=(a[c[x>>2]>>0]|0)){_a=30;break}c[y>>2]=(c[y>>2]|0)+ -1;c[z>>2]=(c[z>>2]|0)+1;c[x>>2]=(c[x>>2]|0)+1}if((_a|0)==30){a[w>>0]=0;break}else if((_a|0)==32){a[w>>0]=1;break}}else a[w>>0]=0;while(0);_a=c[v>>2]|0;if(a[w>>0]&1)break;c[v>>2]=c[_a>>2]}c[ia>>2]=b;c[ja>>2]=_a;yb=c[ja>>2]|0;c[ka>>2]=c[ia>>2];c[la>>2]=yb;c[c[ka>>2]>>2]=c[la>>2];i=u;return}}while(0);c[h>>2]=f;c[k>>2]=j;c[l>>2]=-1;yb=c[l>>2]|0;c[m>>2]=c[k>>2];c[n>>2]=yb;c[c[m>>2]>>2]=0;c[o>>2]=c[j>>2];c[p>>2]=o;c[q>>2]=b;c[r>>2]=0;yb=c[r>>2]|0;c[s>>2]=c[q>>2];c[t>>2]=yb;c[c[s>>2]>>2]=c[t>>2];i=u;return}function Tc(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;k=i;i=i+176|0;n=k+128|0;o=k+148|0;f=k;e=k+56|0;m=k+60|0;l=k+116|0;p=k+12|0;q=k+112|0;r=k+16|0;s=k+20|0;u=k+24|0;x=k+28|0;w=k+32|0;B=k+36|0;C=k+40|0;y=k+108|0;A=k+164|0;z=k+136|0;v=k+144|0;D=k+152|0;E=k+160|0;F=k+64|0;G=k+68|0;H=k+72|0;g=k+76|0;h=k+80|0;j=k+168|0;I=k+88|0;J=k+92|0;K=k+96|0;Q=k+100|0;M=k+104|0;N=k+4|0;O=k+124|0;P=k+44|0;L=k+8|0;R=k+48|0;S=k+132|0;T=k+52|0;U=k+140|0;V=k+120|0;t=k+84|0;c[k+156>>2]=a;c[t>>2]=b;c[V>>2]=c[t>>2];c[U>>2]=c[V>>2];b=c[U>>2]|0;c[T>>2]=b;c[S>>2]=c[T>>2];c[R>>2]=c[S>>2];if(((d[c[R>>2]>>0]|0)&1|0)!=0){c[Q>>2]=b;c[K>>2]=c[Q>>2];c[J>>2]=c[K>>2];J=c[(c[J>>2]|0)+8>>2]|0}else{c[L>>2]=b;c[P>>2]=c[L>>2];c[O>>2]=c[P>>2];c[N>>2]=(c[O>>2]|0)+1;c[M>>2]=c[N>>2];J=c[M>>2]|0}c[I>>2]=J;I=c[I>>2]|0;c[H>>2]=c[t>>2];c[G>>2]=c[H>>2];G=c[G>>2]|0;c[F>>2]=G;c[E>>2]=c[F>>2];c[D>>2]=c[E>>2];if(((d[c[D>>2]>>0]|0)&1|0)!=0){c[B>>2]=G;c[w>>2]=c[B>>2];c[x>>2]=c[w>>2];v=c[(c[x>>2]|0)+8>>2]|0}else{c[v>>2]=G;c[z>>2]=c[v>>2];c[A>>2]=c[z>>2];c[y>>2]=(c[A>>2]|0)+1;c[C>>2]=c[y>>2];v=c[C>>2]|0}c[u>>2]=v;u=c[u>>2]|0;c[s>>2]=c[t>>2];s=c[s>>2]|0;c[r>>2]=s;c[q>>2]=c[r>>2];c[p>>2]=c[q>>2];if(((d[c[p>>2]>>0]|0)&1|0)!=0){c[f>>2]=s;c[o>>2]=c[f>>2];c[n>>2]=c[o>>2];U=c[(c[n>>2]|0)+4>>2]|0;U=u+U|0;c[g>>2]=I;c[h>>2]=U;U=c[g>>2]|0;T=c[h>>2]|0;V=c[g>>2]|0;V=T-V|0;V=Uc(j,U,V)|0;i=k;return V|0}else{c[l>>2]=s;c[m>>2]=c[l>>2];c[e>>2]=c[m>>2];U=(d[c[e>>2]>>0]|0)>>1;U=u+U|0;c[g>>2]=I;c[h>>2]=U;U=c[g>>2]|0;T=c[h>>2]|0;V=c[g>>2]|0;V=T-V|0;V=Uc(j,U,V)|0;i=k;return V|0}return 0}function Uc(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;j=i;i=i+48|0;m=j;n=j+16|0;p=j+4|0;l=j+32|0;k=j+24|0;h=j+20|0;o=j+8|0;c[j+28>>2]=b;c[p>>2]=e;c[l>>2]=f;c[j+36>>2]=1540483477;c[j+12>>2]=24;c[k>>2]=c[l>>2];c[h>>2]=c[p>>2];while(1){if(!((c[l>>2]|0)>>>0>=4))break;c[m>>2]=c[h>>2];p=c[m>>2]|0;a[n+0>>0]=a[p+0>>0]|0;a[n+1>>0]=a[p+1>>0]|0;a[n+2>>0]=a[p+2>>0]|0;a[n+3>>0]=a[p+3>>0]|0;c[o>>2]=c[n>>2];c[o>>2]=da(c[o>>2]|0,1540483477)|0;c[o>>2]=c[o>>2]^(c[o>>2]|0)>>>24;c[o>>2]=da(c[o>>2]|0,1540483477)|0;c[k>>2]=da(c[k>>2]|0,1540483477)|0;c[k>>2]=c[k>>2]^c[o>>2];c[h>>2]=(c[h>>2]|0)+4;c[l>>2]=(c[l>>2]|0)-4}l=c[l>>2]|0;if((l|0)==3){c[k>>2]=c[k>>2]^(d[(c[h>>2]|0)+2>>0]|0)<<16;g=6}else if((l|0)==2)g=6;else if((l|0)!=1){p=c[k>>2]|0;p=p>>>13;b=c[k>>2]|0;p=b^p;c[k>>2]=p;p=c[k>>2]|0;p=da(p,1540483477)|0;c[k>>2]=p;p=c[k>>2]|0;p=p>>>15;b=c[k>>2]|0;p=b^p;c[k>>2]=p;p=c[k>>2]|0;i=j;return p|0}if((g|0)==6)c[k>>2]=c[k>>2]^(d[(c[h>>2]|0)+1>>0]|0)<<8;c[k>>2]=c[k>>2]^(d[c[h>>2]>>0]|0);c[k>>2]=da(c[k>>2]|0,1540483477)|0;p=c[k>>2]|0;p=p>>>13;b=c[k>>2]|0;p=b^p;c[k>>2]=p;p=c[k>>2]|0;p=da(p,1540483477)|0;c[k>>2]=p;p=c[k>>2]|0;p=p>>>15;b=c[k>>2]|0;p=b^p;c[k>>2]=p;p=c[k>>2]|0;i=j;return p|0}function Vc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0;s=i;i=i+272|0;la=s+252|0;ma=s+244|0;na=s+196|0;ea=s+104|0;fa=s+108|0;ga=s+236|0;ha=s+204|0;ia=s+16|0;ja=s+20|0;ka=s+24|0;ca=s+28|0;ba=s+32|0;U=s+36|0;T=s+40|0;S=s+200|0;X=s+44|0;Y=s+48|0;Z=s+52|0;W=s+56|0;aa=s+60|0;V=s+64|0;$=s+68|0;P=s+72|0;Q=s+76|0;N=s+80|0;O=s+84|0;M=s+88|0;K=s+224|0;e=s+232|0;L=s+240|0;z=s+248|0;y=s+256|0;x=s+264|0;F=s+112|0;G=s+116|0;H=s+120|0;C=s+124|0;D=s+128|0;E=s+132|0;v=s+136|0;w=s+140|0;t=s+144|0;u=s+148|0;n=s+152|0;q=s+156|0;r=s+160|0;o=s+164|0;p=s+168|0;k=s+172|0;l=s+176|0;h=s+180|0;j=s+184|0;g=s+188|0;f=s+192|0;m=s+12|0;oa=s+8|0;pa=s+216|0;qa=s+92|0;ra=s+220|0;B=s+4|0;da=s+212|0;J=s+96|0;I=s+228|0;A=s+208|0;_=s;R=s+100|0;c[ra>>2]=b;c[B>>2]=d;d=c[ra>>2]|0;c[qa>>2]=d;c[pa>>2]=(c[qa>>2]|0)+12;c[oa>>2]=c[pa>>2];b=c[B>>2]|0;c[ma>>2]=c[oa>>2];c[na>>2]=b;b=c[c[na>>2]>>2]|0;c[s+260>>2]=c[ma>>2];c[la>>2]=b;c[da>>2]=c[la>>2];c[ka>>2]=d;c[ja>>2]=c[ka>>2];c[ia>>2]=c[ja>>2];c[ha>>2]=c[ia>>2];c[ga>>2]=(c[ha>>2]|0)+4;c[fa>>2]=c[ga>>2];c[ea>>2]=c[fa>>2];c[J>>2]=c[c[ea>>2]>>2];a:do if((c[J>>2]|0)!=0){ra=c[J>>2]|0;c[ca>>2]=c[da>>2];c[ba>>2]=ra;da=c[ca>>2]|0;ca=c[ba>>2]|0;if((c[ba>>2]&(c[ba>>2]|0)-1|0)!=0)ba=(da>>>0)%(ca>>>0)|0;else ba=da&ca-1;c[I>>2]=ba;ra=c[I>>2]|0;c[S>>2]=d;c[X>>2]=ra;ra=c[X>>2]|0;c[T>>2]=c[S>>2];c[U>>2]=c[T>>2];c[A>>2]=c[(c[c[U>>2]>>2]|0)+(ra<<2)>>2];ra=c[A>>2]|0;c[W>>2]=V;c[aa>>2]=-1;qa=c[aa>>2]|0;c[Y>>2]=c[W>>2];c[Z>>2]=qa;c[c[Y>>2]>>2]=0;c[_>>2]=c[V>>2];c[$>>2]=_;if((ra|0)!=0){c[A>>2]=c[c[A>>2]>>2];while(1){ra=c[A>>2]|0;c[N>>2]=M;c[O>>2]=-1;qa=c[O>>2]|0;c[P>>2]=c[N>>2];c[Q>>2]=qa;c[c[P>>2]>>2]=0;c[R>>2]=c[M>>2];c[K>>2]=R;if((ra|0)==0)break a;T=c[J>>2]|0;c[e>>2]=c[(c[A>>2]|0)+4>>2];c[L>>2]=T;T=c[e>>2]|0;S=c[L>>2]|0;if((c[L>>2]&(c[L>>2]|0)-1|0)!=0)S=(T>>>0)%(S>>>0)|0;else S=T&S-1;if((S|0)!=(c[I>>2]|0))break a;c[x>>2]=d;c[y>>2]=(c[x>>2]|0)+16;c[z>>2]=c[y>>2];S=(c[A>>2]|0)+8|0;ra=c[B>>2]|0;c[C>>2]=c[z>>2];c[D>>2]=S;c[E>>2]=ra;ra=c[D>>2]|0;S=c[E>>2]|0;c[F>>2]=c[C>>2];c[G>>2]=ra;c[H>>2]=S;S=c[A>>2]|0;if((c[c[G>>2]>>2]|0)==(c[c[H>>2]>>2]|0))break;c[A>>2]=c[S>>2]}c[t>>2]=a;c[u>>2]=S;ra=c[u>>2]|0;c[v>>2]=c[t>>2];c[w>>2]=ra;c[c[v>>2]>>2]=c[w>>2];i=s;return}}while(0);c[f>>2]=d;c[h>>2]=g;c[j>>2]=-1;ra=c[j>>2]|0;c[k>>2]=c[h>>2];c[l>>2]=ra;c[c[k>>2]>>2]=0;c[m>>2]=c[g>>2];c[n>>2]=m;c[o>>2]=a;c[p>>2]=0;ra=c[p>>2]|0;c[q>>2]=c[o>>2];c[r>>2]=ra;c[c[q>>2]>>2]=c[r>>2];i=s;return}function Wc(a,b){a=a|0;b=+b;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+8|0;f=d;c[e>>2]=a;h[f>>3]=b;h[(c[e>>2]|0)+33619992>>3]=+h[f>>3];i=d;return}function Xc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;c[(c[e>>2]|0)+33619984>>2]=c[f>>2];i=d;return}function Yc(b,f,j,k,l,m,n,o,p,q,r,s){b=b|0;f=f|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;s=s|0;var t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0.0,Ya=0;ha=i;i=i+400|0;Q=ha+360|0;P=ha+180|0;O=ha+244|0;N=ha+248|0;K=ha+252|0;L=ha+260|0;M=ha+204|0;H=ha+264|0;I=ha+148|0;J=ha+328|0;ba=ha+212|0;ca=ha+356|0;da=ha+348|0;$=ha+332|0;aa=ha+112|0;_=ha;W=ha+320|0;Y=ha+208|0;Z=ha+396|0;wa=ha+128|0;xa=ha+132|0;ya=ha+136|0;ua=ha+140|0;va=ha+144|0;ta=ha+40|0;qa=ha+152|0;ra=ha+324|0;sa=ha+397|0;Sa=ha+160|0;Ta=ha+164|0;Ua=ha+168|0;Qa=ha+172|0;Ra=ha+176|0;Pa=ha+48|0;Ma=ha+184|0;Na=ha+188|0;Fa=ha+398|0;Ya=ha+364|0;E=ha+372|0;Wa=ha+388|0;za=ha+344|0;Aa=ha+352|0;X=ha+392|0;v=ha+216|0;ia=ha+220|0;ja=ha+224|0;ka=ha+228|0;la=ha+232|0;ma=ha+236|0;F=ha+240|0;y=ha+24|0;z=ha+96|0;A=ha+88|0;oa=ha+399|0;D=ha+8|0;Va=ha+56|0;S=ha+268|0;t=ha+272|0;Ia=ha+276|0;Ja=ha+280|0;Ha=ha+284|0;Oa=ha+288|0;Ka=ha+292|0;La=ha+296|0;Ga=ha+32|0;Ea=ha+304|0;Ba=ha+308|0;Da=ha+312|0;Ca=ha+316|0;na=ha+124|0;ga=ha+120|0;fa=ha+336|0;u=ha+116|0;pa=ha+340|0;ea=ha+104|0;T=ha+300|0;U=ha+196|0;B=ha+200|0;V=ha+368|0;G=ha+376|0;R=ha+256|0;w=ha+192|0;x=ha+156|0;C=ha+16|0;c[Ya>>2]=b;c[E>>2]=f;c[Wa>>2]=j;c[za>>2]=k;c[Aa>>2]=l;c[X>>2]=m;c[v>>2]=n;c[ia>>2]=o;c[ja>>2]=p;c[ka>>2]=q;c[la>>2]=r;c[ma>>2]=s;s=c[Ya>>2]|0;a[c[ma>>2]>>0]=1;c[c[ja>>2]>>2]=0;c[F>>2]=c[Aa>>2]&c[za>>2];if((c[Wa>>2]|0)==0)Xa=20.0;else Xa=+g[(c[Wa>>2]|0)+(c[F>>2]<<2)>>2]+ +g[(c[Wa>>2]|0)+(((c[Aa>>2]|0)+1&c[za>>2])<<2)>>2]+ +g[(c[Wa>>2]|0)+(((c[Aa>>2]|0)+2&c[za>>2])<<2)>>2]+ +g[(c[Wa>>2]|0)+(((c[Aa>>2]|0)+3&c[za>>2])<<2)>>2];h[y>>3]=Xa;if((c[Wa>>2]|0)==0)Xa=15.0;else Xa=+g[(c[Wa>>2]|0)+(c[F>>2]<<2)>>2]+ +g[(c[Wa>>2]|0)+(((c[Aa>>2]|0)+1&c[za>>2])<<2)>>2]+ +g[(c[Wa>>2]|0)+(((c[Aa>>2]|0)+2&c[za>>2])<<2)>>2]+.3;h[z>>3]=Xa;if((c[Wa>>2]|0)==0)Xa=10.0;else Xa=+g[(c[Wa>>2]|0)+(c[F>>2]<<2)>>2]+ +g[(c[Wa>>2]|0)+(((c[Aa>>2]|0)+1&c[za>>2])<<2)>>2]+1.2;h[A>>3]=Xa;a[oa>>0]=0;h[D>>3]=8.115;if((c[s+33619984>>2]|0)<4){c[Va+0>>2]=c[42];c[Va+4>>2]=c[43];c[Va+8>>2]=c[44];c[Va+12>>2]=c[45];c[Va+16>>2]=c[46];c[Va+20>>2]=c[47];c[Va+24>>2]=c[48];c[Va+28>>2]=c[49];h[D>>3]=+h[D>>3]+ +h[Va+(c[s+33619984>>2]<<3)>>3]}c[S>>2]=c[c[ia>>2]>>2];c[c[ia>>2]>>2]=0;c[t>>2]=1;c[Ia>>2]=0;while(1){if((c[Ia>>2]|0)>=16)break;c[Ja>>2]=c[Aa>>2];do switch(c[Ia>>2]|0){case 1:{c[Ja>>2]=(c[Ja>>2]|0)-(c[s+33619972>>2]|0);break};case 2:{c[Ja>>2]=(c[Ja>>2]|0)-(c[s+33619976>>2]|0);break};case 0:{c[Ja>>2]=(c[Ja>>2]|0)-(c[s+33619968>>2]|0);break};case 11:{c[Ja>>2]=(c[Ja>>2]|0)-((c[s+33619972>>2]|0)+1);break};case 12:{c[Ja>>2]=(c[Ja>>2]|0)-((c[s+33619972>>2]|0)-2);break};case 13:{c[Ja>>2]=(c[Ja>>2]|0)-((c[s+33619972>>2]|0)+2);break};case 14:{c[Ja>>2]=(c[Ja>>2]|0)-((c[s+33619972>>2]|0)-3);break};case 15:{c[Ja>>2]=(c[Ja>>2]|0)-((c[s+33619972>>2]|0)+3);break};case 3:{c[Ja>>2]=(c[Ja>>2]|0)-(c[s+33619980>>2]|0);break};case 4:{c[Ja>>2]=(c[Ja>>2]|0)-((c[s+33619968>>2]|0)-1);break};case 5:{c[Ja>>2]=(c[Ja>>2]|0)-((c[s+33619968>>2]|0)+1);break};case 6:{c[Ja>>2]=(c[Ja>>2]|0)-((c[s+33619968>>2]|0)-2);break};case 7:{c[Ja>>2]=(c[Ja>>2]|0)-((c[s+33619968>>2]|0)+2);break};case 8:{c[Ja>>2]=(c[Ja>>2]|0)-((c[s+33619968>>2]|0)-3);break};case 9:{c[Ja>>2]=(c[Ja>>2]|0)-((c[s+33619968>>2]|0)+3);break};case 10:{c[Ja>>2]=(c[Ja>>2]|0)-((c[s+33619972>>2]|0)-1);break};default:{}}while(0);if((((!((c[Ja>>2]|0)>>>0>=(c[Aa>>2]|0)>>>0)?(c[Ha>>2]=(c[Aa>>2]|0)-(c[Ja>>2]|0),!((c[Ha>>2]|0)>>>0>(c[v>>2]|0)>>>0)):0)?(c[Ja>>2]=c[Ja>>2]&c[za>>2],!(((c[F>>2]|0)+(c[S>>2]|0)|0)>>>0>(c[za>>2]|0)>>>0)):0)?!(((c[Ja>>2]|0)+(c[S>>2]|0)|0)>>>0>(c[za>>2]|0)>>>0):0)?(d[(c[E>>2]|0)+((c[F>>2]|0)+(c[S>>2]|0))>>0]|0|0)==(d[(c[E>>2]|0)+((c[Ja>>2]|0)+(c[S>>2]|0))>>0]|0|0):0){c[Oa>>2]=Mc((c[E>>2]|0)+(c[Ja>>2]|0)|0,(c[E>>2]|0)+(c[F>>2]|0)|0,c[X>>2]|0)|0;Ya=c[Oa>>2]|0;c[Ka>>2]=4;c[La>>2]=3;c[Ma>>2]=Ka;c[Na>>2]=La;b=c[Ma>>2]|0;f=c[Na>>2]|0;a[Pa+0>>0]=a[Fa+0>>0]|0;c[Qa>>2]=b;c[Ra>>2]=f;f=c[Qa>>2]|0;b=c[Ra>>2]|0;c[Sa>>2]=Pa;c[Ta>>2]=f;c[Ua>>2]=b;if(Ya>>>0>=(c[((c[c[Ta>>2]>>2]|0)<(c[c[Ua>>2]>>2]|0)?c[Ra>>2]|0:c[Qa>>2]|0)>>2]|0)>>>0?(h[Ga>>3]=+Nc(+h[s+33619992>>3],+h[y>>3],+h[z>>3],+h[A>>3],c[Oa>>2]|0,c[Ia>>2]|0),+h[D>>3]<+h[Ga>>3]):0){h[D>>3]=+h[Ga>>3];c[S>>2]=c[Oa>>2];c[t>>2]=c[Ha>>2];c[c[ia>>2]>>2]=c[S>>2];c[c[ja>>2]>>2]=c[S>>2];c[c[ka>>2]>>2]=c[t>>2];h[c[la>>2]>>3]=+h[D>>3];a[oa>>0]=1;a[c[ma>>2]>>0]=(c[Ha>>2]|0)>>>0>(c[v>>2]|0)>>>0&1}}c[Ia>>2]=(c[Ia>>2]|0)+1}c[Ea>>2]=ad((c[E>>2]|0)+(c[F>>2]|0)|0)|0;c[Ba>>2]=s+65536+(c[Ea>>2]<<10);if((e[s+(c[Ea>>2]<<1)>>1]|0)>>>0>256)Fa=(e[s+(c[Ea>>2]<<1)>>1]|0)-256|0;else Fa=0;c[Da>>2]=Fa;c[Ca>>2]=(e[s+(c[Ea>>2]<<1)>>1]|0)-1;while(1){if((c[Ca>>2]|0)<(c[Da>>2]|0))break;c[na>>2]=c[(c[Ba>>2]|0)+((c[Ca>>2]&255)<<2)>>2];if((c[na>>2]|0)>=0){c[ga>>2]=(c[Aa>>2]|0)-(c[na>>2]|0);if((c[ga>>2]|0)>>>0>(c[v>>2]|0)>>>0)break;c[na>>2]=c[na>>2]&c[za>>2];if((!(((c[F>>2]|0)+(c[S>>2]|0)|0)>>>0>(c[za>>2]|0)>>>0)?!(((c[na>>2]|0)+(c[S>>2]|0)|0)>>>0>(c[za>>2]|0)>>>0):0)?(d[(c[E>>2]|0)+((c[F>>2]|0)+(c[S>>2]|0))>>0]|0|0)==(d[(c[E>>2]|0)+((c[na>>2]|0)+(c[S>>2]|0))>>0]|0|0):0){c[fa>>2]=Mc((c[E>>2]|0)+(c[na>>2]|0)|0,(c[E>>2]|0)+(c[F>>2]|0)|0,c[X>>2]|0)|0;Ya=c[fa>>2]|0;c[u>>2]=4;c[pa>>2]=3;c[qa>>2]=u;c[ra>>2]=pa;b=c[qa>>2]|0;f=c[ra>>2]|0;a[ta+0>>0]=a[sa+0>>0]|0;c[ua>>2]=b;c[va>>2]=f;f=c[ua>>2]|0;b=c[va>>2]|0;c[wa>>2]=ta;c[xa>>2]=f;c[ya>>2]=b;if(Ya>>>0>=(c[((c[c[xa>>2]>>2]|0)<(c[c[ya>>2]>>2]|0)?c[va>>2]|0:c[ua>>2]|0)>>2]|0)>>>0?(h[ea>>3]=+Pc(+h[s+33619992>>3],+h[y>>3],+h[z>>3],+h[A>>3],c[fa>>2]|0,c[ga>>2]|0),+h[D>>3]<+h[ea>>3]):0){h[D>>3]=+h[ea>>3];c[S>>2]=c[fa>>2];c[t>>2]=c[ga>>2];c[c[ia>>2]>>2]=c[S>>2];c[c[ja>>2]>>2]=c[S>>2];c[c[ka>>2]>>2]=c[t>>2];h[c[la>>2]>>3]=+h[D>>3];a[oa>>0]=1;a[c[ma>>2]>>0]=0}}}c[Ca>>2]=(c[Ca>>2]|0)+ -1}if((c[s+3362e4>>2]|0)==0){Ya=a[oa>>0]|0;Ya=Ya&1;i=ha;return Ya|0}c[T>>2]=Lc((c[E>>2]|0)+(c[F>>2]|0)|0)|0;c[U>>2]=Qc(c[s+3362e4>>2]|0,c[T>>2]|0)|0;c[V>>2]=c[U>>2];c[W>>2]=V;c[Y>>2]=X;Ya=c[W>>2]|0;b=c[Y>>2]|0;a[_+0>>0]=a[Z+0>>0]|0;c[$>>2]=Ya;c[aa>>2]=b;b=c[aa>>2]|0;Ya=c[$>>2]|0;c[ba>>2]=_;c[ca>>2]=b;c[da>>2]=Ya;c[B>>2]=c[((c[c[ca>>2]>>2]|0)>>>0<(c[c[da>>2]>>2]|0)>>>0?c[aa>>2]|0:c[$>>2]|0)>>2];while(1){if(!((c[B>>2]|0)>=4?(c[B>>2]|0)>>>0>(c[S>>2]|0)>>>0:0))break;Ya=(c[E>>2]|0)+(c[F>>2]|0)|0;b=c[B>>2]|0;c[H>>2]=G;c[I>>2]=Ya;c[J>>2]=b;b=c[I>>2]|0;Ya=c[J>>2]|0;c[K>>2]=c[H>>2];c[L>>2]=b;c[M>>2]=Ya;Ya=c[K>>2]|0;c[N>>2]=Ya;c[O>>2]=c[N>>2];c[P>>2]=c[O>>2];c[Q>>2]=c[P>>2];Qm(Ya,c[L>>2]|0,c[M>>2]|0);if(Rc(c[s+3362e4>>2]|0,G,R,w)|0?(c[x>>2]=(c[v>>2]|0)+(c[w>>2]|0)+1,h[C>>3]=+Pc(+h[s+33619992>>3],+h[y>>3],+h[z>>3],+h[A>>3],c[B>>2]|0,c[x>>2]|0),+h[D>>3]<+h[C>>3]):0){h[D>>3]=+h[C>>3];c[S>>2]=c[B>>2];c[t>>2]=c[x>>2];c[c[ia>>2]>>2]=c[S>>2];c[c[ja>>2]>>2]=c[R>>2];c[c[ka>>2]>>2]=c[t>>2];h[c[la>>2]>>3]=+h[D>>3];a[oa>>0]=1;a[c[ma>>2]>>0]=1}Tm(G);c[B>>2]=(c[B>>2]|0)+ -1}Ya=a[oa>>0]|0;Ya=Ya&1;i=ha;return Ya|0}function Zc(a,d,f){a=a|0;d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+32|0;m=g+16|0;l=g+12|0;k=g+8|0;h=g+4|0;j=g;c[m>>2]=a;c[l>>2]=d;c[k>>2]=f;a=c[m>>2]|0;c[h>>2]=ad(c[l>>2]|0)|0;c[j>>2]=(e[a+(c[h>>2]<<1)>>1]|0)&255;c[a+65536+(c[h>>2]<<10)+(c[j>>2]<<2)>>2]=c[k>>2];a=a+(c[h>>2]<<1)|0;b[a>>1]=(b[a>>1]|0)+1<<16>>16;i=g;return}function _c(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;b=c[f>>2]|0;if((c[b+33619968>>2]|0)==(c[e>>2]|0)){i=d;return}c[b+33619980>>2]=c[b+33619976>>2];c[b+33619976>>2]=c[b+33619972>>2];c[b+33619972>>2]=c[b+33619968>>2];c[b+33619968>>2]=c[e>>2];i=d;return}function $c(a){a=a|0;var b=0,d=0;d=i;i=i+16|0;b=d;c[b>>2]=a;i=d;return(c[(c[b>>2]|0)+3362e4>>2]|0)!=0|0}function ad(a){a=a|0;var b=0,d=0,e=0;d=i;i=i+16|0;e=d+4|0;b=d;c[e>>2]=a;c[b>>2]=da(Lc(c[e>>2]|0)|0,506832829)|0;i=d;return(c[b>>2]|0)>>>17|0}function bd(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;e=i;i=i+96|0;A=e+28|0;B=e+52|0;l=e;n=e+76|0;o=e+24|0;r=e+8|0;f=e+12|0;s=e+56|0;t=e+64|0;u=e+72|0;v=e+80|0;w=e+84|0;x=e+32|0;z=e+36|0;k=e+44|0;p=e+48|0;m=e+40|0;h=e+16|0;y=e+60|0;g=e+4|0;q=e+20|0;j=e+68|0;c[k>>2]=a;c[p>>2]=b;c[m>>2]=d;c[h>>2]=0;c[y>>2]=0;while(1){b=c[y>>2]|0;c[z>>2]=c[k>>2];a=c[z>>2]|0;if(!(b>>>0<(((c[a+4>>2]|0)-(c[a>>2]|0)|0)/32|0)>>>0))break;a=c[y>>2]|0;c[A>>2]=c[k>>2];c[B>>2]=a;c[h>>2]=(c[h>>2]|0)+(c[(c[c[A>>2]>>2]|0)+(c[B>>2]<<5)>>2]|0);c[y>>2]=(c[y>>2]|0)+1}if((c[h>>2]|0)==0){i=e;return}cd(c[m>>2]|0,c[h>>2]|0);c[g>>2]=0;c[q>>2]=0;c[j>>2]=0;while(1){b=c[j>>2]|0;c[l>>2]=c[k>>2];a=c[l>>2]|0;if(!(b>>>0<(((c[a+4>>2]|0)-(c[a>>2]|0)|0)/32|0)>>>0)){f=9;break}if(!((c[g>>2]|0)>>>0<(c[h>>2]|0)>>>0)){f=9;break}b=c[g>>2]|0;c[n>>2]=c[m>>2];c[o>>2]=b;b=(c[c[n>>2]>>2]|0)+(c[o>>2]|0)|0;a=(c[p>>2]|0)+(c[q>>2]|0)|0;B=c[j>>2]|0;c[r>>2]=c[k>>2];c[f>>2]=B;By(b|0,a|0,c[(c[c[r>>2]>>2]|0)+(c[f>>2]<<5)>>2]|0)|0;a=c[j>>2]|0;c[s>>2]=c[k>>2];c[t>>2]=a;c[g>>2]=(c[g>>2]|0)+(c[(c[c[s>>2]>>2]|0)+(c[t>>2]<<5)>>2]|0);a=c[j>>2]|0;c[u>>2]=c[k>>2];c[v>>2]=a;a=c[(c[c[u>>2]>>2]|0)+(c[v>>2]<<5)>>2]|0;b=c[j>>2]|0;c[w>>2]=c[k>>2];c[x>>2]=b;c[q>>2]=(c[q>>2]|0)+(a+(c[(c[c[w>>2]>>2]|0)+(c[x>>2]<<5)+4>>2]|0));c[j>>2]=(c[j>>2]|0)+1}if((f|0)==9){i=e;return}}function cd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;o=i;i=i+80|0;m=o+36|0;n=o+4|0;g=o+28|0;q=o;e=o+32|0;f=o+8|0;p=o+68|0;l=o+24|0;k=o+60|0;j=o+64|0;v=o+40|0;h=o+44|0;t=o+48|0;u=o+52|0;w=o+56|0;x=o+16|0;s=o+20|0;r=o+12|0;c[x>>2]=b;c[s>>2]=d;d=c[x>>2]|0;c[w>>2]=d;b=c[w>>2]|0;c[r>>2]=(c[b+4>>2]|0)-(c[b>>2]|0);if((c[r>>2]|0)>>>0<(c[s>>2]|0)>>>0){gh(d,(c[s>>2]|0)-(c[r>>2]|0)|0);i=o;return}if(!((c[r>>2]|0)>>>0>(c[s>>2]|0)>>>0)){i=o;return}r=(c[d>>2]|0)+(c[s>>2]|0)|0;c[t>>2]=d;c[u>>2]=r;r=c[u>>2]|0;c[v>>2]=c[t>>2];c[h>>2]=r;r=c[v>>2]|0;while(1){if((c[h>>2]|0)==(c[r+4>>2]|0))break;c[j>>2]=r;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];x=c[l>>2]|0;b=r+4|0;w=(c[b>>2]|0)+ -1|0;c[b>>2]=w;c[m>>2]=w;w=c[m>>2]|0;c[e>>2]=x;c[f>>2]=w;w=c[e>>2]|0;x=c[f>>2]|0;a[q+0>>0]=a[p+0>>0]|0;c[n>>2]=w;c[g>>2]=x}i=o;return}function dd(d,f,g){d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;B=i;i=i+144|0;v=B+124|0;x=B+68|0;y=B+32|0;r=B+108|0;u=B+116|0;t=B+8|0;s=B+12|0;H=B+72|0;G=B+16|0;F=B+20|0;E=B+24|0;w=B+88|0;j=B+96|0;C=B+104|0;M=B+112|0;N=B+120|0;O=B+44|0;P=B+48|0;L=B+52|0;K=B+56|0;J=B+60|0;q=B+64|0;p=B+4|0;o=B+76|0;m=B+80|0;n=B;I=B+84|0;A=B+28|0;D=B+92|0;z=B+36|0;h=B+100|0;k=B+40|0;l=B+128|0;c[A>>2]=d;c[D>>2]=f;c[z>>2]=g;c[h>>2]=0;while(1){f=c[h>>2]|0;c[I>>2]=c[A>>2];d=c[I>>2]|0;if(!(f>>>0<(((c[d+4>>2]|0)-(c[d>>2]|0)|0)/32|0)>>>0))break;g=c[h>>2]|0;c[j>>2]=c[A>>2];c[C>>2]=g;c[k>>2]=(c[c[j>>2]>>2]|0)+(c[C>>2]<<5);g=(c[k>>2]|0)+22|0;c[E>>2]=c[D>>2];c[w>>2]=g;g=c[E>>2]|0;d=c[g+4>>2]|0;c[F>>2]=g;c[G>>2]=(c[F>>2]|0)+8;c[H>>2]=c[G>>2];if((d|0)!=(c[c[H>>2]>>2]|0)){c[s>>2]=g;c[t>>2]=(c[s>>2]|0)+8;c[u>>2]=c[t>>2];Q=c[u>>2]|0;c[v>>2]=c[g+4>>2];d=c[v>>2]|0;f=c[w>>2]|0;c[x>>2]=Q;c[y>>2]=d;c[r>>2]=f;f=c[y>>2]|0;if((f|0)!=0)b[f>>1]=b[c[r>>2]>>1]|0;Q=g+4|0;c[Q>>2]=(c[Q>>2]|0)+2}else $g(g,c[w>>2]|0);do if((c[(c[k>>2]|0)+4>>2]|0)>>>0>0?(e[(c[k>>2]|0)+20>>1]|0|0)!=65535:0){g=c[z>>2]|0;a[l>>0]=b[(c[k>>2]|0)+20>>1];c[m>>2]=g;c[n>>2]=l;g=c[m>>2]|0;Q=c[g+4>>2]|0;c[o>>2]=g;c[p>>2]=(c[o>>2]|0)+8;c[q>>2]=c[p>>2];if((Q|0)==(c[c[q>>2]>>2]|0)){Vg(g,c[n>>2]|0);break}c[J>>2]=g;c[K>>2]=(c[J>>2]|0)+8;c[L>>2]=c[K>>2];d=c[L>>2]|0;c[M>>2]=c[g+4>>2];Q=c[M>>2]|0;f=c[n>>2]|0;c[N>>2]=d;c[O>>2]=Q;c[P>>2]=f;f=c[O>>2]|0;if((f|0)!=0)a[f>>0]=a[c[P>>2]>>0]|0;Q=g+4|0;c[Q>>2]=(c[Q>>2]|0)+1}while(0);c[h>>2]=(c[h>>2]|0)+1}i=B;return}function ed(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;h=i;i=i+208|0;O=h+144|0;P=h+168|0;M=h+84|0;N=h+160|0;L=h+104|0;K=h+8|0;J=h+44|0;H=h+40|0;F=h+116|0;G=h+76|0;D=h+72|0;E=h+56|0;B=h+60|0;A=h+64|0;z=h+68|0;y=h+140|0;e=h+124|0;w=h+156|0;v=h+164|0;C=h+172|0;u=h+188|0;t=h;s=h+88|0;q=h+24|0;n=h+96|0;o=h+100|0;p=h+196|0;R=h+108|0;S=h+32|0;U=h+120|0;T=h+16|0;W=h+136|0;Q=h+204|0;V=h+205|0;X=h+48|0;Y=h+152|0;l=h+112|0;k=h+92|0;g=h+176|0;x=h+200|0;m=h+52|0;r=h+192|0;I=h+148|0;j=h+80|0;f=h+128|0;c[l>>2]=b;c[k>>2]=d;c[X>>2]=g;c[Y>>2]=h+206;b=c[Y>>2]|0;c[W>>2]=c[X>>2];c[h+132>>2]=b;b=c[W>>2]|0;a[T+0>>0]=a[V+0>>0]|0;c[U>>2]=Q;d=c[U>>2]|0;a[S+0>>0]=a[T+0>>0]|0;c[R>>2]=d;Tg(b,Q);c[x>>2]=0;c[m>>2]=0;while(1){if(!((c[m>>2]|0)>>>0<(c[k>>2]|0)>>>0))break;Y=(c[l>>2]|0)+(c[m>>2]|0)|0;c[n>>2]=g;c[o>>2]=Y;Rg(p,c[n>>2]|0,c[o>>2]|0);a[q+0>>0]=a[p+0>>0]|0;a[q+1>>0]=a[p+1>>0]|0;a[q+2>>0]=a[p+2>>0]|0;a[q+3>>0]=a[p+3>>0]|0;c[s>>2]=r;Y=c[s>>2]|0;a[t+0>>0]=a[q+0>>0]|0;a[t+1>>0]=a[q+1>>0]|0;a[t+2>>0]=a[q+2>>0]|0;a[t+3>>0]=a[q+3>>0]|0;c[u>>2]=Y;Y=c[u>>2]|0;c[Y+0>>2]=c[t+0>>2];c[v>>2]=g;c[w>>2]=c[v>>2];c[e>>2]=c[w>>2];c[y>>2]=(c[e>>2]|0)+4;c[z>>2]=c[y>>2];c[A>>2]=c[z>>2];c[B>>2]=c[A>>2];Y=c[B>>2]|0;c[D>>2]=C;c[E>>2]=Y;Y=c[E>>2]|0;c[F>>2]=c[D>>2];c[G>>2]=Y;c[c[F>>2]>>2]=c[G>>2];a[H+0>>0]=a[C+0>>0]|0;a[H+1>>0]=a[C+1>>0]|0;a[H+2>>0]=a[C+2>>0]|0;a[H+3>>0]=a[C+3>>0]|0;c[J>>2]=I;Y=c[J>>2]|0;a[K+0>>0]=a[H+0>>0]|0;a[K+1>>0]=a[H+1>>0]|0;a[K+2>>0]=a[H+2>>0]|0;a[K+3>>0]=a[H+3>>0]|0;c[L>>2]=Y;Y=c[L>>2]|0;c[Y+0>>2]=c[K+0>>2];c[M>>2]=r;c[N>>2]=I;Y=c[N>>2]|0;c[O>>2]=c[M>>2];c[P>>2]=Y;if((c[c[O>>2]>>2]|0)==(c[c[P>>2]>>2]|0)){Y=c[x>>2]&255;a[(fd(g,(c[l>>2]|0)+(c[m>>2]|0)|0)|0)>>0]=Y;c[x>>2]=(c[x>>2]|0)+1}c[m>>2]=(c[m>>2]|0)+1}c[j>>2]=0;while(1){if(!((c[j>>2]|0)>>>0<(c[k>>2]|0)>>>0))break;Y=a[(fd(g,(c[l>>2]|0)+(c[j>>2]|0)|0)|0)>>0]|0;a[(c[l>>2]|0)+(c[j>>2]|0)>>0]=Y;c[j>>2]=(c[j>>2]|0)+1}Y=c[x>>2]|0;c[f>>2]=1;gd(g);i=h;return Y|0}function fd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0;A=i;i=i+560|0;ra=A+472|0;qa=A+528|0;oa=A+520|0;na=A+512|0;ma=A+252|0;pa=A+256|0;ka=A+260|0;S=A+264|0;R=A+160|0;wa=A+156|0;va=A+96|0;xa=A+84|0;ya=A+80|0;_=A+72|0;da=A+76|0;ea=A+480|0;ca=A;$=A+284|0;aa=A+164|0;ba=A+548|0;N=A+140|0;la=A+100|0;ja=A+16|0;ga=A+108|0;ha=A+112|0;ia=A+549|0;X=A+120|0;Y=A+124|0;Z=A+128|0;U=A+132|0;V=A+136|0;W=A+476|0;fa=A+432|0;ua=A+392|0;T=A+292|0;za=A+280|0;Aa=A+276|0;kb=A+168|0;Ba=A+172|0;ta=A+176|0;jb=A+180|0;ib=A+184|0;K=A+188|0;J=A+192|0;D=A+196|0;C=A+104|0;v=A+204|0;l=A+208|0;m=A+212|0;k=A+56|0;g=A+220|0;h=A+224|0;j=A+550|0;s=A+240|0;t=A+244|0;r=A+40|0;o=A+508|0;p=A+516|0;q=A+551|0;u=A+532|0;f=A+540|0;e=A+268|0;z=A+272|0;x=A+544|0;w=A+452|0;n=A+428|0;H=A+424|0;y=A+388|0;E=A+500|0;F=A+296|0;sa=A+300|0;G=A+304|0;I=A+308|0;M=A+312|0;L=A+316|0;Pa=A+320|0;Oa=A+324|0;Ma=A+328|0;La=A+332|0;Ka=A+336|0;Na=A+340|0;Qa=A+344|0;Ta=A+348|0;Sa=A+352|0;Ra=A+356|0;Ua=A+360|0;bb=A+364|0;hb=A+368|0;gb=A+372|0;eb=A+376|0;fb=A+380|0;db=A+48|0;ab=A+200|0;_a=A+396|0;$a=A+400|0;cb=A+408|0;Za=A+24|0;Ca=A+416|0;Ya=A+420|0;Wa=A+8|0;Ja=A+216|0;Ia=A+436|0;Va=A+440|0;Ha=A+32|0;Ga=A+448|0;Fa=A+64|0;Xa=A+456|0;Ea=A+460|0;lb=A+464|0;Da=A+468|0;nb=A+288|0;sb=A+492|0;ub=A+496|0;tb=A+384|0;rb=A+92|0;vb=A+88|0;ob=A+248|0;O=A+504|0;P=A+488|0;B=A+536|0;qb=A+524|0;Q=A+228|0;mb=A+116|0;pb=A+144|0;c[vb>>2]=b;c[ob>>2]=d;b=c[vb>>2]|0;c[P>>2]=Og(b,O,c[ob>>2]|0)|0;c[B>>2]=c[c[P>>2]>>2];d=c[c[P>>2]>>2]|0;c[ub>>2]=rb;c[tb>>2]=-1;tb=c[tb>>2]|0;c[sb>>2]=c[ub>>2];c[A+68>>2]=tb;c[c[sb>>2]>>2]=0;c[qb>>2]=c[rb>>2];c[A+484>>2]=qb;if((d|0)!=0){vb=c[B>>2]|0;vb=vb+13|0;vb=vb+1|0;i=A;return vb|0}Pg(pb,b,c[ob>>2]|0);c[nb>>2]=pb;ub=c[nb>>2]|0;c[lb>>2]=mb;c[Da>>2]=ub;ub=c[Da>>2]|0;c[Xa>>2]=c[lb>>2];c[Ea>>2]=ub;c[c[Xa>>2]>>2]=c[Ea>>2];a[Fa+0>>0]=a[mb+0>>0]|0;a[Fa+1>>0]=a[mb+1>>0]|0;a[Fa+2>>0]=a[mb+2>>0]|0;a[Fa+3>>0]=a[mb+3>>0]|0;c[Ga>>2]=Q;ub=c[Ga>>2]|0;a[Ha+0>>0]=a[Fa+0>>0]|0;a[Ha+1>>0]=a[Fa+1>>0]|0;a[Ha+2>>0]=a[Fa+2>>0]|0;a[Ha+3>>0]=a[Fa+3>>0]|0;c[Ia>>2]=ub;ub=c[Ia>>2]|0;c[Ja>>2]=Ha;c[Ka>>2]=c[c[Ja>>2]>>2];vb=c[Ka>>2]|0;c[La>>2]=vb;c[Ma>>2]=c[La>>2];c[Na>>2]=c[c[Ma>>2]>>2];c[Oa>>2]=vb;c[Pa>>2]=c[Oa>>2];c[c[Pa>>2]>>2]=0;vb=c[Na>>2]|0;c[Qa>>2]=Ha;c[Ra>>2]=c[c[Qa>>2]>>2];c[Sa>>2]=c[Ra>>2];c[Ta>>2]=c[Sa>>2];c[Ua>>2]=(c[Ta>>2]|0)+4;tb=c[Ua>>2]|0;c[Va+0>>2]=c[tb+0>>2];c[Va+4>>2]=c[tb+4>>2];a[Wa+0>>0]=a[Va+0>>0]|0;a[Wa+1>>0]=a[Va+1>>0]|0;a[Wa+2>>0]=a[Va+2>>0]|0;a[Wa+3>>0]=a[Va+3>>0]|0;a[Wa+4>>0]=a[Va+4>>0]|0;a[Wa+5>>0]=a[Va+5>>0]|0;a[Wa+6>>0]=a[Va+6>>0]|0;a[Wa+7>>0]=a[Va+7>>0]|0;c[Ca>>2]=ub;c[Ya>>2]=vb;Ca=c[Ca>>2]|0;vb=c[Ya>>2]|0;a[Za+0>>0]=a[Wa+0>>0]|0;a[Za+1>>0]=a[Wa+1>>0]|0;a[Za+2>>0]=a[Wa+2>>0]|0;a[Za+3>>0]=a[Wa+3>>0]|0;a[Za+4>>0]=a[Wa+4>>0]|0;a[Za+5>>0]=a[Wa+5>>0]|0;a[Za+6>>0]=a[Wa+6>>0]|0;a[Za+7>>0]=a[Wa+7>>0]|0;c[_a>>2]=Ca;c[$a>>2]=vb;vb=c[_a>>2]|0;c[ab>>2]=$a;Ca=c[c[ab>>2]>>2]|0;c[bb>>2]=Za;ub=c[bb>>2]|0;c[cb+0>>2]=c[ub+0>>2];c[cb+4>>2]=c[ub+4>>2];a[db+0>>0]=a[cb+0>>0]|0;a[db+1>>0]=a[cb+1>>0]|0;a[db+2>>0]=a[cb+2>>0]|0;a[db+3>>0]=a[cb+3>>0]|0;a[db+4>>0]=a[cb+4>>0]|0;a[db+5>>0]=a[cb+5>>0]|0;a[db+6>>0]=a[cb+6>>0]|0;a[db+7>>0]=a[cb+7>>0]|0;c[eb>>2]=vb;c[fb>>2]=Ca;Ca=c[eb>>2]|0;c[gb>>2]=fb;c[Ca>>2]=c[c[gb>>2]>>2];Ca=Ca+4|0;c[hb>>2]=db;vb=c[hb>>2]|0;c[Ca+0>>2]=c[vb+0>>2];c[Ca+4>>2]=c[vb+4>>2];c[ib>>2]=pb;c[jb>>2]=c[ib>>2];c[kb>>2]=c[jb>>2];c[Ba>>2]=0;Ca=c[kb>>2]|0;c[Aa>>2]=Ca;c[za>>2]=c[Aa>>2];c[ta>>2]=c[c[za>>2]>>2];vb=c[Ba>>2]|0;c[ya>>2]=Ca;c[xa>>2]=c[ya>>2];c[c[xa>>2]>>2]=vb;if((c[ta>>2]|0)!=0){c[va>>2]=Ca;c[wa>>2]=c[va>>2];ta=c[ta>>2]|0;c[ua>>2]=(c[wa>>2]|0)+4;c[T>>2]=ta;ta=c[ua>>2]|0;if(a[ta+5>>0]&1){vb=c[ta>>2]|0;c[fa>>2]=(c[T>>2]|0)+14;ub=c[fa>>2]|0;c[ga>>2]=vb;c[ha>>2]=ub;ub=c[ga>>2]|0;vb=c[ha>>2]|0;a[ja+0>>0]=a[ia+0>>0]|0;c[N>>2]=ub;c[la>>2]=vb}if(a[ta+4>>0]&1){vb=c[ta>>2]|0;c[_>>2]=(c[T>>2]|0)+13;ub=c[_>>2]|0;c[$>>2]=vb;c[aa>>2]=ub;ub=c[$>>2]|0;vb=c[aa>>2]|0;a[ca+0>>0]=a[ba+0>>0]|0;c[da>>2]=ub;c[ea>>2]=vb}if((c[T>>2]|0)!=0){ub=c[T>>2]|0;c[U>>2]=c[ta>>2];c[V>>2]=ub;c[W>>2]=1;ub=c[V>>2]|0;vb=c[W>>2]|0;c[X>>2]=c[U>>2];c[Y>>2]=ub;c[Z>>2]=vb;Sw(c[Y>>2]|0)}}ub=c[O>>2]|0;vb=c[P>>2]|0;c[R>>2]=Q;c[S>>2]=c[R>>2];c[ka>>2]=c[S>>2];Qg(b,ub,vb,c[c[ka>>2]>>2]|0);c[ma>>2]=Q;vb=c[ma>>2]|0;c[na>>2]=vb;c[oa>>2]=c[na>>2];c[pa>>2]=c[c[oa>>2]>>2];c[qa>>2]=vb;c[ra>>2]=c[qa>>2];c[c[ra>>2]>>2]=0;c[B>>2]=c[pa>>2];c[L>>2]=Q;c[M>>2]=c[L>>2];c[sa>>2]=c[M>>2];c[G>>2]=0;L=c[sa>>2]|0;c[F>>2]=L;c[E>>2]=c[F>>2];c[I>>2]=c[c[E>>2]>>2];vb=c[G>>2]|0;c[C>>2]=L;c[D>>2]=c[C>>2];c[c[D>>2]>>2]=vb;if((c[I>>2]|0)==0){vb=c[B>>2]|0;vb=vb+13|0;vb=vb+1|0;i=A;return vb|0}c[J>>2]=L;c[K>>2]=c[J>>2];C=c[I>>2]|0;c[H>>2]=(c[K>>2]|0)+4;c[y>>2]=C;C=c[H>>2]|0;if(a[C+5>>0]&1){vb=c[C>>2]|0;c[n>>2]=(c[y>>2]|0)+14;ub=c[n>>2]|0;c[o>>2]=vb;c[p>>2]=ub;ub=c[o>>2]|0;vb=c[p>>2]|0;a[r+0>>0]=a[q+0>>0]|0;c[s>>2]=ub;c[t>>2]=vb}if(a[C+4>>0]&1){vb=c[C>>2]|0;c[v>>2]=(c[y>>2]|0)+13;ub=c[v>>2]|0;c[g>>2]=vb;c[h>>2]=ub;ub=c[g>>2]|0;vb=c[h>>2]|0;a[k+0>>0]=a[j+0>>0]|0;c[l>>2]=ub;c[m>>2]=vb}if((c[y>>2]|0)==0){vb=c[B>>2]|0;vb=vb+13|0;vb=vb+1|0;i=A;return vb|0}ub=c[y>>2]|0;c[z>>2]=c[C>>2];c[x>>2]=ub;c[w>>2]=1;ub=c[x>>2]|0;vb=c[w>>2]|0;c[u>>2]=c[z>>2];c[f>>2]=ub;c[e>>2]=vb;Sw(c[f>>2]|0);vb=c[B>>2]|0;vb=vb+13|0;vb=vb+1|0;i=A;return vb|0}function gd(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;mh(c[d>>2]|0);i=b;return}function hd(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0;p=i;i=i+320|0;ga=p+140|0;ia=p+288|0;ja=p+16|0;ca=p+144|0;fa=p+116|0;ea=p+128|0;da=p+124|0;oa=p+252|0;na=p+52|0;ma=p+28|0;la=p+32|0;ha=p+36|0;V=p+40|0;T=p+44|0;Y=p+48|0;Z=p+240|0;U=p+112|0;Q=p+56|0;S=p+60|0;ba=p+64|0;aa=p+68|0;$=p+72|0;_=p+76|0;W=p+80|0;Aa=p+84|0;Ba=p+88|0;Ca=p+92|0;ya=p+96|0;za=p+100|0;xa=p+8|0;ua=p+108|0;va=p+236|0;wa=p+310|0;Da=p+268|0;Ea=p+276|0;ra=p+284|0;sa=p+292|0;I=p+300|0;K=p+132|0;L=p+136|0;D=p+304|0;H=p+264|0;G=p+148|0;P=p+152|0;O=p+156|0;N=p+160|0;M=p+164|0;R=p+168|0;J=p+172|0;ta=p+176|0;B=p+180|0;w=p+184|0;x=p+188|0;q=p+192|0;A=p+196|0;z=p+200|0;y=p+204|0;v=p+208|0;u=p+212|0;C=p+104|0;F=p+220|0;t=p+224|0;f=p+228|0;n=p+232|0;o=p+20|0;k=p+248|0;l=p+12|0;j=p;s=p+216|0;m=p+24|0;h=p+311|0;Ga=p+244|0;Fa=p+272|0;qa=p+120|0;g=p+280|0;r=p+296|0;E=p+256|0;pa=p+260|0;ka=p+309|0;X=p+308|0;c[qa>>2]=b;c[g>>2]=e;c[Ga>>2]=c[qa>>2];c[Fa>>2]=0;c[r>>2]=d[(c[c[Ga>>2]>>2]|0)+(c[Fa>>2]|0)>>0];c[E>>2]=1;c[c[g>>2]>>2]=-1;c[pa>>2]=1;while(1){Fa=c[pa>>2]|0;c[ta>>2]=c[qa>>2];Ga=c[ta>>2]|0;if(!(Fa>>>0<((c[Ga+4>>2]|0)-(c[Ga>>2]|0)|0)>>>0))break;Ga=c[pa>>2]|0;c[ra>>2]=c[qa>>2];c[sa>>2]=Ga;if((d[(c[c[ra>>2]>>2]|0)+(c[sa>>2]|0)>>0]|0|0)!=(c[r>>2]|0)){e=(c[g>>2]|0)+4|0;a[ka>>0]=c[r>>2];c[la>>2]=e;c[ha>>2]=ka;e=c[la>>2]|0;Ga=c[e+4>>2]|0;c[ma>>2]=e;c[na>>2]=(c[ma>>2]|0)+8;c[oa>>2]=c[na>>2];if((Ga|0)!=(c[c[oa>>2]>>2]|0)){c[da>>2]=e;c[ea>>2]=(c[da>>2]|0)+8;c[fa>>2]=c[ea>>2];Fa=c[fa>>2]|0;c[ga>>2]=c[e+4>>2];Ga=c[ga>>2]|0;b=c[ha>>2]|0;c[ia>>2]=Fa;c[ja>>2]=Ga;c[ca>>2]=b;b=c[ja>>2]|0;if((b|0)!=0)a[b>>0]=a[c[ca>>2]>>0]|0;Ga=e+4|0;c[Ga>>2]=(c[Ga>>2]|0)+1}else Vg(e,c[ha>>2]|0);c[_>>2]=(c[g>>2]|0)+28;c[W>>2]=E;b=c[_>>2]|0;Ga=c[b+4>>2]|0;c[$>>2]=b;c[aa>>2]=(c[$>>2]|0)+8;c[ba>>2]=c[aa>>2];if((Ga|0)!=(c[c[ba>>2]>>2]|0)){c[S>>2]=b;c[Q>>2]=(c[S>>2]|0)+8;c[U>>2]=c[Q>>2];Fa=c[U>>2]|0;c[V>>2]=c[b+4>>2];Ga=c[V>>2]|0;e=c[W>>2]|0;c[T>>2]=Fa;c[Y>>2]=Ga;c[Z>>2]=e;e=c[Y>>2]|0;if((e|0)!=0)c[e>>2]=c[c[Z>>2]>>2];Ga=b+4|0;c[Ga>>2]=(c[Ga>>2]|0)+4}else Ng(b,c[W>>2]|0);c[ua>>2]=c[g>>2];c[va>>2]=r;Ga=c[ua>>2]|0;Fa=c[va>>2]|0;a[xa+0>>0]=a[wa+0>>0]|0;c[ya>>2]=Ga;c[za>>2]=Fa;Fa=c[ya>>2]|0;Ga=c[za>>2]|0;c[Aa>>2]=xa;c[Ba>>2]=Fa;c[Ca>>2]=Ga;c[c[g>>2]>>2]=c[((c[c[Ba>>2]>>2]|0)<(c[c[Ca>>2]>>2]|0)?c[za>>2]|0:c[ya>>2]|0)>>2];Ga=c[pa>>2]|0;c[Da>>2]=c[qa>>2];c[Ea>>2]=Ga;c[r>>2]=d[(c[c[Da>>2]>>2]|0)+(c[Ea>>2]|0)>>0];c[E>>2]=0}c[E>>2]=(c[E>>2]|0)+1;c[pa>>2]=(c[pa>>2]|0)+1}Q=(c[g>>2]|0)+4|0;a[X>>0]=c[r>>2];c[R>>2]=Q;c[J>>2]=X;Q=c[R>>2]|0;Ga=c[Q+4>>2]|0;c[M>>2]=Q;c[N>>2]=(c[M>>2]|0)+8;c[O>>2]=c[N>>2];if((Ga|0)!=(c[c[O>>2]>>2]|0)){c[P>>2]=Q;c[G>>2]=(c[P>>2]|0)+8;c[H>>2]=c[G>>2];Fa=c[H>>2]|0;c[I>>2]=c[Q+4>>2];Ga=c[I>>2]|0;G=c[J>>2]|0;c[K>>2]=Fa;c[L>>2]=Ga;c[D>>2]=G;G=c[L>>2]|0;if((G|0)!=0)a[G>>0]=a[c[D>>2]>>0]|0;Ga=Q+4|0;c[Ga>>2]=(c[Ga>>2]|0)+1}else Vg(Q,c[J>>2]|0);c[F>>2]=(c[g>>2]|0)+28;c[t>>2]=E;D=c[F>>2]|0;Ga=c[D+4>>2]|0;c[C>>2]=D;c[u>>2]=(c[C>>2]|0)+8;c[v>>2]=c[u>>2];if((Ga|0)==(c[c[v>>2]>>2]|0)){Ng(D,c[t>>2]|0);Ga=c[g>>2]|0;c[s>>2]=Ga;c[m>>2]=r;Ga=c[s>>2]|0;b=c[m>>2]|0;a[j+0>>0]=a[h+0>>0]|0;c[k>>2]=Ga;c[l>>2]=b;b=c[k>>2]|0;Ga=c[l>>2]|0;c[f>>2]=j;c[n>>2]=b;c[o>>2]=Ga;Ga=c[n>>2]|0;Ga=c[Ga>>2]|0;b=c[o>>2]|0;b=c[b>>2]|0;b=(Ga|0)<(b|0);Ga=c[l>>2]|0;Fa=c[k>>2]|0;Fa=b?Ga:Fa;Fa=c[Fa>>2]|0;Ga=c[g>>2]|0;c[Ga>>2]=Fa;Ga=c[g>>2]|0;Fa=c[Ga>>2]|0;Fa=Fa+1|0;c[Ga>>2]=Fa;i=p;return}c[y>>2]=D;c[z>>2]=(c[y>>2]|0)+8;c[A>>2]=c[z>>2];Fa=c[A>>2]|0;c[B>>2]=c[D+4>>2];Ga=c[B>>2]|0;t=c[t>>2]|0;c[w>>2]=Fa;c[x>>2]=Ga;c[q>>2]=t;t=c[x>>2]|0;if((t|0)!=0)c[t>>2]=c[c[q>>2]>>2];Ga=D+4|0;c[Ga>>2]=(c[Ga>>2]|0)+4;Ga=c[g>>2]|0;c[s>>2]=Ga;c[m>>2]=r;Ga=c[s>>2]|0;b=c[m>>2]|0;a[j+0>>0]=a[h+0>>0]|0;c[k>>2]=Ga;c[l>>2]=b;b=c[k>>2]|0;Ga=c[l>>2]|0;c[f>>2]=j;c[n>>2]=b;c[o>>2]=Ga;Ga=c[n>>2]|0;Ga=c[Ga>>2]|0;b=c[o>>2]|0;b=c[b>>2]|0;b=(Ga|0)<(b|0);Ga=c[l>>2]|0;Fa=c[k>>2]|0;Fa=b?Ga:Fa;Fa=c[Fa>>2]|0;Ga=c[g>>2]|0;c[Ga>>2]=Fa;Ga=c[g>>2]|0;Fa=c[Ga>>2]|0;Fa=Fa+1|0;c[Ga>>2]=Fa;i=p;return}function id(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0;g=i;i=i+464|0;J=g+212|0;K=g+400|0;L=g+396|0;I=g+4|0;E=g+412|0;F=g+208|0;G=g+28|0;D=g+32|0;z=g+40|0;A=g+48|0;B=g+388|0;y=g+52|0;p=g+60|0;r=g+68|0;q=g+72|0;s=g+76|0;u=g+80|0;t=g+84|0;v=g+88|0;w=g+92|0;M=g+100|0;H=g+104|0;C=g+108|0;x=g+384|0;N=g+112|0;O=g+116|0;ha=g+120|0;ia=g+128|0;ja=g+132|0;ga=g+136|0;ca=g+144|0;da=g+152|0;ea=g+156|0;ba=g+160|0;Z=g+168|0;_=g+176|0;$=g+408|0;Y=g+416|0;P=g+432|0;R=g+456|0;Q=g+460|0;S=g+216|0;U=g+220|0;T=g+224|0;V=g+228|0;W=g+232|0;ka=g+240|0;fa=g+380|0;aa=g+244|0;X=g+248|0;la=g+252|0;ma=g+256|0;Ia=g+260|0;Ja=g+268|0;Ka=g+272|0;Ha=g+276|0;Da=g+284|0;Ea=g+292|0;Fa=g+296|0;Ca=g+300|0;ya=g+308|0;za=g+316|0;Aa=g+320|0;xa=g+324|0;oa=g+332|0;qa=g+340|0;pa=g+344|0;ra=g+348|0;ta=g+352|0;sa=g+356|0;ua=g+360|0;va=g+364|0;La=g+372|0;Ga=g+376|0;Ba=g+392|0;wa=g;Ma=g+12|0;Na=g+404|0;o=g+180|0;na=g+184|0;n=g+420|0;m=g+192|0;l=g+428|0;h=g+16|0;j=g+196|0;k=g+436|0;c[o>>2]=a;c[na>>2]=b;c[n>>2]=d;c[m>>2]=e;c[l>>2]=f;c[Na>>2]=h;c[Ma>>2]=c[Na>>2];c[La>>2]=c[Ma>>2];b=c[La>>2]|0;c[g+368>>2]=b;c[Ja>>2]=Ha;c[Ka>>2]=-1;a=c[Ka>>2]|0;c[Ia>>2]=c[Ja>>2];c[g+264>>2]=a;c[c[Ia>>2]>>2]=0;c[Ga>>2]=c[Ha>>2];c[g+280>>2]=Ga;c[b>>2]=0;c[Ea>>2]=Ca;c[Fa>>2]=-1;a=c[Fa>>2]|0;c[Da>>2]=c[Ea>>2];c[g+288>>2]=a;c[c[Da>>2]>>2]=0;c[Ba>>2]=c[Ca>>2];c[g+304>>2]=Ba;c[b+4>>2]=0;c[za>>2]=xa;c[Aa>>2]=-1;a=c[Aa>>2]|0;c[ya>>2]=c[za>>2];c[g+312>>2]=a;c[c[ya>>2]>>2]=0;c[wa>>2]=c[xa>>2];c[g+328>>2]=wa;c[ua>>2]=b+8;c[va>>2]=0;b=c[va>>2]|0;c[ta>>2]=c[ua>>2];c[sa>>2]=b;b=c[ta>>2]|0;c[ra>>2]=sa;a=c[c[ra>>2]>>2]|0;c[qa>>2]=b;c[pa>>2]=a;a=c[qa>>2]|0;c[g+336>>2]=a;c[oa>>2]=pa;c[a>>2]=c[c[oa>>2]>>2];bd(c[o>>2]|0,c[na>>2]|0,h);c[ma>>2]=j;c[la>>2]=c[ma>>2];c[ka>>2]=c[la>>2];a=c[ka>>2]|0;c[g+236>>2]=a;c[ia>>2]=ga;c[ja>>2]=-1;b=c[ja>>2]|0;c[ha>>2]=c[ia>>2];c[g+124>>2]=b;c[c[ha>>2]>>2]=0;c[fa>>2]=c[ga>>2];c[g+140>>2]=fa;c[a>>2]=0;c[da>>2]=ba;c[ea>>2]=-1;b=c[ea>>2]|0;c[ca>>2]=c[da>>2];c[g+148>>2]=b;c[c[ca>>2]>>2]=0;c[aa>>2]=c[ba>>2];c[g+164>>2]=aa;c[a+4>>2]=0;c[_>>2]=Y;c[$>>2]=-1;b=c[$>>2]|0;c[Z>>2]=c[_>>2];c[g+172>>2]=b;c[c[Z>>2]>>2]=0;c[X>>2]=c[Y>>2];c[g+424>>2]=X;c[V>>2]=a+8;c[W>>2]=0;a=c[W>>2]|0;c[U>>2]=c[V>>2];c[T>>2]=a;a=c[U>>2]|0;c[S>>2]=T;b=c[c[S>>2]>>2]|0;c[R>>2]=a;c[Q>>2]=b;b=c[R>>2]|0;c[g+448>>2]=b;c[P>>2]=Q;c[b>>2]=c[c[P>>2]>>2];c[O>>2]=k;c[N>>2]=c[O>>2];c[M>>2]=c[N>>2];b=c[M>>2]|0;c[g+96>>2]=b;c[K>>2]=I;c[L>>2]=-1;a=c[L>>2]|0;c[J>>2]=c[K>>2];c[g+188>>2]=a;c[c[J>>2]>>2]=0;c[H>>2]=c[I>>2];c[g+8>>2]=H;c[b>>2]=0;c[F>>2]=D;c[G>>2]=-1;a=c[G>>2]|0;c[E>>2]=c[F>>2];c[g+452>>2]=a;c[c[E>>2]>>2]=0;c[C>>2]=c[D>>2];c[g+36>>2]=C;c[b+4>>2]=0;c[A>>2]=y;c[B>>2]=-1;a=c[B>>2]|0;c[z>>2]=c[A>>2];c[g+44>>2]=a;c[c[z>>2]>>2]=0;c[x>>2]=c[y>>2];c[g+56>>2]=x;c[v>>2]=b+8;c[w>>2]=0;b=c[w>>2]|0;c[u>>2]=c[v>>2];c[t>>2]=b;b=c[u>>2]|0;c[s>>2]=t;a=c[c[s>>2]>>2]|0;c[r>>2]=b;c[q>>2]=a;a=c[r>>2]|0;c[g+64>>2]=a;c[p>>2]=q;c[a>>2]=c[c[p>>2]>>2];dd(c[o>>2]|0,j,k);jd(h,544,100,70,26.0,c[n>>2]|0);kd(j,530,50,40,13.5,c[m>>2]|0);ld(k,544,50,40,14.6,c[l>>2]|0);md(k);nd(j);md(h);i=g;return}function jd(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=+g;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0;k=i;i=i+400|0;Y=k+176|0;_=k+160|0;$=k+156|0;X=k+48|0;W=k+8|0;C=k+368|0;aa=k+376|0;D=k+200|0;E=k+148|0;F=k+24|0;na=k+28|0;ma=k+32|0;H=k+36|0;G=k+40|0;J=k+44|0;L=k+316|0;M=k+108|0;la=k+52|0;ka=k+56|0;ga=k+60|0;fa=k+64|0;ea=k+68|0;ua=k+72|0;sa=k+80|0;ta=k+84|0;ra=k+88|0;za=k+96|0;xa=k+104|0;ya=k+312|0;wa=k+152|0;Ea=k+116|0;Ca=k+124|0;Da=k+128|0;Ba=k+132|0;da=k+140|0;Na=k+356|0;Oa=k+364|0;Ma=k+372|0;Ia=k+380|0;Ja=k+384|0;Ga=k+388|0;Ha=k+180|0;qa=k+188|0;va=k+192|0;Aa=k+196|0;Fa=k+360|0;pa=k+204|0;oa=k+208|0;u=k+212|0;q=k+216|0;p=k+220|0;l=k+224|0;x=k+228|0;w=k+232|0;v=k+236|0;m=k+308|0;s=k+240|0;r=k+244|0;z=k+248|0;n=k+252|0;B=k+256|0;S=k+260|0;U=k+264|0;V=k+268|0;y=k+272|0;R=k+276|0;Q=k+280|0;P=k+284|0;I=k+288|0;ca=k+292|0;ba=k+296|0;La=k+300|0;T=k+304|0;Pa=k+320|0;Qa=k+16|0;t=k+340|0;ha=k+12|0;ia=k+336|0;ja=k+144|0;Z=k;o=k+352|0;Ka=k+392|0;A=k+344|0;N=k+324|0;K=k+164|0;O=k+20|0;c[t>>2]=b;c[ha>>2]=d;c[ia>>2]=e;c[ja>>2]=f;h[Z>>3]=g;c[o>>2]=j;c[Qa>>2]=c[t>>2];b=c[Qa>>2]|0;if((c[b>>2]|0)==(c[b+4>>2]|0)){c[c[o>>2]>>2]=0;i=k;return}c[Pa>>2]=c[t>>2];Qa=c[Pa>>2]|0;if(!(((c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0)>>>0<128)){c[oa>>2]=N;c[pa>>2]=c[oa>>2];c[qa>>2]=c[pa>>2];b=c[qa>>2]|0;c[k+184>>2]=b;c[sa>>2]=ra;c[ta>>2]=-1;Qa=c[ta>>2]|0;c[ua>>2]=c[sa>>2];c[k+76>>2]=Qa;c[c[ua>>2]>>2]=0;c[va>>2]=c[ra>>2];c[k+92>>2]=va;c[b>>2]=0;c[xa>>2]=wa;c[ya>>2]=-1;Qa=c[ya>>2]|0;c[za>>2]=c[xa>>2];c[k+100>>2]=Qa;c[c[za>>2]>>2]=0;c[Aa>>2]=c[wa>>2];c[k+112>>2]=Aa;c[b+4>>2]=0;c[Ca>>2]=Ba;c[Da>>2]=-1;Qa=c[Da>>2]|0;c[Ea>>2]=c[Ca>>2];c[k+120>>2]=Qa;c[c[Ea>>2]>>2]=0;c[Fa>>2]=c[Ba>>2];c[k+136>>2]=Fa;c[Ga>>2]=b+8;c[Ha>>2]=0;b=c[Ha>>2]|0;c[Ia>>2]=c[Ga>>2];c[Ja>>2]=b;b=c[Ia>>2]|0;c[Ma>>2]=Ja;Qa=c[c[Ma>>2]>>2]|0;c[Na>>2]=b;c[Oa>>2]=Qa;Qa=c[Na>>2]|0;c[k+348>>2]=Qa;c[da>>2]=Oa;c[Qa>>2]=c[c[da>>2]>>2];c[ea>>2]=c[t>>2];c[fa>>2]=c[c[ea>>2]>>2];Qa=c[fa>>2]|0;c[ga>>2]=c[t>>2];b=c[ga>>2]|0;cg(Qa,(c[b+4>>2]|0)-(c[b>>2]|0)|0,c[ha>>2]|0,c[ia>>2]|0,c[ja>>2]|0,N);c[ka>>2]=c[t>>2];c[la>>2]=c[c[ka>>2]>>2];b=c[la>>2]|0;c[ma>>2]=c[t>>2];Qa=c[ma>>2]|0;dg(b,(c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0,c[ja>>2]|0,N);c[na>>2]=c[t>>2];Qa=c[na>>2]|0;ud(K,(c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0);c[O>>2]=0;while(1){l=c[t>>2]|0;if((c[O>>2]|0)>=10)break;c[W>>2]=l;c[X>>2]=c[c[W>>2]>>2];Qa=c[X>>2]|0;c[Y>>2]=c[t>>2];b=c[Y>>2]|0;b=(c[b+4>>2]|0)-(c[b>>2]|0)|0;g=+h[Z>>3];c[_>>2]=K;c[$>>2]=0;eg(Qa,b,g,N,(c[c[_>>2]>>2]|0)+(c[$>>2]|0)|0);c[aa>>2]=c[t>>2];c[C>>2]=c[c[aa>>2]>>2];b=c[C>>2]|0;c[D>>2]=c[t>>2];Qa=c[D>>2]|0;Qa=(c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0;c[E>>2]=K;c[F>>2]=0;fg(b,Qa,(c[c[E>>2]>>2]|0)+(c[F>>2]|0)|0,N);c[O>>2]=(c[O>>2]|0)+1}c[G>>2]=l;c[H>>2]=c[c[G>>2]>>2];b=c[H>>2]|0;c[J>>2]=c[t>>2];Qa=c[J>>2]|0;Qa=(c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0;c[L>>2]=K;c[M>>2]=0;gg(b,Qa,(c[c[L>>2]>>2]|0)+(c[M>>2]|0)|0);hd(K,c[o>>2]|0);md(K);hg(N);i=k;return}c[c[o>>2]>>2]=1;C=(c[o>>2]|0)+4|0;a[Ka>>0]=0;c[La>>2]=C;c[T>>2]=Ka;C=c[La>>2]|0;Qa=c[C+4>>2]|0;c[ba>>2]=C;c[ca>>2]=(c[ba>>2]|0)+8;c[I>>2]=c[ca>>2];if((Qa|0)!=(c[c[I>>2]>>2]|0)){c[P>>2]=C;c[Q>>2]=(c[P>>2]|0)+8;c[R>>2]=c[Q>>2];b=c[R>>2]|0;c[S>>2]=c[C+4>>2];Qa=c[S>>2]|0;D=c[T>>2]|0;c[U>>2]=b;c[V>>2]=Qa;c[y>>2]=D;D=c[V>>2]|0;if((D|0)!=0)a[D>>0]=a[c[y>>2]>>0]|0;Qa=C+4|0;c[Qa>>2]=(c[Qa>>2]|0)+1}else Vg(C,c[T>>2]|0);o=(c[o>>2]|0)+28|0;c[B>>2]=c[t>>2];Qa=c[B>>2]|0;c[A>>2]=(c[Qa+4>>2]|0)-(c[Qa>>2]|0);c[z>>2]=o;c[n>>2]=A;o=c[z>>2]|0;Qa=c[o+4>>2]|0;c[r>>2]=o;c[s>>2]=(c[r>>2]|0)+8;c[m>>2]=c[s>>2];if((Qa|0)==(c[c[m>>2]>>2]|0)){Ng(o,c[n>>2]|0);i=k;return}c[v>>2]=o;c[w>>2]=(c[v>>2]|0)+8;c[x>>2]=c[w>>2];b=c[x>>2]|0;c[u>>2]=c[o+4>>2];Qa=c[u>>2]|0;m=c[n>>2]|0;c[q>>2]=b;c[p>>2]=Qa;c[l>>2]=m;m=c[p>>2]|0;if((m|0)!=0)c[m>>2]=c[c[l>>2]>>2];Qa=o+4|0;c[Qa>>2]=(c[Qa>>2]|0)+4;i=k;return}function kd(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=+g;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0;k=i;i=i+400|0;Y=k+176|0;_=k+160|0;$=k+156|0;X=k+48|0;W=k+8|0;C=k+368|0;aa=k+376|0;D=k+200|0;E=k+148|0;F=k+24|0;na=k+28|0;ma=k+32|0;H=k+36|0;G=k+40|0;J=k+44|0;L=k+316|0;M=k+108|0;la=k+52|0;ka=k+56|0;ga=k+60|0;fa=k+64|0;ea=k+68|0;ua=k+72|0;sa=k+80|0;ta=k+84|0;ra=k+88|0;za=k+96|0;xa=k+104|0;ya=k+312|0;wa=k+152|0;Ea=k+116|0;Ca=k+124|0;Da=k+128|0;Ba=k+132|0;da=k+140|0;Na=k+356|0;Oa=k+364|0;Ma=k+372|0;Ia=k+380|0;Ja=k+384|0;Ga=k+388|0;Ha=k+180|0;qa=k+188|0;va=k+192|0;Aa=k+196|0;Fa=k+360|0;pa=k+204|0;oa=k+208|0;u=k+212|0;q=k+216|0;p=k+220|0;l=k+224|0;x=k+228|0;w=k+232|0;v=k+236|0;m=k+308|0;s=k+240|0;r=k+244|0;z=k+248|0;n=k+252|0;B=k+256|0;S=k+260|0;U=k+264|0;V=k+268|0;y=k+272|0;R=k+276|0;Q=k+280|0;P=k+284|0;I=k+288|0;ca=k+292|0;ba=k+296|0;La=k+300|0;T=k+304|0;Pa=k+320|0;Qa=k+16|0;t=k+340|0;ha=k+12|0;ia=k+336|0;ja=k+144|0;Z=k;o=k+352|0;Ka=k+392|0;A=k+344|0;N=k+324|0;K=k+164|0;O=k+20|0;c[t>>2]=b;c[ha>>2]=d;c[ia>>2]=e;c[ja>>2]=f;h[Z>>3]=g;c[o>>2]=j;c[Qa>>2]=c[t>>2];b=c[Qa>>2]|0;if((c[b>>2]|0)==(c[b+4>>2]|0)){c[c[o>>2]>>2]=0;i=k;return}c[Pa>>2]=c[t>>2];Qa=c[Pa>>2]|0;if(!((((c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0)/2|0)>>>0<128)){c[oa>>2]=N;c[pa>>2]=c[oa>>2];c[qa>>2]=c[pa>>2];b=c[qa>>2]|0;c[k+184>>2]=b;c[sa>>2]=ra;c[ta>>2]=-1;Qa=c[ta>>2]|0;c[ua>>2]=c[sa>>2];c[k+76>>2]=Qa;c[c[ua>>2]>>2]=0;c[va>>2]=c[ra>>2];c[k+92>>2]=va;c[b>>2]=0;c[xa>>2]=wa;c[ya>>2]=-1;Qa=c[ya>>2]|0;c[za>>2]=c[xa>>2];c[k+100>>2]=Qa;c[c[za>>2]>>2]=0;c[Aa>>2]=c[wa>>2];c[k+112>>2]=Aa;c[b+4>>2]=0;c[Ca>>2]=Ba;c[Da>>2]=-1;Qa=c[Da>>2]|0;c[Ea>>2]=c[Ca>>2];c[k+120>>2]=Qa;c[c[Ea>>2]>>2]=0;c[Fa>>2]=c[Ba>>2];c[k+136>>2]=Fa;c[Ga>>2]=b+8;c[Ha>>2]=0;b=c[Ha>>2]|0;c[Ia>>2]=c[Ga>>2];c[Ja>>2]=b;b=c[Ia>>2]|0;c[Ma>>2]=Ja;Qa=c[c[Ma>>2]>>2]|0;c[Na>>2]=b;c[Oa>>2]=Qa;Qa=c[Na>>2]|0;c[k+348>>2]=Qa;c[da>>2]=Oa;c[Qa>>2]=c[c[da>>2]>>2];c[ea>>2]=c[t>>2];c[fa>>2]=c[c[ea>>2]>>2];Qa=c[fa>>2]|0;c[ga>>2]=c[t>>2];b=c[ga>>2]|0;tf(Qa,((c[b+4>>2]|0)-(c[b>>2]|0)|0)/2|0,c[ha>>2]|0,c[ia>>2]|0,c[ja>>2]|0,N);c[ka>>2]=c[t>>2];c[la>>2]=c[c[ka>>2]>>2];b=c[la>>2]|0;c[ma>>2]=c[t>>2];Qa=c[ma>>2]|0;uf(b,((c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0)/2|0,c[ja>>2]|0,N);c[na>>2]=c[t>>2];Qa=c[na>>2]|0;ud(K,((c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0)/2|0);c[O>>2]=0;while(1){l=c[t>>2]|0;if((c[O>>2]|0)>=10)break;c[W>>2]=l;c[X>>2]=c[c[W>>2]>>2];Qa=c[X>>2]|0;c[Y>>2]=c[t>>2];b=c[Y>>2]|0;b=((c[b+4>>2]|0)-(c[b>>2]|0)|0)/2|0;g=+h[Z>>3];c[_>>2]=K;c[$>>2]=0;vf(Qa,b,g,N,(c[c[_>>2]>>2]|0)+(c[$>>2]|0)|0);c[aa>>2]=c[t>>2];c[C>>2]=c[c[aa>>2]>>2];b=c[C>>2]|0;c[D>>2]=c[t>>2];Qa=c[D>>2]|0;Qa=((c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0)/2|0;c[E>>2]=K;c[F>>2]=0;wf(b,Qa,(c[c[E>>2]>>2]|0)+(c[F>>2]|0)|0,N);c[O>>2]=(c[O>>2]|0)+1}c[G>>2]=l;c[H>>2]=c[c[G>>2]>>2];b=c[H>>2]|0;c[J>>2]=c[t>>2];Qa=c[J>>2]|0;Qa=((c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0)/2|0;c[L>>2]=K;c[M>>2]=0;xf(b,Qa,(c[c[L>>2]>>2]|0)+(c[M>>2]|0)|0);hd(K,c[o>>2]|0);md(K);yf(N);i=k;return}c[c[o>>2]>>2]=1;C=(c[o>>2]|0)+4|0;a[Ka>>0]=0;c[La>>2]=C;c[T>>2]=Ka;C=c[La>>2]|0;Qa=c[C+4>>2]|0;c[ba>>2]=C;c[ca>>2]=(c[ba>>2]|0)+8;c[I>>2]=c[ca>>2];if((Qa|0)!=(c[c[I>>2]>>2]|0)){c[P>>2]=C;c[Q>>2]=(c[P>>2]|0)+8;c[R>>2]=c[Q>>2];b=c[R>>2]|0;c[S>>2]=c[C+4>>2];Qa=c[S>>2]|0;D=c[T>>2]|0;c[U>>2]=b;c[V>>2]=Qa;c[y>>2]=D;D=c[V>>2]|0;if((D|0)!=0)a[D>>0]=a[c[y>>2]>>0]|0;Qa=C+4|0;c[Qa>>2]=(c[Qa>>2]|0)+1}else Vg(C,c[T>>2]|0);o=(c[o>>2]|0)+28|0;c[B>>2]=c[t>>2];Qa=c[B>>2]|0;c[A>>2]=((c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0)/2|0;c[z>>2]=o;c[n>>2]=A;o=c[z>>2]|0;Qa=c[o+4>>2]|0;c[r>>2]=o;c[s>>2]=(c[r>>2]|0)+8;c[m>>2]=c[s>>2];if((Qa|0)==(c[c[m>>2]>>2]|0)){Ng(o,c[n>>2]|0);i=k;return}c[v>>2]=o;c[w>>2]=(c[v>>2]|0)+8;c[x>>2]=c[w>>2];b=c[x>>2]|0;c[u>>2]=c[o+4>>2];Qa=c[u>>2]|0;m=c[n>>2]|0;c[q>>2]=b;c[p>>2]=Qa;c[l>>2]=m;m=c[p>>2]|0;if((m|0)!=0)c[m>>2]=c[c[l>>2]>>2];Qa=o+4|0;c[Qa>>2]=(c[Qa>>2]|0)+4;i=k;return}function ld(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=+g;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0;k=i;i=i+400|0;Y=k+176|0;_=k+160|0;$=k+156|0;X=k+48|0;W=k+8|0;C=k+368|0;aa=k+376|0;D=k+200|0;E=k+148|0;F=k+24|0;na=k+28|0;ma=k+32|0;H=k+36|0;G=k+40|0;J=k+44|0;L=k+316|0;M=k+108|0;la=k+52|0;ka=k+56|0;ga=k+60|0;fa=k+64|0;ea=k+68|0;ua=k+72|0;sa=k+80|0;ta=k+84|0;ra=k+88|0;za=k+96|0;xa=k+104|0;ya=k+312|0;wa=k+152|0;Ea=k+116|0;Ca=k+124|0;Da=k+128|0;Ba=k+132|0;da=k+140|0;Na=k+356|0;Oa=k+364|0;Ma=k+372|0;Ia=k+380|0;Ja=k+384|0;Ga=k+388|0;Ha=k+180|0;qa=k+188|0;va=k+192|0;Aa=k+196|0;Fa=k+360|0;pa=k+204|0;oa=k+208|0;u=k+212|0;q=k+216|0;p=k+220|0;l=k+224|0;x=k+228|0;w=k+232|0;v=k+236|0;m=k+308|0;s=k+240|0;r=k+244|0;z=k+248|0;n=k+252|0;B=k+256|0;S=k+260|0;U=k+264|0;V=k+268|0;y=k+272|0;R=k+276|0;Q=k+280|0;P=k+284|0;I=k+288|0;ca=k+292|0;ba=k+296|0;La=k+300|0;T=k+304|0;Pa=k+320|0;Qa=k+16|0;t=k+340|0;ha=k+12|0;ia=k+336|0;ja=k+144|0;Z=k;o=k+352|0;Ka=k+392|0;A=k+344|0;N=k+324|0;K=k+164|0;O=k+20|0;c[t>>2]=b;c[ha>>2]=d;c[ia>>2]=e;c[ja>>2]=f;h[Z>>3]=g;c[o>>2]=j;c[Qa>>2]=c[t>>2];b=c[Qa>>2]|0;if((c[b>>2]|0)==(c[b+4>>2]|0)){c[c[o>>2]>>2]=0;i=k;return}c[Pa>>2]=c[t>>2];Qa=c[Pa>>2]|0;if(!(((c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0)>>>0<128)){c[oa>>2]=N;c[pa>>2]=c[oa>>2];c[qa>>2]=c[pa>>2];b=c[qa>>2]|0;c[k+184>>2]=b;c[sa>>2]=ra;c[ta>>2]=-1;Qa=c[ta>>2]|0;c[ua>>2]=c[sa>>2];c[k+76>>2]=Qa;c[c[ua>>2]>>2]=0;c[va>>2]=c[ra>>2];c[k+92>>2]=va;c[b>>2]=0;c[xa>>2]=wa;c[ya>>2]=-1;Qa=c[ya>>2]|0;c[za>>2]=c[xa>>2];c[k+100>>2]=Qa;c[c[za>>2]>>2]=0;c[Aa>>2]=c[wa>>2];c[k+112>>2]=Aa;c[b+4>>2]=0;c[Ca>>2]=Ba;c[Da>>2]=-1;Qa=c[Da>>2]|0;c[Ea>>2]=c[Ca>>2];c[k+120>>2]=Qa;c[c[Ea>>2]>>2]=0;c[Fa>>2]=c[Ba>>2];c[k+136>>2]=Fa;c[Ga>>2]=b+8;c[Ha>>2]=0;b=c[Ha>>2]|0;c[Ia>>2]=c[Ga>>2];c[Ja>>2]=b;b=c[Ia>>2]|0;c[Ma>>2]=Ja;Qa=c[c[Ma>>2]>>2]|0;c[Na>>2]=b;c[Oa>>2]=Qa;Qa=c[Na>>2]|0;c[k+348>>2]=Qa;c[da>>2]=Oa;c[Qa>>2]=c[c[da>>2]>>2];c[ea>>2]=c[t>>2];c[fa>>2]=c[c[ea>>2]>>2];Qa=c[fa>>2]|0;c[ga>>2]=c[t>>2];b=c[ga>>2]|0;sd(Qa,(c[b+4>>2]|0)-(c[b>>2]|0)|0,c[ha>>2]|0,c[ia>>2]|0,c[ja>>2]|0,N);c[ka>>2]=c[t>>2];c[la>>2]=c[c[ka>>2]>>2];b=c[la>>2]|0;c[ma>>2]=c[t>>2];Qa=c[ma>>2]|0;td(b,(c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0,c[ja>>2]|0,N);c[na>>2]=c[t>>2];Qa=c[na>>2]|0;ud(K,(c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0);c[O>>2]=0;while(1){l=c[t>>2]|0;if((c[O>>2]|0)>=10)break;c[W>>2]=l;c[X>>2]=c[c[W>>2]>>2];Qa=c[X>>2]|0;c[Y>>2]=c[t>>2];b=c[Y>>2]|0;b=(c[b+4>>2]|0)-(c[b>>2]|0)|0;g=+h[Z>>3];c[_>>2]=K;c[$>>2]=0;vd(Qa,b,g,N,(c[c[_>>2]>>2]|0)+(c[$>>2]|0)|0);c[aa>>2]=c[t>>2];c[C>>2]=c[c[aa>>2]>>2];b=c[C>>2]|0;c[D>>2]=c[t>>2];Qa=c[D>>2]|0;Qa=(c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0;c[E>>2]=K;c[F>>2]=0;wd(b,Qa,(c[c[E>>2]>>2]|0)+(c[F>>2]|0)|0,N);c[O>>2]=(c[O>>2]|0)+1}c[G>>2]=l;c[H>>2]=c[c[G>>2]>>2];b=c[H>>2]|0;c[J>>2]=c[t>>2];Qa=c[J>>2]|0;Qa=(c[Qa+4>>2]|0)-(c[Qa>>2]|0)|0;c[L>>2]=K;c[M>>2]=0;xd(b,Qa,(c[c[L>>2]>>2]|0)+(c[M>>2]|0)|0);hd(K,c[o>>2]|0);md(K);yd(N);i=k;return}c[c[o>>2]>>2]=1;C=(c[o>>2]|0)+4|0;a[Ka>>0]=0;c[La>>2]=C;c[T>>2]=Ka;C=c[La>>2]|0;Qa=c[C+4>>2]|0;c[ba>>2]=C;c[ca>>2]=(c[ba>>2]|0)+8;c[I>>2]=c[ca>>2];if((Qa|0)!=(c[c[I>>2]>>2]|0)){c[P>>2]=C;c[Q>>2]=(c[P>>2]|0)+8;c[R>>2]=c[Q>>2];b=c[R>>2]|0;c[S>>2]=c[C+4>>2];Qa=c[S>>2]|0;D=c[T>>2]|0;c[U>>2]=b;c[V>>2]=Qa;c[y>>2]=D;D=c[V>>2]|0;if((D|0)!=0)a[D>>0]=a[c[y>>2]>>0]|0;Qa=C+4|0;c[Qa>>2]=(c[Qa>>2]|0)+1}else Vg(C,c[T>>2]|0);o=(c[o>>2]|0)+28|0;c[B>>2]=c[t>>2];Qa=c[B>>2]|0;c[A>>2]=(c[Qa+4>>2]|0)-(c[Qa>>2]|0);c[z>>2]=o;c[n>>2]=A;o=c[z>>2]|0;Qa=c[o+4>>2]|0;c[r>>2]=o;c[s>>2]=(c[r>>2]|0)+8;c[m>>2]=c[s>>2];if((Qa|0)==(c[c[m>>2]>>2]|0)){Ng(o,c[n>>2]|0);i=k;return}c[v>>2]=o;c[w>>2]=(c[v>>2]|0)+8;c[x>>2]=c[w>>2];b=c[x>>2]|0;c[u>>2]=c[o+4>>2];Qa=c[u>>2]|0;m=c[n>>2]|0;c[q>>2]=b;c[p>>2]=Qa;c[l>>2]=m;m=c[p>>2]|0;if((m|0)!=0)c[m>>2]=c[c[l>>2]>>2];Qa=o+4|0;c[Qa>>2]=(c[Qa>>2]|0)+4;i=k;return}function md(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;lh(c[d>>2]|0);i=b;return}function nd(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;jh(c[d>>2]|0);i=b;return}function od(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;ih(c[d>>2]|0);i=b;return}function pd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;k=i;i=i+64|0;d=k+36|0;e=k+8|0;l=k+32|0;j=k+40|0;f=k+48|0;g=k+16|0;m=k;n=k+24|0;o=k+4|0;p=k+28|0;h=k+20|0;c[p>>2]=a;c[h>>2]=b;b=c[p>>2]|0;a=c[h>>2]|0;if(a>>>0>(Hc(b)|0)>>>0)ht(b);else{c[o>>2]=b;c[n>>2]=(c[o>>2]|0)+8;c[m>>2]=c[n>>2];p=c[h>>2]|0;c[e>>2]=c[m>>2];c[l>>2]=p;p=c[l>>2]|0;c[k+44>>2]=c[e>>2];c[d>>2]=p;c[k+12>>2]=0;p=Qw(c[d>>2]<<5)|0;c[b+4>>2]=p;c[b>>2]=p;p=(c[b>>2]|0)+(c[h>>2]<<5)|0;c[g>>2]=b;c[f>>2]=(c[g>>2]|0)+8;c[j>>2]=c[f>>2];c[c[j>>2]>>2]=p;i=k;return}}function qd(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;k=i;i=i+48|0;g=k+36|0;j=k+16|0;e=k;l=k+28|0;n=k+32|0;o=k+40|0;p=k+12|0;q=k+24|0;h=k+20|0;m=k+8|0;f=k+4|0;c[q>>2]=a;c[h>>2]=b;c[m>>2]=d;d=c[q>>2]|0;c[p>>2]=d;c[o>>2]=(c[p>>2]|0)+8;c[n>>2]=c[o>>2];c[f>>2]=c[n>>2];while(1){if((c[h>>2]|0)==(c[m>>2]|0))break;p=c[f>>2]|0;c[g>>2]=c[d+4>>2];q=c[g>>2]|0;b=c[h>>2]|0;c[j>>2]=p;c[e>>2]=q;c[l>>2]=b;b=c[e>>2]|0;if((b|0)!=0){q=c[l>>2]|0;c[b+0>>2]=c[q+0>>2];c[b+4>>2]=c[q+4>>2];c[b+8>>2]=c[q+8>>2];c[b+12>>2]=c[q+12>>2];c[b+16>>2]=c[q+16>>2];c[b+20>>2]=c[q+20>>2];c[b+24>>2]=c[q+24>>2];c[b+28>>2]=c[q+28>>2]}q=d+4|0;c[q>>2]=(c[q>>2]|0)+32;c[h>>2]=(c[h>>2]|0)+32}i=k;return}function rd(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=i;i=i+144|0;w=d+48|0;B=d+8|0;C=d+84|0;A=d;x=d+16|0;y=d+4|0;z=d+132|0;v=d+80|0;u=d+44|0;t=d+20|0;E=d+24|0;e=d+28|0;D=d+32|0;g=d+36|0;f=d+40|0;s=d+76|0;l=d+124|0;k=d+128|0;j=d+52|0;h=d+56|0;p=d+64|0;q=d+68|0;r=d+92|0;m=d+96|0;n=d+100|0;o=d+104|0;I=d+108|0;K=d+116|0;J=d+120|0;H=d+88|0;F=d+72|0;G=d+12|0;c[F>>2]=b;b=c[F>>2]|0;F=c[b>>2]|0;c[K>>2]=H;c[J>>2]=-1;J=c[J>>2]|0;c[I>>2]=c[K>>2];c[d+112>>2]=J;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[d+60>>2]=G;if((F|0)==0){i=d;return}c[D>>2]=b;K=c[D>>2]|0;D=c[K>>2]|0;c[E>>2]=K;c[e>>2]=D;D=c[E>>2]|0;while(1){if((c[e>>2]|0)==(c[D+4>>2]|0))break;c[t>>2]=D;c[u>>2]=(c[t>>2]|0)+8;c[v>>2]=c[u>>2];K=c[v>>2]|0;I=D+4|0;J=(c[I>>2]|0)+ -32|0;c[I>>2]=J;c[w>>2]=J;J=c[w>>2]|0;c[x>>2]=K;c[y>>2]=J;J=c[x>>2]|0;K=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=J;c[C>>2]=K}c[s>>2]=b;c[f>>2]=(c[s>>2]|0)+8;c[g>>2]=c[f>>2];I=c[g>>2]|0;K=c[b>>2]|0;c[h>>2]=b;J=c[h>>2]|0;c[j>>2]=J;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];J=((c[c[l>>2]>>2]|0)-(c[J>>2]|0)|0)/32|0;c[m>>2]=I;c[n>>2]=K;c[o>>2]=J;J=c[n>>2]|0;K=c[o>>2]|0;c[p>>2]=c[m>>2];c[q>>2]=J;c[r>>2]=K;Sw(c[q>>2]|0);i=d;return}function sd(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;x=i;i=i+2192|0;m=x+2124|0;o=x+2152|0;p=x+2108|0;q=x+2148|0;l=x+2100|0;k=x+2096|0;t=x+2104|0;z=x+2144|0;y=x+2136|0;j=x+2112|0;w=x+2116|0;n=x+2120|0;s=x+2184|0;A=x+2128|0;G=x+2132|0;F=x+2140|0;u=x+2156|0;v=x+2160|0;E=x+2164|0;B=x+2168|0;C=x+2172|0;D=x+2176|0;h=x+2180|0;r=x;c[s>>2]=a;c[A>>2]=b;c[G>>2]=d;c[F>>2]=e;c[u>>2]=f;c[v>>2]=g;c[E>>2]=(((c[A>>2]|0)>>>0)/((c[G>>2]|0)>>>0)|0)+1;if((c[E>>2]|0)>(c[F>>2]|0))c[E>>2]=c[F>>2];c[B>>2]=7;c[C>>2]=((c[A>>2]|0)>>>0)/((c[E>>2]|0)>>>0)|0;c[D>>2]=0;while(1){if((c[D>>2]|0)>=(c[E>>2]|0))break;G=da(c[A>>2]|0,c[D>>2]|0)|0;c[h>>2]=(G>>>0)/((c[E>>2]|0)>>>0)|0;if((c[D>>2]|0)!=0){G=ey(B)|0;c[h>>2]=(c[h>>2]|0)+((G|0)%(c[C>>2]|0)|0)}if(((c[h>>2]|0)+(c[u>>2]|0)|0)>>>0>=(c[A>>2]|0)>>>0)c[h>>2]=(c[A>>2]|0)-(c[u>>2]|0)-1;Cd(r);sf(r,(c[s>>2]|0)+(c[h>>2]|0)|0,c[u>>2]|0);c[w>>2]=c[v>>2];c[n>>2]=r;g=c[w>>2]|0;G=c[g+4>>2]|0;c[j>>2]=g;c[y>>2]=(c[j>>2]|0)+8;c[z>>2]=c[y>>2];if((G|0)!=(c[c[z>>2]>>2]|0)){c[t>>2]=g;c[k>>2]=(c[t>>2]|0)+8;c[l>>2]=c[k>>2];a=c[l>>2]|0;c[m>>2]=c[g+4>>2];G=c[m>>2]|0;F=c[n>>2]|0;c[o>>2]=a;c[p>>2]=G;c[q>>2]=F;F=c[p>>2]|0;if((F|0)!=0)By(F|0,c[q>>2]|0,2096)|0;G=g+4|0;c[G>>2]=(c[G>>2]|0)+2096}else hf(g,c[n>>2]|0);c[D>>2]=(c[D>>2]|0)+1}i=x;return}function td(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;n=i;i=i+2160|0;t=n+2144|0;p=n+2124|0;r=n+2116|0;s=n+2108|0;u=n+2120|0;v=n+2100|0;l=n+2104|0;m=n+2148|0;f=n+2112|0;o=n+2128|0;h=n+2132|0;k=n+2136|0;g=n+2140|0;j=n;q=n+2096|0;c[l>>2]=a;c[m>>2]=b;c[f>>2]=d;c[o>>2]=e;c[h>>2]=((c[m>>2]<<1>>>0)/((c[f>>2]|0)>>>0)|0)+100;c[k>>2]=7;b=c[h>>2]|0;c[v>>2]=c[o>>2];a=c[v>>2]|0;a=b+(((c[a+4>>2]|0)-(c[a>>2]|0)|0)/2096|0)-1|0;c[u>>2]=c[o>>2];b=c[u>>2]|0;b=(a>>>0)/((((c[b+4>>2]|0)-(c[b>>2]|0)|0)/2096|0)>>>0)|0;c[t>>2]=c[o>>2];a=c[t>>2]|0;c[h>>2]=da(b,((c[a+4>>2]|0)-(c[a>>2]|0)|0)/2096|0)|0;c[g>>2]=0;while(1){if((c[g>>2]|0)>=(c[h>>2]|0))break;Cd(j);rf(k,c[l>>2]|0,c[m>>2]|0,c[f>>2]|0,j);u=c[g>>2]|0;c[p>>2]=c[o>>2];v=c[p>>2]|0;c[q>>2]=(u>>>0)%((((c[v+4>>2]|0)-(c[v>>2]|0)|0)/2096|0)>>>0)|0;v=c[q>>2]|0;c[r>>2]=c[o>>2];c[s>>2]=v;ke((c[c[r>>2]>>2]|0)+((c[s>>2]|0)*2096|0)|0,j);c[g>>2]=(c[g>>2]|0)+1}i=n;return}function ud(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;mf(c[f>>2]|0,c[e>>2]|0);i=d;return}function vd(b,e,f,g,j){b=b|0;e=e|0;f=+f;g=g|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;k=i;i=i+128|0;H=k+52|0;I=k+48|0;J=k+96|0;K=k+112|0;L=k+104|0;M=k+32|0;D=k+92|0;B=k+28|0;y=k+8|0;G=k+36|0;o=k+80|0;p=k+40|0;u=k+108|0;q=k+116|0;F=k+120|0;E=k+56|0;m=k+60|0;l=k+64|0;x=k+76|0;C=k+68|0;n=k+72|0;A=k;z=k+100|0;w=k+16|0;v=k+88|0;r=k+84|0;t=k+24|0;s=k+44|0;c[D>>2]=b;c[B>>2]=e;h[y>>3]=f;c[G>>2]=g;c[o>>2]=j;c[M>>2]=c[G>>2];b=c[M>>2]|0;if((((c[b+4>>2]|0)-(c[b>>2]|0)|0)/2096|0)>>>0<=1){c[p>>2]=0;while(1){if(!((c[p>>2]|0)>>>0<(c[B>>2]|0)>>>0))break;a[(c[o>>2]|0)+(c[p>>2]|0)>>0]=0;c[p>>2]=(c[p>>2]|0)+1}i=k;return}c[L>>2]=c[G>>2];M=c[L>>2]|0;c[u>>2]=((c[M+4>>2]|0)-(c[M>>2]|0)|0)/2096|0;M=(c[u>>2]|0)*520|0;c[q>>2]=Rw(M>>>0>536870911?-1:M<<3)|0;vy(c[q>>2]|0,0,(c[u>>2]|0)*4160|0)|0;c[F>>2]=0;while(1){if((c[F>>2]|0)>=520)break;c[E>>2]=0;while(1){if((c[E>>2]|0)>=(c[u>>2]|0))break;b=c[E>>2]|0;c[H>>2]=c[G>>2];c[I>>2]=b;b=c[(c[c[H>>2]>>2]|0)+((c[I>>2]|0)*2096|0)+2080>>2]|0;M=c[F>>2]|0;e=c[E>>2]|0;c[J>>2]=c[G>>2];c[K>>2]=e;f=+lf(b,c[(c[c[J>>2]>>2]|0)+((c[K>>2]|0)*2096|0)+(M<<2)>>2]|0);M=da(c[F>>2]|0,c[u>>2]|0)|0;h[(c[q>>2]|0)+(M+(c[E>>2]|0)<<3)>>3]=f;c[E>>2]=(c[E>>2]|0)+1}c[F>>2]=(c[F>>2]|0)+1}M=c[u>>2]|0;c[m>>2]=Rw(M>>>0>536870911?-1:M<<3)|0;vy(c[m>>2]|0,0,c[u>>2]<<3|0)|0;c[l>>2]=Rw(da(c[B>>2]|0,c[u>>2]|0)|0)|0;vy(c[l>>2]|0,0,da(c[B>>2]|0,c[u>>2]|0)|0)|0;c[x>>2]=0;while(1){if(!((c[x>>2]|0)>>>0<(c[B>>2]|0)>>>0))break;c[C>>2]=da(c[x>>2]|0,c[u>>2]|0)|0;c[n>>2]=da(d[(c[D>>2]|0)+(c[x>>2]|0)>>0]|0,c[u>>2]|0)|0;h[A>>3]=1.0e+99;c[z>>2]=0;while(1){if((c[z>>2]|0)>=(c[u>>2]|0))break;M=(c[m>>2]|0)+(c[z>>2]<<3)|0;h[M>>3]=+h[M>>3]+ +h[(c[q>>2]|0)+((c[n>>2]|0)+(c[z>>2]|0)<<3)>>3];if(+h[(c[m>>2]|0)+(c[z>>2]<<3)>>3]<+h[A>>3]){h[A>>3]=+h[(c[m>>2]|0)+(c[z>>2]<<3)>>3];a[(c[o>>2]|0)+(c[x>>2]|0)>>0]=c[z>>2]}c[z>>2]=(c[z>>2]|0)+1}h[w>>3]=+h[y>>3];if((c[x>>2]|0)>>>0<2e3)h[w>>3]=+h[w>>3]*(+((c[x>>2]|0)>>>0)*.07/2.0e3+.77);c[v>>2]=0;while(1){if((c[v>>2]|0)>=(c[u>>2]|0))break;M=(c[m>>2]|0)+(c[v>>2]<<3)|0;h[M>>3]=+h[M>>3]- +h[A>>3];if(+h[(c[m>>2]|0)+(c[v>>2]<<3)>>3]>=+h[w>>3]){h[(c[m>>2]|0)+(c[v>>2]<<3)>>3]=+h[w>>3];a[(c[l>>2]|0)+((c[C>>2]|0)+(c[v>>2]|0))>>0]=1}c[v>>2]=(c[v>>2]|0)+1}c[x>>2]=(c[x>>2]|0)+1}c[r>>2]=(c[B>>2]|0)-1;c[t>>2]=da(c[r>>2]|0,c[u>>2]|0)|0;c[s>>2]=d[(c[o>>2]|0)+(c[r>>2]|0)>>0];while(1){if((c[r>>2]|0)<=0)break;c[r>>2]=(c[r>>2]|0)+ -1;c[t>>2]=(c[t>>2]|0)-(c[u>>2]|0);if(a[(c[l>>2]|0)+((c[t>>2]|0)+(c[s>>2]|0))>>0]&1)c[s>>2]=d[(c[o>>2]|0)+(c[r>>2]|0)>>0];a[(c[o>>2]|0)+(c[r>>2]|0)>>0]=c[s>>2]}n=c[q>>2]|0;if((n|0)!=0)Tw(n);m=c[m>>2]|0;if((m|0)!=0)Tw(m);l=c[l>>2]|0;if((l|0)==0){i=k;return}Tw(l);i=k;return}function wd(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;u=i;i=i+96|0;n=u+28|0;o=u+4|0;q=u+52|0;w=u+24|0;B=u+68|0;C=u+8|0;A=u;x=u+56|0;y=u+64|0;z=u+88|0;v=u+80|0;j=u+84|0;t=u+32|0;D=u+12|0;h=u+44|0;E=u+48|0;F=u+40|0;p=u+36|0;k=u+60|0;l=u+16|0;m=u+20|0;r=u+76|0;s=u+72|0;c[p>>2]=b;c[k>>2]=e;c[l>>2]=f;c[m>>2]=g;c[r>>2]=ed(c[l>>2]|0,c[k>>2]|0)|0;c[F>>2]=c[m>>2];g=c[F>>2]|0;c[E>>2]=g;b=c[E>>2]|0;f=c[b>>2]|0;c[D>>2]=b;c[h>>2]=f;f=c[D>>2]|0;while(1){if((c[h>>2]|0)==(c[f+4>>2]|0))break;c[t>>2]=f;c[j>>2]=(c[t>>2]|0)+8;c[v>>2]=c[j>>2];F=c[v>>2]|0;D=f+4|0;E=(c[D>>2]|0)+ -2096|0;c[D>>2]=E;c[w>>2]=E;E=c[w>>2]|0;c[x>>2]=F;c[y>>2]=E;E=c[x>>2]|0;F=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=E;c[C>>2]=F}c[q>>2]=g;Kd(c[m>>2]|0,c[r>>2]|0);c[s>>2]=0;while(1){if(!((c[s>>2]|0)>>>0<(c[k>>2]|0)>>>0))break;F=d[(c[l>>2]|0)+(c[s>>2]|0)>>0]|0;c[n>>2]=c[m>>2];c[o>>2]=F;Dd((c[c[n>>2]>>2]|0)+((c[o>>2]|0)*2096|0)|0,d[(c[p>>2]|0)+(c[s>>2]|0)>>0]|0);c[s>>2]=(c[s>>2]|0)+1}i=u;return}



function $k(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;p=i;i=i+32|0;r=p+4|0;o=p+16|0;l=p+8|0;j=p+20|0;q=p+28|0;m=p;k=p+12|0;n=p+24|0;c[r>>2]=b;c[o>>2]=d;c[l>>2]=e;c[j>>2]=f;c[q>>2]=g;c[m>>2]=h;if((c[r>>2]|0)!=(c[o>>2]|0)){a[(c[j>>2]|0)+(c[c[m>>2]>>2]|0)>>0]=c[o>>2];a[(c[q>>2]|0)+(c[c[m>>2]>>2]|0)>>0]=0;r=c[m>>2]|0;c[r>>2]=(c[r>>2]|0)+1;c[l>>2]=(c[l>>2]|0)+ -1}if((c[l>>2]|0)==7){a[(c[j>>2]|0)+(c[c[m>>2]>>2]|0)>>0]=c[o>>2];a[(c[q>>2]|0)+(c[c[m>>2]>>2]|0)>>0]=0;r=c[m>>2]|0;c[r>>2]=(c[r>>2]|0)+1;c[l>>2]=(c[l>>2]|0)+ -1}if((c[l>>2]|0)<3){c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[l>>2]|0))break;a[(c[j>>2]|0)+(c[c[m>>2]>>2]|0)>>0]=c[o>>2];a[(c[q>>2]|0)+(c[c[m>>2]>>2]|0)>>0]=0;r=c[m>>2]|0;c[r>>2]=(c[r>>2]|0)+1;c[k>>2]=(c[k>>2]|0)+1}i=p;return}c[l>>2]=(c[l>>2]|0)-3;c[n>>2]=c[c[m>>2]>>2];while(1){if((c[l>>2]|0)<0)break;a[(c[j>>2]|0)+(c[c[m>>2]>>2]|0)>>0]=16;a[(c[q>>2]|0)+(c[c[m>>2]>>2]|0)>>0]=c[l>>2]&3;r=c[m>>2]|0;c[r>>2]=(c[r>>2]|0)+1;c[l>>2]=c[l>>2]>>2;c[l>>2]=(c[l>>2]|0)+ -1}_k(c[j>>2]|0,c[n>>2]|0,c[c[m>>2]>>2]|0);_k(c[q>>2]|0,c[n>>2]|0,c[c[m>>2]>>2]|0);i=p;return}function al(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;l=i;i=i+32|0;j=l+20|0;k=l+16|0;m=l+12|0;g=l+8|0;h=l+4|0;n=l;c[j>>2]=b;c[k>>2]=d;c[m>>2]=e;c[g>>2]=f;if((c[j>>2]|0)==11){a[(c[k>>2]|0)+(c[c[g>>2]>>2]|0)>>0]=0;a[(c[m>>2]|0)+(c[c[g>>2]>>2]|0)>>0]=0;b=c[g>>2]|0;c[b>>2]=(c[b>>2]|0)+1;c[j>>2]=(c[j>>2]|0)+ -1}if((c[j>>2]|0)<3){c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[j>>2]|0))break;a[(c[k>>2]|0)+(c[c[g>>2]>>2]|0)>>0]=0;a[(c[m>>2]|0)+(c[c[g>>2]>>2]|0)>>0]=0;b=c[g>>2]|0;c[b>>2]=(c[b>>2]|0)+1;c[h>>2]=(c[h>>2]|0)+1}i=l;return}c[j>>2]=(c[j>>2]|0)-3;c[n>>2]=c[c[g>>2]>>2];while(1){if((c[j>>2]|0)<0)break;a[(c[k>>2]|0)+(c[c[g>>2]>>2]|0)>>0]=17;a[(c[m>>2]|0)+(c[c[g>>2]>>2]|0)>>0]=c[j>>2]&7;b=c[g>>2]|0;c[b>>2]=(c[b>>2]|0)+1;c[j>>2]=c[j>>2]>>3;c[j>>2]=(c[j>>2]|0)+ -1}_k(c[k>>2]|0,c[n>>2]|0,c[c[g>>2]>>2]|0);_k(c[m>>2]|0,c[n>>2]|0,c[c[g>>2]>>2]|0);i=l;return}function bl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;l=i;i=i+80|0;o=l+60|0;m=l+44|0;j=l+20|0;e=l+16|0;n=l+4|0;h=l+40|0;g=l+48|0;k=l+56|0;t=l+64|0;x=l+24|0;w=l;r=l+32|0;v=l+28|0;s=l+8|0;u=l+36|0;p=l+12|0;q=l+52|0;c[m>>2]=b;c[j>>2]=d;while(1){if((c[m>>2]|0)<0)break;if((c[m>>2]|0)==0){f=4;break}if((c[(c[j>>2]|0)+((c[m>>2]|0)-1<<2)>>2]|0)!=0)break;c[m>>2]=(c[m>>2]|0)+ -1}if((f|0)==4){c[o>>2]=1;b=c[o>>2]|0;i=l;return b|0}c[t>>2]=0;c[x>>2]=1073741824;c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[m>>2]|0))break;if((c[(c[j>>2]|0)+(c[k>>2]<<2)>>2]|0)!=0?(c[t>>2]=(c[t>>2]|0)+1,(c[x>>2]|0)>(c[(c[j>>2]|0)+(c[k>>2]<<2)>>2]|0)):0)c[x>>2]=c[(c[j>>2]|0)+(c[k>>2]<<2)>>2];c[k>>2]=(c[k>>2]|0)+1}if((c[t>>2]|0)<5){c[o>>2]=1;b=c[o>>2]|0;i=l;return b|0}c[w>>2]=(c[m>>2]|0)-(c[t>>2]|0);a:do if((c[x>>2]|0)<4?(c[w>>2]|0)<6:0){c[k>>2]=1;while(1){if((c[k>>2]|0)>=((c[m>>2]|0)-1|0))break a;if(((c[(c[j>>2]|0)+((c[k>>2]|0)-1<<2)>>2]|0)!=0?(c[(c[j>>2]|0)+(c[k>>2]<<2)>>2]|0)==0:0)?(c[(c[j>>2]|0)+((c[k>>2]|0)+1<<2)>>2]|0)!=0:0)c[(c[j>>2]|0)+(c[k>>2]<<2)>>2]=1;c[k>>2]=(c[k>>2]|0)+1}}while(0);if((c[t>>2]|0)<28){c[o>>2]=1;b=c[o>>2]|0;i=l;return b|0}c[g>>2]=Px(c[m>>2]|0,1)|0;if((c[g>>2]|0)==0){c[o>>2]=0;b=c[o>>2]|0;i=l;return b|0}c[r>>2]=c[c[j>>2]>>2];c[v>>2]=0;c[k>>2]=0;while(1){if((c[k>>2]|0)>=((c[m>>2]|0)+1|0))break;if((c[k>>2]|0)!=(c[m>>2]|0)?(c[(c[j>>2]|0)+(c[k>>2]<<2)>>2]|0)==(c[r>>2]|0):0)c[v>>2]=(c[v>>2]|0)+1;else{if((c[r>>2]|0)==0?(c[v>>2]|0)>=5:0)f=36;else f=34;if(((f|0)==34?(f=0,(c[r>>2]|0)!=0):0)?(c[v>>2]|0)>=7:0)f=36;b:do if((f|0)==36){f=0;c[s>>2]=0;while(1){if((c[s>>2]|0)>=(c[v>>2]|0))break b;a[(c[g>>2]|0)+((c[k>>2]|0)-(c[s>>2]|0)-1)>>0]=1;c[s>>2]=(c[s>>2]|0)+1}}while(0);c[v>>2]=1;if((c[k>>2]|0)!=(c[m>>2]|0))c[r>>2]=c[(c[j>>2]|0)+(c[k>>2]<<2)>>2]}c[k>>2]=(c[k>>2]|0)+1}c[u>>2]=1240;c[e>>2]=0;c[n>>2]=(((c[c[j>>2]>>2]|0)+(c[(c[j>>2]|0)+4>>2]|0)+(c[(c[j>>2]|0)+8>>2]|0)<<8|0)/3|0)+420;c[h>>2]=0;c[k>>2]=0;while(1){if((c[k>>2]|0)>=((c[m>>2]|0)+1|0))break;do if((c[k>>2]|0)!=(c[m>>2]|0)?(a[(c[g>>2]|0)+(c[k>>2]|0)>>0]|0)==0:0){if((c[k>>2]|0)!=0?(a[(c[g>>2]|0)+((c[k>>2]|0)-1)>>0]|0)!=0:0){f=50;break}if((S((c[(c[j>>2]|0)+(c[k>>2]<<2)>>2]<<8)-(c[n>>2]|0)|0)|0)>=1240)f=50}else f=50;while(0);do if((f|0)==50){f=0;if((c[e>>2]|0)<4){if((c[e>>2]|0)>=3?(c[h>>2]|0)==0:0)f=53}else f=53;c:do if((f|0)==53){f=0;b=((c[h>>2]|0)+((c[e>>2]|0)/2|0)|0)/(c[e>>2]|0)|0;c[q>>2]=b;b=(c[q>>2]|0)<1?1:b;c[q>>2]=b;c[q>>2]=(c[h>>2]|0)==0?0:b;c[p>>2]=0;while(1){if((c[p>>2]|0)>=(c[e>>2]|0))break c;c[(c[j>>2]|0)+((c[k>>2]|0)-(c[p>>2]|0)-1<<2)>>2]=c[q>>2];c[p>>2]=(c[p>>2]|0)+1}}while(0);c[e>>2]=0;c[h>>2]=0;r=c[k>>2]|0;if((c[k>>2]|0)<((c[m>>2]|0)-2|0)){c[n>>2]=(((c[(c[j>>2]|0)+(r<<2)>>2]|0)+(c[(c[j>>2]|0)+((c[k>>2]|0)+1<<2)>>2]|0)+(c[(c[j>>2]|0)+((c[k>>2]|0)+2<<2)>>2]|0)<<8|0)/3|0)+420;break}if((r|0)<(c[m>>2]|0)){c[n>>2]=c[(c[j>>2]|0)+(c[k>>2]<<2)>>2]<<8;break}else{c[n>>2]=0;break}}while(0);c[e>>2]=(c[e>>2]|0)+1;if((c[k>>2]|0)!=(c[m>>2]|0)){c[h>>2]=(c[h>>2]|0)+(c[(c[j>>2]|0)+(c[k>>2]<<2)>>2]|0);if((c[e>>2]|0)>=4)c[n>>2]=((c[h>>2]<<8)+((c[e>>2]|0)/2|0)|0)/(c[e>>2]|0)|0;if((c[e>>2]|0)==4)c[n>>2]=(c[n>>2]|0)+120}c[k>>2]=(c[k>>2]|0)+1}Ox(c[g>>2]|0);c[o>>2]=1;b=c[o>>2]|0;i=l;return b|0}function cl(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;j=i;i=i+48|0;o=j+36|0;q=j+16|0;l=j+4|0;u=j+8|0;m=j+32|0;v=j;t=j+40|0;s=j+41|0;k=j+20|0;n=j+28|0;r=j+24|0;p=j+12|0;c[o>>2]=b;c[q>>2]=e;c[l>>2]=f;c[u>>2]=g;c[m>>2]=h;c[v>>2]=8;dl(c[o>>2]|0,c[q>>2]|0,t,s);c[k>>2]=0;while(1){if(!((c[k>>2]|0)>>>0<(c[q>>2]|0)>>>0))break;c[n>>2]=d[(c[o>>2]|0)+(c[k>>2]|0)>>0];c[r>>2]=1;a:do if((c[q>>2]|0)>50){if(!((c[n>>2]|0)!=0?a[t>>0]&1:0)){if((c[n>>2]|0)!=0)break;if(!(a[s>>0]&1))break}c[p>>2]=(c[k>>2]|0)+1;while(1){if(!((c[p>>2]|0)>>>0<(c[q>>2]|0)>>>0))break a;if((d[(c[o>>2]|0)+(c[p>>2]|0)>>0]|0|0)!=(c[n>>2]|0))break a;c[r>>2]=(c[r>>2]|0)+1;c[p>>2]=(c[p>>2]|0)+1}}while(0);if((c[n>>2]|0)==0)al(c[r>>2]|0,c[l>>2]|0,c[u>>2]|0,c[m>>2]|0);else{$k(c[v>>2]|0,c[n>>2]|0,c[r>>2]|0,c[l>>2]|0,c[u>>2]|0,c[m>>2]|0);c[v>>2]=c[n>>2]}c[k>>2]=(c[k>>2]|0)+(c[r>>2]|0)}while(1){if((c[c[m>>2]>>2]|0)<=0){k=20;break}if((d[(c[l>>2]|0)+((c[c[m>>2]>>2]|0)-1)>>0]|0|0)>0?(d[(c[l>>2]|0)+((c[c[m>>2]>>2]|0)-1)>>0]|0|0)<17:0){k=20;break}b=c[m>>2]|0;c[b>>2]=(c[b>>2]|0)+ -1}if((k|0)==20){i=j;return}}function dl(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;h=i;i=i+64|0;p=h+16|0;v=h+12|0;m=h+44|0;n=h+36|0;k=h+32|0;r=h+40|0;l=h+48|0;o=h+52|0;u=h+20|0;w=h;q=h+28|0;j=h+4|0;s=h+24|0;t=h+8|0;c[p>>2]=b;c[v>>2]=e;c[m>>2]=f;c[n>>2]=g;c[k>>2]=0;c[r>>2]=0;c[l>>2]=0;c[o>>2]=0;c[u>>2]=c[v>>2];c[w>>2]=0;while(1){if((c[w>>2]|0)>=(c[v>>2]|0))break;if((d[(c[p>>2]|0)+((c[v>>2]|0)-(c[w>>2]|0)-1)>>0]|0|0)!=0)break;c[u>>2]=(c[u>>2]|0)+ -1;c[w>>2]=(c[w>>2]|0)+1}c[q>>2]=0;while(1){if(!((c[q>>2]|0)>>>0<(c[u>>2]|0)>>>0))break;c[j>>2]=d[(c[p>>2]|0)+(c[q>>2]|0)>>0];c[s>>2]=1;c[t>>2]=(c[q>>2]|0)+1;while(1){if((c[t>>2]|0)>>>0<(c[u>>2]|0)>>>0)v=(d[(c[p>>2]|0)+(c[t>>2]|0)>>0]|0|0)==(c[j>>2]|0);else v=0;g=c[s>>2]|0;if(!v)break;c[s>>2]=g+1;c[t>>2]=(c[t>>2]|0)+1}if((g|0)>=3?(c[j>>2]|0)==0:0){c[k>>2]=(c[k>>2]|0)+(c[s>>2]|0);c[l>>2]=(c[l>>2]|0)+1}if((c[s>>2]|0)>=4?(c[j>>2]|0)!=0:0){c[r>>2]=(c[r>>2]|0)+(c[s>>2]|0);c[o>>2]=(c[o>>2]|0)+1}c[q>>2]=(c[q>>2]|0)+(c[s>>2]|0)}c[r>>2]=(c[r>>2]|0)-(c[o>>2]<<1);c[k>>2]=(c[k>>2]|0)-(c[l>>2]<<1);a[c[m>>2]>>0]=(c[r>>2]|0)>2&1;a[c[n>>2]>>0]=(c[k>>2]|0)>2&1;i=h;return}function el(f,g,h){f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;r=i;i=i+96|0;j=r;k=r+16|0;s=r+20|0;l=r+32|0;p=r+28|0;m=r+64|0;n=r+8|0;o=r+12|0;q=r+4|0;c[j>>2]=f;c[k>>2]=g;c[s>>2]=h;c[r+24>>2]=16;g=l+0|0;h=g+32|0;do{b[g>>1]=0;g=g+2|0}while((g|0)<(h|0));c[p>>2]=0;while(1){if((c[p>>2]|0)>=(c[k>>2]|0))break;f=l+(d[(c[j>>2]|0)+(c[p>>2]|0)>>0]<<1)|0;b[f>>1]=(b[f>>1]|0)+1<<16>>16;c[p>>2]=(c[p>>2]|0)+1}b[l>>1]=0;b[m>>1]=0;c[n>>2]=0;c[o>>2]=1;while(1){if((c[o>>2]|0)>=16)break;c[n>>2]=(c[n>>2]|0)+(e[l+((c[o>>2]|0)-1<<1)>>1]|0)<<1;b[m+(c[o>>2]<<1)>>1]=c[n>>2];c[o>>2]=(c[o>>2]|0)+1}c[q>>2]=0;while(1){if((c[q>>2]|0)>=(c[k>>2]|0))break;if((a[(c[j>>2]|0)+(c[q>>2]|0)>>0]|0)!=0){g=d[(c[j>>2]|0)+(c[q>>2]|0)>>0]|0;h=m+(d[(c[j>>2]|0)+(c[q>>2]|0)>>0]<<1)|0;f=b[h>>1]|0;b[h>>1]=f+1<<16>>16;f=fl(g,f)|0;b[(c[s>>2]|0)+(c[q>>2]<<1)>>1]=f}c[q>>2]=(c[q>>2]|0)+1}i=r;return}function fl(a,d){a=a|0;d=d|0;var f=0,g=0,h=0,j=0,k=0;h=i;i=i+16|0;g=h+8|0;k=h+12|0;f=h+4|0;j=h;c[g>>2]=a;b[k>>1]=d;c[f>>2]=c[127864+(((e[k>>1]|0)&15)<<2)>>2];c[j>>2]=4;while(1){if((c[j>>2]|0)>=(c[g>>2]|0))break;c[f>>2]=c[f>>2]<<4;b[k>>1]=(e[k>>1]|0)>>4;c[f>>2]=c[f>>2]|c[127864+(((e[k>>1]|0)&15)<<2)>>2];c[j>>2]=(c[j>>2]|0)+4}c[f>>2]=(c[f>>2]|0)>>>(0-(c[g>>2]|0)&3);i=h;return c[f>>2]&65535|0}function gl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0;k=i;i=i+224|0;U=k+92|0;V=k+196|0;S=k+188|0;Q=k+76|0;R=k+88|0;T=k+80|0;O=k+12|0;P=k+156|0;M=k+16|0;K=k+20|0;L=k+24|0;N=k+32|0;$=k+40|0;aa=k+44|0;Z=k+48|0;X=k+152|0;Y=k+52|0;_=k+56|0;f=k+64|0;J=k+176|0;G=k+184|0;E=k+192|0;F=k+200|0;H=k+208|0;x=k+216|0;y=k+96|0;v=k+100|0;t=k+104|0;u=k+108|0;w=k+112|0;p=k+120|0;q=k+148|0;n=k+124|0;l=k+128|0;m=k+132|0;o=k+136|0;I=k+144|0;h=k+8|0;j=k+4|0;D=k+160|0;A=k+164|0;B=k+68|0;z=k+172|0;C=k;r=k+72|0;s=k+180|0;W=k+220|0;c[I>>2]=b;c[h>>2]=d;c[j>>2]=e;c[k+168>>2]=30;a:while(1){c[D>>2]=((c[h>>2]|0)-(c[I>>2]|0)|0)/8|0;switch(c[D>>2]|0){case 4:{g=6;break a};case 3:{g=5;break a};case 2:{g=3;break a};case 1:case 0:{g=49;break a};case 5:{g=7;break a};default:{}}e=c[I>>2]|0;if((c[D>>2]|0)<=30){g=9;break}c[A>>2]=e;c[B>>2]=c[h>>2];c[B>>2]=(c[B>>2]|0)+ -8;b=(c[D>>2]|0)>=1e3;c[C>>2]=(c[D>>2]|0)/2|0;c[A>>2]=(c[A>>2]|0)+(c[C>>2]<<3);if(b){c[C>>2]=(c[C>>2]|0)/2|0;c[z>>2]=jl(c[I>>2]|0,(c[I>>2]|0)+(c[C>>2]<<3)|0,c[A>>2]|0,(c[A>>2]|0)+(c[C>>2]<<3)|0,c[B>>2]|0,c[j>>2]|0)|0}else c[z>>2]=hl(c[I>>2]|0,c[A>>2]|0,c[B>>2]|0,c[j>>2]|0)|0;c[r>>2]=c[I>>2];c[s>>2]=c[B>>2];do if(!(dc[c[c[j>>2]>>2]&15](c[r>>2]|0,c[A>>2]|0)|0)){while(1){d=c[r>>2]|0;b=(c[s>>2]|0)+ -8|0;c[s>>2]=b;if((d|0)==(b|0))break;if(dc[c[c[j>>2]>>2]&15](c[s>>2]|0,c[A>>2]|0)|0){g=28;break}}if((g|0)==28){g=0;b=c[s>>2]|0;c[X>>2]=c[r>>2];c[Y>>2]=b;c[Z>>2]=c[X>>2];b=c[Z>>2]|0;c[_+0>>2]=c[b+0>>2];c[_+4>>2]=c[b+4>>2];b=c[X>>2]|0;c[$>>2]=c[Y>>2];d=c[$>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];b=c[Y>>2]|0;c[aa>>2]=_;d=c[aa>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];c[z>>2]=(c[z>>2]|0)+1;break}c[r>>2]=(c[r>>2]|0)+8;c[s>>2]=c[h>>2];e=c[c[j>>2]>>2]|0;d=c[I>>2]|0;b=(c[s>>2]|0)+ -8|0;c[s>>2]=b;if(!(dc[e&15](d,b)|0)){while(1){if((c[r>>2]|0)==(c[s>>2]|0)){g=49;break a}b=dc[c[c[j>>2]>>2]&15](c[I>>2]|0,c[r>>2]|0)|0;e=c[r>>2]|0;if(b)break;c[r>>2]=e+8}b=c[s>>2]|0;c[t>>2]=e;c[u>>2]=b;c[v>>2]=c[t>>2];b=c[v>>2]|0;c[w+0>>2]=c[b+0>>2];c[w+4>>2]=c[b+4>>2];b=c[t>>2]|0;c[x>>2]=c[u>>2];d=c[x>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];b=c[u>>2]|0;c[y>>2]=w;d=c[y>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];c[z>>2]=(c[z>>2]|0)+1;c[r>>2]=(c[r>>2]|0)+8}if((c[r>>2]|0)==(c[s>>2]|0)){g=49;break a}while(1){if((dc[c[c[j>>2]>>2]&15](c[I>>2]|0,c[r>>2]|0)|0)^1){c[r>>2]=(c[r>>2]|0)+8;continue}do{e=c[c[j>>2]>>2]|0;d=c[I>>2]|0;b=(c[s>>2]|0)+ -8|0;c[s>>2]=b}while(dc[e&15](d,b)|0);e=c[r>>2]|0;if((c[r>>2]|0)>>>0>=(c[s>>2]|0)>>>0)break;b=c[s>>2]|0;c[E>>2]=e;c[F>>2]=b;c[G>>2]=c[E>>2];b=c[G>>2]|0;c[H+0>>2]=c[b+0>>2];c[H+4>>2]=c[b+4>>2];b=c[E>>2]|0;c[f>>2]=c[F>>2];d=c[f>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];b=c[F>>2]|0;c[J>>2]=H;d=c[J>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];c[z>>2]=(c[z>>2]|0)+1;c[r>>2]=(c[r>>2]|0)+8}c[I>>2]=e;continue a}while(0);c[r>>2]=(c[r>>2]|0)+8;b:do if((c[r>>2]|0)>>>0<(c[s>>2]|0)>>>0)while(1){if(dc[c[c[j>>2]>>2]&15](c[r>>2]|0,c[A>>2]|0)|0){c[r>>2]=(c[r>>2]|0)+8;continue}do{d=c[c[j>>2]>>2]|0;b=(c[s>>2]|0)+ -8|0;c[s>>2]=b}while((dc[d&15](b,c[A>>2]|0)|0)^1);if((c[r>>2]|0)>>>0>(c[s>>2]|0)>>>0)break b;b=c[s>>2]|0;c[K>>2]=c[r>>2];c[L>>2]=b;c[M>>2]=c[K>>2];b=c[M>>2]|0;c[N+0>>2]=c[b+0>>2];c[N+4>>2]=c[b+4>>2];b=c[K>>2]|0;c[O>>2]=c[L>>2];d=c[O>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];b=c[L>>2]|0;c[P>>2]=N;d=c[P>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];c[z>>2]=(c[z>>2]|0)+1;if((c[A>>2]|0)==(c[r>>2]|0))c[A>>2]=c[s>>2];c[r>>2]=(c[r>>2]|0)+8}while(0);if((c[r>>2]|0)!=(c[A>>2]|0)?dc[c[c[j>>2]>>2]&15](c[A>>2]|0,c[r>>2]|0)|0:0){b=c[A>>2]|0;c[Q>>2]=c[r>>2];c[R>>2]=b;c[S>>2]=c[Q>>2];b=c[S>>2]|0;c[T+0>>2]=c[b+0>>2];c[T+4>>2]=c[b+4>>2];b=c[Q>>2]|0;c[U>>2]=c[R>>2];d=c[U>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];b=c[R>>2]|0;c[V>>2]=T;d=c[V>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];c[z>>2]=(c[z>>2]|0)+1}do if((c[z>>2]|0)==0){a[W>>0]=(ll(c[I>>2]|0,c[r>>2]|0,c[j>>2]|0)|0)&1;b=ll((c[r>>2]|0)+8|0,c[h>>2]|0,c[j>>2]|0)|0;e=a[W>>0]&1;if(b){if(e){g=49;break a}c[h>>2]=c[r>>2];continue a}else{if(!e)break;b=(c[r>>2]|0)+8|0;c[r>>2]=b;c[I>>2]=b;continue a}}while(0);if((((c[r>>2]|0)-(c[I>>2]|0)|0)/8|0|0)<(((c[h>>2]|0)-(c[r>>2]|0)|0)/8|0|0)){gl(c[I>>2]|0,c[r>>2]|0,c[j>>2]|0);b=(c[r>>2]|0)+8|0;c[r>>2]=b;c[I>>2]=b;continue}else{gl((c[r>>2]|0)+8|0,c[h>>2]|0,c[j>>2]|0);c[h>>2]=c[r>>2];continue}}if((g|0)==3){d=c[c[j>>2]>>2]|0;b=(c[h>>2]|0)+ -8|0;c[h>>2]=b;if(!(dc[d&15](b,c[I>>2]|0)|0)){i=k;return}b=c[h>>2]|0;c[l>>2]=c[I>>2];c[m>>2]=b;c[n>>2]=c[l>>2];b=c[n>>2]|0;c[o+0>>2]=c[b+0>>2];c[o+4>>2]=c[b+4>>2];b=c[l>>2]|0;c[p>>2]=c[m>>2];d=c[p>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];b=c[m>>2]|0;c[q>>2]=o;d=c[q>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];i=k;return}else if((g|0)==5){e=c[I>>2]|0;d=(c[I>>2]|0)+8|0;b=(c[h>>2]|0)+ -8|0;c[h>>2]=b;hl(e,d,b,c[j>>2]|0)|0;i=k;return}else if((g|0)==6){aa=c[I>>2]|0;e=(c[I>>2]|0)+8|0;d=(c[I>>2]|0)+16|0;b=(c[h>>2]|0)+ -8|0;c[h>>2]=b;il(aa,e,d,b,c[j>>2]|0)|0;i=k;return}else if((g|0)==7){$=c[I>>2]|0;aa=(c[I>>2]|0)+8|0;e=(c[I>>2]|0)+16|0;d=(c[I>>2]|0)+24|0;b=(c[h>>2]|0)+ -8|0;c[h>>2]=b;jl($,aa,e,d,b,c[j>>2]|0)|0;i=k;return}else if((g|0)==9){kl(e,c[h>>2]|0,c[j>>2]|0);i=k;return}else if((g|0)==49){i=k;return}}function hl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;A=i;i=i+176|0;m=A+64|0;j=A+104|0;o=A+116|0;n=A+132|0;l=A+156|0;k=A+56|0;B=A+12|0;C=A+108|0;z=A+16|0;x=A+20|0;f=A+24|0;g=A+32|0;J=A+40|0;E=A+128|0;H=A+136|0;K=A+144|0;G=A+152|0;I=A+160|0;v=A+168|0;w=A+68|0;t=A+72|0;r=A+76|0;s=A+80|0;u=A+88|0;P=A+96|0;Q=A+100|0;N=A+4|0;L=A;M=A+112|0;O=A+120|0;y=A+44|0;F=A+48|0;q=A+140|0;p=A+52|0;D=A+148|0;h=A+8|0;c[F>>2]=a;c[q>>2]=b;c[p>>2]=d;c[D>>2]=e;c[h>>2]=0;a=dc[c[c[D>>2]>>2]&15](c[q>>2]|0,c[F>>2]|0)|0;e=dc[c[c[D>>2]>>2]&15](c[p>>2]|0,c[q>>2]|0)|0;if(a){E=c[F>>2]|0;if(e){a=c[p>>2]|0;c[n>>2]=E;c[l>>2]=a;c[o>>2]=c[n>>2];a=c[o>>2]|0;c[k+0>>2]=c[a+0>>2];c[k+4>>2]=c[a+4>>2];a=c[n>>2]|0;c[m>>2]=c[l>>2];b=c[m>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];a=c[l>>2]|0;c[j>>2]=k;b=c[j>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[h>>2]=1;c[y>>2]=c[h>>2];a=c[y>>2]|0;i=A;return a|0}a=c[q>>2]|0;c[x>>2]=E;c[f>>2]=a;c[z>>2]=c[x>>2];a=c[z>>2]|0;c[g+0>>2]=c[a+0>>2];c[g+4>>2]=c[a+4>>2];a=c[x>>2]|0;c[B>>2]=c[f>>2];b=c[B>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];a=c[f>>2]|0;c[C>>2]=g;b=c[C>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[h>>2]=1;if(dc[c[c[D>>2]>>2]&15](c[p>>2]|0,c[q>>2]|0)|0){a=c[p>>2]|0;c[r>>2]=c[q>>2];c[s>>2]=a;c[t>>2]=c[r>>2];a=c[t>>2]|0;c[u+0>>2]=c[a+0>>2];c[u+4>>2]=c[a+4>>2];a=c[r>>2]|0;c[v>>2]=c[s>>2];b=c[v>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];a=c[s>>2]|0;c[w>>2]=u;b=c[w>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[h>>2]=2}c[y>>2]=c[h>>2];a=c[y>>2]|0;i=A;return a|0}else{if(!e){c[y>>2]=c[h>>2];a=c[y>>2]|0;i=A;return a|0}a=c[p>>2]|0;c[L>>2]=c[q>>2];c[M>>2]=a;c[N>>2]=c[L>>2];a=c[N>>2]|0;c[O+0>>2]=c[a+0>>2];c[O+4>>2]=c[a+4>>2];a=c[L>>2]|0;c[P>>2]=c[M>>2];b=c[P>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];a=c[M>>2]|0;c[Q>>2]=O;b=c[Q>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[h>>2]=1;if(dc[c[c[D>>2]>>2]&15](c[q>>2]|0,c[F>>2]|0)|0){a=c[q>>2]|0;c[K>>2]=c[F>>2];c[G>>2]=a;c[H>>2]=c[K>>2];a=c[H>>2]|0;c[I+0>>2]=c[a+0>>2];c[I+4>>2]=c[a+4>>2];a=c[K>>2]|0;c[J>>2]=c[G>>2];b=c[J>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];a=c[G>>2]|0;c[E>>2]=I;b=c[E>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[h>>2]=2}c[y>>2]=c[h>>2];a=c[y>>2]|0;i=A;return a|0}return 0}function il(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;v=i;i=i+112|0;w=v+36|0;x=v+32|0;u=v;s=v+92|0;t=v+60|0;g=v+8|0;p=v+16|0;q=v+52|0;n=v+72|0;l=v+80|0;m=v+88|0;o=v+96|0;E=v+104|0;F=v+40|0;C=v+44|0;A=v+48|0;B=v+56|0;D=v+64|0;k=v+20|0;j=v+4|0;r=v+24|0;z=v+76|0;y=v+28|0;h=v+84|0;c[k>>2]=a;c[j>>2]=b;c[r>>2]=d;c[z>>2]=e;c[y>>2]=f;c[h>>2]=hl(c[k>>2]|0,c[j>>2]|0,c[r>>2]|0,c[y>>2]|0)|0;if(!(dc[c[c[y>>2]>>2]&15](c[z>>2]|0,c[r>>2]|0)|0)){a=c[h>>2]|0;i=v;return a|0}a=c[z>>2]|0;c[A>>2]=c[r>>2];c[B>>2]=a;c[C>>2]=c[A>>2];a=c[C>>2]|0;c[D+0>>2]=c[a+0>>2];c[D+4>>2]=c[a+4>>2];a=c[A>>2]|0;c[E>>2]=c[B>>2];b=c[E>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];a=c[B>>2]|0;c[F>>2]=D;b=c[F>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[h>>2]=(c[h>>2]|0)+1;if(!(dc[c[c[y>>2]>>2]&15](c[r>>2]|0,c[j>>2]|0)|0)){a=c[h>>2]|0;i=v;return a|0}a=c[r>>2]|0;c[s>>2]=c[j>>2];c[t>>2]=a;c[u>>2]=c[s>>2];a=c[u>>2]|0;c[g+0>>2]=c[a+0>>2];c[g+4>>2]=c[a+4>>2];a=c[s>>2]|0;c[w>>2]=c[t>>2];b=c[w>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];a=c[t>>2]|0;c[x>>2]=g;b=c[x>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[h>>2]=(c[h>>2]|0)+1;if(!(dc[c[c[y>>2]>>2]&15](c[j>>2]|0,c[k>>2]|0)|0)){a=c[h>>2]|0;i=v;return a|0}a=c[j>>2]|0;c[l>>2]=c[k>>2];c[m>>2]=a;c[n>>2]=c[l>>2];a=c[n>>2]|0;c[o+0>>2]=c[a+0>>2];c[o+4>>2]=c[a+4>>2];a=c[l>>2]|0;c[p>>2]=c[m>>2];b=c[p>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];a=c[m>>2]|0;c[q>>2]=o;b=c[q>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[h>>2]=(c[h>>2]|0)+1;a=c[h>>2]|0;i=v;return a|0}function jl(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;A=i;i=i+144|0;x=A+136|0;y=A+128|0;v=A+48|0;t=A+92|0;u=A+56|0;w=A+16|0;F=A+24|0;G=A+96|0;D=A+28|0;B=A+32|0;C=A+36|0;E=A+40|0;q=A+116|0;r=A+124|0;o=A+132|0;m=A+140|0;n=A+60|0;p=A+64|0;M=A+72|0;N=A+76|0;K=A+80|0;I=A+84|0;J=A+88|0;L=A+8|0;l=A;k=A+104|0;s=A+100|0;h=A+108|0;H=A+112|0;z=A+52|0;j=A+120|0;c[l>>2]=a;c[k>>2]=b;c[s>>2]=d;c[h>>2]=e;c[H>>2]=f;c[z>>2]=g;c[j>>2]=il(c[l>>2]|0,c[k>>2]|0,c[s>>2]|0,c[h>>2]|0,c[z>>2]|0)|0;if(!(dc[c[c[z>>2]>>2]&15](c[H>>2]|0,c[h>>2]|0)|0)){a=c[j>>2]|0;i=A;return a|0}a=c[H>>2]|0;c[I>>2]=c[h>>2];c[J>>2]=a;c[K>>2]=c[I>>2];a=c[K>>2]|0;c[L+0>>2]=c[a+0>>2];c[L+4>>2]=c[a+4>>2];a=c[I>>2]|0;c[M>>2]=c[J>>2];b=c[M>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];a=c[J>>2]|0;c[N>>2]=L;b=c[N>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[j>>2]=(c[j>>2]|0)+1;if(!(dc[c[c[z>>2]>>2]&15](c[h>>2]|0,c[s>>2]|0)|0)){a=c[j>>2]|0;i=A;return a|0}a=c[h>>2]|0;c[B>>2]=c[s>>2];c[C>>2]=a;c[D>>2]=c[B>>2];a=c[D>>2]|0;c[E+0>>2]=c[a+0>>2];c[E+4>>2]=c[a+4>>2];a=c[B>>2]|0;c[F>>2]=c[C>>2];b=c[F>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];a=c[C>>2]|0;c[G>>2]=E;b=c[G>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[j>>2]=(c[j>>2]|0)+1;if(!(dc[c[c[z>>2]>>2]&15](c[s>>2]|0,c[k>>2]|0)|0)){a=c[j>>2]|0;i=A;return a|0}a=c[s>>2]|0;c[t>>2]=c[k>>2];c[u>>2]=a;c[v>>2]=c[t>>2];a=c[v>>2]|0;c[w+0>>2]=c[a+0>>2];c[w+4>>2]=c[a+4>>2];a=c[t>>2]|0;c[x>>2]=c[u>>2];b=c[x>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];a=c[u>>2]|0;c[y>>2]=w;b=c[y>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[j>>2]=(c[j>>2]|0)+1;if(!(dc[c[c[z>>2]>>2]&15](c[k>>2]|0,c[l>>2]|0)|0)){a=c[j>>2]|0;i=A;return a|0}a=c[k>>2]|0;c[m>>2]=c[l>>2];c[n>>2]=a;c[o>>2]=c[m>>2];a=c[o>>2]|0;c[p+0>>2]=c[a+0>>2];c[p+4>>2]=c[a+4>>2];a=c[m>>2]|0;c[q>>2]=c[n>>2];b=c[q>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];a=c[n>>2]|0;c[r>>2]=p;b=c[r>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[j>>2]=(c[j>>2]|0)+1;a=c[j>>2]|0;i=A;return a|0}function kl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;l=i;i=i+48|0;h=l;p=l+16|0;e=l+36|0;j=l+4|0;o=l+40|0;n=l+44|0;f=l+12|0;k=l+32|0;m=l+24|0;g=l+8|0;c[j>>2]=a;c[o>>2]=b;c[n>>2]=d;c[f>>2]=(c[j>>2]|0)+16;hl(c[j>>2]|0,(c[j>>2]|0)+8|0,c[f>>2]|0,c[n>>2]|0)|0;c[k>>2]=(c[f>>2]|0)+8;while(1){if((c[k>>2]|0)==(c[o>>2]|0))break;if(dc[c[c[n>>2]>>2]&15](c[k>>2]|0,c[f>>2]|0)|0){c[e>>2]=c[k>>2];a=c[e>>2]|0;c[m+0>>2]=c[a+0>>2];c[m+4>>2]=c[a+4>>2];c[g>>2]=c[f>>2];c[f>>2]=c[k>>2];do{a=c[f>>2]|0;c[h>>2]=c[g>>2];b=c[h>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[f>>2]=c[g>>2];if((c[f>>2]|0)==(c[j>>2]|0))break;b=c[c[n>>2]>>2]|0;a=(c[g>>2]|0)+ -8|0;c[g>>2]=a}while(dc[b&15](m,a)|0);a=c[f>>2]|0;c[p>>2]=m;b=c[p>>2]|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2]}c[f>>2]=c[k>>2];c[k>>2]=(c[k>>2]|0)+8}i=l;return}function ll(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+96|0;x=h+80|0;y=h+44|0;u=h+24|0;m=h+16|0;q=h+4|0;o=h+40|0;n=h+48|0;l=h+56|0;r=h+72|0;f=h+84|0;p=h+28|0;g=h;k=h+32|0;s=h+36|0;v=h+12|0;j=h+52|0;t=h+64|0;w=h+20|0;c[p>>2]=b;c[g>>2]=d;c[k>>2]=e;switch(((c[g>>2]|0)-(c[p>>2]|0)|0)/8|0|0){case 1:case 0:{a[f>>0]=1;b=a[f>>0]|0;b=b&1;i=h;return b|0};case 2:{d=c[c[k>>2]>>2]|0;b=(c[g>>2]|0)+ -8|0;c[g>>2]=b;if(dc[d&15](b,c[p>>2]|0)|0){b=c[g>>2]|0;c[n>>2]=c[p>>2];c[l>>2]=b;c[o>>2]=c[n>>2];b=c[o>>2]|0;c[r+0>>2]=c[b+0>>2];c[r+4>>2]=c[b+4>>2];b=c[n>>2]|0;c[m>>2]=c[l>>2];d=c[m>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];b=c[l>>2]|0;c[q>>2]=r;d=c[q>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2]}a[f>>0]=1;b=a[f>>0]|0;b=b&1;i=h;return b|0};case 4:{x=c[p>>2]|0;y=(c[p>>2]|0)+8|0;d=(c[p>>2]|0)+16|0;b=(c[g>>2]|0)+ -8|0;c[g>>2]=b;il(x,y,d,b,c[k>>2]|0)|0;a[f>>0]=1;b=a[f>>0]|0;b=b&1;i=h;return b|0};case 3:{y=c[p>>2]|0;d=(c[p>>2]|0)+8|0;b=(c[g>>2]|0)+ -8|0;c[g>>2]=b;hl(y,d,b,c[k>>2]|0)|0;a[f>>0]=1;b=a[f>>0]|0;b=b&1;i=h;return b|0};case 5:{w=c[p>>2]|0;x=(c[p>>2]|0)+8|0;y=(c[p>>2]|0)+16|0;d=(c[p>>2]|0)+24|0;b=(c[g>>2]|0)+ -8|0;c[g>>2]=b;jl(w,x,y,d,b,c[k>>2]|0)|0;a[f>>0]=1;b=a[f>>0]|0;b=b&1;i=h;return b|0};default:{c[s>>2]=(c[p>>2]|0)+16;hl(c[p>>2]|0,(c[p>>2]|0)+8|0,c[s>>2]|0,c[k>>2]|0)|0;c[h+8>>2]=8;c[v>>2]=0;c[j>>2]=(c[s>>2]|0)+8;while(1){if((c[j>>2]|0)==(c[g>>2]|0)){k=18;break}if(dc[c[c[k>>2]>>2]&15](c[j>>2]|0,c[s>>2]|0)|0){c[y>>2]=c[j>>2];b=c[y>>2]|0;c[t+0>>2]=c[b+0>>2];c[t+4>>2]=c[b+4>>2];c[w>>2]=c[s>>2];c[s>>2]=c[j>>2];do{b=c[s>>2]|0;c[x>>2]=c[w>>2];d=c[x>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];c[s>>2]=c[w>>2];if((c[s>>2]|0)==(c[p>>2]|0))break;d=c[c[k>>2]>>2]|0;b=(c[w>>2]|0)+ -8|0;c[w>>2]=b}while(dc[d&15](t,b)|0);b=c[s>>2]|0;c[u>>2]=t;d=c[u>>2]|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];b=(c[v>>2]|0)+1|0;c[v>>2]=b;if((b|0)==8){k=16;break}}c[s>>2]=c[j>>2];c[j>>2]=(c[j>>2]|0)+8}if((k|0)==16){b=(c[j>>2]|0)+8|0;c[j>>2]=b;a[f>>0]=(b|0)==(c[g>>2]|0)&1;b=a[f>>0]|0;b=b&1;i=h;return b|0}else if((k|0)==18){a[f>>0]=1;b=a[f>>0]|0;b=b&1;i=h;return b|0}}}return 0}function ml(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;c[c[e>>2]>>2]=c[f>>2];i=d;return}function nl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;f=i;i=i+160|0;n=f+72|0;g=f+32|0;l=f+108|0;j=f+132|0;s=f+8|0;y=f+76|0;z=f+28|0;w=f+20|0;x=f+24|0;v=f;h=f+96|0;u=f+104|0;E=f+136|0;D=f+140|0;C=f+144|0;B=f+52|0;A=f+56|0;t=f+60|0;F=f+64|0;m=f+68|0;p=f+16|0;q=f+4|0;r=f+84|0;G=f+80|0;H=f+88|0;I=f+92|0;J=f+36|0;K=f+100|0;k=f+40|0;o=f+44|0;e=f+112|0;c[K>>2]=b;c[k>>2]=d;b=c[K>>2]|0;c[J>>2]=b;c[I>>2]=(c[J>>2]|0)+8;c[H>>2]=c[I>>2];c[o>>2]=c[H>>2];c[G>>2]=b;d=c[G>>2]|0;d=(((c[d+4>>2]|0)-(c[d>>2]|0)|0)/8|0)+1|0;c[F>>2]=b;c[m>>2]=d;d=c[F>>2]|0;c[p>>2]=ql(d)|0;if((c[m>>2]|0)>>>0>(c[p>>2]|0)>>>0)ht(d);c[A>>2]=d;c[B>>2]=c[A>>2];K=c[B>>2]|0;c[C>>2]=K;c[D>>2]=(c[C>>2]|0)+8;c[E>>2]=c[D>>2];c[q>>2]=((c[c[E>>2]>>2]|0)-(c[K>>2]|0)|0)/8|0;if((c[q>>2]|0)>>>0>=(((c[p>>2]|0)>>>0)/2|0)>>>0)c[t>>2]=c[p>>2];else{c[r>>2]=c[q>>2]<<1;c[h>>2]=r;c[u>>2]=m;K=c[h>>2]|0;J=c[u>>2]|0;a[v+0>>0]=a[f+148>>0]|0;c[w>>2]=K;c[x>>2]=J;J=c[w>>2]|0;K=c[x>>2]|0;c[f+12>>2]=v;c[y>>2]=J;c[z>>2]=K;c[t>>2]=c[((c[c[y>>2]>>2]|0)>>>0<(c[c[z>>2]>>2]|0)>>>0?c[x>>2]|0:c[w>>2]|0)>>2]}K=c[t>>2]|0;c[s>>2]=b;J=c[s>>2]|0;rl(e,K,((c[J+4>>2]|0)-(c[J>>2]|0)|0)/8|0,c[o>>2]|0);J=c[o>>2]|0;c[j>>2]=c[e+8>>2];K=c[j>>2]|0;c[l>>2]=c[k>>2];h=c[l>>2]|0;c[f+48>>2]=J;c[n>>2]=K;c[g>>2]=h;h=c[n>>2]|0;if((h|0)==0){K=e+8|0;J=c[K>>2]|0;J=J+8|0;c[K>>2]=J;ol(b,e);pl(e);i=f;return}K=c[g>>2]|0;c[h+0>>2]=c[K+0>>2];c[h+4>>2]=c[K+4>>2];K=e+8|0;J=c[K>>2]|0;J=J+8|0;c[K>>2]=J;ol(b,e);pl(e);i=f;return}function ol(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=i;i=i+144|0;F=d+108|0;H=d+88|0;G=d+80|0;E=d+48|0;C=d+8|0;z=d+12|0;D=d+84|0;B=d+16|0;y=d+20|0;A=d+24|0;w=d+28|0;t=d+32|0;x=d+104|0;v=d+112|0;s=d+120|0;u=d+128|0;m=d+136|0;q=d+52|0;r=d+56|0;n=d+60|0;o=d+64|0;p=d+68|0;k=d+72|0;g=d+76|0;l=d+4|0;j=d;f=d+92|0;h=d+96|0;K=d+100|0;J=d+40|0;I=d+116|0;L=d+44|0;e=d+124|0;c[L>>2]=a;c[e>>2]=b;a=c[L>>2]|0;c[I>>2]=a;c[J>>2]=(c[I>>2]|0)+8;c[K>>2]=c[J>>2];J=c[a>>2]|0;I=c[a+4>>2]|0;b=(c[e>>2]|0)+4|0;c[d+132>>2]=c[K>>2];c[F>>2]=J;c[H>>2]=I;c[G>>2]=b;c[E>>2]=((c[H>>2]|0)-(c[F>>2]|0)|0)/8|0;b=c[G>>2]|0;c[b>>2]=(c[b>>2]|0)+(0-(c[E>>2]|0)<<3);By(c[c[G>>2]>>2]|0,c[F>>2]|0,c[E>>2]<<3|0)|0;b=(c[e>>2]|0)+4|0;c[B>>2]=a;c[y>>2]=b;c[D>>2]=c[B>>2];c[A>>2]=c[c[D>>2]>>2];c[C>>2]=c[y>>2];c[c[B>>2]>>2]=c[c[C>>2]>>2];c[z>>2]=A;c[c[y>>2]>>2]=c[c[z>>2]>>2];b=(c[e>>2]|0)+8|0;c[v>>2]=a+4;c[s>>2]=b;c[x>>2]=c[v>>2];c[u>>2]=c[c[x>>2]>>2];c[w>>2]=c[s>>2];c[c[v>>2]>>2]=c[c[w>>2]>>2];c[t>>2]=u;c[c[s>>2]>>2]=c[c[t>>2]>>2];c[r>>2]=a;c[q>>2]=(c[r>>2]|0)+8;c[m>>2]=c[q>>2];m=c[m>>2]|0;c[p>>2]=c[e>>2];c[o>>2]=(c[p>>2]|0)+12;c[n>>2]=c[o>>2];b=c[n>>2]|0;c[j>>2]=m;c[f>>2]=b;c[l>>2]=c[j>>2];c[h>>2]=c[c[l>>2]>>2];c[k>>2]=c[f>>2];c[c[j>>2]>>2]=c[c[k>>2]>>2];c[g>>2]=h;c[c[f>>2]>>2]=c[c[g>>2]>>2];c[c[e>>2]>>2]=c[(c[e>>2]|0)+4>>2];c[d+36>>2]=a;i=d;return}function pl(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;r=i;i=i+128|0;l=r+72|0;k=r+44|0;j=r+12|0;h=r+104|0;g=r+24|0;f=r+16|0;q=r+20|0;p=r+76|0;d=r+52|0;e=r+28|0;m=r+32|0;n=r+36|0;o=r+40|0;w=r+108|0;B=r+112|0;C=r+116|0;A=r;x=r+56|0;y=r+60|0;z=r+120|0;v=r+68|0;u=r+88|0;t=r+92|0;E=r+96|0;s=r+100|0;G=r+8|0;F=r+80|0;I=r+84|0;H=r+121|0;J=r+48|0;D=r+64|0;c[D>>2]=b;D=c[D>>2]|0;c[J>>2]=D;J=c[J>>2]|0;b=c[J+4>>2]|0;c[F>>2]=J;c[I>>2]=b;F=c[F>>2]|0;b=c[I>>2]|0;a[G+0>>0]=a[H+0>>0]|0;c[E>>2]=F;c[s>>2]=b;b=c[E>>2]|0;while(1){if((c[s>>2]|0)==(c[b+8>>2]|0))break;c[t>>2]=b;c[u>>2]=(c[t>>2]|0)+12;c[v>>2]=c[u>>2];J=c[(c[v>>2]|0)+4>>2]|0;H=b+8|0;I=(c[H>>2]|0)+ -8|0;c[H>>2]=I;c[w>>2]=I;I=c[w>>2]|0;c[x>>2]=J;c[y>>2]=I;I=c[x>>2]|0;J=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=I;c[C>>2]=J}if((c[D>>2]|0)==0){i=r;return}c[q>>2]=D;c[f>>2]=(c[q>>2]|0)+12;c[g>>2]=c[f>>2];H=c[(c[g>>2]|0)+4>>2]|0;J=c[D>>2]|0;c[h>>2]=D;I=c[h>>2]|0;c[j>>2]=I;c[k>>2]=(c[j>>2]|0)+12;c[l>>2]=c[k>>2];I=((c[c[l>>2]>>2]|0)-(c[I>>2]|0)|0)/8|0;c[m>>2]=H;c[n>>2]=J;c[o>>2]=I;I=c[n>>2]|0;J=c[o>>2]|0;c[p>>2]=c[m>>2];c[d>>2]=I;c[e>>2]=J;Sw(c[d>>2]|0);i=r;return}function ql(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+80|0;q=h+44|0;r=h+40|0;s=h+8|0;u=h+12|0;t=h+76|0;k=h+36|0;g=h+16|0;f=h+20|0;d=h+68|0;e=h+32|0;l=h;n=h+48|0;j=h+52|0;m=h+77|0;v=h+60|0;w=h+64|0;x=h+28|0;y=h+24|0;p=h+56|0;o=h+72|0;c[y>>2]=b;c[x>>2]=c[y>>2];c[w>>2]=(c[x>>2]|0)+8;c[v>>2]=c[w>>2];c[u>>2]=c[v>>2];b=c[u>>2]|0;a[s+0>>0]=a[t+0>>0]|0;c[r>>2]=b;c[q>>2]=c[r>>2];c[p>>2]=536870911;c[o>>2]=4294967295/2|0;c[n>>2]=p;c[j>>2]=o;b=c[n>>2]|0;j=c[j>>2]|0;a[l+0>>0]=a[m+0>>0]|0;c[d>>2]=b;c[e>>2]=j;j=c[e>>2]|0;b=c[d>>2]|0;c[k>>2]=l;c[g>>2]=j;c[f>>2]=b;i=h;return c[((c[c[g>>2]>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0?c[e>>2]|0:c[d>>2]|0)>>2]|0}function rl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;l=i;i=i+128|0;p=l+108|0;o=l+100|0;r=l+32|0;q=l+8|0;n=l+68|0;m=l+16|0;u=l+20|0;v=l+88|0;w=l+96|0;t=l+104|0;k=l+64|0;f=l+44|0;g=l+48|0;A=l+52|0;B=l+60|0;C=l+4|0;z=l+72|0;D=l+80|0;h=l;j=l+76|0;x=l+28|0;y=l+84|0;s=l+92|0;c[D>>2]=a;c[h>>2]=b;c[j>>2]=d;c[x>>2]=e;e=c[D>>2]|0;c[B>>2]=z;c[C>>2]=-1;a=c[C>>2]|0;c[A>>2]=c[B>>2];c[l+56>>2]=a;c[c[A>>2]>>2]=0;c[y>>2]=c[z>>2];c[l+40>>2]=y;sl(e+12|0,0,c[x>>2]|0);if((c[h>>2]|0)!=0){c[r>>2]=e;c[o>>2]=(c[r>>2]|0)+12;c[p>>2]=c[o>>2];D=c[h>>2]|0;c[n>>2]=c[(c[p>>2]|0)+4>>2];c[m>>2]=D;m=c[m>>2]|0;c[l+36>>2]=c[n>>2];c[q>>2]=m;c[l+12>>2]=0;m=Qw(c[q>>2]<<3)|0}else{c[v>>2]=t;c[w>>2]=-1;m=c[w>>2]|0;c[u>>2]=c[v>>2];c[l+24>>2]=m;c[c[u>>2]>>2]=0;c[s>>2]=c[t>>2];c[l+112>>2]=s;m=0}c[e>>2]=m;D=(c[e>>2]|0)+(c[j>>2]<<3)|0;c[e+8>>2]=D;c[e+4>>2]=D;D=(c[e>>2]|0)+(c[h>>2]<<3)|0;c[g>>2]=e;c[f>>2]=(c[g>>2]|0)+12;c[k>>2]=c[f>>2];c[c[k>>2]>>2]=D;i=l;return}function sl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;i=i+48|0;l=e;f=e+16|0;h=e+28|0;k=e+4|0;j=e+32|0;g=e+36|0;n=e+12|0;p=e+24|0;o=e+20|0;m=e+8|0;c[p>>2]=a;c[o>>2]=b;c[m>>2]=d;d=c[p>>2]|0;c[n>>2]=o;b=c[c[n>>2]>>2]|0;c[l>>2]=c[m>>2];a=c[l>>2]|0;c[k>>2]=d;c[j>>2]=b;c[g>>2]=a;a=c[k>>2]|0;c[h>>2]=j;c[a>>2]=c[c[h>>2]>>2];c[f>>2]=c[g>>2];c[a+4>>2]=c[f>>2];i=e;return}function tl(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;b=i;i=i+96|0;l=b+28|0;n=b+84|0;m=b+56|0;k=b+8|0;f=b+48|0;h=b+72|0;g=b+80|0;e=b+88|0;q=b+36|0;s=b+44|0;r=b+52|0;p=b+60|0;t=b+4|0;o=b+20|0;j=b+68|0;d=b+24|0;u=b+76|0;c[u>>2]=a;c[t>>2]=c[u>>2];a=c[t>>2]|0;c[b+16>>2]=a;c[s>>2]=p;c[r>>2]=-1;r=c[r>>2]|0;c[q>>2]=c[s>>2];c[b+40>>2]=r;c[c[q>>2]>>2]=0;c[o>>2]=c[p>>2];c[b+32>>2]=o;c[a>>2]=0;c[n>>2]=k;c[m>>2]=-1;m=c[m>>2]|0;c[l>>2]=c[n>>2];c[b>>2]=m;c[c[l>>2]>>2]=0;c[j>>2]=c[k>>2];c[b+12>>2]=j;c[a+4>>2]=0;c[h>>2]=e;c[g>>2]=-1;g=c[g>>2]|0;c[f>>2]=c[h>>2];c[b+64>>2]=g;c[c[f>>2]>>2]=0;c[d>>2]=c[e>>2];c[b+92>>2]=d;ul(a+8|0,0);i=b;return}function ul(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+32|0;e=d+8|0;g=d+20|0;f=d+24|0;h=d+4|0;k=d;j=d+12|0;c[k>>2]=a;c[j>>2]=b;b=c[k>>2]|0;c[h>>2]=j;a=c[c[h>>2]>>2]|0;c[g>>2]=b;c[f>>2]=a;a=c[g>>2]|0;c[d+16>>2]=a;c[e>>2]=f;c[a>>2]=c[c[e>>2]>>2];i=d;return}function vl(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=i;i=i+144|0;w=d+48|0;B=d+8|0;C=d+84|0;A=d;x=d+16|0;y=d+4|0;z=d+132|0;v=d+80|0;u=d+44|0;t=d+20|0;E=d+24|0;e=d+28|0;D=d+32|0;g=d+36|0;f=d+40|0;s=d+76|0;l=d+124|0;k=d+128|0;j=d+52|0;h=d+56|0;p=d+64|0;q=d+68|0;r=d+92|0;m=d+96|0;n=d+100|0;o=d+104|0;I=d+108|0;K=d+116|0;J=d+120|0;H=d+88|0;F=d+72|0;G=d+12|0;c[F>>2]=b;b=c[F>>2]|0;F=c[b>>2]|0;c[K>>2]=H;c[J>>2]=-1;J=c[J>>2]|0;c[I>>2]=c[K>>2];c[d+112>>2]=J;c[c[I>>2]>>2]=0;c[G>>2]=c[H>>2];c[d+60>>2]=G;if((F|0)==0){i=d;return}c[D>>2]=b;K=c[D>>2]|0;D=c[K>>2]|0;c[E>>2]=K;c[e>>2]=D;D=c[E>>2]|0;while(1){if((c[e>>2]|0)==(c[D+4>>2]|0))break;c[t>>2]=D;c[u>>2]=(c[t>>2]|0)+8;c[v>>2]=c[u>>2];K=c[v>>2]|0;I=D+4|0;J=(c[I>>2]|0)+ -8|0;c[I>>2]=J;c[w>>2]=J;J=c[w>>2]|0;c[x>>2]=K;c[y>>2]=J;J=c[x>>2]|0;K=c[y>>2]|0;a[A+0>>0]=a[z+0>>0]|0;c[B>>2]=J;c[C>>2]=K}c[s>>2]=b;c[f>>2]=(c[s>>2]|0)+8;c[g>>2]=c[f>>2];I=c[g>>2]|0;K=c[b>>2]|0;c[h>>2]=b;J=c[h>>2]|0;c[j>>2]=J;c[k>>2]=(c[j>>2]|0)+8;c[l>>2]=c[k>>2];J=((c[c[l>>2]>>2]|0)-(c[J>>2]|0)|0)/8|0;c[m>>2]=I;c[n>>2]=K;c[o>>2]=J;J=c[n>>2]|0;K=c[o>>2]|0;c[p>>2]=c[m>>2];c[q>>2]=J;c[r>>2]=K;Sw(c[q>>2]|0);i=d;return}function wl(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+16|0;l=g+4|0;k=g;j=g+10|0;h=g+8|0;c[l>>2]=a;c[k>>2]=d;b[j>>1]=e;b[h>>1]=f;a=c[l>>2]|0;c[a>>2]=c[k>>2];b[a+4>>1]=b[j>>1]|0;b[a+6>>1]=b[h>>1]|0;i=g;return}function xl(b,f,g,h,j,k,l,m,n,o,p){b=b|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0;L=i;i=i+176|0;q=L+56|0;G=L+140|0;B=L+44|0;C=L+52|0;N=L+48|0;O=L+8|0;S=L+12|0;T=L+76|0;J=L+16|0;K=L+20|0;P=L+120|0;I=L+128|0;W=L+136|0;V=L+144|0;U=L+152|0;v=L+72|0;t=L+156|0;w=L+60|0;A=L+64|0;E=L+68|0;M=L+4|0;R=L+80|0;x=L+104|0;r=L+24|0;F=L+88|0;H=L;s=L+40|0;y=L+124|0;u=L+160|0;z=L+161|0;D=L+148|0;Q=L+132|0;c[I>>2]=b;c[W>>2]=f;c[V>>2]=g;c[U>>2]=h;c[v>>2]=j;c[t>>2]=k;c[w>>2]=l;c[A>>2]=m;c[E>>2]=n;c[M>>2]=o;c[R>>2]=p;ei(x,c[W>>2]|0);ei(r,c[V>>2]|0);ei(F,c[U>>2]|0);c[H>>2]=0;while(1){V=c[H>>2]|0;c[P>>2]=c[I>>2];W=c[P>>2]|0;if(!(V>>>0<(((c[W+4>>2]|0)-(c[W>>2]|0)|0)/32|0)>>>0))break;W=c[H>>2]|0;c[J>>2]=c[I>>2];c[K>>2]=W;c[s>>2]=(c[c[J>>2]>>2]|0)+(c[K>>2]<<5);yl(r);W=c[r+8>>2]|0;c[N>>2]=c[M>>2];c[O>>2]=W;Cf((c[c[N>>2]>>2]|0)+((c[O>>2]|0)*2832|0)|0,e[(c[s>>2]|0)+22>>1]|0);c[y>>2]=0;while(1){if(!((c[y>>2]|0)>>>0<(c[c[s>>2]>>2]|0)>>>0))break;yl(x);if((c[t>>2]|0)>>>0>0)p=d[(c[v>>2]|0)+((c[t>>2]|0)-1&c[w>>2])>>0]|0;else p=0;a[u>>0]=p;if((c[t>>2]|0)>>>0>1)p=d[(c[v>>2]|0)+((c[t>>2]|0)-2&c[w>>2])>>0]|0;else p=0;a[z>>0]=p;U=c[x+8>>2]<<6;V=a[u>>0]|0;W=a[z>>0]|0;b=c[x+8>>2]|0;c[B>>2]=c[A>>2];c[C>>2]=b;c[D>>2]=U+((zl(V,W,c[(c[c[B>>2]>>2]|0)+(c[C>>2]<<2)>>2]|0)|0)&255);W=c[D>>2]|0;c[q>>2]=c[E>>2];c[G>>2]=W;lg((c[c[q>>2]>>2]|0)+((c[G>>2]|0)*1040|0)|0,d[(c[v>>2]|0)+(c[t>>2]&c[w>>2])>>0]|0);c[t>>2]=(c[t>>2]|0)+1;c[y>>2]=(c[y>>2]|0)+1}c[t>>2]=(c[t>>2]|0)+(c[(c[s>>2]|0)+4>>2]|0);if((c[(c[s>>2]|0)+4>>2]|0)>>>0>0?(e[(c[s>>2]|0)+20>>1]|0|0)!=65535:0){yl(F);if((c[(c[s>>2]|0)+8>>2]|0)>>>0>4)p=3;else p=(c[(c[s>>2]|0)+8>>2]|0)-2|0;c[Q>>2]=(c[F+8>>2]<<2)+p;W=c[Q>>2]|0;c[S>>2]=c[R>>2];c[T>>2]=W;Dd((c[c[S>>2]>>2]|0)+((c[T>>2]|0)*2096|0)|0,e[(c[s>>2]|0)+20>>1]|0)}c[H>>2]=(c[H>>2]|0)+1}i=L;return}function yl(a){a=a|0;var b=0,e=0,f=0,g=0,h=0,j=0;b=i;i=i+32|0;g=b+16|0;h=b+12|0;e=b+8|0;f=b+4|0;j=b;c[j>>2]=a;a=c[j>>2]|0;if((c[a+12>>2]|0)!=0){j=a+12|0;a=c[j>>2]|0;a=a+ -1|0;c[j>>2]=a;i=b;return}j=a+4|0;c[j>>2]=(c[j>>2]|0)+1;j=c[a+4>>2]|0;c[e>>2]=(c[a>>2]|0)+4;c[f>>2]=j;c[a+8>>2]=d[(c[c[e>>2]>>2]|0)+(c[f>>2]|0)>>0];j=c[a+4>>2]|0;c[g>>2]=(c[a>>2]|0)+28;c[h>>2]=j;c[a+12>>2]=c[(c[c[g>>2]>>2]|0)+(c[h>>2]<<2)>>2];j=a+12|0;a=c[j>>2]|0;a=a+ -1|0;c[j>>2]=a;i=b;return}function zl(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+16|0;h=g+6|0;j=g+5|0;k=g+4|0;l=g;a[j>>0]=b;a[k>>0]=e;c[l>>2]=f;f=c[l>>2]|0;if((f|0)==0){a[h>>0]=(d[j>>0]|0)&63;l=a[h>>0]|0;i=g;return l|0}else if((f|0)==2){a[h>>0]=d[127928+(d[j>>0]|0)>>0]|0|(d[(d[k>>0]|0)+128184>>0]|0);l=a[h>>0]|0;i=g;return l|0}else if((f|0)==1){a[h>>0]=(d[j>>0]|0)>>2;l=a[h>>0]|0;i=g;return l|0}else if((f|0)==3){a[h>>0]=(c[128440+((d[j>>0]|0)<<2)>>2]<<3)+(c[128440+((d[k>>0]|0)<<2)>>2]|0);l=a[h>>0]|0;i=g;return l|0}else{a[h>>0]=0;l=a[h>>0]|0;i=g;return l|0}return 0}function Al(b,e,f,h,j,k){b=b|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;E=i;i=i+3232|0;S=E+56|0;R=E+8|0;Q=E+16|0;O=E+3176|0;P=E+48|0;T=E;W=E+12|0;V=E+3172|0;U=E+3224|0;p=E+20|0;D=E+24|0;q=E+28|0;I=E+32|0;o=E+36|0;H=E+40|0;t=E+3168|0;v=E+96|0;w=E+3212|0;K=E+3216|0;X=E+3220|0;l=E+60|0;N=E+72|0;M=E+76|0;J=E+80|0;L=E+84|0;n=E+88|0;F=E+92|0;m=E+3184|0;G=E+3188|0;s=E+3192|0;r=E+3196|0;u=E+3200|0;x=E+3204|0;y=E+3208|0;z=E+4|0;A=E+3180|0;B=E+52|0;C=E+44|0;c[p>>2]=b;c[D>>2]=e;c[q>>2]=f;c[I>>2]=h;c[o>>2]=j;c[H>>2]=k;c[t>>2]=Bl(c[p>>2]|0,c[D>>2]|0,c[q>>2]|0,c[o>>2]|0)|0;vy(v|0,0,3072)|0;c[w>>2]=495;c[X>>2]=c[w>>2];c[W>>2]=X;c[V>>2]=D;b=c[W>>2]|0;e=c[V>>2]|0;a[T+0>>0]=a[U+0>>0]|0;c[O>>2]=b;c[P>>2]=e;e=c[P>>2]|0;b=c[O>>2]|0;c[S>>2]=T;c[R>>2]=e;c[Q>>2]=b;c[K>>2]=c[((c[c[R>>2]>>2]|0)>>>0<(c[c[Q>>2]>>2]|0)>>>0?c[P>>2]|0:c[O>>2]|0)>>2];c[l+0>>2]=0;c[l+4>>2]=0;c[l+8>>2]=0;c[N>>2]=0;c[M>>2]=0;c[J>>2]=0;while(1){if((c[J>>2]|0)>=(c[K>>2]|0))break;c[L>>2]=d[(c[o>>2]|0)+((c[p>>2]|0)+(c[J>>2]|0)&c[q>>2])>>0];X=v+(c[M>>2]<<10)+(c[L>>2]<<2)|0;c[X>>2]=(c[X>>2]|0)+1;X=l+(c[M>>2]<<2)|0;c[X>>2]=(c[X>>2]|0)+1;c[M>>2]=Cl(c[N>>2]|0,c[L>>2]|0,c[t>>2]|0)|0;c[N>>2]=c[L>>2];c[J>>2]=(c[J>>2]|0)+1}c[n>>2]=0;while(1){if(!((c[n>>2]|0)>>>0<(c[D>>2]|0)>>>0))break;if(((c[n>>2]|0)-(c[w>>2]|0)|0)>=0){if(((c[n>>2]|0)-(c[w>>2]|0)-1|0)<0)k=0;else k=d[(c[o>>2]|0)+((c[p>>2]|0)+(c[n>>2]|0)-(c[w>>2]|0)-1&c[q>>2])>>0]|0;c[F>>2]=k;if(((c[n>>2]|0)-(c[w>>2]|0)-2|0)<0)k=0;else k=d[(c[o>>2]|0)+((c[p>>2]|0)+(c[n>>2]|0)-(c[w>>2]|0)-2&c[q>>2])>>0]|0;c[m>>2]=k;c[G>>2]=Cl(c[m>>2]|0,c[F>>2]|0,c[t>>2]|0)|0;X=v+(c[G>>2]<<10)+((d[(c[o>>2]|0)+((c[p>>2]|0)+(c[n>>2]|0)-(c[w>>2]|0)&c[q>>2])>>0]|0)<<2)|0;c[X>>2]=(c[X>>2]|0)+ -1;X=l+(c[G>>2]<<2)|0;c[X>>2]=(c[X>>2]|0)+ -1}if(((c[n>>2]|0)+(c[w>>2]|0)|0)>>>0<(c[D>>2]|0)>>>0){if(((c[n>>2]|0)+(c[w>>2]|0)-1|0)<0)k=0;else k=d[(c[o>>2]|0)+((c[p>>2]|0)+(c[n>>2]|0)+(c[w>>2]|0)-1&c[q>>2])>>0]|0;c[s>>2]=k;if(((c[n>>2]|0)+(c[w>>2]|0)-2|0)<0)k=0;else k=d[(c[o>>2]|0)+((c[p>>2]|0)+(c[n>>2]|0)+(c[w>>2]|0)-2&c[q>>2])>>0]|0;c[r>>2]=k;c[u>>2]=Cl(c[r>>2]|0,c[s>>2]|0,c[t>>2]|0)|0;X=v+(c[u>>2]<<10)+((d[(c[o>>2]|0)+((c[p>>2]|0)+(c[n>>2]|0)+(c[w>>2]|0)&c[q>>2])>>0]|0)<<2)|0;c[X>>2]=(c[X>>2]|0)+1;X=l+(c[u>>2]<<2)|0;c[X>>2]=(c[X>>2]|0)+1}if((c[n>>2]|0)<1)k=0;else k=d[(c[o>>2]|0)+((c[p>>2]|0)+(c[n>>2]|0)-1&c[q>>2])>>0]|0;c[x>>2]=k;if((c[n>>2]|0)<2)k=0;else k=d[(c[o>>2]|0)+((c[p>>2]|0)+(c[n>>2]|0)-2&c[q>>2])>>0]|0;c[y>>2]=k;c[z>>2]=Cl(c[y>>2]|0,c[x>>2]|0,c[t>>2]|0)|0;c[A>>2]=(c[p>>2]|0)+(c[n>>2]|0)&c[q>>2];X=c[v+(c[z>>2]<<10)+((d[(c[o>>2]|0)+(c[A>>2]|0)>>0]|0)<<2)>>2]|0;c[B>>2]=X;c[B>>2]=(c[B>>2]|0)==0?1:X;g[C>>2]=+Fa(+(+(c[l+(c[z>>2]<<2)>>2]|0)/+(c[B>>2]|0)));g[C>>2]=+g[C>>2]+.02905;if(+g[C>>2]<1.0){g[C>>2]=+g[C>>2]*.5;g[C>>2]=+g[C>>2]+.5}if((c[n>>2]|0)<2e3)g[C>>2]=+g[C>>2]+(.7- +(2e3-(c[n>>2]|0)|0)/2.0e3*.35);g[(c[H>>2]|0)+(((c[p>>2]|0)+(c[n>>2]|0)&c[I>>2])<<2)>>2]=+g[C>>2];c[n>>2]=(c[n>>2]|0)+1}i=E;return}function Bl(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;h=i;i=i+48|0;g=h;l=h+16|0;o=h+28|0;m=h+4|0;j=h+32|0;n=h+44|0;q=h+12|0;r=h+24|0;k=h+20|0;p=h+8|0;c[g>>2]=a;c[l>>2]=b;c[o>>2]=e;c[m>>2]=f;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[n>>2]=1;c[q>>2]=0;c[r>>2]=0;c[k>>2]=0;while(1){if(!((c[k>>2]|0)>>>0<(c[l>>2]|0)>>>0))break;c[p>>2]=d[(c[m>>2]|0)+((c[g>>2]|0)+(c[k>>2]|0)&c[o>>2])>>0];c[r>>2]=Cl(c[q>>2]|0,c[p>>2]|0,2)|0;a=j+(c[r>>2]<<2)|0;c[a>>2]=(c[a>>2]|0)+1;c[q>>2]=c[p>>2];c[k>>2]=(c[k>>2]|0)+1}if((c[j+8>>2]|0)<500)c[n>>2]=1;if(((c[j+4>>2]|0)+(c[j+8>>2]|0)|0)>=25){a=c[n>>2]|0;i=h;return a|0}c[n>>2]=0;a=c[n>>2]|0;i=h;return a|0}function Cl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;r=i;i=i+96|0;x=r+24|0;y=r+52|0;v=r+32|0;w=r+72|0;u=r;s=r+20|0;t=r+60|0;p=r+84|0;q=r+16|0;n=r+88|0;o=r+40|0;m=r+8|0;j=r+56|0;l=r+48|0;g=r+64|0;z=r+12|0;A=r+28|0;k=r+80|0;h=r+44|0;f=r+68|0;c[z>>2]=b;c[A>>2]=d;c[k>>2]=e;if((c[A>>2]|0)<128){c[g>>2]=0;b=c[g>>2]|0;i=r;return b|0}if((c[A>>2]|0)>=192){c[h>>2]=1;c[j>>2]=h;c[l>>2]=k;b=c[j>>2]|0;d=c[l>>2]|0;a[m+0>>0]=a[r+93>>0]|0;c[n>>2]=b;c[o>>2]=d;d=c[o>>2]|0;b=c[n>>2]|0;c[r+76>>2]=m;c[p>>2]=d;c[q>>2]=b;c[g>>2]=c[((c[c[p>>2]>>2]|0)<(c[c[q>>2]>>2]|0)?c[o>>2]|0:c[n>>2]|0)>>2];b=c[g>>2]|0;i=r;return b|0}if((c[z>>2]|0)<224){c[g>>2]=0;b=c[g>>2]|0;i=r;return b|0}else{c[f>>2]=2;c[s>>2]=f;c[t>>2]=k;b=c[s>>2]|0;d=c[t>>2]|0;a[u+0>>0]=a[r+92>>0]|0;c[v>>2]=b;c[w>>2]=d;d=c[w>>2]|0;b=c[v>>2]|0;c[r+36>>2]=u;c[x>>2]=d;c[y>>2]=b;c[g>>2]=c[((c[c[x>>2]>>2]|0)<(c[c[y>>2]>>2]|0)?c[w>>2]|0:c[v>>2]|0)>>2];b=c[g>>2]|0;i=r;return b|0}return 0}function Dl(b,e,f,h,j,k){b=b|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;u=i;i=i+1120|0;D=u+8|0;C=u+4|0;B=u+1072|0;z=u+24|0;A=u+1088|0;E=u;H=u+12|0;G=u+1076|0;F=u+1108|0;o=u+1092|0;v=u+1100|0;q=u+1104|0;x=u+32|0;n=u+36|0;w=u+44|0;m=u+48|0;l=u+40|0;s=u+28|0;I=u+1080|0;y=u+16|0;p=u+20|0;r=u+1096|0;t=u+1084|0;c[o>>2]=b;c[v>>2]=e;c[q>>2]=f;c[x>>2]=h;c[n>>2]=j;c[w>>2]=k;vy(m|0,0,1024)|0;c[l>>2]=2e3;c[I>>2]=c[l>>2];c[H>>2]=I;c[G>>2]=v;b=c[H>>2]|0;e=c[G>>2]|0;a[E+0>>0]=a[F+0>>0]|0;c[z>>2]=b;c[A>>2]=e;e=c[A>>2]|0;b=c[z>>2]|0;c[D>>2]=E;c[C>>2]=e;c[B>>2]=b;c[s>>2]=c[((c[c[C>>2]>>2]|0)>>>0<(c[c[B>>2]>>2]|0)>>>0?c[A>>2]|0:c[z>>2]|0)>>2];c[y>>2]=0;while(1){if((c[y>>2]|0)>=(c[s>>2]|0))break;I=m+((d[(c[n>>2]|0)+((c[o>>2]|0)+(c[y>>2]|0)&c[q>>2])>>0]|0)<<2)|0;c[I>>2]=(c[I>>2]|0)+1;c[y>>2]=(c[y>>2]|0)+1}c[p>>2]=0;while(1){if(!((c[p>>2]|0)>>>0<(c[v>>2]|0)>>>0))break;if(((c[p>>2]|0)-(c[l>>2]|0)|0)>=0){I=m+((d[(c[n>>2]|0)+((c[o>>2]|0)+(c[p>>2]|0)-(c[l>>2]|0)&c[q>>2])>>0]|0)<<2)|0;c[I>>2]=(c[I>>2]|0)+ -1;c[s>>2]=(c[s>>2]|0)+ -1}if(((c[p>>2]|0)+(c[l>>2]|0)|0)>>>0<(c[v>>2]|0)>>>0){I=m+((d[(c[n>>2]|0)+((c[o>>2]|0)+(c[p>>2]|0)+(c[l>>2]|0)&c[q>>2])>>0]|0)<<2)|0;c[I>>2]=(c[I>>2]|0)+1;c[s>>2]=(c[s>>2]|0)+1}I=c[m+((d[(c[n>>2]|0)+((c[o>>2]|0)+(c[p>>2]|0)&c[q>>2])>>0]|0)<<2)>>2]|0;c[r>>2]=I;c[r>>2]=(c[r>>2]|0)==0?1:I;g[t>>2]=+Fa(+(+(c[s>>2]|0)/+(c[r>>2]|0)));g[t>>2]=+g[t>>2]+.029;if(+g[t>>2]<1.0){g[t>>2]=+g[t>>2]*.5;g[t>>2]=+g[t>>2]+.5}g[(c[w>>2]|0)+(((c[o>>2]|0)+(c[p>>2]|0)&c[x>>2])<<2)>>2]=+g[t>>2];c[p>>2]=(c[p>>2]|0)+1}i=u;return}function El(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;d=i;i=i+16|0;b=d+12|0;g=d+8|0;e=d+4|0;f=d;c[g>>2]=a;c[e>>2]=0;while(1){if((c[e>>2]|0)>=24){a=7;break}c[f>>2]=129464+(c[e>>2]<<3);if((c[g>>2]|0)>=(c[c[f>>2]>>2]|0)?(c[g>>2]|0)<((c[c[f>>2]>>2]|0)+(1<<c[(c[f>>2]|0)+4>>2])|0):0){a=5;break}c[e>>2]=(c[e>>2]|0)+1}if((a|0)==5){c[b>>2]=c[e>>2];g=c[b>>2]|0;i=d;return g|0}else if((a|0)==7){c[b>>2]=-1;g=c[b>>2]|0;i=d;return g|0}return 0}function Fl(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;d=i;i=i+16|0;b=d+12|0;g=d+8|0;e=d+4|0;f=d;c[g>>2]=a;c[e>>2]=0;while(1){if((c[e>>2]|0)>=24){a=7;break}c[f>>2]=129656+(c[e>>2]<<3);if((c[g>>2]|0)>=(c[c[f>>2]>>2]|0)?(c[g>>2]|0)<((c[c[f>>2]>>2]|0)+(1<<c[(c[f>>2]|0)+4>>2])|0):0){a=5;break}c[e>>2]=(c[e>>2]|0)+1}if((a|0)==5){c[b>>2]=c[e>>2];g=c[b>>2]|0;i=d;return g|0}else if((a|0)==7){c[b>>2]=-1;g=c[b>>2]|0;i=d;return g|0}return 0}function Gl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;g=i;i=i+32|0;j=g+16|0;h=g+12|0;e=g+8|0;d=g+4|0;f=g;c[j>>2]=a;c[h>>2]=b;c[h>>2]=(c[h>>2]|0)==0?4:b;c[e>>2]=El(c[j>>2]|0)|0;c[d>>2]=Fl(c[h>>2]|0)|0;c[f>>2]=((c[e>>2]>>3)*3|0)+(c[d>>2]>>3);i=g;return(c[129848+(c[f>>2]<<2)>>2]<<6)+((c[e>>2]&7)<<3)+(c[d>>2]&7)|0}function Hl(a){a=a|0;var b=0,d=0,e=0;d=i;i=i+16|0;e=d+4|0;b=d;c[e>>2]=a;c[b>>2]=(c[129888+(c[e>>2]>>6<<2)>>2]<<3)+(c[e>>2]>>3&7);i=d;return c[129468+(c[b>>2]<<3)>>2]|0}function Il(a){a=a|0;var b=0,d=0,e=0;d=i;i=i+16|0;e=d+4|0;b=d;c[e>>2]=a;c[b>>2]=(c[129888+(c[e>>2]>>6<<2)>>2]<<3)+(c[e>>2]>>3&7);i=d;return c[129464+(c[b>>2]<<3)>>2]|0}function Jl(a){a=a|0;var b=0,d=0,e=0;d=i;i=i+16|0;e=d+4|0;b=d;c[e>>2]=a;c[b>>2]=(c[129928+(c[e>>2]>>6<<2)>>2]<<3)+(c[e>>2]&7);i=d;return c[129660+(c[b>>2]<<3)>>2]|0}function Kl(a){a=a|0;var b=0,d=0,e=0;d=i;i=i+16|0;e=d+4|0;b=d;c[e>>2]=a;c[b>>2]=(c[129928+(c[e>>2]>>6<<2)>>2]<<3)+(c[e>>2]&7);i=d;return c[129656+(c[b>>2]<<3)>>2]|0}function Ll(a,d,e,f,g,h){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;r=i;i=i+48|0;n=r+36|0;s=r+16|0;o=r;m=r+28|0;l=r+32|0;k=r+40|0;t=r+12|0;u=r+24|0;q=r+20|0;j=r+8|0;p=r+4|0;c[n>>2]=a;c[s>>2]=d;c[o>>2]=e;c[m>>2]=f;c[l>>2]=g;c[k>>2]=h;c[n>>2]=(c[n>>2]|0)-1;if((c[n>>2]|0)<(16+(c[s>>2]|0)|0)){b[c[m>>2]>>1]=c[n>>2];c[c[l>>2]>>2]=0;c[c[k>>2]>>2]=0;i=r;return}else{c[n>>2]=(c[n>>2]|0)-(16+(c[s>>2]|0));c[n>>2]=(c[n>>2]|0)+(1<<(c[o>>2]|0)+2);c[t>>2]=(Oc(c[n>>2]|0)|0)-1;c[u>>2]=(1<<c[o>>2])-1;c[q>>2]=c[n>>2]&c[u>>2];c[j>>2]=c[n>>2]>>c[t>>2]&1;c[p>>2]=2+(c[j>>2]|0)<<c[t>>2];c[c[l>>2]>>2]=(c[t>>2]|0)-(c[o>>2]|0);b[c[m>>2]>>1]=16+(c[s>>2]|0)+(((c[c[l>>2]>>2]|0)-1<<1)+(c[j>>2]|0)<<c[o>>2])+(c[q>>2]|0);c[c[k>>2]>>2]=(c[n>>2]|0)-(c[p>>2]|0)>>c[o>>2];i=r;return}}function Ml(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;d=i;i=i+16|0;b=d+12|0;g=d+8|0;e=d+4|0;f=d;c[g>>2]=a;c[e>>2]=0;while(1){if((c[e>>2]|0)>=26){a=7;break}c[f>>2]=129968+(c[e>>2]<<3);if((c[g>>2]|0)>=(c[c[f>>2]>>2]|0)?(c[g>>2]|0)<((c[c[f>>2]>>2]|0)+(1<<c[(c[f>>2]|0)+4>>2])|0):0){a=5;break}c[e>>2]=(c[e>>2]|0)+1}if((a|0)==5){c[b>>2]=c[e>>2];g=c[b>>2]|0;i=d;return g|0}else if((a|0)==7){c[b>>2]=-1;g=c[b>>2]|0;i=d;return g|0}return 0}function Nl(a){a=a|0;var b=0,d=0;d=i;i=i+16|0;b=d;c[b>>2]=a;i=d;return c[129972+(c[b>>2]<<3)>>2]|0}function Ol(a){a=a|0;var b=0,d=0;d=i;i=i+16|0;b=d;c[b>>2]=a;i=d;return c[129968+(c[b>>2]<<3)>>2]|0}function Pl(a){a=a|0;var b=0,d=0,e=0,f=0;a=i;e=c[q>>2]|0;lm(130888,e,130944);c[32544]=132540;c[32546]=132560;c[32545]=0;tn(130184|0,130888);c[32564]=0;c[32565]=-1;d=c[r>>2]|0;em(130992,d,130952|0);c[32566]=132620;c[32567]=132640;tn(130268|0,130992);c[32585]=0;c[32586]=-1;b=c[p>>2]|0;em(131040,b,130960|0);c[32588]=132620;c[32589]=132640;tn(130356|0,131040);c[32607]=0;c[32608]=-1;f=c[(c[(c[32588]|0)+ -12>>2]|0)+130376>>2]|0;c[32610]=132620;c[32611]=132640;tn(130444|0,f);c[32629]=0;c[32630]=-1;c[(c[(c[32544]|0)+ -12>>2]|0)+130248>>2]=130264;f=(c[(c[32588]|0)+ -12>>2]|0)+130356|0;c[f>>2]=c[f>>2]|8192;c[(c[(c[32588]|0)+ -12>>2]|0)+130424>>2]=130264;Yl(131088,e,130968|0);c[32632]=132580;c[32634]=132600;c[32633]=0;tn(130536|0,131088);c[32652]=0;c[32653]=-1;Rl(131144,d,130976|0);c[32654]=132660;c[32655]=132680;tn(130620|0,131144);c[32673]=0;c[32674]=-1;Rl(131192,b,130984|0);c[32676]=132660;c[32677]=132680;tn(130708|0,131192);c[32695]=0;c[32696]=-1;b=c[(c[(c[32676]|0)+ -12>>2]|0)+130728>>2]|0;c[32698]=132660;c[32699]=132680;tn(130796|0,b);c[32717]=0;c[32718]=-1;c[(c[(c[32632]|0)+ -12>>2]|0)+130600>>2]=130616;b=(c[(c[32676]|0)+ -12>>2]|0)+130708|0;c[b>>2]=c[b>>2]|8192;c[(c[(c[32676]|0)+ -12>>2]|0)+130776>>2]=130616;i=a;return}function Ql(a){a=a|0;a=i;co(130264)|0;co(130440)|0;jo(130616)|0;jo(130792)|0;i=a;return}function Rl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;Nn(b);c[b>>2]=131248;c[b+32>>2]=d;Wt(g,b+4|0);d=Zt(g,135240)|0;Xt(g);c[b+36>>2]=d;c[b+40>>2]=e;a[b+44>>0]=(Wb[c[(c[d>>2]|0)+28>>2]&63](d)|0)&1;i=f;return}function Sl(a){a=a|0;var b=0;b=i;Mn(a);i=b;return}function Tl(a){a=a|0;var b=0;b=i;c[a>>2]=132472;Xt(a+4|0);Sw(a);i=b;return}function Ul(b,d){b=b|0;d=d|0;var e=0;e=i;Wb[c[(c[b>>2]|0)+24>>2]&63](b)|0;d=Zt(d,135240)|0;c[b+36>>2]=d;a[b+44>>0]=(Wb[c[(c[d>>2]|0)+28>>2]&63](d)|0)&1;i=e;return}function Vl(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;b=i;i=i+16|0;g=b+8|0;d=b;e=a+36|0;f=a+40|0;h=g+8|0;j=g;a=a+32|0;while(1){k=c[e>>2]|0;k=ec[c[(c[k>>2]|0)+20>>2]&15](k,c[f>>2]|0,g,h,d)|0;l=(c[d>>2]|0)-j|0;if((Fb(g|0,1,l|0,c[a>>2]|0)|0)!=(l|0)){e=-1;d=5;break}if((k|0)==2){e=-1;d=5;break}else if((k|0)!=1){d=4;break}}if((d|0)==4){l=((Qa(c[a>>2]|0)|0)!=0)<<31>>31;i=b;return l|0}else if((d|0)==5){i=b;return e|0}return 0}function Wl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;if((a[b+44>>0]|0)!=0){d=Fb(d|0,4,e|0,c[b+32>>2]|0)|0;i=f;return d|0}if((e|0)>0)g=0;else{d=0;i=f;return d|0}while(1){if((dc[c[(c[b>>2]|0)+52>>2]&15](b,c[d>>2]|0)|0)==-1){e=6;break}g=g+1|0;if((g|0)<(e|0))d=d+4|0;else{e=6;break}}if((e|0)==6){i=f;return g|0}return 0}function Xl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+32|0;k=e+16|0;p=e+8|0;j=e+4|0;h=e;f=(d|0)==-1;a:do if(!f){c[p>>2]=d;if((a[b+44>>0]|0)!=0){if((Fb(p|0,4,1,c[b+32>>2]|0)|0)==1)break;else d=-1;i=e;return d|0}c[j>>2]=k;l=p+4|0;n=b+36|0;o=b+40|0;g=k+8|0;m=k;b=b+32|0;while(1){q=c[n>>2]|0;q=$b[c[(c[q>>2]|0)+12>>2]&15](q,c[o>>2]|0,p,l,h,k,g,j)|0;if((c[h>>2]|0)==(p|0)){d=-1;g=12;break}if((q|0)==3){g=7;break}r=(q|0)==1;if(!(q>>>0<2)){d=-1;g=12;break}q=(c[j>>2]|0)-m|0;if((Fb(k|0,1,q|0,c[b>>2]|0)|0)!=(q|0)){d=-1;g=12;break}if(r)p=r?c[h>>2]|0:p;else break a}if((g|0)==7){if((Fb(p|0,1,1,c[b>>2]|0)|0)==1)break;else d=-1;i=e;return d|0}else if((g|0)==12){i=e;return d|0}}while(0);r=f?0:d;i=e;return r|0}function Yl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;Nn(b);c[b>>2]=131360;c[b+32>>2]=d;c[b+40>>2]=e;c[b+48>>2]=-1;a[b+52>>0]=0;Wt(g,b+4|0);$l(b,g);Xt(g);i=f;return}function Zl(a){a=a|0;var b=0;b=i;Mn(a);i=b;return}function _l(a){a=a|0;var b=0;b=i;c[a>>2]=132472;Xt(a+4|0);Sw(a);i=b;return}function $l(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;g=Zt(d,135240)|0;f=b+36|0;c[f>>2]=g;d=b+44|0;c[d>>2]=Wb[c[(c[g>>2]|0)+24>>2]&63](g)|0;f=c[f>>2]|0;a[b+53>>0]=(Wb[c[(c[f>>2]|0)+28>>2]&63](f)|0)&1;if((c[d>>2]|0)>8)xs(131456);else{i=e;return}}function am(a){a=a|0;var b=0;b=i;a=dm(a,0)|0;i=b;return a|0}function bm(a){a=a|0;var b=0;b=i;a=dm(a,1)|0;i=b;return a|0}function cm(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+32|0;j=e+16|0;f=e+8|0;l=e+4|0;k=e;g=b+52|0;m=(a[g>>0]|0)!=0;if((d|0)==-1){if(m){m=-1;i=e;return m|0}m=c[b+48>>2]|0;a[g>>0]=(m|0)!=-1&1;i=e;return m|0}h=b+48|0;a:do if(m){c[l>>2]=c[h>>2];m=c[b+36>>2]|0;k=$b[c[(c[m>>2]|0)+12>>2]&15](m,c[b+40>>2]|0,l,l+4|0,k,j,j+8|0,f)|0;if((k|0)==1|(k|0)==2){m=-1;i=e;return m|0}else if((k|0)==3){a[j>>0]=c[h>>2];c[f>>2]=j+1}b=b+32|0;while(1){k=c[f>>2]|0;if(!(k>>>0>j>>>0))break a;m=k+ -1|0;c[f>>2]=m;if((Ka(a[m>>0]|0,c[b>>2]|0)|0)==-1){f=-1;break}}i=e;return f|0}while(0);c[h>>2]=d;a[g>>0]=1;m=d;i=e;return m|0}function dm(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+32|0;g=e+16|0;j=e+8|0;m=e+4|0;l=e;n=b+52|0;if((a[n>>0]|0)!=0){f=b+48|0;g=c[f>>2]|0;if(!d){v=g;i=e;return v|0}c[f>>2]=-1;a[n>>0]=0;v=g;i=e;return v|0}s=c[b+44>>2]|0;s=(s|0)>1?s:1;a:do if((s|0)>0){p=b+32|0;n=0;while(1){o=qb(c[p>>2]|0)|0;if((o|0)==-1){h=-1;break}a[g+n>>0]=o;n=n+1|0;if((n|0)>=(s|0))break a}i=e;return h|0}while(0);b:do if((a[b+53>>0]|0)==0){p=b+40|0;q=b+36|0;n=j+4|0;o=b+32|0;while(1){v=c[p>>2]|0;u=v;t=c[u>>2]|0;u=c[u+4>>2]|0;w=c[q>>2]|0;r=g+s|0;v=$b[c[(c[w>>2]|0)+16>>2]&15](w,v,g,r,m,j,n,l)|0;if((v|0)==3){f=14;break}else if((v|0)==2){h=-1;f=22;break}else if((v|0)!=1){k=s;break b}w=c[p>>2]|0;c[w>>2]=t;c[w+4>>2]=u;if((s|0)==8){h=-1;f=22;break}t=qb(c[o>>2]|0)|0;if((t|0)==-1){h=-1;f=22;break}a[r>>0]=t;s=s+1|0}if((f|0)==14){c[j>>2]=a[g>>0];k=s;break}else if((f|0)==22){i=e;return h|0}}else{c[j>>2]=a[g>>0];k=s}while(0);if(d){w=c[j>>2]|0;c[b+48>>2]=w;i=e;return w|0}d=b+32|0;while(1){if((k|0)<=0)break;k=k+ -1|0;if((Ka(a[g+k>>0]|0,c[d>>2]|0)|0)==-1){h=-1;f=22;break}}if((f|0)==22){i=e;return h|0}w=c[j>>2]|0;i=e;return w|0}function em(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;xn(b);c[b>>2]=131504;c[b+32>>2]=d;Wt(g,b+4|0);d=Zt(g,135232)|0;Xt(g);c[b+36>>2]=d;c[b+40>>2]=e;a[b+44>>0]=(Wb[c[(c[d>>2]|0)+28>>2]&63](d)|0)&1;i=f;return}function fm(a){a=a|0;var b=0;b=i;wn(a);i=b;return}function gm(a){a=a|0;var b=0;b=i;c[a>>2]=132408;Xt(a+4|0);Sw(a);i=b;return}function hm(b,d){b=b|0;d=d|0;var e=0;e=i;Wb[c[(c[b>>2]|0)+24>>2]&63](b)|0;d=Zt(d,135232)|0;c[b+36>>2]=d;a[b+44>>0]=(Wb[c[(c[d>>2]|0)+28>>2]&63](d)|0)&1;i=e;return}function im(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;b=i;i=i+16|0;g=b+8|0;d=b;e=a+36|0;f=a+40|0;h=g+8|0;j=g;a=a+32|0;while(1){k=c[e>>2]|0;k=ec[c[(c[k>>2]|0)+20>>2]&15](k,c[f>>2]|0,g,h,d)|0;l=(c[d>>2]|0)-j|0;if((Fb(g|0,1,l|0,c[a>>2]|0)|0)!=(l|0)){e=-1;d=5;break}if((k|0)==2){e=-1;d=5;break}else if((k|0)!=1){d=4;break}}if((d|0)==4){l=((Qa(c[a>>2]|0)|0)!=0)<<31>>31;i=b;return l|0}else if((d|0)==5){i=b;return e|0}return 0}function jm(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0;g=i;if((a[b+44>>0]|0)!=0){e=Fb(e|0,1,f|0,c[b+32>>2]|0)|0;i=g;return e|0}if((f|0)>0)h=0;else{e=0;i=g;return e|0}while(1){if((dc[c[(c[b>>2]|0)+52>>2]&15](b,d[e>>0]|0)|0)==-1){f=6;break}h=h+1|0;if((h|0)<(f|0))e=e+1|0;else{f=6;break}}if((f|0)==6){i=g;return h|0}return 0}function km(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+32|0;k=e+16|0;p=e+8|0;j=e+4|0;h=e;f=(d|0)==-1;a:do if(!f){a[p>>0]=d;if((a[b+44>>0]|0)!=0){if((Fb(p|0,1,1,c[b+32>>2]|0)|0)==1)break;else d=-1;i=e;return d|0}c[j>>2]=k;l=p+1|0;n=b+36|0;o=b+40|0;g=k+8|0;m=k;b=b+32|0;while(1){q=c[n>>2]|0;q=$b[c[(c[q>>2]|0)+12>>2]&15](q,c[o>>2]|0,p,l,h,k,g,j)|0;if((c[h>>2]|0)==(p|0)){d=-1;g=12;break}if((q|0)==3){g=7;break}r=(q|0)==1;if(!(q>>>0<2)){d=-1;g=12;break}q=(c[j>>2]|0)-m|0;if((Fb(k|0,1,q|0,c[b>>2]|0)|0)!=(q|0)){d=-1;g=12;break}if(r)p=r?c[h>>2]|0:p;else break a}if((g|0)==7){if((Fb(p|0,1,1,c[b>>2]|0)|0)==1)break;else d=-1;i=e;return d|0}else if((g|0)==12){i=e;return d|0}}while(0);r=f?0:d;i=e;return r|0}function lm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;xn(b);c[b>>2]=131616;c[b+32>>2]=d;c[b+40>>2]=e;c[b+48>>2]=-1;a[b+52>>0]=0;Wt(g,b+4|0);om(b,g);Xt(g);i=f;return}function mm(a){a=a|0;var b=0;b=i;wn(a);i=b;return}function nm(a){a=a|0;var b=0;b=i;c[a>>2]=132408;Xt(a+4|0);Sw(a);i=b;return}function om(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;g=Zt(d,135232)|0;f=b+36|0;c[f>>2]=g;d=b+44|0;c[d>>2]=Wb[c[(c[g>>2]|0)+24>>2]&63](g)|0;f=c[f>>2]|0;a[b+53>>0]=(Wb[c[(c[f>>2]|0)+28>>2]&63](f)|0)&1;if((c[d>>2]|0)>8)xs(131456);else{i=e;return}}function pm(a){a=a|0;var b=0;b=i;a=sm(a,0)|0;i=b;return a|0}function qm(a){a=a|0;var b=0;b=i;a=sm(a,1)|0;i=b;return a|0}function rm(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+32|0;j=e+16|0;f=e+4|0;l=e+8|0;k=e;g=b+52|0;m=(a[g>>0]|0)!=0;if((d|0)==-1){if(m){m=-1;i=e;return m|0}m=c[b+48>>2]|0;a[g>>0]=(m|0)!=-1&1;i=e;return m|0}h=b+48|0;a:do if(m){a[l>>0]=c[h>>2];m=c[b+36>>2]|0;k=$b[c[(c[m>>2]|0)+12>>2]&15](m,c[b+40>>2]|0,l,l+1|0,k,j,j+8|0,f)|0;if((k|0)==3){a[j>>0]=c[h>>2];c[f>>2]=j+1}else if((k|0)==1|(k|0)==2){m=-1;i=e;return m|0}b=b+32|0;while(1){k=c[f>>2]|0;if(!(k>>>0>j>>>0))break a;m=k+ -1|0;c[f>>2]=m;if((Ka(a[m>>0]|0,c[b>>2]|0)|0)==-1){f=-1;break}}i=e;return f|0}while(0);c[h>>2]=d;a[g>>0]=1;m=d;i=e;return m|0}function sm(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;f=i;i=i+32|0;h=f+16|0;j=f+8|0;n=f+4|0;m=f;o=b+52|0;if((a[o>>0]|0)!=0){g=b+48|0;h=c[g>>2]|0;if(!e){w=h;i=f;return w|0}c[g>>2]=-1;a[o>>0]=0;w=h;i=f;return w|0}p=c[b+44>>2]|0;p=(p|0)>1?p:1;a:do if((p|0)>0){r=b+32|0;o=0;while(1){q=qb(c[r>>2]|0)|0;if((q|0)==-1){k=-1;break}a[h+o>>0]=q;o=o+1|0;if((o|0)>=(p|0))break a}i=f;return k|0}while(0);b:do if((a[b+53>>0]|0)==0){r=b+40|0;s=b+36|0;o=j+1|0;q=b+32|0;while(1){w=c[r>>2]|0;v=w;u=c[v>>2]|0;v=c[v+4>>2]|0;x=c[s>>2]|0;t=h+p|0;w=$b[c[(c[x>>2]|0)+16>>2]&15](x,w,h,t,n,j,o,m)|0;if((w|0)==3){m=14;break}else if((w|0)==2){k=-1;m=23;break}else if((w|0)!=1){l=p;break b}x=c[r>>2]|0;c[x>>2]=u;c[x+4>>2]=v;if((p|0)==8){k=-1;m=23;break}u=qb(c[q>>2]|0)|0;if((u|0)==-1){k=-1;m=23;break}a[t>>0]=u;p=p+1|0}if((m|0)==14){a[j>>0]=a[h>>0]|0;l=p;break}else if((m|0)==23){i=f;return k|0}}else{a[j>>0]=a[h>>0]|0;l=p}while(0);do if(!e){e=b+32|0;while(1){if((l|0)<=0){m=21;break}l=l+ -1|0;if((Ka(d[h+l>>0]|0,c[e>>2]|0)|0)==-1){k=-1;m=23;break}}if((m|0)==21){g=a[j>>0]|0;break}else if((m|0)==23){i=f;return k|0}}else{g=a[j>>0]|0;c[b+48>>2]=g&255}while(0);x=g&255;i=f;return x|0}function tm(){var a=0;a=i;Pl(0);Jb(112,130880,o|0)|0;i=a;return}function um(a){a=a|0;return}function vm(a){a=a|0;a=a+4|0;c[a>>2]=(c[a>>2]|0)+1;return}function wm(a){a=a|0;var b=0,d=0,e=0;b=i;e=a+4|0;d=c[e>>2]|0;c[e>>2]=d+ -1;if((d|0)!=0){e=0;i=b;return e|0}Tb[c[(c[a>>2]|0)+8>>2]&127](a);e=1;i=b;return e|0}function xm(a,b){a=a|0;b=b|0;var d=0;d=i;c[a>>2]=143624;Am(a+4|0,b);i=d;return}function ym(b,d){b=b|0;d=d|0;var e=0;e=i;c[b>>2]=143648;if((a[d>>0]&1)==0)d=d+1|0;else d=c[d+8>>2]|0;Am(b+4|0,d);i=e;return}function zm(a,b){a=a|0;b=b|0;var d=0;d=i;c[a>>2]=143648;Am(a+4|0,b);i=d;return}function Am(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=wy(b|0)|0;g=Rw(e+13|0)|0;c[g+4>>2]=e;c[g>>2]=e;f=g+12|0;c[a>>2]=f;c[g+8>>2]=0;By(f|0,b|0,e+1|0)|0;i=d;return}function Bm(a){a=a|0;return}function Cm(a,b,d){a=a|0;b=b|0;d=d|0;c[a>>2]=d;c[a+4>>2]=b;return}function Dm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;f=e;Yb[c[(c[a>>2]|0)+12>>2]&3](f,a,b);if((c[f+4>>2]|0)!=(c[d+4>>2]|0)){a=0;i=e;return a|0}a=(c[f>>2]|0)==(c[d>>2]|0);i=e;return a|0}function Em(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=i;if((c[b+4>>2]|0)!=(a|0)){a=0;i=e;return a|0}a=(c[b>>2]|0)==(d|0);i=e;return a|0}function Fm(a,b,c){a=a|0;b=b|0;c=c|0;b=i;c=Ib(c|0)|0;Qm(a,c,wy(c|0)|0);i=b;return}function Gm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;g=i;i=i+16|0;f=g;h=c[d>>2]|0;if((h|0)==0){c[b+0>>2]=c[e+0>>2];c[b+4>>2]=c[e+4>>2];c[b+8>>2]=c[e+8>>2];c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;i=g;return}j=a[e>>0]|0;if((j&1)==0)j=(j&255)>>>1;else j=c[e+4>>2]|0;if((j|0)!=0){_m(e,131752)|0;h=c[d>>2]|0}d=c[d+4>>2]|0;Yb[c[(c[d>>2]|0)+24>>2]&3](f,d,h);d=a[f>>0]|0;if((d&1)==0){d=(d&255)>>>1;h=f+1|0}else{d=c[f+4>>2]|0;h=c[f+8>>2]|0}an(e,h,d)|0;Um(f);c[b+0>>2]=c[e+0>>2];c[b+4>>2]=c[e+4>>2];c[b+8>>2]=c[e+8>>2];c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;i=g;return}function Hm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+32|0;g=e+12|0;f=e;Qm(f,d,wy(d|0)|0);Gm(g,b,f);ym(a,g);Um(g);Um(f);c[a>>2]=131768;f=b;b=c[f+4>>2]|0;d=a+8|0;c[d>>2]=c[f>>2];c[d+4>>2]=b;i=e;return}function Im(a){a=a|0;var b=0;b=i;ex(a);Sw(a);i=b;return}function Jm(a){a=a|0;var b=0;b=i;ex(a);i=b;return}function Km(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+16|0;g=e+8|0;d=e+4|0;f=e;c[d>>2]=a;if(a>>>0<212){k=c[(Lm(131904,132096|0,d,g)|0)>>2]|0;i=e;return k|0}if(a>>>0>4294967291){k=Ma(8)|0;zm(k,132288);c[k>>2]=143808;zb(k|0,143848,100)}j=(a>>>0)/210|0;k=j*210|0;c[f>>2]=a-k;a=(Lm(132096,132288|0,f,g)|0)-132096>>2;f=a;g=j;a=(c[132096+(a<<2)>>2]|0)+k|0;a:while(1){h=5;while(1){k=c[131904+(h<<2)>>2]|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=109;break a}h=h+1|0;if((a|0)==(da(j,k)|0))break;if(!(h>>>0<47)){b=10;break}}b:do if((b|0)==10){b=0;if(a>>>0<44521){b=112;break a}j=(a>>>0)/211|0;h=211;while(1){if((a|0)==(da(j,h)|0))break b;k=h+10|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+12|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+16|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+18|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+22|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+28|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+30|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+36|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+40|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+42|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+46|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+52|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+58|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+60|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+66|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+70|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+72|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+78|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+82|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+88|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;j=h+96|0;k=(a>>>0)/(j>>>0)|0;if(k>>>0<j>>>0){b=110;break a}if((a|0)==(da(k,j)|0))break b;k=h+100|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+102|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+106|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+108|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+112|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+120|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+126|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+130|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+136|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+138|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+142|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+148|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+150|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+156|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+162|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+166|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+168|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+172|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+178|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+180|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+186|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+190|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;k=h+192|0;j=(a>>>0)/(k>>>0)|0;if(j>>>0<k>>>0){b=110;break a}if((a|0)==(da(j,k)|0))break b;j=h+196|0;k=(a>>>0)/(j>>>0)|0;if(k>>>0<j>>>0){b=110;break a}if((a|0)==(da(k,j)|0))break b;j=h+198|0;k=(a>>>0)/(j>>>0)|0;if(k>>>0<j>>>0){b=110;break a}if((a|0)==(da(k,j)|0))break b;j=h+208|0;k=(a>>>0)/(j>>>0)|0;if(k>>>0<j>>>0){b=110;break a}h=h+210|0;if((a|0)==(da(k,j)|0))break b;j=(a>>>0)/(h>>>0)|0;if(j>>>0<h>>>0){b=111;break a}}}while(0);k=f+1|0;a=(k|0)==48;k=a?0:k;a=(a&1)+g|0;f=k;g=a;a=(c[132096+(k<<2)>>2]|0)+(a*210|0)|0}if((b|0)==109){c[d>>2]=a;k=a;i=e;return k|0}else if((b|0)==110){c[d>>2]=a;k=a;i=e;return k|0}else if((b|0)==111){c[d>>2]=a;k=a;i=e;return k|0}else if((b|0)==112){c[d>>2]=a;k=a;i=e;return k|0}return 0}function Lm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;e=i;f=a;a=b-a>>2;a:while(1){while(1){if((a|0)==0)break a;b=(a|0)/2|0;if((c[f+(b<<2)>>2]|0)>>>0<(c[d>>2]|0)>>>0)break;else a=b}f=f+(b+1<<2)|0;a=a+ -1-b|0}i=e;return f|0}function Mm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=i;Wa(132312)|0;if((c[a>>2]|0)==1)do Ba(132336,132312)|0;while((c[a>>2]|0)==1);if((c[a>>2]|0)==0){c[a>>2]=1;lb(132312)|0;Tb[d&127](b);Wa(132312)|0;c[a>>2]=-1;lb(132312)|0;Bb(132336)|0;i=e;return}else{lb(132312)|0;i=e;return}}function Nm(a){a=a|0;a=Ma(8)|0;xm(a,132384);c[a>>2]=143704;zb(a|0,143744,98)}function Om(a,b){a=a|0;b=b|0;var c=0;c=i;Pm(a,b);i=c;return}function Pm(b,d){b=b|0;d=d|0;var e=0;e=i;if((a[d>>0]&1)==0){c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];c[b+8>>2]=c[d+8>>2];i=e;return}else{Qm(b,c[d+8>>2]|0,c[d+4>>2]|0);i=e;return}}function Qm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;if(e>>>0>4294967279)Nm(0);if(e>>>0<11){a[b>>0]=e<<1;b=b+1|0;By(b|0,d|0,e|0)|0;d=b+e|0;a[d>>0]=0;i=f;return}else{h=e+16&-16;g=Qw(h)|0;c[b+8>>2]=g;c[b>>2]=h|1;c[b+4>>2]=e;b=g;By(b|0,d|0,e|0)|0;d=b+e|0;a[d>>0]=0;i=f;return}}function Rm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;if(d>>>0>4294967279)Nm(0);if(d>>>0<11){a[b>>0]=d<<1;b=b+1|0;vy(b|0,e|0,d|0)|0;e=b+d|0;a[e>>0]=0;i=f;return}else{h=d+16&-16;g=Qw(h)|0;c[b+8>>2]=g;c[b>>2]=h|1;c[b+4>>2]=d;b=g;vy(b|0,e|0,d|0)|0;e=b+d|0;a[e>>0]=0;i=f;return}}function Sm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;h=d;g=e-h|0;if(g>>>0>4294967279)Nm(0);if(g>>>0<11){a[b>>0]=g<<1;g=b+1|0}else{k=g+16&-16;j=Qw(k)|0;c[b+8>>2]=j;c[b>>2]=k|1;c[b+4>>2]=g;g=j}if((d|0)==(e|0)){k=g;a[k>>0]=0;i=f;return}h=e+(0-h)|0;b=g;while(1){a[b>>0]=a[d>>0]|0;d=d+1|0;if((d|0)==(e|0))break;else b=b+1|0}k=g+h|0;a[k>>0]=0;i=f;return}function Tm(a){a=a|0;var b=0;b=i;Um(a);i=b;return}function Um(b){b=b|0;var d=0;d=i;if((a[b>>0]&1)==0){i=d;return}Sw(c[b+8>>2]|0);i=d;return}function Vm(a,b){a=a|0;b=b|0;var c=0;c=i;a=Wm(a,b,wy(b|0)|0)|0;i=c;return a|0}function Wm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;h=a[b>>0]|0;if((h&1)==0)g=10;else{g=c[b>>2]|0;h=g&255;g=(g&-2)+ -1|0}j=(h&1)==0;if(g>>>0<e>>>0){if(j)h=(h&255)>>>1;else h=c[b+4>>2]|0;bn(b,g,e-g|0,h,0,h,e,d);i=f;return b|0}if(j)g=b+1|0;else g=c[b+8>>2]|0;Cy(g|0,d|0,e|0)|0;a[g+e>>0]=0;if((a[b>>0]&1)==0){a[b>>0]=e<<1;i=f;return b|0}else{c[b+4>>2]=e;i=f;return b|0}return 0}function Xm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;h=a[b>>0]|0;g=(h&1)==0;if(g)h=(h&255)>>>1;else h=c[b+4>>2]|0;if(h>>>0<d>>>0){Ym(b,d-h|0,e)|0;i=f;return}if(g){a[b+d+1>>0]=0;a[b>>0]=d<<1;i=f;return}else{a[(c[b+8>>2]|0)+d>>0]=0;c[b+4>>2]=d;i=f;return}}function Ym(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;if((d|0)==0){i=f;return b|0}j=a[b>>0]|0;if((j&1)==0)h=10;else{h=c[b>>2]|0;j=h&255;h=(h&-2)+ -1|0}if((j&1)==0)g=(j&255)>>>1;else g=c[b+4>>2]|0;if((h-g|0)>>>0<d>>>0){cn(b,h,d-h+g|0,g,g,0,0);j=a[b>>0]|0}if((j&1)==0)h=b+1|0;else h=c[b+8>>2]|0;vy(h+g|0,e|0,d|0)|0;e=g+d|0;if((a[b>>0]&1)==0)a[b>>0]=e<<1;else c[b+4>>2]=e;a[h+e>>0]=0;i=f;return b|0}function Zm(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;if(d>>>0>4294967279)Nm(0);g=a[b>>0]|0;if((g&1)==0)h=10;else{h=c[b>>2]|0;g=h&255;h=(h&-2)+ -1|0}if((g&1)==0)f=(g&255)>>>1;else f=c[b+4>>2]|0;d=f>>>0>d>>>0?f:d;if(d>>>0<11)d=10;else d=(d+16&-16)+ -1|0;if((d|0)==(h|0)){i=e;return}do if((d|0)!=10){j=d+1|0;if(d>>>0>h>>>0)k=Qw(j)|0;else k=Qw(j)|0;if((g&1)==0){l=1;j=b+1|0;h=0;break}else{l=1;j=c[b+8>>2]|0;h=1;break}}else{k=b+1|0;l=0;j=c[b+8>>2]|0;h=1}while(0);if((g&1)==0)g=(g&255)>>>1;else g=c[b+4>>2]|0;By(k|0,j|0,g+1|0)|0;if(h)Sw(j);if(l){c[b>>2]=d+1|1;c[b+4>>2]=f;c[b+8>>2]=k;i=e;return}else{a[b>>0]=f<<1;i=e;return}}function _m(a,b){a=a|0;b=b|0;var c=0;c=i;a=an(a,b,wy(b|0)|0)|0;i=c;return a|0}function $m(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;g=a[b>>0]|0;f=(g&1)!=0;if(f){h=(c[b>>2]&-2)+ -1|0;g=c[b+4>>2]|0}else{h=10;g=(g&255)>>>1}if((g|0)==(h|0)){cn(b,h,1,h,h,0,0);if((a[b>>0]&1)==0)f=7;else f=8}else if(f)f=8;else f=7;if((f|0)==7){a[b>>0]=(g<<1)+2;h=g+1|0;f=b+1|0;g=f+g|0;a[g>>0]=d;h=f+h|0;a[h>>0]=0;i=e;return}else if((f|0)==8){f=c[b+8>>2]|0;h=g+1|0;c[b+4>>2]=h;g=f+g|0;a[g>>0]=d;h=f+h|0;a[h>>0]=0;i=e;return}}function an(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;j=a[b>>0]|0;if((j&1)==0)h=10;else{h=c[b>>2]|0;j=h&255;h=(h&-2)+ -1|0}if((j&1)==0)g=(j&255)>>>1;else g=c[b+4>>2]|0;if((h-g|0)>>>0<e>>>0){bn(b,h,e-h+g|0,g,g,0,e,d);i=f;return b|0}if((e|0)==0){i=f;return b|0}if((j&1)==0)h=b+1|0;else h=c[b+8>>2]|0;By(h+g|0,d|0,e|0)|0;e=g+e|0;if((a[b>>0]&1)==0)a[b>>0]=e<<1;else c[b+4>>2]=e;a[h+e>>0]=0;i=f;return b|0}function bn(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0;l=i;if((-18-d|0)>>>0<e>>>0)Nm(0);if((a[b>>0]&1)==0)m=b+1|0;else m=c[b+8>>2]|0;if(d>>>0<2147483623){e=e+d|0;n=d<<1;e=e>>>0<n>>>0?n:e;if(e>>>0<11)e=11;else e=e+16&-16}else e=-17;n=Qw(e)|0;if((g|0)!=0)By(n|0,m|0,g|0)|0;if((j|0)!=0)By(n+g|0,k|0,j|0)|0;k=f-h|0;if((k|0)!=(g|0))By(n+(j+g)|0,m+(h+g)|0,k-g|0)|0;if((d|0)==10){f=b+8|0;c[f>>2]=n;e=e|1;c[b>>2]=e;e=k+j|0;f=b+4|0;c[f>>2]=e;n=n+e|0;a[n>>0]=0;i=l;return}Sw(m);f=b+8|0;c[f>>2]=n;e=e|1;c[b>>2]=e;e=k+j|0;f=b+4|0;c[f>>2]=e;n=n+e|0;a[n>>0]=0;i=l;return}function cn(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0;k=i;if((-17-d|0)>>>0<e>>>0)Nm(0);if((a[b>>0]&1)==0)l=b+1|0;else l=c[b+8>>2]|0;if(d>>>0<2147483623){e=e+d|0;m=d<<1;e=e>>>0<m>>>0?m:e;if(e>>>0<11)m=11;else m=e+16&-16}else m=-17;e=Qw(m)|0;if((g|0)!=0)By(e|0,l|0,g|0)|0;f=f-h|0;if((f|0)!=(g|0))By(e+(j+g)|0,l+(h+g)|0,f-g|0)|0;if((d|0)==10){f=b+8|0;c[f>>2]=e;m=m|1;c[b>>2]=m;i=k;return}Sw(l);f=b+8|0;c[f>>2]=e;m=m|1;c[b>>2]=m;i=k;return}function dn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;if(e>>>0>1073741807)Nm(0);if(e>>>0<2){a[b>>0]=e<<1;b=b+4|0;Iw(b,d,e)|0;d=b+(e<<2)|0;c[d>>2]=0;i=f;return}else{h=e+4&-4;g=Qw(h<<2)|0;c[b+8>>2]=g;c[b>>2]=h|1;c[b+4>>2]=e;b=g;Iw(b,d,e)|0;d=b+(e<<2)|0;c[d>>2]=0;i=f;return}}function en(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;if(d>>>0>1073741807)Nm(0);if(d>>>0<2){a[b>>0]=d<<1;b=b+4|0;Kw(b,e,d)|0;e=b+(d<<2)|0;c[e>>2]=0;i=f;return}else{h=d+4&-4;g=Qw(h<<2)|0;c[b+8>>2]=g;c[b>>2]=h|1;c[b+4>>2]=d;b=g;Kw(b,e,d)|0;e=b+(d<<2)|0;c[e>>2]=0;i=f;return}}function fn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;g=d;h=e-g|0;j=h>>2;if(j>>>0>1073741807)Nm(0);if(j>>>0<2){a[b>>0]=h>>>1;h=b+4|0}else{k=j+4&-4;h=Qw(k<<2)|0;c[b+8>>2]=h;c[b>>2]=k|1;c[b+4>>2]=j}if((d|0)==(e|0)){k=h;c[k>>2]=0;i=f;return}g=((e+ -4+(0-g)|0)>>>2)+1|0;j=h;while(1){c[j>>2]=c[d>>2];d=d+4|0;if((d|0)==(e|0))break;else j=j+4|0}k=h+(g<<2)|0;c[k>>2]=0;i=f;return}function gn(a){a=a|0;var b=0;b=i;hn(a);i=b;return}function hn(b){b=b|0;var d=0;d=i;if((a[b>>0]&1)==0){i=d;return}Sw(c[b+8>>2]|0);i=d;return}function jn(a,b){a=a|0;b=b|0;var c=0;c=i;a=kn(a,b,Hw(b)|0)|0;i=c;return a|0}function kn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;h=a[b>>0]|0;if((h&1)==0)g=1;else{g=c[b>>2]|0;h=g&255;g=(g&-2)+ -1|0}j=(h&1)==0;if(g>>>0<e>>>0){if(j)h=(h&255)>>>1;else h=c[b+4>>2]|0;nn(b,g,e-g|0,h,0,h,e,d);i=f;return b|0}if(j)g=b+4|0;else g=c[b+8>>2]|0;Jw(g,d,e)|0;c[g+(e<<2)>>2]=0;if((a[b>>0]&1)==0){a[b>>0]=e<<1;i=f;return b|0}else{c[b+4>>2]=e;i=f;return b|0}return 0}function ln(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;if(d>>>0>1073741807)Nm(0);g=a[b>>0]|0;if((g&1)==0)h=1;else{h=c[b>>2]|0;g=h&255;h=(h&-2)+ -1|0}if((g&1)==0)f=(g&255)>>>1;else f=c[b+4>>2]|0;d=f>>>0>d>>>0?f:d;if(d>>>0<2)d=1;else d=(d+4&-4)+ -1|0;if((d|0)==(h|0)){i=e;return}do if((d|0)!=1){j=(d<<2)+4|0;if(d>>>0>h>>>0)k=Qw(j)|0;else k=Qw(j)|0;if((g&1)==0){l=1;j=b+4|0;h=0;break}else{l=1;j=c[b+8>>2]|0;h=1;break}}else{k=b+4|0;l=0;j=c[b+8>>2]|0;h=1}while(0);if((g&1)==0)g=(g&255)>>>1;else g=c[b+4>>2]|0;Iw(k,j,g+1|0)|0;if(h)Sw(j);if(l){c[b>>2]=d+1|1;c[b+4>>2]=f;c[b+8>>2]=k;i=e;return}else{a[b>>0]=f<<1;i=e;return}}function mn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;g=a[b>>0]|0;f=(g&1)!=0;if(f){h=(c[b>>2]&-2)+ -1|0;g=c[b+4>>2]|0}else{h=1;g=(g&255)>>>1}if((g|0)==(h|0)){on(b,h,1,h,h,0,0);if((a[b>>0]&1)==0)f=7;else f=8}else if(f)f=8;else f=7;if((f|0)==7){a[b>>0]=(g<<1)+2;h=g+1|0;f=b+4|0;g=f+(g<<2)|0;c[g>>2]=d;h=f+(h<<2)|0;c[h>>2]=0;i=e;return}else if((f|0)==8){f=c[b+8>>2]|0;h=g+1|0;c[b+4>>2]=h;g=f+(g<<2)|0;c[g>>2]=d;h=f+(h<<2)|0;c[h>>2]=0;i=e;return}}function nn(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0;l=i;if((1073741806-d|0)>>>0<e>>>0)Nm(0);if((a[b>>0]&1)==0)m=b+4|0;else m=c[b+8>>2]|0;if(d>>>0<536870887){e=e+d|0;n=d<<1;e=e>>>0<n>>>0?n:e;if(e>>>0<2)e=2;else e=e+4&-4}else e=1073741807;n=Qw(e<<2)|0;if((g|0)!=0)Iw(n,m,g)|0;if((j|0)!=0)Iw(n+(g<<2)|0,k,j)|0;k=f-h|0;if((k|0)!=(g|0))Iw(n+(j+g<<2)|0,m+(h+g<<2)|0,k-g|0)|0;if((d|0)==1){f=b+8|0;c[f>>2]=n;e=e|1;c[b>>2]=e;e=k+j|0;f=b+4|0;c[f>>2]=e;n=n+(e<<2)|0;c[n>>2]=0;i=l;return}Sw(m);f=b+8|0;c[f>>2]=n;e=e|1;c[b>>2]=e;e=k+j|0;f=b+4|0;c[f>>2]=e;n=n+(e<<2)|0;c[n>>2]=0;i=l;return}function on(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0;k=i;if((1073741807-d|0)>>>0<e>>>0)Nm(0);if((a[b>>0]&1)==0)l=b+4|0;else l=c[b+8>>2]|0;if(d>>>0<536870887){e=e+d|0;m=d<<1;e=e>>>0<m>>>0?m:e;if(e>>>0<2)m=2;else m=e+4&-4}else m=1073741807;e=Qw(m<<2)|0;if((g|0)!=0)Iw(e,l,g)|0;f=f-h|0;if((f|0)!=(g|0))Iw(e+(j+g<<2)|0,l+(h+g<<2)|0,f-g|0)|0;if((d|0)==1){f=b+8|0;c[f>>2]=e;m=m|1;c[b>>2]=m;i=k;return}Sw(l);f=b+8|0;c[f>>2]=e;m=m|1;c[b>>2]=m;i=k;return}function pn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d;f=(c[a+24>>2]|0)==0;if(f)c[a+16>>2]=b|1;else c[a+16>>2]=b;if(((f&1|b)&c[a+20>>2]|0)==0){i=d;return}else{a=Ma(16)|0;yo()|0;f=e;c[f>>2]=1;c[f+4>>2]=132744;Ao(a,132800,e);zb(a|0,132848,31)}}function qn(a){a=a|0;var b=0;b=i;c[a>>2]=132792;rn(a,0);Xt(a+28|0);Ox(c[a+32>>2]|0);Ox(c[a+36>>2]|0);Ox(c[a+48>>2]|0);Ox(c[a+60>>2]|0);i=b;return}function rn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;g=c[a+40>>2]|0;if((g|0)==0){i=d;return}e=a+32|0;f=a+36|0;do{g=g+ -1|0;Yb[c[(c[e>>2]|0)+(g<<2)>>2]&3](b,a,c[(c[f>>2]|0)+(g<<2)>>2]|0)}while((g|0)!=0);i=d;return}function sn(a,b){a=a|0;b=b|0;var c=0;c=i;Wt(a,b+28|0);i=c;return}function tn(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;c[a+24>>2]=b;c[a+16>>2]=(b|0)==0&1;c[a+20>>2]=0;c[a+4>>2]=4098;c[a+12>>2]=0;c[a+8>>2]=6;b=a+28|0;e=a+32|0;a=e+40|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(a|0));Vt(b);i=d;return}function un(a){a=a|0;var b=0;b=i;c[a>>2]=132408;Xt(a+4|0);Sw(a);i=b;return}function vn(a){a=a|0;var b=0;b=i;c[a>>2]=132408;Xt(a+4|0);i=b;return}function wn(a){a=a|0;var b=0;b=i;c[a>>2]=132408;Xt(a+4|0);i=b;return}function xn(a){a=a|0;var b=0;b=i;c[a>>2]=132408;Vt(a+4|0);a=a+8|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[a+16>>2]=0;c[a+20>>2]=0;i=b;return}function yn(a,b){a=a|0;b=b|0;return}function zn(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function An(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}function Bn(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=a;c[e>>2]=0;c[e+4>>2]=0;e=a+8|0;c[e>>2]=-1;c[e+4>>2]=-1;return}function Cn(a){a=a|0;return 0}function Dn(a){a=a|0;return 0}function En(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;if((e|0)<=0){k=0;i=f;return k|0}g=b+12|0;h=b+16|0;j=0;while(1){k=c[g>>2]|0;if(k>>>0<(c[h>>2]|0)>>>0){c[g>>2]=k+1;k=a[k>>0]|0}else{k=Wb[c[(c[b>>2]|0)+40>>2]&63](b)|0;if((k|0)==-1){e=8;break}k=k&255}a[d>>0]=k;j=j+1|0;if((j|0)<(e|0))d=d+1|0;else{e=8;break}}if((e|0)==8){i=f;return j|0}return 0}function Fn(a){a=a|0;return-1}function Gn(a){a=a|0;var b=0,e=0;b=i;if((Wb[c[(c[a>>2]|0)+36>>2]&63](a)|0)==-1){a=-1;i=b;return a|0}e=a+12|0;a=c[e>>2]|0;c[e>>2]=a+1;a=d[a>>0]|0;i=b;return a|0}function Hn(a,b){a=a|0;b=b|0;return-1}function In(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;if((f|0)<=0){l=0;i=g;return l|0}j=b+24|0;h=b+28|0;k=0;while(1){l=c[j>>2]|0;if(!(l>>>0<(c[h>>2]|0)>>>0)){if((dc[c[(c[b>>2]|0)+52>>2]&15](b,d[e>>0]|0)|0)==-1){h=7;break}}else{m=a[e>>0]|0;c[j>>2]=l+1;a[l>>0]=m}k=k+1|0;if((k|0)<(f|0))e=e+1|0;else{h=7;break}}if((h|0)==7){i=g;return k|0}return 0}function Jn(a,b){a=a|0;b=b|0;return-1}function Kn(a){a=a|0;var b=0;b=i;c[a>>2]=132472;Xt(a+4|0);Sw(a);i=b;return}function Ln(a){a=a|0;var b=0;b=i;c[a>>2]=132472;Xt(a+4|0);i=b;return}function Mn(a){a=a|0;var b=0;b=i;c[a>>2]=132472;Xt(a+4|0);i=b;return}function Nn(a){a=a|0;var b=0;b=i;c[a>>2]=132472;Vt(a+4|0);a=a+8|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[a+16>>2]=0;c[a+20>>2]=0;i=b;return}function On(a,b){a=a|0;b=b|0;return}function Pn(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function Qn(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}function Rn(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=a;c[e>>2]=0;c[e+4>>2]=0;e=a+8|0;c[e>>2]=-1;c[e+4>>2]=-1;return}function Sn(a){a=a|0;return 0}function Tn(a){a=a|0;return 0}function Un(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;if((d|0)<=0){j=0;i=e;return j|0}f=a+12|0;g=a+16|0;h=0;while(1){j=c[f>>2]|0;if(!(j>>>0<(c[g>>2]|0)>>>0)){j=Wb[c[(c[a>>2]|0)+40>>2]&63](a)|0;if((j|0)==-1){a=8;break}}else{c[f>>2]=j+4;j=c[j>>2]|0}c[b>>2]=j;h=h+1|0;if((h|0)>=(d|0)){a=8;break}b=b+4|0}if((a|0)==8){i=e;return h|0}return 0}function Vn(a){a=a|0;return-1}function Wn(a){a=a|0;var b=0,d=0;b=i;if((Wb[c[(c[a>>2]|0)+36>>2]&63](a)|0)==-1){a=-1;i=b;return a|0}d=a+12|0;a=c[d>>2]|0;c[d>>2]=a+4;a=c[a>>2]|0;i=b;return a|0}function Xn(a,b){a=a|0;b=b|0;return-1}function Yn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;if((d|0)<=0){j=0;i=e;return j|0}g=a+24|0;f=a+28|0;h=0;while(1){j=c[g>>2]|0;if(!(j>>>0<(c[f>>2]|0)>>>0)){if((dc[c[(c[a>>2]|0)+52>>2]&15](a,c[b>>2]|0)|0)==-1){f=8;break}}else{k=c[b>>2]|0;c[g>>2]=j+4;c[j>>2]=k}h=h+1|0;if((h|0)>=(d|0)){f=8;break}b=b+4|0}if((f|0)==8){i=e;return h|0}return 0}function Zn(a,b){a=a|0;b=b|0;return-1}function _n(a){a=a|0;var b=0;b=i;qn(a+8|0);Sw(a);i=b;return}function $n(a){a=a|0;var b=0;b=i;qn(a+8|0);i=b;return}function ao(a){a=a|0;var b=0;b=i;_n(a+(c[(c[a>>2]|0)+ -12>>2]|0)|0);i=b;return}function bo(a){a=a|0;var b=0;b=i;qn(a+((c[(c[a>>2]|0)+ -12>>2]|0)+8)|0);i=b;return}function co(b){b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d;if((c[b+((c[(c[b>>2]|0)+ -12>>2]|0)+24)>>2]|0)==0){i=d;return b|0}oo(e,b);if((a[e>>0]|0)!=0?(f=c[b+((c[(c[b>>2]|0)+ -12>>2]|0)+24)>>2]|0,(Wb[c[(c[f>>2]|0)+24>>2]&63](f)|0)==-1):0){f=c[(c[b>>2]|0)+ -12>>2]|0;pn(b+f|0,c[b+(f+16)>>2]|1)}po(e);i=d;return b|0}function eo(a){a=a|0;var b=0;b=a+16|0;c[b>>2]=c[b>>2]|1;if((c[a+20>>2]&1|0)==0)return;else Ca()}function fo(a){a=a|0;var b=0;b=i;qn(a+8|0);Sw(a);i=b;return}function go(a){a=a|0;var b=0;b=i;qn(a+8|0);i=b;return}function ho(a){a=a|0;var b=0;b=i;fo(a+(c[(c[a>>2]|0)+ -12>>2]|0)|0);i=b;return}function io(a){a=a|0;var b=0;b=i;qn(a+((c[(c[a>>2]|0)+ -12>>2]|0)+8)|0);i=b;return}function jo(b){b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d;if((c[b+((c[(c[b>>2]|0)+ -12>>2]|0)+24)>>2]|0)==0){i=d;return b|0}uo(e,b);if((a[e>>0]|0)!=0?(f=c[b+((c[(c[b>>2]|0)+ -12>>2]|0)+24)>>2]|0,(Wb[c[(c[f>>2]|0)+24>>2]&63](f)|0)==-1):0){f=c[(c[b>>2]|0)+ -12>>2]|0;pn(b+f|0,c[b+(f+16)>>2]|1)}vo(e);i=d;return b|0}function ko(a){a=a|0;var b=0;b=i;qn(a+4|0);Sw(a);i=b;return}function lo(a){a=a|0;var b=0;b=i;qn(a+4|0);i=b;return}function mo(a){a=a|0;var b=0;b=i;ko(a+(c[(c[a>>2]|0)+ -12>>2]|0)|0);i=b;return}function no(a){a=a|0;var b=0;b=i;qn(a+((c[(c[a>>2]|0)+ -12>>2]|0)+4)|0);i=b;return}function oo(b,d){b=b|0;d=d|0;var e=0,f=0;e=i;a[b>>0]=0;c[b+4>>2]=d;f=c[(c[d>>2]|0)+ -12>>2]|0;if((c[d+(f+16)>>2]|0)!=0){i=e;return}f=c[d+(f+72)>>2]|0;if((f|0)!=0)co(f)|0;a[b>>0]=1;i=e;return}function po(a){a=a|0;var b=0,d=0,e=0;b=i;a=a+4|0;d=c[a>>2]|0;e=c[(c[d>>2]|0)+ -12>>2]|0;if((c[d+(e+24)>>2]|0)==0){i=b;return}if((c[d+(e+16)>>2]|0)!=0){i=b;return}if((c[d+(e+4)>>2]&8192|0)==0){i=b;return}if(eb()|0){i=b;return}e=c[a>>2]|0;e=c[e+((c[(c[e>>2]|0)+ -12>>2]|0)+24)>>2]|0;if(!((Wb[c[(c[e>>2]|0)+24>>2]&63](e)|0)==-1)){i=b;return}d=c[a>>2]|0;e=c[(c[d>>2]|0)+ -12>>2]|0;pn(d+e|0,c[d+(e+16)>>2]|1);i=b;return}function qo(a){a=a|0;var b=0;b=i;qn(a+4|0);Sw(a);i=b;return}function ro(a){a=a|0;var b=0;b=i;qn(a+4|0);i=b;return}function so(a){a=a|0;var b=0;b=i;qo(a+(c[(c[a>>2]|0)+ -12>>2]|0)|0);i=b;return}function to(a){a=a|0;var b=0;b=i;qn(a+((c[(c[a>>2]|0)+ -12>>2]|0)+4)|0);i=b;return}function uo(b,d){b=b|0;d=d|0;var e=0,f=0;e=i;a[b>>0]=0;c[b+4>>2]=d;f=c[(c[d>>2]|0)+ -12>>2]|0;if((c[d+(f+16)>>2]|0)!=0){i=e;return}f=c[d+(f+72)>>2]|0;if((f|0)!=0)jo(f)|0;a[b>>0]=1;i=e;return}function vo(a){a=a|0;var b=0,d=0,e=0;b=i;a=a+4|0;d=c[a>>2]|0;e=c[(c[d>>2]|0)+ -12>>2]|0;if((c[d+(e+24)>>2]|0)==0){i=b;return}if((c[d+(e+16)>>2]|0)!=0){i=b;return}if((c[d+(e+4)>>2]&8192|0)==0){i=b;return}if(eb()|0){i=b;return}e=c[a>>2]|0;e=c[e+((c[(c[e>>2]|0)+ -12>>2]|0)+24)>>2]|0;if(!((Wb[c[(c[e>>2]|0)+24>>2]&63](e)|0)==-1)){i=b;return}d=c[a>>2]|0;e=c[(c[d>>2]|0)+ -12>>2]|0;pn(d+e|0,c[d+(e+16)>>2]|1);i=b;return}function wo(a){a=a|0;return 132688}function xo(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=i;if((c|0)==1){Qm(a,132704,35);i=d;return}else{Fm(a,b,c);i=d;return}}function yo(){var b=0;b=i;if((a[132752]|0)==0?(Ha(132752)|0)!=0:0){c[33186]=133448;Jb(35,132744,o|0)|0;Ra(132752)}i=b;return 132744}function zo(a){a=a|0;return}function Ao(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e+8|0;g=e;j=d;h=c[j+4>>2]|0;d=g;c[d>>2]=c[j>>2];c[d+4>>2]=h;c[f+0>>2]=c[g+0>>2];c[f+4>>2]=c[g+4>>2];Hm(a,f,b);c[a>>2]=132768;i=e;return}function Bo(a){a=a|0;var b=0;b=i;Jm(a);Sw(a);i=b;return}function Co(a){a=a|0;var b=0;b=i;Jm(a);i=b;return}function Do(a){a=a|0;var b=0;b=i;qn(a);Sw(a);i=b;return}function Eo(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function Fo(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function Go(a){a=a|0;return}function Ho(a){a=a|0;return}function Io(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;b=i;a:do if((e|0)==(f|0))g=6;else while(1){if((c|0)==(d|0)){d=-1;break a}h=a[c>>0]|0;j=a[e>>0]|0;if(h<<24>>24<j<<24>>24){d=-1;break a}if(j<<24>>24<h<<24>>24){d=1;break a}c=c+1|0;e=e+1|0;if((e|0)==(f|0)){g=6;break}}while(0);if((g|0)==6)d=(c|0)!=(d|0)&1;i=b;return d|0}function Jo(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;b=i;Sm(a,c,d);i=b;return}function Ko(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0;b=i;if((c|0)==(d|0)){e=0;i=b;return e|0}else e=0;do{e=(a[c>>0]|0)+(e<<4)|0;f=e&-268435456;e=(f>>>24|f)^e;c=c+1|0}while((c|0)!=(d|0));i=b;return e|0}function Lo(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function Mo(a){a=a|0;return}function No(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;a=i;a:do if((e|0)==(f|0))g=6;else while(1){if((b|0)==(d|0)){d=-1;break a}h=c[b>>2]|0;j=c[e>>2]|0;if((h|0)<(j|0)){d=-1;break a}if((j|0)<(h|0)){d=1;break a}b=b+4|0;e=e+4|0;if((e|0)==(f|0)){g=6;break}}while(0);if((g|0)==6)d=(b|0)!=(d|0)&1;i=a;return d|0}function Oo(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;b=i;fn(a,c,d);i=b;return}function Po(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;a=i;if((b|0)==(d|0)){e=0;i=a;return e|0}else e=0;do{e=(c[b>>2]|0)+(e<<4)|0;f=e&-268435456;e=(f>>>24|f)^e;b=b+4|0}while((b|0)!=(d|0));i=a;return e|0}function Qo(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function Ro(a){a=a|0;return}function So(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;k=i;i=i+64|0;s=k;n=k+16|0;l=k+52|0;r=k+4|0;o=k+56|0;p=k+60|0;m=k+12|0;u=k+48|0;q=k+24|0;t=k+8|0;if((c[g+4>>2]&1|0)!=0){sn(m,g);d=Zt(m,135168)|0;wm(c[m>>2]|0)|0;sn(u,g);g=Zt(u,135312)|0;wm(c[u>>2]|0)|0;Ub[c[(c[g>>2]|0)+24>>2]&63](q,g);Ub[c[(c[g>>2]|0)+28>>2]&63](q+12|0,g);c[t>>2]=c[f>>2];g=q+24|0;c[s+0>>2]=c[t+0>>2];a[j>>0]=(To(e,s,q,g,d,h,1)|0)==(q|0)&1;c[b>>2]=c[e>>2];Tm(q+12|0);Tm(q);i=k;return}c[l>>2]=-1;m=c[(c[d>>2]|0)+16>>2]|0;c[o>>2]=c[e>>2];c[p>>2]=c[f>>2];c[n+0>>2]=c[o+0>>2];c[s+0>>2]=c[p+0>>2];Rb[m&63](r,d,n,s,g,h,l);m=c[r>>2]|0;c[e>>2]=m;l=c[l>>2]|0;if((l|0)==1)a[j>>0]=1;else if((l|0)==0)a[j>>0]=0;else{a[j>>0]=1;c[h>>2]=4}c[b>>2]=m;i=k;return}function To(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;m=i;i=i+112|0;p=m;s=(g-f|0)/12|0;if(s>>>0>100){p=Nx(s)|0;if((p|0)==0)Mx();else{o=p;l=p}}else{o=p;l=0}p=(f|0)==(g|0);if(p)u=0;else{q=f;u=0;r=o;while(1){t=a[q>>0]|0;if((t&1)==0)t=(t&255)>>>1;else t=c[q+4>>2]|0;if((t|0)==0){a[r>>0]=2;u=u+1|0;s=s+ -1|0}else a[r>>0]=1;q=q+12|0;if((q|0)==(g|0))break;else r=r+1|0}}q=0;a:while(1){r=c[b>>2]|0;do if((r|0)!=0){if((c[r+12>>2]|0)==(c[r+16>>2]|0))if((Wb[c[(c[r>>2]|0)+36>>2]&63](r)|0)==-1){c[b>>2]=0;r=0;break}else{r=c[b>>2]|0;break}}else r=0;while(0);w=(r|0)==0;t=c[e>>2]|0;if((t|0)!=0){if((c[t+12>>2]|0)==(c[t+16>>2]|0)?(Wb[c[(c[t>>2]|0)+36>>2]&63](t)|0)==-1:0){c[e>>2]=0;t=0}}else t=0;r=(t|0)==0;v=c[b>>2]|0;if(!((w^r)&(s|0)!=0))break;r=c[v+12>>2]|0;if((r|0)==(c[v+16>>2]|0))r=Wb[c[(c[v>>2]|0)+36>>2]&63](v)|0;else r=d[r>>0]|0;t=r&255;if(!k)t=dc[c[(c[h>>2]|0)+12>>2]&15](h,t)|0;r=q+1|0;if(p){q=r;continue}else{x=0;v=f;w=o}while(1){do if((a[w>>0]|0)==1){if((a[v>>0]&1)==0)y=v+1|0;else y=c[v+8>>2]|0;y=a[y+q>>0]|0;if(!k)y=dc[c[(c[h>>2]|0)+12>>2]&15](h,y)|0;if(!(t<<24>>24==y<<24>>24)){a[w>>0]=0;s=s+ -1|0;break}x=a[v>>0]|0;if((x&1)==0)x=(x&255)>>>1;else x=c[v+4>>2]|0;if((x|0)==(r|0)){a[w>>0]=2;x=1;u=u+1|0;s=s+ -1|0}else x=1}while(0);v=v+12|0;if((v|0)==(g|0))break;w=w+1|0}if(!x){q=r;continue}q=c[b>>2]|0;t=q+12|0;v=c[t>>2]|0;if((v|0)==(c[q+16>>2]|0))Wb[c[(c[q>>2]|0)+40>>2]&63](q)|0;else c[t>>2]=v+1;if((u+s|0)>>>0<2){q=r;continue}else{t=f;q=o}while(1){if((a[q>>0]|0)==2){v=a[t>>0]|0;if((v&1)==0)v=(v&255)>>>1;else v=c[t+4>>2]|0;if((v|0)!=(r|0)){a[q>>0]=0;u=u+ -1|0}}t=t+12|0;if((t|0)==(g|0)){q=r;continue a}else q=q+1|0}}do if((v|0)!=0){if((c[v+12>>2]|0)==(c[v+16>>2]|0))if((Wb[c[(c[v>>2]|0)+36>>2]&63](v)|0)==-1){c[b>>2]=0;v=0;break}else{v=c[b>>2]|0;break}}else v=0;while(0);h=(v|0)==0;do if(!r){if((c[t+12>>2]|0)!=(c[t+16>>2]|0))if(h)break;else{n=68;break}if(!((Wb[c[(c[t>>2]|0)+36>>2]&63](t)|0)==-1))if(h)break;else{n=68;break}else{c[e>>2]=0;n=66;break}}else n=66;while(0);if((n|0)==66?h:0)n=68;if((n|0)==68)c[j>>2]=c[j>>2]|2;b:do if(!p)if((a[o>>0]|0)==2)g=f;else while(1){f=f+12|0;o=o+1|0;if((f|0)==(g|0)){n=73;break b}if((a[o>>0]|0)==2){g=f;break}}else n=73;while(0);if((n|0)==73)c[j>>2]=c[j>>2]|4;if((l|0)==0){i=m;return g|0}Ox(l);i=m;return g|0}function Uo(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];Vo(a,0,k,j,f,g,h);i=b;return}function Vo(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;n=i;i=i+224|0;v=n+198|0;u=n+196|0;m=n+16|0;e=n+4|0;t=n+192|0;q=n+32|0;p=n;r=n+28|0;s=Dv(h)|0;Mp(m,h,v,u);c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;Xm(e,10,0);if((a[e>>0]&1)==0){A=e+1|0;w=e+8|0;h=A}else{A=e+8|0;w=A;h=e+1|0;A=c[A>>2]|0}c[t>>2]=A;c[p>>2]=q;c[r>>2]=0;x=e+4|0;y=a[u>>0]|0;u=c[f>>2]|0;a:while(1){if((u|0)!=0){if((c[u+12>>2]|0)==(c[u+16>>2]|0)?(Wb[c[(c[u>>2]|0)+36>>2]&63](u)|0)==-1:0){c[f>>2]=0;u=0}}else u=0;B=(u|0)==0;z=c[g>>2]|0;do if((z|0)!=0){if((c[z+12>>2]|0)!=(c[z+16>>2]|0))if(B)break;else break a;if(!((Wb[c[(c[z>>2]|0)+36>>2]&63](z)|0)==-1))if(B)break;else break a;else{c[g>>2]=0;l=14;break}}else l=14;while(0);if((l|0)==14){l=0;if(B){z=0;break}else z=0}B=a[e>>0]|0;C=(B&1)==0;if(C)D=(B&255)>>>1;else D=c[x>>2]|0;if(((c[t>>2]|0)-A|0)==(D|0)){if(C){C=(B&255)>>>1;A=(B&255)>>>1}else{A=c[x>>2]|0;C=A}Xm(e,A<<1,0);if((a[e>>0]&1)==0)A=10;else A=(c[e>>2]&-2)+ -1|0;Xm(e,A,0);if((a[e>>0]&1)==0)A=h;else A=c[w>>2]|0;c[t>>2]=A+C}B=u+12|0;D=c[B>>2]|0;C=u+16|0;if((D|0)==(c[C>>2]|0))D=Wb[c[(c[u>>2]|0)+36>>2]&63](u)|0;else D=d[D>>0]|0;if((lp(D&255,s,A,t,r,y,m,q,p,v)|0)!=0)break;z=c[B>>2]|0;if((z|0)==(c[C>>2]|0)){Wb[c[(c[u>>2]|0)+40>>2]&63](u)|0;continue}else{c[B>>2]=z+1;continue}}v=a[m>>0]|0;if((v&1)==0)v=(v&255)>>>1;else v=c[m+4>>2]|0;if((v|0)!=0?(o=c[p>>2]|0,(o-q|0)<160):0){D=c[r>>2]|0;c[p>>2]=o+4;c[o>>2]=D}c[k>>2]=_v(A,c[t>>2]|0,j,s)|0;Ds(m,q,c[p>>2]|0,j);if((u|0)!=0){if((c[u+12>>2]|0)==(c[u+16>>2]|0)?(Wb[c[(c[u>>2]|0)+36>>2]&63](u)|0)==-1:0){c[f>>2]=0;u=0}}else u=0;f=(u|0)==0;do if((z|0)!=0){if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){if(!f)break;c[b>>2]=u;Tm(e);Tm(m);i=n;return}if((Wb[c[(c[z>>2]|0)+36>>2]&63](z)|0)==-1){c[g>>2]=0;l=50;break}if(f^(z|0)==0){c[b>>2]=u;Tm(e);Tm(m);i=n;return}}else l=50;while(0);if((l|0)==50?!f:0){c[b>>2]=u;Tm(e);Tm(m);i=n;return}c[j>>2]=c[j>>2]|2;c[b>>2]=u;Tm(e);Tm(m);i=n;return}function Wo(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];Xo(a,0,k,j,f,g,h);i=b;return}function Xo(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;n=i;i=i+224|0;v=n+198|0;u=n+196|0;m=n+16|0;e=n+4|0;t=n+192|0;q=n+32|0;p=n;r=n+28|0;s=Dv(h)|0;Mp(m,h,v,u);c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;Xm(e,10,0);if((a[e>>0]&1)==0){A=e+1|0;w=e+8|0;h=A}else{A=e+8|0;w=A;h=e+1|0;A=c[A>>2]|0}c[t>>2]=A;c[p>>2]=q;c[r>>2]=0;x=e+4|0;y=a[u>>0]|0;u=c[f>>2]|0;a:while(1){if((u|0)!=0){if((c[u+12>>2]|0)==(c[u+16>>2]|0)?(Wb[c[(c[u>>2]|0)+36>>2]&63](u)|0)==-1:0){c[f>>2]=0;u=0}}else u=0;B=(u|0)==0;z=c[g>>2]|0;do if((z|0)!=0){if((c[z+12>>2]|0)!=(c[z+16>>2]|0))if(B)break;else break a;if(!((Wb[c[(c[z>>2]|0)+36>>2]&63](z)|0)==-1))if(B)break;else break a;else{c[g>>2]=0;l=14;break}}else l=14;while(0);if((l|0)==14){l=0;if(B){z=0;break}else z=0}B=a[e>>0]|0;C=(B&1)==0;if(C)D=(B&255)>>>1;else D=c[x>>2]|0;if(((c[t>>2]|0)-A|0)==(D|0)){if(C){C=(B&255)>>>1;A=(B&255)>>>1}else{A=c[x>>2]|0;C=A}Xm(e,A<<1,0);if((a[e>>0]&1)==0)A=10;else A=(c[e>>2]&-2)+ -1|0;Xm(e,A,0);if((a[e>>0]&1)==0)A=h;else A=c[w>>2]|0;c[t>>2]=A+C}B=u+12|0;D=c[B>>2]|0;C=u+16|0;if((D|0)==(c[C>>2]|0))D=Wb[c[(c[u>>2]|0)+36>>2]&63](u)|0;else D=d[D>>0]|0;if((lp(D&255,s,A,t,r,y,m,q,p,v)|0)!=0)break;z=c[B>>2]|0;if((z|0)==(c[C>>2]|0)){Wb[c[(c[u>>2]|0)+40>>2]&63](u)|0;continue}else{c[B>>2]=z+1;continue}}v=a[m>>0]|0;if((v&1)==0)v=(v&255)>>>1;else v=c[m+4>>2]|0;if((v|0)!=0?(o=c[p>>2]|0,(o-q|0)<160):0){D=c[r>>2]|0;c[p>>2]=o+4;c[o>>2]=D}C=Zv(A,c[t>>2]|0,j,s)|0;D=k;c[D>>2]=C;c[D+4>>2]=H;Ds(m,q,c[p>>2]|0,j);if((u|0)!=0){if((c[u+12>>2]|0)==(c[u+16>>2]|0)?(Wb[c[(c[u>>2]|0)+36>>2]&63](u)|0)==-1:0){c[f>>2]=0;u=0}}else u=0;f=(u|0)==0;do if((z|0)!=0){if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){if(!f)break;c[b>>2]=u;Tm(e);Tm(m);i=n;return}if((Wb[c[(c[z>>2]|0)+36>>2]&63](z)|0)==-1){c[g>>2]=0;l=50;break}if(f^(z|0)==0){c[b>>2]=u;Tm(e);Tm(m);i=n;return}}else l=50;while(0);if((l|0)==50?!f:0){c[b>>2]=u;Tm(e);Tm(m);i=n;return}c[j>>2]=c[j>>2]|2;c[b>>2]=u;Tm(e);Tm(m);i=n;return}function Yo(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];Zo(a,0,k,j,f,g,h);i=b;return}function Zo(e,f,g,h,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;o=i;i=i+224|0;w=o+198|0;v=o+196|0;n=o+16|0;f=o+4|0;u=o+192|0;r=o+32|0;q=o;s=o+28|0;t=Dv(j)|0;Mp(n,j,w,v);c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;Xm(f,10,0);if((a[f>>0]&1)==0){B=f+1|0;x=f+8|0;j=B}else{B=f+8|0;x=B;j=f+1|0;B=c[B>>2]|0}c[u>>2]=B;c[q>>2]=r;c[s>>2]=0;y=f+4|0;z=a[v>>0]|0;v=c[g>>2]|0;a:while(1){if((v|0)!=0){if((c[v+12>>2]|0)==(c[v+16>>2]|0)?(Wb[c[(c[v>>2]|0)+36>>2]&63](v)|0)==-1:0){c[g>>2]=0;v=0}}else v=0;C=(v|0)==0;A=c[h>>2]|0;do if((A|0)!=0){if((c[A+12>>2]|0)!=(c[A+16>>2]|0))if(C)break;else break a;if(!((Wb[c[(c[A>>2]|0)+36>>2]&63](A)|0)==-1))if(C)break;else break a;else{c[h>>2]=0;m=14;break}}else m=14;while(0);if((m|0)==14){m=0;if(C){A=0;break}else A=0}C=a[f>>0]|0;D=(C&1)==0;if(D)E=(C&255)>>>1;else E=c[y>>2]|0;if(((c[u>>2]|0)-B|0)==(E|0)){if(D){D=(C&255)>>>1;B=(C&255)>>>1}else{B=c[y>>2]|0;D=B}Xm(f,B<<1,0);if((a[f>>0]&1)==0)B=10;else B=(c[f>>2]&-2)+ -1|0;Xm(f,B,0);if((a[f>>0]&1)==0)B=j;else B=c[x>>2]|0;c[u>>2]=B+D}C=v+12|0;E=c[C>>2]|0;D=v+16|0;if((E|0)==(c[D>>2]|0))E=Wb[c[(c[v>>2]|0)+36>>2]&63](v)|0;else E=d[E>>0]|0;if((lp(E&255,t,B,u,s,z,n,r,q,w)|0)!=0)break;A=c[C>>2]|0;if((A|0)==(c[D>>2]|0)){Wb[c[(c[v>>2]|0)+40>>2]&63](v)|0;continue}else{c[C>>2]=A+1;continue}}w=a[n>>0]|0;if((w&1)==0)w=(w&255)>>>1;else w=c[n+4>>2]|0;if((w|0)!=0?(p=c[q>>2]|0,(p-r|0)<160):0){E=c[s>>2]|0;c[q>>2]=p+4;c[p>>2]=E}b[l>>1]=Yv(B,c[u>>2]|0,k,t)|0;Ds(n,r,c[q>>2]|0,k);if((v|0)!=0){if((c[v+12>>2]|0)==(c[v+16>>2]|0)?(Wb[c[(c[v>>2]|0)+36>>2]&63](v)|0)==-1:0){c[g>>2]=0;v=0}}else v=0;g=(v|0)==0;do if((A|0)!=0){if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){if(!g)break;c[e>>2]=v;Tm(f);Tm(n);i=o;return}if((Wb[c[(c[A>>2]|0)+36>>2]&63](A)|0)==-1){c[h>>2]=0;m=50;break}if(g^(A|0)==0){c[e>>2]=v;Tm(f);Tm(n);i=o;return}}else m=50;while(0);if((m|0)==50?!g:0){c[e>>2]=v;Tm(f);Tm(n);i=o;return}c[k>>2]=c[k>>2]|2;c[e>>2]=v;Tm(f);Tm(n);i=o;return}function _o(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];$o(a,0,k,j,f,g,h);i=b;return}function $o(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;n=i;i=i+224|0;v=n+198|0;u=n+196|0;m=n+16|0;e=n+4|0;t=n+192|0;q=n+32|0;p=n;r=n+28|0;s=Dv(h)|0;Mp(m,h,v,u);c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;Xm(e,10,0);if((a[e>>0]&1)==0){A=e+1|0;w=e+8|0;h=A}else{A=e+8|0;w=A;h=e+1|0;A=c[A>>2]|0}c[t>>2]=A;c[p>>2]=q;c[r>>2]=0;x=e+4|0;y=a[u>>0]|0;u=c[f>>2]|0;a:while(1){if((u|0)!=0){if((c[u+12>>2]|0)==(c[u+16>>2]|0)?(Wb[c[(c[u>>2]|0)+36>>2]&63](u)|0)==-1:0){c[f>>2]=0;u=0}}else u=0;B=(u|0)==0;z=c[g>>2]|0;do if((z|0)!=0){if((c[z+12>>2]|0)!=(c[z+16>>2]|0))if(B)break;else break a;if(!((Wb[c[(c[z>>2]|0)+36>>2]&63](z)|0)==-1))if(B)break;else break a;else{c[g>>2]=0;l=14;break}}else l=14;while(0);if((l|0)==14){l=0;if(B){z=0;break}else z=0}B=a[e>>0]|0;C=(B&1)==0;if(C)D=(B&255)>>>1;else D=c[x>>2]|0;if(((c[t>>2]|0)-A|0)==(D|0)){if(C){C=(B&255)>>>1;A=(B&255)>>>1}else{A=c[x>>2]|0;C=A}Xm(e,A<<1,0);if((a[e>>0]&1)==0)A=10;else A=(c[e>>2]&-2)+ -1|0;Xm(e,A,0);if((a[e>>0]&1)==0)A=h;else A=c[w>>2]|0;c[t>>2]=A+C}B=u+12|0;D=c[B>>2]|0;C=u+16|0;if((D|0)==(c[C>>2]|0))D=Wb[c[(c[u>>2]|0)+36>>2]&63](u)|0;else D=d[D>>0]|0;if((lp(D&255,s,A,t,r,y,m,q,p,v)|0)!=0)break;z=c[B>>2]|0;if((z|0)==(c[C>>2]|0)){Wb[c[(c[u>>2]|0)+40>>2]&63](u)|0;continue}else{c[B>>2]=z+1;continue}}v=a[m>>0]|0;if((v&1)==0)v=(v&255)>>>1;else v=c[m+4>>2]|0;if((v|0)!=0?(o=c[p>>2]|0,(o-q|0)<160):0){D=c[r>>2]|0;c[p>>2]=o+4;c[o>>2]=D}c[k>>2]=Xv(A,c[t>>2]|0,j,s)|0;Ds(m,q,c[p>>2]|0,j);if((u|0)!=0){if((c[u+12>>2]|0)==(c[u+16>>2]|0)?(Wb[c[(c[u>>2]|0)+36>>2]&63](u)|0)==-1:0){c[f>>2]=0;u=0}}else u=0;f=(u|0)==0;do if((z|0)!=0){if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){if(!f)break;c[b>>2]=u;Tm(e);Tm(m);i=n;return}if((Wb[c[(c[z>>2]|0)+36>>2]&63](z)|0)==-1){c[g>>2]=0;l=50;break}if(f^(z|0)==0){c[b>>2]=u;Tm(e);Tm(m);i=n;return}}else l=50;while(0);if((l|0)==50?!f:0){c[b>>2]=u;Tm(e);Tm(m);i=n;return}c[j>>2]=c[j>>2]|2;c[b>>2]=u;Tm(e);Tm(m);i=n;return}function ap(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];bp(a,0,k,j,f,g,h);i=b;return}function bp(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;n=i;i=i+224|0;v=n+198|0;u=n+196|0;m=n+16|0;e=n+4|0;t=n+192|0;q=n+32|0;p=n;r=n+28|0;s=Dv(h)|0;Mp(m,h,v,u);c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;Xm(e,10,0);if((a[e>>0]&1)==0){A=e+1|0;w=e+8|0;h=A}else{A=e+8|0;w=A;h=e+1|0;A=c[A>>2]|0}c[t>>2]=A;c[p>>2]=q;c[r>>2]=0;x=e+4|0;y=a[u>>0]|0;u=c[f>>2]|0;a:while(1){if((u|0)!=0){if((c[u+12>>2]|0)==(c[u+16>>2]|0)?(Wb[c[(c[u>>2]|0)+36>>2]&63](u)|0)==-1:0){c[f>>2]=0;u=0}}else u=0;B=(u|0)==0;z=c[g>>2]|0;do if((z|0)!=0){if((c[z+12>>2]|0)!=(c[z+16>>2]|0))if(B)break;else break a;if(!((Wb[c[(c[z>>2]|0)+36>>2]&63](z)|0)==-1))if(B)break;else break a;else{c[g>>2]=0;l=14;break}}else l=14;while(0);if((l|0)==14){l=0;if(B){z=0;break}else z=0}B=a[e>>0]|0;C=(B&1)==0;if(C)D=(B&255)>>>1;else D=c[x>>2]|0;if(((c[t>>2]|0)-A|0)==(D|0)){if(C){C=(B&255)>>>1;A=(B&255)>>>1}else{A=c[x>>2]|0;C=A}Xm(e,A<<1,0);if((a[e>>0]&1)==0)A=10;else A=(c[e>>2]&-2)+ -1|0;Xm(e,A,0);if((a[e>>0]&1)==0)A=h;else A=c[w>>2]|0;c[t>>2]=A+C}B=u+12|0;D=c[B>>2]|0;C=u+16|0;if((D|0)==(c[C>>2]|0))D=Wb[c[(c[u>>2]|0)+36>>2]&63](u)|0;else D=d[D>>0]|0;if((lp(D&255,s,A,t,r,y,m,q,p,v)|0)!=0)break;z=c[B>>2]|0;if((z|0)==(c[C>>2]|0)){Wb[c[(c[u>>2]|0)+40>>2]&63](u)|0;continue}else{c[B>>2]=z+1;continue}}v=a[m>>0]|0;if((v&1)==0)v=(v&255)>>>1;else v=c[m+4>>2]|0;if((v|0)!=0?(o=c[p>>2]|0,(o-q|0)<160):0){D=c[r>>2]|0;c[p>>2]=o+4;c[o>>2]=D}c[k>>2]=Wv(A,c[t>>2]|0,j,s)|0;Ds(m,q,c[p>>2]|0,j);if((u|0)!=0){if((c[u+12>>2]|0)==(c[u+16>>2]|0)?(Wb[c[(c[u>>2]|0)+36>>2]&63](u)|0)==-1:0){c[f>>2]=0;u=0}}else u=0;f=(u|0)==0;do if((z|0)!=0){if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){if(!f)break;c[b>>2]=u;Tm(e);Tm(m);i=n;return}if((Wb[c[(c[z>>2]|0)+36>>2]&63](z)|0)==-1){c[g>>2]=0;l=50;break}if(f^(z|0)==0){c[b>>2]=u;Tm(e);Tm(m);i=n;return}}else l=50;while(0);if((l|0)==50?!f:0){c[b>>2]=u;Tm(e);Tm(m);i=n;return}c[j>>2]=c[j>>2]|2;c[b>>2]=u;Tm(e);Tm(m);i=n;return}function cp(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];dp(a,0,k,j,f,g,h);i=b;return}function dp(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;n=i;i=i+224|0;v=n+198|0;u=n+196|0;m=n+16|0;e=n+4|0;t=n+192|0;q=n+32|0;p=n;r=n+28|0;s=Dv(h)|0;Mp(m,h,v,u);c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;Xm(e,10,0);if((a[e>>0]&1)==0){A=e+1|0;w=e+8|0;h=A}else{A=e+8|0;w=A;h=e+1|0;A=c[A>>2]|0}c[t>>2]=A;c[p>>2]=q;c[r>>2]=0;x=e+4|0;y=a[u>>0]|0;u=c[f>>2]|0;a:while(1){if((u|0)!=0){if((c[u+12>>2]|0)==(c[u+16>>2]|0)?(Wb[c[(c[u>>2]|0)+36>>2]&63](u)|0)==-1:0){c[f>>2]=0;u=0}}else u=0;B=(u|0)==0;z=c[g>>2]|0;do if((z|0)!=0){if((c[z+12>>2]|0)!=(c[z+16>>2]|0))if(B)break;else break a;if(!((Wb[c[(c[z>>2]|0)+36>>2]&63](z)|0)==-1))if(B)break;else break a;else{c[g>>2]=0;l=14;break}}else l=14;while(0);if((l|0)==14){l=0;if(B){z=0;break}else z=0}B=a[e>>0]|0;C=(B&1)==0;if(C)D=(B&255)>>>1;else D=c[x>>2]|0;if(((c[t>>2]|0)-A|0)==(D|0)){if(C){C=(B&255)>>>1;A=(B&255)>>>1}else{A=c[x>>2]|0;C=A}Xm(e,A<<1,0);if((a[e>>0]&1)==0)A=10;else A=(c[e>>2]&-2)+ -1|0;Xm(e,A,0);if((a[e>>0]&1)==0)A=h;else A=c[w>>2]|0;c[t>>2]=A+C}B=u+12|0;D=c[B>>2]|0;C=u+16|0;if((D|0)==(c[C>>2]|0))D=Wb[c[(c[u>>2]|0)+36>>2]&63](u)|0;else D=d[D>>0]|0;if((lp(D&255,s,A,t,r,y,m,q,p,v)|0)!=0)break;z=c[B>>2]|0;if((z|0)==(c[C>>2]|0)){Wb[c[(c[u>>2]|0)+40>>2]&63](u)|0;continue}else{c[B>>2]=z+1;continue}}v=a[m>>0]|0;if((v&1)==0)v=(v&255)>>>1;else v=c[m+4>>2]|0;if((v|0)!=0?(o=c[p>>2]|0,(o-q|0)<160):0){D=c[r>>2]|0;c[p>>2]=o+4;c[o>>2]=D}C=Vv(A,c[t>>2]|0,j,s)|0;D=k;c[D>>2]=C;c[D+4>>2]=H;Ds(m,q,c[p>>2]|0,j);if((u|0)!=0){if((c[u+12>>2]|0)==(c[u+16>>2]|0)?(Wb[c[(c[u>>2]|0)+36>>2]&63](u)|0)==-1:0){c[f>>2]=0;u=0}}else u=0;f=(u|0)==0;do if((z|0)!=0){if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){if(!f)break;c[b>>2]=u;Tm(e);Tm(m);i=n;return}if((Wb[c[(c[z>>2]|0)+36>>2]&63](z)|0)==-1){c[g>>2]=0;l=50;break}if(f^(z|0)==0){c[b>>2]=u;Tm(e);Tm(m);i=n;return}}else l=50;while(0);if((l|0)==50?!f:0){c[b>>2]=u;Tm(e);Tm(m);i=n;return}c[j>>2]=c[j>>2]|2;c[b>>2]=u;Tm(e);Tm(m);i=n;return}function ep(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];fp(a,0,k,j,f,g,h);i=b;return}function fp(b,e,f,h,j,k,l){b=b|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;o=i;i=i+256|0;w=o+208|0;A=o+200|0;x=o+240|0;n=o;e=o+188|0;r=o+184|0;s=o+16|0;u=o+176|0;t=o+180|0;q=o+241|0;v=o+242|0;Np(n,j,w,A,x);c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;Xm(e,10,0);if((a[e>>0]&1)==0){D=e+1|0;z=e+8|0;y=D}else{D=e+8|0;z=D;y=e+1|0;D=c[D>>2]|0}c[r>>2]=D;c[u>>2]=s;c[t>>2]=0;a[q>>0]=1;a[v>>0]=69;j=e+4|0;A=a[A>>0]|0;B=a[x>>0]|0;x=c[f>>2]|0;a:while(1){if((x|0)!=0){if((c[x+12>>2]|0)==(c[x+16>>2]|0)?(Wb[c[(c[x>>2]|0)+36>>2]&63](x)|0)==-1:0){c[f>>2]=0;x=0}}else x=0;E=(x|0)==0;C=c[h>>2]|0;do if((C|0)!=0){if((c[C+12>>2]|0)!=(c[C+16>>2]|0))if(E)break;else break a;if(!((Wb[c[(c[C>>2]|0)+36>>2]&63](C)|0)==-1))if(E)break;else break a;else{c[h>>2]=0;m=14;break}}else m=14;while(0);if((m|0)==14){m=0;if(E){C=0;break}else C=0}E=a[e>>0]|0;G=(E&1)==0;if(G)F=(E&255)>>>1;else F=c[j>>2]|0;if(((c[r>>2]|0)-D|0)==(F|0)){if(G){F=(E&255)>>>1;D=(E&255)>>>1}else{D=c[j>>2]|0;F=D}Xm(e,D<<1,0);if((a[e>>0]&1)==0)D=10;else D=(c[e>>2]&-2)+ -1|0;Xm(e,D,0);if((a[e>>0]&1)==0)D=y;else D=c[z>>2]|0;c[r>>2]=D+F}F=x+12|0;G=c[F>>2]|0;E=x+16|0;if((G|0)==(c[E>>2]|0))G=Wb[c[(c[x>>2]|0)+36>>2]&63](x)|0;else G=d[G>>0]|0;if((Op(G&255,q,v,D,r,A,B,n,s,u,t,w)|0)!=0)break;C=c[F>>2]|0;if((C|0)==(c[E>>2]|0)){Wb[c[(c[x>>2]|0)+40>>2]&63](x)|0;continue}else{c[F>>2]=C+1;continue}}v=a[n>>0]|0;if((v&1)==0)v=(v&255)>>>1;else v=c[n+4>>2]|0;if(((v|0)!=0?(a[q>>0]|0)!=0:0)?(p=c[u>>2]|0,(p-s|0)<160):0){G=c[t>>2]|0;c[u>>2]=p+4;c[p>>2]=G}g[l>>2]=+Uv(D,c[r>>2]|0,k);Ds(n,s,c[u>>2]|0,k);if((x|0)!=0){if((c[x+12>>2]|0)==(c[x+16>>2]|0)?(Wb[c[(c[x>>2]|0)+36>>2]&63](x)|0)==-1:0){c[f>>2]=0;x=0}}else x=0;p=(x|0)==0;do if((C|0)!=0){if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(!p)break;c[b>>2]=x;Tm(e);Tm(n);i=o;return}if((Wb[c[(c[C>>2]|0)+36>>2]&63](C)|0)==-1){c[h>>2]=0;m=51;break}if(p^(C|0)==0){c[b>>2]=x;Tm(e);Tm(n);i=o;return}}else m=51;while(0);if((m|0)==51?!p:0){c[b>>2]=x;Tm(e);Tm(n);i=o;return}c[k>>2]=c[k>>2]|2;c[b>>2]=x;Tm(e);Tm(n);i=o;return}function gp(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];hp(a,0,k,j,f,g,h);i=b;return}function hp(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;o=i;i=i+256|0;w=o+208|0;A=o+200|0;x=o+240|0;n=o;e=o+188|0;r=o+184|0;s=o+16|0;u=o+176|0;t=o+180|0;q=o+241|0;v=o+242|0;Np(n,j,w,A,x);c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;Xm(e,10,0);if((a[e>>0]&1)==0){D=e+1|0;z=e+8|0;y=D}else{D=e+8|0;z=D;y=e+1|0;D=c[D>>2]|0}c[r>>2]=D;c[u>>2]=s;c[t>>2]=0;a[q>>0]=1;a[v>>0]=69;j=e+4|0;A=a[A>>0]|0;B=a[x>>0]|0;x=c[f>>2]|0;a:while(1){if((x|0)!=0){if((c[x+12>>2]|0)==(c[x+16>>2]|0)?(Wb[c[(c[x>>2]|0)+36>>2]&63](x)|0)==-1:0){c[f>>2]=0;x=0}}else x=0;E=(x|0)==0;C=c[g>>2]|0;do if((C|0)!=0){if((c[C+12>>2]|0)!=(c[C+16>>2]|0))if(E)break;else break a;if(!((Wb[c[(c[C>>2]|0)+36>>2]&63](C)|0)==-1))if(E)break;else break a;else{c[g>>2]=0;m=14;break}}else m=14;while(0);if((m|0)==14){m=0;if(E){C=0;break}else C=0}E=a[e>>0]|0;G=(E&1)==0;if(G)F=(E&255)>>>1;else F=c[j>>2]|0;if(((c[r>>2]|0)-D|0)==(F|0)){if(G){F=(E&255)>>>1;D=(E&255)>>>1}else{D=c[j>>2]|0;F=D}Xm(e,D<<1,0);if((a[e>>0]&1)==0)D=10;else D=(c[e>>2]&-2)+ -1|0;Xm(e,D,0);if((a[e>>0]&1)==0)D=y;else D=c[z>>2]|0;c[r>>2]=D+F}F=x+12|0;G=c[F>>2]|0;E=x+16|0;if((G|0)==(c[E>>2]|0))G=Wb[c[(c[x>>2]|0)+36>>2]&63](x)|0;else G=d[G>>0]|0;if((Op(G&255,q,v,D,r,A,B,n,s,u,t,w)|0)!=0)break;C=c[F>>2]|0;if((C|0)==(c[E>>2]|0)){Wb[c[(c[x>>2]|0)+40>>2]&63](x)|0;continue}else{c[F>>2]=C+1;continue}}v=a[n>>0]|0;if((v&1)==0)v=(v&255)>>>1;else v=c[n+4>>2]|0;if(((v|0)!=0?(a[q>>0]|0)!=0:0)?(p=c[u>>2]|0,(p-s|0)<160):0){G=c[t>>2]|0;c[u>>2]=p+4;c[p>>2]=G}h[l>>3]=+Tv(D,c[r>>2]|0,k);Ds(n,s,c[u>>2]|0,k);if((x|0)!=0){if((c[x+12>>2]|0)==(c[x+16>>2]|0)?(Wb[c[(c[x>>2]|0)+36>>2]&63](x)|0)==-1:0){c[f>>2]=0;x=0}}else x=0;p=(x|0)==0;do if((C|0)!=0){if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(!p)break;c[b>>2]=x;Tm(e);Tm(n);i=o;return}if((Wb[c[(c[C>>2]|0)+36>>2]&63](C)|0)==-1){c[g>>2]=0;m=51;break}if(p^(C|0)==0){c[b>>2]=x;Tm(e);Tm(n);i=o;return}}else m=51;while(0);if((m|0)==51?!p:0){c[b>>2]=x;Tm(e);Tm(n);i=o;return}c[k>>2]=c[k>>2]|2;c[b>>2]=x;Tm(e);Tm(n);i=o;return}function ip(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];jp(a,0,k,j,f,g,h);i=b;return}function jp(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;o=i;i=i+256|0;w=o+208|0;A=o+200|0;x=o+240|0;n=o;e=o+188|0;r=o+184|0;s=o+16|0;u=o+176|0;t=o+180|0;q=o+241|0;v=o+242|0;Np(n,j,w,A,x);c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;Xm(e,10,0);if((a[e>>0]&1)==0){D=e+1|0;z=e+8|0;y=D}else{D=e+8|0;z=D;y=e+1|0;D=c[D>>2]|0}c[r>>2]=D;c[u>>2]=s;c[t>>2]=0;a[q>>0]=1;a[v>>0]=69;j=e+4|0;A=a[A>>0]|0;B=a[x>>0]|0;x=c[f>>2]|0;a:while(1){if((x|0)!=0){if((c[x+12>>2]|0)==(c[x+16>>2]|0)?(Wb[c[(c[x>>2]|0)+36>>2]&63](x)|0)==-1:0){c[f>>2]=0;x=0}}else x=0;E=(x|0)==0;C=c[g>>2]|0;do if((C|0)!=0){if((c[C+12>>2]|0)!=(c[C+16>>2]|0))if(E)break;else break a;if(!((Wb[c[(c[C>>2]|0)+36>>2]&63](C)|0)==-1))if(E)break;else break a;else{c[g>>2]=0;m=14;break}}else m=14;while(0);if((m|0)==14){m=0;if(E){C=0;break}else C=0}E=a[e>>0]|0;G=(E&1)==0;if(G)F=(E&255)>>>1;else F=c[j>>2]|0;if(((c[r>>2]|0)-D|0)==(F|0)){if(G){F=(E&255)>>>1;D=(E&255)>>>1}else{D=c[j>>2]|0;F=D}Xm(e,D<<1,0);if((a[e>>0]&1)==0)D=10;else D=(c[e>>2]&-2)+ -1|0;Xm(e,D,0);if((a[e>>0]&1)==0)D=y;else D=c[z>>2]|0;c[r>>2]=D+F}F=x+12|0;G=c[F>>2]|0;E=x+16|0;if((G|0)==(c[E>>2]|0))G=Wb[c[(c[x>>2]|0)+36>>2]&63](x)|0;else G=d[G>>0]|0;if((Op(G&255,q,v,D,r,A,B,n,s,u,t,w)|0)!=0)break;C=c[F>>2]|0;if((C|0)==(c[E>>2]|0)){Wb[c[(c[x>>2]|0)+40>>2]&63](x)|0;continue}else{c[F>>2]=C+1;continue}}v=a[n>>0]|0;if((v&1)==0)v=(v&255)>>>1;else v=c[n+4>>2]|0;if(((v|0)!=0?(a[q>>0]|0)!=0:0)?(p=c[u>>2]|0,(p-s|0)<160):0){G=c[t>>2]|0;c[u>>2]=p+4;c[p>>2]=G}h[l>>3]=+Sv(D,c[r>>2]|0,k);Ds(n,s,c[u>>2]|0,k);if((x|0)!=0){if((c[x+12>>2]|0)==(c[x+16>>2]|0)?(Wb[c[(c[x>>2]|0)+36>>2]&63](x)|0)==-1:0){c[f>>2]=0;x=0}}else x=0;p=(x|0)==0;do if((C|0)!=0){if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(!p)break;c[b>>2]=x;Tm(e);Tm(n);i=o;return}if((Wb[c[(c[C>>2]|0)+36>>2]&63](C)|0)==-1){c[g>>2]=0;m=51;break}if(p^(C|0)==0){c[b>>2]=x;Tm(e);Tm(n);i=o;return}}else m=51;while(0);if((m|0)==51?!p:0){c[b>>2]=x;Tm(e);Tm(n);i=o;return}c[k>>2]=c[k>>2]|2;c[b>>2]=x;Tm(e);Tm(n);i=o;return}



function kp(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;n=i;i=i+240|0;o=n;p=n+208|0;e=n+188|0;A=n+200|0;m=n+8|0;s=n+4|0;r=n+24|0;q=n+184|0;t=n+204|0;c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;sn(A,h);z=Zt(A,135168)|0;ac[c[(c[z>>2]|0)+32>>2]&7](z,133680,133706|0,p)|0;wm(c[A>>2]|0)|0;c[m+0>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;Xm(m,10,0);if((a[m>>0]&1)==0){x=m+1|0;h=m+8|0;u=x}else{x=m+8|0;h=x;u=m+1|0;x=c[x>>2]|0}c[s>>2]=x;c[q>>2]=r;c[t>>2]=0;v=m+4|0;w=c[f>>2]|0;a:while(1){if((w|0)!=0){if((c[w+12>>2]|0)==(c[w+16>>2]|0)?(Wb[c[(c[w>>2]|0)+36>>2]&63](w)|0)==-1:0){c[f>>2]=0;w=0}}else w=0;y=(w|0)==0;z=c[g>>2]|0;do if((z|0)!=0){if((c[z+12>>2]|0)!=(c[z+16>>2]|0))if(y)break;else break a;if(!((Wb[c[(c[z>>2]|0)+36>>2]&63](z)|0)==-1))if(y)break;else break a;else{c[g>>2]=0;l=14;break}}else l=14;while(0);if((l|0)==14?(l=0,y):0)break;y=a[m>>0]|0;z=(y&1)==0;if(z)A=(y&255)>>>1;else A=c[v>>2]|0;if(((c[s>>2]|0)-x|0)==(A|0)){if(z){z=(y&255)>>>1;x=(y&255)>>>1}else{x=c[v>>2]|0;z=x}Xm(m,x<<1,0);if((a[m>>0]&1)==0)x=10;else x=(c[m>>2]&-2)+ -1|0;Xm(m,x,0);if((a[m>>0]&1)==0)x=u;else x=c[h>>2]|0;c[s>>2]=x+z}z=w+12|0;A=c[z>>2]|0;y=w+16|0;if((A|0)==(c[y>>2]|0))A=Wb[c[(c[w>>2]|0)+36>>2]&63](w)|0;else A=d[A>>0]|0;if((lp(A&255,16,x,s,t,0,e,r,q,p)|0)!=0)break;A=c[z>>2]|0;if((A|0)==(c[y>>2]|0)){Wb[c[(c[w>>2]|0)+40>>2]&63](w)|0;continue}else{c[z>>2]=A+1;continue}}a[x+3>>0]=0;A=np()|0;c[o>>2]=k;if((mp(x,A,133720,o)|0)!=1)c[j>>2]=4;o=c[f>>2]|0;if((o|0)!=0){if((c[o+12>>2]|0)==(c[o+16>>2]|0)?(Wb[c[(c[o>>2]|0)+36>>2]&63](o)|0)==-1:0){c[f>>2]=0;o=0}}else o=0;k=(o|0)==0;f=c[g>>2]|0;do if((f|0)!=0){if((c[f+12>>2]|0)!=(c[f+16>>2]|0)){if(!k)break;c[b>>2]=o;Tm(m);Tm(e);i=n;return}if((Wb[c[(c[f>>2]|0)+36>>2]&63](f)|0)==-1){c[g>>2]=0;l=46;break}if(k^(f|0)==0){c[b>>2]=o;Tm(m);Tm(e);i=n;return}}else l=46;while(0);if((l|0)==46?!k:0){c[b>>2]=o;Tm(m);Tm(e);i=n;return}c[j>>2]=c[j>>2]|2;c[b>>2]=o;Tm(m);Tm(e);i=n;return}function lp(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0;n=i;p=c[f>>2]|0;o=(p|0)==(e|0);do if(o){q=(a[m+24>>0]|0)==b<<24>>24;if(!q?!((a[m+25>>0]|0)==b<<24>>24):0)break;c[f>>2]=e+1;a[e>>0]=q?43:45;c[g>>2]=0;q=0;i=n;return q|0}while(0);q=a[j>>0]|0;if((q&1)==0)j=(q&255)>>>1;else j=c[j+4>>2]|0;if((j|0)!=0?b<<24>>24==h<<24>>24:0){o=c[l>>2]|0;if((o-k|0)>=160){q=0;i=n;return q|0}q=c[g>>2]|0;c[l>>2]=o+4;c[o>>2]=q;c[g>>2]=0;q=0;i=n;return q|0}l=m+26|0;k=m;while(1){if((a[k>>0]|0)==b<<24>>24)break;k=k+1|0;if((k|0)==(l|0)){k=l;break}}m=k-m|0;if((m|0)>23){q=-1;i=n;return q|0}if((d|0)==16){if((m|0)>=22){if(o){q=-1;i=n;return q|0}if((p-e|0)>=3){q=-1;i=n;return q|0}if((a[p+ -1>>0]|0)!=48){q=-1;i=n;return q|0}c[g>>2]=0;q=a[133680+m>>0]|0;c[f>>2]=p+1;a[p>>0]=q;q=0;i=n;return q|0}}else if((d|0)==10|(d|0)==8?(m|0)>=(d|0):0){q=-1;i=n;return q|0}q=a[133680+m>>0]|0;c[f>>2]=p+1;a[p>>0]=q;c[g>>2]=(c[g>>2]|0)+1;q=0;i=n;return q|0}function mp(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;c[g>>2]=e;b=Za(b|0)|0;d=Fw(a,d,g)|0;if((b|0)==0){i=f;return d|0}Za(b|0)|0;i=f;return d|0}function np(){var b=0;b=i;if((a[135064]|0)==0?(Ha(135064)|0)!=0:0){c[33764]=$a(2147483647,135072,0)|0;Ra(135064)}i=b;return c[33764]|0}function op(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function pp(a){a=a|0;return}function qp(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;k=i;i=i+64|0;s=k;n=k+16|0;l=k+52|0;r=k+4|0;o=k+56|0;p=k+60|0;m=k+12|0;u=k+48|0;q=k+24|0;t=k+8|0;if((c[g+4>>2]&1|0)!=0){sn(m,g);d=Zt(m,135160)|0;wm(c[m>>2]|0)|0;sn(u,g);g=Zt(u,135320)|0;wm(c[u>>2]|0)|0;Ub[c[(c[g>>2]|0)+24>>2]&63](q,g);Ub[c[(c[g>>2]|0)+28>>2]&63](q+12|0,g);c[t>>2]=c[f>>2];g=q+24|0;c[s+0>>2]=c[t+0>>2];a[j>>0]=(rp(e,s,q,g,d,h,1)|0)==(q|0)&1;c[b>>2]=c[e>>2];gn(q+12|0);gn(q);i=k;return}c[l>>2]=-1;m=c[(c[d>>2]|0)+16>>2]|0;c[o>>2]=c[e>>2];c[p>>2]=c[f>>2];c[n+0>>2]=c[o+0>>2];c[s+0>>2]=c[p+0>>2];Rb[m&63](r,d,n,s,g,h,l);m=c[r>>2]|0;c[e>>2]=m;l=c[l>>2]|0;if((l|0)==1)a[j>>0]=1;else if((l|0)==0)a[j>>0]=0;else{a[j>>0]=1;c[h>>2]=4}c[b>>2]=m;i=k;return}function rp(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;k=i;i=i+112|0;o=k;r=(f-e|0)/12|0;if(r>>>0>100){o=Nx(r)|0;if((o|0)==0)Mx();else{n=o;m=o}}else{n=o;m=0}o=(e|0)==(f|0);if(o)s=0;else{p=e;s=0;q=n;while(1){t=a[p>>0]|0;if((t&1)==0)t=(t&255)>>>1;else t=c[p+4>>2]|0;if((t|0)==0){a[q>>0]=2;s=s+1|0;r=r+ -1|0}else a[q>>0]=1;p=p+12|0;if((p|0)==(f|0))break;else q=q+1|0}}p=0;a:while(1){t=c[b>>2]|0;do if((t|0)!=0){q=c[t+12>>2]|0;if((q|0)==(c[t+16>>2]|0))q=Wb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else q=c[q>>2]|0;if((q|0)==-1){c[b>>2]=0;t=1;break}else{t=(c[b>>2]|0)==0;break}}else t=1;while(0);q=c[d>>2]|0;if((q|0)!=0){u=c[q+12>>2]|0;if((u|0)==(c[q+16>>2]|0))u=Wb[c[(c[q>>2]|0)+36>>2]&63](q)|0;else u=c[u>>2]|0;if((u|0)==-1){c[d>>2]=0;q=0;v=1}else v=0}else{q=0;v=1}u=c[b>>2]|0;if(!((t^v)&(r|0)!=0))break;q=c[u+12>>2]|0;if((q|0)==(c[u+16>>2]|0))t=Wb[c[(c[u>>2]|0)+36>>2]&63](u)|0;else t=c[q>>2]|0;if(!j)t=dc[c[(c[g>>2]|0)+28>>2]&15](g,t)|0;q=p+1|0;if(o){p=q;continue}else{w=0;u=e;v=n}while(1){do if((a[v>>0]|0)==1){if((a[u>>0]&1)==0)x=u+4|0;else x=c[u+8>>2]|0;x=c[x+(p<<2)>>2]|0;if(!j)x=dc[c[(c[g>>2]|0)+28>>2]&15](g,x)|0;if((t|0)!=(x|0)){a[v>>0]=0;r=r+ -1|0;break}w=a[u>>0]|0;if((w&1)==0)w=(w&255)>>>1;else w=c[u+4>>2]|0;if((w|0)==(q|0)){a[v>>0]=2;w=1;s=s+1|0;r=r+ -1|0}else w=1}while(0);u=u+12|0;if((u|0)==(f|0))break;v=v+1|0}if(!w){p=q;continue}t=c[b>>2]|0;p=t+12|0;u=c[p>>2]|0;if((u|0)==(c[t+16>>2]|0))Wb[c[(c[t>>2]|0)+40>>2]&63](t)|0;else c[p>>2]=u+4;if((s+r|0)>>>0<2){p=q;continue}else{t=e;p=n}while(1){if((a[p>>0]|0)==2){u=a[t>>0]|0;if((u&1)==0)u=(u&255)>>>1;else u=c[t+4>>2]|0;if((u|0)!=(q|0)){a[p>>0]=0;s=s+ -1|0}}t=t+12|0;if((t|0)==(f|0)){p=q;continue a}else p=p+1|0}}do if((u|0)!=0){j=c[u+12>>2]|0;if((j|0)==(c[u+16>>2]|0))j=Wb[c[(c[u>>2]|0)+36>>2]&63](u)|0;else j=c[j>>2]|0;if((j|0)==-1){c[b>>2]=0;b=1;break}else{b=(c[b>>2]|0)==0;break}}else b=1;while(0);do if((q|0)!=0){j=c[q+12>>2]|0;if((j|0)==(c[q+16>>2]|0))j=Wb[c[(c[q>>2]|0)+36>>2]&63](q)|0;else j=c[j>>2]|0;if(!((j|0)==-1))if(b)break;else{l=75;break}else{c[d>>2]=0;l=73;break}}else l=73;while(0);if((l|0)==73?b:0)l=75;if((l|0)==75)c[h>>2]=c[h>>2]|2;b:do if(!o)if((a[n>>0]|0)==2)f=e;else while(1){e=e+12|0;n=n+1|0;if((e|0)==(f|0)){l=80;break b}if((a[n>>0]|0)==2){f=e;break}}else l=80;while(0);if((l|0)==80)c[h>>2]=c[h>>2]|4;if((m|0)==0){i=k;return f|0}Ox(m);i=k;return f|0}function sp(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];tp(a,0,k,j,f,g,h);i=b;return}function tp(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;l=i;i=i+304|0;u=l+160|0;t=l+280|0;m=l+264|0;d=l+284|0;r=l+300|0;s=l;o=l+276|0;p=l+296|0;q=Dv(g)|0;Pp(m,g,u,t);c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;Xm(d,10,0);if((a[d>>0]&1)==0){z=d+1|0;g=d+8|0;w=z}else{z=d+8|0;g=z;w=d+1|0;z=c[z>>2]|0}c[r>>2]=z;c[o>>2]=s;c[p>>2]=0;v=d+4|0;x=c[t>>2]|0;t=c[e>>2]|0;a:while(1){if((t|0)!=0){y=c[t+12>>2]|0;if((y|0)==(c[t+16>>2]|0))y=Wb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else y=c[y>>2]|0;if((y|0)==-1){c[e>>2]=0;t=0;A=1}else A=0}else{t=0;A=1}y=c[f>>2]|0;do if((y|0)!=0){B=c[y+12>>2]|0;if((B|0)==(c[y+16>>2]|0))B=Wb[c[(c[y>>2]|0)+36>>2]&63](y)|0;else B=c[B>>2]|0;if(!((B|0)==-1))if(A)break;else break a;else{c[f>>2]=0;k=17;break}}else k=17;while(0);if((k|0)==17){k=0;if(A){y=0;break}else y=0}A=a[d>>0]|0;B=(A&1)==0;if(B)C=(A&255)>>>1;else C=c[v>>2]|0;if(((c[r>>2]|0)-z|0)==(C|0)){if(B){B=(A&255)>>>1;z=(A&255)>>>1}else{z=c[v>>2]|0;B=z}Xm(d,z<<1,0);if((a[d>>0]&1)==0)z=10;else z=(c[d>>2]&-2)+ -1|0;Xm(d,z,0);if((a[d>>0]&1)==0)z=w;else z=c[g>>2]|0;c[r>>2]=z+B}B=t+12|0;C=c[B>>2]|0;A=t+16|0;if((C|0)==(c[A>>2]|0))C=Wb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else C=c[C>>2]|0;if((Lp(C,q,z,r,p,x,m,s,o,u)|0)!=0)break;y=c[B>>2]|0;if((y|0)==(c[A>>2]|0)){Wb[c[(c[t>>2]|0)+40>>2]&63](t)|0;continue}else{c[B>>2]=y+4;continue}}u=a[m>>0]|0;if((u&1)==0)u=(u&255)>>>1;else u=c[m+4>>2]|0;if((u|0)!=0?(n=c[o>>2]|0,(n-s|0)<160):0){C=c[p>>2]|0;c[o>>2]=n+4;c[n>>2]=C}c[j>>2]=_v(z,c[r>>2]|0,h,q)|0;Ds(m,s,c[o>>2]|0,h);if((t|0)!=0){j=c[t+12>>2]|0;if((j|0)==(c[t+16>>2]|0))j=Wb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else j=c[j>>2]|0;if((j|0)==-1){c[e>>2]=0;t=0;e=1}else e=0}else{t=0;e=1}do if((y|0)!=0){j=c[y+12>>2]|0;if((j|0)==(c[y+16>>2]|0))j=Wb[c[(c[y>>2]|0)+36>>2]&63](y)|0;else j=c[j>>2]|0;if((j|0)==-1){c[f>>2]=0;k=56;break}if(e){c[b>>2]=t;Tm(d);Tm(m);i=l;return}}else k=56;while(0);if((k|0)==56?!e:0){c[b>>2]=t;Tm(d);Tm(m);i=l;return}c[h>>2]=c[h>>2]|2;c[b>>2]=t;Tm(d);Tm(m);i=l;return}function up(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];vp(a,0,k,j,f,g,h);i=b;return}function vp(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;l=i;i=i+304|0;u=l+160|0;t=l+280|0;m=l+264|0;d=l+284|0;r=l+300|0;s=l;o=l+276|0;p=l+296|0;q=Dv(g)|0;Pp(m,g,u,t);c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;Xm(d,10,0);if((a[d>>0]&1)==0){z=d+1|0;g=d+8|0;w=z}else{z=d+8|0;g=z;w=d+1|0;z=c[z>>2]|0}c[r>>2]=z;c[o>>2]=s;c[p>>2]=0;v=d+4|0;x=c[t>>2]|0;t=c[e>>2]|0;a:while(1){if((t|0)!=0){y=c[t+12>>2]|0;if((y|0)==(c[t+16>>2]|0))y=Wb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else y=c[y>>2]|0;if((y|0)==-1){c[e>>2]=0;t=0;A=1}else A=0}else{t=0;A=1}y=c[f>>2]|0;do if((y|0)!=0){B=c[y+12>>2]|0;if((B|0)==(c[y+16>>2]|0))B=Wb[c[(c[y>>2]|0)+36>>2]&63](y)|0;else B=c[B>>2]|0;if(!((B|0)==-1))if(A)break;else break a;else{c[f>>2]=0;k=17;break}}else k=17;while(0);if((k|0)==17){k=0;if(A){y=0;break}else y=0}A=a[d>>0]|0;B=(A&1)==0;if(B)C=(A&255)>>>1;else C=c[v>>2]|0;if(((c[r>>2]|0)-z|0)==(C|0)){if(B){B=(A&255)>>>1;z=(A&255)>>>1}else{z=c[v>>2]|0;B=z}Xm(d,z<<1,0);if((a[d>>0]&1)==0)z=10;else z=(c[d>>2]&-2)+ -1|0;Xm(d,z,0);if((a[d>>0]&1)==0)z=w;else z=c[g>>2]|0;c[r>>2]=z+B}B=t+12|0;C=c[B>>2]|0;A=t+16|0;if((C|0)==(c[A>>2]|0))C=Wb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else C=c[C>>2]|0;if((Lp(C,q,z,r,p,x,m,s,o,u)|0)!=0)break;y=c[B>>2]|0;if((y|0)==(c[A>>2]|0)){Wb[c[(c[t>>2]|0)+40>>2]&63](t)|0;continue}else{c[B>>2]=y+4;continue}}u=a[m>>0]|0;if((u&1)==0)u=(u&255)>>>1;else u=c[m+4>>2]|0;if((u|0)!=0?(n=c[o>>2]|0,(n-s|0)<160):0){C=c[p>>2]|0;c[o>>2]=n+4;c[n>>2]=C}B=Zv(z,c[r>>2]|0,h,q)|0;C=j;c[C>>2]=B;c[C+4>>2]=H;Ds(m,s,c[o>>2]|0,h);if((t|0)!=0){j=c[t+12>>2]|0;if((j|0)==(c[t+16>>2]|0))j=Wb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else j=c[j>>2]|0;if((j|0)==-1){c[e>>2]=0;t=0;e=1}else e=0}else{t=0;e=1}do if((y|0)!=0){j=c[y+12>>2]|0;if((j|0)==(c[y+16>>2]|0))j=Wb[c[(c[y>>2]|0)+36>>2]&63](y)|0;else j=c[j>>2]|0;if((j|0)==-1){c[f>>2]=0;k=56;break}if(e){c[b>>2]=t;Tm(d);Tm(m);i=l;return}}else k=56;while(0);if((k|0)==56?!e:0){c[b>>2]=t;Tm(d);Tm(m);i=l;return}c[h>>2]=c[h>>2]|2;c[b>>2]=t;Tm(d);Tm(m);i=l;return}function wp(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];xp(a,0,k,j,f,g,h);i=b;return}function xp(d,e,f,g,h,j,k){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;m=i;i=i+304|0;v=m+160|0;u=m+280|0;n=m+264|0;e=m+284|0;s=m+300|0;t=m;p=m+276|0;q=m+296|0;r=Dv(h)|0;Pp(n,h,v,u);c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;Xm(e,10,0);if((a[e>>0]&1)==0){A=e+1|0;h=e+8|0;x=A}else{A=e+8|0;h=A;x=e+1|0;A=c[A>>2]|0}c[s>>2]=A;c[p>>2]=t;c[q>>2]=0;w=e+4|0;y=c[u>>2]|0;u=c[f>>2]|0;a:while(1){if((u|0)!=0){z=c[u+12>>2]|0;if((z|0)==(c[u+16>>2]|0))z=Wb[c[(c[u>>2]|0)+36>>2]&63](u)|0;else z=c[z>>2]|0;if((z|0)==-1){c[f>>2]=0;u=0;B=1}else B=0}else{u=0;B=1}z=c[g>>2]|0;do if((z|0)!=0){C=c[z+12>>2]|0;if((C|0)==(c[z+16>>2]|0))C=Wb[c[(c[z>>2]|0)+36>>2]&63](z)|0;else C=c[C>>2]|0;if(!((C|0)==-1))if(B)break;else break a;else{c[g>>2]=0;l=17;break}}else l=17;while(0);if((l|0)==17){l=0;if(B){z=0;break}else z=0}B=a[e>>0]|0;C=(B&1)==0;if(C)D=(B&255)>>>1;else D=c[w>>2]|0;if(((c[s>>2]|0)-A|0)==(D|0)){if(C){C=(B&255)>>>1;A=(B&255)>>>1}else{A=c[w>>2]|0;C=A}Xm(e,A<<1,0);if((a[e>>0]&1)==0)A=10;else A=(c[e>>2]&-2)+ -1|0;Xm(e,A,0);if((a[e>>0]&1)==0)A=x;else A=c[h>>2]|0;c[s>>2]=A+C}C=u+12|0;D=c[C>>2]|0;B=u+16|0;if((D|0)==(c[B>>2]|0))D=Wb[c[(c[u>>2]|0)+36>>2]&63](u)|0;else D=c[D>>2]|0;if((Lp(D,r,A,s,q,y,n,t,p,v)|0)!=0)break;z=c[C>>2]|0;if((z|0)==(c[B>>2]|0)){Wb[c[(c[u>>2]|0)+40>>2]&63](u)|0;continue}else{c[C>>2]=z+4;continue}}v=a[n>>0]|0;if((v&1)==0)v=(v&255)>>>1;else v=c[n+4>>2]|0;if((v|0)!=0?(o=c[p>>2]|0,(o-t|0)<160):0){D=c[q>>2]|0;c[p>>2]=o+4;c[o>>2]=D}b[k>>1]=Yv(A,c[s>>2]|0,j,r)|0;Ds(n,t,c[p>>2]|0,j);if((u|0)!=0){k=c[u+12>>2]|0;if((k|0)==(c[u+16>>2]|0))k=Wb[c[(c[u>>2]|0)+36>>2]&63](u)|0;else k=c[k>>2]|0;if((k|0)==-1){c[f>>2]=0;u=0;f=1}else f=0}else{u=0;f=1}do if((z|0)!=0){k=c[z+12>>2]|0;if((k|0)==(c[z+16>>2]|0))k=Wb[c[(c[z>>2]|0)+36>>2]&63](z)|0;else k=c[k>>2]|0;if((k|0)==-1){c[g>>2]=0;l=56;break}if(f){c[d>>2]=u;Tm(e);Tm(n);i=m;return}}else l=56;while(0);if((l|0)==56?!f:0){c[d>>2]=u;Tm(e);Tm(n);i=m;return}c[j>>2]=c[j>>2]|2;c[d>>2]=u;Tm(e);Tm(n);i=m;return}function yp(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];zp(a,0,k,j,f,g,h);i=b;return}function zp(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;l=i;i=i+304|0;u=l+160|0;t=l+280|0;m=l+264|0;d=l+284|0;r=l+300|0;s=l;o=l+276|0;p=l+296|0;q=Dv(g)|0;Pp(m,g,u,t);c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;Xm(d,10,0);if((a[d>>0]&1)==0){z=d+1|0;g=d+8|0;w=z}else{z=d+8|0;g=z;w=d+1|0;z=c[z>>2]|0}c[r>>2]=z;c[o>>2]=s;c[p>>2]=0;v=d+4|0;x=c[t>>2]|0;t=c[e>>2]|0;a:while(1){if((t|0)!=0){y=c[t+12>>2]|0;if((y|0)==(c[t+16>>2]|0))y=Wb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else y=c[y>>2]|0;if((y|0)==-1){c[e>>2]=0;t=0;A=1}else A=0}else{t=0;A=1}y=c[f>>2]|0;do if((y|0)!=0){B=c[y+12>>2]|0;if((B|0)==(c[y+16>>2]|0))B=Wb[c[(c[y>>2]|0)+36>>2]&63](y)|0;else B=c[B>>2]|0;if(!((B|0)==-1))if(A)break;else break a;else{c[f>>2]=0;k=17;break}}else k=17;while(0);if((k|0)==17){k=0;if(A){y=0;break}else y=0}A=a[d>>0]|0;B=(A&1)==0;if(B)C=(A&255)>>>1;else C=c[v>>2]|0;if(((c[r>>2]|0)-z|0)==(C|0)){if(B){B=(A&255)>>>1;z=(A&255)>>>1}else{z=c[v>>2]|0;B=z}Xm(d,z<<1,0);if((a[d>>0]&1)==0)z=10;else z=(c[d>>2]&-2)+ -1|0;Xm(d,z,0);if((a[d>>0]&1)==0)z=w;else z=c[g>>2]|0;c[r>>2]=z+B}B=t+12|0;C=c[B>>2]|0;A=t+16|0;if((C|0)==(c[A>>2]|0))C=Wb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else C=c[C>>2]|0;if((Lp(C,q,z,r,p,x,m,s,o,u)|0)!=0)break;y=c[B>>2]|0;if((y|0)==(c[A>>2]|0)){Wb[c[(c[t>>2]|0)+40>>2]&63](t)|0;continue}else{c[B>>2]=y+4;continue}}u=a[m>>0]|0;if((u&1)==0)u=(u&255)>>>1;else u=c[m+4>>2]|0;if((u|0)!=0?(n=c[o>>2]|0,(n-s|0)<160):0){C=c[p>>2]|0;c[o>>2]=n+4;c[n>>2]=C}c[j>>2]=Xv(z,c[r>>2]|0,h,q)|0;Ds(m,s,c[o>>2]|0,h);if((t|0)!=0){j=c[t+12>>2]|0;if((j|0)==(c[t+16>>2]|0))j=Wb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else j=c[j>>2]|0;if((j|0)==-1){c[e>>2]=0;t=0;e=1}else e=0}else{t=0;e=1}do if((y|0)!=0){j=c[y+12>>2]|0;if((j|0)==(c[y+16>>2]|0))j=Wb[c[(c[y>>2]|0)+36>>2]&63](y)|0;else j=c[j>>2]|0;if((j|0)==-1){c[f>>2]=0;k=56;break}if(e){c[b>>2]=t;Tm(d);Tm(m);i=l;return}}else k=56;while(0);if((k|0)==56?!e:0){c[b>>2]=t;Tm(d);Tm(m);i=l;return}c[h>>2]=c[h>>2]|2;c[b>>2]=t;Tm(d);Tm(m);i=l;return}function Ap(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];Bp(a,0,k,j,f,g,h);i=b;return}function Bp(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;l=i;i=i+304|0;u=l+160|0;t=l+280|0;m=l+264|0;d=l+284|0;r=l+300|0;s=l;o=l+276|0;p=l+296|0;q=Dv(g)|0;Pp(m,g,u,t);c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;Xm(d,10,0);if((a[d>>0]&1)==0){z=d+1|0;g=d+8|0;w=z}else{z=d+8|0;g=z;w=d+1|0;z=c[z>>2]|0}c[r>>2]=z;c[o>>2]=s;c[p>>2]=0;v=d+4|0;x=c[t>>2]|0;t=c[e>>2]|0;a:while(1){if((t|0)!=0){y=c[t+12>>2]|0;if((y|0)==(c[t+16>>2]|0))y=Wb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else y=c[y>>2]|0;if((y|0)==-1){c[e>>2]=0;t=0;A=1}else A=0}else{t=0;A=1}y=c[f>>2]|0;do if((y|0)!=0){B=c[y+12>>2]|0;if((B|0)==(c[y+16>>2]|0))B=Wb[c[(c[y>>2]|0)+36>>2]&63](y)|0;else B=c[B>>2]|0;if(!((B|0)==-1))if(A)break;else break a;else{c[f>>2]=0;k=17;break}}else k=17;while(0);if((k|0)==17){k=0;if(A){y=0;break}else y=0}A=a[d>>0]|0;B=(A&1)==0;if(B)C=(A&255)>>>1;else C=c[v>>2]|0;if(((c[r>>2]|0)-z|0)==(C|0)){if(B){B=(A&255)>>>1;z=(A&255)>>>1}else{z=c[v>>2]|0;B=z}Xm(d,z<<1,0);if((a[d>>0]&1)==0)z=10;else z=(c[d>>2]&-2)+ -1|0;Xm(d,z,0);if((a[d>>0]&1)==0)z=w;else z=c[g>>2]|0;c[r>>2]=z+B}B=t+12|0;C=c[B>>2]|0;A=t+16|0;if((C|0)==(c[A>>2]|0))C=Wb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else C=c[C>>2]|0;if((Lp(C,q,z,r,p,x,m,s,o,u)|0)!=0)break;y=c[B>>2]|0;if((y|0)==(c[A>>2]|0)){Wb[c[(c[t>>2]|0)+40>>2]&63](t)|0;continue}else{c[B>>2]=y+4;continue}}u=a[m>>0]|0;if((u&1)==0)u=(u&255)>>>1;else u=c[m+4>>2]|0;if((u|0)!=0?(n=c[o>>2]|0,(n-s|0)<160):0){C=c[p>>2]|0;c[o>>2]=n+4;c[n>>2]=C}c[j>>2]=Wv(z,c[r>>2]|0,h,q)|0;Ds(m,s,c[o>>2]|0,h);if((t|0)!=0){j=c[t+12>>2]|0;if((j|0)==(c[t+16>>2]|0))j=Wb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else j=c[j>>2]|0;if((j|0)==-1){c[e>>2]=0;t=0;e=1}else e=0}else{t=0;e=1}do if((y|0)!=0){j=c[y+12>>2]|0;if((j|0)==(c[y+16>>2]|0))j=Wb[c[(c[y>>2]|0)+36>>2]&63](y)|0;else j=c[j>>2]|0;if((j|0)==-1){c[f>>2]=0;k=56;break}if(e){c[b>>2]=t;Tm(d);Tm(m);i=l;return}}else k=56;while(0);if((k|0)==56?!e:0){c[b>>2]=t;Tm(d);Tm(m);i=l;return}c[h>>2]=c[h>>2]|2;c[b>>2]=t;Tm(d);Tm(m);i=l;return}function Cp(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];Dp(a,0,k,j,f,g,h);i=b;return}function Dp(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;l=i;i=i+304|0;u=l+160|0;t=l+280|0;m=l+264|0;d=l+284|0;r=l+300|0;s=l;o=l+276|0;p=l+296|0;q=Dv(g)|0;Pp(m,g,u,t);c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;Xm(d,10,0);if((a[d>>0]&1)==0){z=d+1|0;g=d+8|0;w=z}else{z=d+8|0;g=z;w=d+1|0;z=c[z>>2]|0}c[r>>2]=z;c[o>>2]=s;c[p>>2]=0;v=d+4|0;x=c[t>>2]|0;t=c[e>>2]|0;a:while(1){if((t|0)!=0){y=c[t+12>>2]|0;if((y|0)==(c[t+16>>2]|0))y=Wb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else y=c[y>>2]|0;if((y|0)==-1){c[e>>2]=0;t=0;A=1}else A=0}else{t=0;A=1}y=c[f>>2]|0;do if((y|0)!=0){B=c[y+12>>2]|0;if((B|0)==(c[y+16>>2]|0))B=Wb[c[(c[y>>2]|0)+36>>2]&63](y)|0;else B=c[B>>2]|0;if(!((B|0)==-1))if(A)break;else break a;else{c[f>>2]=0;k=17;break}}else k=17;while(0);if((k|0)==17){k=0;if(A){y=0;break}else y=0}A=a[d>>0]|0;B=(A&1)==0;if(B)C=(A&255)>>>1;else C=c[v>>2]|0;if(((c[r>>2]|0)-z|0)==(C|0)){if(B){B=(A&255)>>>1;z=(A&255)>>>1}else{z=c[v>>2]|0;B=z}Xm(d,z<<1,0);if((a[d>>0]&1)==0)z=10;else z=(c[d>>2]&-2)+ -1|0;Xm(d,z,0);if((a[d>>0]&1)==0)z=w;else z=c[g>>2]|0;c[r>>2]=z+B}B=t+12|0;C=c[B>>2]|0;A=t+16|0;if((C|0)==(c[A>>2]|0))C=Wb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else C=c[C>>2]|0;if((Lp(C,q,z,r,p,x,m,s,o,u)|0)!=0)break;y=c[B>>2]|0;if((y|0)==(c[A>>2]|0)){Wb[c[(c[t>>2]|0)+40>>2]&63](t)|0;continue}else{c[B>>2]=y+4;continue}}u=a[m>>0]|0;if((u&1)==0)u=(u&255)>>>1;else u=c[m+4>>2]|0;if((u|0)!=0?(n=c[o>>2]|0,(n-s|0)<160):0){C=c[p>>2]|0;c[o>>2]=n+4;c[n>>2]=C}B=Vv(z,c[r>>2]|0,h,q)|0;C=j;c[C>>2]=B;c[C+4>>2]=H;Ds(m,s,c[o>>2]|0,h);if((t|0)!=0){j=c[t+12>>2]|0;if((j|0)==(c[t+16>>2]|0))j=Wb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else j=c[j>>2]|0;if((j|0)==-1){c[e>>2]=0;t=0;e=1}else e=0}else{t=0;e=1}do if((y|0)!=0){j=c[y+12>>2]|0;if((j|0)==(c[y+16>>2]|0))j=Wb[c[(c[y>>2]|0)+36>>2]&63](y)|0;else j=c[j>>2]|0;if((j|0)==-1){c[f>>2]=0;k=56;break}if(e){c[b>>2]=t;Tm(d);Tm(m);i=l;return}}else k=56;while(0);if((k|0)==56?!e:0){c[b>>2]=t;Tm(d);Tm(m);i=l;return}c[h>>2]=c[h>>2]|2;c[b>>2]=t;Tm(d);Tm(m);i=l;return}function Ep(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];Fp(a,0,k,j,f,g,h);i=b;return}function Fp(b,d,e,f,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;n=i;i=i+352|0;v=n+208|0;z=n+184|0;w=n+4|0;d=n+8|0;m=n+196|0;q=n;r=n+24|0;t=n+192|0;p=n+188|0;s=n+337|0;u=n+336|0;Qp(d,h,v,z,w);c[m+0>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;Xm(m,10,0);if((a[m>>0]&1)==0){C=m+1|0;h=m+8|0;y=C}else{C=m+8|0;h=C;y=m+1|0;C=c[C>>2]|0}c[q>>2]=C;c[t>>2]=r;c[p>>2]=0;a[s>>0]=1;a[u>>0]=69;x=m+4|0;z=c[z>>2]|0;A=c[w>>2]|0;w=c[e>>2]|0;a:while(1){if((w|0)!=0){B=c[w+12>>2]|0;if((B|0)==(c[w+16>>2]|0))B=Wb[c[(c[w>>2]|0)+36>>2]&63](w)|0;else B=c[B>>2]|0;if((B|0)==-1){c[e>>2]=0;w=0;D=1}else D=0}else{w=0;D=1}B=c[f>>2]|0;do if((B|0)!=0){E=c[B+12>>2]|0;if((E|0)==(c[B+16>>2]|0))E=Wb[c[(c[B>>2]|0)+36>>2]&63](B)|0;else E=c[E>>2]|0;if(!((E|0)==-1))if(D)break;else break a;else{c[f>>2]=0;l=17;break}}else l=17;while(0);if((l|0)==17){l=0;if(D){B=0;break}else B=0}D=a[m>>0]|0;F=(D&1)==0;if(F)E=(D&255)>>>1;else E=c[x>>2]|0;if(((c[q>>2]|0)-C|0)==(E|0)){if(F){E=(D&255)>>>1;C=(D&255)>>>1}else{C=c[x>>2]|0;E=C}Xm(m,C<<1,0);if((a[m>>0]&1)==0)C=10;else C=(c[m>>2]&-2)+ -1|0;Xm(m,C,0);if((a[m>>0]&1)==0)C=y;else C=c[h>>2]|0;c[q>>2]=C+E}D=w+12|0;F=c[D>>2]|0;E=w+16|0;if((F|0)==(c[E>>2]|0))F=Wb[c[(c[w>>2]|0)+36>>2]&63](w)|0;else F=c[F>>2]|0;if((Rp(F,s,u,C,q,z,A,d,r,t,p,v)|0)!=0)break;B=c[D>>2]|0;if((B|0)==(c[E>>2]|0)){Wb[c[(c[w>>2]|0)+40>>2]&63](w)|0;continue}else{c[D>>2]=B+4;continue}}u=a[d>>0]|0;if((u&1)==0)u=(u&255)>>>1;else u=c[d+4>>2]|0;if(((u|0)!=0?(a[s>>0]|0)!=0:0)?(o=c[t>>2]|0,(o-r|0)<160):0){F=c[p>>2]|0;c[t>>2]=o+4;c[o>>2]=F}g[k>>2]=+Uv(C,c[q>>2]|0,j);Ds(d,r,c[t>>2]|0,j);if((w|0)!=0){k=c[w+12>>2]|0;if((k|0)==(c[w+16>>2]|0))k=Wb[c[(c[w>>2]|0)+36>>2]&63](w)|0;else k=c[k>>2]|0;if((k|0)==-1){c[e>>2]=0;w=0;e=1}else e=0}else{w=0;e=1}do if((B|0)!=0){k=c[B+12>>2]|0;if((k|0)==(c[B+16>>2]|0))k=Wb[c[(c[B>>2]|0)+36>>2]&63](B)|0;else k=c[k>>2]|0;if((k|0)==-1){c[f>>2]=0;l=57;break}if(e){c[b>>2]=w;Tm(m);Tm(d);i=n;return}}else l=57;while(0);if((l|0)==57?!e:0){c[b>>2]=w;Tm(m);Tm(d);i=n;return}c[j>>2]=c[j>>2]|2;c[b>>2]=w;Tm(m);Tm(d);i=n;return}function Gp(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];Hp(a,0,k,j,f,g,h);i=b;return}function Hp(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;n=i;i=i+352|0;v=n+208|0;z=n+184|0;w=n+4|0;d=n+8|0;m=n+196|0;q=n;r=n+24|0;t=n+192|0;p=n+188|0;s=n+337|0;u=n+336|0;Qp(d,g,v,z,w);c[m+0>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;Xm(m,10,0);if((a[m>>0]&1)==0){C=m+1|0;g=m+8|0;y=C}else{C=m+8|0;g=C;y=m+1|0;C=c[C>>2]|0}c[q>>2]=C;c[t>>2]=r;c[p>>2]=0;a[s>>0]=1;a[u>>0]=69;x=m+4|0;z=c[z>>2]|0;A=c[w>>2]|0;w=c[e>>2]|0;a:while(1){if((w|0)!=0){B=c[w+12>>2]|0;if((B|0)==(c[w+16>>2]|0))B=Wb[c[(c[w>>2]|0)+36>>2]&63](w)|0;else B=c[B>>2]|0;if((B|0)==-1){c[e>>2]=0;w=0;D=1}else D=0}else{w=0;D=1}B=c[f>>2]|0;do if((B|0)!=0){E=c[B+12>>2]|0;if((E|0)==(c[B+16>>2]|0))E=Wb[c[(c[B>>2]|0)+36>>2]&63](B)|0;else E=c[E>>2]|0;if(!((E|0)==-1))if(D)break;else break a;else{c[f>>2]=0;l=17;break}}else l=17;while(0);if((l|0)==17){l=0;if(D){B=0;break}else B=0}D=a[m>>0]|0;F=(D&1)==0;if(F)E=(D&255)>>>1;else E=c[x>>2]|0;if(((c[q>>2]|0)-C|0)==(E|0)){if(F){E=(D&255)>>>1;C=(D&255)>>>1}else{C=c[x>>2]|0;E=C}Xm(m,C<<1,0);if((a[m>>0]&1)==0)C=10;else C=(c[m>>2]&-2)+ -1|0;Xm(m,C,0);if((a[m>>0]&1)==0)C=y;else C=c[g>>2]|0;c[q>>2]=C+E}D=w+12|0;F=c[D>>2]|0;E=w+16|0;if((F|0)==(c[E>>2]|0))F=Wb[c[(c[w>>2]|0)+36>>2]&63](w)|0;else F=c[F>>2]|0;if((Rp(F,s,u,C,q,z,A,d,r,t,p,v)|0)!=0)break;B=c[D>>2]|0;if((B|0)==(c[E>>2]|0)){Wb[c[(c[w>>2]|0)+40>>2]&63](w)|0;continue}else{c[D>>2]=B+4;continue}}u=a[d>>0]|0;if((u&1)==0)u=(u&255)>>>1;else u=c[d+4>>2]|0;if(((u|0)!=0?(a[s>>0]|0)!=0:0)?(o=c[t>>2]|0,(o-r|0)<160):0){F=c[p>>2]|0;c[t>>2]=o+4;c[o>>2]=F}h[k>>3]=+Tv(C,c[q>>2]|0,j);Ds(d,r,c[t>>2]|0,j);if((w|0)!=0){k=c[w+12>>2]|0;if((k|0)==(c[w+16>>2]|0))k=Wb[c[(c[w>>2]|0)+36>>2]&63](w)|0;else k=c[k>>2]|0;if((k|0)==-1){c[e>>2]=0;w=0;e=1}else e=0}else{w=0;e=1}do if((B|0)!=0){k=c[B+12>>2]|0;if((k|0)==(c[B+16>>2]|0))k=Wb[c[(c[B>>2]|0)+36>>2]&63](B)|0;else k=c[k>>2]|0;if((k|0)==-1){c[f>>2]=0;l=57;break}if(e){c[b>>2]=w;Tm(m);Tm(d);i=n;return}}else l=57;while(0);if((l|0)==57?!e:0){c[b>>2]=w;Tm(m);Tm(d);i=n;return}c[j>>2]=c[j>>2]|2;c[b>>2]=w;Tm(m);Tm(d);i=n;return}function Ip(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b+8|0;m=b+4|0;l=b;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];c[j+0>>2]=c[l+0>>2];Jp(a,0,k,j,f,g,h);i=b;return}function Jp(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;n=i;i=i+352|0;v=n+208|0;z=n+184|0;w=n+4|0;d=n+8|0;m=n+196|0;q=n;r=n+24|0;t=n+192|0;p=n+188|0;s=n+337|0;u=n+336|0;Qp(d,g,v,z,w);c[m+0>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;Xm(m,10,0);if((a[m>>0]&1)==0){C=m+1|0;g=m+8|0;y=C}else{C=m+8|0;g=C;y=m+1|0;C=c[C>>2]|0}c[q>>2]=C;c[t>>2]=r;c[p>>2]=0;a[s>>0]=1;a[u>>0]=69;x=m+4|0;z=c[z>>2]|0;A=c[w>>2]|0;w=c[e>>2]|0;a:while(1){if((w|0)!=0){B=c[w+12>>2]|0;if((B|0)==(c[w+16>>2]|0))B=Wb[c[(c[w>>2]|0)+36>>2]&63](w)|0;else B=c[B>>2]|0;if((B|0)==-1){c[e>>2]=0;w=0;D=1}else D=0}else{w=0;D=1}B=c[f>>2]|0;do if((B|0)!=0){E=c[B+12>>2]|0;if((E|0)==(c[B+16>>2]|0))E=Wb[c[(c[B>>2]|0)+36>>2]&63](B)|0;else E=c[E>>2]|0;if(!((E|0)==-1))if(D)break;else break a;else{c[f>>2]=0;l=17;break}}else l=17;while(0);if((l|0)==17){l=0;if(D){B=0;break}else B=0}D=a[m>>0]|0;F=(D&1)==0;if(F)E=(D&255)>>>1;else E=c[x>>2]|0;if(((c[q>>2]|0)-C|0)==(E|0)){if(F){E=(D&255)>>>1;C=(D&255)>>>1}else{C=c[x>>2]|0;E=C}Xm(m,C<<1,0);if((a[m>>0]&1)==0)C=10;else C=(c[m>>2]&-2)+ -1|0;Xm(m,C,0);if((a[m>>0]&1)==0)C=y;else C=c[g>>2]|0;c[q>>2]=C+E}D=w+12|0;F=c[D>>2]|0;E=w+16|0;if((F|0)==(c[E>>2]|0))F=Wb[c[(c[w>>2]|0)+36>>2]&63](w)|0;else F=c[F>>2]|0;if((Rp(F,s,u,C,q,z,A,d,r,t,p,v)|0)!=0)break;B=c[D>>2]|0;if((B|0)==(c[E>>2]|0)){Wb[c[(c[w>>2]|0)+40>>2]&63](w)|0;continue}else{c[D>>2]=B+4;continue}}u=a[d>>0]|0;if((u&1)==0)u=(u&255)>>>1;else u=c[d+4>>2]|0;if(((u|0)!=0?(a[s>>0]|0)!=0:0)?(o=c[t>>2]|0,(o-r|0)<160):0){F=c[p>>2]|0;c[t>>2]=o+4;c[o>>2]=F}h[k>>3]=+Sv(C,c[q>>2]|0,j);Ds(d,r,c[t>>2]|0,j);if((w|0)!=0){k=c[w+12>>2]|0;if((k|0)==(c[w+16>>2]|0))k=Wb[c[(c[w>>2]|0)+36>>2]&63](w)|0;else k=c[k>>2]|0;if((k|0)==-1){c[e>>2]=0;w=0;e=1}else e=0}else{w=0;e=1}do if((B|0)!=0){k=c[B+12>>2]|0;if((k|0)==(c[B+16>>2]|0))k=Wb[c[(c[B>>2]|0)+36>>2]&63](B)|0;else k=c[k>>2]|0;if((k|0)==-1){c[f>>2]=0;l=57;break}if(e){c[b>>2]=w;Tm(m);Tm(d);i=n;return}}else l=57;while(0);if((l|0)==57?!e:0){c[b>>2]=w;Tm(m);Tm(d);i=n;return}c[j>>2]=c[j>>2]|2;c[b>>2]=w;Tm(m);Tm(d);i=n;return}function Kp(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;m=i;i=i+320|0;n=m;o=m+200|0;l=m+188|0;z=m+8|0;d=m+176|0;p=m+4|0;q=m+16|0;s=m+304|0;r=m+308|0;c[l+0>>2]=0;c[l+4>>2]=0;c[l+8>>2]=0;sn(z,g);y=Zt(z,135160)|0;ac[c[(c[y>>2]|0)+48>>2]&7](y,133680,133706|0,o)|0;wm(c[z>>2]|0)|0;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;Xm(d,10,0);if((a[d>>0]&1)==0){w=d+1|0;u=d+8|0;g=w}else{w=d+8|0;u=w;g=d+1|0;w=c[w>>2]|0}c[p>>2]=w;c[s>>2]=q;c[r>>2]=0;t=d+4|0;v=c[e>>2]|0;a:while(1){if((v|0)!=0){x=c[v+12>>2]|0;if((x|0)==(c[v+16>>2]|0))x=Wb[c[(c[v>>2]|0)+36>>2]&63](v)|0;else x=c[x>>2]|0;if((x|0)==-1){c[e>>2]=0;v=0;x=1}else x=0}else{v=0;x=1}y=c[f>>2]|0;do if((y|0)!=0){z=c[y+12>>2]|0;if((z|0)==(c[y+16>>2]|0))y=Wb[c[(c[y>>2]|0)+36>>2]&63](y)|0;else y=c[z>>2]|0;if(!((y|0)==-1))if(x)break;else break a;else{c[f>>2]=0;k=17;break}}else k=17;while(0);if((k|0)==17?(k=0,x):0)break;x=a[d>>0]|0;y=(x&1)==0;if(y)z=(x&255)>>>1;else z=c[t>>2]|0;if(((c[p>>2]|0)-w|0)==(z|0)){if(y){y=(x&255)>>>1;w=(x&255)>>>1}else{w=c[t>>2]|0;y=w}Xm(d,w<<1,0);if((a[d>>0]&1)==0)w=10;else w=(c[d>>2]&-2)+ -1|0;Xm(d,w,0);if((a[d>>0]&1)==0)w=g;else w=c[u>>2]|0;c[p>>2]=w+y}y=v+12|0;z=c[y>>2]|0;x=v+16|0;if((z|0)==(c[x>>2]|0))z=Wb[c[(c[v>>2]|0)+36>>2]&63](v)|0;else z=c[z>>2]|0;if((Lp(z,16,w,p,r,0,l,q,s,o)|0)!=0)break;z=c[y>>2]|0;if((z|0)==(c[x>>2]|0)){Wb[c[(c[v>>2]|0)+40>>2]&63](v)|0;continue}else{c[y>>2]=z+4;continue}}a[w+3>>0]=0;z=np()|0;c[n>>2]=j;if((mp(w,z,133720,n)|0)!=1)c[h>>2]=4;j=c[e>>2]|0;if((j|0)!=0){n=c[j+12>>2]|0;if((n|0)==(c[j+16>>2]|0))n=Wb[c[(c[j>>2]|0)+36>>2]&63](j)|0;else n=c[n>>2]|0;if((n|0)==-1){c[e>>2]=0;e=0;j=1}else{e=j;j=0}}else{e=0;j=1}n=c[f>>2]|0;do if((n|0)!=0){o=c[n+12>>2]|0;if((o|0)==(c[n+16>>2]|0))n=Wb[c[(c[n>>2]|0)+36>>2]&63](n)|0;else n=c[o>>2]|0;if((n|0)==-1){c[f>>2]=0;k=52;break}if(j){c[b>>2]=e;Tm(d);Tm(l);i=m;return}}else k=52;while(0);if((k|0)==52?!j:0){c[b>>2]=e;Tm(d);Tm(l);i=m;return}c[h>>2]=c[h>>2]|2;c[b>>2]=e;Tm(d);Tm(l);i=m;return}function Lp(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0;n=i;p=c[f>>2]|0;o=(p|0)==(e|0);do if(o){q=(c[m+96>>2]|0)==(b|0);if(!q?(c[m+100>>2]|0)!=(b|0):0)break;c[f>>2]=e+1;a[e>>0]=q?43:45;c[g>>2]=0;q=0;i=n;return q|0}while(0);q=a[j>>0]|0;if((q&1)==0)j=(q&255)>>>1;else j=c[j+4>>2]|0;if((j|0)!=0&(b|0)==(h|0)){o=c[l>>2]|0;if((o-k|0)>=160){q=0;i=n;return q|0}q=c[g>>2]|0;c[l>>2]=o+4;c[o>>2]=q;c[g>>2]=0;q=0;i=n;return q|0}l=m+104|0;k=m;while(1){if((c[k>>2]|0)==(b|0))break;k=k+4|0;if((k|0)==(l|0)){k=l;break}}b=k-m|0;m=b>>2;if((b|0)>92){q=-1;i=n;return q|0}if((d|0)==16){if((b|0)>=88){if(o){q=-1;i=n;return q|0}if((p-e|0)>=3){q=-1;i=n;return q|0}if((a[p+ -1>>0]|0)!=48){q=-1;i=n;return q|0}c[g>>2]=0;q=a[133680+m>>0]|0;c[f>>2]=p+1;a[p>>0]=q;q=0;i=n;return q|0}}else if((d|0)==10|(d|0)==8?(m|0)>=(d|0):0){q=-1;i=n;return q|0}q=a[133680+m>>0]|0;c[f>>2]=p+1;a[p>>0]=q;c[g>>2]=(c[g>>2]|0)+1;q=0;i=n;return q|0}function Mp(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;i=i+16|0;h=g;sn(h,d);d=Zt(h,135168)|0;ac[c[(c[d>>2]|0)+32>>2]&7](d,133680,133706|0,e)|0;d=Zt(h,135312)|0;a[f>>0]=Wb[c[(c[d>>2]|0)+16>>2]&63](d)|0;Ub[c[(c[d>>2]|0)+20>>2]&63](b,d);wm(c[h>>2]|0)|0;i=g;return}function Np(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;h=i;i=i+16|0;j=h;sn(j,d);d=Zt(j,135168)|0;ac[c[(c[d>>2]|0)+32>>2]&7](d,133680,133712|0,e)|0;d=Zt(j,135312)|0;a[f>>0]=Wb[c[(c[d>>2]|0)+12>>2]&63](d)|0;a[g>>0]=Wb[c[(c[d>>2]|0)+16>>2]&63](d)|0;Ub[c[(c[d>>2]|0)+20>>2]&63](b,d);wm(c[j>>2]|0)|0;i=h;return}function Op(b,e,f,g,h,j,k,l,m,n,o,p){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0;q=i;if(b<<24>>24==j<<24>>24){if((a[e>>0]|0)==0){k=-1;i=q;return k|0}a[e>>0]=0;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=46;h=a[l>>0]|0;if((h&1)==0)h=(h&255)>>>1;else h=c[l+4>>2]|0;if((h|0)==0){k=0;i=q;return k|0}h=c[n>>2]|0;if((h-m|0)>=160){k=0;i=q;return k|0}k=c[o>>2]|0;c[n>>2]=h+4;c[h>>2]=k;k=0;i=q;return k|0}if(b<<24>>24==k<<24>>24){j=a[l>>0]|0;if((j&1)==0)j=(j&255)>>>1;else j=c[l+4>>2]|0;if((j|0)!=0){if((a[e>>0]|0)==0){k=-1;i=q;return k|0}h=c[n>>2]|0;if((h-m|0)>=160){k=0;i=q;return k|0}k=c[o>>2]|0;c[n>>2]=h+4;c[h>>2]=k;c[o>>2]=0;k=0;i=q;return k|0}}j=p+32|0;k=p;do{if((a[k>>0]|0)==b<<24>>24){j=k;break}k=k+1|0}while((k|0)!=(j|0));b=j-p|0;if((b|0)>31){k=-1;i=q;return k|0}p=a[133680+b>>0]|0;if((b|0)==23|(b|0)==22){a[f>>0]=80;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=p;k=0;i=q;return k|0}else if((b|0)==24|(b|0)==25){o=c[h>>2]|0;if((o|0)!=(g|0)?(d[o+ -1>>0]&95|0)!=(d[f>>0]&127|0):0){k=-1;i=q;return k|0}c[h>>2]=o+1;a[o>>0]=p;k=0;i=q;return k|0}else{g=p&95;if((g|0)==(a[f>>0]|0)?(a[f>>0]=g|128,(a[e>>0]|0)!=0):0){a[e>>0]=0;f=a[l>>0]|0;if((f&1)==0)l=(f&255)>>>1;else l=c[l+4>>2]|0;if((l|0)!=0?(r=c[n>>2]|0,(r-m|0)<160):0){k=c[o>>2]|0;c[n>>2]=r+4;c[r>>2]=k}}k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=p;if((b|0)>21){k=0;i=q;return k|0}c[o>>2]=(c[o>>2]|0)+1;k=0;i=q;return k|0}return 0}function Pp(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;sn(g,b);b=Zt(g,135160)|0;ac[c[(c[b>>2]|0)+48>>2]&7](b,133680,133706|0,d)|0;b=Zt(g,135320)|0;c[e>>2]=Wb[c[(c[b>>2]|0)+16>>2]&63](b)|0;Ub[c[(c[b>>2]|0)+20>>2]&63](a,b);wm(c[g>>2]|0)|0;i=f;return}function Qp(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;i=i+16|0;h=g;sn(h,b);b=Zt(h,135160)|0;ac[c[(c[b>>2]|0)+48>>2]&7](b,133680,133712|0,d)|0;b=Zt(h,135320)|0;c[e>>2]=Wb[c[(c[b>>2]|0)+12>>2]&63](b)|0;c[f>>2]=Wb[c[(c[b>>2]|0)+16>>2]&63](b)|0;Ub[c[(c[b>>2]|0)+20>>2]&63](a,b);wm(c[h>>2]|0)|0;i=g;return}function Rp(b,e,f,g,h,j,k,l,m,n,o,p){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0;q=i;if((b|0)==(j|0)){if((a[e>>0]|0)==0){k=-1;i=q;return k|0}a[e>>0]=0;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=46;h=a[l>>0]|0;if((h&1)==0)h=(h&255)>>>1;else h=c[l+4>>2]|0;if((h|0)==0){k=0;i=q;return k|0}h=c[n>>2]|0;if((h-m|0)>=160){k=0;i=q;return k|0}k=c[o>>2]|0;c[n>>2]=h+4;c[h>>2]=k;k=0;i=q;return k|0}if((b|0)==(k|0)){j=a[l>>0]|0;if((j&1)==0)j=(j&255)>>>1;else j=c[l+4>>2]|0;if((j|0)!=0){if((a[e>>0]|0)==0){k=-1;i=q;return k|0}h=c[n>>2]|0;if((h-m|0)>=160){k=0;i=q;return k|0}k=c[o>>2]|0;c[n>>2]=h+4;c[h>>2]=k;c[o>>2]=0;k=0;i=q;return k|0}}j=p+128|0;k=p;do{if((c[k>>2]|0)==(b|0)){j=k;break}k=k+4|0}while((k|0)!=(j|0));b=j-p|0;j=b>>2;if((b|0)>124){k=-1;i=q;return k|0}p=a[133680+j>>0]|0;if((j|0)==24|(j|0)==25){o=c[h>>2]|0;if((o|0)!=(g|0)?(d[o+ -1>>0]&95|0)!=(d[f>>0]&127|0):0){k=-1;i=q;return k|0}c[h>>2]=o+1;a[o>>0]=p;k=0;i=q;return k|0}else if(!((j|0)==23|(j|0)==22)){g=p&95;if((g|0)==(a[f>>0]|0)?(a[f>>0]=g|128,(a[e>>0]|0)!=0):0){a[e>>0]=0;f=a[l>>0]|0;if((f&1)==0)l=(f&255)>>>1;else l=c[l+4>>2]|0;if((l|0)!=0?(r=c[n>>2]|0,(r-m|0)<160):0){k=c[o>>2]|0;c[n>>2]=r+4;c[r>>2]=k}}}else a[f>>0]=80;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=p;if((b|0)>84){k=0;i=q;return k|0}c[o>>2]=(c[o>>2]|0)+1;k=0;i=q;return k|0}function Sp(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function Tp(a){a=a|0;return}function Up(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0;k=i;i=i+32|0;m=k+20|0;n=k+16|0;l=k+12|0;j=k;if((c[f+4>>2]&1|0)==0){l=c[(c[d>>2]|0)+24>>2]|0;c[n>>2]=c[e>>2];o=h&1;c[m+0>>2]=c[n+0>>2];cc[l&15](b,d,m,f,g,o);i=k;return}sn(l,f);g=Zt(l,135312)|0;wm(c[l>>2]|0)|0;l=c[g>>2]|0;if(h)Ub[c[l+24>>2]&63](j,g);else Ub[c[l+28>>2]&63](j,g);f=a[j>>0]|0;if((f&1)==0){h=j+1|0;l=j+8|0;m=h}else{m=j+8|0;l=m;m=c[m>>2]|0;h=j+1|0}g=j+4|0;while(1){if((f&1)==0){f=(f&255)>>>1;d=h}else{f=c[g>>2]|0;d=c[l>>2]|0}if((m|0)==(d+f|0))break;d=a[m>>0]|0;o=c[e>>2]|0;do if((o|0)!=0){n=o+24|0;f=c[n>>2]|0;if((f|0)!=(c[o+28>>2]|0)){c[n>>2]=f+1;a[f>>0]=d;break}if((dc[c[(c[o>>2]|0)+52>>2]&15](o,d&255)|0)==-1)c[e>>2]=0}while(0);f=a[j>>0]|0;m=m+1|0}c[b>>2]=c[e>>2];Tm(j);i=k;return}function Vp(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;i=i+64|0;k=d;p=d+20|0;q=d+28|0;j=d+40|0;n=d+12|0;m=d+4|0;o=d+8|0;l=d+16|0;a[p+0>>0]=a[133960]|0;a[p+1>>0]=a[133961]|0;a[p+2>>0]=a[133962]|0;a[p+3>>0]=a[133963]|0;a[p+4>>0]=a[133964]|0;a[p+5>>0]=a[133965]|0;Wp(p+1|0,133864,1,c[f+4>>2]|0);r=np()|0;c[k>>2]=h;h=q+(Xp(q,12,r,p,k)|0)|0;p=Yp(q,h,f)|0;sn(o,f);Zp(q,p,h,j,n,m,o);wm(c[o>>2]|0)|0;c[l>>2]=c[e>>2];e=c[n>>2]|0;h=c[m>>2]|0;c[k+0>>2]=c[l+0>>2];_p(b,k,j,e,h,f,g);i=d;return}function Wp(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;if((e&2048|0)!=0){a[b>>0]=43;b=b+1|0}if((e&512|0)!=0){a[b>>0]=35;b=b+1|0}g=a[c>>0]|0;if(!(g<<24>>24==0))while(1){c=c+1|0;h=b+1|0;a[b>>0]=g;g=a[c>>0]|0;if(g<<24>>24==0){b=h;break}else b=h}c=e&74;if((c|0)==8)if((e&16384|0)==0){a[b>>0]=120;i=f;return}else{a[b>>0]=88;i=f;return}else if((c|0)!=64)if(d){a[b>>0]=100;i=f;return}else{a[b>>0]=117;i=f;return}else{a[b>>0]=111;i=f;return}}function Xp(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;i=i+16|0;h=g;c[h>>2]=f;d=Za(d|0)|0;e=my(a,b,e,h)|0;if((d|0)==0){i=g;return e|0}Za(d|0)|0;i=g;return e|0}function Yp(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;g=i;e=c[e+4>>2]&176;do if((e|0)==16){e=a[b>>0]|0;if(e<<24>>24==43|e<<24>>24==45){b=b+1|0;break}if((d-b|0)>1&e<<24>>24==48?(e=a[b+1>>0]|0,e<<24>>24==88|e<<24>>24==120):0)b=b+2|0;else f=7}else if((e|0)==32)b=d;else f=7;while(0);i=g;return b|0}function Zp(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;l=i;i=i+16|0;k=l;n=Zt(j,135168)|0;o=Zt(j,135312)|0;Ub[c[(c[o>>2]|0)+20>>2]&63](k,o);j=a[k>>0]|0;if((j&1)==0)j=(j&255)>>>1;else j=c[k+4>>2]|0;if((j|0)!=0){c[h>>2]=f;j=a[b>>0]|0;if(j<<24>>24==43|j<<24>>24==45){v=dc[c[(c[n>>2]|0)+28>>2]&15](n,j)|0;j=c[h>>2]|0;c[h>>2]=j+1;a[j>>0]=v;j=b+1|0}else j=b;if(((e-j|0)>1?(a[j>>0]|0)==48:0)?(q=j+1|0,v=a[q>>0]|0,v<<24>>24==88|v<<24>>24==120):0){v=dc[c[(c[n>>2]|0)+28>>2]&15](n,48)|0;u=c[h>>2]|0;c[h>>2]=u+1;a[u>>0]=v;u=dc[c[(c[n>>2]|0)+28>>2]&15](n,a[q>>0]|0)|0;v=c[h>>2]|0;c[h>>2]=v+1;a[v>>0]=u;j=j+2|0}if((j|0)!=(e|0)?(p=e+ -1|0,p>>>0>j>>>0):0){q=j;do{v=a[q>>0]|0;a[q>>0]=a[p>>0]|0;a[p>>0]=v;q=q+1|0;p=p+ -1|0}while(q>>>0<p>>>0)}s=Wb[c[(c[o>>2]|0)+16>>2]&63](o)|0;if(j>>>0<e>>>0){o=k+1|0;r=k+4|0;q=k+8|0;u=0;t=0;p=j;while(1){v=(a[k>>0]&1)==0;if((a[(v?o:c[q>>2]|0)+t>>0]|0)!=0?(u|0)==(a[(v?o:c[q>>2]|0)+t>>0]|0):0){u=c[h>>2]|0;c[h>>2]=u+1;a[u>>0]=s;u=a[k>>0]|0;if((u&1)==0)v=(u&255)>>>1;else v=c[r>>2]|0;u=0;t=(t>>>0<(v+ -1|0)>>>0&1)+t|0}w=dc[c[(c[n>>2]|0)+28>>2]&15](n,a[p>>0]|0)|0;v=c[h>>2]|0;c[h>>2]=v+1;a[v>>0]=w;p=p+1|0;if(!(p>>>0<e>>>0))break;else u=u+1|0}}n=f+(j-b)|0;j=c[h>>2]|0;if((n|0)!=(j|0)?(m=j+ -1|0,m>>>0>n>>>0):0)do{w=a[n>>0]|0;a[n>>0]=a[m>>0]|0;a[m>>0]=w;n=n+1|0;m=m+ -1|0}while(n>>>0<m>>>0)}else{ac[c[(c[n>>2]|0)+32>>2]&7](n,b,e,f)|0;c[h>>2]=f+(e-b)}if((d|0)==(e|0)){w=c[h>>2]|0;c[g>>2]=w;Tm(k);i=l;return}else{w=f+(d-b)|0;c[g>>2]=w;Tm(k);i=l;return}}function _p(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0;l=i;i=i+16|0;m=l;k=c[d>>2]|0;if((k|0)==0){c[b>>2]=0;i=l;return}p=e;n=g-p|0;h=h+12|0;o=c[h>>2]|0;n=(o|0)>(n|0)?o-n|0:0;o=f;p=o-p|0;if((p|0)>0?(Qb[c[(c[k>>2]|0)+48>>2]&31](k,e,p)|0)!=(p|0):0){c[d>>2]=0;c[b>>2]=0;i=l;return}do if((n|0)>0){Rm(m,n,j);if((a[m>>0]&1)==0)e=m+1|0;else e=c[m+8>>2]|0;if((Qb[c[(c[k>>2]|0)+48>>2]&31](k,e,n)|0)==(n|0)){Tm(m);break}c[d>>2]=0;c[b>>2]=0;Tm(m);i=l;return}while(0);m=g-o|0;if((m|0)>0?(Qb[c[(c[k>>2]|0)+48>>2]&31](k,f,m)|0)!=(m|0):0){c[d>>2]=0;c[b>>2]=0;i=l;return}c[h>>2]=0;c[b>>2]=k;i=l;return}function $p(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=i;i=i+96|0;k=b;q=b+8|0;p=b+32|0;j=b+54|0;n=b+16|0;m=b+24|0;o=b+20|0;l=b+28|0;r=q;c[r>>2]=37;c[r+4>>2]=0;Wp(q+1|0,133872,1,c[e+4>>2]|0);r=np()|0;s=k;c[s>>2]=g;c[s+4>>2]=h;h=p+(Xp(p,22,r,q,k)|0)|0;g=Yp(p,h,e)|0;sn(o,e);Zp(p,g,h,j,n,m,o);wm(c[o>>2]|0)|0;c[l>>2]=c[d>>2];h=c[n>>2]|0;g=c[m>>2]|0;c[k+0>>2]=c[l+0>>2];_p(a,k,j,h,g,e,f);i=b;return}function aq(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;i=i+64|0;k=d;p=d+20|0;q=d+28|0;j=d+40|0;n=d+12|0;m=d+4|0;o=d+8|0;l=d+16|0;a[p+0>>0]=a[133960]|0;a[p+1>>0]=a[133961]|0;a[p+2>>0]=a[133962]|0;a[p+3>>0]=a[133963]|0;a[p+4>>0]=a[133964]|0;a[p+5>>0]=a[133965]|0;Wp(p+1|0,133864,0,c[f+4>>2]|0);r=np()|0;c[k>>2]=h;h=q+(Xp(q,12,r,p,k)|0)|0;p=Yp(q,h,f)|0;sn(o,f);Zp(q,p,h,j,n,m,o);wm(c[o>>2]|0)|0;c[l>>2]=c[e>>2];e=c[n>>2]|0;h=c[m>>2]|0;c[k+0>>2]=c[l+0>>2];_p(b,k,j,e,h,f,g);i=d;return}function bq(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=i;i=i+112|0;k=b;q=b+8|0;p=b+32|0;j=b+55|0;n=b+16|0;m=b+24|0;o=b+20|0;l=b+28|0;r=q;c[r>>2]=37;c[r+4>>2]=0;Wp(q+1|0,133872,0,c[e+4>>2]|0);r=np()|0;s=k;c[s>>2]=g;c[s+4>>2]=h;h=p+(Xp(p,23,r,q,k)|0)|0;g=Yp(p,h,e)|0;sn(o,e);Zp(p,g,h,j,n,m,o);wm(c[o>>2]|0)|0;c[l>>2]=c[d>>2];h=c[n>>2]|0;g=c[m>>2]|0;c[k+0>>2]=c[l+0>>2];_p(a,k,j,h,g,e,f);i=b;return}function cq(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=+g;var j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;p=i;i=i+144|0;s=p+8|0;z=p;x=p+44|0;y=p+36|0;w=p+74|0;u=p+20|0;b=p+32|0;q=p+28|0;r=p+24|0;t=p+40|0;B=z;c[B>>2]=37;c[B+4>>2]=0;B=dq(z+1|0,133880,c[e+4>>2]|0)|0;c[y>>2]=x;A=np()|0;if(B){c[s>>2]=c[e+8>>2];B=s+4|0;h[k>>3]=g;c[B>>2]=c[k>>2];c[B+4>>2]=c[k+4>>2];A=Xp(x,30,A,z,s)|0}else{h[k>>3]=g;c[s>>2]=c[k>>2];c[s+4>>2]=c[k+4>>2];A=Xp(x,30,A,z,s)|0}if((A|0)>29){B=np()|0;c[s>>2]=c[e+8>>2];A=s+4|0;h[k>>3]=g;c[A>>2]=c[k>>2];c[A+4>>2]=c[k+4>>2];z=eq(y,B,z,s)|0;y=c[y>>2]|0;if((y|0)==0)Mx();else{j=y;l=y;v=z}}else{j=0;l=c[y>>2]|0;v=A}z=l+v|0;y=Yp(l,z,e)|0;if((l|0)!=(x|0)){v=Nx(v<<1)|0;if((v|0)==0)Mx();else{m=v;o=l;n=v}}else{m=0;o=x;n=w}sn(q,e);fq(o,y,z,n,u,b,q);wm(c[q>>2]|0)|0;c[t>>2]=c[d>>2];A=c[u>>2]|0;B=c[b>>2]|0;c[s+0>>2]=c[t+0>>2];_p(r,s,n,A,B,e,f);B=c[r>>2]|0;c[d>>2]=B;c[a>>2]=B;if((m|0)!=0)Ox(m);if((j|0)==0){i=p;return}Ox(j);i=p;return}function dq(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;if((d&2048|0)!=0){a[b>>0]=43;b=b+1|0}if((d&1024|0)!=0){a[b>>0]=35;b=b+1|0}f=d&260;h=d>>>14;d=(f|0)==260;if(d)g=0;else{a[b>>0]=46;a[b+1>>0]=42;b=b+2|0;g=1}j=a[c>>0]|0;if(!(j<<24>>24==0))while(1){c=c+1|0;k=b+1|0;a[b>>0]=j;j=a[c>>0]|0;if(j<<24>>24==0){b=k;break}else b=k}do if((f|0)==4)if((h&1|0)==0){a[b>>0]=102;break}else{a[b>>0]=70;break}else if((f|0)==256)if((h&1|0)==0){a[b>>0]=101;break}else{a[b>>0]=69;break}else{f=(h&1|0)!=0;if(d)if(f){a[b>>0]=65;break}else{a[b>>0]=97;break}else if(f){a[b>>0]=71;break}else{a[b>>0]=103;break}}while(0);i=e;return g|0}function eq(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;c[g>>2]=e;b=Za(b|0)|0;d=Dw(a,d,g)|0;if((b|0)==0){i=f;return d|0}Za(b|0)|0;i=f;return d|0}function fq(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;k=i;i=i+16|0;l=k;m=Zt(j,135168)|0;n=Zt(j,135312)|0;Ub[c[(c[n>>2]|0)+20>>2]&63](l,n);c[h>>2]=f;j=a[b>>0]|0;if(j<<24>>24==43|j<<24>>24==45){y=dc[c[(c[m>>2]|0)+28>>2]&15](m,j)|0;t=c[h>>2]|0;c[h>>2]=t+1;a[t>>0]=y;t=b+1|0}else t=b;j=e;a:do if(((j-t|0)>1?(a[t>>0]|0)==48:0)?(p=t+1|0,y=a[p>>0]|0,y<<24>>24==88|y<<24>>24==120):0){y=dc[c[(c[m>>2]|0)+28>>2]&15](m,48)|0;x=c[h>>2]|0;c[h>>2]=x+1;a[x>>0]=y;t=t+2|0;x=dc[c[(c[m>>2]|0)+28>>2]&15](m,a[p>>0]|0)|0;y=c[h>>2]|0;c[h>>2]=y+1;a[y>>0]=x;if(t>>>0<e>>>0){q=t;while(1){y=a[q>>0]|0;u=q+1|0;if((sw(y<<24>>24,np()|0)|0)==0){p=t;break a}if(u>>>0<e>>>0)q=u;else{p=t;q=u;break}}}else{p=t;q=t}}else s=4;while(0);b:do if((s|0)==4)if(t>>>0<e>>>0){q=t;while(1){y=a[q>>0]|0;s=q+1|0;if((rw(y<<24>>24,np()|0)|0)==0){p=t;break b}if(s>>>0<e>>>0)q=s;else{p=t;q=s;break}}}else{p=t;q=t}while(0);s=a[l>>0]|0;if((s&1)==0)s=(s&255)>>>1;else s=c[l+4>>2]|0;if((s|0)!=0){if((p|0)!=(q|0)?(r=q+ -1|0,r>>>0>p>>>0):0){s=p;do{y=a[s>>0]|0;a[s>>0]=a[r>>0]|0;a[r>>0]=y;s=s+1|0;r=r+ -1|0}while(s>>>0<r>>>0)}v=Wb[c[(c[n>>2]|0)+16>>2]&63](n)|0;if(p>>>0<q>>>0){t=l+1|0;u=l+4|0;s=l+8|0;x=0;w=0;r=p;while(1){y=(a[l>>0]&1)==0;if((a[(y?t:c[s>>2]|0)+w>>0]|0)>0?(x|0)==(a[(y?t:c[s>>2]|0)+w>>0]|0):0){x=c[h>>2]|0;c[h>>2]=x+1;a[x>>0]=v;x=a[l>>0]|0;if((x&1)==0)y=(x&255)>>>1;else y=c[u>>2]|0;x=0;w=(w>>>0<(y+ -1|0)>>>0&1)+w|0}z=dc[c[(c[m>>2]|0)+28>>2]&15](m,a[r>>0]|0)|0;y=c[h>>2]|0;c[h>>2]=y+1;a[y>>0]=z;r=r+1|0;if(!(r>>>0<q>>>0))break;else x=x+1|0}}r=f+(p-b)|0;p=c[h>>2]|0;if((r|0)!=(p|0)?(o=p+ -1|0,o>>>0>r>>>0):0)do{z=a[r>>0]|0;a[r>>0]=a[o>>0]|0;a[o>>0]=z;r=r+1|0;o=o+ -1|0}while(r>>>0<o>>>0)}else{ac[c[(c[m>>2]|0)+32>>2]&7](m,p,q,c[h>>2]|0)|0;c[h>>2]=(c[h>>2]|0)+(q-p)}c:do if(q>>>0<e>>>0){while(1){o=a[q>>0]|0;if(o<<24>>24==46)break;y=dc[c[(c[m>>2]|0)+28>>2]&15](m,o)|0;z=c[h>>2]|0;c[h>>2]=z+1;a[z>>0]=y;q=q+1|0;if(!(q>>>0<e>>>0))break c}y=Wb[c[(c[n>>2]|0)+12>>2]&63](n)|0;z=c[h>>2]|0;c[h>>2]=z+1;a[z>>0]=y;q=q+1|0}while(0);ac[c[(c[m>>2]|0)+32>>2]&7](m,q,e,c[h>>2]|0)|0;m=(c[h>>2]|0)+(j-q)|0;c[h>>2]=m;if((d|0)==(e|0)){z=m;c[g>>2]=z;Tm(l);i=k;return}z=f+(d-b)|0;c[g>>2]=z;Tm(l);i=k;return}function gq(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=+g;var j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;t=i;i=i+144|0;r=t+8|0;A=t;x=t+44|0;y=t+36|0;w=t+74|0;b=t+20|0;p=t+32|0;v=t+28|0;s=t+24|0;q=t+40|0;z=A;c[z>>2]=37;c[z+4>>2]=0;z=dq(A+1|0,133888,c[e+4>>2]|0)|0;c[y>>2]=x;B=np()|0;if(z){c[r>>2]=c[e+8>>2];C=r+4|0;h[k>>3]=g;c[C>>2]=c[k>>2];c[C+4>>2]=c[k+4>>2];B=Xp(x,30,B,A,r)|0}else{h[k>>3]=g;c[r>>2]=c[k>>2];c[r+4>>2]=c[k+4>>2];B=Xp(x,30,B,A,r)|0}if((B|0)>29){B=np()|0;if(z){c[r>>2]=c[e+8>>2];z=r+4|0;h[k>>3]=g;c[z>>2]=c[k>>2];c[z+4>>2]=c[k+4>>2];z=eq(y,B,A,r)|0}else{h[k>>3]=g;c[r>>2]=c[k>>2];c[r+4>>2]=c[k+4>>2];z=eq(y,B,A,r)|0}y=c[y>>2]|0;if((y|0)==0)Mx();else{o=y;n=y;u=z}}else{o=0;n=c[y>>2]|0;u=B}z=n+u|0;y=Yp(n,z,e)|0;if((n|0)!=(x|0)){u=Nx(u<<1)|0;if((u|0)==0)Mx();else{j=u;m=n;l=u}}else{j=0;m=x;l=w}sn(v,e);fq(m,y,z,l,b,p,v);wm(c[v>>2]|0)|0;c[q>>2]=c[d>>2];B=c[b>>2]|0;C=c[p>>2]|0;c[r+0>>2]=c[q+0>>2];_p(s,r,l,B,C,e,f);c[a>>2]=c[s>>2];Ox(j);Ox(o);i=t;return}function hq(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;l=i;i=i+80|0;j=l;n=l+72|0;m=l+52|0;d=l+12|0;q=l+8|0;k=l+4|0;a[n+0>>0]=a[133968]|0;a[n+1>>0]=a[133969]|0;a[n+2>>0]=a[133970]|0;a[n+3>>0]=a[133971]|0;a[n+4>>0]=a[133972]|0;a[n+5>>0]=a[133973]|0;o=np()|0;c[j>>2]=h;n=Xp(m,20,o,n,j)|0;o=m+n|0;h=Yp(m,o,f)|0;sn(q,f);p=Zt(q,135168)|0;wm(c[q>>2]|0)|0;ac[c[(c[p>>2]|0)+32>>2]&7](p,m,o,d)|0;n=d+n|0;if((h|0)==(o|0)){q=n;p=c[e>>2]|0;c[k>>2]=p;c[j+0>>2]=c[k+0>>2];_p(b,j,d,q,n,f,g);i=l;return}q=d+(h-m)|0;p=c[e>>2]|0;c[k>>2]=p;c[j+0>>2]=c[k+0>>2];_p(b,j,d,q,n,f,g);i=l;return}function iq(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function jq(a){a=a|0;return}function kq(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+32|0;m=j+20|0;n=j+16|0;l=j+12|0;k=j;if((c[f+4>>2]&1|0)==0){k=c[(c[d>>2]|0)+24>>2]|0;c[n>>2]=c[e>>2];l=h&1;c[m+0>>2]=c[n+0>>2];cc[k&15](b,d,m,f,g,l);i=j;return}sn(l,f);f=Zt(l,135320)|0;wm(c[l>>2]|0)|0;l=c[f>>2]|0;if(h)Ub[c[l+24>>2]&63](k,f);else Ub[c[l+28>>2]&63](k,f);m=a[k>>0]|0;if((m&1)==0){f=k+4|0;h=f;l=k+8|0}else{f=k+8|0;h=k+4|0;l=f;f=c[f>>2]|0}while(1){if((m&1)==0){m=(m&255)>>>1;d=h}else{m=c[h>>2]|0;d=c[l>>2]|0}if((f|0)==(d+(m<<2)|0))break;d=c[f>>2]|0;g=c[e>>2]|0;if((g|0)!=0){m=g+24|0;n=c[m>>2]|0;if((n|0)==(c[g+28>>2]|0))d=dc[c[(c[g>>2]|0)+52>>2]&15](g,d)|0;else{c[m>>2]=n+4;c[n>>2]=d}if((d|0)==-1)c[e>>2]=0}m=a[k>>0]|0;f=f+4|0}c[b>>2]=c[e>>2];gn(k);i=j;return}function lq(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;i=i+128|0;k=d;p=d+104|0;q=d+112|0;j=d+8|0;n=d+4|0;m=d+96|0;o=d+92|0;l=d+100|0;a[p+0>>0]=a[133960]|0;a[p+1>>0]=a[133961]|0;a[p+2>>0]=a[133962]|0;a[p+3>>0]=a[133963]|0;a[p+4>>0]=a[133964]|0;a[p+5>>0]=a[133965]|0;Wp(p+1|0,133864,1,c[f+4>>2]|0);r=np()|0;c[k>>2]=h;h=q+(Xp(q,12,r,p,k)|0)|0;p=Yp(q,h,f)|0;sn(o,f);mq(q,p,h,j,n,m,o);wm(c[o>>2]|0)|0;c[l>>2]=c[e>>2];e=c[n>>2]|0;h=c[m>>2]|0;c[k+0>>2]=c[l+0>>2];nq(b,k,j,e,h,f,g);i=d;return}function mq(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;l=i;i=i+16|0;k=l;n=Zt(j,135160)|0;p=Zt(j,135320)|0;Ub[c[(c[p>>2]|0)+20>>2]&63](k,p);j=a[k>>0]|0;if((j&1)==0)j=(j&255)>>>1;else j=c[k+4>>2]|0;if((j|0)!=0){c[h>>2]=f;j=a[b>>0]|0;if(j<<24>>24==43|j<<24>>24==45){v=dc[c[(c[n>>2]|0)+44>>2]&15](n,j)|0;j=c[h>>2]|0;c[h>>2]=j+4;c[j>>2]=v;j=b+1|0}else j=b;if(((e-j|0)>1?(a[j>>0]|0)==48:0)?(q=j+1|0,v=a[q>>0]|0,v<<24>>24==88|v<<24>>24==120):0){v=dc[c[(c[n>>2]|0)+44>>2]&15](n,48)|0;u=c[h>>2]|0;c[h>>2]=u+4;c[u>>2]=v;u=dc[c[(c[n>>2]|0)+44>>2]&15](n,a[q>>0]|0)|0;v=c[h>>2]|0;c[h>>2]=v+4;c[v>>2]=u;j=j+2|0}if((j|0)!=(e|0)?(o=e+ -1|0,o>>>0>j>>>0):0){q=j;do{v=a[q>>0]|0;a[q>>0]=a[o>>0]|0;a[o>>0]=v;q=q+1|0;o=o+ -1|0}while(q>>>0<o>>>0)}s=Wb[c[(c[p>>2]|0)+16>>2]&63](p)|0;if(j>>>0<e>>>0){o=k+1|0;r=k+4|0;q=k+8|0;t=0;u=0;p=j;while(1){v=(a[k>>0]&1)==0;if((a[(v?o:c[q>>2]|0)+u>>0]|0)!=0?(t|0)==(a[(v?o:c[q>>2]|0)+u>>0]|0):0){t=c[h>>2]|0;c[h>>2]=t+4;c[t>>2]=s;t=a[k>>0]|0;if((t&1)==0)v=(t&255)>>>1;else v=c[r>>2]|0;t=0;u=(u>>>0<(v+ -1|0)>>>0&1)+u|0}x=dc[c[(c[n>>2]|0)+44>>2]&15](n,a[p>>0]|0)|0;w=c[h>>2]|0;v=w+4|0;c[h>>2]=v;c[w>>2]=x;p=p+1|0;if(!(p>>>0<e>>>0))break;else t=t+1|0}}else v=c[h>>2]|0;n=f+(j-b<<2)|0;if((n|0)!=(v|0)?(m=v+ -4|0,m>>>0>n>>>0):0)do{x=c[n>>2]|0;c[n>>2]=c[m>>2];c[m>>2]=x;n=n+4|0;m=m+ -4|0}while(n>>>0<m>>>0)}else{ac[c[(c[n>>2]|0)+48>>2]&7](n,b,e,f)|0;v=f+(e-b<<2)|0;c[h>>2]=v}if((d|0)==(e|0)){x=v;c[g>>2]=x;Tm(k);i=l;return}x=f+(d-b<<2)|0;c[g>>2]=x;Tm(k);i=l;return}function nq(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0;l=i;i=i+16|0;m=l;k=c[d>>2]|0;if((k|0)==0){c[b>>2]=0;i=l;return}q=e;n=g-q>>2;h=h+12|0;o=c[h>>2]|0;n=(o|0)>(n|0)?o-n|0:0;o=f;q=o-q|0;p=q>>2;if((q|0)>0?(Qb[c[(c[k>>2]|0)+48>>2]&31](k,e,p)|0)!=(p|0):0){c[d>>2]=0;c[b>>2]=0;i=l;return}do if((n|0)>0){en(m,n,j);if((a[m>>0]&1)==0)e=m+4|0;else e=c[m+8>>2]|0;if((Qb[c[(c[k>>2]|0)+48>>2]&31](k,e,n)|0)==(n|0)){gn(m);break}c[d>>2]=0;c[b>>2]=0;gn(m);i=l;return}while(0);q=g-o|0;m=q>>2;if((q|0)>0?(Qb[c[(c[k>>2]|0)+48>>2]&31](k,f,m)|0)!=(m|0):0){c[d>>2]=0;c[b>>2]=0;i=l;return}c[h>>2]=0;c[b>>2]=k;i=l;return}function oq(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=i;i=i+224|0;k=b;q=b+8|0;p=b+196|0;j=b+24|0;n=b+20|0;m=b+16|0;o=b+188|0;l=b+192|0;r=q;c[r>>2]=37;c[r+4>>2]=0;Wp(q+1|0,133872,1,c[e+4>>2]|0);r=np()|0;s=k;c[s>>2]=g;c[s+4>>2]=h;h=p+(Xp(p,22,r,q,k)|0)|0;g=Yp(p,h,e)|0;sn(o,e);mq(p,g,h,j,n,m,o);wm(c[o>>2]|0)|0;c[l>>2]=c[d>>2];h=c[n>>2]|0;g=c[m>>2]|0;c[k+0>>2]=c[l+0>>2];nq(a,k,j,h,g,e,f);i=b;return}function pq(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;i=i+128|0;k=d;p=d+104|0;q=d+112|0;j=d+8|0;n=d+4|0;m=d+96|0;o=d+92|0;l=d+100|0;a[p+0>>0]=a[133960]|0;a[p+1>>0]=a[133961]|0;a[p+2>>0]=a[133962]|0;a[p+3>>0]=a[133963]|0;a[p+4>>0]=a[133964]|0;a[p+5>>0]=a[133965]|0;Wp(p+1|0,133864,0,c[f+4>>2]|0);r=np()|0;c[k>>2]=h;h=q+(Xp(q,12,r,p,k)|0)|0;p=Yp(q,h,f)|0;sn(o,f);mq(q,p,h,j,n,m,o);wm(c[o>>2]|0)|0;c[l>>2]=c[e>>2];e=c[n>>2]|0;h=c[m>>2]|0;c[k+0>>2]=c[l+0>>2];nq(b,k,j,e,h,f,g);i=d;return}function qq(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=i;i=i+240|0;k=b;q=b+8|0;p=b+204|0;j=b+24|0;n=b+20|0;m=b+16|0;o=b+196|0;l=b+200|0;r=q;c[r>>2]=37;c[r+4>>2]=0;Wp(q+1|0,133872,0,c[e+4>>2]|0);r=np()|0;s=k;c[s>>2]=g;c[s+4>>2]=h;h=p+(Xp(p,23,r,q,k)|0)|0;g=Yp(p,h,e)|0;sn(o,e);mq(p,g,h,j,n,m,o);wm(c[o>>2]|0)|0;c[l>>2]=c[d>>2];h=c[n>>2]|0;g=c[m>>2]|0;c[k+0>>2]=c[l+0>>2];nq(a,k,j,h,g,e,f);i=b;return}function rq(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=+g;var j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;r=i;i=i+320|0;u=r;z=r+16|0;w=r+276|0;y=r+36|0;x=r+44|0;p=r+24|0;b=r+32|0;s=r+40|0;t=r+28|0;v=r+272|0;B=z;c[B>>2]=37;c[B+4>>2]=0;B=dq(z+1|0,133880,c[e+4>>2]|0)|0;c[y>>2]=w;A=np()|0;if(B){c[u>>2]=c[e+8>>2];B=u+4|0;h[k>>3]=g;c[B>>2]=c[k>>2];c[B+4>>2]=c[k+4>>2];A=Xp(w,30,A,z,u)|0}else{h[k>>3]=g;c[u>>2]=c[k>>2];c[u+4>>2]=c[k+4>>2];A=Xp(w,30,A,z,u)|0}if((A|0)>29){B=np()|0;c[u>>2]=c[e+8>>2];A=u+4|0;h[k>>3]=g;c[A>>2]=c[k>>2];c[A+4>>2]=c[k+4>>2];z=eq(y,B,z,u)|0;y=c[y>>2]|0;if((y|0)==0)Mx();else{j=y;l=y;q=z}}else{j=0;l=c[y>>2]|0;q=A}z=l+q|0;y=Yp(l,z,e)|0;if((l|0)!=(w|0)){q=Nx(q<<3)|0;if((q|0)==0)Mx();else{m=q;o=l;n=q}}else{m=0;o=w;n=x}sn(s,e);sq(o,y,z,n,p,b,s);wm(c[s>>2]|0)|0;c[v>>2]=c[d>>2];A=c[p>>2]|0;B=c[b>>2]|0;c[u+0>>2]=c[v+0>>2];nq(t,u,n,A,B,e,f);B=c[t>>2]|0;c[d>>2]=B;c[a>>2]=B;if((m|0)==0){Ox(j);i=r;return}Ox(m);Ox(j);i=r;return}function sq(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;k=i;i=i+16|0;l=k;m=Zt(j,135160)|0;n=Zt(j,135320)|0;Ub[c[(c[n>>2]|0)+20>>2]&63](l,n);c[h>>2]=f;j=a[b>>0]|0;if(j<<24>>24==43|j<<24>>24==45){y=dc[c[(c[m>>2]|0)+44>>2]&15](m,j)|0;t=c[h>>2]|0;c[h>>2]=t+4;c[t>>2]=y;t=b+1|0}else t=b;j=e;a:do if(((j-t|0)>1?(a[t>>0]|0)==48:0)?(p=t+1|0,y=a[p>>0]|0,y<<24>>24==88|y<<24>>24==120):0){y=dc[c[(c[m>>2]|0)+44>>2]&15](m,48)|0;x=c[h>>2]|0;c[h>>2]=x+4;c[x>>2]=y;t=t+2|0;x=dc[c[(c[m>>2]|0)+44>>2]&15](m,a[p>>0]|0)|0;y=c[h>>2]|0;c[h>>2]=y+4;c[y>>2]=x;if(t>>>0<e>>>0){q=t;while(1){y=a[q>>0]|0;u=q+1|0;if((sw(y<<24>>24,np()|0)|0)==0){p=t;break a}if(u>>>0<e>>>0)q=u;else{p=t;q=u;break}}}else{p=t;q=t}}else s=4;while(0);b:do if((s|0)==4)if(t>>>0<e>>>0){q=t;while(1){y=a[q>>0]|0;s=q+1|0;if((rw(y<<24>>24,np()|0)|0)==0){p=t;break b}if(s>>>0<e>>>0)q=s;else{p=t;q=s;break}}}else{p=t;q=t}while(0);s=a[l>>0]|0;if((s&1)==0)s=(s&255)>>>1;else s=c[l+4>>2]|0;if((s|0)!=0){if((p|0)!=(q|0)?(r=q+ -1|0,r>>>0>p>>>0):0){s=p;do{y=a[s>>0]|0;a[s>>0]=a[r>>0]|0;a[r>>0]=y;s=s+1|0;r=r+ -1|0}while(s>>>0<r>>>0)}u=Wb[c[(c[n>>2]|0)+16>>2]&63](n)|0;if(p>>>0<q>>>0){r=l+1|0;t=l+4|0;s=l+8|0;x=0;w=0;v=p;while(1){y=(a[l>>0]&1)==0;if((a[(y?r:c[s>>2]|0)+w>>0]|0)>0?(x|0)==(a[(y?r:c[s>>2]|0)+w>>0]|0):0){x=c[h>>2]|0;c[h>>2]=x+4;c[x>>2]=u;x=a[l>>0]|0;if((x&1)==0)y=(x&255)>>>1;else y=c[t>>2]|0;x=0;w=(w>>>0<(y+ -1|0)>>>0&1)+w|0}A=dc[c[(c[m>>2]|0)+44>>2]&15](m,a[v>>0]|0)|0;z=c[h>>2]|0;y=z+4|0;c[h>>2]=y;c[z>>2]=A;v=v+1|0;if(!(v>>>0<q>>>0))break;else x=x+1|0}}else y=c[h>>2]|0;p=f+(p-b<<2)|0;if((p|0)!=(y|0)?(o=y+ -4|0,o>>>0>p>>>0):0)do{A=c[p>>2]|0;c[p>>2]=c[o>>2];c[o>>2]=A;p=p+4|0;o=o+ -4|0}while(p>>>0<o>>>0)}else{ac[c[(c[m>>2]|0)+48>>2]&7](m,p,q,c[h>>2]|0)|0;y=(c[h>>2]|0)+(q-p<<2)|0;c[h>>2]=y}c:do if(q>>>0<e>>>0){while(1){o=a[q>>0]|0;if(o<<24>>24==46)break;z=dc[c[(c[m>>2]|0)+44>>2]&15](m,o)|0;A=c[h>>2]|0;y=A+4|0;c[h>>2]=y;c[A>>2]=z;q=q+1|0;if(!(q>>>0<e>>>0))break c}z=Wb[c[(c[n>>2]|0)+12>>2]&63](n)|0;A=c[h>>2]|0;y=A+4|0;c[h>>2]=y;c[A>>2]=z;q=q+1|0}while(0);ac[c[(c[m>>2]|0)+48>>2]&7](m,q,e,y)|0;m=(c[h>>2]|0)+(j-q<<2)|0;c[h>>2]=m;if((d|0)==(e|0)){A=m;c[g>>2]=A;Tm(l);i=k;return}A=f+(d-b<<2)|0;c[g>>2]=A;Tm(l);i=k;return}function tq(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=+g;var j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;s=i;i=i+320|0;v=s;A=s+16|0;x=s+276|0;y=s+36|0;w=s+44|0;p=s+24|0;b=s+32|0;t=s+40|0;u=s+28|0;r=s+272|0;z=A;c[z>>2]=37;c[z+4>>2]=0;z=dq(A+1|0,133888,c[e+4>>2]|0)|0;c[y>>2]=x;B=np()|0;if(z){c[v>>2]=c[e+8>>2];C=v+4|0;h[k>>3]=g;c[C>>2]=c[k>>2];c[C+4>>2]=c[k+4>>2];B=Xp(x,30,B,A,v)|0}else{h[k>>3]=g;c[v>>2]=c[k>>2];c[v+4>>2]=c[k+4>>2];B=Xp(x,30,B,A,v)|0}if((B|0)>29){B=np()|0;if(z){c[v>>2]=c[e+8>>2];z=v+4|0;h[k>>3]=g;c[z>>2]=c[k>>2];c[z+4>>2]=c[k+4>>2];z=eq(y,B,A,v)|0}else{h[k>>3]=g;c[v>>2]=c[k>>2];c[v+4>>2]=c[k+4>>2];z=eq(y,B,A,v)|0}y=c[y>>2]|0;if((y|0)==0)Mx();else{j=y;l=y;q=z}}else{j=0;l=c[y>>2]|0;q=B}z=l+q|0;y=Yp(l,z,e)|0;if((l|0)!=(x|0)){q=Nx(q<<3)|0;if((q|0)==0)Mx();else{m=q;o=l;n=q}}else{m=0;o=x;n=w}sn(t,e);sq(o,y,z,n,p,b,t);wm(c[t>>2]|0)|0;c[r>>2]=c[d>>2];B=c[p>>2]|0;C=c[b>>2]|0;c[v+0>>2]=c[r+0>>2];nq(u,v,n,B,C,e,f);C=c[u>>2]|0;c[d>>2]=C;c[a>>2]=C;if((m|0)==0){Ox(j);i=s;return}Ox(m);Ox(j);i=s;return}function uq(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;l=i;i=i+192|0;j=l;n=l+180|0;m=l+160|0;d=l+12|0;q=l+8|0;k=l+4|0;a[n+0>>0]=a[133968]|0;a[n+1>>0]=a[133969]|0;a[n+2>>0]=a[133970]|0;a[n+3>>0]=a[133971]|0;a[n+4>>0]=a[133972]|0;a[n+5>>0]=a[133973]|0;o=np()|0;c[j>>2]=h;n=Xp(m,20,o,n,j)|0;o=m+n|0;h=Yp(m,o,f)|0;sn(q,f);p=Zt(q,135160)|0;wm(c[q>>2]|0)|0;ac[c[(c[p>>2]|0)+48>>2]&7](p,m,o,d)|0;n=d+(n<<2)|0;if((h|0)==(o|0)){q=n;p=c[e>>2]|0;c[k>>2]=p;c[j+0>>2]=c[k+0>>2];nq(b,j,d,q,n,f,g);i=l;return}q=d+(h-m<<2)|0;p=c[e>>2]|0;c[k>>2]=p;c[j+0>>2]=c[k+0>>2];nq(b,j,d,q,n,f,g);i=l;return}function vq(e,f,g,h,j,k,l,m,n){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;p=i;i=i+32|0;t=p+20|0;r=p+16|0;D=p+12|0;w=p+8|0;s=p+4|0;q=p;sn(D,j);v=Zt(D,135168)|0;wm(c[D>>2]|0)|0;c[k>>2]=0;a:do if((m|0)!=(n|0)){x=v+8|0;y=0;b:while(1){while(1){if((y|0)!=0){o=60;break a}y=c[g>>2]|0;if((y|0)!=0){if((c[y+12>>2]|0)==(c[y+16>>2]|0)?(Wb[c[(c[y>>2]|0)+36>>2]&63](y)|0)==-1:0){c[g>>2]=0;y=0}}else y=0;A=(y|0)==0;z=c[h>>2]|0;do if((z|0)!=0){if((c[z+12>>2]|0)==(c[z+16>>2]|0)?(Wb[c[(c[z>>2]|0)+36>>2]&63](z)|0)==-1:0){c[h>>2]=0;o=14;break}if(!A){o=15;break b}}else o=14;while(0);if((o|0)==14){o=0;if(A){o=15;break b}else z=0}if((Qb[c[(c[v>>2]|0)+36>>2]&31](v,a[m>>0]|0,0)|0)<<24>>24==37){o=17;break}A=a[m>>0]|0;if(A<<24>>24>-1?(u=c[x>>2]|0,!((b[u+(A<<24>>24<<1)>>1]&8192)==0)):0){o=28;break}z=y+12|0;B=c[z>>2]|0;A=y+16|0;if((B|0)==(c[A>>2]|0))B=Wb[c[(c[y>>2]|0)+36>>2]&63](y)|0;else B=d[B>>0]|0;D=dc[c[(c[v>>2]|0)+12>>2]&15](v,B&255)|0;if(D<<24>>24==(dc[c[(c[v>>2]|0)+12>>2]&15](v,a[m>>0]|0)|0)<<24>>24){o=55;break}c[k>>2]=4;y=4}c:do if((o|0)==17){o=0;B=m+1|0;if((B|0)==(n|0)){o=18;break b}A=Qb[c[(c[v>>2]|0)+36>>2]&31](v,a[B>>0]|0,0)|0;if(A<<24>>24==48|A<<24>>24==69){B=m+2|0;if((B|0)==(n|0)){o=21;break b}m=Qb[c[(c[v>>2]|0)+36>>2]&31](v,a[B>>0]|0,0)|0}else{m=A;A=0}D=c[(c[f>>2]|0)+36>>2]|0;c[s>>2]=y;c[q>>2]=z;c[r+0>>2]=c[s+0>>2];c[t+0>>2]=c[q+0>>2];Vb[D&3](w,f,r,t,j,k,l,m,A);c[g>>2]=c[w>>2];m=B+1|0}else if((o|0)==28){while(1){o=0;m=m+1|0;if((m|0)==(n|0)){m=n;break}A=a[m>>0]|0;if(!(A<<24>>24>-1))break;if((b[u+(A<<24>>24<<1)>>1]&8192)==0)break;else o=28}B=z;A=z;while(1){if((y|0)!=0){if((c[y+12>>2]|0)==(c[y+16>>2]|0)?(Wb[c[(c[y>>2]|0)+36>>2]&63](y)|0)==-1:0){c[g>>2]=0;y=0}}else y=0;C=(y|0)==0;do if((A|0)!=0){if((c[A+12>>2]|0)!=(c[A+16>>2]|0))if(C){z=B;break}else break c;if(!((Wb[c[(c[A>>2]|0)+36>>2]&63](A)|0)==-1))if(C^(B|0)==0){z=B;A=B;break}else break c;else{c[h>>2]=0;z=0;o=41;break}}else{z=B;o=41}while(0);if((o|0)==41){o=0;if(C)break c;else A=0}C=y+12|0;D=c[C>>2]|0;B=y+16|0;if((D|0)==(c[B>>2]|0))D=Wb[c[(c[y>>2]|0)+36>>2]&63](y)|0;else D=d[D>>0]|0;if(!((D&255)<<24>>24>-1))break c;if((b[(c[x>>2]|0)+(D<<24>>24<<1)>>1]&8192)==0)break c;D=c[C>>2]|0;if((D|0)==(c[B>>2]|0)){Wb[c[(c[y>>2]|0)+40>>2]&63](y)|0;B=z;continue}else{c[C>>2]=D+1;B=z;continue}}}else if((o|0)==55){o=0;B=c[z>>2]|0;if((B|0)==(c[A>>2]|0))Wb[c[(c[y>>2]|0)+40>>2]&63](y)|0;else c[z>>2]=B+1;m=m+1|0}while(0);if((m|0)==(n|0)){o=60;break a}y=c[k>>2]|0}if((o|0)==15){c[k>>2]=4;break}else if((o|0)==18){c[k>>2]=4;break}else if((o|0)==21){c[k>>2]=4;break}}else o=60;while(0);if((o|0)==60)y=c[g>>2]|0;if((y|0)!=0){if((c[y+12>>2]|0)==(c[y+16>>2]|0)?(Wb[c[(c[y>>2]|0)+36>>2]&63](y)|0)==-1:0){c[g>>2]=0;y=0}}else y=0;g=(y|0)==0;l=c[h>>2]|0;do if((l|0)!=0){if((c[l+12>>2]|0)==(c[l+16>>2]|0)?(Wb[c[(c[l>>2]|0)+36>>2]&63](l)|0)==-1:0){c[h>>2]=0;o=70;break}if(g){c[e>>2]=y;i=p;return}}else o=70;while(0);if((o|0)==70?!g:0){c[e>>2]=y;i=p;return}c[k>>2]=c[k>>2]|2;c[e>>2]=y;i=p;return}function wq(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function xq(a){a=a|0;return}function yq(a){a=a|0;return 2}function zq(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j+12|0;l=j+8|0;n=j+4|0;m=j;c[n>>2]=c[d>>2];c[m>>2]=c[e>>2];c[l+0>>2]=c[n+0>>2];c[k+0>>2]=c[m+0>>2];vq(a,b,l,k,f,g,h,134072,134080|0);i=j;return}function Aq(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0;o=i;i=i+16|0;k=o+12|0;l=o+8|0;n=o+4|0;m=o;p=d+8|0;p=Wb[c[(c[p>>2]|0)+20>>2]&63](p)|0;c[n>>2]=c[e>>2];c[m>>2]=c[f>>2];f=a[p>>0]|0;if((f&1)==0){f=(f&255)>>>1;e=p+1|0;p=p+1|0}else{q=c[p+8>>2]|0;f=c[p+4>>2]|0;e=q;p=q}q=e+f|0;c[l+0>>2]=c[n+0>>2];c[k+0>>2]=c[m+0>>2];vq(b,d,l,k,g,h,j,p,q);i=o;return}function Bq(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;j=i;i=i+16|0;k=j+8|0;m=j+4|0;l=j;sn(m,f);f=Zt(m,135168)|0;wm(c[m>>2]|0)|0;h=h+24|0;c[l>>2]=c[e>>2];c[k+0>>2]=c[l+0>>2];Cq(b,h,d,k,g,f);c[a>>2]=c[d>>2];i=j;return}function Cq(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;h=i;i=i+16|0;j=h+4|0;k=h;a=a+8|0;a=Wb[c[c[a>>2]>>2]&63](a)|0;c[k>>2]=c[e>>2];e=a+168|0;c[j+0>>2]=c[k+0>>2];f=(To(d,j,a,e,g,f,0)|0)-a|0;if((f|0)>=168){i=h;return}c[b>>2]=((f|0)/12|0|0)%7|0;i=h;return}function Dq(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;j=i;i=i+16|0;k=j+8|0;m=j+4|0;l=j;sn(m,f);f=Zt(m,135168)|0;wm(c[m>>2]|0)|0;h=h+16|0;c[l>>2]=c[e>>2];c[k+0>>2]=c[l+0>>2];Eq(b,h,d,k,g,f);c[a>>2]=c[d>>2];i=j;return}function Eq(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;h=i;i=i+16|0;j=h+4|0;k=h;a=a+8|0;a=Wb[c[(c[a>>2]|0)+4>>2]&63](a)|0;c[k>>2]=c[e>>2];e=a+288|0;c[j+0>>2]=c[k+0>>2];f=(To(d,j,a,e,g,f,0)|0)-a|0;if((f|0)>=288){i=h;return}c[b>>2]=((f|0)/12|0|0)%12|0;i=h;return}function Fq(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;b=i;i=i+16|0;j=b+8|0;l=b+4|0;k=b;sn(l,f);f=Zt(l,135168)|0;wm(c[l>>2]|0)|0;h=h+20|0;c[k>>2]=c[e>>2];c[j+0>>2]=c[k+0>>2];Gq(0,h,d,j,g,f);c[a>>2]=c[d>>2];i=b;return}function Gq(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=Uq(d,h,f,g,4)|0;if((c[f>>2]&4|0)!=0){i=a;return}if((g|0)<69)f=g+2e3|0;else f=(g+ -69|0)>>>0<31?g+1900|0:g;c[b>>2]=f+ -1900;i=a;return}function Hq(b,d,e,f,g,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;m=i;i=i+176|0;n=m+156|0;l=m+148|0;$=m;V=m+56|0;Q=m+60|0;t=m+116|0;q=m+12|0;p=m+108|0;X=m+16|0;Y=m+20|0;_=m+24|0;Z=m+28|0;W=m+32|0;P=m+36|0;O=m+40|0;u=m+104|0;w=m+128|0;v=m+136|0;x=m+144|0;y=m+152|0;z=m+160|0;D=m+64|0;A=m+68|0;C=m+72|0;B=m+76|0;E=m+80|0;G=m+84|0;F=m+88|0;U=m+92|0;I=m+96|0;K=m+100|0;J=m+4|0;L=m+120|0;N=m+44|0;M=m+124|0;o=m+8|0;s=m+48|0;r=m+132|0;R=m+52|0;S=m+140|0;T=m+112|0;c[h>>2]=0;sn($,g);H=Zt($,135168)|0;wm(c[$>>2]|0)|0;do switch(k<<24>>24|0){case 65:case 97:{c[V>>2]=c[f>>2];c[n+0>>2]=c[V+0>>2];Cq(d,j+24|0,e,n,h,H);break};case 70:{c[P>>2]=c[e>>2];c[O>>2]=c[f>>2];c[l+0>>2]=c[P+0>>2];c[n+0>>2]=c[O+0>>2];vq(W,d,l,n,g,h,j,134088,134096|0);c[e>>2]=c[W>>2];break};case 104:case 66:case 98:{c[Q>>2]=c[f>>2];c[n+0>>2]=c[Q+0>>2];Eq(d,j+16|0,e,n,h,H);break};case 99:{o=d+8|0;o=Wb[c[(c[o>>2]|0)+12>>2]&63](o)|0;c[q>>2]=c[e>>2];c[p>>2]=c[f>>2];r=a[o>>0]|0;if((r&1)==0){r=(r&255)>>>1;s=o+1|0;o=o+1|0}else{$=c[o+8>>2]|0;r=c[o+4>>2]|0;s=$;o=$}c[l+0>>2]=c[q+0>>2];c[n+0>>2]=c[p+0>>2];vq(t,d,l,n,g,h,j,s,o+r|0);c[e>>2]=c[t>>2];break};case 101:case 100:{c[X>>2]=c[f>>2];c[n+0>>2]=c[X+0>>2];Iq(0,j+12|0,e,n,h,H);break};case 68:{c[_>>2]=c[e>>2];c[Z>>2]=c[f>>2];c[l+0>>2]=c[_+0>>2];c[n+0>>2]=c[Z+0>>2];vq(Y,d,l,n,g,h,j,134080,134088|0);c[e>>2]=c[Y>>2];break};case 72:{c[u>>2]=c[f>>2];c[n+0>>2]=c[u+0>>2];Jq(0,j+8|0,e,n,h,H);break};case 106:{c[v>>2]=c[f>>2];c[n+0>>2]=c[v+0>>2];Lq(0,j+28|0,e,n,h,H);break};case 73:{c[w>>2]=c[f>>2];c[n+0>>2]=c[w+0>>2];Kq(0,j+8|0,e,n,h,H);break};case 109:{c[x>>2]=c[f>>2];c[n+0>>2]=c[x+0>>2];Mq(0,j+16|0,e,n,h,H);break};case 77:{c[y>>2]=c[f>>2];c[n+0>>2]=c[y+0>>2];Nq(0,j+4|0,e,n,h,H);break};case 116:case 110:{c[z>>2]=c[f>>2];c[n+0>>2]=c[z+0>>2];Oq(0,e,n,h,H);break};case 114:{c[C>>2]=c[e>>2];c[B>>2]=c[f>>2];c[l+0>>2]=c[C+0>>2];c[n+0>>2]=c[B+0>>2];vq(A,d,l,n,g,h,j,134096,134107|0);c[e>>2]=c[A>>2];break};case 112:{c[D>>2]=c[f>>2];c[n+0>>2]=c[D+0>>2];Pq(d,j+8|0,e,n,h,H);break};case 82:{c[G>>2]=c[e>>2];c[F>>2]=c[f>>2];c[l+0>>2]=c[G+0>>2];c[n+0>>2]=c[F+0>>2];vq(E,d,l,n,g,h,j,134112,134117|0);c[e>>2]=c[E>>2];break};case 83:{c[U>>2]=c[f>>2];c[n+0>>2]=c[U+0>>2];Qq(0,j,e,n,h,H);break};case 84:{c[K>>2]=c[e>>2];c[J>>2]=c[f>>2];c[l+0>>2]=c[K+0>>2];c[n+0>>2]=c[J+0>>2];vq(I,d,l,n,g,h,j,134120,134128|0);c[e>>2]=c[I>>2];break};case 119:{c[L>>2]=c[f>>2];c[n+0>>2]=c[L+0>>2];Rq(0,j+24|0,e,n,h,H);break};case 120:{$=c[(c[d>>2]|0)+20>>2]|0;c[N>>2]=c[e>>2];c[M>>2]=c[f>>2];c[l+0>>2]=c[N+0>>2];c[n+0>>2]=c[M+0>>2];Rb[$&63](b,d,l,n,g,h,j);i=m;return};case 88:{t=d+8|0;t=Wb[c[(c[t>>2]|0)+24>>2]&63](t)|0;c[s>>2]=c[e>>2];c[r>>2]=c[f>>2];f=a[t>>0]|0;if((f&1)==0){q=t+1|0;p=t+1|0;t=(f&255)>>>1}else{p=c[t+8>>2]|0;q=p;t=c[t+4>>2]|0}c[l+0>>2]=c[s+0>>2];c[n+0>>2]=c[r+0>>2];vq(o,d,l,n,g,h,j,p,q+t|0);c[e>>2]=c[o>>2];break};case 121:{c[R>>2]=c[f>>2];c[n+0>>2]=c[R+0>>2];Gq(0,j+20|0,e,n,h,H);break};case 89:{c[S>>2]=c[f>>2];c[n+0>>2]=c[S+0>>2];Sq(0,j+20|0,e,n,h,H);break};case 37:{c[T>>2]=c[f>>2];c[n+0>>2]=c[T+0>>2];Tq(0,e,n,h,H);break};default:c[h>>2]=c[h>>2]|4}while(0);c[b>>2]=c[e>>2];i=m;return}function Iq(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=Uq(d,h,f,g,2)|0;d=c[f>>2]|0;if((d&4|0)==0?(g+ -1|0)>>>0<31:0){c[b>>2]=g;i=a;return}c[f>>2]=d|4;i=a;return}function Jq(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=Uq(d,h,f,g,2)|0;d=c[f>>2]|0;if((d&4|0)==0&(g|0)<24){c[b>>2]=g;i=a;return}else{c[f>>2]=d|4;i=a;return}}function Kq(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=Uq(d,h,f,g,2)|0;d=c[f>>2]|0;if((d&4|0)==0?(g+ -1|0)>>>0<12:0){c[b>>2]=g;i=a;return}c[f>>2]=d|4;i=a;return}function Lq(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=Uq(d,h,f,g,3)|0;d=c[f>>2]|0;if((d&4|0)==0&(g|0)<366){c[b>>2]=g;i=a;return}else{c[f>>2]=d|4;i=a;return}}function Mq(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=Uq(d,h,f,g,2)|0;d=c[f>>2]|0;if((d&4|0)==0&(g|0)<13){c[b>>2]=g+ -1;i=a;return}else{c[f>>2]=d|4;i=a;return}}function Nq(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=Uq(d,h,f,g,2)|0;d=c[f>>2]|0;if((d&4|0)==0&(g|0)<60){c[b>>2]=g;i=a;return}else{c[f>>2]=d|4;i=a;return}}function Oq(a,e,f,g,h){a=a|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;a=i;h=h+8|0;a:while(1){k=c[e>>2]|0;do if((k|0)!=0){if((c[k+12>>2]|0)==(c[k+16>>2]|0))if((Wb[c[(c[k>>2]|0)+36>>2]&63](k)|0)==-1){c[e>>2]=0;k=0;break}else{k=c[e>>2]|0;break}}else k=0;while(0);l=(k|0)==0;k=c[f>>2]|0;do if((k|0)!=0){if((c[k+12>>2]|0)!=(c[k+16>>2]|0))if(l)break;else break a;if(!((Wb[c[(c[k>>2]|0)+36>>2]&63](k)|0)==-1))if(l)break;else break a;else{c[f>>2]=0;j=12;break}}else j=12;while(0);if((j|0)==12){j=0;if(l){k=0;break}else k=0}m=c[e>>2]|0;l=c[m+12>>2]|0;if((l|0)==(c[m+16>>2]|0))l=Wb[c[(c[m>>2]|0)+36>>2]&63](m)|0;else l=d[l>>0]|0;if(!((l&255)<<24>>24>-1))break;if((b[(c[h>>2]|0)+(l<<24>>24<<1)>>1]&8192)==0)break;k=c[e>>2]|0;m=k+12|0;l=c[m>>2]|0;if((l|0)==(c[k+16>>2]|0)){Wb[c[(c[k>>2]|0)+40>>2]&63](k)|0;continue}else{c[m>>2]=l+1;continue}}h=c[e>>2]|0;do if((h|0)!=0){if((c[h+12>>2]|0)==(c[h+16>>2]|0))if((Wb[c[(c[h>>2]|0)+36>>2]&63](h)|0)==-1){c[e>>2]=0;h=0;break}else{h=c[e>>2]|0;break}}else h=0;while(0);e=(h|0)==0;do if((k|0)!=0){if((c[k+12>>2]|0)==(c[k+16>>2]|0)?(Wb[c[(c[k>>2]|0)+36>>2]&63](k)|0)==-1:0){c[f>>2]=0;j=32;break}if(e){i=a;return}}else j=32;while(0);if((j|0)==32?!e:0){i=a;return}c[g>>2]=c[g>>2]|2;i=a;return}function Pq(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j+4|0;l=j;b=b+8|0;b=Wb[c[(c[b>>2]|0)+8>>2]&63](b)|0;m=a[b>>0]|0;if((m&1)==0)m=(m&255)>>>1;else m=c[b+4>>2]|0;n=a[b+12>>0]|0;if((n&1)==0)n=(n&255)>>>1;else n=c[b+16>>2]|0;if((m|0)==(0-n|0)){c[g>>2]=c[g>>2]|4;i=j;return}c[l>>2]=c[f>>2];n=b+24|0;c[k+0>>2]=c[l+0>>2];n=To(e,k,b,n,h,g,0)|0;h=n-b|0;if((n|0)==(b|0)?(c[d>>2]|0)==12:0){c[d>>2]=0;i=j;return}if((h|0)!=12){i=j;return}h=c[d>>2]|0;if((h|0)>=12){i=j;return}c[d>>2]=h+12;i=j;return}function Qq(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=Uq(d,h,f,g,2)|0;d=c[f>>2]|0;if((d&4|0)==0&(g|0)<61){c[b>>2]=g;i=a;return}else{c[f>>2]=d|4;i=a;return}}function Rq(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=Uq(d,h,f,g,1)|0;d=c[f>>2]|0;if((d&4|0)==0&(g|0)<7){c[b>>2]=g;i=a;return}else{c[f>>2]=d|4;i=a;return}}function Sq(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=Uq(d,h,f,g,4)|0;if((c[f>>2]&4|0)!=0){i=a;return}c[b>>2]=g+ -1900;i=a;return}function Tq(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0;a=i;j=c[b>>2]|0;do if((j|0)!=0){if((c[j+12>>2]|0)==(c[j+16>>2]|0))if((Wb[c[(c[j>>2]|0)+36>>2]&63](j)|0)==-1){c[b>>2]=0;j=0;break}else{j=c[b>>2]|0;break}}else j=0;while(0);k=(j|0)==0;j=c[e>>2]|0;do if((j|0)!=0){if((c[j+12>>2]|0)==(c[j+16>>2]|0)?(Wb[c[(c[j>>2]|0)+36>>2]&63](j)|0)==-1:0){c[e>>2]=0;h=11;break}if(!k)h=12}else h=11;while(0);if((h|0)==11)if(k)h=12;else j=0;if((h|0)==12){c[f>>2]=c[f>>2]|6;i=a;return}l=c[b>>2]|0;k=c[l+12>>2]|0;if((k|0)==(c[l+16>>2]|0))k=Wb[c[(c[l>>2]|0)+36>>2]&63](l)|0;else k=d[k>>0]|0;if(!((Qb[c[(c[g>>2]|0)+36>>2]&31](g,k&255,0)|0)<<24>>24==37)){c[f>>2]=c[f>>2]|4;i=a;return}l=c[b>>2]|0;k=l+12|0;g=c[k>>2]|0;if((g|0)==(c[l+16>>2]|0))Wb[c[(c[l>>2]|0)+40>>2]&63](l)|0;else c[k>>2]=g+1;g=c[b>>2]|0;do if((g|0)!=0){if((c[g+12>>2]|0)==(c[g+16>>2]|0))if((Wb[c[(c[g>>2]|0)+36>>2]&63](g)|0)==-1){c[b>>2]=0;g=0;break}else{g=c[b>>2]|0;break}}else g=0;while(0);b=(g|0)==0;do if((j|0)!=0){if((c[j+12>>2]|0)==(c[j+16>>2]|0)?(Wb[c[(c[j>>2]|0)+36>>2]&63](j)|0)==-1:0){c[e>>2]=0;h=31;break}if(b){i=a;return}}else h=31;while(0);if((h|0)==31?!b:0){i=a;return}c[f>>2]=c[f>>2]|2;i=a;return}function Uq(a,e,f,g,h){a=a|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;j=i;m=c[a>>2]|0;do if((m|0)!=0){if((c[m+12>>2]|0)==(c[m+16>>2]|0))if((Wb[c[(c[m>>2]|0)+36>>2]&63](m)|0)==-1){c[a>>2]=0;m=0;break}else{m=c[a>>2]|0;break}}else m=0;while(0);n=(m|0)==0;m=c[e>>2]|0;do if((m|0)!=0){if((c[m+12>>2]|0)==(c[m+16>>2]|0)?(Wb[c[(c[m>>2]|0)+36>>2]&63](m)|0)==-1:0){c[e>>2]=0;l=11;break}if(!n)l=12}else l=11;while(0);if((l|0)==11)if(n)l=12;else m=0;if((l|0)==12){c[f>>2]=c[f>>2]|6;q=0;i=j;return q|0}l=c[a>>2]|0;n=c[l+12>>2]|0;if((n|0)==(c[l+16>>2]|0))n=Wb[c[(c[l>>2]|0)+36>>2]&63](l)|0;else n=d[n>>0]|0;l=n&255;if(l<<24>>24>-1?(k=g+8|0,!((b[(c[k>>2]|0)+(n<<24>>24<<1)>>1]&2048)==0)):0){l=(Qb[c[(c[g>>2]|0)+36>>2]&31](g,l,0)|0)<<24>>24;p=c[a>>2]|0;o=p+12|0;n=c[o>>2]|0;if((n|0)==(c[p+16>>2]|0)){Wb[c[(c[p>>2]|0)+40>>2]&63](p)|0;n=m;o=m;m=l}else{c[o>>2]=n+1;n=m;o=m;m=l}while(1){m=m+ -48|0;l=h+ -1|0;h=c[a>>2]|0;do if((h|0)!=0){if((c[h+12>>2]|0)==(c[h+16>>2]|0))if((Wb[c[(c[h>>2]|0)+36>>2]&63](h)|0)==-1){c[a>>2]=0;h=0;break}else{h=c[a>>2]|0;break}}else h=0;while(0);p=(h|0)==0;if((o|0)!=0)if((c[o+12>>2]|0)==(c[o+16>>2]|0))if((Wb[c[(c[o>>2]|0)+36>>2]&63](o)|0)==-1){c[e>>2]=0;h=0;o=0}else{h=n;o=n}else h=n;else{h=n;o=0}n=c[a>>2]|0;if(!((p^(o|0)==0)&(l|0)>0)){l=40;break}p=c[n+12>>2]|0;if((p|0)==(c[n+16>>2]|0))p=Wb[c[(c[n>>2]|0)+36>>2]&63](n)|0;else p=d[p>>0]|0;n=p&255;if(!(n<<24>>24>-1)){l=52;break}if((b[(c[k>>2]|0)+(p<<24>>24<<1)>>1]&2048)==0){l=52;break}m=((Qb[c[(c[g>>2]|0)+36>>2]&31](g,n,0)|0)<<24>>24)+(m*10|0)|0;n=c[a>>2]|0;q=n+12|0;p=c[q>>2]|0;if((p|0)==(c[n+16>>2]|0)){Wb[c[(c[n>>2]|0)+40>>2]&63](n)|0;n=h;h=l;continue}else{c[q>>2]=p+1;n=h;h=l;continue}}if((l|0)==40){do if((n|0)!=0){if((c[n+12>>2]|0)==(c[n+16>>2]|0))if((Wb[c[(c[n>>2]|0)+36>>2]&63](n)|0)==-1){c[a>>2]=0;n=0;break}else{n=c[a>>2]|0;break}}else n=0;while(0);g=(n|0)==0;do if((h|0)!=0){if((c[h+12>>2]|0)==(c[h+16>>2]|0)?(Wb[c[(c[h>>2]|0)+36>>2]&63](h)|0)==-1:0){c[e>>2]=0;l=50;break}if(g){q=m;i=j;return q|0}}else l=50;while(0);if((l|0)==50?!g:0){q=m;i=j;return q|0}c[f>>2]=c[f>>2]|2;q=m;i=j;return q|0}else if((l|0)==52){i=j;return m|0}}c[f>>2]=c[f>>2]|4;q=0;i=j;return q|0}function Vq(a,b,d,e,f,g,h,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;m=i;i=i+32|0;q=m+20|0;p=m+16|0;y=m+12|0;s=m+8|0;r=m+4|0;o=m;sn(y,f);n=Zt(y,135160)|0;wm(c[y>>2]|0)|0;c[g>>2]=0;a:do if((j|0)!=(k|0)){t=0;b:while(1){while(1){if((t|0)!=0){l=64;break a}t=c[d>>2]|0;if((t|0)!=0){u=c[t+12>>2]|0;if((u|0)==(c[t+16>>2]|0))u=Wb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else u=c[u>>2]|0;if((u|0)==-1){c[d>>2]=0;t=0;v=1}else v=0}else{t=0;v=1}u=c[e>>2]|0;do if((u|0)!=0){w=c[u+12>>2]|0;if((w|0)==(c[u+16>>2]|0))w=Wb[c[(c[u>>2]|0)+36>>2]&63](u)|0;else w=c[w>>2]|0;if(!((w|0)==-1))if(v)break;else{l=19;break b}else{c[e>>2]=0;l=17;break}}else l=17;while(0);if((l|0)==17){l=0;if(v){l=19;break b}else u=0}if((Qb[c[(c[n>>2]|0)+52>>2]&31](n,c[j>>2]|0,0)|0)<<24>>24==37){l=21;break}if(Qb[c[(c[n>>2]|0)+12>>2]&31](n,8192,c[j>>2]|0)|0){l=31;break}v=t+12|0;w=c[v>>2]|0;u=t+16|0;if((w|0)==(c[u>>2]|0))w=Wb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else w=c[w>>2]|0;y=dc[c[(c[n>>2]|0)+28>>2]&15](n,w)|0;if((y|0)==(dc[c[(c[n>>2]|0)+28>>2]&15](n,c[j>>2]|0)|0)){l=59;break}c[g>>2]=4;t=4}c:do if((l|0)==21){l=0;w=j+4|0;if((w|0)==(k|0)){l=22;break b}v=Qb[c[(c[n>>2]|0)+52>>2]&31](n,c[w>>2]|0,0)|0;if(v<<24>>24==48|v<<24>>24==69){w=j+8|0;if((w|0)==(k|0)){l=25;break b}j=Qb[c[(c[n>>2]|0)+52>>2]&31](n,c[w>>2]|0,0)|0}else{j=v;v=0}y=c[(c[b>>2]|0)+36>>2]|0;c[r>>2]=t;c[o>>2]=u;c[p+0>>2]=c[r+0>>2];c[q+0>>2]=c[o+0>>2];Vb[y&3](s,b,p,q,f,g,h,j,v);c[d>>2]=c[s>>2];j=w+4|0}else if((l|0)==31){while(1){l=0;j=j+4|0;if((j|0)==(k|0)){j=k;break}if(Qb[c[(c[n>>2]|0)+12>>2]&31](n,8192,c[j>>2]|0)|0)l=31;else break}v=u;w=u;while(1){if((t|0)!=0){u=c[t+12>>2]|0;if((u|0)==(c[t+16>>2]|0))u=Wb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else u=c[u>>2]|0;if((u|0)==-1){c[d>>2]=0;u=1;t=0}else u=0}else{u=1;t=0}do if((w|0)!=0){x=c[w+12>>2]|0;if((x|0)==(c[w+16>>2]|0))w=Wb[c[(c[w>>2]|0)+36>>2]&63](w)|0;else w=c[x>>2]|0;if(!((w|0)==-1))if(u^(v|0)==0){u=v;w=v;break}else break c;else{c[e>>2]=0;v=0;l=46;break}}else l=46;while(0);if((l|0)==46){l=0;if(u)break c;else{u=v;w=0}}x=t+12|0;y=c[x>>2]|0;v=t+16|0;if((y|0)==(c[v>>2]|0))y=Wb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else y=c[y>>2]|0;if(!(Qb[c[(c[n>>2]|0)+12>>2]&31](n,8192,y)|0))break c;y=c[x>>2]|0;if((y|0)==(c[v>>2]|0)){Wb[c[(c[t>>2]|0)+40>>2]&63](t)|0;v=u;continue}else{c[x>>2]=y+4;v=u;continue}}}else if((l|0)==59){l=0;w=c[v>>2]|0;if((w|0)==(c[u>>2]|0))Wb[c[(c[t>>2]|0)+40>>2]&63](t)|0;else c[v>>2]=w+4;j=j+4|0}while(0);if((j|0)==(k|0)){l=64;break a}t=c[g>>2]|0}if((l|0)==19){c[g>>2]=4;break}else if((l|0)==22){c[g>>2]=4;break}else if((l|0)==25){c[g>>2]=4;break}}else l=64;while(0);if((l|0)==64)t=c[d>>2]|0;if((t|0)!=0){n=c[t+12>>2]|0;if((n|0)==(c[t+16>>2]|0))n=Wb[c[(c[t>>2]|0)+36>>2]&63](t)|0;else n=c[n>>2]|0;if((n|0)==-1){c[d>>2]=0;t=0;d=1}else d=0}else{t=0;d=1}o=c[e>>2]|0;do if((o|0)!=0){n=c[o+12>>2]|0;if((n|0)==(c[o+16>>2]|0))n=Wb[c[(c[o>>2]|0)+36>>2]&63](o)|0;else n=c[n>>2]|0;if((n|0)==-1){c[e>>2]=0;l=77;break}if(d){c[a>>2]=t;i=m;return}}else l=77;while(0);if((l|0)==77?!d:0){c[a>>2]=t;i=m;return}c[g>>2]=c[g>>2]|2;c[a>>2]=t;i=m;return}function Wq(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function Xq(a){a=a|0;return}function Yq(a){a=a|0;return 2}function Zq(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j+12|0;l=j+8|0;n=j+4|0;m=j;c[n>>2]=c[d>>2];c[m>>2]=c[e>>2];c[l+0>>2]=c[n+0>>2];c[k+0>>2]=c[m+0>>2];Vq(a,b,l,k,f,g,h,134224,134256|0);i=j;return}function _q(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0;o=i;i=i+16|0;k=o+12|0;l=o+8|0;n=o+4|0;m=o;p=d+8|0;p=Wb[c[(c[p>>2]|0)+20>>2]&63](p)|0;c[n>>2]=c[e>>2];c[m>>2]=c[f>>2];f=a[p>>0]|0;if((f&1)==0){f=(f&255)>>>1;e=p+4|0;p=p+4|0}else{q=c[p+8>>2]|0;f=c[p+4>>2]|0;e=q;p=q}q=e+(f<<2)|0;c[l+0>>2]=c[n+0>>2];c[k+0>>2]=c[m+0>>2];Vq(b,d,l,k,g,h,j,p,q);i=o;return}function $q(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;j=i;i=i+16|0;k=j+8|0;m=j+4|0;l=j;sn(m,f);f=Zt(m,135160)|0;wm(c[m>>2]|0)|0;h=h+24|0;c[l>>2]=c[e>>2];c[k+0>>2]=c[l+0>>2];ar(b,h,d,k,g,f);c[a>>2]=c[d>>2];i=j;return}function ar(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;h=i;i=i+16|0;j=h+4|0;k=h;a=a+8|0;a=Wb[c[c[a>>2]>>2]&63](a)|0;c[k>>2]=c[e>>2];e=a+168|0;c[j+0>>2]=c[k+0>>2];f=(rp(d,j,a,e,g,f,0)|0)-a|0;if((f|0)>=168){i=h;return}c[b>>2]=((f|0)/12|0|0)%7|0;i=h;return}function br(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;j=i;i=i+16|0;k=j+8|0;m=j+4|0;l=j;sn(m,f);f=Zt(m,135160)|0;wm(c[m>>2]|0)|0;h=h+16|0;c[l>>2]=c[e>>2];c[k+0>>2]=c[l+0>>2];cr(b,h,d,k,g,f);c[a>>2]=c[d>>2];i=j;return}function cr(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;h=i;i=i+16|0;j=h+4|0;k=h;a=a+8|0;a=Wb[c[(c[a>>2]|0)+4>>2]&63](a)|0;c[k>>2]=c[e>>2];e=a+288|0;c[j+0>>2]=c[k+0>>2];f=(rp(d,j,a,e,g,f,0)|0)-a|0;if((f|0)>=288){i=h;return}c[b>>2]=((f|0)/12|0|0)%12|0;i=h;return}function dr(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;b=i;i=i+16|0;j=b+8|0;l=b+4|0;k=b;sn(l,f);f=Zt(l,135160)|0;wm(c[l>>2]|0)|0;h=h+20|0;c[k>>2]=c[e>>2];c[j+0>>2]=c[k+0>>2];er(0,h,d,j,g,f);c[a>>2]=c[d>>2];i=b;return}function er(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=sr(d,h,f,g,4)|0;if((c[f>>2]&4|0)!=0){i=a;return}if((g|0)<69)f=g+2e3|0;else f=(g+ -69|0)>>>0<31?g+1900|0:g;c[b>>2]=f+ -1900;i=a;return}function fr(b,d,e,f,g,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;n=i;i=i+176|0;l=n+156|0;m=n+148|0;$=n;Q=n+56|0;X=n+60|0;t=n+116|0;q=n+12|0;p=n+108|0;Y=n+16|0;Z=n+20|0;u=n+24|0;_=n+28|0;M=n+32|0;O=n+36|0;N=n+40|0;L=n+104|0;R=n+128|0;w=n+136|0;x=n+144|0;y=n+152|0;z=n+160|0;D=n+64|0;A=n+68|0;C=n+72|0;B=n+76|0;I=n+80|0;K=n+84|0;J=n+88|0;H=n+92|0;E=n+96|0;G=n+100|0;F=n+4|0;W=n+120|0;V=n+44|0;U=n+124|0;o=n+8|0;s=n+48|0;r=n+132|0;S=n+52|0;T=n+140|0;v=n+112|0;c[h>>2]=0;sn($,g);P=Zt($,135160)|0;wm(c[$>>2]|0)|0;do switch(k<<24>>24|0){case 99:{o=d+8|0;o=Wb[c[(c[o>>2]|0)+12>>2]&63](o)|0;c[q>>2]=c[e>>2];c[p>>2]=c[f>>2];r=a[o>>0]|0;if((r&1)==0){r=(r&255)>>>1;s=o+4|0;o=o+4|0}else{$=c[o+8>>2]|0;r=c[o+4>>2]|0;s=$;o=$}c[m+0>>2]=c[q+0>>2];c[l+0>>2]=c[p+0>>2];Vq(t,d,m,l,g,h,j,s,o+(r<<2)|0);c[e>>2]=c[t>>2];break};case 65:case 97:{c[Q>>2]=c[f>>2];c[l+0>>2]=c[Q+0>>2];ar(d,j+24|0,e,l,h,P);break};case 73:{c[R>>2]=c[f>>2];c[l+0>>2]=c[R+0>>2];ir(0,j+8|0,e,l,h,P);break};case 120:{$=c[(c[d>>2]|0)+20>>2]|0;c[V>>2]=c[e>>2];c[U>>2]=c[f>>2];c[m+0>>2]=c[V+0>>2];c[l+0>>2]=c[U+0>>2];Rb[$&63](b,d,m,l,g,h,j);i=n;return};case 119:{c[W>>2]=c[f>>2];c[l+0>>2]=c[W+0>>2];pr(0,j+24|0,e,l,h,P);break};case 104:case 66:case 98:{c[X>>2]=c[f>>2];c[l+0>>2]=c[X+0>>2];cr(d,j+16|0,e,l,h,P);break};case 101:case 100:{c[Y>>2]=c[f>>2];c[l+0>>2]=c[Y+0>>2];gr(0,j+12|0,e,l,h,P);break};case 68:{c[u>>2]=c[e>>2];c[_>>2]=c[f>>2];c[m+0>>2]=c[u+0>>2];c[l+0>>2]=c[_+0>>2];Vq(Z,d,m,l,g,h,j,134256,134288|0);c[e>>2]=c[Z>>2];break};case 37:{c[v>>2]=c[f>>2];c[l+0>>2]=c[v+0>>2];rr(0,e,l,h,P);break};case 106:{c[w>>2]=c[f>>2];c[l+0>>2]=c[w+0>>2];jr(0,j+28|0,e,l,h,P);break};case 109:{c[x>>2]=c[f>>2];c[l+0>>2]=c[x+0>>2];kr(0,j+16|0,e,l,h,P);break};case 77:{c[y>>2]=c[f>>2];c[l+0>>2]=c[y+0>>2];lr(0,j+4|0,e,l,h,P);break};case 116:case 110:{c[z>>2]=c[f>>2];c[l+0>>2]=c[z+0>>2];mr(0,e,l,h,P);break};case 114:{c[C>>2]=c[e>>2];c[B>>2]=c[f>>2];c[m+0>>2]=c[C+0>>2];c[l+0>>2]=c[B+0>>2];Vq(A,d,m,l,g,h,j,134320,134364|0);c[e>>2]=c[A>>2];break};case 112:{c[D>>2]=c[f>>2];c[l+0>>2]=c[D+0>>2];nr(d,j+8|0,e,l,h,P);break};case 84:{c[G>>2]=c[e>>2];c[F>>2]=c[f>>2];c[m+0>>2]=c[G+0>>2];c[l+0>>2]=c[F+0>>2];Vq(E,d,m,l,g,h,j,134392,134424|0);c[e>>2]=c[E>>2];break};case 83:{c[H>>2]=c[f>>2];c[l+0>>2]=c[H+0>>2];or(0,j,e,l,h,P);break};case 82:{c[K>>2]=c[e>>2];c[J>>2]=c[f>>2];c[m+0>>2]=c[K+0>>2];c[l+0>>2]=c[J+0>>2];Vq(I,d,m,l,g,h,j,134368,134388|0);c[e>>2]=c[I>>2];break};case 72:{c[L>>2]=c[f>>2];c[l+0>>2]=c[L+0>>2];hr(0,j+8|0,e,l,h,P);break};case 70:{c[O>>2]=c[e>>2];c[N>>2]=c[f>>2];c[m+0>>2]=c[O+0>>2];c[l+0>>2]=c[N+0>>2];Vq(M,d,m,l,g,h,j,134288,134320|0);c[e>>2]=c[M>>2];break};case 88:{t=d+8|0;t=Wb[c[(c[t>>2]|0)+24>>2]&63](t)|0;c[s>>2]=c[e>>2];c[r>>2]=c[f>>2];f=a[t>>0]|0;if((f&1)==0){p=t+4|0;q=t+4|0;t=(f&255)>>>1}else{q=c[t+8>>2]|0;p=q;t=c[t+4>>2]|0}c[m+0>>2]=c[s+0>>2];c[l+0>>2]=c[r+0>>2];Vq(o,d,m,l,g,h,j,p,q+(t<<2)|0);c[e>>2]=c[o>>2];break};case 121:{c[S>>2]=c[f>>2];c[l+0>>2]=c[S+0>>2];er(0,j+20|0,e,l,h,P);break};case 89:{c[T>>2]=c[f>>2];c[l+0>>2]=c[T+0>>2];qr(0,j+20|0,e,l,h,P);break};default:c[h>>2]=c[h>>2]|4}while(0);c[b>>2]=c[e>>2];i=n;return}function gr(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=sr(d,h,f,g,2)|0;d=c[f>>2]|0;if((d&4|0)==0?(g+ -1|0)>>>0<31:0){c[b>>2]=g;i=a;return}c[f>>2]=d|4;i=a;return}function hr(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=sr(d,h,f,g,2)|0;d=c[f>>2]|0;if((d&4|0)==0&(g|0)<24){c[b>>2]=g;i=a;return}else{c[f>>2]=d|4;i=a;return}}function ir(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=sr(d,h,f,g,2)|0;d=c[f>>2]|0;if((d&4|0)==0?(g+ -1|0)>>>0<12:0){c[b>>2]=g;i=a;return}c[f>>2]=d|4;i=a;return}function jr(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=sr(d,h,f,g,3)|0;d=c[f>>2]|0;if((d&4|0)==0&(g|0)<366){c[b>>2]=g;i=a;return}else{c[f>>2]=d|4;i=a;return}}function kr(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=sr(d,h,f,g,2)|0;d=c[f>>2]|0;if((d&4|0)==0&(g|0)<13){c[b>>2]=g+ -1;i=a;return}else{c[f>>2]=d|4;i=a;return}}function lr(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=sr(d,h,f,g,2)|0;d=c[f>>2]|0;if((d&4|0)==0&(g|0)<60){c[b>>2]=g;i=a;return}else{c[f>>2]=d|4;i=a;return}}function mr(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;a=i;a:while(1){h=c[b>>2]|0;do if((h|0)!=0){j=c[h+12>>2]|0;if((j|0)==(c[h+16>>2]|0))h=Wb[c[(c[h>>2]|0)+36>>2]&63](h)|0;else h=c[j>>2]|0;if((h|0)==-1){c[b>>2]=0;h=1;break}else{h=(c[b>>2]|0)==0;break}}else h=1;while(0);j=c[d>>2]|0;do if((j|0)!=0){k=c[j+12>>2]|0;if((k|0)==(c[j+16>>2]|0))k=Wb[c[(c[j>>2]|0)+36>>2]&63](j)|0;else k=c[k>>2]|0;if(!((k|0)==-1))if(h)break;else{f=j;break a}else{c[d>>2]=0;g=15;break}}else g=15;while(0);if((g|0)==15){g=0;if(h){f=0;break}else j=0}h=c[b>>2]|0;k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0))h=Wb[c[(c[h>>2]|0)+36>>2]&63](h)|0;else h=c[k>>2]|0;if(!(Qb[c[(c[f>>2]|0)+12>>2]&31](f,8192,h)|0)){f=j;break}h=c[b>>2]|0;j=h+12|0;k=c[j>>2]|0;if((k|0)==(c[h+16>>2]|0)){Wb[c[(c[h>>2]|0)+40>>2]&63](h)|0;continue}else{c[j>>2]=k+4;continue}}h=c[b>>2]|0;do if((h|0)!=0){j=c[h+12>>2]|0;if((j|0)==(c[h+16>>2]|0))h=Wb[c[(c[h>>2]|0)+36>>2]&63](h)|0;else h=c[j>>2]|0;if((h|0)==-1){c[b>>2]=0;b=1;break}else{b=(c[b>>2]|0)==0;break}}else b=1;while(0);do if((f|0)!=0){h=c[f+12>>2]|0;if((h|0)==(c[f+16>>2]|0))f=Wb[c[(c[f>>2]|0)+36>>2]&63](f)|0;else f=c[h>>2]|0;if((f|0)==-1){c[d>>2]=0;g=37;break}if(b){i=a;return}}else g=37;while(0);if((g|0)==37?!b:0){i=a;return}c[e>>2]=c[e>>2]|2;i=a;return}function nr(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j+4|0;l=j;b=b+8|0;b=Wb[c[(c[b>>2]|0)+8>>2]&63](b)|0;m=a[b>>0]|0;if((m&1)==0)m=(m&255)>>>1;else m=c[b+4>>2]|0;n=a[b+12>>0]|0;if((n&1)==0)n=(n&255)>>>1;else n=c[b+16>>2]|0;if((m|0)==(0-n|0)){c[g>>2]=c[g>>2]|4;i=j;return}c[l>>2]=c[f>>2];n=b+24|0;c[k+0>>2]=c[l+0>>2];n=rp(e,k,b,n,h,g,0)|0;h=n-b|0;if((n|0)==(b|0)?(c[d>>2]|0)==12:0){c[d>>2]=0;i=j;return}if((h|0)!=12){i=j;return}h=c[d>>2]|0;if((h|0)>=12){i=j;return}c[d>>2]=h+12;i=j;return}function or(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=sr(d,h,f,g,2)|0;d=c[f>>2]|0;if((d&4|0)==0&(g|0)<61){c[b>>2]=g;i=a;return}else{c[f>>2]=d|4;i=a;return}}function pr(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=sr(d,h,f,g,1)|0;d=c[f>>2]|0;if((d&4|0)==0&(g|0)<7){c[b>>2]=g;i=a;return}else{c[f>>2]=d|4;i=a;return}}function qr(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];g=sr(d,h,f,g,4)|0;if((c[f>>2]&4|0)!=0){i=a;return}c[b>>2]=g+ -1900;i=a;return}function rr(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;a=i;j=c[b>>2]|0;do if((j|0)!=0){h=c[j+12>>2]|0;if((h|0)==(c[j+16>>2]|0))h=Wb[c[(c[j>>2]|0)+36>>2]&63](j)|0;else h=c[h>>2]|0;if((h|0)==-1){c[b>>2]=0;j=1;break}else{j=(c[b>>2]|0)==0;break}}else j=1;while(0);h=c[d>>2]|0;do if((h|0)!=0){k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0))k=Wb[c[(c[h>>2]|0)+36>>2]&63](h)|0;else k=c[k>>2]|0;if(!((k|0)==-1))if(j)break;else{g=16;break}else{c[d>>2]=0;g=14;break}}else g=14;while(0);if((g|0)==14)if(j)g=16;else h=0;if((g|0)==16){c[e>>2]=c[e>>2]|6;i=a;return}k=c[b>>2]|0;j=c[k+12>>2]|0;if((j|0)==(c[k+16>>2]|0))j=Wb[c[(c[k>>2]|0)+36>>2]&63](k)|0;else j=c[j>>2]|0;if(!((Qb[c[(c[f>>2]|0)+52>>2]&31](f,j,0)|0)<<24>>24==37)){c[e>>2]=c[e>>2]|4;i=a;return}j=c[b>>2]|0;k=j+12|0;f=c[k>>2]|0;if((f|0)==(c[j+16>>2]|0))Wb[c[(c[j>>2]|0)+40>>2]&63](j)|0;else c[k>>2]=f+4;f=c[b>>2]|0;do if((f|0)!=0){j=c[f+12>>2]|0;if((j|0)==(c[f+16>>2]|0))f=Wb[c[(c[f>>2]|0)+36>>2]&63](f)|0;else f=c[j>>2]|0;if((f|0)==-1){c[b>>2]=0;b=1;break}else{b=(c[b>>2]|0)==0;break}}else b=1;while(0);do if((h|0)!=0){f=c[h+12>>2]|0;if((f|0)==(c[h+16>>2]|0))f=Wb[c[(c[h>>2]|0)+36>>2]&63](h)|0;else f=c[f>>2]|0;if((f|0)==-1){c[d>>2]=0;g=38;break}if(b){i=a;return}}else g=38;while(0);if((g|0)==38?!b:0){i=a;return}c[e>>2]=c[e>>2]|2;i=a;return}function sr(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;h=i;k=c[a>>2]|0;do if((k|0)!=0){j=c[k+12>>2]|0;if((j|0)==(c[k+16>>2]|0))j=Wb[c[(c[k>>2]|0)+36>>2]&63](k)|0;else j=c[j>>2]|0;if((j|0)==-1){c[a>>2]=0;k=1;break}else{k=(c[a>>2]|0)==0;break}}else k=1;while(0);j=c[b>>2]|0;do if((j|0)!=0){l=c[j+12>>2]|0;if((l|0)==(c[j+16>>2]|0))l=Wb[c[(c[j>>2]|0)+36>>2]&63](j)|0;else l=c[l>>2]|0;if(!((l|0)==-1))if(k)break;else{g=16;break}else{c[b>>2]=0;g=14;break}}else g=14;while(0);if((g|0)==14)if(k)g=16;else j=0;if((g|0)==16){c[d>>2]=c[d>>2]|6;o=0;i=h;return o|0}k=c[a>>2]|0;l=c[k+12>>2]|0;if((l|0)==(c[k+16>>2]|0))k=Wb[c[(c[k>>2]|0)+36>>2]&63](k)|0;else k=c[l>>2]|0;if(!(Qb[c[(c[e>>2]|0)+12>>2]&31](e,2048,k)|0)){c[d>>2]=c[d>>2]|4;o=0;i=h;return o|0}m=(Qb[c[(c[e>>2]|0)+52>>2]&31](e,k,0)|0)<<24>>24;n=c[a>>2]|0;l=n+12|0;k=c[l>>2]|0;if((k|0)==(c[n+16>>2]|0)){Wb[c[(c[n>>2]|0)+40>>2]&63](n)|0;k=j;l=j;j=m}else{c[l>>2]=k+4;k=j;l=j;j=m}while(1){j=j+ -48|0;f=f+ -1|0;m=c[a>>2]|0;do if((m|0)!=0){n=c[m+12>>2]|0;if((n|0)==(c[m+16>>2]|0))m=Wb[c[(c[m>>2]|0)+36>>2]&63](m)|0;else m=c[n>>2]|0;if((m|0)==-1){c[a>>2]=0;n=1;break}else{n=(c[a>>2]|0)==0;break}}else n=1;while(0);do if((l|0)!=0){m=c[l+12>>2]|0;if((m|0)==(c[l+16>>2]|0))l=Wb[c[(c[l>>2]|0)+36>>2]&63](l)|0;else l=c[m>>2]|0;if((l|0)==-1){c[b>>2]=0;l=0;o=1;m=0;break}else{l=k;o=(k|0)==0;m=k;break}}else{l=k;o=1;m=0}while(0);k=c[a>>2]|0;if(!((n^o)&(f|0)>0))break;n=c[k+12>>2]|0;if((n|0)==(c[k+16>>2]|0))k=Wb[c[(c[k>>2]|0)+36>>2]&63](k)|0;else k=c[n>>2]|0;if(!(Qb[c[(c[e>>2]|0)+12>>2]&31](e,2048,k)|0)){g=63;break}j=((Qb[c[(c[e>>2]|0)+52>>2]&31](e,k,0)|0)<<24>>24)+(j*10|0)|0;n=c[a>>2]|0;k=n+12|0;o=c[k>>2]|0;if((o|0)==(c[n+16>>2]|0)){Wb[c[(c[n>>2]|0)+40>>2]&63](n)|0;k=l;l=m;continue}else{c[k>>2]=o+4;k=l;l=m;continue}}if((g|0)==63){i=h;return j|0}do if((k|0)!=0){e=c[k+12>>2]|0;if((e|0)==(c[k+16>>2]|0))e=Wb[c[(c[k>>2]|0)+36>>2]&63](k)|0;else e=c[e>>2]|0;if((e|0)==-1){c[a>>2]=0;a=1;break}else{a=(c[a>>2]|0)==0;break}}else a=1;while(0);do if((l|0)!=0){e=c[l+12>>2]|0;if((e|0)==(c[l+16>>2]|0))e=Wb[c[(c[l>>2]|0)+36>>2]&63](l)|0;else e=c[e>>2]|0;if((e|0)==-1){c[b>>2]=0;g=60;break}if(a){o=j;i=h;return o|0}}else g=60;while(0);if((g|0)==60?!a:0){o=j;i=h;return o|0}c[d>>2]=c[d>>2]|2;o=j;i=h;return o|0}function tr(a){a=a|0;var b=0;b=i;vr(a+8|0);Sw(a);i=b;return}function ur(a){a=a|0;var b=0;b=i;vr(a+8|0);i=b;return}function vr(a){a=a|0;var b=0,d=0;b=i;d=c[a>>2]|0;if((d|0)==(np()|0)){i=b;return}Ab(c[a>>2]|0);i=b;return}function wr(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0;g=i;i=i+112|0;f=g+4|0;l=g;c[l>>2]=f+100;xr(d+8|0,f,l,h,j,k);d=c[l>>2]|0;k=c[e>>2]|0;if((f|0)==(d|0)){l=k;c[b>>2]=l;i=g;return}else e=k;do{l=a[f>>0]|0;do if((e|0)!=0){j=e+24|0;h=c[j>>2]|0;if((h|0)==(c[e+28>>2]|0)){l=(dc[c[(c[e>>2]|0)+52>>2]&15](e,l&255)|0)==-1;k=l?0:k;e=l?0:e;break}else{c[j>>2]=h+1;a[h>>0]=l;break}}else e=0;while(0);f=f+1|0}while((f|0)!=(d|0));c[b>>2]=k;i=g;return}function xr(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;j=i;i=i+16|0;k=j;a[k>>0]=37;m=k+1|0;a[m>>0]=g;l=k+2|0;a[l>>0]=h;a[k+3>>0]=0;if(!(h<<24>>24==0)){a[m>>0]=h;a[l>>0]=g}c[e>>2]=d+(Va(d|0,(c[e>>2]|0)-d|0,k|0,f|0,c[b>>2]|0)|0);i=j;return}function yr(a){a=a|0;var b=0;b=i;vr(a+8|0);Sw(a);i=b;return}function zr(a){a=a|0;var b=0;b=i;vr(a+8|0);i=b;return}function Ar(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0;f=i;i=i+416|0;e=f+8|0;k=f;c[k>>2]=e+400;Br(b+8|0,e,k,g,h,j);b=c[k>>2]|0;j=c[d>>2]|0;if((e|0)==(b|0)){k=j;c[a>>2]=k;i=f;return}else d=j;do{g=c[e>>2]|0;if((d|0)==0)d=0;else{h=d+24|0;k=c[h>>2]|0;if((k|0)==(c[d+28>>2]|0))g=dc[c[(c[d>>2]|0)+52>>2]&15](d,g)|0;else{c[h>>2]=k+4;c[k>>2]=g}k=(g|0)==-1;j=k?0:j;d=k?0:d}e=e+4|0}while((e|0)!=(b|0));c[a>>2]=j;i=f;return}function Br(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+128|0;l=h+16|0;m=h+12|0;j=h;k=h+8|0;c[m>>2]=l+100;xr(a,l,m,e,f,g);e=j;c[e>>2]=0;c[e+4>>2]=0;c[k>>2]=l;e=(c[d>>2]|0)-b>>2;g=Za(c[a>>2]|0)|0;a=xw(b,k,e,j)|0;if((g|0)!=0)Za(g|0)|0;if((a|0)==-1)xs(136048);else{c[d>>2]=b+(a<<2);i=h;return}}function Cr(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function Dr(a){a=a|0;return}function Er(a){a=a|0;return 127}function Fr(a){a=a|0;return 127}function Gr(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function Hr(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function Ir(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function Jr(a,b){a=a|0;b=b|0;b=i;Rm(a,1,45);i=b;return}function Kr(a){a=a|0;return 0}function Lr(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function Mr(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function Nr(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function Or(a){a=a|0;return}function Pr(a){a=a|0;return 127}function Qr(a){a=a|0;return 127}function Rr(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function Sr(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function Tr(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function Ur(a,b){a=a|0;b=b|0;b=i;Rm(a,1,45);i=b;return}function Vr(a){a=a|0;return 0}function Wr(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function Xr(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function Yr(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function Zr(a){a=a|0;return}function _r(a){a=a|0;return 2147483647}function $r(a){a=a|0;return 2147483647}function as(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function bs(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function cs(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function ds(a,b){a=a|0;b=b|0;b=i;en(a,1,45);i=b;return}function es(a){a=a|0;return 0}function fs(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function gs(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function hs(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function is(a){a=a|0;return}function js(a){a=a|0;return 2147483647}function ks(a){a=a|0;return 2147483647}function ls(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function ms(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function ns(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function os(a,b){a=a|0;b=b|0;b=i;en(a,1,45);i=b;return}function ps(a){a=a|0;return 0}function qs(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function rs(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function ss(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function ts(a){a=a|0;return}function us(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;n=i;i=i+240|0;r=n;x=n+136|0;m=n+8|0;s=n+4|0;o=n+20|0;v=n+236|0;y=n+16|0;t=n+124|0;q=n+24|0;c[m>>2]=x;d=m+4|0;c[d>>2]=113;x=x+100|0;sn(o,h);w=Zt(o,135168)|0;a[v>>0]=0;c[y>>2]=c[f>>2];h=c[h+4>>2]|0;c[r+0>>2]=c[y+0>>2];do if(ws(e,r,g,o,h,j,v,w,m,s,x)|0){ac[c[(c[w>>2]|0)+32>>2]&7](w,134784,134794,t)|0;w=c[s>>2]|0;g=c[m>>2]|0;h=w-g|0;if((h|0)>98){h=Nx(h+2|0)|0;if((h|0)==0)Mx();else{p=h;u=h}}else{p=0;u=q}if((a[v>>0]|0)==0)h=u;else{a[u>>0]=45;h=u+1|0}if(g>>>0<w>>>0){u=t+10|0;v=t;do{w=a[g>>0]|0;x=t;while(1){if((a[x>>0]|0)==w<<24>>24)break;x=x+1|0;if((x|0)==(u|0)){x=u;break}}a[h>>0]=a[134784+(x-v)>>0]|0;g=g+1|0;h=h+1|0}while(g>>>0<(c[s>>2]|0)>>>0)}a[h>>0]=0;c[r>>2]=k;if((Cw(q,134800,r)|0)==1){Ox(p);break}else xs(134808)}while(0);p=c[e>>2]|0;do if((p|0)!=0){if((c[p+12>>2]|0)==(c[p+16>>2]|0))if((Wb[c[(c[p>>2]|0)+36>>2]&63](p)|0)==-1){c[e>>2]=0;p=0;break}else{p=c[e>>2]|0;break}}else p=0;while(0);k=(p|0)==0;p=c[f>>2]|0;do if((p|0)!=0){if((c[p+12>>2]|0)!=(c[p+16>>2]|0))if(k)break;else{l=28;break}if(!((Wb[c[(c[p>>2]|0)+36>>2]&63](p)|0)==-1))if(k)break;else{l=28;break}else{c[f>>2]=0;l=26;break}}else l=26;while(0);if((l|0)==26?k:0)l=28;if((l|0)==28)c[j>>2]=c[j>>2]|2;c[b>>2]=c[e>>2];wm(c[o>>2]|0)|0;l=c[m>>2]|0;c[m>>2]=0;if((l|0)==0){i=n;return}Tb[c[d>>2]&127](l);i=n;return}function vs(a){a=a|0;return}



function ws(e,f,g,h,j,k,l,m,n,o,p){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0;q=i;i=i+496|0;F=q+488|0;U=q+24|0;r=q+472|0;B=q+440|0;A=q+468|0;z=q+480|0;D=q+492|0;E=q+493|0;w=q;u=q+444|0;v=q+12|0;t=q+456|0;s=q+424|0;C=q+436|0;x=q+484|0;c[F>>2]=p;c[r>>2]=U;p=r+4|0;c[p>>2]=113;c[B>>2]=U;c[A>>2]=U+400;c[z>>2]=0;c[w+0>>2]=0;c[w+4>>2]=0;c[w+8>>2]=0;c[u+0>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;c[v+0>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;c[t+0>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;c[s+0>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;As(g,h,z,D,E,w,u,v,t,C);c[o>>2]=c[n>>2];I=m+8|0;m=t+1|0;H=t+4|0;g=t+8|0;h=v+1|0;J=v+4|0;G=v+8|0;M=(j&512|0)!=0;Q=u+1|0;O=u+8|0;P=u+4|0;N=s+1|0;L=s+8|0;S=s+4|0;T=z+3|0;K=w+4|0;R=0;j=0;a:while(1){V=c[e>>2]|0;do if((V|0)!=0){if((c[V+12>>2]|0)==(c[V+16>>2]|0))if((Wb[c[(c[V>>2]|0)+36>>2]&63](V)|0)==-1){c[e>>2]=0;V=0;break}else{V=c[e>>2]|0;break}}else V=0;while(0);W=(V|0)==0;V=c[f>>2]|0;do if((V|0)!=0){if((c[V+12>>2]|0)!=(c[V+16>>2]|0))if(W)break;else{y=250;break a}if(!((Wb[c[(c[V>>2]|0)+36>>2]&63](V)|0)==-1))if(W)break;else{y=250;break a}else{c[f>>2]=0;y=12;break}}else y=12;while(0);if((y|0)==12){y=0;if(W){V=0;y=250;break}else V=0}b:do switch(a[z+R>>0]|0){case 0:{y=27;break};case 2:{if(!((j|0)!=0|R>>>0<2)){if((R|0)==2)W=(a[T>>0]|0)!=0;else W=0;if(!(M|W)){j=0;break b}}Z=a[u>>0]|0;X=(Z&1)==0;Y=X?Q:c[O>>2]|0;c:do if((R|0)!=0?(d[z+(R+ -1)>>0]|0)<2:0){_=(Z&255)>>>1;W=c[O>>2]|0;$=c[P>>2]|0;while(1){if((Y|0)==((X?Q:W)+(X?_:$)|0))break;aa=a[Y>>0]|0;if(!(aa<<24>>24>-1))break;if((b[(c[I>>2]|0)+(aa<<24>>24<<1)>>1]&8192)==0)break;else Y=Y+1|0}ba=Y-(X?Q:W)|0;_=a[s>>0]|0;$=(_&1)==0;if($)aa=(_&255)>>>1;else aa=c[S>>2]|0;d:do if(!(ba>>>0>aa>>>0)){if($){$=s+(((_&255)>>>1)-ba)+1|0;_=(_&255)>>>1;aa=N}else{aa=c[L>>2]|0;_=c[S>>2]|0;$=aa+(_-ba)|0}_=aa+_|0;if(($|0)==(_|0)){_=V;$=V;W=Y;break c}else aa=X?Q:W;while(1){if((a[$>>0]|0)!=(a[aa>>0]|0))break d;$=$+1|0;if(($|0)==(_|0)){_=V;$=V;W=Y;break c}else aa=aa+1|0}}while(0);_=V;$=V;W=X?Q:W}else{_=V;$=V;W=Y}while(0);e:while(1){if((Z&1)==0){V=(Z&255)>>>1;X=Q}else{V=c[P>>2]|0;X=c[O>>2]|0}if((W|0)==(X+V|0)){V=_;break}V=c[e>>2]|0;do if((V|0)!=0){if((c[V+12>>2]|0)==(c[V+16>>2]|0))if((Wb[c[(c[V>>2]|0)+36>>2]&63](V)|0)==-1){c[e>>2]=0;V=0;break}else{V=c[e>>2]|0;break}}else V=0;while(0);X=(V|0)==0;do if(($|0)!=0){if((c[$+12>>2]|0)!=(c[$+16>>2]|0))if(X){V=_;break}else{V=_;break e}if(!((Wb[c[(c[$>>2]|0)+36>>2]&63]($)|0)==-1))if(X^(_|0)==0){V=_;$=_;break}else{V=_;break e}else{c[f>>2]=0;V=0;y=149;break}}else{V=_;y=149}while(0);if((y|0)==149){y=0;if(X)break;else $=0}X=c[e>>2]|0;Y=c[X+12>>2]|0;if((Y|0)==(c[X+16>>2]|0))X=Wb[c[(c[X>>2]|0)+36>>2]&63](X)|0;else X=d[Y>>0]|0;if(!((X&255)<<24>>24==(a[W>>0]|0)))break;Z=c[e>>2]|0;Y=Z+12|0;X=c[Y>>2]|0;if((X|0)==(c[Z+16>>2]|0))Wb[c[(c[Z>>2]|0)+40>>2]&63](Z)|0;else c[Y>>2]=X+1;_=V;Z=a[u>>0]|0;W=W+1|0}if(M){X=a[u>>0]|0;if((X&1)==0){Y=(X&255)>>>1;X=Q}else{Y=c[P>>2]|0;X=c[O>>2]|0}if((W|0)!=(X+Y|0)){y=164;break a}}break};case 4:{W=a[E>>0]|0;Z=V;Y=V;X=0;f:while(1){V=c[e>>2]|0;do if((V|0)!=0){if((c[V+12>>2]|0)==(c[V+16>>2]|0))if((Wb[c[(c[V>>2]|0)+36>>2]&63](V)|0)==-1){c[e>>2]=0;V=0;break}else{V=c[e>>2]|0;break}}else V=0;while(0);_=(V|0)==0;do if((Y|0)!=0){if((c[Y+12>>2]|0)!=(c[Y+16>>2]|0))if(_){V=Z;break}else{V=Z;break f}if(!((Wb[c[(c[Y>>2]|0)+36>>2]&63](Y)|0)==-1))if(_^(Z|0)==0){V=Z;Y=Z;break}else{V=Z;break f}else{c[f>>2]=0;V=0;y=175;break}}else{V=Z;y=175}while(0);if((y|0)==175){y=0;if(_)break;else Y=0}_=c[e>>2]|0;Z=c[_+12>>2]|0;if((Z|0)==(c[_+16>>2]|0))_=Wb[c[(c[_>>2]|0)+36>>2]&63](_)|0;else _=d[Z>>0]|0;Z=_&255;if(Z<<24>>24>-1?!((b[(c[I>>2]|0)+(_<<24>>24<<1)>>1]&2048)==0):0){_=c[o>>2]|0;if((_|0)==(c[F>>2]|0)){Bs(n,o,F);_=c[o>>2]|0}c[o>>2]=_+1;a[_>>0]=Z;X=X+1|0}else{_=a[w>>0]|0;if((_&1)==0)_=(_&255)>>>1;else _=c[K>>2]|0;if(!((X|0)!=0&(_|0)!=0&Z<<24>>24==W<<24>>24))break;if((U|0)==(c[A>>2]|0)){Cs(r,B,A);U=c[B>>2]|0}ba=U+4|0;c[B>>2]=ba;c[U>>2]=X;U=ba;X=0}_=c[e>>2]|0;$=_+12|0;Z=c[$>>2]|0;if((Z|0)==(c[_+16>>2]|0)){Wb[c[(c[_>>2]|0)+40>>2]&63](_)|0;Z=V;continue}else{c[$>>2]=Z+1;Z=V;continue}}if(!((X|0)==0?1:(c[r>>2]|0)==(U|0))){if((U|0)==(c[A>>2]|0)){Cs(r,B,A);U=c[B>>2]|0}ba=U+4|0;c[B>>2]=ba;c[U>>2]=X;U=ba}W=c[C>>2]|0;if((W|0)>0){X=c[e>>2]|0;do if((X|0)!=0){if((c[X+12>>2]|0)==(c[X+16>>2]|0))if((Wb[c[(c[X>>2]|0)+36>>2]&63](X)|0)==-1){c[e>>2]=0;X=0;break}else{X=c[e>>2]|0;break}}else X=0;while(0);X=(X|0)==0;do if((V|0)!=0){if((c[V+12>>2]|0)!=(c[V+16>>2]|0))if(X)break;else{y=216;break a}if(!((Wb[c[(c[V>>2]|0)+36>>2]&63](V)|0)==-1))if(X^(V|0)==0)break;else{y=216;break a}else{c[f>>2]=0;y=210;break}}else y=210;while(0);if((y|0)==210){y=0;if(X){y=216;break a}else V=0}Y=c[e>>2]|0;X=c[Y+12>>2]|0;if((X|0)==(c[Y+16>>2]|0))X=Wb[c[(c[Y>>2]|0)+36>>2]&63](Y)|0;else X=d[X>>0]|0;if(!((X&255)<<24>>24==(a[D>>0]|0))){y=216;break a}X=c[e>>2]|0;Y=X+12|0;Z=c[Y>>2]|0;if((Z|0)==(c[X+16>>2]|0)){Wb[c[(c[X>>2]|0)+40>>2]&63](X)|0;Y=V;X=V}else{c[Y>>2]=Z+1;Y=V;X=V}while(1){V=c[e>>2]|0;do if((V|0)!=0){if((c[V+12>>2]|0)==(c[V+16>>2]|0))if((Wb[c[(c[V>>2]|0)+36>>2]&63](V)|0)==-1){c[e>>2]=0;V=0;break}else{V=c[e>>2]|0;break}}else V=0;while(0);Z=(V|0)==0;do if((X|0)!=0){if((c[X+12>>2]|0)!=(c[X+16>>2]|0))if(Z){V=Y;break}else{y=237;break a}if(!((Wb[c[(c[X>>2]|0)+36>>2]&63](X)|0)==-1))if(Z^(Y|0)==0){V=Y;X=Y;break}else{y=237;break a}else{c[f>>2]=0;V=0;y=230;break}}else{V=Y;y=230}while(0);if((y|0)==230){y=0;if(Z){y=237;break a}else X=0}Z=c[e>>2]|0;Y=c[Z+12>>2]|0;if((Y|0)==(c[Z+16>>2]|0))Y=Wb[c[(c[Z>>2]|0)+36>>2]&63](Z)|0;else Y=d[Y>>0]|0;if(!((Y&255)<<24>>24>-1)){y=237;break a}if((b[(c[I>>2]|0)+(Y<<24>>24<<1)>>1]&2048)==0){y=237;break a}if((c[o>>2]|0)==(c[F>>2]|0))Bs(n,o,F);Z=c[e>>2]|0;Y=c[Z+12>>2]|0;if((Y|0)==(c[Z+16>>2]|0))Y=Wb[c[(c[Z>>2]|0)+36>>2]&63](Z)|0;else Y=d[Y>>0]|0;_=c[o>>2]|0;c[o>>2]=_+1;a[_>>0]=Y;W=W+ -1|0;c[C>>2]=W;_=c[e>>2]|0;Z=_+12|0;Y=c[Z>>2]|0;if((Y|0)==(c[_+16>>2]|0))Wb[c[(c[_>>2]|0)+40>>2]&63](_)|0;else c[Z>>2]=Y+1;if((W|0)<=0)break;else Y=V}}if((c[o>>2]|0)==(c[n>>2]|0)){y=248;break a}break};case 3:{W=a[v>>0]|0;Y=(W&1)==0;if(Y)_=(W&255)>>>1;else _=c[J>>2]|0;X=a[t>>0]|0;Z=(X&1)==0;if(Z)$=(X&255)>>>1;else $=c[H>>2]|0;if((_|0)!=(0-$|0)){if(Y)_=(W&255)>>>1;else _=c[J>>2]|0;if((_|0)!=0){if(Z)Z=(X&255)>>>1;else Z=c[H>>2]|0;if((Z|0)!=0){Y=c[e>>2]|0;X=c[Y+12>>2]|0;if((X|0)==(c[Y+16>>2]|0)){Z=Wb[c[(c[Y>>2]|0)+36>>2]&63](Y)|0;W=a[v>>0]|0}else Z=d[X>>0]|0;X=c[e>>2]|0;_=X+12|0;$=c[_>>2]|0;Y=($|0)==(c[X+16>>2]|0);if((Z&255)<<24>>24==(a[((W&1)==0?h:c[G>>2]|0)>>0]|0)){if(Y)Wb[c[(c[X>>2]|0)+40>>2]&63](X)|0;else c[_>>2]=$+1;W=a[v>>0]|0;if((W&1)==0)W=(W&255)>>>1;else W=c[J>>2]|0;j=W>>>0>1?v:j;break b}if(Y)W=Wb[c[(c[X>>2]|0)+36>>2]&63](X)|0;else W=d[$>>0]|0;if(!((W&255)<<24>>24==(a[((a[t>>0]&1)==0?m:c[g>>2]|0)>>0]|0))){y=113;break a}W=c[e>>2]|0;X=W+12|0;Y=c[X>>2]|0;if((Y|0)==(c[W+16>>2]|0))Wb[c[(c[W>>2]|0)+40>>2]&63](W)|0;else c[X>>2]=Y+1;a[l>>0]=1;W=a[t>>0]|0;if((W&1)==0)W=(W&255)>>>1;else W=c[H>>2]|0;j=W>>>0>1?t:j;break b}}if(Y)_=(W&255)>>>1;else _=c[J>>2]|0;Z=c[e>>2]|0;Y=c[Z+12>>2]|0;$=(Y|0)==(c[Z+16>>2]|0);if((_|0)==0){if($){W=Wb[c[(c[Z>>2]|0)+36>>2]&63](Z)|0;X=a[t>>0]|0}else W=d[Y>>0]|0;if(!((W&255)<<24>>24==(a[((X&1)==0?m:c[g>>2]|0)>>0]|0)))break b;W=c[e>>2]|0;X=W+12|0;Y=c[X>>2]|0;if((Y|0)==(c[W+16>>2]|0))Wb[c[(c[W>>2]|0)+40>>2]&63](W)|0;else c[X>>2]=Y+1;a[l>>0]=1;W=a[t>>0]|0;if((W&1)==0)W=(W&255)>>>1;else W=c[H>>2]|0;j=W>>>0>1?t:j;break b}if($){X=Wb[c[(c[Z>>2]|0)+36>>2]&63](Z)|0;W=a[v>>0]|0}else X=d[Y>>0]|0;if(!((X&255)<<24>>24==(a[((W&1)==0?h:c[G>>2]|0)>>0]|0))){a[l>>0]=1;break b}W=c[e>>2]|0;X=W+12|0;Y=c[X>>2]|0;if((Y|0)==(c[W+16>>2]|0))Wb[c[(c[W>>2]|0)+40>>2]&63](W)|0;else c[X>>2]=Y+1;W=a[v>>0]|0;if((W&1)==0)W=(W&255)>>>1;else W=c[J>>2]|0;j=W>>>0>1?v:j}break};case 1:{if((R|0)==3){y=250;break a}y=c[e>>2]|0;W=c[y+12>>2]|0;if((W|0)==(c[y+16>>2]|0))y=Wb[c[(c[y>>2]|0)+36>>2]&63](y)|0;else y=d[W>>0]|0;if(!((y&255)<<24>>24>-1)){y=26;break a}if((b[(c[I>>2]|0)+(y<<24>>24<<1)>>1]&8192)==0){y=26;break a}W=c[e>>2]|0;X=W+12|0;y=c[X>>2]|0;if((y|0)==(c[W+16>>2]|0))y=Wb[c[(c[W>>2]|0)+40>>2]&63](W)|0;else{c[X>>2]=y+1;y=d[y>>0]|0}$m(s,y&255);y=27;break};default:{}}while(0);g:do if((y|0)==27){y=0;if((R|0)==3){y=250;break a}else{X=V;W=V}while(1){V=c[e>>2]|0;do if((V|0)!=0){if((c[V+12>>2]|0)==(c[V+16>>2]|0))if((Wb[c[(c[V>>2]|0)+36>>2]&63](V)|0)==-1){c[e>>2]=0;V=0;break}else{V=c[e>>2]|0;break}}else V=0;while(0);Y=(V|0)==0;do if((W|0)!=0){if((c[W+12>>2]|0)!=(c[W+16>>2]|0))if(Y){V=X;break}else{V=X;break g}if(!((Wb[c[(c[W>>2]|0)+36>>2]&63](W)|0)==-1))if(Y^(X|0)==0){V=X;W=X;break}else{V=X;break g}else{c[f>>2]=0;V=0;y=38;break}}else{V=X;y=38}while(0);if((y|0)==38){y=0;if(Y)break g;else W=0}Y=c[e>>2]|0;X=c[Y+12>>2]|0;if((X|0)==(c[Y+16>>2]|0))X=Wb[c[(c[Y>>2]|0)+36>>2]&63](Y)|0;else X=d[X>>0]|0;if(!((X&255)<<24>>24>-1))break g;if((b[(c[I>>2]|0)+(X<<24>>24<<1)>>1]&8192)==0)break g;Y=c[e>>2]|0;Z=Y+12|0;X=c[Z>>2]|0;if((X|0)==(c[Y+16>>2]|0))X=Wb[c[(c[Y>>2]|0)+40>>2]&63](Y)|0;else{c[Z>>2]=X+1;X=d[X>>0]|0}$m(s,X&255);X=V}}while(0);R=R+1|0;if(!(R>>>0<4)){y=250;break}}h:do if((y|0)==26){c[k>>2]=c[k>>2]|4;x=0}else if((y|0)==113){c[k>>2]=c[k>>2]|4;x=0}else if((y|0)==164){c[k>>2]=c[k>>2]|4;x=0}else if((y|0)==216){c[k>>2]=c[k>>2]|4;x=0}else if((y|0)==237){c[k>>2]=c[k>>2]|4;x=0}else if((y|0)==248){c[k>>2]=c[k>>2]|4;x=0}else if((y|0)==250){i:do if((j|0)!=0){n=j+1|0;l=j+8|0;z=j+4|0;C=V;D=V;A=1;j:while(1){B=a[j>>0]|0;if((B&1)==0)B=(B&255)>>>1;else B=c[z>>2]|0;if(!(A>>>0<B>>>0))break i;B=c[e>>2]|0;do if((B|0)!=0){if((c[B+12>>2]|0)==(c[B+16>>2]|0))if((Wb[c[(c[B>>2]|0)+36>>2]&63](B)|0)==-1){c[e>>2]=0;B=0;break}else{B=c[e>>2]|0;break}}else B=0;while(0);E=(B|0)==0;do if((D|0)!=0){if((c[D+12>>2]|0)!=(c[D+16>>2]|0))if(E){B=C;break}else break j;if(!((Wb[c[(c[D>>2]|0)+36>>2]&63](D)|0)==-1))if(E^(C|0)==0){B=C;D=C;break}else break j;else{c[f>>2]=0;B=0;y=266;break}}else{B=C;y=266}while(0);if((y|0)==266){y=0;if(E)break;else D=0}C=c[e>>2]|0;E=c[C+12>>2]|0;if((E|0)==(c[C+16>>2]|0))C=Wb[c[(c[C>>2]|0)+36>>2]&63](C)|0;else C=d[E>>0]|0;if((a[j>>0]&1)==0)E=n;else E=c[l>>2]|0;if(!((C&255)<<24>>24==(a[E+A>>0]|0)))break;A=A+1|0;o=c[e>>2]|0;E=o+12|0;C=c[E>>2]|0;if((C|0)==(c[o+16>>2]|0)){Wb[c[(c[o>>2]|0)+40>>2]&63](o)|0;C=B;continue}else{c[E>>2]=C+1;C=B;continue}}c[k>>2]=c[k>>2]|4;x=0;break h}while(0);f=c[r>>2]|0;if((f|0)!=(U|0)?(c[x>>2]=0,Ds(w,f,U,x),(c[x>>2]|0)!=0):0){c[k>>2]=c[k>>2]|4;x=0}else x=1}while(0);Tm(s);Tm(t);Tm(v);Tm(u);Tm(w);s=c[r>>2]|0;c[r>>2]=0;if((s|0)==0){i=q;return x|0}Tb[c[p>>2]&127](s);i=q;return x|0}function xs(a){a=a|0;var b=0;b=Ma(8)|0;zm(b,a);zb(b|0,143784,100)}function ys(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;d=i;i=i+144|0;u=d;t=d+28|0;n=d+8|0;q=d+24|0;p=d+20|0;r=d+128|0;v=d+16|0;c[n>>2]=t;l=n+4|0;c[l>>2]=113;t=t+100|0;sn(p,h);s=Zt(p,135168)|0;a[r>>0]=0;o=c[f>>2]|0;c[v>>2]=o;h=c[h+4>>2]|0;c[u+0>>2]=c[v+0>>2];if(ws(e,u,g,p,h,j,r,s,n,q,t)|0){if((a[k>>0]&1)==0){a[k+1>>0]=0;a[k>>0]=0}else{a[c[k+8>>2]>>0]=0;c[k+4>>2]=0}if((a[r>>0]|0)!=0)$m(k,dc[c[(c[s>>2]|0)+28>>2]&15](s,45)|0);h=dc[c[(c[s>>2]|0)+28>>2]&15](s,48)|0;r=c[n>>2]|0;q=c[q>>2]|0;g=q+ -1|0;a:do if(r>>>0<g>>>0)while(1){s=r+1|0;if(!((a[r>>0]|0)==h<<24>>24))break a;if(s>>>0<g>>>0)r=s;else{r=s;break}}while(0);zs(k,r,q)|0}k=c[e>>2]|0;do if((k|0)!=0){if((c[k+12>>2]|0)==(c[k+16>>2]|0))if((Wb[c[(c[k>>2]|0)+36>>2]&63](k)|0)==-1){c[e>>2]=0;k=0;break}else{k=c[e>>2]|0;break}}else k=0;while(0);k=(k|0)==0;do if((o|0)!=0){if((c[o+12>>2]|0)!=(c[o+16>>2]|0))if(k)break;else{m=23;break}if(!((Wb[c[(c[o>>2]|0)+36>>2]&63](o)|0)==-1))if(k^(o|0)==0)break;else{m=23;break}else{c[f>>2]=0;m=21;break}}else m=21;while(0);if((m|0)==21?k:0)m=23;if((m|0)==23)c[j>>2]=c[j>>2]|2;c[b>>2]=c[e>>2];wm(c[p>>2]|0)|0;b=c[n>>2]|0;c[n>>2]=0;if((b|0)==0){i=d;return}Tb[c[l>>2]&127](b);i=d;return}function zs(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;j=d;g=a[b>>0]|0;if((g&1)==0){k=g;l=10;g=(g&255)>>>1}else{l=c[b>>2]|0;k=l&255;l=(l&-2)+ -1|0;g=c[b+4>>2]|0}h=e-j|0;if((e|0)==(d|0)){i=f;return b|0}if((l-g|0)>>>0<h>>>0){cn(b,l,g+h-l|0,g,g,0,0);k=a[b>>0]|0}if((k&1)==0)k=b+1|0;else k=c[b+8>>2]|0;j=e+(g-j)|0;l=k+g|0;while(1){a[l>>0]=a[d>>0]|0;d=d+1|0;if((d|0)==(e|0))break;else l=l+1|0}a[k+j>>0]=0;e=g+h|0;if((a[b>>0]&1)==0){a[b>>0]=e<<1;i=f;return b|0}else{c[b+4>>2]=e;i=f;return b|0}return 0}function As(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;n=i;i=i+112|0;v=n;u=n+40|0;t=n+76|0;s=n+4|0;q=n+88|0;r=n+100|0;p=n+28|0;o=n+64|0;x=n+52|0;w=n+16|0;if(b){o=Zt(d,134608)|0;Ub[c[(c[o>>2]|0)+44>>2]&63](v,o);b=c[v>>2]|0;a[e>>0]=b;a[e+1>>0]=b>>8;a[e+2>>0]=b>>16;a[e+3>>0]=b>>24;Ub[c[(c[o>>2]|0)+32>>2]&63](u,o);if((a[l>>0]&1)==0){a[l+1>>0]=0;a[l>>0]=0}else{a[c[l+8>>2]>>0]=0;c[l+4>>2]=0}Zm(l,0);c[l+0>>2]=c[u+0>>2];c[l+4>>2]=c[u+4>>2];c[l+8>>2]=c[u+8>>2];c[u+0>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;Tm(u);Ub[c[(c[o>>2]|0)+28>>2]&63](t,o);if((a[k>>0]&1)==0){a[k+1>>0]=0;a[k>>0]=0}else{a[c[k+8>>2]>>0]=0;c[k+4>>2]=0}Zm(k,0);c[k+0>>2]=c[t+0>>2];c[k+4>>2]=c[t+4>>2];c[k+8>>2]=c[t+8>>2];c[t+0>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;Tm(t);a[f>>0]=Wb[c[(c[o>>2]|0)+12>>2]&63](o)|0;a[g>>0]=Wb[c[(c[o>>2]|0)+16>>2]&63](o)|0;Ub[c[(c[o>>2]|0)+20>>2]&63](s,o);if((a[h>>0]&1)==0){a[h+1>>0]=0;a[h>>0]=0}else{a[c[h+8>>2]>>0]=0;c[h+4>>2]=0}Zm(h,0);c[h+0>>2]=c[s+0>>2];c[h+4>>2]=c[s+4>>2];c[h+8>>2]=c[s+8>>2];c[s+0>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;Tm(s);Ub[c[(c[o>>2]|0)+24>>2]&63](q,o);if((a[j>>0]&1)==0){a[j+1>>0]=0;a[j>>0]=0}else{a[c[j+8>>2]>>0]=0;c[j+4>>2]=0}Zm(j,0);c[j+0>>2]=c[q+0>>2];c[j+4>>2]=c[q+4>>2];c[j+8>>2]=c[q+8>>2];c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;Tm(q);b=Wb[c[(c[o>>2]|0)+36>>2]&63](o)|0;c[m>>2]=b;i=n;return}else{q=Zt(d,134544)|0;Ub[c[(c[q>>2]|0)+44>>2]&63](r,q);b=c[r>>2]|0;a[e>>0]=b;a[e+1>>0]=b>>8;a[e+2>>0]=b>>16;a[e+3>>0]=b>>24;Ub[c[(c[q>>2]|0)+32>>2]&63](p,q);if((a[l>>0]&1)==0){a[l+1>>0]=0;a[l>>0]=0}else{a[c[l+8>>2]>>0]=0;c[l+4>>2]=0}Zm(l,0);c[l+0>>2]=c[p+0>>2];c[l+4>>2]=c[p+4>>2];c[l+8>>2]=c[p+8>>2];c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;Tm(p);Ub[c[(c[q>>2]|0)+28>>2]&63](o,q);if((a[k>>0]&1)==0){a[k+1>>0]=0;a[k>>0]=0}else{a[c[k+8>>2]>>0]=0;c[k+4>>2]=0}Zm(k,0);c[k+0>>2]=c[o+0>>2];c[k+4>>2]=c[o+4>>2];c[k+8>>2]=c[o+8>>2];c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;Tm(o);a[f>>0]=Wb[c[(c[q>>2]|0)+12>>2]&63](q)|0;a[g>>0]=Wb[c[(c[q>>2]|0)+16>>2]&63](q)|0;Ub[c[(c[q>>2]|0)+20>>2]&63](x,q);if((a[h>>0]&1)==0){a[h+1>>0]=0;a[h>>0]=0}else{a[c[h+8>>2]>>0]=0;c[h+4>>2]=0}Zm(h,0);c[h+0>>2]=c[x+0>>2];c[h+4>>2]=c[x+4>>2];c[h+8>>2]=c[x+8>>2];c[x+0>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;Tm(x);Ub[c[(c[q>>2]|0)+24>>2]&63](w,q);if((a[j>>0]&1)==0){a[j+1>>0]=0;a[j>>0]=0}else{a[c[j+8>>2]>>0]=0;c[j+4>>2]=0}Zm(j,0);c[j+0>>2]=c[w+0>>2];c[j+4>>2]=c[w+4>>2];c[j+8>>2]=c[w+8>>2];c[w+0>>2]=0;c[w+4>>2]=0;c[w+8>>2]=0;Tm(w);b=Wb[c[(c[q>>2]|0)+36>>2]&63](q)|0;c[m>>2]=b;i=n;return}}function Bs(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;f=a+4|0;k=(c[f>>2]|0)!=113;j=c[a>>2]|0;g=j;h=(c[d>>2]|0)-g|0;h=h>>>0<2147483647?h<<1:-1;g=(c[b>>2]|0)-g|0;j=Qx(k?j:0,h)|0;if((j|0)==0)Mx();if(!k){k=c[a>>2]|0;c[a>>2]=j;if((k|0)!=0){Tb[c[f>>2]&127](k);j=c[a>>2]|0}}else c[a>>2]=j;c[f>>2]=114;c[b>>2]=j+g;c[d>>2]=(c[a>>2]|0)+h;i=e;return}function Cs(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;g=i;h=a+4|0;j=(c[h>>2]|0)!=113;k=c[a>>2]|0;e=k;f=(c[d>>2]|0)-e|0;f=f>>>0<2147483647?f<<1:-1;e=(c[b>>2]|0)-e>>2;if(!j)k=0;k=Qx(k,f)|0;if((k|0)==0)Mx();if(!j){j=c[a>>2]|0;c[a>>2]=k;if((j|0)!=0){Tb[c[h>>2]&127](j);k=c[a>>2]|0}}else c[a>>2]=k;c[h>>2]=114;c[b>>2]=k+(e<<2);c[d>>2]=(c[a>>2]|0)+(f>>>2<<2);i=g;return}function Ds(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;g=i;k=a[b>>0]|0;if((k&1)==0)j=(k&255)>>>1;else j=c[b+4>>2]|0;if((j|0)==0){i=g;return}if((d|0)!=(e|0)?(h=e+ -4|0,h>>>0>d>>>0):0){j=d;do{k=c[j>>2]|0;c[j>>2]=c[h>>2];c[h>>2]=k;j=j+4|0;h=h+ -4|0}while(j>>>0<h>>>0);k=a[b>>0]|0}if((k&1)==0){h=b+1|0;b=(k&255)>>>1}else{h=c[b+8>>2]|0;b=c[b+4>>2]|0}e=e+ -4|0;k=a[h>>0]|0;j=k<<24>>24<1|k<<24>>24==127;a:do if(e>>>0>d>>>0){b=h+b|0;while(1){if(!j?(k<<24>>24|0)!=(c[d>>2]|0):0)break;h=(b-h|0)>1?h+1|0:h;d=d+4|0;k=a[h>>0]|0;j=k<<24>>24<1|k<<24>>24==127;if(!(d>>>0<e>>>0))break a}c[f>>2]=4;i=g;return}while(0);if(j){i=g;return}j=c[e>>2]|0;if(!(k<<24>>24>>>0<j>>>0|(j|0)==0)){i=g;return}c[f>>2]=4;i=g;return}function Es(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function Fs(a){a=a|0;return}function Gs(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;n=i;i=i+576|0;r=n;x=n+64|0;m=n+56|0;s=n+48|0;o=n+468|0;v=n+572|0;y=n+464|0;t=n+8|0;q=n+472|0;c[m>>2]=x;d=m+4|0;c[d>>2]=113;x=x+400|0;sn(o,h);w=Zt(o,135160)|0;a[v>>0]=0;c[y>>2]=c[f>>2];h=c[h+4>>2]|0;c[r+0>>2]=c[y+0>>2];do if(Hs(e,r,g,o,h,j,v,w,m,s,x)|0){ac[c[(c[w>>2]|0)+48>>2]&7](w,134864,134874,t)|0;w=c[s>>2]|0;h=c[m>>2]|0;g=w-h|0;if((g|0)>392){g=Nx((g>>2)+2|0)|0;if((g|0)==0)Mx();else{p=g;u=g}}else{p=0;u=q}if((a[v>>0]|0)==0)g=u;else{a[u>>0]=45;g=u+1|0}if(h>>>0<w>>>0){u=t+40|0;v=t;do{w=c[h>>2]|0;x=t;while(1){if((c[x>>2]|0)==(w|0))break;x=x+4|0;if((x|0)==(u|0)){x=u;break}}a[g>>0]=a[134864+(x-v>>2)>>0]|0;h=h+4|0;g=g+1|0}while(h>>>0<(c[s>>2]|0)>>>0)}a[g>>0]=0;c[r>>2]=k;if((Cw(q,134800,r)|0)==1){Ox(p);break}else xs(134808)}while(0);p=c[e>>2]|0;do if((p|0)!=0){k=c[p+12>>2]|0;if((k|0)==(c[p+16>>2]|0))p=Wb[c[(c[p>>2]|0)+36>>2]&63](p)|0;else p=c[k>>2]|0;if((p|0)==-1){c[e>>2]=0;p=1;break}else{p=(c[e>>2]|0)==0;break}}else p=1;while(0);k=c[f>>2]|0;do if((k|0)!=0){q=c[k+12>>2]|0;if((q|0)==(c[k+16>>2]|0))k=Wb[c[(c[k>>2]|0)+36>>2]&63](k)|0;else k=c[q>>2]|0;if(!((k|0)==-1))if(p)break;else{l=31;break}else{c[f>>2]=0;l=29;break}}else l=29;while(0);if((l|0)==29?p:0)l=31;if((l|0)==31)c[j>>2]=c[j>>2]|2;c[b>>2]=c[e>>2];wm(c[o>>2]|0)|0;l=c[m>>2]|0;c[m>>2]=0;if((l|0)==0){i=n;return}Tb[c[d>>2]&127](l);i=n;return}function Hs(b,e,f,g,h,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;p=i;i=i+512|0;D=p+500|0;P=p+96|0;q=p+40|0;E=p+20|0;y=p+12|0;C=p+88|0;B=p+496|0;A=p+504|0;r=p+24|0;s=p+48|0;t=p;u=p+72|0;v=p+60|0;z=p+16|0;w=p+84|0;c[D>>2]=o;c[q>>2]=P;o=q+4|0;c[o>>2]=113;c[E>>2]=P;c[y>>2]=P+400;c[C>>2]=0;c[r+0>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;c[s+0>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;c[t+0>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;c[u+0>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;c[v+0>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;Ks(f,g,C,B,A,r,s,t,u,z);c[n>>2]=c[m>>2];G=u+4|0;F=u+8|0;g=t+4|0;f=t+8|0;I=(h&512|0)!=0;H=s+4|0;N=s+8|0;O=v+4|0;K=v+8|0;J=C+3|0;L=r+4|0;M=0;h=0;a:while(1){Q=c[b>>2]|0;do if((Q|0)!=0){R=c[Q+12>>2]|0;if((R|0)==(c[Q+16>>2]|0))Q=Wb[c[(c[Q>>2]|0)+36>>2]&63](Q)|0;else Q=c[R>>2]|0;if((Q|0)==-1){c[b>>2]=0;R=1;break}else{R=(c[b>>2]|0)==0;break}}else R=1;while(0);Q=c[e>>2]|0;do if((Q|0)!=0){S=c[Q+12>>2]|0;if((S|0)==(c[Q+16>>2]|0))S=Wb[c[(c[Q>>2]|0)+36>>2]&63](Q)|0;else S=c[S>>2]|0;if(!((S|0)==-1))if(R)break;else{x=268;break a}else{c[e>>2]=0;x=15;break}}else x=15;while(0);if((x|0)==15){x=0;if(R){Q=0;x=268;break}else Q=0}b:do switch(a[C+M>>0]|0){case 0:{x=29;break};case 2:{if(!((h|0)!=0|M>>>0<2)){if((M|0)==2)R=(a[J>>0]|0)!=0;else R=0;if(!(I|R)){h=0;break b}}U=a[s>>0]|0;R=(U&1)==0?H:c[N>>2]|0;c:do if((M|0)!=0?(d[C+(M+ -1)>>0]|0)<2:0){while(1){if((U&1)==0){T=(U&255)>>>1;S=H}else{T=c[H>>2]|0;S=c[N>>2]|0}if((R|0)==(S+(T<<2)|0))break;if(!(Qb[c[(c[l>>2]|0)+12>>2]&31](l,8192,c[R>>2]|0)|0)){x=130;break}U=a[s>>0]|0;R=R+4|0}if((x|0)==130){x=0;U=a[s>>0]|0}T=(U&1)==0;V=R-(T?H:c[N>>2]|0)>>2;S=a[v>>0]|0;W=(S&1)==0;if(W)X=(S&255)>>>1;else X=c[O>>2]|0;d:do if(!(V>>>0>X>>>0)){if(W){V=O+(((S&255)>>>1)-V<<2)|0;S=(S&255)>>>1;W=O}else{W=c[K>>2]|0;S=c[O>>2]|0;V=W+(S-V<<2)|0}S=W+(S<<2)|0;if((V|0)==(S|0)){S=Q;break c}else W=T?H:c[N>>2]|0;while(1){if((c[V>>2]|0)!=(c[W>>2]|0))break d;V=V+4|0;if((V|0)==(S|0)){S=Q;break c}W=W+4|0}}while(0);S=Q;R=T?H:c[N>>2]|0}else S=Q;while(0);e:while(1){if((U&1)==0){U=(U&255)>>>1;T=H}else{U=c[H>>2]|0;T=c[N>>2]|0}if((R|0)==(T+(U<<2)|0)){Q=S;break}U=c[b>>2]|0;do if((U|0)!=0){T=c[U+12>>2]|0;if((T|0)==(c[U+16>>2]|0))T=Wb[c[(c[U>>2]|0)+36>>2]&63](U)|0;else T=c[T>>2]|0;if((T|0)==-1){c[b>>2]=0;T=1;break}else{T=(c[b>>2]|0)==0;break}}else T=1;while(0);do if((Q|0)!=0){U=c[Q+12>>2]|0;if((U|0)==(c[Q+16>>2]|0))Q=Wb[c[(c[Q>>2]|0)+36>>2]&63](Q)|0;else Q=c[U>>2]|0;if(!((Q|0)==-1))if(T^(S|0)==0){Q=S;T=S;break}else{Q=S;break e}else{c[e>>2]=0;Q=0;x=160;break}}else{Q=S;x=160}while(0);if((x|0)==160){x=0;if(T)break;else T=0}U=c[b>>2]|0;S=c[U+12>>2]|0;if((S|0)==(c[U+16>>2]|0))S=Wb[c[(c[U>>2]|0)+36>>2]&63](U)|0;else S=c[S>>2]|0;if((S|0)!=(c[R>>2]|0))break;V=c[b>>2]|0;U=V+12|0;S=c[U>>2]|0;if((S|0)==(c[V+16>>2]|0))Wb[c[(c[V>>2]|0)+40>>2]&63](V)|0;else c[U>>2]=S+4;S=Q;U=a[s>>0]|0;Q=T;R=R+4|0}if(I){S=a[s>>0]|0;if((S&1)==0){S=(S&255)>>>1;T=H}else{S=c[H>>2]|0;T=c[N>>2]|0}if((R|0)!=(T+(S<<2)|0)){x=175;break a}}break};case 3:{R=a[t>>0]|0;T=(R&1)==0;if(T)V=(R&255)>>>1;else V=c[g>>2]|0;S=a[u>>0]|0;U=(S&1)==0;if(U)W=(S&255)>>>1;else W=c[G>>2]|0;if((V|0)!=(0-W|0)){if(T)V=(R&255)>>>1;else V=c[g>>2]|0;if((V|0)!=0){if(U)U=(S&255)>>>1;else U=c[G>>2]|0;if((U|0)!=0){T=c[b>>2]|0;S=c[T+12>>2]|0;if((S|0)==(c[T+16>>2]|0)){T=Wb[c[(c[T>>2]|0)+36>>2]&63](T)|0;R=a[t>>0]|0}else T=c[S>>2]|0;U=c[b>>2]|0;W=U+12|0;V=c[W>>2]|0;S=(V|0)==(c[U+16>>2]|0);if((T|0)==(c[((R&1)==0?g:c[f>>2]|0)>>2]|0)){if(S)Wb[c[(c[U>>2]|0)+40>>2]&63](U)|0;else c[W>>2]=V+4;R=a[t>>0]|0;if((R&1)==0)R=(R&255)>>>1;else R=c[g>>2]|0;h=R>>>0>1?t:h;break b}if(S)R=Wb[c[(c[U>>2]|0)+36>>2]&63](U)|0;else R=c[V>>2]|0;if((R|0)!=(c[((a[u>>0]&1)==0?G:c[F>>2]|0)>>2]|0)){x=117;break a}R=c[b>>2]|0;S=R+12|0;T=c[S>>2]|0;if((T|0)==(c[R+16>>2]|0))Wb[c[(c[R>>2]|0)+40>>2]&63](R)|0;else c[S>>2]=T+4;a[k>>0]=1;R=a[u>>0]|0;if((R&1)==0)R=(R&255)>>>1;else R=c[G>>2]|0;h=R>>>0>1?u:h;break b}}if(T)W=(R&255)>>>1;else W=c[g>>2]|0;V=c[b>>2]|0;T=c[V+12>>2]|0;U=(T|0)==(c[V+16>>2]|0);if((W|0)==0){if(U){R=Wb[c[(c[V>>2]|0)+36>>2]&63](V)|0;S=a[u>>0]|0}else R=c[T>>2]|0;if((R|0)!=(c[((S&1)==0?G:c[F>>2]|0)>>2]|0))break b;R=c[b>>2]|0;S=R+12|0;T=c[S>>2]|0;if((T|0)==(c[R+16>>2]|0))Wb[c[(c[R>>2]|0)+40>>2]&63](R)|0;else c[S>>2]=T+4;a[k>>0]=1;R=a[u>>0]|0;if((R&1)==0)R=(R&255)>>>1;else R=c[G>>2]|0;h=R>>>0>1?u:h;break b}if(U){S=Wb[c[(c[V>>2]|0)+36>>2]&63](V)|0;R=a[t>>0]|0}else S=c[T>>2]|0;if((S|0)!=(c[((R&1)==0?g:c[f>>2]|0)>>2]|0)){a[k>>0]=1;break b}R=c[b>>2]|0;S=R+12|0;T=c[S>>2]|0;if((T|0)==(c[R+16>>2]|0))Wb[c[(c[R>>2]|0)+40>>2]&63](R)|0;else c[S>>2]=T+4;R=a[t>>0]|0;if((R&1)==0)R=(R&255)>>>1;else R=c[g>>2]|0;h=R>>>0>1?t:h}break};case 4:{R=c[A>>2]|0;U=Q;T=Q;S=0;f:while(1){Q=c[b>>2]|0;do if((Q|0)!=0){V=c[Q+12>>2]|0;if((V|0)==(c[Q+16>>2]|0))Q=Wb[c[(c[Q>>2]|0)+36>>2]&63](Q)|0;else Q=c[V>>2]|0;if((Q|0)==-1){c[b>>2]=0;V=1;break}else{V=(c[b>>2]|0)==0;break}}else V=1;while(0);do if((T|0)!=0){Q=c[T+12>>2]|0;if((Q|0)==(c[T+16>>2]|0))Q=Wb[c[(c[T>>2]|0)+36>>2]&63](T)|0;else Q=c[Q>>2]|0;if(!((Q|0)==-1))if(V^(U|0)==0){Q=U;T=U;break}else{Q=U;break f}else{c[e>>2]=0;Q=0;x=189;break}}else{Q=U;x=189}while(0);if((x|0)==189){x=0;if(V)break;else T=0}U=c[b>>2]|0;V=c[U+12>>2]|0;if((V|0)==(c[U+16>>2]|0))U=Wb[c[(c[U>>2]|0)+36>>2]&63](U)|0;else U=c[V>>2]|0;if(Qb[c[(c[l>>2]|0)+12>>2]&31](l,2048,U)|0){V=c[n>>2]|0;if((V|0)==(c[D>>2]|0)){Ls(m,n,D);V=c[n>>2]|0}c[n>>2]=V+4;c[V>>2]=U;S=S+1|0}else{V=a[r>>0]|0;if((V&1)==0)V=(V&255)>>>1;else V=c[L>>2]|0;if(!((S|0)!=0&(V|0)!=0&(U|0)==(R|0)))break;if((P|0)==(c[y>>2]|0)){Cs(q,E,y);P=c[E>>2]|0}X=P+4|0;c[E>>2]=X;c[P>>2]=S;P=X;S=0}W=c[b>>2]|0;V=W+12|0;U=c[V>>2]|0;if((U|0)==(c[W+16>>2]|0)){Wb[c[(c[W>>2]|0)+40>>2]&63](W)|0;U=Q;continue}else{c[V>>2]=U+4;U=Q;continue}}if(!((S|0)==0?1:(c[q>>2]|0)==(P|0))){if((P|0)==(c[y>>2]|0)){Cs(q,E,y);P=c[E>>2]|0}X=P+4|0;c[E>>2]=X;c[P>>2]=S;P=X}R=c[z>>2]|0;if((R|0)>0){S=c[b>>2]|0;do if((S|0)!=0){T=c[S+12>>2]|0;if((T|0)==(c[S+16>>2]|0))S=Wb[c[(c[S>>2]|0)+36>>2]&63](S)|0;else S=c[T>>2]|0;if((S|0)==-1){c[b>>2]=0;S=1;break}else{S=(c[b>>2]|0)==0;break}}else S=1;while(0);do if((Q|0)!=0){T=c[Q+12>>2]|0;if((T|0)==(c[Q+16>>2]|0))T=Wb[c[(c[Q>>2]|0)+36>>2]&63](Q)|0;else T=c[T>>2]|0;if(!((T|0)==-1))if(S)break;else{x=232;break a}else{c[e>>2]=0;x=226;break}}else x=226;while(0);if((x|0)==226){x=0;if(S){x=232;break a}else Q=0}S=c[b>>2]|0;T=c[S+12>>2]|0;if((T|0)==(c[S+16>>2]|0))S=Wb[c[(c[S>>2]|0)+36>>2]&63](S)|0;else S=c[T>>2]|0;if((S|0)!=(c[B>>2]|0)){x=232;break a}S=c[b>>2]|0;T=S+12|0;U=c[T>>2]|0;if((U|0)==(c[S+16>>2]|0)){Wb[c[(c[S>>2]|0)+40>>2]&63](S)|0;T=Q;S=Q}else{c[T>>2]=U+4;T=Q;S=Q}while(1){Q=c[b>>2]|0;do if((Q|0)!=0){U=c[Q+12>>2]|0;if((U|0)==(c[Q+16>>2]|0))Q=Wb[c[(c[Q>>2]|0)+36>>2]&63](Q)|0;else Q=c[U>>2]|0;if((Q|0)==-1){c[b>>2]=0;U=1;break}else{U=(c[b>>2]|0)==0;break}}else U=1;while(0);do if((S|0)!=0){Q=c[S+12>>2]|0;if((Q|0)==(c[S+16>>2]|0))Q=Wb[c[(c[S>>2]|0)+36>>2]&63](S)|0;else Q=c[Q>>2]|0;if(!((Q|0)==-1))if(U^(T|0)==0){Q=T;S=T;break}else{x=255;break a}else{c[e>>2]=0;Q=0;x=249;break}}else{Q=T;x=249}while(0);if((x|0)==249){x=0;if(U){x=255;break a}else S=0}T=c[b>>2]|0;U=c[T+12>>2]|0;if((U|0)==(c[T+16>>2]|0))T=Wb[c[(c[T>>2]|0)+36>>2]&63](T)|0;else T=c[U>>2]|0;if(!(Qb[c[(c[l>>2]|0)+12>>2]&31](l,2048,T)|0)){x=255;break a}if((c[n>>2]|0)==(c[D>>2]|0))Ls(m,n,D);U=c[b>>2]|0;T=c[U+12>>2]|0;if((T|0)==(c[U+16>>2]|0))T=Wb[c[(c[U>>2]|0)+36>>2]&63](U)|0;else T=c[T>>2]|0;V=c[n>>2]|0;c[n>>2]=V+4;c[V>>2]=T;R=R+ -1|0;c[z>>2]=R;V=c[b>>2]|0;T=V+12|0;U=c[T>>2]|0;if((U|0)==(c[V+16>>2]|0))Wb[c[(c[V>>2]|0)+40>>2]&63](V)|0;else c[T>>2]=U+4;if((R|0)<=0)break;else T=Q}}if((c[n>>2]|0)==(c[m>>2]|0)){x=266;break a}break};case 1:{if((M|0)==3){x=268;break a}x=c[b>>2]|0;R=c[x+12>>2]|0;if((R|0)==(c[x+16>>2]|0))x=Wb[c[(c[x>>2]|0)+36>>2]&63](x)|0;else x=c[R>>2]|0;if(!(Qb[c[(c[l>>2]|0)+12>>2]&31](l,8192,x)|0)){x=28;break a}R=c[b>>2]|0;x=R+12|0;S=c[x>>2]|0;if((S|0)==(c[R+16>>2]|0))x=Wb[c[(c[R>>2]|0)+40>>2]&63](R)|0;else{c[x>>2]=S+4;x=c[S>>2]|0}mn(v,x);x=29;break};default:{}}while(0);g:do if((x|0)==29){x=0;if((M|0)==3){x=268;break a}else{R=Q;S=Q}while(1){Q=c[b>>2]|0;do if((Q|0)!=0){T=c[Q+12>>2]|0;if((T|0)==(c[Q+16>>2]|0))Q=Wb[c[(c[Q>>2]|0)+36>>2]&63](Q)|0;else Q=c[T>>2]|0;if((Q|0)==-1){c[b>>2]=0;T=1;break}else{T=(c[b>>2]|0)==0;break}}else T=1;while(0);do if((S|0)!=0){Q=c[S+12>>2]|0;if((Q|0)==(c[S+16>>2]|0))Q=Wb[c[(c[S>>2]|0)+36>>2]&63](S)|0;else Q=c[Q>>2]|0;if(!((Q|0)==-1))if(T^(R|0)==0){Q=R;S=R;break}else{Q=R;break g}else{c[e>>2]=0;Q=0;x=43;break}}else{Q=R;x=43}while(0);if((x|0)==43){x=0;if(T)break g;else S=0}T=c[b>>2]|0;R=c[T+12>>2]|0;if((R|0)==(c[T+16>>2]|0))R=Wb[c[(c[T>>2]|0)+36>>2]&63](T)|0;else R=c[R>>2]|0;if(!(Qb[c[(c[l>>2]|0)+12>>2]&31](l,8192,R)|0))break g;R=c[b>>2]|0;U=R+12|0;T=c[U>>2]|0;if((T|0)==(c[R+16>>2]|0))R=Wb[c[(c[R>>2]|0)+40>>2]&63](R)|0;else{c[U>>2]=T+4;R=c[T>>2]|0}mn(v,R);R=Q}}while(0);M=M+1|0;if(!(M>>>0<4)){x=268;break}}h:do if((x|0)==28){c[j>>2]=c[j>>2]|4;j=0}else if((x|0)==117){c[j>>2]=c[j>>2]|4;j=0}else if((x|0)==175){c[j>>2]=c[j>>2]|4;j=0}else if((x|0)==232){c[j>>2]=c[j>>2]|4;j=0}else if((x|0)==255){c[j>>2]=c[j>>2]|4;j=0}else if((x|0)==266){c[j>>2]=c[j>>2]|4;j=0}else if((x|0)==268){i:do if((h|0)!=0){y=h+4|0;m=h+8|0;A=Q;B=Q;z=1;j:while(1){n=a[h>>0]|0;if((n&1)==0)n=(n&255)>>>1;else n=c[y>>2]|0;if(!(z>>>0<n>>>0))break i;k=c[b>>2]|0;do if((k|0)!=0){n=c[k+12>>2]|0;if((n|0)==(c[k+16>>2]|0))n=Wb[c[(c[k>>2]|0)+36>>2]&63](k)|0;else n=c[n>>2]|0;if((n|0)==-1){c[b>>2]=0;n=1;break}else{n=(c[b>>2]|0)==0;break}}else n=1;while(0);do if((B|0)!=0){k=c[B+12>>2]|0;if((k|0)==(c[B+16>>2]|0))B=Wb[c[(c[B>>2]|0)+36>>2]&63](B)|0;else B=c[k>>2]|0;if(!((B|0)==-1))if(n^(A|0)==0){n=A;B=A;break}else break j;else{c[e>>2]=0;A=0;x=287;break}}else x=287;while(0);if((x|0)==287){x=0;if(n)break;else{n=A;B=0}}k=c[b>>2]|0;A=c[k+12>>2]|0;if((A|0)==(c[k+16>>2]|0))k=Wb[c[(c[k>>2]|0)+36>>2]&63](k)|0;else k=c[A>>2]|0;if((a[h>>0]&1)==0)A=y;else A=c[m>>2]|0;if((k|0)!=(c[A+(z<<2)>>2]|0))break;z=z+1|0;A=c[b>>2]|0;k=A+12|0;l=c[k>>2]|0;if((l|0)==(c[A+16>>2]|0)){Wb[c[(c[A>>2]|0)+40>>2]&63](A)|0;A=n;continue}else{c[k>>2]=l+4;A=n;continue}}c[j>>2]=c[j>>2]|4;j=0;break h}while(0);b=c[q>>2]|0;if((b|0)!=(P|0)?(c[w>>2]=0,Ds(r,b,P,w),(c[w>>2]|0)!=0):0){c[j>>2]=c[j>>2]|4;j=0}else j=1}while(0);gn(v);gn(u);gn(t);gn(s);Tm(r);r=c[q>>2]|0;c[q>>2]=0;if((r|0)==0){i=p;return j|0}Tb[c[o>>2]&127](r);i=p;return j|0}function Is(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;d=i;i=i+432|0;u=d+4|0;t=d+16|0;n=d+8|0;q=d+420|0;o=d;r=d+424|0;v=d+416|0;c[n>>2]=t;m=n+4|0;c[m>>2]=113;t=t+400|0;sn(o,h);s=Zt(o,135160)|0;a[r>>0]=0;p=c[f>>2]|0;c[v>>2]=p;h=c[h+4>>2]|0;c[u+0>>2]=c[v+0>>2];if(Hs(e,u,g,o,h,j,r,s,n,q,t)|0){if((a[k>>0]&1)==0){c[k+4>>2]=0;a[k>>0]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}if((a[r>>0]|0)!=0)mn(k,dc[c[(c[s>>2]|0)+44>>2]&15](s,45)|0);g=dc[c[(c[s>>2]|0)+44>>2]&15](s,48)|0;r=c[n>>2]|0;q=c[q>>2]|0;h=q+ -4|0;a:do if(r>>>0<h>>>0){s=r;while(1){r=s+4|0;if((c[s>>2]|0)!=(g|0)){r=s;break a}if(r>>>0<h>>>0)s=r;else break}}while(0);Js(k,r,q)|0}k=c[e>>2]|0;do if((k|0)!=0){q=c[k+12>>2]|0;if((q|0)==(c[k+16>>2]|0))k=Wb[c[(c[k>>2]|0)+36>>2]&63](k)|0;else k=c[q>>2]|0;if((k|0)==-1){c[e>>2]=0;k=1;break}else{k=(c[e>>2]|0)==0;break}}else k=1;while(0);do if((p|0)!=0){q=c[p+12>>2]|0;if((q|0)==(c[p+16>>2]|0))p=Wb[c[(c[p>>2]|0)+36>>2]&63](p)|0;else p=c[q>>2]|0;if(!((p|0)==-1))if(k)break;else{l=26;break}else{c[f>>2]=0;l=24;break}}else l=24;while(0);if((l|0)==24?k:0)l=26;if((l|0)==26)c[j>>2]=c[j>>2]|2;c[b>>2]=c[e>>2];wm(c[o>>2]|0)|0;e=c[n>>2]|0;c[n>>2]=0;if((e|0)==0){i=d;return}Tb[c[m>>2]&127](e);i=d;return}function Js(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;j=d;g=a[b>>0]|0;if((g&1)==0){k=g;l=1;h=(g&255)>>>1}else{l=c[b>>2]|0;k=l&255;l=(l&-2)+ -1|0;h=c[b+4>>2]|0}g=e-j>>2;if((g|0)==0){i=f;return b|0}if((l-h|0)>>>0<g>>>0){on(b,l,h+g-l|0,h,h,0,0);k=a[b>>0]|0}if((k&1)==0)k=b+4|0;else k=c[b+8>>2]|0;l=k+(h<<2)|0;if((d|0)!=(e|0)){j=h+((e+ -4+(0-j)|0)>>>2)+1|0;while(1){c[l>>2]=c[d>>2];d=d+4|0;if((d|0)==(e|0))break;else l=l+4|0}l=k+(j<<2)|0}c[l>>2]=0;g=h+g|0;if((a[b>>0]&1)==0){a[b>>0]=g<<1;i=f;return b|0}else{c[b+4>>2]=g;i=f;return b|0}return 0}function Ks(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;n=i;i=i+112|0;v=n;u=n+40|0;t=n+76|0;s=n+4|0;q=n+88|0;r=n+100|0;p=n+28|0;o=n+64|0;x=n+52|0;w=n+16|0;if(b){o=Zt(d,134736)|0;Ub[c[(c[o>>2]|0)+44>>2]&63](v,o);b=c[v>>2]|0;a[e>>0]=b;a[e+1>>0]=b>>8;a[e+2>>0]=b>>16;a[e+3>>0]=b>>24;Ub[c[(c[o>>2]|0)+32>>2]&63](u,o);if((a[l>>0]&1)==0){c[l+4>>2]=0;a[l>>0]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}ln(l,0);c[l+0>>2]=c[u+0>>2];c[l+4>>2]=c[u+4>>2];c[l+8>>2]=c[u+8>>2];c[u+0>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;gn(u);Ub[c[(c[o>>2]|0)+28>>2]&63](t,o);if((a[k>>0]&1)==0){c[k+4>>2]=0;a[k>>0]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}ln(k,0);c[k+0>>2]=c[t+0>>2];c[k+4>>2]=c[t+4>>2];c[k+8>>2]=c[t+8>>2];c[t+0>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;gn(t);c[f>>2]=Wb[c[(c[o>>2]|0)+12>>2]&63](o)|0;c[g>>2]=Wb[c[(c[o>>2]|0)+16>>2]&63](o)|0;Ub[c[(c[o>>2]|0)+20>>2]&63](s,o);if((a[h>>0]&1)==0){a[h+1>>0]=0;a[h>>0]=0}else{a[c[h+8>>2]>>0]=0;c[h+4>>2]=0}Zm(h,0);c[h+0>>2]=c[s+0>>2];c[h+4>>2]=c[s+4>>2];c[h+8>>2]=c[s+8>>2];c[s+0>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;Tm(s);Ub[c[(c[o>>2]|0)+24>>2]&63](q,o);if((a[j>>0]&1)==0){c[j+4>>2]=0;a[j>>0]=0}else{c[c[j+8>>2]>>2]=0;c[j+4>>2]=0}ln(j,0);c[j+0>>2]=c[q+0>>2];c[j+4>>2]=c[q+4>>2];c[j+8>>2]=c[q+8>>2];c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;gn(q);b=Wb[c[(c[o>>2]|0)+36>>2]&63](o)|0;c[m>>2]=b;i=n;return}else{q=Zt(d,134672)|0;Ub[c[(c[q>>2]|0)+44>>2]&63](r,q);b=c[r>>2]|0;a[e>>0]=b;a[e+1>>0]=b>>8;a[e+2>>0]=b>>16;a[e+3>>0]=b>>24;Ub[c[(c[q>>2]|0)+32>>2]&63](p,q);if((a[l>>0]&1)==0){c[l+4>>2]=0;a[l>>0]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}ln(l,0);c[l+0>>2]=c[p+0>>2];c[l+4>>2]=c[p+4>>2];c[l+8>>2]=c[p+8>>2];c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;gn(p);Ub[c[(c[q>>2]|0)+28>>2]&63](o,q);if((a[k>>0]&1)==0){c[k+4>>2]=0;a[k>>0]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}ln(k,0);c[k+0>>2]=c[o+0>>2];c[k+4>>2]=c[o+4>>2];c[k+8>>2]=c[o+8>>2];c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;gn(o);c[f>>2]=Wb[c[(c[q>>2]|0)+12>>2]&63](q)|0;c[g>>2]=Wb[c[(c[q>>2]|0)+16>>2]&63](q)|0;Ub[c[(c[q>>2]|0)+20>>2]&63](x,q);if((a[h>>0]&1)==0){a[h+1>>0]=0;a[h>>0]=0}else{a[c[h+8>>2]>>0]=0;c[h+4>>2]=0}Zm(h,0);c[h+0>>2]=c[x+0>>2];c[h+4>>2]=c[x+4>>2];c[h+8>>2]=c[x+8>>2];c[x+0>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;Tm(x);Ub[c[(c[q>>2]|0)+24>>2]&63](w,q);if((a[j>>0]&1)==0){c[j+4>>2]=0;a[j>>0]=0}else{c[c[j+8>>2]>>2]=0;c[j+4>>2]=0}ln(j,0);c[j+0>>2]=c[w+0>>2];c[j+4>>2]=c[w+4>>2];c[j+8>>2]=c[w+8>>2];c[w+0>>2]=0;c[w+4>>2]=0;c[w+8>>2]=0;gn(w);b=Wb[c[(c[q>>2]|0)+36>>2]&63](q)|0;c[m>>2]=b;i=n;return}}function Ls(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;g=i;h=a+4|0;j=(c[h>>2]|0)!=113;k=c[a>>2]|0;e=k;f=(c[d>>2]|0)-e|0;f=f>>>0<2147483647?f<<1:-1;e=(c[b>>2]|0)-e>>2;if(!j)k=0;k=Qx(k,f)|0;if((k|0)==0)Mx();if(!j){j=c[a>>2]|0;c[a>>2]=k;if((j|0)!=0){Tb[c[h>>2]&127](j);k=c[a>>2]|0}}else c[a>>2]=k;c[h>>2]=114;c[b>>2]=k+(e<<2);c[d>>2]=(c[a>>2]|0)+(f>>>2<<2);i=g;return}function Ms(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function Ns(a){a=a|0;return}function Os(b,d,e,f,g,j,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;l=+l;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;A=i;i=i+384|0;s=A;H=A+72|0;F=A+40|0;E=A+172|0;t=A+36|0;v=A+64|0;w=A+272|0;C=A+376|0;B=A+52|0;d=A+20|0;z=A+8|0;G=A+48|0;D=A+276|0;x=A+32|0;u=A+44|0;y=A+68|0;c[F>>2]=H;h[k>>3]=l;c[s>>2]=c[k>>2];c[s+4>>2]=c[k+4>>2];H=jy(H,100,134920,s)|0;if(H>>>0>99){E=np()|0;h[k>>3]=l;c[s>>2]=c[k>>2];c[s+4>>2]=c[k+4>>2];E=eq(F,E,134920,s)|0;H=c[F>>2]|0;if((H|0)==0)Mx();I=Nx(E)|0;if((I|0)==0)Mx();else{m=I;p=H;r=I;q=E}}else{m=0;p=0;r=E;q=H}sn(t,g);E=Zt(t,135168)|0;I=c[F>>2]|0;ac[c[(c[E>>2]|0)+32>>2]&7](E,I,I+q|0,r)|0;if((q|0)==0)F=0;else F=(a[c[F>>2]>>0]|0)==45;c[v>>2]=0;c[B+0>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[z+0>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;Ps(f,F,t,v,w,C,B,d,z,G);f=c[G>>2]|0;if((q|0)>(f|0)){G=a[z>>0]|0;if((G&1)==0)G=(G&255)>>>1;else G=c[z+4>>2]|0;H=a[d>>0]|0;if((H&1)==0)H=(H&255)>>>1;else H=c[d+4>>2]|0;G=G+(q-f<<1|1)+H|0}else{G=a[z>>0]|0;if((G&1)==0)G=(G&255)>>>1;else G=c[z+4>>2]|0;H=a[d>>0]|0;if((H&1)==0)H=(H&255)>>>1;else H=c[d+4>>2]|0;G=G+2+H|0}G=G+f|0;if(G>>>0>100){D=Nx(G)|0;if((D|0)==0)Mx();else{n=D;o=D}}else{n=0;o=D}Qs(o,x,u,c[g+4>>2]|0,r,r+q|0,E,F,v,a[w>>0]|0,a[C>>0]|0,B,d,z,f);c[y>>2]=c[e>>2];H=c[x>>2]|0;I=c[u>>2]|0;c[s+0>>2]=c[y+0>>2];_p(b,s,o,H,I,g,j);Ox(n);Tm(z);Tm(d);Tm(B);wm(c[t>>2]|0)|0;Ox(m);Ox(p);i=A;return}function Ps(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;n=i;i=i+112|0;w=n+12|0;v=n+40|0;y=n+92|0;x=n;u=n+80|0;s=n+96|0;q=n+108|0;p=n+56|0;t=n+52|0;r=n+16|0;o=n+28|0;z=n+68|0;if(b){o=Zt(e,134608)|0;p=c[o>>2]|0;if(d){Ub[c[p+44>>2]&63](w,o);b=c[w>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;Ub[c[(c[o>>2]|0)+32>>2]&63](v,o);if((a[l>>0]&1)==0){a[l+1>>0]=0;a[l>>0]=0}else{a[c[l+8>>2]>>0]=0;c[l+4>>2]=0}Zm(l,0);c[l+0>>2]=c[v+0>>2];c[l+4>>2]=c[v+4>>2];c[l+8>>2]=c[v+8>>2];c[v+0>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;Tm(v)}else{Ub[c[p+40>>2]&63](y,o);b=c[y>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;Ub[c[(c[o>>2]|0)+28>>2]&63](x,o);if((a[l>>0]&1)==0){a[l+1>>0]=0;a[l>>0]=0}else{a[c[l+8>>2]>>0]=0;c[l+4>>2]=0}Zm(l,0);c[l+0>>2]=c[x+0>>2];c[l+4>>2]=c[x+4>>2];c[l+8>>2]=c[x+8>>2];c[x+0>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;Tm(x)}a[g>>0]=Wb[c[(c[o>>2]|0)+12>>2]&63](o)|0;a[h>>0]=Wb[c[(c[o>>2]|0)+16>>2]&63](o)|0;Ub[c[(c[o>>2]|0)+20>>2]&63](u,o);if((a[j>>0]&1)==0){a[j+1>>0]=0;a[j>>0]=0}else{a[c[j+8>>2]>>0]=0;c[j+4>>2]=0}Zm(j,0);c[j+0>>2]=c[u+0>>2];c[j+4>>2]=c[u+4>>2];c[j+8>>2]=c[u+8>>2];c[u+0>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;Tm(u);Ub[c[(c[o>>2]|0)+24>>2]&63](s,o);if((a[k>>0]&1)==0){a[k+1>>0]=0;a[k>>0]=0}else{a[c[k+8>>2]>>0]=0;c[k+4>>2]=0}Zm(k,0);c[k+0>>2]=c[s+0>>2];c[k+4>>2]=c[s+4>>2];c[k+8>>2]=c[s+8>>2];c[s+0>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;Tm(s);b=Wb[c[(c[o>>2]|0)+36>>2]&63](o)|0;c[m>>2]=b;i=n;return}else{s=Zt(e,134544)|0;u=c[s>>2]|0;if(d){Ub[c[u+44>>2]&63](q,s);b=c[q>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;Ub[c[(c[s>>2]|0)+32>>2]&63](p,s);if((a[l>>0]&1)==0){a[l+1>>0]=0;a[l>>0]=0}else{a[c[l+8>>2]>>0]=0;c[l+4>>2]=0}Zm(l,0);c[l+0>>2]=c[p+0>>2];c[l+4>>2]=c[p+4>>2];c[l+8>>2]=c[p+8>>2];c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;Tm(p)}else{Ub[c[u+40>>2]&63](t,s);b=c[t>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;Ub[c[(c[s>>2]|0)+28>>2]&63](r,s);if((a[l>>0]&1)==0){a[l+1>>0]=0;a[l>>0]=0}else{a[c[l+8>>2]>>0]=0;c[l+4>>2]=0}Zm(l,0);c[l+0>>2]=c[r+0>>2];c[l+4>>2]=c[r+4>>2];c[l+8>>2]=c[r+8>>2];c[r+0>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;Tm(r)}a[g>>0]=Wb[c[(c[s>>2]|0)+12>>2]&63](s)|0;a[h>>0]=Wb[c[(c[s>>2]|0)+16>>2]&63](s)|0;Ub[c[(c[s>>2]|0)+20>>2]&63](o,s);if((a[j>>0]&1)==0){a[j+1>>0]=0;a[j>>0]=0}else{a[c[j+8>>2]>>0]=0;c[j+4>>2]=0}Zm(j,0);c[j+0>>2]=c[o+0>>2];c[j+4>>2]=c[o+4>>2];c[j+8>>2]=c[o+8>>2];c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;Tm(o);Ub[c[(c[s>>2]|0)+24>>2]&63](z,s);if((a[k>>0]&1)==0){a[k+1>>0]=0;a[k>>0]=0}else{a[c[k+8>>2]>>0]=0;c[k+4>>2]=0}Zm(k,0);c[k+0>>2]=c[z+0>>2];c[k+4>>2]=c[z+4>>2];c[k+8>>2]=c[z+8>>2];c[z+0>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;Tm(z);b=Wb[c[(c[s>>2]|0)+36>>2]&63](s)|0;c[m>>2]=b;i=n;return}}function Qs(d,e,f,g,h,j,k,l,m,n,o,p,q,r,s){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;s=s|0;var t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;t=i;c[f>>2]=d;w=r+1|0;v=r+8|0;u=r+4|0;F=(g&512|0)==0;C=q+1|0;D=q+8|0;E=q+4|0;A=(s|0)>0;x=p+1|0;y=p+8|0;I=p+4|0;B=k+8|0;z=0-s|0;J=0;do{switch(a[m+J>>0]|0){case 0:{c[e>>2]=c[f>>2];break};case 1:{c[e>>2]=c[f>>2];P=dc[c[(c[k>>2]|0)+28>>2]&15](k,32)|0;Q=c[f>>2]|0;c[f>>2]=Q+1;a[Q>>0]=P;break};case 3:{L=a[r>>0]|0;K=(L&1)==0;if(K)L=(L&255)>>>1;else L=c[u>>2]|0;if((L|0)!=0){if(K)K=w;else K=c[v>>2]|0;P=a[K>>0]|0;Q=c[f>>2]|0;c[f>>2]=Q+1;a[Q>>0]=P}break};case 2:{K=a[q>>0]|0;L=(K&1)==0;if(L)M=(K&255)>>>1;else M=c[E>>2]|0;if(!((M|0)==0|F)){if(L){L=C;K=(K&255)>>>1}else{L=c[D>>2]|0;K=c[E>>2]|0}K=L+K|0;M=c[f>>2]|0;if((L|0)!=(K|0))do{a[M>>0]=a[L>>0]|0;L=L+1|0;M=M+1|0}while((L|0)!=(K|0));c[f>>2]=M}break};case 4:{K=c[f>>2]|0;h=l?h+1|0:h;a:do if(h>>>0<j>>>0){L=h;while(1){N=a[L>>0]|0;if(!(N<<24>>24>-1))break a;M=L+1|0;if((b[(c[B>>2]|0)+(N<<24>>24<<1)>>1]&2048)==0)break a;if(M>>>0<j>>>0)L=M;else{L=M;break}}}else L=h;while(0);M=L;if(A){if(L>>>0>h>>>0){N=h+(0-M)|0;N=N>>>0<z>>>0?z:N;M=N+s|0;P=K;O=L;Q=s;while(1){O=O+ -1|0;R=a[O>>0]|0;c[f>>2]=P+1;a[P>>0]=R;Q=Q+ -1|0;P=(Q|0)>0;if(!(O>>>0>h>>>0&P))break;P=c[f>>2]|0}L=L+N|0;if(P)G=32;else N=0}else{M=s;G=32}if((G|0)==32){G=0;N=dc[c[(c[k>>2]|0)+28>>2]&15](k,48)|0}O=c[f>>2]|0;c[f>>2]=O+1;if((M|0)>0)do{a[O>>0]=N;M=M+ -1|0;O=c[f>>2]|0;c[f>>2]=O+1}while((M|0)>0);a[O>>0]=n}if((L|0)==(h|0)){Q=dc[c[(c[k>>2]|0)+28>>2]&15](k,48)|0;R=c[f>>2]|0;c[f>>2]=R+1;a[R>>0]=Q}else{N=a[p>>0]|0;M=(N&1)==0;if(M)N=(N&255)>>>1;else N=c[I>>2]|0;if((N|0)==0){M=-1;N=0;O=0}else{if(M)M=x;else M=c[y>>2]|0;M=a[M>>0]|0;N=0;O=0}while(1){if((O|0)==(M|0)){P=c[f>>2]|0;c[f>>2]=P+1;a[P>>0]=o;N=N+1|0;P=a[p>>0]|0;O=(P&1)==0;if(O)P=(P&255)>>>1;else P=c[I>>2]|0;if(N>>>0<P>>>0){if(O)M=x;else M=c[y>>2]|0;if((a[M+N>>0]|0)==127){M=-1;O=0}else{if(O)M=x;else M=c[y>>2]|0;M=a[M+N>>0]|0;O=0}}else O=0}L=L+ -1|0;Q=a[L>>0]|0;R=c[f>>2]|0;c[f>>2]=R+1;a[R>>0]=Q;if((L|0)==(h|0))break;else O=O+1|0}}L=c[f>>2]|0;if((K|0)!=(L|0)?(H=L+ -1|0,H>>>0>K>>>0):0){L=H;do{R=a[K>>0]|0;a[K>>0]=a[L>>0]|0;a[L>>0]=R;K=K+1|0;L=L+ -1|0}while(K>>>0<L>>>0)}break};default:{}}J=J+1|0}while((J|0)!=4);k=a[r>>0]|0;x=(k&1)==0;if(x)y=(k&255)>>>1;else y=c[u>>2]|0;if(y>>>0>1){if(x)u=(k&255)>>>1;else{w=c[v>>2]|0;u=c[u>>2]|0}v=w+1|0;u=w+u|0;w=c[f>>2]|0;if((v|0)!=(u|0))do{a[w>>0]=a[v>>0]|0;v=v+1|0;w=w+1|0}while((v|0)!=(u|0));c[f>>2]=w}g=g&176;if((g|0)==32){c[e>>2]=c[f>>2];i=t;return}else if((g|0)==16){i=t;return}else{c[e>>2]=d;i=t;return}}function Rs(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;s=i;i=i+176|0;q=s+20|0;r=s+24|0;w=s+12|0;x=s+64|0;d=s+65|0;m=s;n=s+52|0;o=s+32|0;A=s+28|0;y=s+68|0;t=s+44|0;u=s+48|0;p=s+16|0;sn(r,g);v=Zt(r,135168)|0;B=a[j>>0]|0;z=(B&1)==0;if(z)B=(B&255)>>>1;else B=c[j+4>>2]|0;if((B|0)==0)z=0;else{if(z)z=j+1|0;else z=c[j+8>>2]|0;z=a[z>>0]|0;z=z<<24>>24==(dc[c[(c[v>>2]|0)+28>>2]&15](v,45)|0)<<24>>24}c[w>>2]=0;c[m+0>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;c[n+0>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;Ps(f,z,r,w,x,d,m,n,o,A);f=a[j>>0]|0;C=(f&1)==0;if(C)B=(f&255)>>>1;else B=c[j+4>>2]|0;A=c[A>>2]|0;if((B|0)>(A|0)){if(C)B=(f&255)>>>1;else B=c[j+4>>2]|0;C=a[o>>0]|0;if((C&1)==0)C=(C&255)>>>1;else C=c[o+4>>2]|0;D=a[n>>0]|0;if((D&1)==0)D=(D&255)>>>1;else D=c[n+4>>2]|0;B=C+(B-A<<1|1)+D|0}else{B=a[o>>0]|0;if((B&1)==0)B=(B&255)>>>1;else B=c[o+4>>2]|0;C=a[n>>0]|0;if((C&1)==0)C=(C&255)>>>1;else C=c[n+4>>2]|0;B=B+2+C|0}B=B+A|0;if(B>>>0>100){y=Nx(B)|0;if((y|0)==0)Mx();else{l=y;k=y}}else{l=y;k=0}if((f&1)==0){y=j+1|0;j=(f&255)>>>1}else{y=c[j+8>>2]|0;j=c[j+4>>2]|0}Qs(l,t,u,c[g+4>>2]|0,y,y+j|0,v,z,w,a[x>>0]|0,a[d>>0]|0,m,n,o,A);c[p>>2]=c[e>>2];C=c[t>>2]|0;D=c[u>>2]|0;c[q+0>>2]=c[p+0>>2];_p(b,q,l,C,D,g,h);Ox(k);Tm(o);Tm(n);Tm(m);wm(c[r>>2]|0)|0;i=s;return}function Ss(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function Ts(a){a=a|0;return}function Us(b,d,e,f,g,j,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;l=+l;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;t=i;i=i+992|0;s=t;H=t+880|0;F=t+416|0;E=t+8|0;u=t+420|0;w=t+408|0;x=t+412|0;C=t+872|0;B=t+432|0;d=t+444|0;z=t+456|0;G=t+468|0;D=t+472|0;A=t+424|0;v=t+428|0;y=t+876|0;c[F>>2]=H;h[k>>3]=l;c[s>>2]=c[k>>2];c[s+4>>2]=c[k+4>>2];H=jy(H,100,134920,s)|0;if(H>>>0>99){E=np()|0;h[k>>3]=l;c[s>>2]=c[k>>2];c[s+4>>2]=c[k+4>>2];E=eq(F,E,134920,s)|0;H=c[F>>2]|0;if((H|0)==0)Mx();I=Nx(E<<2)|0;if((I|0)==0)Mx();else{o=I;n=H;r=I;q=E}}else{o=0;n=0;r=E;q=H}sn(u,g);E=Zt(u,135160)|0;I=c[F>>2]|0;ac[c[(c[E>>2]|0)+48>>2]&7](E,I,I+q|0,r)|0;if((q|0)==0)F=0;else F=(a[c[F>>2]>>0]|0)==45;c[w>>2]=0;c[B+0>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[z+0>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;Vs(f,F,u,w,x,C,B,d,z,G);f=c[G>>2]|0;if((q|0)>(f|0)){G=a[z>>0]|0;if((G&1)==0)G=(G&255)>>>1;else G=c[z+4>>2]|0;H=a[d>>0]|0;if((H&1)==0)H=(H&255)>>>1;else H=c[d+4>>2]|0;G=G+(q-f<<1|1)+H|0}else{G=a[z>>0]|0;if((G&1)==0)G=(G&255)>>>1;else G=c[z+4>>2]|0;H=a[d>>0]|0;if((H&1)==0)H=(H&255)>>>1;else H=c[d+4>>2]|0;G=G+2+H|0}G=G+f|0;if(G>>>0>100){D=Nx(G<<2)|0;if((D|0)==0)Mx();else{p=D;m=D}}else{p=0;m=D}Ws(m,A,v,c[g+4>>2]|0,r,r+(q<<2)|0,E,F,w,c[x>>2]|0,c[C>>2]|0,B,d,z,f);c[y>>2]=c[e>>2];H=c[A>>2]|0;I=c[v>>2]|0;c[s+0>>2]=c[y+0>>2];nq(b,s,m,H,I,g,j);if((p|0)!=0)Ox(p);gn(z);gn(d);Tm(B);wm(c[u>>2]|0)|0;if((o|0)==0){Ox(n);i=t;return}Ox(o);Ox(n);i=t;return}function Vs(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;n=i;i=i+112|0;w=n;v=n+16|0;y=n+92|0;x=n+40|0;u=n+80|0;s=n+96|0;q=n+108|0;p=n+56|0;t=n+52|0;r=n+28|0;o=n+4|0;z=n+68|0;if(b){o=Zt(e,134736)|0;p=c[o>>2]|0;if(d){Ub[c[p+44>>2]&63](w,o);b=c[w>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;Ub[c[(c[o>>2]|0)+32>>2]&63](v,o);if((a[l>>0]&1)==0){c[l+4>>2]=0;a[l>>0]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}ln(l,0);c[l+0>>2]=c[v+0>>2];c[l+4>>2]=c[v+4>>2];c[l+8>>2]=c[v+8>>2];c[v+0>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;gn(v)}else{Ub[c[p+40>>2]&63](y,o);b=c[y>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;Ub[c[(c[o>>2]|0)+28>>2]&63](x,o);if((a[l>>0]&1)==0){c[l+4>>2]=0;a[l>>0]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}ln(l,0);c[l+0>>2]=c[x+0>>2];c[l+4>>2]=c[x+4>>2];c[l+8>>2]=c[x+8>>2];c[x+0>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;gn(x)}c[g>>2]=Wb[c[(c[o>>2]|0)+12>>2]&63](o)|0;c[h>>2]=Wb[c[(c[o>>2]|0)+16>>2]&63](o)|0;Ub[c[(c[o>>2]|0)+20>>2]&63](u,o);if((a[j>>0]&1)==0){a[j+1>>0]=0;a[j>>0]=0}else{a[c[j+8>>2]>>0]=0;c[j+4>>2]=0}Zm(j,0);c[j+0>>2]=c[u+0>>2];c[j+4>>2]=c[u+4>>2];c[j+8>>2]=c[u+8>>2];c[u+0>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;Tm(u);Ub[c[(c[o>>2]|0)+24>>2]&63](s,o);if((a[k>>0]&1)==0){c[k+4>>2]=0;a[k>>0]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}ln(k,0);c[k+0>>2]=c[s+0>>2];c[k+4>>2]=c[s+4>>2];c[k+8>>2]=c[s+8>>2];c[s+0>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;gn(s);b=Wb[c[(c[o>>2]|0)+36>>2]&63](o)|0;c[m>>2]=b;i=n;return}else{s=Zt(e,134672)|0;u=c[s>>2]|0;if(d){Ub[c[u+44>>2]&63](q,s);b=c[q>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;Ub[c[(c[s>>2]|0)+32>>2]&63](p,s);if((a[l>>0]&1)==0){c[l+4>>2]=0;a[l>>0]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}ln(l,0);c[l+0>>2]=c[p+0>>2];c[l+4>>2]=c[p+4>>2];c[l+8>>2]=c[p+8>>2];c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;gn(p)}else{Ub[c[u+40>>2]&63](t,s);b=c[t>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;Ub[c[(c[s>>2]|0)+28>>2]&63](r,s);if((a[l>>0]&1)==0){c[l+4>>2]=0;a[l>>0]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}ln(l,0);c[l+0>>2]=c[r+0>>2];c[l+4>>2]=c[r+4>>2];c[l+8>>2]=c[r+8>>2];c[r+0>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;gn(r)}c[g>>2]=Wb[c[(c[s>>2]|0)+12>>2]&63](s)|0;c[h>>2]=Wb[c[(c[s>>2]|0)+16>>2]&63](s)|0;Ub[c[(c[s>>2]|0)+20>>2]&63](o,s);if((a[j>>0]&1)==0){a[j+1>>0]=0;a[j>>0]=0}else{a[c[j+8>>2]>>0]=0;c[j+4>>2]=0}Zm(j,0);c[j+0>>2]=c[o+0>>2];c[j+4>>2]=c[o+4>>2];c[j+8>>2]=c[o+8>>2];c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;Tm(o);Ub[c[(c[s>>2]|0)+24>>2]&63](z,s);if((a[k>>0]&1)==0){c[k+4>>2]=0;a[k>>0]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}ln(k,0);c[k+0>>2]=c[z+0>>2];c[k+4>>2]=c[z+4>>2];c[k+8>>2]=c[z+8>>2];c[z+0>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;gn(z);b=Wb[c[(c[s>>2]|0)+36>>2]&63](s)|0;c[m>>2]=b;i=n;return}}function Ws(b,d,e,f,g,h,j,k,l,m,n,o,p,q,r){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;var s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;s=i;c[e>>2]=b;t=q+4|0;u=q+8|0;y=(f&512|0)==0;w=p+4|0;x=p+8|0;v=(r|0)>0;z=o+1|0;C=o+8|0;D=o+4|0;E=0;do{switch(a[l+E>>0]|0){case 0:{c[d>>2]=c[e>>2];break};case 1:{c[d>>2]=c[e>>2];L=dc[c[(c[j>>2]|0)+44>>2]&15](j,32)|0;M=c[e>>2]|0;c[e>>2]=M+4;c[M>>2]=L;break};case 3:{G=a[q>>0]|0;F=(G&1)==0;if(F)G=(G&255)>>>1;else G=c[t>>2]|0;if((G|0)!=0){if(F)F=t;else F=c[u>>2]|0;L=c[F>>2]|0;M=c[e>>2]|0;c[e>>2]=M+4;c[M>>2]=L}break};case 2:{F=a[p>>0]|0;H=(F&1)==0;if(H)G=(F&255)>>>1;else G=c[w>>2]|0;if(!((G|0)==0|y)){if(H){I=w;H=(F&255)>>>1}else{I=c[x>>2]|0;H=c[w>>2]|0}F=I+(H<<2)|0;G=c[e>>2]|0;if((I|0)!=(F|0)){H=(I+(H+ -1<<2)+(0-I)|0)>>>2;J=G;while(1){c[J>>2]=c[I>>2];I=I+4|0;if((I|0)==(F|0))break;J=J+4|0}G=G+(H+1<<2)|0}c[e>>2]=G}break};case 4:{F=c[e>>2]|0;g=k?g+4|0:g;a:do if(g>>>0<h>>>0){G=g;while(1){H=G+4|0;if(!(Qb[c[(c[j>>2]|0)+12>>2]&31](j,2048,c[G>>2]|0)|0))break a;if(H>>>0<h>>>0)G=H;else{G=H;break}}}else G=g;while(0);if(v){if(G>>>0>g>>>0){H=r;J=c[e>>2]|0;do{G=G+ -4|0;I=J;J=J+4|0;c[I>>2]=c[G>>2];H=H+ -1|0;I=(H|0)>0}while(G>>>0>g>>>0&I);c[e>>2]=J;if(I)A=34;else{L=c[e>>2]|0;c[e>>2]=L+4}}else{H=r;A=34}if((A|0)==34){A=0;J=dc[c[(c[j>>2]|0)+44>>2]&15](j,48)|0;L=c[e>>2]|0;M=L+4|0;c[e>>2]=M;if((H|0)>0){I=L;K=H;while(1){c[I>>2]=J;K=K+ -1|0;if((K|0)<=0)break;else{I=M;M=M+4|0}}c[e>>2]=L+(H+1<<2);L=L+(H<<2)|0}}c[L>>2]=m}if((G|0)==(g|0)){K=dc[c[(c[j>>2]|0)+44>>2]&15](j,48)|0;M=c[e>>2]|0;L=M+4|0;c[e>>2]=L;c[M>>2]=K}else{I=a[o>>0]|0;H=(I&1)==0;if(H)I=(I&255)>>>1;else I=c[D>>2]|0;if((I|0)==0){H=-1;J=0;K=0}else{if(H)H=z;else H=c[C>>2]|0;H=a[H>>0]|0;J=0;K=0}while(1){L=c[e>>2]|0;if((K|0)==(H|0)){I=L+4|0;c[e>>2]=I;c[L>>2]=n;J=J+1|0;L=a[o>>0]|0;K=(L&1)==0;if(K)L=(L&255)>>>1;else L=c[D>>2]|0;if(J>>>0<L>>>0){if(K)H=z;else H=c[C>>2]|0;if((a[H+J>>0]|0)==127){H=-1;K=0}else{if(K)H=z;else H=c[C>>2]|0;H=a[H+J>>0]|0;K=0}}else K=0}else I=L;G=G+ -4|0;M=c[G>>2]|0;L=I+4|0;c[e>>2]=L;c[I>>2]=M;if((G|0)==(g|0))break;else K=K+1|0}}if((F|0)!=(L|0)?(B=L+ -4|0,B>>>0>F>>>0):0){G=B;do{M=c[F>>2]|0;c[F>>2]=c[G>>2];c[G>>2]=M;F=F+4|0;G=G+ -4|0}while(F>>>0<G>>>0)}break};default:{}}E=E+1|0}while((E|0)!=4);v=a[q>>0]|0;m=(v&1)==0;if(m)q=(v&255)>>>1;else q=c[t>>2]|0;if(q>>>0>1){if(m){m=t;q=(v&255)>>>1}else{m=c[u>>2]|0;q=c[t>>2]|0}v=m+4|0;t=m+(q<<2)|0;u=c[e>>2]|0;if((v|0)!=(t|0)){m=(m+(q+ -1<<2)+(0-v)|0)>>>2;q=u;while(1){c[q>>2]=c[v>>2];v=v+4|0;if((v|0)==(t|0))break;else q=q+4|0}u=u+(m+1<<2)|0}c[e>>2]=u}f=f&176;if((f|0)==32){c[d>>2]=c[e>>2];i=s;return}else if((f|0)==16){i=s;return}else{c[d>>2]=b;i=s;return}}function Xs(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;t=i;i=i+480|0;q=t+456|0;s=t+440|0;w=t+12|0;x=t+8|0;d=t+436|0;m=t+444|0;n=t+460|0;o=t+16|0;A=t;y=t+32|0;r=t+4|0;u=t+432|0;p=t+28|0;sn(s,g);v=Zt(s,135160)|0;B=a[j>>0]|0;z=(B&1)==0;if(z)B=(B&255)>>>1;else B=c[j+4>>2]|0;if((B|0)==0)z=0;else{if(z)z=j+4|0;else z=c[j+8>>2]|0;z=c[z>>2]|0;z=(z|0)==(dc[c[(c[v>>2]|0)+44>>2]&15](v,45)|0)}c[w>>2]=0;c[m+0>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;c[n+0>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;Vs(f,z,s,w,x,d,m,n,o,A);f=a[j>>0]|0;C=(f&1)==0;if(C)B=(f&255)>>>1;else B=c[j+4>>2]|0;A=c[A>>2]|0;if((B|0)>(A|0)){if(C)B=(f&255)>>>1;else B=c[j+4>>2]|0;C=a[o>>0]|0;if((C&1)==0)C=(C&255)>>>1;else C=c[o+4>>2]|0;D=a[n>>0]|0;if((D&1)==0)D=(D&255)>>>1;else D=c[n+4>>2]|0;B=C+(B-A<<1|1)+D|0}else{B=a[o>>0]|0;if((B&1)==0)B=(B&255)>>>1;else B=c[o+4>>2]|0;C=a[n>>0]|0;if((C&1)==0)C=(C&255)>>>1;else C=c[n+4>>2]|0;B=B+2+C|0}B=B+A|0;if(B>>>0>100){y=Nx(B<<2)|0;if((y|0)==0)Mx();else{l=y;k=y}}else{l=0;k=y}if((f&1)==0){y=j+4|0;j=(f&255)>>>1}else{y=c[j+8>>2]|0;j=c[j+4>>2]|0}Ws(k,r,u,c[g+4>>2]|0,y,y+(j<<2)|0,v,z,w,c[x>>2]|0,c[d>>2]|0,m,n,o,A);c[p>>2]=c[e>>2];C=c[r>>2]|0;D=c[u>>2]|0;c[q+0>>2]=c[p+0>>2];nq(b,q,k,C,D,g,h);if((l|0)==0){gn(o);gn(n);Tm(m);D=c[s>>2]|0;wm(D)|0;i=t;return}Ox(l);gn(o);gn(n);Tm(m);D=c[s>>2]|0;wm(D)|0;i=t;return}function Ys(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function Zs(a){a=a|0;return}function _s(b,d,e){b=b|0;d=d|0;e=e|0;b=i;if((a[d>>0]&1)==0)d=d+1|0;else d=c[d+8>>2]|0;e=Nb(d|0,1)|0;i=b;return e>>>((e|0)!=(-1|0)&1)|0}function $s(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;d=i;i=i+16|0;j=d;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;l=a[h>>0]|0;if((l&1)==0){m=(l&255)>>>1;l=h+1|0;h=h+1|0}else{n=c[h+8>>2]|0;m=c[h+4>>2]|0;l=n;h=n}h=h+m|0;if(l>>>0<h>>>0){do{$m(j,a[l>>0]|0);l=l+1|0}while((l|0)!=(h|0));e=(e|0)==-1?-1:e<<1;if((a[j>>0]&1)==0)k=9;else h=c[j+8>>2]|0}else{e=(e|0)==-1?-1:e<<1;k=9}if((k|0)==9)h=j+1|0;g=_a(e|0,f|0,g|0,h|0)|0;c[b+0>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;n=wy(g|0)|0;f=g+n|0;if((n|0)<=0){Tm(j);i=d;return}do{$m(b,a[g>>0]|0);g=g+1|0}while((g|0)!=(f|0));Tm(j);i=d;return}function at(a,b){a=a|0;b=b|0;a=i;Eb(((b|0)==-1?-1:b<<1)|0)|0;i=a;return}function bt(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function ct(a){a=a|0;return}function dt(b,d,e){b=b|0;d=d|0;e=e|0;b=i;if((a[d>>0]&1)==0)d=d+1|0;else d=c[d+8>>2]|0;e=Nb(d|0,1)|0;i=b;return e>>>((e|0)!=(-1|0)&1)|0}function et(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;j=i;i=i+176|0;o=j;n=j+40|0;m=j+168|0;l=j+172|0;d=j+16|0;p=j+8|0;k=j+32|0;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[p+4>>2]=0;c[p>>2]=136824;s=a[h>>0]|0;if((s&1)==0){q=h+4|0;r=h+4|0;h=(s&255)>>>1}else{r=c[h+8>>2]|0;q=r;h=c[h+4>>2]|0}h=q+(h<<2)|0;s=o;c[s>>2]=0;c[s+4>>2]=0;a:do if(r>>>0<h>>>0){q=n+32|0;s=136824|0;while(1){c[l>>2]=r;t=($b[c[s+12>>2]&15](p,o,r,h,l,n,q,m)|0)==2;s=c[l>>2]|0;if(t|(s|0)==(r|0))break;if(n>>>0<(c[m>>2]|0)>>>0){r=n;do{$m(d,a[r>>0]|0);r=r+1|0}while(r>>>0<(c[m>>2]|0)>>>0);r=c[l>>2]|0}else r=s;if(!(r>>>0<h>>>0))break a;s=c[p>>2]|0}xs(136048)}while(0);if((a[d>>0]&1)==0)p=d+1|0;else p=c[d+8>>2]|0;p=_a(((e|0)==-1?-1:e<<1)|0,f|0,g|0,p|0)|0;c[b+0>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[k+4>>2]=0;c[k>>2]=136928;t=wy(p|0)|0;g=p+t|0;s=o;c[s>>2]=0;c[s+4>>2]=0;if((t|0)<=0){Tm(d);i=j;return}e=g;f=n+128|0;h=136928|0;while(1){c[l>>2]=p;t=($b[c[h+16>>2]&15](k,o,p,(e-p|0)>32?p+32|0:g,l,n,f,m)|0)==2;h=c[l>>2]|0;if(t|(h|0)==(p|0)){b=20;break}if(n>>>0<(c[m>>2]|0)>>>0){p=n;do{mn(b,c[p>>2]|0);p=p+4|0}while(p>>>0<(c[m>>2]|0)>>>0);p=c[l>>2]|0}else p=h;if(!(p>>>0<g>>>0)){b=25;break}h=c[k>>2]|0}if((b|0)==20)xs(136048);else if((b|0)==25){Tm(d);i=j;return}}function ft(a,b){a=a|0;b=b|0;a=i;Eb(((b|0)==-1?-1:b<<1)|0)|0;i=a;return}function gt(a){a=a|0;var b=0,d=0;b=i;c[a>>2]=135256;a=a+8|0;d=c[a>>2]|0;if((d|0)==(np()|0)){i=b;return}Ab(c[a>>2]|0);i=b;return}function ht(a){a=a|0;a=Ma(8)|0;xm(a,135048);c[a>>2]=143704;zb(a|0,143744,98)}function it(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;c[b+4>>2]=d+ -1;c[b>>2]=135088;f=b+8|0;hw(f,28);Qm(b+144|0,135072,1);f=c[f>>2]|0;d=b+12|0;g=c[d>>2]|0;if((g|0)!=(f|0))c[d>>2]=g+(~((g+ -4+(0-f)|0)>>>2)<<2);c[34995]=0;c[34994]=133536;jt(b,139976);c[34993]=0;c[34992]=133576;kt(b,139968);ru(139952,0,0,1);lt(b,139952);c[34987]=0;c[34986]=136144;mt(b,139944);c[34985]=0;c[34984]=136360;nt(b,139936);Ku(139920,1);ot(b,139920);c[34979]=0;c[34978]=136584;pt(b,139912);c[34977]=0;c[34976]=136704;qt(b,139904);c[34971]=0;c[34970]=135336;a[139888]=46;a[139889]=44;c[34973]=0;c[34974]=0;c[34975]=0;rt(b,139880);c[34963]=0;c[34962]=135376;c[34964]=46;c[34965]=44;c[34966]=0;c[34967]=0;c[34968]=0;st(b,139848);c[34961]=0;c[34960]=133616;tt(b,139840);c[34959]=0;c[34958]=133736;ut(b,139832);c[34957]=0;c[34956]=133808;vt(b,139824);c[34955]=0;c[34954]=133904;wt(b,139816);c[34953]=0;c[34952]=134496;xt(b,139808);c[34951]=0;c[34950]=134560;yt(b,139800);c[34949]=0;c[34948]=134624;zt(b,139792);c[34947]=0;c[34946]=134688;At(b,139784);c[34945]=0;c[34944]=134752;Bt(b,139776);c[34943]=0;c[34942]=134832;Ct(b,139768);c[34941]=0;c[34940]=134888;Dt(b,139760);c[34939]=0;c[34938]=134936;Et(b,139752);c[34935]=0;c[34934]=133984;c[34936]=134032;Ft(b,139736);c[34931]=0;c[34930]=134136;c[34932]=134184;Gt(b,139720);c[34927]=0;c[34926]=136080;c[34928]=np()|0;c[34926]=134432;Ht(b,139704);c[34923]=0;c[34922]=136080;c[34924]=np()|0;c[34922]=134464;It(b,139688);c[34921]=0;c[34920]=134976;Jt(b,139680);c[34919]=0;c[34918]=135016;Kt(b,139672);i=e;return}function jt(a,b){a=a|0;b=b|0;var c=0;c=i;Mt(a,b,Yt(133560)|0);i=c;return}function kt(a,b){a=a|0;b=b|0;var c=0;c=i;Mt(a,b,Yt(133600)|0);i=c;return}function lt(a,b){a=a|0;b=b|0;var c=0;c=i;Mt(a,b,Yt(135168)|0);i=c;return}function mt(a,b){a=a|0;b=b|0;var c=0;c=i;Mt(a,b,Yt(135160)|0);i=c;return}function nt(a,b){a=a|0;b=b|0;var c=0;c=i;Mt(a,b,Yt(135232)|0);i=c;return}function ot(a,b){a=a|0;b=b|0;var c=0;c=i;Mt(a,b,Yt(135240)|0);i=c;return}function pt(a,b){a=a|0;b=b|0;var c=0;c=i;Mt(a,b,Yt(135296)|0);i=c;return}function qt(a,b){a=a|0;b=b|0;var c=0;c=i;Mt(a,b,Yt(135304)|0);i=c;return}function rt(a,b){a=a|0;b=b|0;var c=0;c=i;Mt(a,b,Yt(135312)|0);i=c;return}function st(a,b){a=a|0;b=b|0;var c=0;c=i;Mt(a,b,Yt(135320)|0);i=c;return}function tt(a,b){a=a|0;b=b|0;var c=0;c=i;Mt(a,b,Yt(133672)|0);i=c;return}function ut(a,b){a=a|0;b=b|0;var c=0;c=i;Mt(a,b,Yt(133792)|0);i=c;return}function vt(a,b){a=a|0;b=b|0;var c=0;c=i;Mt(a,b,Yt(133856)|0);i=c;return}function wt(a,b){a=a|0;b=b|0;var c=0;c=i;Mt(a,b,Yt(133952)|0);i=c;return}function xt(a,b){a=a|0;b=b|0;var c=0;c=i;Mt(a,b,Yt(134544)|0);i=c;return}function yt(a,b){a=a|0;b=b|0;var c=0;c=i;Mt(a,b,Yt(134608)|0);i=c;return}function zt(a,b){a=a|0;b=b|0;var c=0;c=i;Mt(a,b,Yt(134672)|0);i=c;return}function At(a,b){a=a|0;b=b|0;var c=0;c=i;Mt(a,b,Yt(134736)|0);i=c;return}function Bt(a,b){a=a|0;b=b|0;var c=0;c=i;Mt(a,b,Yt(134776)|0);i=c;return}function Ct(a,b){a=a|0;b=b|0;var c=0;c=i;Mt(a,b,Yt(134856)|0);i=c;return}function Dt(a,b){a=a|0;b=b|0;var c=0;c=i;Mt(a,b,Yt(134912)|0);i=c;return}function Et(a,b){a=a|0;b=b|0;var c=0;c=i;Mt(a,b,Yt(134960)|0);i=c;return}function Ft(a,b){a=a|0;b=b|0;var c=0;c=i;Mt(a,b,Yt(134064)|0);i=c;return}function Gt(a,b){a=a|0;b=b|0;var c=0;c=i;Mt(a,b,Yt(134216)|0);i=c;return}function Ht(a,b){a=a|0;b=b|0;var c=0;c=i;Mt(a,b,Yt(134448)|0);i=c;return}function It(a,b){a=a|0;b=b|0;var c=0;c=i;Mt(a,b,Yt(134480)|0);i=c;return}function Jt(a,b){a=a|0;b=b|0;var c=0;c=i;Mt(a,b,Yt(135e3)|0);i=c;return}function Kt(a,b){a=a|0;b=b|0;var c=0;c=i;Mt(a,b,Yt(135040)|0);i=c;return}function Lt(){var b=0;b=i;if((a[135120]|0)==0?(Ha(135120)|0)!=0:0){St()|0;c[33778]=135104;Ra(135120)}i=b;return c[33778]|0}function Mt(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;vm(b);f=a+8|0;g=c[f>>2]|0;if(!((c[a+12>>2]|0)-g>>2>>>0>d>>>0)){Pt(f,d+1|0);g=c[f>>2]|0}a=c[g+(d<<2)>>2]|0;if((a|0)==0){a=g;a=a+(d<<2)|0;c[a>>2]=b;i=e;return}wm(a)|0;a=c[f>>2]|0;a=a+(d<<2)|0;c[a>>2]=b;i=e;return}function Nt(a){a=a|0;var b=0;b=i;Ot(a);Sw(a);i=b;return}function Ot(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;c[a>>2]=135088;e=a+8|0;d=a+12|0;h=c[d>>2]|0;f=c[e>>2]|0;if((h|0)!=(f|0)){g=0;do{j=c[f+(g<<2)>>2]|0;if((j|0)!=0){wm(j)|0;h=c[d>>2]|0;f=c[e>>2]|0}g=g+1|0}while(g>>>0<h-f>>2>>>0)}Tm(a+144|0);iw(e);i=b;return}function Pt(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;f=a+4|0;e=c[f>>2]|0;h=c[a>>2]|0;g=e-h>>2;if(g>>>0<b>>>0){aw(a,b-g|0);i=d;return}if(!(g>>>0>b>>>0)){i=d;return}b=h+(b<<2)|0;if((e|0)==(b|0)){i=d;return}c[f>>2]=e+(~((e+ -4+(0-b)|0)>>>2)<<2);i=d;return}function Qt(a,b){a=a|0;b=b|0;var d=0;d=i;if(Rt(a,b)|0){i=d;return c[(c[a+8>>2]|0)+(b<<2)>>2]|0}else{a=Ma(4)|0;kx(a);zb(a|0,143944,104)}return 0}function Rt(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=c[a+8>>2]|0;if(!((c[a+12>>2]|0)-e>>2>>>0>b>>>0)){a=0;i=d;return a|0}a=(c[e+(b<<2)>>2]|0)!=0;i=d;return a|0}function St(){var a=0;a=i;it(139512,1);c[33776]=139512;i=a;return 135104}function Tt(){var a=0,b=0;a=i;b=c[(Lt()|0)>>2]|0;c[33782]=b;vm(b);i=a;return 135128}function Ut(){var b=0;b=i;if((a[135144]|0)==0?(Ha(135144)|0)!=0:0){Tt()|0;c[33784]=135128;Ra(135144)}i=b;return c[33784]|0}function Vt(a){a=a|0;var b=0,d=0;b=i;d=c[(Ut()|0)>>2]|0;c[a>>2]=d;vm(d);i=b;return}function Wt(a,b){a=a|0;b=b|0;var d=0;d=i;b=c[b>>2]|0;c[a>>2]=b;vm(b);i=d;return}function Xt(a){a=a|0;var b=0;b=i;wm(c[a>>2]|0)|0;i=b;return}function Yt(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;if(!((c[a>>2]|0)==-1)){c[d>>2]=a;c[d+4>>2]=115;c[d+8>>2]=0;Mm(a,d,116)}i=b;return(c[a+4>>2]|0)+ -1|0}function Zt(a,b){a=a|0;b=b|0;var d=0;d=i;a=c[a>>2]|0;a=Qt(a,Yt(b)|0)|0;i=d;return a|0}function _t(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function $t(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Tb[c[(c[a>>2]|0)+4>>2]&127](a);i=b;return}function au(a){a=a|0;var b=0;b=c[33788]|0;c[33788]=b+1;c[a+4>>2]=b+1;return}function bu(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function cu(a,c,d){a=a|0;c=c|0;d=d|0;a=i;if(!(d>>>0<128)){c=0;i=a;return c|0}c=(b[(du()|0)+(d<<1)>>1]&c)<<16>>16!=0;i=a;return c|0}function du(){var a=0,b=0;b=i;a=c[(ob()|0)>>2]|0;i=b;return a|0}function eu(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;a=i;if((d|0)==(e|0)){j=d;i=a;return j|0}g=((e+ -4+(0-d)|0)>>>2)+1|0;h=d;while(1){j=c[h>>2]|0;if(j>>>0<128)j=b[(du()|0)+(j<<1)>>1]|0;else j=0;b[f>>1]=j;h=h+4|0;if((h|0)==(e|0))break;else f=f+2|0}j=d+(g<<2)|0;i=a;return j|0}function fu(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0;a=i;a:do if((e|0)==(f|0))f=e;else do{g=c[e>>2]|0;if(g>>>0<128?!((b[(du()|0)+(g<<1)>>1]&d)<<16>>16==0):0){f=e;break a}e=e+4|0}while((e|0)!=(f|0));while(0);i=a;return f|0}function gu(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0;a=i;a:do if((e|0)==(f|0))f=e;else do{g=c[e>>2]|0;if(!(g>>>0<128)){f=e;break a}if((b[(du()|0)+(g<<1)>>1]&d)<<16>>16==0){f=e;break a}e=e+4|0}while((e|0)!=(f|0));while(0);i=a;return f|0}function hu(a,b){a=a|0;b=b|0;a=i;if(!(b>>>0<128)){i=a;return b|0}b=c[(iu()|0)+(b<<2)>>2]|0;i=a;return b|0}function iu(){var a=0,b=0;b=i;a=c[(Pa()|0)>>2]|0;i=b;return a|0}function ju(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;a=i;if((b|0)==(d|0)){g=b;i=a;return g|0}e=((d+ -4+(0-b)|0)>>>2)+1|0;f=b;do{g=c[f>>2]|0;if(g>>>0<128)g=c[(iu()|0)+(g<<2)>>2]|0;c[f>>2]=g;f=f+4|0}while((f|0)!=(d|0));g=b+(e<<2)|0;i=a;return g|0}function ku(a,b){a=a|0;b=b|0;a=i;if(!(b>>>0<128)){i=a;return b|0}b=c[(lu()|0)+(b<<2)>>2]|0;i=a;return b|0}function lu(){var a=0,b=0;b=i;a=c[(jb()|0)>>2]|0;i=b;return a|0}function mu(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;a=i;if((b|0)==(d|0)){g=b;i=a;return g|0}e=((d+ -4+(0-b)|0)>>>2)+1|0;f=b;do{g=c[f>>2]|0;if(g>>>0<128)g=c[(lu()|0)+(g<<2)>>2]|0;c[f>>2]=g;f=f+4|0}while((f|0)!=(d|0));g=b+(e<<2)|0;i=a;return g|0}function nu(a,b){a=a|0;b=b|0;return b<<24>>24|0}function ou(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;b=i;if((d|0)==(e|0)){f=d;i=b;return f|0}while(1){c[f>>2]=a[d>>0];d=d+1|0;if((d|0)==(e|0))break;else f=f+4|0}i=b;return e|0}function pu(a,b,c){a=a|0;b=b|0;c=c|0;return(b>>>0<128?b&255:c)|0}function qu(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;b=i;if((d|0)==(e|0)){j=d;i=b;return j|0}h=((e+ -4+(0-d)|0)>>>2)+1|0;j=d;while(1){k=c[j>>2]|0;a[g>>0]=k>>>0<128?k&255:f;j=j+4|0;if((j|0)==(e|0))break;else g=g+1|0}k=d+(h<<2)|0;i=b;return k|0}function ru(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;g=i;c[b+4>>2]=f+ -1;c[b>>2]=135184;f=b+8|0;c[f>>2]=d;a[b+12>>0]=e&1;if((d|0)!=0){i=g;return}c[f>>2]=du()|0;i=g;return}function su(a){a=a|0;var b=0;b=i;tu(a);Sw(a);i=b;return}function tu(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=135184;e=c[b+8>>2]|0;if((e|0)==0){i=d;return}if((a[b+12>>0]|0)==0){i=d;return}Tw(e);i=d;return}function uu(a,b){a=a|0;b=b|0;a=i;if(!(b<<24>>24>-1)){i=a;return b|0}b=c[(iu()|0)+((b&255)<<2)>>2]&255;i=a;return b|0}function vu(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;b=i;if((d|0)==(e|0)){f=d;i=b;return f|0}do{f=a[d>>0]|0;if(f<<24>>24>-1)f=c[(iu()|0)+(f<<24>>24<<2)>>2]&255;a[d>>0]=f;d=d+1|0}while((d|0)!=(e|0));i=b;return e|0}function wu(a,b){a=a|0;b=b|0;a=i;if(!(b<<24>>24>-1)){i=a;return b|0}b=c[(lu()|0)+(b<<24>>24<<2)>>2]&255;i=a;return b|0}function xu(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;b=i;if((d|0)==(e|0)){f=d;i=b;return f|0}do{f=a[d>>0]|0;if(f<<24>>24>-1)f=c[(lu()|0)+(f<<24>>24<<2)>>2]&255;a[d>>0]=f;d=d+1|0}while((d|0)!=(e|0));i=b;return e|0}function yu(a,b){a=a|0;b=b|0;return b|0}function zu(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;b=i;if((c|0)==(d|0)){e=c;i=b;return e|0}while(1){a[e>>0]=a[c>>0]|0;c=c+1|0;if((c|0)==(d|0))break;else e=e+1|0}i=b;return d|0}function Au(a,b,c){a=a|0;b=b|0;c=c|0;return(b<<24>>24>-1?b:c)|0}function Bu(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0;b=i;if((c|0)==(d|0)){f=c;i=b;return f|0}while(1){g=a[c>>0]|0;a[f>>0]=g<<24>>24>-1?g:e;c=c+1|0;if((c|0)==(d|0))break;else f=f+1|0}i=b;return d|0}function Cu(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function Du(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function Eu(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function Fu(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function Gu(a){a=a|0;return 1}function Hu(a){a=a|0;return 1}function Iu(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;b=d-c|0;return(b>>>0<e>>>0?b:e)|0}function Ju(a){a=a|0;return 1}function Ku(a,b){a=a|0;b=b|0;var d=0;d=i;c[a+4>>2]=b+ -1;c[a>>2]=135256;c[a+8>>2]=np()|0;i=d;return}function Lu(a){a=a|0;var b=0;b=i;gt(a);Sw(a);i=b;return}function Mu(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;l=i;i=i+16|0;m=l;n=l+8|0;o=(e|0)==(f|0);a:do if(!o){p=e;while(1){if((c[p>>2]|0)==0)break;p=p+4|0;if((p|0)==(f|0)){p=f;break}}c[k>>2]=h;c[g>>2]=e;if(!(o|(h|0)==(j|0))){o=j;b=b+8|0;while(1){s=d;q=c[s+4>>2]|0;r=m;c[r>>2]=c[s>>2];c[r+4>>2]=q;r=Za(c[b>>2]|0)|0;q=zw(h,g,p-e>>2,o-h|0,d)|0;if((r|0)!=0)Za(r|0)|0;if((q|0)==-1){n=10;break}else if((q|0)==0){g=1;n=33;break}h=(c[k>>2]|0)+q|0;c[k>>2]=h;if((h|0)==(j|0)){n=31;break}if((p|0)==(f|0)){e=c[g>>2]|0;p=f}else{p=Za(c[b>>2]|0)|0;e=dy(n,0,d)|0;if((p|0)!=0)Za(p|0)|0;if((e|0)==-1){g=2;n=33;break}p=c[k>>2]|0;if(e>>>0>(o-p|0)>>>0){g=1;n=33;break}b:do if((e|0)!=0){h=n;while(1){s=a[h>>0]|0;c[k>>2]=p+1;a[p>>0]=s;e=e+ -1|0;if((e|0)==0)break b;p=c[k>>2]|0;h=h+1|0}}while(0);e=(c[g>>2]|0)+4|0;c[g>>2]=e;c:do if((e|0)==(f|0))p=f;else{p=e;while(1){if((c[p>>2]|0)==0)break c;p=p+4|0;if((p|0)==(f|0)){p=f;break}}}while(0);h=c[k>>2]|0}if((e|0)==(f|0)|(h|0)==(j|0))break a}if((n|0)==10){c[k>>2]=h;d:do if((e|0)!=(c[g>>2]|0))do{n=c[e>>2]|0;f=Za(c[b>>2]|0)|0;n=dy(h,n,m)|0;if((f|0)!=0)Za(f|0)|0;if((n|0)==-1)break d;h=(c[k>>2]|0)+n|0;c[k>>2]=h;e=e+4|0}while((e|0)!=(c[g>>2]|0));while(0);c[g>>2]=e;s=2;i=l;return s|0}else if((n|0)==31){e=c[g>>2]|0;break}else if((n|0)==33){i=l;return g|0}}}else{c[k>>2]=h;c[g>>2]=e}while(0);s=(e|0)!=(f|0)&1;i=l;return s|0}function Nu(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0;l=i;i=i+16|0;m=l;n=(e|0)==(f|0);a:do if(!n){o=e;while(1){if((a[o>>0]|0)==0)break;o=o+1|0;if((o|0)==(f|0)){o=f;break}}c[k>>2]=h;c[g>>2]=e;if(!(n|(h|0)==(j|0))){n=j;b=b+8|0;p=h;while(1){r=d;q=c[r+4>>2]|0;h=m;c[h>>2]=c[r>>2];c[h+4>>2]=q;h=o;q=Za(c[b>>2]|0)|0;r=ww(p,g,h-e|0,n-p>>2,d)|0;if((q|0)!=0)Za(q|0)|0;if((r|0)==-1){d=10;break}else if((r|0)==0){f=2;d=32;break}p=(c[k>>2]|0)+(r<<2)|0;c[k>>2]=p;if((p|0)==(j|0)){d=30;break}e=c[g>>2]|0;if((o|0)==(f|0))o=f;else{h=Za(c[b>>2]|0)|0;o=uw(p,e,1,d)|0;if((h|0)!=0)Za(h|0)|0;if((o|0)!=0){f=2;d=32;break}c[k>>2]=(c[k>>2]|0)+4;e=(c[g>>2]|0)+1|0;c[g>>2]=e;b:do if((e|0)==(f|0))o=f;else{o=e;while(1){if((a[o>>0]|0)==0)break b;o=o+1|0;if((o|0)==(f|0)){o=f;break}}}while(0);p=c[k>>2]|0}if((e|0)==(f|0)|(p|0)==(j|0))break a}if((d|0)==10){c[k>>2]=p;c:do if((e|0)!=(c[g>>2]|0)){while(1){d=Za(c[b>>2]|0)|0;j=uw(p,e,h-e|0,m)|0;if((d|0)!=0)Za(d|0)|0;if((j|0)==0)e=e+1|0;else if((j|0)==-2){d=16;break}else if((j|0)==-1){d=15;break}else e=e+j|0;p=(c[k>>2]|0)+4|0;c[k>>2]=p;if((e|0)==(c[g>>2]|0))break c}if((d|0)==15){c[g>>2]=e;r=2;i=l;return r|0}else if((d|0)==16){c[g>>2]=e;r=1;i=l;return r|0}}while(0);c[g>>2]=e;r=(e|0)!=(f|0)&1;i=l;return r|0}else if((d|0)==30){e=c[g>>2]|0;break}else if((d|0)==32){i=l;return f|0}}}else{c[k>>2]=h;c[g>>2]=e}while(0);r=(e|0)!=(f|0)&1;i=l;return r|0}function Ou(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;h=i;i=i+16|0;j=h;c[g>>2]=e;b=Za(c[b+8>>2]|0)|0;d=dy(j,0,d)|0;if((b|0)!=0)Za(b|0)|0;if((d|0)==0|(d|0)==-1){e=2;i=h;return e|0}d=d+ -1|0;b=c[g>>2]|0;if(d>>>0>(f-b|0)>>>0){e=1;i=h;return e|0}if((d|0)==0){e=0;i=h;return e|0}else f=b;while(1){e=a[j>>0]|0;c[g>>2]=f+1;a[f>>0]=e;d=d+ -1|0;if((d|0)==0){g=0;break}f=c[g>>2]|0;j=j+1|0}i=h;return g|0}function Pu(a){a=a|0;var b=0,d=0,e=0;b=i;a=a+8|0;e=Za(c[a>>2]|0)|0;d=yw(0,0,4)|0;if((e|0)!=0)Za(e|0)|0;if((d|0)==0){a=c[a>>2]|0;if((a|0)!=0){a=Za(a|0)|0;if((a|0)==0)a=0;else{Za(a|0)|0;a=0}}else a=1}else a=-1;i=b;return a|0}function Qu(a){a=a|0;return 0}function Ru(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;if((f|0)==0|(d|0)==(e|0)){m=0;i=g;return m|0}h=e;a=a+8|0;k=0;j=0;while(1){m=Za(c[a>>2]|0)|0;l=tw(d,h-d|0,b)|0;if((m|0)!=0)Za(m|0)|0;if((l|0)==-2|(l|0)==-1){f=9;break}else if((l|0)==0){m=1;d=d+1|0}else{m=l;d=d+l|0}k=m+k|0;j=j+1|0;if(j>>>0>=f>>>0|(d|0)==(e|0)){f=9;break}}if((f|0)==9){i=g;return k|0}return 0}function Su(a){a=a|0;var b=0;b=i;a=c[a+8>>2]|0;if((a|0)!=0){a=Za(a|0)|0;if((a|0)==0)a=4;else{Za(a|0)|0;a=4}}else a=1;i=b;return a|0}function Tu(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function Uu(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;a=i;i=i+16|0;l=a+4|0;k=a;c[l>>2]=d;c[k>>2]=g;b=Vu(d,e,l,g,h,k,1114111,0)|0;c[f>>2]=d+((c[l>>2]|0)-d>>1<<1);c[j>>2]=g+((c[k>>2]|0)-g);i=a;return b|0}function Vu(d,f,g,h,j,k,l,m){d=d|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0;n=i;c[g>>2]=d;c[k>>2]=h;do if((m&2|0)!=0)if((j-h|0)<3){p=1;i=n;return p|0}else{c[k>>2]=h+1;a[h>>0]=-17;p=c[k>>2]|0;c[k>>2]=p+1;a[p>>0]=-69;p=c[k>>2]|0;c[k>>2]=p+1;a[p>>0]=-65;break}while(0);h=f;o=c[g>>2]|0;if(!(o>>>0<f>>>0)){p=0;i=n;return p|0}a:while(1){d=b[o>>1]|0;m=d&65535;if(m>>>0>l>>>0){l=2;f=26;break}do if((d&65535)<128){m=c[k>>2]|0;if((j-m|0)<1){l=1;f=26;break a}c[k>>2]=m+1;a[m>>0]=d}else{if((d&65535)<2048){d=c[k>>2]|0;if((j-d|0)<2){l=1;f=26;break a}c[k>>2]=d+1;a[d>>0]=m>>>6|192;p=c[k>>2]|0;c[k>>2]=p+1;a[p>>0]=m&63|128;break}if((d&65535)<55296){d=c[k>>2]|0;if((j-d|0)<3){l=1;f=26;break a}c[k>>2]=d+1;a[d>>0]=m>>>12|224;p=c[k>>2]|0;c[k>>2]=p+1;a[p>>0]=m>>>6&63|128;p=c[k>>2]|0;c[k>>2]=p+1;a[p>>0]=m&63|128;break}if(!((d&65535)<56320)){if((d&65535)<57344){l=2;f=26;break a}d=c[k>>2]|0;if((j-d|0)<3){l=1;f=26;break a}c[k>>2]=d+1;a[d>>0]=m>>>12|224;p=c[k>>2]|0;c[k>>2]=p+1;a[p>>0]=m>>>6&63|128;p=c[k>>2]|0;c[k>>2]=p+1;a[p>>0]=m&63|128;break}if((h-o|0)<4){l=1;f=26;break a}p=o+2|0;d=e[p>>1]|0;if((d&64512|0)!=56320){l=2;f=26;break a}if((j-(c[k>>2]|0)|0)<4){l=1;f=26;break a}o=m&960;if(((o<<10)+65536|m<<10&64512|d&1023)>>>0>l>>>0){l=2;f=26;break a}c[g>>2]=p;o=(o>>>6)+1|0;p=c[k>>2]|0;c[k>>2]=p+1;a[p>>0]=o>>>2|240;p=c[k>>2]|0;c[k>>2]=p+1;a[p>>0]=m>>>2&15|o<<4&48|128;p=c[k>>2]|0;c[k>>2]=p+1;a[p>>0]=m<<4&48|d>>>6&15|128;p=c[k>>2]|0;c[k>>2]=p+1;a[p>>0]=d&63|128}while(0);o=(c[g>>2]|0)+2|0;c[g>>2]=o;if(!(o>>>0<f>>>0)){l=0;f=26;break}}if((f|0)==26){i=n;return l|0}return 0}function Wu(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;a=i;i=i+16|0;l=a+4|0;k=a;c[l>>2]=d;c[k>>2]=g;b=Xu(d,e,l,g,h,k,1114111,0)|0;c[f>>2]=d+((c[l>>2]|0)-d);c[j>>2]=g+((c[k>>2]|0)-g>>1<<1);i=a;return b|0}function Xu(e,f,g,h,j,k,l,m){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0;n=i;c[g>>2]=e;c[k>>2]=h;p=c[g>>2]|0;if(((((m&4|0)!=0?(f-p|0)>2:0)?(a[p>>0]|0)==-17:0)?(a[p+1>>0]|0)==-69:0)?(a[p+2>>0]|0)==-65:0){p=p+3|0;c[g>>2]=p}a:do if(p>>>0<f>>>0){e=f;h=j;m=c[k>>2]|0;b:while(1){if(!(m>>>0<j>>>0))break a;q=a[p>>0]|0;o=q&255;if(o>>>0>l>>>0){f=2;g=41;break}do if(q<<24>>24>-1){b[m>>1]=q&255;c[g>>2]=p+1}else{if((q&255)<194){f=2;g=41;break b}if((q&255)<224){if((e-p|0)<2){f=1;g=41;break b}q=d[p+1>>0]|0;if((q&192|0)!=128){f=2;g=41;break b}o=q&63|o<<6&1984;if(o>>>0>l>>>0){f=2;g=41;break b}b[m>>1]=o;c[g>>2]=p+2;break}if((q&255)<240){if((e-p|0)<3){f=1;g=41;break b}q=a[p+1>>0]|0;r=a[p+2>>0]|0;if((o|0)==224){if(!((q&-32)<<24>>24==-96)){f=2;g=41;break b}}else if((o|0)==237){if(!((q&-32)<<24>>24==-128)){f=2;g=41;break b}}else if(!((q&-64)<<24>>24==-128)){f=2;g=41;break b}r=r&255;if((r&192|0)!=128){f=2;g=41;break b}o=(q&255)<<6&4032|o<<12|r&63;if((o&65535)>>>0>l>>>0){f=2;g=41;break b}b[m>>1]=o;c[g>>2]=p+3;break}if(!((q&255)<245)){f=2;g=41;break b}if((e-p|0)<4){f=1;g=41;break b}q=a[p+1>>0]|0;r=a[p+2>>0]|0;s=a[p+3>>0]|0;if((o|0)==240){if(!((q+112<<24>>24&255)<48)){f=2;g=41;break b}}else if((o|0)==244){if(!((q&-16)<<24>>24==-128)){f=2;g=41;break b}}else if(!((q&-64)<<24>>24==-128)){f=2;g=41;break b}p=r&255;if((p&192|0)!=128){f=2;g=41;break b}r=s&255;if((r&192|0)!=128){f=2;g=41;break b}if((h-m|0)<4){f=1;g=41;break b}o=o&7;s=q&255;q=p<<6;r=r&63;if((s<<12&258048|o<<18|q&4032|r)>>>0>l>>>0){f=2;g=41;break b}b[m>>1]=s<<2&60|p>>>4&3|((s>>>4&3|o<<2)<<6)+16320|55296;s=m+2|0;c[k>>2]=s;b[s>>1]=r|q&960|56320;c[g>>2]=(c[g>>2]|0)+4}while(0);m=(c[k>>2]|0)+2|0;c[k>>2]=m;p=c[g>>2]|0;if(!(p>>>0<f>>>0))break a}if((g|0)==41){i=n;return f|0}}while(0);s=p>>>0<f>>>0&1;i=n;return s|0}function Yu(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function Zu(a){a=a|0;return 0}function _u(a){a=a|0;return 0}function $u(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;a=i;b=av(c,d,e,1114111,0)|0;i=a;return b|0}function av(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=i;if((((g&4|0)!=0?(c-b|0)>2:0)?(a[b>>0]|0)==-17:0)?(a[b+1>>0]|0)==-69:0)k=(a[b+2>>0]|0)==-65?b+3|0:b;else k=b;a:do if(k>>>0<c>>>0&(e|0)!=0){g=c;j=0;b:while(1){m=a[k>>0]|0;l=m&255;if(l>>>0>f>>>0)break a;do if(m<<24>>24>-1)k=k+1|0;else{if((m&255)<194)break a;if((m&255)<224){if((g-k|0)<2)break a;m=d[k+1>>0]|0;if((m&192|0)!=128)break a;if((m&63|l<<6&1984)>>>0>f>>>0)break a;k=k+2|0;break}if((m&255)<240){n=k;if((g-n|0)<3)break a;m=a[k+1>>0]|0;o=a[k+2>>0]|0;if((l|0)==237){if(!((m&-32)<<24>>24==-128)){f=23;break b}}else if((l|0)==224){if(!((m&-32)<<24>>24==-96)){f=21;break b}}else if(!((m&-64)<<24>>24==-128)){f=25;break b}n=o&255;if((n&192|0)!=128)break a;if(((m&255)<<6&4032|l<<12&61440|n&63)>>>0>f>>>0)break a;k=k+3|0;break}if(!((m&255)<245))break a;o=k;if((g-o|0)<4)break a;if((e-j|0)>>>0<2)break a;m=a[k+1>>0]|0;p=a[k+2>>0]|0;n=a[k+3>>0]|0;if((l|0)==244){if(!((m&-16)<<24>>24==-128)){f=36;break b}}else if((l|0)==240){if(!((m+112<<24>>24&255)<48)){f=34;break b}}else if(!((m&-64)<<24>>24==-128)){f=38;break b}o=p&255;if((o&192|0)!=128)break a;n=n&255;if((n&192|0)!=128)break a;if(((m&255)<<12&258048|l<<18&1835008|o<<6&4032|n&63)>>>0>f>>>0)break a;k=k+4|0;j=j+1|0}while(0);j=j+1|0;if(!(k>>>0<c>>>0&j>>>0<e>>>0))break a}if((f|0)==21){p=n-b|0;i=h;return p|0}else if((f|0)==23){p=n-b|0;i=h;return p|0}else if((f|0)==25){p=n-b|0;i=h;return p|0}else if((f|0)==34){p=o-b|0;i=h;return p|0}else if((f|0)==36){p=o-b|0;i=h;return p|0}else if((f|0)==38){p=o-b|0;i=h;return p|0}}while(0);p=k-b|0;i=h;return p|0}function bv(a){a=a|0;return 4}function cv(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function dv(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;a=i;i=i+16|0;l=a+4|0;k=a;c[l>>2]=d;c[k>>2]=g;b=ev(d,e,l,g,h,k,1114111,0)|0;c[f>>2]=d+((c[l>>2]|0)-d>>2<<2);c[j>>2]=g+((c[k>>2]|0)-g);i=a;return b|0}function ev(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0;l=i;c[e>>2]=b;c[h>>2]=f;do if((k&2|0)!=0)if((g-f|0)<3){k=1;i=l;return k|0}else{c[h>>2]=f+1;a[f>>0]=-17;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=-69;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=-65;break}while(0);b=c[e>>2]|0;if(!(b>>>0<d>>>0)){k=0;i=l;return k|0}a:while(1){b=c[b>>2]|0;if((b&-2048|0)==55296|b>>>0>j>>>0){e=2;j=19;break}do if(!(b>>>0<128)){if(b>>>0<2048){f=c[h>>2]|0;if((g-f|0)<2){e=1;j=19;break a}c[h>>2]=f+1;a[f>>0]=b>>>6|192;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=b&63|128;break}k=c[h>>2]|0;f=g-k|0;if(b>>>0<65536){if((f|0)<3){e=1;j=19;break a}c[h>>2]=k+1;a[k>>0]=b>>>12|224;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=b>>>6&63|128;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=b&63|128;break}else{if((f|0)<4){e=1;j=19;break a}c[h>>2]=k+1;a[k>>0]=b>>>18|240;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=b>>>12&63|128;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=b>>>6&63|128;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=b&63|128;break}}else{f=c[h>>2]|0;if((g-f|0)<1){e=1;j=19;break a}c[h>>2]=f+1;a[f>>0]=b}while(0);b=(c[e>>2]|0)+4|0;c[e>>2]=b;if(!(b>>>0<d>>>0)){e=0;j=19;break}}if((j|0)==19){i=l;return e|0}return 0}function fv(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;a=i;i=i+16|0;l=a+4|0;k=a;c[l>>2]=d;c[k>>2]=g;b=gv(d,e,l,g,h,k,1114111,0)|0;c[f>>2]=d+((c[l>>2]|0)-d);c[j>>2]=g+((c[k>>2]|0)-g>>2<<2);i=a;return b|0}function gv(b,e,f,g,h,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0;m=i;c[f>>2]=b;c[j>>2]=g;b=c[f>>2]|0;if(((((l&4|0)!=0?(e-b|0)>2:0)?(a[b>>0]|0)==-17:0)?(a[b+1>>0]|0)==-69:0)?(a[b+2>>0]|0)==-65:0){b=b+3|0;c[f>>2]=b}a:do if(b>>>0<e>>>0){l=e;g=c[j>>2]|0;b:while(1){if(!(g>>>0<h>>>0))break a;o=a[b>>0]|0;n=o&255;do if(o<<24>>24>-1){if(n>>>0>k>>>0){e=2;j=40;break b}c[g>>2]=n;c[f>>2]=b+1}else{if((o&255)<194){e=2;j=40;break b}if((o&255)<224){if((l-b|0)<2){e=1;j=40;break b}o=d[b+1>>0]|0;if((o&192|0)!=128){e=2;j=40;break b}n=o&63|n<<6&1984;if(n>>>0>k>>>0){e=2;j=40;break b}c[g>>2]=n;c[f>>2]=b+2;break}if((o&255)<240){if((l-b|0)<3){e=1;j=40;break b}o=a[b+1>>0]|0;p=a[b+2>>0]|0;if((n|0)==224){if(!((o&-32)<<24>>24==-96)){e=2;j=40;break b}}else if((n|0)==237){if(!((o&-32)<<24>>24==-128)){e=2;j=40;break b}}else if(!((o&-64)<<24>>24==-128)){e=2;j=40;break b}p=p&255;if((p&192|0)!=128){e=2;j=40;break b}n=(o&255)<<6&4032|n<<12&61440|p&63;if(n>>>0>k>>>0){e=2;j=40;break b}c[g>>2]=n;c[f>>2]=b+3;break}if(!((o&255)<245)){e=2;j=40;break b}if((l-b|0)<4){e=1;j=40;break b}o=a[b+1>>0]|0;p=a[b+2>>0]|0;q=a[b+3>>0]|0;if((n|0)==240){if(!((o+112<<24>>24&255)<48)){e=2;j=40;break b}}else if((n|0)==244){if(!((o&-16)<<24>>24==-128)){e=2;j=40;break b}}else if(!((o&-64)<<24>>24==-128)){e=2;j=40;break b}p=p&255;if((p&192|0)!=128){e=2;j=40;break b}q=q&255;if((q&192|0)!=128){e=2;j=40;break b}n=(o&255)<<12&258048|n<<18&1835008|p<<6&4032|q&63;if(n>>>0>k>>>0){e=2;j=40;break b}c[g>>2]=n;c[f>>2]=b+4}while(0);g=(c[j>>2]|0)+4|0;c[j>>2]=g;b=c[f>>2]|0;if(!(b>>>0<e>>>0))break a}if((j|0)==40){i=m;return e|0}}while(0);q=b>>>0<e>>>0&1;i=m;return q|0}function hv(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function iv(a){a=a|0;return 0}function jv(a){a=a|0;return 0}function kv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;a=i;b=lv(c,d,e,1114111,0)|0;i=a;return b|0}function lv(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=i;if((((g&4|0)!=0?(c-b|0)>2:0)?(a[b>>0]|0)==-17:0)?(a[b+1>>0]|0)==-69:0)k=(a[b+2>>0]|0)==-65?b+3|0:b;else k=b;a:do if(k>>>0<c>>>0&(e|0)!=0){g=c;j=1;b:while(1){m=a[k>>0]|0;l=m&255;do if(m<<24>>24>-1){if(l>>>0>f>>>0)break a;k=k+1|0}else{if((m&255)<194)break a;if((m&255)<224){if((g-k|0)<2)break a;m=d[k+1>>0]|0;if((m&192|0)!=128)break a;if((m&63|l<<6&1984)>>>0>f>>>0)break a;k=k+2|0;break}if((m&255)<240){m=k;if((g-m|0)<3)break a;n=a[k+1>>0]|0;o=a[k+2>>0]|0;if((l|0)==237){if(!((n&-32)<<24>>24==-128)){f=23;break b}}else if((l|0)==224){if(!((n&-32)<<24>>24==-96)){f=21;break b}}else if(!((n&-64)<<24>>24==-128)){f=25;break b}m=o&255;if((m&192|0)!=128)break a;if(((n&255)<<6&4032|l<<12&61440|m&63)>>>0>f>>>0)break a;k=k+3|0;break}if(!((m&255)<245))break a;o=k;if((g-o|0)<4)break a;m=a[k+1>>0]|0;p=a[k+2>>0]|0;n=a[k+3>>0]|0;if((l|0)==240){if(!((m+112<<24>>24&255)<48)){f=33;break b}}else if((l|0)==244){if(!((m&-16)<<24>>24==-128)){f=35;break b}}else if(!((m&-64)<<24>>24==-128)){f=37;break b}o=p&255;if((o&192|0)!=128)break a;n=n&255;if((n&192|0)!=128)break a;if(((m&255)<<12&258048|l<<18&1835008|o<<6&4032|n&63)>>>0>f>>>0)break a;k=k+4|0}while(0);if(!(k>>>0<c>>>0&j>>>0<e>>>0))break a;j=j+1|0}if((f|0)==21){p=m-b|0;i=h;return p|0}else if((f|0)==23){p=m-b|0;i=h;return p|0}else if((f|0)==25){p=m-b|0;i=h;return p|0}else if((f|0)==33){p=o-b|0;i=h;return p|0}else if((f|0)==35){p=o-b|0;i=h;return p|0}else if((f|0)==37){p=o-b|0;i=h;return p|0}}while(0);p=k-b|0;i=h;return p|0}function mv(a){a=a|0;return 4}function nv(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function ov(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function pv(a){a=a|0;var b=0;b=i;qv(a);Sw(a);i=b;return}function qv(a){a=a|0;var b=0;b=i;c[a>>2]=135336;Tm(a+12|0);i=b;return}function rv(a){a=a|0;var b=0;b=i;sv(a);Sw(a);i=b;return}function sv(a){a=a|0;var b=0;b=i;c[a>>2]=135376;Tm(a+16|0);i=b;return}function tv(b){b=b|0;return a[b+8>>0]|0}function uv(a){a=a|0;return c[a+8>>2]|0}function vv(b){b=b|0;return a[b+9>>0]|0}function wv(a){a=a|0;return c[a+12>>2]|0}function xv(a,b){a=a|0;b=b|0;var c=0;c=i;Om(a,b+12|0);i=c;return}function yv(a,b){a=a|0;b=b|0;var c=0;c=i;Om(a,b+16|0);i=c;return}function zv(a,b){a=a|0;b=b|0;b=i;Qm(a,135408,4);i=b;return}function Av(a,b){a=a|0;b=b|0;b=i;dn(a,135416,Hw(135416)|0);i=b;return}function Bv(a,b){a=a|0;b=b|0;b=i;Qm(a,135440,5);i=b;return}function Cv(a,b){a=a|0;b=b|0;b=i;dn(a,135448,Hw(135448)|0);i=b;return}function Dv(a){a=a|0;var b=0;b=i;a=c[a+4>>2]&74;if((a|0)==64)a=8;else if((a|0)==8)a=16;else if((a|0)==0)a=0;else a=10;i=b;return a|0}function Ev(b){b=b|0;var d=0;b=i;if((a[135480]|0)!=0){d=c[33868]|0;i=b;return d|0}if((Ha(135480)|0)==0){d=c[33868]|0;i=b;return d|0}if((a[142680]|0)==0?(Ha(142680)|0)!=0:0){vy(142512,0,168)|0;Jb(117,0,o|0)|0;Ra(142680)}Vm(142512,142688)|0;Vm(142524,142696)|0;Vm(142536,142704)|0;Vm(142548,142712)|0;Vm(142560,142728)|0;Vm(142572,142744)|0;Vm(142584,142752)|0;Vm(142596,142768)|0;Vm(142608,142776)|0;Vm(142620,142784)|0;Vm(142632,142792)|0;Vm(142644,142800)|0;Vm(142656,142808)|0;Vm(142668,142816)|0;c[33868]=142512;Ra(135480);d=c[33868]|0;i=b;return d|0}function Fv(b){b=b|0;var d=0;b=i;if((a[135496]|0)!=0){d=c[33872]|0;i=b;return d|0}if((Ha(135496)|0)==0){d=c[33872]|0;i=b;return d|0}if((a[142144]|0)==0?(Ha(142144)|0)!=0:0){vy(141976,0,168)|0;Jb(118,0,o|0)|0;Ra(142144)}jn(141976,142152)|0;jn(141988,142184)|0;jn(142e3,142216)|0;jn(142012,142248)|0;jn(142024,142288)|0;jn(142036,142328)|0;jn(142048,142360)|0;jn(142060,142400)|0;jn(142072,142416)|0;jn(142084,142432)|0;jn(142096,142448)|0;jn(142108,142464)|0;jn(142120,142480)|0;jn(142132,142496)|0;c[33872]=141976;Ra(135496);d=c[33872]|0;i=b;return d|0}function Gv(b){b=b|0;var d=0;b=i;if((a[135512]|0)!=0){d=c[33876]|0;i=b;return d|0}if((Ha(135512)|0)==0){d=c[33876]|0;i=b;return d|0}if((a[141752]|0)==0?(Ha(141752)|0)!=0:0){vy(141464,0,288)|0;Jb(119,0,o|0)|0;Ra(141752)}Vm(141464,141760)|0;Vm(141476,141768)|0;Vm(141488,141784)|0;Vm(141500,141792)|0;Vm(141512,141800)|0;Vm(141524,141808)|0;Vm(141536,141816)|0;Vm(141548,141824)|0;Vm(141560,141832)|0;Vm(141572,141848)|0;Vm(141584,141856)|0;Vm(141596,141872)|0;Vm(141608,141888)|0;Vm(141620,141896)|0;Vm(141632,141904)|0;Vm(141644,141912)|0;Vm(141656,141800)|0;Vm(141668,141920)|0;Vm(141680,141928)|0;Vm(141692,141936)|0;Vm(141704,141944)|0;Vm(141716,141952)|0;Vm(141728,141960)|0;Vm(141740,141968)|0;c[33876]=141464;Ra(135512);d=c[33876]|0;i=b;return d|0}function Hv(b){b=b|0;var d=0;b=i;if((a[135528]|0)!=0){d=c[33880]|0;i=b;return d|0}if((Ha(135528)|0)==0){d=c[33880]|0;i=b;return d|0}if((a[140912]|0)==0?(Ha(140912)|0)!=0:0){vy(140624,0,288)|0;Jb(120,0,o|0)|0;Ra(140912)}jn(140624,140920)|0;jn(140636,140952)|0;jn(140648,140992)|0;jn(140660,141016)|0;jn(140672,141336)|0;jn(140684,141040)|0;jn(140696,141064)|0;jn(140708,141088)|0;jn(140720,141120)|0;jn(140732,141160)|0;jn(140744,141192)|0;jn(140756,141232)|0;jn(140768,141272)|0;jn(140780,141288)|0;jn(140792,141304)|0;jn(140804,141320)|0;jn(140816,141336)|0;jn(140828,141352)|0;jn(140840,141368)|0;jn(140852,141384)|0;jn(140864,141400)|0;jn(140876,141416)|0;jn(140888,141432)|0;jn(140900,141448)|0;c[33880]=140624;Ra(135528);d=c[33880]|0;i=b;return d|0}function Iv(b){b=b|0;var d=0;b=i;if((a[135544]|0)!=0){d=c[33884]|0;i=b;return d|0}if((Ha(135544)|0)==0){d=c[33884]|0;i=b;return d|0}if((a[140600]|0)==0?(Ha(140600)|0)!=0:0){vy(140312,0,288)|0;Jb(121,0,o|0)|0;Ra(140600)}Vm(140312,140608)|0;Vm(140324,140616)|0;c[33884]=140312;Ra(135544);d=c[33884]|0;i=b;return d|0}function Jv(b){b=b|0;var d=0;b=i;if((a[135560]|0)!=0){d=c[33888]|0;i=b;return d|0}if((Ha(135560)|0)==0){d=c[33888]|0;i=b;return d|0}if((a[140272]|0)==0?(Ha(140272)|0)!=0:0){vy(139984,0,288)|0;Jb(122,0,o|0)|0;Ra(140272)}jn(139984,140280)|0;jn(139996,140296)|0;c[33888]=139984;Ra(135560);d=c[33888]|0;i=b;return d|0}function Kv(b){b=b|0;b=i;if((a[135584]|0)!=0){i=b;return 135568}if((Ha(135584)|0)==0){i=b;return 135568}Qm(135568,135592,8);Jb(123,135568,o|0)|0;Ra(135584);i=b;return 135568}function Lv(b){b=b|0;b=i;if((a[135624]|0)!=0){i=b;return 135608}if((Ha(135624)|0)==0){i=b;return 135608}dn(135608,135632,Hw(135632)|0);Jb(124,135608,o|0)|0;Ra(135624);i=b;return 135608}function Mv(b){b=b|0;b=i;if((a[135688]|0)!=0){i=b;return 135672}if((Ha(135688)|0)==0){i=b;return 135672}Qm(135672,135696,8);Jb(123,135672,o|0)|0;Ra(135688);i=b;return 135672}function Nv(b){b=b|0;b=i;if((a[135728]|0)!=0){i=b;return 135712}if((Ha(135728)|0)==0){i=b;return 135712}dn(135712,135736,Hw(135736)|0);Jb(124,135712,o|0)|0;Ra(135728);i=b;return 135712}function Ov(b){b=b|0;b=i;if((a[135792]|0)!=0){i=b;return 135776}if((Ha(135792)|0)==0){i=b;return 135776}Qm(135776,135800,20);Jb(123,135776,o|0)|0;Ra(135792);i=b;return 135776}function Pv(b){b=b|0;b=i;if((a[135840]|0)!=0){i=b;return 135824}if((Ha(135840)|0)==0){i=b;return 135824}dn(135824,135848,Hw(135848)|0);Jb(124,135824,o|0)|0;Ra(135840);i=b;return 135824}function Qv(b){b=b|0;b=i;if((a[135952]|0)!=0){i=b;return 135936}if((Ha(135952)|0)==0){i=b;return 135936}Qm(135936,135960,11);Jb(123,135936,o|0)|0;Ra(135952);i=b;return 135936}function Rv(b){b=b|0;b=i;if((a[135992]|0)!=0){i=b;return 135976}if((Ha(135992)|0)==0){i=b;return 135976}dn(135976,136e3,Hw(136e3)|0);Jb(124,135976,o|0)|0;Ra(135992);i=b;return 135976}function Sv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0.0;e=i;i=i+16|0;f=e;do if((a|0)!=(b|0)){g=tb()|0;h=c[g>>2]|0;c[g>>2]=0;j=+oy(a,f,np()|0);a=c[g>>2]|0;if((a|0)==0)c[g>>2]=h;if((c[f>>2]|0)!=(b|0)){c[d>>2]=4;j=0.0;break}if((a|0)==34)c[d>>2]=4}else{c[d>>2]=4;j=0.0}while(0);i=e;return+j}function Tv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0.0;e=i;i=i+16|0;f=e;do if((a|0)!=(b|0)){g=tb()|0;h=c[g>>2]|0;c[g>>2]=0;j=+oy(a,f,np()|0);a=c[g>>2]|0;if((a|0)==0)c[g>>2]=h;if((c[f>>2]|0)!=(b|0)){c[d>>2]=4;j=0.0;break}if((a|0)==34)c[d>>2]=4}else{c[d>>2]=4;j=0.0}while(0);i=e;return+j}function Uv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0.0;e=i;i=i+16|0;f=e;if((a|0)==(b|0)){c[d>>2]=4;j=0.0;i=e;return+j}g=tb()|0;h=c[g>>2]|0;c[g>>2]=0;j=+oy(a,f,np()|0);a=c[g>>2]|0;if((a|0)==0)c[g>>2]=h;if((c[f>>2]|0)!=(b|0)){c[d>>2]=4;j=0.0;i=e;return+j}if((a|0)==34)c[d>>2]=4;i=e;return+j}function Vv(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;g=i;i=i+16|0;h=g;do if((b|0)!=(d|0)){if((a[b>>0]|0)==45){c[e>>2]=4;e=0;f=0;break}j=tb()|0;k=c[j>>2]|0;c[j>>2]=0;f=pw(b,h,f,np()|0)|0;b=c[j>>2]|0;if((b|0)==0)c[j>>2]=k;if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;e=0;f=0;break}if((b|0)==34){c[e>>2]=4;e=-1;f=-1}else e=H}else{c[e>>2]=4;e=0;f=0}while(0);H=e;i=g;return f|0}function Wv(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+16|0;h=g;do if((b|0)!=(d|0)){if((a[b>>0]|0)==45){c[e>>2]=4;l=0;break}j=tb()|0;k=c[j>>2]|0;c[j>>2]=0;l=pw(b,h,f,np()|0)|0;b=H;f=c[j>>2]|0;if((f|0)==0)c[j>>2]=k;if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;l=0;break}if((f|0)==34|(b>>>0>0|(b|0)==0&l>>>0>4294967295)){c[e>>2]=4;l=-1;break}else break}else{c[e>>2]=4;l=0}while(0);i=g;return l|0}function Xv(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+16|0;h=g;do if((b|0)!=(d|0)){if((a[b>>0]|0)==45){c[e>>2]=4;l=0;break}j=tb()|0;k=c[j>>2]|0;c[j>>2]=0;l=pw(b,h,f,np()|0)|0;b=H;f=c[j>>2]|0;if((f|0)==0)c[j>>2]=k;if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;l=0;break}if((f|0)==34|(b>>>0>0|(b|0)==0&l>>>0>4294967295)){c[e>>2]=4;l=-1;break}else break}else{c[e>>2]=4;l=0}while(0);i=g;return l|0}function Yv(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+16|0;h=g;do if((b|0)!=(d|0)){if((a[b>>0]|0)==45){c[e>>2]=4;e=0;break}j=tb()|0;k=c[j>>2]|0;c[j>>2]=0;l=pw(b,h,f,np()|0)|0;b=H;f=c[j>>2]|0;if((f|0)==0)c[j>>2]=k;if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;e=0;break}if((f|0)==34|(b>>>0>0|(b|0)==0&l>>>0>65535)){c[e>>2]=4;e=-1;break}else{e=l&65535;break}}else{c[e>>2]=4;e=0}while(0);i=g;return e|0}function Zv(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;j=i;i=i+16|0;g=j;if((a|0)==(b|0)){c[d>>2]=4;e=0;k=0;H=e;i=j;return k|0}h=tb()|0;f=c[h>>2]|0;c[h>>2]=0;e=qw(a,g,e,np()|0)|0;a=H;k=c[h>>2]|0;if((k|0)==0)c[h>>2]=f;if((c[g>>2]|0)!=(b|0)){c[d>>2]=4;e=0;k=0;H=e;i=j;return k|0}if((k|0)==34){c[d>>2]=4;k=(a|0)>0|(a|0)==0&e>>>0>0;H=k?2147483647:-2147483648;i=j;return(k?-1:0)|0}else{k=e;H=a;i=j;return k|0}return 0}function _v(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;g=f;a:do if((a|0)==(b|0)){c[d>>2]=4;a=0}else{h=tb()|0;j=c[h>>2]|0;c[h>>2]=0;a=qw(a,g,e,np()|0)|0;e=H;k=c[h>>2]|0;if((k|0)==0)c[h>>2]=j;if((c[g>>2]|0)!=(b|0)){c[d>>2]=4;a=0;break}do if((k|0)==34){c[d>>2]=4;if((e|0)>0|(e|0)==0&a>>>0>0){a=2147483647;break a}}else{if((e|0)<-1|(e|0)==-1&a>>>0<2147483648){c[d>>2]=4;break}if((e|0)>0|(e|0)==0&a>>>0>2147483647){c[d>>2]=4;a=2147483647;break a}else break a}while(0);a=-2147483648}while(0);i=f;return a|0}function $v(a){a=a|0;var b=0,e=0,f=0;b=i;f=a+4|0;e=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;f=f+4|0;f=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;a=(c[a>>2]|0)+(f>>1)|0;if((f&1|0)==0){f=e;Tb[f&127](a);i=b;return}else{f=c[(c[a>>2]|0)+e>>2]|0;Tb[f&127](a);i=b;return}}function aw(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;e=i;i=i+32|0;d=e;g=c[a+8>>2]|0;f=c[a+4>>2]|0;if(!(g-f>>2>>>0<b>>>0)){bw(a,b);i=e;return}j=c[a>>2]|0;f=f-j>>2;h=f+b|0;if(h>>>0>1073741823)ht(0);g=g-j|0;if(g>>2>>>0<536870911){g=g>>1;g=g>>>0<h>>>0?h:g}else g=1073741823;fw(d,g,f,a+16|0);cw(d,b);dw(a,d);ew(d);i=e;return}function bw(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;a=a+4|0;e=c[a>>2]|0;do{if((e|0)==0)e=0;else{c[e>>2]=0;e=c[a>>2]|0}e=e+4|0;c[a>>2]=e;b=b+ -1|0}while((b|0)!=0);i=d;return}function cw(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;a=a+8|0;e=c[a>>2]|0;do{if((e|0)==0)e=0;else{c[e>>2]=0;e=c[a>>2]|0}e=e+4|0;c[a>>2]=e;b=b+ -1|0}while((b|0)!=0);i=d;return}function dw(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;f=c[a>>2]|0;h=a+4|0;e=b+4|0;g=(c[h>>2]|0)-f|0;j=(c[e>>2]|0)+(0-(g>>2)<<2)|0;c[e>>2]=j;By(j|0,f|0,g|0)|0;g=c[a>>2]|0;c[a>>2]=c[e>>2];c[e>>2]=g;g=b+8|0;f=c[h>>2]|0;c[h>>2]=c[g>>2];c[g>>2]=f;g=a+8|0;a=b+12|0;f=c[g>>2]|0;c[g>>2]=c[a>>2];c[a>>2]=f;c[b>>2]=c[e>>2];i=d;return}function ew(b){b=b|0;var d=0,e=0,f=0,g=0;d=i;f=c[b+4>>2]|0;e=b+8|0;g=c[e>>2]|0;if((g|0)!=(f|0))c[e>>2]=g+(~((g+ -4+(0-f)|0)>>>2)<<2);e=c[b>>2]|0;if((e|0)==0){i=d;return}b=c[b+16>>2]|0;if((b|0)==(e|0)){a[b+112>>0]=0;i=d;return}else{Sw(e);i=d;return}}function fw(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;h=b+12|0;c[h>>2]=0;c[b+16>>2]=f;do if((d|0)!=0){j=f+112|0;if((a[j>>0]|0)==0&d>>>0<29){a[j>>0]=1;break}else{f=Qw(d<<2)|0;break}}else f=0;while(0);c[b>>2]=f;j=f+(e<<2)|0;c[b+8>>2]=j;c[b+4>>2]=j;c[h>>2]=f+(d<<2);i=g;return}function gw(b,d){b=b|0;d=d|0;var e=0,f=0;e=i;if(d>>>0>1073741823)ht(0);f=b+128|0;if((a[f>>0]|0)==0&d>>>0<29){a[f>>0]=1;f=b+16|0}else f=Qw(d<<2)|0;c[b+4>>2]=f;c[b>>2]=f;c[b+8>>2]=f+(d<<2);i=e;return}function hw(b,d){b=b|0;d=d|0;var e=0;e=i;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;a[b+128>>0]=0;if((d|0)==0){i=e;return}gw(b,d);bw(b,d);i=e;return}function iw(b){b=b|0;var d=0,e=0,f=0,g=0;d=i;e=c[b>>2]|0;if((e|0)==0){i=d;return}f=b+4|0;g=c[f>>2]|0;if((g|0)!=(e|0))c[f>>2]=g+(~((g+ -4+(0-e)|0)>>>2)<<2);if((b+16|0)==(e|0)){a[b+128>>0]=0;i=d;return}else{Sw(e);i=d;return}}function jw(a){a=a|0;a=i;gn(140260|0);gn(140248|0);gn(140236|0);gn(140224|0);gn(140212|0);gn(140200|0);gn(140188|0);gn(140176|0);gn(140164|0);gn(140152|0);gn(140140|0);gn(140128|0);gn(140116|0);gn(140104|0);gn(140092|0);gn(140080|0);gn(140068|0);gn(140056|0);gn(140044|0);gn(140032|0);gn(140020|0);gn(140008|0);gn(139996|0);gn(139984);i=a;return}function kw(a){a=a|0;a=i;Tm(140588|0);Tm(140576|0);Tm(140564|0);Tm(140552|0);Tm(140540|0);Tm(140528|0);Tm(140516|0);Tm(140504|0);Tm(140492|0);Tm(140480|0);Tm(140468|0);Tm(140456|0);Tm(140444|0);Tm(140432|0);Tm(140420|0);Tm(140408|0);Tm(140396|0);Tm(140384|0);Tm(140372|0);Tm(140360|0);Tm(140348|0);Tm(140336|0);Tm(140324|0);Tm(140312);i=a;return}function lw(a){a=a|0;a=i;gn(140900|0);gn(140888|0);gn(140876|0);gn(140864|0);gn(140852|0);gn(140840|0);gn(140828|0);gn(140816|0);gn(140804|0);gn(140792|0);gn(140780|0);gn(140768|0);gn(140756|0);gn(140744|0);gn(140732|0);gn(140720|0);gn(140708|0);gn(140696|0);gn(140684|0);gn(140672|0);gn(140660|0);gn(140648|0);gn(140636|0);gn(140624);i=a;return}function mw(a){a=a|0;a=i;Tm(141740|0);Tm(141728|0);Tm(141716|0);Tm(141704|0);Tm(141692|0);Tm(141680|0);Tm(141668|0);Tm(141656|0);Tm(141644|0);Tm(141632|0);Tm(141620|0);Tm(141608|0);Tm(141596|0);Tm(141584|0);Tm(141572|0);Tm(141560|0);Tm(141548|0);Tm(141536|0);Tm(141524|0);Tm(141512|0);Tm(141500|0);Tm(141488|0);Tm(141476|0);Tm(141464);i=a;return}function nw(a){a=a|0;a=i;gn(142132|0);gn(142120|0);gn(142108|0);gn(142096|0);gn(142084|0);gn(142072|0);gn(142060|0);gn(142048|0);gn(142036|0);gn(142024|0);gn(142012|0);gn(142e3|0);gn(141988|0);gn(141976);i=a;return}function ow(a){a=a|0;a=i;Tm(142668|0);Tm(142656|0);Tm(142644|0);Tm(142632|0);Tm(142620|0);Tm(142608|0);Tm(142596|0);Tm(142584|0);Tm(142572|0);Tm(142560|0);Tm(142548|0);Tm(142536|0);Tm(142524|0);Tm(142512);i=a;return}function pw(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=i;d=py(a,b,c)|0;i=e;return d|0}function qw(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=i;d=qy(a,b,c)|0;i=e;return d|0}function rw(a,b){a=a|0;b=b|0;return(a+ -48|0)>>>0<10|0}function sw(a,b){a=a|0;b=b|0;var c=0;c=i;b=Ux(a)|0;i=c;return b|0}function tw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=i;a=uw(0,a,b,(c|0)!=0?c:143032)|0;i=d;return a|0}function uw(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+16|0;h=g;c[h>>2]=b;f=(f|0)==0?143040:f;k=c[f>>2]|0;a:do if((d|0)==0){if((k|0)==0){k=0;i=g;return k|0}}else{if((b|0)==0)c[h>>2]=h;else h=b;if((e|0)==0){k=-2;i=g;return k|0}do if((k|0)==0){b=a[d>>0]|0;j=b&255;if(b<<24>>24>-1){c[h>>2]=j;k=b<<24>>24!=0&1;i=g;return k|0}else{b=j+ -194|0;if(b>>>0>50)break a;k=c[142824+(b<<2)>>2]|0;b=e+ -1|0;d=d+1|0;break}}else b=e;while(0);b:do if((b|0)!=0){j=a[d>>0]|0;l=(j&255)>>>3;if((l+ -16|l+(k>>26))>>>0>7)break a;while(1){d=d+1|0;k=(j&255)+ -128|k<<6;b=b+ -1|0;if((k|0)>=0)break;if((b|0)==0)break b;j=a[d>>0]|0;if(((j&255)+ -128|0)>>>0>63)break a}c[f>>2]=0;c[h>>2]=k;l=e-b|0;i=g;return l|0}while(0);c[f>>2]=k;l=-2;i=g;return l|0}while(0);c[f>>2]=0;c[(tb()|0)>>2]=84;l=-1;i=g;return l|0}function vw(a){a=a|0;if((a|0)==0)a=1;else a=(c[a>>2]|0)==0;return a&1|0}function ww(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;h=i;i=i+1040|0;k=h+8|0;g=h;l=c[b>>2]|0;c[g>>2]=l;j=(a|0)!=0;m=j?e:256;e=j?a:k;a:do if((l|0)==0|(m|0)==0){k=l;a=0}else{a=0;while(1){n=d>>>2;o=n>>>0>=m>>>0;if(!(o|d>>>0>131)){k=l;break a}l=o?m:n;d=d-l|0;l=xw(e,g,l,f)|0;if((l|0)==-1)break;if((e|0)==(k|0))e=k;else{m=m-l|0;e=e+(l<<2)|0}a=l+a|0;l=c[g>>2]|0;if((l|0)==0|(m|0)==0){k=l;break a}}k=c[g>>2]|0;a=-1;m=0}while(0);b:do if((k|0)!=0?!((m|0)==0|(d|0)==0):0){while(1){l=uw(e,k,d,f)|0;if((l+2|0)>>>0<3)break;k=(c[g>>2]|0)+l|0;c[g>>2]=k;m=m+ -1|0;a=a+1|0;if((m|0)==0|(d|0)==(l|0))break b;else{d=d-l|0;e=e+4|0}}if((l|0)==-1){a=-1;break}else if((l|0)==0){c[g>>2]=0;break}else{c[f>>2]=0;break}}while(0);if(!j){i=h;return a|0}c[b>>2]=c[g>>2];i=h;return a|0}



function xw(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;h=i;k=c[e>>2]|0;if((g|0)!=0?(l=c[g>>2]|0,(l|0)!=0):0)if((b|0)==0){j=f;g=16}else{c[g>>2]=0;j=f;g=37}else if((b|0)==0){j=f;g=7}else{j=f;g=6}a:while(1)if((g|0)==6){if((j|0)==0){g=26;break}while(1){l=a[k>>0]|0;do if(((l&255)+ -1|0)>>>0<127?(k&3|0)==0&j>>>0>4:0){while(1){l=c[k>>2]|0;if(((l+ -16843009|l)&-2139062144|0)!=0){g=31;break}c[b>>2]=l&255;c[b+4>>2]=d[k+1>>0];c[b+8>>2]=d[k+2>>0];n=k+4|0;m=b+16|0;c[b+12>>2]=d[k+3>>0];j=j+ -4|0;if(j>>>0>4){k=n;b=m}else{g=32;break}}if((g|0)==31){l=l&255;break}else if((g|0)==32){l=a[n>>0]|0;k=n;b=m;break}}while(0);g=l&255;if(!((g+ -1|0)>>>0<127))break;k=k+1|0;c[b>>2]=g;j=j+ -1|0;if((j|0)==0){g=26;break a}else b=b+4|0}g=g+ -194|0;if(g>>>0>50){g=48;break}l=c[142824+(g<<2)>>2]|0;k=k+1|0;g=37;continue}else if((g|0)==7){g=a[k>>0]|0;if(((g&255)+ -1|0)>>>0<127?(k&3|0)==0:0){g=c[k>>2]|0;if(((g+ -16843009|g)&-2139062144|0)==0)do{k=k+4|0;j=j+ -4|0;g=c[k>>2]|0}while(((g+ -16843009|g)&-2139062144|0)==0);g=g&255}g=g&255;if((g+ -1|0)>>>0<127){k=k+1|0;j=j+ -1|0;g=7;continue}g=g+ -194|0;if(g>>>0>50){g=48;break}l=c[142824+(g<<2)>>2]|0;k=k+1|0;g=16;continue}else if((g|0)==16){n=(d[k>>0]|0)>>>3;if((n+ -16|n+(l>>26))>>>0>7){g=17;break}g=k+1|0;if((l&33554432|0)!=0){if(((d[g>>0]|0)+ -128|0)>>>0>63){g=20;break}g=k+2|0;if((l&524288|0)==0)k=g;else{if(((d[g>>0]|0)+ -128|0)>>>0>63){g=23;break}k=k+3|0}}else k=g;j=j+ -1|0;g=7;continue}else if((g|0)==37){m=d[k>>0]|0;n=m>>>3;if((n+ -16|n+(l>>26))>>>0>7){g=38;break}g=k+1|0;l=m+ -128|l<<6;if((l|0)<0){m=(d[g>>0]|0)+ -128|0;if(m>>>0>63){g=41;break}g=k+2|0;l=m|l<<6;if((l|0)<0){g=(d[g>>0]|0)+ -128|0;if(g>>>0>63){g=44;break}l=g|l<<6;k=k+3|0}else k=g}else k=g;c[b>>2]=l;j=j+ -1|0;b=b+4|0;g=6;continue}if((g|0)==17){k=k+ -1|0;g=47}else if((g|0)==20){k=k+ -1|0;g=47}else if((g|0)==23){k=k+ -1|0;g=47}else if((g|0)==26){c[e>>2]=k;n=f;i=h;return n|0}else if((g|0)==38){k=k+ -1|0;g=47}else if((g|0)==41){k=k+ -1|0;g=47}else if((g|0)==44){k=k+ -1|0;g=47}if((g|0)==47)if((l|0)==0)g=48;if((g|0)==48)if((a[k>>0]|0)==0){if((b|0)!=0){c[b>>2]=0;c[e>>2]=0}n=f-j|0;i=h;return n|0}c[(tb()|0)>>2]=84;if((b|0)==0){n=-1;i=h;return n|0}c[e>>2]=k;n=-1;i=h;return n|0}function yw(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;i=i+16|0;h=g;c[h>>2]=b;if((e|0)==0){j=0;i=g;return j|0}do if((f|0)!=0){if((b|0)==0)c[h>>2]=h;else h=b;b=a[e>>0]|0;j=b&255;if(b<<24>>24>-1){c[h>>2]=j;j=b<<24>>24!=0&1;i=g;return j|0}j=j+ -194|0;if(!(j>>>0>50)){b=e+1|0;j=c[142824+(j<<2)>>2]|0;if(f>>>0<4?(j&-2147483648>>>((f*6|0)+ -6|0)|0)!=0:0)break;f=d[b>>0]|0;b=f>>>3;if(!((b+ -16|b+(j>>26))>>>0>7)){f=f+ -128|j<<6;if((f|0)>=0){c[h>>2]=f;j=2;i=g;return j|0}b=(d[e+2>>0]|0)+ -128|0;if(!(b>>>0>63)){f=b|f<<6;if((f|0)>=0){c[h>>2]=f;j=3;i=g;return j|0}e=(d[e+3>>0]|0)+ -128|0;if(!(e>>>0>63)){c[h>>2]=e|f<<6;j=4;i=g;return j|0}}}}}while(0);c[(tb()|0)>>2]=84;j=-1;i=g;return j|0}function zw(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;h=i;i=i+272|0;j=h+8|0;g=h;k=c[b>>2]|0;c[g>>2]=k;f=(a|0)!=0;l=f?e:256;e=f?a:j;a:do if((k|0)==0|(l|0)==0){j=k;a=0}else{a=0;while(1){m=d>>>0>=l>>>0;if(!(m|d>>>0>32)){j=k;break a}k=m?l:d;d=d-k|0;k=Aw(e,g,k,0)|0;if((k|0)==-1)break;if((e|0)==(j|0))e=j;else{l=l-k|0;e=e+k|0}a=k+a|0;k=c[g>>2]|0;if((k|0)==0|(l|0)==0){j=k;break a}}j=c[g>>2]|0;a=-1;l=0}while(0);b:do if((j|0)!=0?!((l|0)==0|(d|0)==0):0){while(1){k=dy(e,c[j>>2]|0,0)|0;if((k+1|0)>>>0<2)break;j=(c[g>>2]|0)+4|0;c[g>>2]=j;d=d+ -1|0;a=a+1|0;if((l|0)==(k|0)|(d|0)==0)break b;else{l=l-k|0;e=e+k|0}}if((k|0)==0)c[g>>2]=0;else a=-1}while(0);if(!f){i=h;return a|0}c[b>>2]=c[g>>2];i=h;return a|0}function Aw(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+16|0;f=g;if((b|0)==0){j=c[d>>2]|0;k=c[j>>2]|0;if((k|0)==0){m=0;i=g;return m|0}else h=0;while(1){if(k>>>0>127){k=dy(f,k,0)|0;if((k|0)==-1){h=-1;j=26;break}}else k=1;h=k+h|0;j=j+4|0;k=c[j>>2]|0;if((k|0)==0){j=26;break}}if((j|0)==26){i=g;return h|0}}a:do if(e>>>0>3){l=c[d>>2]|0;k=e;while(1){m=c[l>>2]|0;if((m+ -1|0)>>>0>126){if((m|0)==0)break;m=dy(b,m,0)|0;if((m|0)==-1){h=-1;j=26;break}k=k-m|0;b=b+m|0}else{a[b>>0]=m;l=c[d>>2]|0;k=k+ -1|0;b=b+1|0}l=l+4|0;c[d>>2]=l;if(!(k>>>0>3))break a}if((j|0)==26){i=g;return h|0}a[b>>0]=0;c[d>>2]=0;m=e-k|0;i=g;return m|0}else k=e;while(0);if((k|0)==0){m=e;i=g;return m|0}j=c[d>>2]|0;while(1){l=c[j>>2]|0;if((l+ -1|0)>>>0>126){if((l|0)==0){j=19;break}m=dy(f,l,0)|0;if((m|0)==-1){h=-1;j=26;break}if(m>>>0>k>>>0){j=22;break}dy(b,c[j>>2]|0,0)|0;l=k-m|0;m=b+m|0}else{a[b>>0]=l;j=c[d>>2]|0;l=k+ -1|0;m=b+1|0}j=j+4|0;c[d>>2]=j;if((l|0)==0){h=e;j=26;break}else{k=l;b=m}}if((j|0)==19){a[b>>0]=0;c[d>>2]=0;m=e-k|0;i=g;return m|0}else if((j|0)==22){m=e-k|0;i=g;return m|0}else if((j|0)==26){i=g;return h|0}return 0}function Bw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;f=a+84|0;g=c[f>>2]|0;h=d+256|0;j=ry(g,0,h)|0;if((j|0)!=0)h=j-g|0;j=h>>>0<d>>>0?h:d;By(b|0,g|0,j|0)|0;c[a+4>>2]=g+j;h=g+h|0;c[a+8>>2]=h;c[f>>2]=h;i=e;return j|0}function Cw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;f=e;c[f>>2]=d;d=Fw(a,b,f)|0;i=e;return d|0}function Dw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;j=e;f=Nx(240)|0;do if((f|0)!=0){c[j>>2]=c[d>>2];j=my(f,240,b,j)|0;if(j>>>0<240){h=Qx(f,j+1|0)|0;c[a>>2]=(h|0)!=0?h:f;break}Ox(f);if((j|0)>=0?(h=j+1|0,g=Nx(h)|0,c[a>>2]=g,(g|0)!=0):0)j=my(g,h,b,d)|0;else j=-1}else j=-1;while(0);i=e;return j|0}function Ew(e,f,j){e=e|0;f=f|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0.0;l=i;i=i+304|0;y=l+16|0;z=l+8|0;A=l+33|0;o=l;t=l+32|0;B=a[f>>0]|0;if(B<<24>>24==0){N=0;i=l;return N|0}p=e+4|0;q=e+100|0;w=e+108|0;x=e+8|0;n=A+10|0;s=A+33|0;r=z+4|0;u=A+46|0;v=A+94|0;m=0;D=0;I=0;G=0;a:while(1){b:do if((Tx(B&255)|0)==0){C=(a[f>>0]|0)==37;c:do if(C){J=f+1|0;B=a[J>>0]|0;do if(B<<24>>24==37)break c;else if(B<<24>>24==42){B=0;J=f+2|0}else{C=(B&255)+ -48|0;if(C>>>0<10?(a[f+2>>0]|0)==36:0){c[y>>2]=c[j>>2];while(1){N=c[y>>2]|0;B=c[N>>2]|0;c[y>>2]=N+4;if(C>>>0>1)C=C+ -1|0;else break}J=f+3|0;break}N=c[j>>2]|0;B=c[N>>2]|0;c[j>>2]=N+4}while(0);F=a[J>>0]|0;C=F&255;if((C+ -48|0)>>>0<10){E=0;do{E=(E*10|0)+ -48+C|0;J=J+1|0;F=a[J>>0]|0;C=F&255}while((C+ -48|0)>>>0<10)}else E=0;if(F<<24>>24==109){J=J+1|0;F=a[J>>0]|0;C=(B|0)!=0&1;I=0;G=0}else C=0;f=J+1|0;switch(F&255|0){case 108:{F=(a[f>>0]|0)==108;f=F?J+2|0:f;F=F?3:1;break};case 116:case 122:{F=1;break};case 76:{F=2;break};case 110:case 112:case 67:case 83:case 91:case 99:case 115:case 88:case 71:case 70:case 69:case 65:case 103:case 102:case 101:case 97:case 120:case 117:case 111:case 105:case 100:{f=J;F=0;break};case 106:{F=3;break};case 104:{F=(a[f>>0]|0)==104;f=F?J+2|0:f;F=F?-2:-1;break};default:{k=162;break a}}L=d[f>>0]|0;J=(L&47|0)==3;L=J?L|32:L;J=J?1:F;if((L|0)==99)E=(E|0)<1?1:E;else if((L|0)!=91)if((L|0)==110){if((B|0)==0)break b;switch(J|0){case-1:{b[B>>1]=D;break b};case 0:{c[B>>2]=D;break b};case 1:{c[B>>2]=D;break b};case 3:{N=B;c[N>>2]=D;c[N+4>>2]=((D|0)<0)<<31>>31;break b};case-2:{a[B>>0]=D;break b};default:break b}}else{Yx(e,0);do{F=c[p>>2]|0;if(F>>>0<(c[q>>2]|0)>>>0){c[p>>2]=F+1;F=d[F>>0]|0}else F=Zx(e)|0}while((Tx(F)|0)!=0);F=c[p>>2]|0;if((c[q>>2]|0)!=0){F=F+ -1|0;c[p>>2]=F}D=(c[w>>2]|0)+D+F-(c[x>>2]|0)|0}Yx(e,E);F=c[p>>2]|0;K=c[q>>2]|0;if(F>>>0<K>>>0)c[p>>2]=F+1;else{if((Zx(e)|0)<0){k=162;break a}K=c[q>>2]|0}if((K|0)!=0)c[p>>2]=(c[p>>2]|0)+ -1;d:do switch(L|0){case 91:case 99:case 115:{F=(L|0)==99;e:do if((L&239|0)==99){vy(A|0,-1,257)|0;a[A>>0]=0;if((L|0)==115){a[s>>0]=0;a[n+0>>0]=0;a[n+1>>0]=0;a[n+2>>0]=0;a[n+3>>0]=0;a[n+4>>0]=0}}else{N=f+1|0;M=(a[N>>0]|0)==94;L=M&1;f=M?f+2|0:N;vy(A|0,M&1|0,257)|0;a[A>>0]=0;M=a[f>>0]|0;if(M<<24>>24==45){L=(L^1)&255;a[u>>0]=L;f=f+1|0}else if(M<<24>>24==93){L=(L^1)&255;a[v>>0]=L;f=f+1|0}else L=(L^1)&255;while(1){N=a[f>>0]|0;if(N<<24>>24==93)break e;else if(N<<24>>24==45){M=f+1|0;N=a[M>>0]|0;if(!(N<<24>>24==93|N<<24>>24==0)){f=a[f+ -1>>0]|0;if((f&255)<(N&255)){f=f&255;do{f=f+1|0;a[A+f>>0]=L;N=a[M>>0]|0}while((f|0)<(N&255|0));f=M}else f=M}else N=45}else if(N<<24>>24==0){k=162;break a}a[A+((N&255)+1)>>0]=L;f=f+1|0}}while(0);M=F?E+1|0:31;I=(J|0)==1;G=(C|0)!=0;f:do if(I){if(G){J=Nx(M<<2)|0;if((J|0)==0){I=0;G=J;k=162;break a}}else J=B;c[z>>2]=0;c[r>>2]=0;L=0;K=M;g:while(1){if((J|0)==0)while(1){M=c[p>>2]|0;if(M>>>0<(c[q>>2]|0)>>>0){c[p>>2]=M+1;M=d[M>>0]|0}else M=Zx(e)|0;if((a[A+(M+1)>>0]|0)==0){J=0;break g}a[t>>0]=M;M=uw(o,t,1,z)|0;if((M|0)==-2)continue;else if((M|0)==-1){I=0;G=0;k=162;break a}if(G&(L|0)==(K|0))break}else{if(!G){k=98;break}while(1){while(1){M=c[p>>2]|0;if(M>>>0<(c[q>>2]|0)>>>0){c[p>>2]=M+1;M=d[M>>0]|0}else M=Zx(e)|0;if((a[A+(M+1)>>0]|0)==0)break g;a[t>>0]=M;M=uw(o,t,1,z)|0;if((M|0)==-1){I=0;G=J;k=162;break a}else if(!((M|0)==-2))break}c[J+(L<<2)>>2]=c[o>>2];L=L+1|0;if((L|0)==(K|0)){L=K;break}}}K=K<<1|1;M=Qx(J,K<<2)|0;if((M|0)==0){I=0;G=J;k=162;break a}J=M}h:do if((k|0)==98)while(1){k=0;while(1){K=c[p>>2]|0;if(K>>>0<(c[q>>2]|0)>>>0){c[p>>2]=K+1;K=d[K>>0]|0}else K=Zx(e)|0;if((a[A+(K+1)>>0]|0)==0)break h;a[t>>0]=K;K=uw(o,t,1,z)|0;if((K|0)==-1){C=0;I=0;G=J;k=162;break a}else if(!((K|0)==-2))break}c[J+(L<<2)>>2]=c[o>>2];L=L+1|0;k=98}while(0);if((vw(z)|0)==0){I=0;G=J;k=162;break a}else K=0}else{if(G){J=Nx(M)|0;if((J|0)==0){I=0;G=0;k=162;break a}else{L=0;K=M}while(1){do{M=c[p>>2]|0;if(M>>>0<(c[q>>2]|0)>>>0){c[p>>2]=M+1;M=d[M>>0]|0}else M=Zx(e)|0;if((a[A+(M+1)>>0]|0)==0){K=J;J=0;break f}a[J+L>>0]=M;L=L+1|0}while((L|0)!=(K|0));M=K<<1|1;L=Qx(J,M)|0;if((L|0)==0){I=J;G=0;k=162;break a}else{N=K;K=M;J=L;L=N}}}if((B|0)==0)while(1){J=c[p>>2]|0;if(J>>>0<K>>>0){c[p>>2]=J+1;J=d[J>>0]|0}else J=Zx(e)|0;if((a[A+(J+1)>>0]|0)==0){L=0;K=0;J=0;break f}K=c[q>>2]|0}else{L=0;while(1){J=c[p>>2]|0;if(J>>>0<K>>>0){c[p>>2]=J+1;J=d[J>>0]|0}else J=Zx(e)|0;if((a[A+(J+1)>>0]|0)==0){K=B;J=0;break f}a[B+L>>0]=J;K=c[q>>2]|0;L=L+1|0}}}while(0);M=c[p>>2]|0;if((c[q>>2]|0)!=0){M=M+ -1|0;c[p>>2]=M}M=M-(c[x>>2]|0)+(c[w>>2]|0)|0;if((M|0)==0){I=K;G=J;break a}if(!((M|0)==(E|0)|F^1)){I=K;G=J;break a}do if(G)if(I){c[B>>2]=J;break}else{c[B>>2]=K;break}while(0);if(!F){if((J|0)!=0)c[J+(L<<2)>>2]=0;if((K|0)==0){I=0;G=J}else{a[K+L>>0]=0;I=K;G=J}}else{I=K;G=J}break};case 111:{E=8;k=144;break};case 117:case 100:{E=10;k=144;break};case 105:{E=0;k=144;break};case 120:case 88:case 112:{E=16;k=144;break};case 71:case 103:case 70:case 102:case 69:case 101:case 65:case 97:{O=+Wx(e,J,0);if((c[w>>2]|0)==((c[x>>2]|0)-(c[p>>2]|0)|0))break a;if((B|0)!=0)if((J|0)==0){g[B>>2]=O;break d}else if((J|0)==1){h[B>>3]=O;break d}else if((J|0)==2){h[B>>3]=O;break d}else break d;break};default:{}}while(0);i:do if((k|0)==144){k=0;E=Vx(e,E,0,-1,-1)|0;if((c[w>>2]|0)==((c[x>>2]|0)-(c[p>>2]|0)|0))break a;C=(B|0)==0;if(!((L|0)!=112|C)){c[B>>2]=E;break}if(!C)switch(J|0){case-2:{a[B>>0]=E;break i};case-1:{b[B>>1]=E;break i};case 0:{c[B>>2]=E;break i};case 1:{c[B>>2]=E;break i};case 3:{N=B;c[N>>2]=E;c[N+4>>2]=H;break i};default:break i}}while(0);m=((B|0)!=0&1)+m|0;D=(c[w>>2]|0)+D+(c[p>>2]|0)-(c[x>>2]|0)|0;break b}while(0);f=f+(C&1)|0;Yx(e,0);B=c[p>>2]|0;if(B>>>0<(c[q>>2]|0)>>>0){c[p>>2]=B+1;B=d[B>>0]|0}else B=Zx(e)|0;if((B|0)!=(d[f>>0]|0)){k=19;break a}D=D+1|0}else{while(1){B=f+1|0;if((Tx(d[B>>0]|0)|0)==0)break;else f=B}Yx(e,0);do{B=c[p>>2]|0;if(B>>>0<(c[q>>2]|0)>>>0){c[p>>2]=B+1;B=d[B>>0]|0}else B=Zx(e)|0}while((Tx(B)|0)!=0);B=c[p>>2]|0;if((c[q>>2]|0)!=0){B=B+ -1|0;c[p>>2]=B}D=(c[w>>2]|0)+D+B-(c[x>>2]|0)|0}while(0);f=f+1|0;B=a[f>>0]|0;if(B<<24>>24==0){k=165;break}}if((k|0)==165){i=l;return m|0}if((k|0)==19){if((c[q>>2]|0)!=0)c[p>>2]=(c[p>>2]|0)+ -1;if((B|0)<0){C=0;k=162}else{N=m;i=l;return N|0}}if((k|0)==162)m=(((m|0)==0)<<31>>31)+m|0;if((C|0)==0){N=m;i=l;return N|0}Ox(I);Ox(G);N=m;i=l;return N|0}function Fw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;g=i;i=i+112|0;f=g;h=f+0|0;e=h+112|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(e|0));c[f+32>>2]=24;c[f+44>>2]=a;c[f+76>>2]=-1;c[f+84>>2]=a;d=Ew(f,b,d)|0;i=g;return d|0}function Gw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=i;a=Bw(a,b,c)|0;i=d;return a|0}function Hw(a){a=a|0;var b=0,d=0;b=i;d=a;while(1)if((c[d>>2]|0)==0)break;else d=d+4|0;i=b;return d-a>>2|0}function Iw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;if((d|0)==0){i=e;return a|0}else f=a;while(1){d=d+ -1|0;c[f>>2]=c[b>>2];if((d|0)==0)break;else{f=f+4|0;b=b+4|0}}i=e;return a|0}function Jw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;f=(d|0)==0;if(a-b>>2>>>0<d>>>0){if(f){i=e;return a|0}do{d=d+ -1|0;c[a+(d<<2)>>2]=c[b+(d<<2)>>2]}while((d|0)!=0);i=e;return a|0}else{if(f){i=e;return a|0}else f=a;while(1){d=d+ -1|0;c[f>>2]=c[b>>2];if((d|0)==0)break;else{f=f+4|0;b=b+4|0}}i=e;return a|0}return 0}function Kw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;if((d|0)==0){i=e;return a|0}else f=a;while(1){d=d+ -1|0;c[f>>2]=b;if((d|0)==0)break;else f=f+4|0}i=e;return a|0}function Lw(a,b){a=a|0;b=b|0;var d=0;d=i;i=i+16|0;c[d>>2]=b;b=c[p>>2]|0;Ja(b|0,a|0,d|0)|0;yb(10,b|0)|0;Db()}function Mw(){var a=0,b=0,d=0,e=0,f=0;a=i;i=i+16|0;b=a;a=a+12|0;d=Nw()|0;if((d|0)==0)Lw(143216,b);d=c[d>>2]|0;if((d|0)==0)Lw(143216,b);f=d+48|0;e=c[f>>2]|0;f=c[f+4>>2]|0;if(!((e&-256|0)==1126902528&(f|0)==1129074247)){c[b>>2]=c[35764];Lw(143176,b)}if((e|0)==1126902529&(f|0)==1129074247)e=c[d+44>>2]|0;else e=d+80|0;c[a>>2]=e;f=c[d>>2]|0;d=c[f+4>>2]|0;if(Qb[c[(c[143608>>2]|0)+16>>2]&31](143608,f,a)|0){f=c[a>>2]|0;e=c[35764]|0;f=Wb[c[(c[f>>2]|0)+8>>2]&63](f)|0;c[b>>2]=e;c[b+4>>2]=d;c[b+8>>2]=f;Lw(143080,b)}else{c[b>>2]=c[35764];c[b+4>>2]=d;Lw(143128,b)}}function Nw(){var a=0,b=0;a=i;i=i+16|0;if((mb(143240,2)|0)==0){b=hb(c[35808]|0)|0;i=a;return b|0}else Lw(143248,a);return 0}function Ow(){var a=0;a=i;i=i+16|0;if((pb(143232,125)|0)==0){i=a;return}else Lw(143304,a)}function Pw(a){a=a|0;var b=0;b=i;i=i+16|0;Ox(a);if((vb(c[35808]|0,0)|0)==0){i=b;return}else Lw(143360,b)}function Qw(a){a=a|0;var b=0,d=0;b=i;a=(a|0)==0?1:a;d=Nx(a)|0;if((d|0)!=0){i=b;return d|0}while(1){d=_w()|0;if((d|0)==0){a=4;break}_b[d&3]();d=Nx(a)|0;if((d|0)!=0){a=5;break}}if((a|0)==4){d=Ma(4)|0;c[d>>2]=143424;zb(d|0,143472,96)}else if((a|0)==5){i=b;return d|0}return 0}function Rw(a){a=a|0;var b=0;b=i;a=Qw(a)|0;i=b;return a|0}function Sw(a){a=a|0;var b=0;b=i;Ox(a);i=b;return}function Tw(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function Uw(a){a=a|0;c[a>>2]=143424;return}function Vw(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function Ww(a){a=a|0;return}function Xw(a){a=a|0;return 143440}function Yw(a){a=a|0;var b=0;b=i;i=i+16|0;_b[a&3]();Lw(143488,b)}function Zw(){var a=0,b=0;b=Nw()|0;if(((b|0)!=0?(a=c[b>>2]|0,(a|0)!=0):0)?(b=a+48|0,(c[b>>2]&-256|0)==1126902528?(c[b+4>>2]|0)==1129074247:0):0)Yw(c[a+12>>2]|0);b=c[35762]|0;c[35762]=b+0;Yw(b)}function _w(){var a=0;a=c[35896]|0;c[35896]=a+0;return a|0}function $w(a){a=a|0;return}function ax(a){a=a|0;var b=0;b=i;bx(a);Sw(a);i=b;return}function bx(a){a=a|0;var b=0;b=i;c[a>>2]=143624;ix(a+4|0);i=b;return}function cx(a){a=a|0;return c[a+4>>2]|0}function dx(a){a=a|0;var b=0;b=i;ex(a);Sw(a);i=b;return}function ex(a){a=a|0;var b=0;b=i;c[a>>2]=143648;ix(a+4|0);i=b;return}function fx(a){a=a|0;return c[a+4>>2]|0}function gx(a){a=a|0;var b=0;b=i;bx(a);Sw(a);i=b;return}function hx(a){a=a|0;var b=0;b=i;ex(a);Sw(a);i=b;return}function ix(a){a=a|0;var b=0,d=0,e=0;b=i;e=(c[a>>2]|0)+ -4|0;d=c[e>>2]|0;c[e>>2]=d+ -1;if((d+ -1|0)>=0){i=b;return}Sw((c[a>>2]|0)+ -12|0);i=b;return}function jx(a){a=a|0;return}function kx(a){a=a|0;c[a>>2]=143872;return}function lx(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function mx(a){a=a|0;return}function nx(a){a=a|0;return 143888}function ox(a){a=a|0;return}function px(a){a=a|0;return}function qx(a){a=a|0;return}function rx(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function sx(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function tx(a){a=a|0;var b=0;b=i;Sw(a);i=b;return}function ux(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+64|0;f=e;if((a|0)==(b|0)){h=1;i=e;return h|0}if((b|0)==0){h=0;i=e;return h|0}b=Ax(b,144e3,144056,0)|0;if((b|0)==0){h=0;i=e;return h|0}h=f+0|0;g=h+56|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(g|0));c[f>>2]=b;c[f+8>>2]=a;c[f+12>>2]=-1;c[f+48>>2]=1;fc[c[(c[b>>2]|0)+28>>2]&7](b,f,c[d>>2]|0,1);if((c[f+24>>2]|0)!=1){h=0;i=e;return h|0}c[d>>2]=c[f+16>>2];h=1;i=e;return h|0}function vx(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;b=i;g=d+16|0;h=c[g>>2]|0;if((h|0)==0){c[g>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;i=b;return}if((h|0)!=(e|0)){h=d+36|0;c[h>>2]=(c[h>>2]|0)+1;c[d+24>>2]=2;a[d+54>>0]=1;i=b;return}e=d+24|0;if((c[e>>2]|0)!=2){i=b;return}c[e>>2]=f;i=b;return}function wx(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;if((c[b+8>>2]|0)!=(a|0)){i=f;return}vx(0,b,d,e);i=f;return}function xx(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;if((a|0)==(c[b+8>>2]|0)){vx(0,b,d,e);i=f;return}else{a=c[a+8>>2]|0;fc[c[(c[a>>2]|0)+28>>2]&7](a,b,d,e);i=f;return}}function yx(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;g=c[a+4>>2]|0;h=g>>8;if((g&1|0)!=0)h=c[(c[d>>2]|0)+h>>2]|0;a=c[a>>2]|0;fc[c[(c[a>>2]|0)+28>>2]&7](a,b,d+h|0,(g&2|0)!=0?e:2);i=f;return}function zx(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;if((b|0)==(c[d+8>>2]|0)){vx(0,d,e,f);i=g;return}j=c[b+12>>2]|0;h=b+(j<<3)+16|0;yx(b+16|0,d,e,f);if((j|0)<=1){i=g;return}j=d+54|0;b=b+24|0;while(1){yx(b,d,e,f);if((a[j>>0]|0)!=0){f=7;break}b=b+8|0;if(!(b>>>0<h>>>0)){f=7;break}}if((f|0)==7){i=g;return}}function Ax(d,e,f,g){d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;h=i;i=i+64|0;j=h;k=c[d>>2]|0;l=d+(c[k+ -8>>2]|0)|0;k=c[k+ -4>>2]|0;c[j>>2]=f;c[j+4>>2]=d;c[j+8>>2]=e;c[j+12>>2]=g;n=j+16|0;o=j+20|0;e=j+24|0;m=j+28|0;g=j+32|0;d=j+40|0;p=(k|0)==(f|0);q=n+0|0;f=q+36|0;do{c[q>>2]=0;q=q+4|0}while((q|0)<(f|0));b[n+36>>1]=0;a[n+38>>0]=0;if(p){c[j+48>>2]=1;cc[c[(c[k>>2]|0)+20>>2]&15](k,j,l,l,1,0);q=(c[e>>2]|0)==1?l:0;i=h;return q|0}Sb[c[(c[k>>2]|0)+24>>2]&3](k,j,l,1,0);j=c[j+36>>2]|0;if((j|0)==1){if((c[e>>2]|0)!=1){if((c[d>>2]|0)!=0){q=0;i=h;return q|0}if((c[m>>2]|0)!=1){q=0;i=h;return q|0}if((c[g>>2]|0)!=1){q=0;i=h;return q|0}}q=c[n>>2]|0;i=h;return q|0}else if((j|0)==0){if((c[d>>2]|0)!=1){q=0;i=h;return q|0}if((c[m>>2]|0)!=1){q=0;i=h;return q|0}q=(c[g>>2]|0)==1?c[o>>2]|0:0;i=h;return q|0}else{q=0;i=h;return q|0}return 0}function Bx(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;b=i;a[d+53>>0]=1;if((c[d+4>>2]|0)!=(f|0)){i=b;return}a[d+52>>0]=1;f=d+16|0;h=c[f>>2]|0;if((h|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((g|0)==1?(c[d+48>>2]|0)==1:0)){i=b;return}a[d+54>>0]=1;i=b;return}if((h|0)!=(e|0)){h=d+36|0;c[h>>2]=(c[h>>2]|0)+1;a[d+54>>0]=1;i=b;return}e=d+24|0;f=c[e>>2]|0;if((f|0)==2)c[e>>2]=g;else g=f;if(!((g|0)==1?(c[d+48>>2]|0)==1:0)){i=b;return}a[d+54>>0]=1;i=b;return}function Cx(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;h=i;if((b|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)!=(e|0)){i=h;return}e=d+28|0;if((c[e>>2]|0)==1){i=h;return}c[e>>2]=f;i=h;return}if((b|0)!=(c[d>>2]|0)){u=c[b+12>>2]|0;m=b+(u<<3)+16|0;Ex(b+16|0,d,e,f,g);n=b+24|0;if((u|0)<=1){i=h;return}p=c[b+8>>2]|0;if((p&2|0)==0?(o=d+36|0,(c[o>>2]|0)!=1):0){if((p&1|0)==0){q=d+54|0;p=n;while(1){if((a[q>>0]|0)!=0){p=43;break}if((c[o>>2]|0)==1){p=43;break}Ex(p,d,e,f,g);p=p+8|0;if(!(p>>>0<m>>>0)){p=43;break}}if((p|0)==43){i=h;return}}p=d+24|0;q=d+54|0;r=n;while(1){if((a[q>>0]|0)!=0){p=43;break}if((c[o>>2]|0)==1?(c[p>>2]|0)==1:0){p=43;break}Ex(r,d,e,f,g);r=r+8|0;if(!(r>>>0<m>>>0)){p=43;break}}if((p|0)==43){i=h;return}}o=d+54|0;while(1){if((a[o>>0]|0)!=0){p=43;break}Ex(n,d,e,f,g);n=n+8|0;if(!(n>>>0<m>>>0)){p=43;break}}if((p|0)==43){i=h;return}}if((c[d+16>>2]|0)!=(e|0)?(j=d+20|0,(c[j>>2]|0)!=(e|0)):0){c[d+32>>2]=f;m=d+44|0;if((c[m>>2]|0)==4){i=h;return}u=c[b+12>>2]|0;t=b+(u<<3)+16|0;a:do if((u|0)>0){o=d+52|0;n=d+53|0;r=d+54|0;q=b+8|0;p=d+24|0;u=0;s=0;b=b+16|0;b:do{a[o>>0]=0;a[n>>0]=0;Dx(b,d,e,e,1,g);if((a[r>>0]|0)!=0)break;do if((a[n>>0]|0)!=0){if((a[o>>0]|0)==0)if((c[q>>2]&1|0)==0){s=1;break b}else{s=1;break}if((c[p>>2]|0)==1){p=25;break a}if((c[q>>2]&2|0)==0){p=25;break a}else{u=1;s=1}}while(0);b=b+8|0}while(b>>>0<t>>>0);if(u){l=s;p=24}else{k=s;p=21}}else{k=0;p=21}while(0);if((p|0)==21){c[j>>2]=e;u=d+40|0;c[u>>2]=(c[u>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0){a[d+54>>0]=1;if(k)p=25;else p=26}else{l=k;p=24}}if((p|0)==24)if(l)p=25;else p=26;if((p|0)==25){c[m>>2]=3;i=h;return}else if((p|0)==26){c[m>>2]=4;i=h;return}}if((f|0)!=1){i=h;return}c[d+32>>2]=1;i=h;return}function Dx(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;h=i;j=c[a+4>>2]|0;k=j>>8;if((j&1|0)!=0)k=c[(c[e>>2]|0)+k>>2]|0;a=c[a>>2]|0;cc[c[(c[a>>2]|0)+20>>2]&15](a,b,d,e+k|0,(j&2|0)!=0?f:2,g);i=h;return}function Ex(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;h=c[a+4>>2]|0;j=h>>8;if((h&1|0)!=0)j=c[(c[d>>2]|0)+j>>2]|0;a=c[a>>2]|0;Sb[c[(c[a>>2]|0)+24>>2]&3](a,b,d+j|0,(h&2|0)!=0?e:2,f);i=g;return}function Fx(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;if((b|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)!=(e|0)){i=h;return}j=d+28|0;if((c[j>>2]|0)==1){i=h;return}c[j>>2]=f;i=h;return}if((b|0)!=(c[d>>2]|0)){l=c[b+8>>2]|0;Sb[c[(c[l>>2]|0)+24>>2]&3](l,d,e,f,g);i=h;return}if((c[d+16>>2]|0)!=(e|0)?(k=d+20|0,(c[k>>2]|0)!=(e|0)):0){c[d+32>>2]=f;f=d+44|0;if((c[f>>2]|0)==4){i=h;return}l=d+52|0;a[l>>0]=0;m=d+53|0;a[m>>0]=0;b=c[b+8>>2]|0;cc[c[(c[b>>2]|0)+20>>2]&15](b,d,e,e,1,g);if((a[m>>0]|0)!=0){if((a[l>>0]|0)==0){b=1;j=13}}else{b=0;j=13}do if((j|0)==13){c[k>>2]=e;m=d+40|0;c[m>>2]=(c[m>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0){a[d+54>>0]=1;if(b)break}else j=16;if((j|0)==16?b:0)break;c[f>>2]=4;i=h;return}while(0);c[f>>2]=3;i=h;return}if((f|0)!=1){i=h;return}c[d+32>>2]=1;i=h;return}function Gx(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;g=i;if((c[d+8>>2]|0)==(b|0)){if((c[d+4>>2]|0)!=(e|0)){i=g;return}d=d+28|0;if((c[d>>2]|0)==1){i=g;return}c[d>>2]=f;i=g;return}if((c[d>>2]|0)!=(b|0)){i=g;return}if((c[d+16>>2]|0)!=(e|0)?(h=d+20|0,(c[h>>2]|0)!=(e|0)):0){c[d+32>>2]=f;c[h>>2]=e;b=d+40|0;c[b>>2]=(c[b>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0)a[d+54>>0]=1;c[d+44>>2]=4;i=g;return}if((f|0)!=1){i=g;return}c[d+32>>2]=1;i=g;return}function Hx(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;m=i;if((b|0)==(c[d+8>>2]|0)){Bx(0,d,e,f,g);i=m;return}j=d+52|0;l=a[j>>0]|0;o=d+53|0;n=a[o>>0]|0;r=c[b+12>>2]|0;p=b+(r<<3)+16|0;a[j>>0]=0;a[o>>0]=0;Dx(b+16|0,d,e,f,g,h);a:do if((r|0)>1){k=d+24|0;q=b+8|0;r=d+54|0;b=b+24|0;do{if((a[r>>0]|0)!=0)break a;if((a[j>>0]|0)==0){if((a[o>>0]|0)!=0?(c[q>>2]&1|0)==0:0)break a}else{if((c[k>>2]|0)==1)break a;if((c[q>>2]&2|0)==0)break a}a[j>>0]=0;a[o>>0]=0;Dx(b,d,e,f,g,h);b=b+8|0}while(b>>>0<p>>>0)}while(0);a[j>>0]=l;a[o>>0]=n;i=m;return}function Ix(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;h=i;if((a|0)==(c[b+8>>2]|0)){Bx(0,b,d,e,f);i=h;return}else{a=c[a+8>>2]|0;cc[c[(c[a>>2]|0)+20>>2]&15](a,b,d,e,f,g);i=h;return}}function Jx(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=i;if((c[b+8>>2]|0)!=(a|0)){i=g;return}Bx(0,b,d,e,f);i=g;return}function Kx(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;f=e;c[f>>2]=c[d>>2];a=Qb[c[(c[a>>2]|0)+16>>2]&31](a,b,f)|0;b=a&1;if(!a){i=e;return b|0}c[d>>2]=c[f>>2];i=e;return b|0}function Lx(a){a=a|0;var b=0;b=i;if((a|0)==0)a=0;else a=(Ax(a,144e3,144168,0)|0)!=0;i=b;return a&1|0}function Mx(){var a=0;a=Ma(4)|0;Uw(a);zb(a|0,143472,96)}function Nx(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;b=i;do if(a>>>0<245){if(a>>>0<11)a=16;else a=a+11&-8;v=a>>>3;p=c[36104]|0;w=p>>>v;if((w&3|0)!=0){h=(w&1^1)+v|0;g=h<<1;e=144456+(g<<2)|0;g=144456+(g+2<<2)|0;j=c[g>>2]|0;d=j+8|0;f=c[d>>2]|0;do if((e|0)!=(f|0)){if(f>>>0<(c[36108]|0)>>>0)Db();k=f+12|0;if((c[k>>2]|0)==(j|0)){c[k>>2]=e;c[g>>2]=f;break}else Db()}else c[36104]=p&~(1<<h);while(0);H=h<<3;c[j+4>>2]=H|3;H=j+(H|4)|0;c[H>>2]=c[H>>2]|1;H=d;i=b;return H|0}if(a>>>0>(c[36106]|0)>>>0){if((w|0)!=0){h=2<<v;h=w<<v&(h|0-h);h=(h&0-h)+ -1|0;d=h>>>12&16;h=h>>>d;f=h>>>5&8;h=h>>>f;g=h>>>2&4;h=h>>>g;e=h>>>1&2;h=h>>>e;j=h>>>1&1;j=(f|d|g|e|j)+(h>>>j)|0;h=j<<1;e=144456+(h<<2)|0;h=144456+(h+2<<2)|0;g=c[h>>2]|0;d=g+8|0;f=c[d>>2]|0;do if((e|0)!=(f|0)){if(f>>>0<(c[36108]|0)>>>0)Db();k=f+12|0;if((c[k>>2]|0)==(g|0)){c[k>>2]=e;c[h>>2]=f;break}else Db()}else c[36104]=p&~(1<<j);while(0);h=j<<3;f=h-a|0;c[g+4>>2]=a|3;e=g+a|0;c[g+(a|4)>>2]=f|1;c[g+h>>2]=f;h=c[36106]|0;if((h|0)!=0){g=c[36109]|0;k=h>>>3;j=k<<1;h=144456+(j<<2)|0;l=c[36104]|0;k=1<<k;if((l&k|0)!=0){j=144456+(j+2<<2)|0;k=c[j>>2]|0;if(k>>>0<(c[36108]|0)>>>0)Db();else{D=j;C=k}}else{c[36104]=l|k;D=144456+(j+2<<2)|0;C=h}c[D>>2]=g;c[C+12>>2]=g;c[g+8>>2]=C;c[g+12>>2]=h}c[36106]=f;c[36109]=e;H=d;i=b;return H|0}p=c[36105]|0;if((p|0)!=0){e=(p&0-p)+ -1|0;G=e>>>12&16;e=e>>>G;F=e>>>5&8;e=e>>>F;H=e>>>2&4;e=e>>>H;f=e>>>1&2;e=e>>>f;d=e>>>1&1;d=c[144720+((F|G|H|f|d)+(e>>>d)<<2)>>2]|0;e=(c[d+4>>2]&-8)-a|0;f=d;while(1){g=c[f+16>>2]|0;if((g|0)==0){g=c[f+20>>2]|0;if((g|0)==0)break}f=(c[g+4>>2]&-8)-a|0;H=f>>>0<e>>>0;e=H?f:e;f=g;d=H?g:d}h=c[36108]|0;if(d>>>0<h>>>0)Db();f=d+a|0;if(!(d>>>0<f>>>0))Db();g=c[d+24>>2]|0;k=c[d+12>>2]|0;do if((k|0)==(d|0)){k=d+20|0;j=c[k>>2]|0;if((j|0)==0){k=d+16|0;j=c[k>>2]|0;if((j|0)==0){B=0;break}}while(1){l=j+20|0;m=c[l>>2]|0;if((m|0)!=0){j=m;k=l;continue}m=j+16|0;l=c[m>>2]|0;if((l|0)==0)break;else{j=l;k=m}}if(k>>>0<h>>>0)Db();else{c[k>>2]=0;B=j;break}}else{j=c[d+8>>2]|0;if(j>>>0<h>>>0)Db();h=j+12|0;if((c[h>>2]|0)!=(d|0))Db();l=k+8|0;if((c[l>>2]|0)==(d|0)){c[h>>2]=k;c[l>>2]=j;B=k;break}else Db()}while(0);do if((g|0)!=0){h=c[d+28>>2]|0;j=144720+(h<<2)|0;if((d|0)==(c[j>>2]|0)){c[j>>2]=B;if((B|0)==0){c[36105]=c[36105]&~(1<<h);break}}else{if(g>>>0<(c[36108]|0)>>>0)Db();h=g+16|0;if((c[h>>2]|0)==(d|0))c[h>>2]=B;else c[g+20>>2]=B;if((B|0)==0)break}if(B>>>0<(c[36108]|0)>>>0)Db();c[B+24>>2]=g;g=c[d+16>>2]|0;do if((g|0)!=0)if(g>>>0<(c[36108]|0)>>>0)Db();else{c[B+16>>2]=g;c[g+24>>2]=B;break}while(0);g=c[d+20>>2]|0;if((g|0)!=0)if(g>>>0<(c[36108]|0)>>>0)Db();else{c[B+20>>2]=g;c[g+24>>2]=B;break}}while(0);if(e>>>0<16){H=e+a|0;c[d+4>>2]=H|3;H=d+(H+4)|0;c[H>>2]=c[H>>2]|1}else{c[d+4>>2]=a|3;c[d+(a|4)>>2]=e|1;c[d+(e+a)>>2]=e;h=c[36106]|0;if((h|0)!=0){g=c[36109]|0;l=h>>>3;j=l<<1;h=144456+(j<<2)|0;k=c[36104]|0;l=1<<l;if((k&l|0)!=0){j=144456+(j+2<<2)|0;k=c[j>>2]|0;if(k>>>0<(c[36108]|0)>>>0)Db();else{A=j;z=k}}else{c[36104]=k|l;A=144456+(j+2<<2)|0;z=h}c[A>>2]=g;c[z+12>>2]=g;c[g+8>>2]=z;c[g+12>>2]=h}c[36106]=e;c[36109]=f}H=d+8|0;i=b;return H|0}}}else if(!(a>>>0>4294967231)){z=a+11|0;a=z&-8;B=c[36105]|0;if((B|0)!=0){A=0-a|0;z=z>>>8;if((z|0)!=0)if(a>>>0>16777215)C=31;else{G=(z+1048320|0)>>>16&8;H=z<<G;F=(H+520192|0)>>>16&4;H=H<<F;C=(H+245760|0)>>>16&2;C=14-(F|G|C)+(H<<C>>>15)|0;C=a>>>(C+7|0)&1|C<<1}else C=0;D=c[144720+(C<<2)>>2]|0;a:do if((D|0)==0){F=0;z=0}else{if((C|0)==31)z=0;else z=25-(C>>>1)|0;F=0;E=a<<z;z=0;while(1){H=c[D+4>>2]&-8;G=H-a|0;if(G>>>0<A>>>0)if((H|0)==(a|0)){A=G;F=D;z=D;break a}else{A=G;z=D}H=c[D+20>>2]|0;D=c[D+(E>>>31<<2)+16>>2]|0;F=(H|0)==0|(H|0)==(D|0)?F:H;if((D|0)==0)break;else E=E<<1}}while(0);if((F|0)==0&(z|0)==0){H=2<<C;B=B&(H|0-H);if((B|0)==0)break;H=(B&0-B)+ -1|0;D=H>>>12&16;H=H>>>D;C=H>>>5&8;H=H>>>C;E=H>>>2&4;H=H>>>E;G=H>>>1&2;H=H>>>G;F=H>>>1&1;F=c[144720+((C|D|E|G|F)+(H>>>F)<<2)>>2]|0}if((F|0)!=0)while(1){H=(c[F+4>>2]&-8)-a|0;B=H>>>0<A>>>0;A=B?H:A;z=B?F:z;B=c[F+16>>2]|0;if((B|0)!=0){F=B;continue}F=c[F+20>>2]|0;if((F|0)==0)break}if((z|0)!=0?A>>>0<((c[36106]|0)-a|0)>>>0:0){f=c[36108]|0;if(z>>>0<f>>>0)Db();d=z+a|0;if(!(z>>>0<d>>>0))Db();e=c[z+24>>2]|0;h=c[z+12>>2]|0;do if((h|0)==(z|0)){h=z+20|0;g=c[h>>2]|0;if((g|0)==0){h=z+16|0;g=c[h>>2]|0;if((g|0)==0){x=0;break}}while(1){j=g+20|0;k=c[j>>2]|0;if((k|0)!=0){g=k;h=j;continue}j=g+16|0;k=c[j>>2]|0;if((k|0)==0)break;else{g=k;h=j}}if(h>>>0<f>>>0)Db();else{c[h>>2]=0;x=g;break}}else{g=c[z+8>>2]|0;if(g>>>0<f>>>0)Db();f=g+12|0;if((c[f>>2]|0)!=(z|0))Db();j=h+8|0;if((c[j>>2]|0)==(z|0)){c[f>>2]=h;c[j>>2]=g;x=h;break}else Db()}while(0);do if((e|0)!=0){g=c[z+28>>2]|0;f=144720+(g<<2)|0;if((z|0)==(c[f>>2]|0)){c[f>>2]=x;if((x|0)==0){c[36105]=c[36105]&~(1<<g);break}}else{if(e>>>0<(c[36108]|0)>>>0)Db();f=e+16|0;if((c[f>>2]|0)==(z|0))c[f>>2]=x;else c[e+20>>2]=x;if((x|0)==0)break}if(x>>>0<(c[36108]|0)>>>0)Db();c[x+24>>2]=e;e=c[z+16>>2]|0;do if((e|0)!=0)if(e>>>0<(c[36108]|0)>>>0)Db();else{c[x+16>>2]=e;c[e+24>>2]=x;break}while(0);e=c[z+20>>2]|0;if((e|0)!=0)if(e>>>0<(c[36108]|0)>>>0)Db();else{c[x+20>>2]=e;c[e+24>>2]=x;break}}while(0);b:do if(!(A>>>0<16)){c[z+4>>2]=a|3;c[z+(a|4)>>2]=A|1;c[z+(A+a)>>2]=A;f=A>>>3;if(A>>>0<256){h=f<<1;e=144456+(h<<2)|0;g=c[36104]|0;f=1<<f;do if((g&f|0)==0){c[36104]=g|f;w=144456+(h+2<<2)|0;v=e}else{f=144456+(h+2<<2)|0;g=c[f>>2]|0;if(!(g>>>0<(c[36108]|0)>>>0)){w=f;v=g;break}Db()}while(0);c[w>>2]=d;c[v+12>>2]=d;c[z+(a+8)>>2]=v;c[z+(a+12)>>2]=e;break}e=A>>>8;if((e|0)!=0)if(A>>>0>16777215)e=31;else{G=(e+1048320|0)>>>16&8;H=e<<G;F=(H+520192|0)>>>16&4;H=H<<F;e=(H+245760|0)>>>16&2;e=14-(F|G|e)+(H<<e>>>15)|0;e=A>>>(e+7|0)&1|e<<1}else e=0;f=144720+(e<<2)|0;c[z+(a+28)>>2]=e;c[z+(a+20)>>2]=0;c[z+(a+16)>>2]=0;h=c[36105]|0;g=1<<e;if((h&g|0)==0){c[36105]=h|g;c[f>>2]=d;c[z+(a+24)>>2]=f;c[z+(a+12)>>2]=d;c[z+(a+8)>>2]=d;break}f=c[f>>2]|0;if((e|0)==31)e=0;else e=25-(e>>>1)|0;c:do if((c[f+4>>2]&-8|0)!=(A|0)){e=A<<e;while(1){g=f+(e>>>31<<2)+16|0;h=c[g>>2]|0;if((h|0)==0)break;if((c[h+4>>2]&-8|0)==(A|0)){p=h;break c}else{e=e<<1;f=h}}if(g>>>0<(c[36108]|0)>>>0)Db();else{c[g>>2]=d;c[z+(a+24)>>2]=f;c[z+(a+12)>>2]=d;c[z+(a+8)>>2]=d;break b}}else p=f;while(0);f=p+8|0;e=c[f>>2]|0;g=c[36108]|0;if(p>>>0<g>>>0)Db();if(e>>>0<g>>>0)Db();else{c[e+12>>2]=d;c[f>>2]=d;c[z+(a+8)>>2]=e;c[z+(a+12)>>2]=p;c[z+(a+24)>>2]=0;break}}else{H=A+a|0;c[z+4>>2]=H|3;H=z+(H+4)|0;c[H>>2]=c[H>>2]|1}while(0);H=z+8|0;i=b;return H|0}}}else a=-1;while(0);p=c[36106]|0;if(!(a>>>0>p>>>0)){e=p-a|0;d=c[36109]|0;if(e>>>0>15){c[36109]=d+a;c[36106]=e;c[d+(a+4)>>2]=e|1;c[d+p>>2]=e;c[d+4>>2]=a|3}else{c[36106]=0;c[36109]=0;c[d+4>>2]=p|3;H=d+(p+4)|0;c[H>>2]=c[H>>2]|1}H=d+8|0;i=b;return H|0}p=c[36107]|0;if(a>>>0<p>>>0){G=p-a|0;c[36107]=G;H=c[36110]|0;c[36110]=H+a;c[H+(a+4)>>2]=G|1;c[H+4>>2]=a|3;H=H+8|0;i=b;return H|0}do if((c[36222]|0)==0){p=fb(30)|0;if((p+ -1&p|0)==0){c[36224]=p;c[36223]=p;c[36225]=-1;c[36226]=-1;c[36227]=0;c[36215]=0;c[36222]=(Gb(0)|0)&-16^1431655768;break}else Db()}while(0);w=a+48|0;p=c[36224]|0;x=a+47|0;z=p+x|0;p=0-p|0;v=z&p;if(!(v>>>0>a>>>0)){H=0;i=b;return H|0}A=c[36214]|0;if((A|0)!=0?(G=c[36212]|0,H=G+v|0,H>>>0<=G>>>0|H>>>0>A>>>0):0){H=0;i=b;return H|0}d:do if((c[36215]&4|0)==0){B=c[36110]|0;e:do if((B|0)!=0){A=144864|0;while(1){C=c[A>>2]|0;if(!(C>>>0>B>>>0)?(y=A+4|0,(C+(c[y>>2]|0)|0)>>>0>B>>>0):0)break;A=c[A+8>>2]|0;if((A|0)==0){o=182;break e}}if((A|0)!=0){B=z-(c[36107]|0)&p;if(B>>>0<2147483647){p=Ya(B|0)|0;A=(p|0)==((c[A>>2]|0)+(c[y>>2]|0)|0);y=p;z=B;p=A?p:-1;A=A?B:0;o=191}else A=0}else o=182}else o=182;while(0);do if((o|0)==182){p=Ya(0)|0;if((p|0)!=(-1|0)){z=p;A=c[36223]|0;y=A+ -1|0;if((y&z|0)==0)A=v;else A=v-z+(y+z&0-A)|0;y=c[36212]|0;z=y+A|0;if(A>>>0>a>>>0&A>>>0<2147483647){H=c[36214]|0;if((H|0)!=0?z>>>0<=y>>>0|z>>>0>H>>>0:0){A=0;break}y=Ya(A|0)|0;o=(y|0)==(p|0);z=A;p=o?p:-1;A=o?A:0;o=191}else A=0}else A=0}while(0);f:do if((o|0)==191){o=0-z|0;if((p|0)!=(-1|0)){q=A;o=202;break d}do if((y|0)!=(-1|0)&z>>>0<2147483647&z>>>0<w>>>0?(u=c[36224]|0,u=x-z+u&0-u,u>>>0<2147483647):0)if((Ya(u|0)|0)==(-1|0)){Ya(o|0)|0;break f}else{z=u+z|0;break}while(0);if((y|0)!=(-1|0)){p=y;q=z;o=202;break d}}while(0);c[36215]=c[36215]|4;o=199}else{A=0;o=199}while(0);if((((o|0)==199?v>>>0<2147483647:0)?(t=Ya(v|0)|0,s=Ya(0)|0,(s|0)!=(-1|0)&(t|0)!=(-1|0)&t>>>0<s>>>0):0)?(r=s-t|0,q=r>>>0>(a+40|0)>>>0,q):0){p=t;q=q?r:A;o=202}if((o|0)==202){r=(c[36212]|0)+q|0;c[36212]=r;if(r>>>0>(c[36213]|0)>>>0)c[36213]=r;r=c[36110]|0;g:do if((r|0)!=0){v=144864|0;while(1){t=c[v>>2]|0;u=v+4|0;s=c[u>>2]|0;if((p|0)==(t+s|0)){o=214;break}w=c[v+8>>2]|0;if((w|0)==0)break;else v=w}if(((o|0)==214?(c[v+12>>2]&8|0)==0:0)?r>>>0>=t>>>0&r>>>0<p>>>0:0){c[u>>2]=s+q;d=(c[36107]|0)+q|0;e=r+8|0;if((e&7|0)==0)e=0;else e=0-e&7;H=d-e|0;c[36110]=r+e;c[36107]=H;c[r+(e+4)>>2]=H|1;c[r+(d+4)>>2]=40;c[36111]=c[36226];break}if(p>>>0<(c[36108]|0)>>>0)c[36108]=p;t=p+q|0;s=144864|0;while(1){if((c[s>>2]|0)==(t|0)){o=224;break}u=c[s+8>>2]|0;if((u|0)==0)break;else s=u}if((o|0)==224?(c[s+12>>2]&8|0)==0:0){c[s>>2]=p;h=s+4|0;c[h>>2]=(c[h>>2]|0)+q;h=p+8|0;if((h&7|0)==0)h=0;else h=0-h&7;j=p+(q+8)|0;if((j&7|0)==0)n=0;else n=0-j&7;o=p+(n+q)|0;j=h+a|0;k=p+j|0;m=o-(p+h)-a|0;c[p+(h+4)>>2]=a|3;h:do if((o|0)!=(c[36110]|0)){if((o|0)==(c[36109]|0)){H=(c[36106]|0)+m|0;c[36106]=H;c[36109]=k;c[p+(j+4)>>2]=H|1;c[p+(H+j)>>2]=H;break}r=q+4|0;t=c[p+(r+n)>>2]|0;if((t&3|0)==1){a=t&-8;s=t>>>3;i:do if(!(t>>>0<256)){l=c[p+((n|24)+q)>>2]|0;u=c[p+(q+12+n)>>2]|0;do if((u|0)==(o|0)){u=n|16;t=p+(r+u)|0;s=c[t>>2]|0;if((s|0)==0){t=p+(u+q)|0;s=c[t>>2]|0;if((s|0)==0){g=0;break}}while(1){u=s+20|0;v=c[u>>2]|0;if((v|0)!=0){s=v;t=u;continue}u=s+16|0;v=c[u>>2]|0;if((v|0)==0)break;else{s=v;t=u}}if(t>>>0<(c[36108]|0)>>>0)Db();else{c[t>>2]=0;g=s;break}}else{t=c[p+((n|8)+q)>>2]|0;if(t>>>0<(c[36108]|0)>>>0)Db();v=t+12|0;if((c[v>>2]|0)!=(o|0))Db();s=u+8|0;if((c[s>>2]|0)==(o|0)){c[v>>2]=u;c[s>>2]=t;g=u;break}else Db()}while(0);if((l|0)==0)break;t=c[p+(q+28+n)>>2]|0;s=144720+(t<<2)|0;do if((o|0)!=(c[s>>2]|0)){if(l>>>0<(c[36108]|0)>>>0)Db();s=l+16|0;if((c[s>>2]|0)==(o|0))c[s>>2]=g;else c[l+20>>2]=g;if((g|0)==0)break i}else{c[s>>2]=g;if((g|0)!=0)break;c[36105]=c[36105]&~(1<<t);break i}while(0);if(g>>>0<(c[36108]|0)>>>0)Db();c[g+24>>2]=l;l=n|16;o=c[p+(l+q)>>2]|0;do if((o|0)!=0)if(o>>>0<(c[36108]|0)>>>0)Db();else{c[g+16>>2]=o;c[o+24>>2]=g;break}while(0);l=c[p+(r+l)>>2]|0;if((l|0)==0)break;if(l>>>0<(c[36108]|0)>>>0)Db();else{c[g+20>>2]=l;c[l+24>>2]=g;break}}else{r=c[p+((n|8)+q)>>2]|0;g=c[p+(q+12+n)>>2]|0;t=144456+(s<<1<<2)|0;do if((r|0)!=(t|0)){if(r>>>0<(c[36108]|0)>>>0)Db();if((c[r+12>>2]|0)==(o|0))break;Db()}while(0);if((g|0)==(r|0)){c[36104]=c[36104]&~(1<<s);break}do if((g|0)==(t|0))l=g+8|0;else{if(g>>>0<(c[36108]|0)>>>0)Db();s=g+8|0;if((c[s>>2]|0)==(o|0)){l=s;break}Db()}while(0);c[r+12>>2]=g;c[l>>2]=r}while(0);o=p+((a|n)+q)|0;m=a+m|0}g=o+4|0;c[g>>2]=c[g>>2]&-2;c[p+(j+4)>>2]=m|1;c[p+(m+j)>>2]=m;g=m>>>3;if(m>>>0<256){m=g<<1;d=144456+(m<<2)|0;l=c[36104]|0;g=1<<g;do if((l&g|0)==0){c[36104]=l|g;f=144456+(m+2<<2)|0;e=d}else{l=144456+(m+2<<2)|0;g=c[l>>2]|0;if(!(g>>>0<(c[36108]|0)>>>0)){f=l;e=g;break}Db()}while(0);c[f>>2]=k;c[e+12>>2]=k;c[p+(j+8)>>2]=e;c[p+(j+12)>>2]=d;break}e=m>>>8;do if((e|0)==0)e=0;else{if(m>>>0>16777215){e=31;break}G=(e+1048320|0)>>>16&8;H=e<<G;F=(H+520192|0)>>>16&4;H=H<<F;e=(H+245760|0)>>>16&2;e=14-(F|G|e)+(H<<e>>>15)|0;e=m>>>(e+7|0)&1|e<<1}while(0);l=144720+(e<<2)|0;c[p+(j+28)>>2]=e;c[p+(j+20)>>2]=0;c[p+(j+16)>>2]=0;f=c[36105]|0;g=1<<e;if((f&g|0)==0){c[36105]=f|g;c[l>>2]=k;c[p+(j+24)>>2]=l;c[p+(j+12)>>2]=k;c[p+(j+8)>>2]=k;break}l=c[l>>2]|0;if((e|0)==31)e=0;else e=25-(e>>>1)|0;j:do if((c[l+4>>2]&-8|0)!=(m|0)){e=m<<e;while(1){g=l+(e>>>31<<2)+16|0;f=c[g>>2]|0;if((f|0)==0)break;if((c[f+4>>2]&-8|0)==(m|0)){d=f;break j}else{e=e<<1;l=f}}if(g>>>0<(c[36108]|0)>>>0)Db();else{c[g>>2]=k;c[p+(j+24)>>2]=l;c[p+(j+12)>>2]=k;c[p+(j+8)>>2]=k;break h}}else d=l;while(0);f=d+8|0;e=c[f>>2]|0;g=c[36108]|0;if(d>>>0<g>>>0)Db();if(e>>>0<g>>>0)Db();else{c[e+12>>2]=k;c[f>>2]=k;c[p+(j+8)>>2]=e;c[p+(j+12)>>2]=d;c[p+(j+24)>>2]=0;break}}else{H=(c[36107]|0)+m|0;c[36107]=H;c[36110]=k;c[p+(j+4)>>2]=H|1}while(0);H=p+(h|8)|0;i=b;return H|0}e=144864|0;while(1){d=c[e>>2]|0;if(!(d>>>0>r>>>0)?(n=c[e+4>>2]|0,m=d+n|0,m>>>0>r>>>0):0)break;e=c[e+8>>2]|0}e=d+(n+ -39)|0;if((e&7|0)==0)e=0;else e=0-e&7;d=d+(n+ -47+e)|0;d=d>>>0<(r+16|0)>>>0?r:d;e=d+8|0;f=p+8|0;if((f&7|0)==0)f=0;else f=0-f&7;H=q+ -40-f|0;c[36110]=p+f;c[36107]=H;c[p+(f+4)>>2]=H|1;c[p+(q+ -36)>>2]=40;c[36111]=c[36226];c[d+4>>2]=27;c[e+0>>2]=c[36216];c[e+4>>2]=c[36217];c[e+8>>2]=c[36218];c[e+12>>2]=c[36219];c[36216]=p;c[36217]=q;c[36219]=0;c[36218]=e;e=d+28|0;c[e>>2]=7;if((d+32|0)>>>0<m>>>0)do{H=e;e=e+4|0;c[e>>2]=7}while((H+8|0)>>>0<m>>>0);if((d|0)!=(r|0)){d=d-r|0;e=r+(d+4)|0;c[e>>2]=c[e>>2]&-2;c[r+4>>2]=d|1;c[r+d>>2]=d;e=d>>>3;if(d>>>0<256){g=e<<1;d=144456+(g<<2)|0;f=c[36104]|0;e=1<<e;do if((f&e|0)==0){c[36104]=f|e;k=144456+(g+2<<2)|0;j=d}else{f=144456+(g+2<<2)|0;e=c[f>>2]|0;if(!(e>>>0<(c[36108]|0)>>>0)){k=f;j=e;break}Db()}while(0);c[k>>2]=r;c[j+12>>2]=r;c[r+8>>2]=j;c[r+12>>2]=d;break}e=d>>>8;if((e|0)!=0)if(d>>>0>16777215)e=31;else{G=(e+1048320|0)>>>16&8;H=e<<G;F=(H+520192|0)>>>16&4;H=H<<F;e=(H+245760|0)>>>16&2;e=14-(F|G|e)+(H<<e>>>15)|0;e=d>>>(e+7|0)&1|e<<1}else e=0;j=144720+(e<<2)|0;c[r+28>>2]=e;c[r+20>>2]=0;c[r+16>>2]=0;f=c[36105]|0;g=1<<e;if((f&g|0)==0){c[36105]=f|g;c[j>>2]=r;c[r+24>>2]=j;c[r+12>>2]=r;c[r+8>>2]=r;break}f=c[j>>2]|0;if((e|0)==31)e=0;else e=25-(e>>>1)|0;k:do if((c[f+4>>2]&-8|0)!=(d|0)){e=d<<e;while(1){j=f+(e>>>31<<2)+16|0;g=c[j>>2]|0;if((g|0)==0)break;if((c[g+4>>2]&-8|0)==(d|0)){h=g;break k}else{e=e<<1;f=g}}if(j>>>0<(c[36108]|0)>>>0)Db();else{c[j>>2]=r;c[r+24>>2]=f;c[r+12>>2]=r;c[r+8>>2]=r;break g}}else h=f;while(0);f=h+8|0;e=c[f>>2]|0;d=c[36108]|0;if(h>>>0<d>>>0)Db();if(e>>>0<d>>>0)Db();else{c[e+12>>2]=r;c[f>>2]=r;c[r+8>>2]=e;c[r+12>>2]=h;c[r+24>>2]=0;break}}}else{H=c[36108]|0;if((H|0)==0|p>>>0<H>>>0)c[36108]=p;c[36216]=p;c[36217]=q;c[36219]=0;c[36113]=c[36222];c[36112]=-1;d=0;do{H=d<<1;G=144456+(H<<2)|0;c[144456+(H+3<<2)>>2]=G;c[144456+(H+2<<2)>>2]=G;d=d+1|0}while((d|0)!=32);d=p+8|0;if((d&7|0)==0)d=0;else d=0-d&7;H=q+ -40-d|0;c[36110]=p+d;c[36107]=H;c[p+(d+4)>>2]=H|1;c[p+(q+ -36)>>2]=40;c[36111]=c[36226]}while(0);d=c[36107]|0;if(d>>>0>a>>>0){G=d-a|0;c[36107]=G;H=c[36110]|0;c[36110]=H+a;c[H+(a+4)>>2]=G|1;c[H+4>>2]=a|3;H=H+8|0;i=b;return H|0}}c[(tb()|0)>>2]=12;H=0;i=b;return H|0}function Ox(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;b=i;if((a|0)==0){i=b;return}q=a+ -8|0;r=c[36108]|0;if(q>>>0<r>>>0)Db();o=c[a+ -4>>2]|0;n=o&3;if((n|0)==1)Db();j=o&-8;h=a+(j+ -8)|0;do if((o&1|0)==0){u=c[q>>2]|0;if((n|0)==0){i=b;return}q=-8-u|0;o=a+q|0;n=u+j|0;if(o>>>0<r>>>0)Db();if((o|0)==(c[36109]|0)){d=a+(j+ -4)|0;if((c[d>>2]&3|0)!=3){d=o;m=n;break}c[36106]=n;c[d>>2]=c[d>>2]&-2;c[a+(q+4)>>2]=n|1;c[h>>2]=n;i=b;return}t=u>>>3;if(u>>>0<256){d=c[a+(q+8)>>2]|0;m=c[a+(q+12)>>2]|0;p=144456+(t<<1<<2)|0;if((d|0)!=(p|0)){if(d>>>0<r>>>0)Db();if((c[d+12>>2]|0)!=(o|0))Db()}if((m|0)==(d|0)){c[36104]=c[36104]&~(1<<t);d=o;m=n;break}if((m|0)!=(p|0)){if(m>>>0<r>>>0)Db();p=m+8|0;if((c[p>>2]|0)==(o|0))s=p;else Db()}else s=m+8|0;c[d+12>>2]=m;c[s>>2]=d;d=o;m=n;break}s=c[a+(q+24)>>2]|0;t=c[a+(q+12)>>2]|0;do if((t|0)==(o|0)){u=a+(q+20)|0;t=c[u>>2]|0;if((t|0)==0){u=a+(q+16)|0;t=c[u>>2]|0;if((t|0)==0){p=0;break}}while(1){w=t+20|0;v=c[w>>2]|0;if((v|0)!=0){t=v;u=w;continue}v=t+16|0;w=c[v>>2]|0;if((w|0)==0)break;else{t=w;u=v}}if(u>>>0<r>>>0)Db();else{c[u>>2]=0;p=t;break}}else{u=c[a+(q+8)>>2]|0;if(u>>>0<r>>>0)Db();r=u+12|0;if((c[r>>2]|0)!=(o|0))Db();v=t+8|0;if((c[v>>2]|0)==(o|0)){c[r>>2]=t;c[v>>2]=u;p=t;break}else Db()}while(0);if((s|0)!=0){t=c[a+(q+28)>>2]|0;r=144720+(t<<2)|0;if((o|0)==(c[r>>2]|0)){c[r>>2]=p;if((p|0)==0){c[36105]=c[36105]&~(1<<t);d=o;m=n;break}}else{if(s>>>0<(c[36108]|0)>>>0)Db();r=s+16|0;if((c[r>>2]|0)==(o|0))c[r>>2]=p;else c[s+20>>2]=p;if((p|0)==0){d=o;m=n;break}}if(p>>>0<(c[36108]|0)>>>0)Db();c[p+24>>2]=s;r=c[a+(q+16)>>2]|0;do if((r|0)!=0)if(r>>>0<(c[36108]|0)>>>0)Db();else{c[p+16>>2]=r;c[r+24>>2]=p;break}while(0);q=c[a+(q+20)>>2]|0;if((q|0)!=0)if(q>>>0<(c[36108]|0)>>>0)Db();else{c[p+20>>2]=q;c[q+24>>2]=p;d=o;m=n;break}else{d=o;m=n}}else{d=o;m=n}}else{d=q;m=j}while(0);if(!(d>>>0<h>>>0))Db();n=a+(j+ -4)|0;o=c[n>>2]|0;if((o&1|0)==0)Db();if((o&2|0)==0){if((h|0)==(c[36110]|0)){w=(c[36107]|0)+m|0;c[36107]=w;c[36110]=d;c[d+4>>2]=w|1;if((d|0)!=(c[36109]|0)){i=b;return}c[36109]=0;c[36106]=0;i=b;return}if((h|0)==(c[36109]|0)){w=(c[36106]|0)+m|0;c[36106]=w;c[36109]=d;c[d+4>>2]=w|1;c[d+w>>2]=w;i=b;return}m=(o&-8)+m|0;n=o>>>3;do if(!(o>>>0<256)){l=c[a+(j+16)>>2]|0;q=c[a+(j|4)>>2]|0;do if((q|0)==(h|0)){o=a+(j+12)|0;n=c[o>>2]|0;if((n|0)==0){o=a+(j+8)|0;n=c[o>>2]|0;if((n|0)==0){k=0;break}}while(1){p=n+20|0;q=c[p>>2]|0;if((q|0)!=0){n=q;o=p;continue}p=n+16|0;q=c[p>>2]|0;if((q|0)==0)break;else{n=q;o=p}}if(o>>>0<(c[36108]|0)>>>0)Db();else{c[o>>2]=0;k=n;break}}else{o=c[a+j>>2]|0;if(o>>>0<(c[36108]|0)>>>0)Db();p=o+12|0;if((c[p>>2]|0)!=(h|0))Db();n=q+8|0;if((c[n>>2]|0)==(h|0)){c[p>>2]=q;c[n>>2]=o;k=q;break}else Db()}while(0);if((l|0)!=0){n=c[a+(j+20)>>2]|0;o=144720+(n<<2)|0;if((h|0)==(c[o>>2]|0)){c[o>>2]=k;if((k|0)==0){c[36105]=c[36105]&~(1<<n);break}}else{if(l>>>0<(c[36108]|0)>>>0)Db();n=l+16|0;if((c[n>>2]|0)==(h|0))c[n>>2]=k;else c[l+20>>2]=k;if((k|0)==0)break}if(k>>>0<(c[36108]|0)>>>0)Db();c[k+24>>2]=l;h=c[a+(j+8)>>2]|0;do if((h|0)!=0)if(h>>>0<(c[36108]|0)>>>0)Db();else{c[k+16>>2]=h;c[h+24>>2]=k;break}while(0);h=c[a+(j+12)>>2]|0;if((h|0)!=0)if(h>>>0<(c[36108]|0)>>>0)Db();else{c[k+20>>2]=h;c[h+24>>2]=k;break}}}else{k=c[a+j>>2]|0;a=c[a+(j|4)>>2]|0;j=144456+(n<<1<<2)|0;if((k|0)!=(j|0)){if(k>>>0<(c[36108]|0)>>>0)Db();if((c[k+12>>2]|0)!=(h|0))Db()}if((a|0)==(k|0)){c[36104]=c[36104]&~(1<<n);break}if((a|0)!=(j|0)){if(a>>>0<(c[36108]|0)>>>0)Db();j=a+8|0;if((c[j>>2]|0)==(h|0))l=j;else Db()}else l=a+8|0;c[k+12>>2]=a;c[l>>2]=k}while(0);c[d+4>>2]=m|1;c[d+m>>2]=m;if((d|0)==(c[36109]|0)){c[36106]=m;i=b;return}}else{c[n>>2]=o&-2;c[d+4>>2]=m|1;c[d+m>>2]=m}h=m>>>3;if(m>>>0<256){a=h<<1;e=144456+(a<<2)|0;j=c[36104]|0;h=1<<h;if((j&h|0)!=0){h=144456+(a+2<<2)|0;a=c[h>>2]|0;if(a>>>0<(c[36108]|0)>>>0)Db();else{f=h;g=a}}else{c[36104]=j|h;f=144456+(a+2<<2)|0;g=e}c[f>>2]=d;c[g+12>>2]=d;c[d+8>>2]=g;c[d+12>>2]=e;i=b;return}f=m>>>8;if((f|0)!=0)if(m>>>0>16777215)f=31;else{v=(f+1048320|0)>>>16&8;w=f<<v;u=(w+520192|0)>>>16&4;w=w<<u;f=(w+245760|0)>>>16&2;f=14-(u|v|f)+(w<<f>>>15)|0;f=m>>>(f+7|0)&1|f<<1}else f=0;g=144720+(f<<2)|0;c[d+28>>2]=f;c[d+20>>2]=0;c[d+16>>2]=0;a=c[36105]|0;h=1<<f;a:do if((a&h|0)!=0){g=c[g>>2]|0;if((f|0)==31)f=0;else f=25-(f>>>1)|0;b:do if((c[g+4>>2]&-8|0)!=(m|0)){f=m<<f;a=g;while(1){h=a+(f>>>31<<2)+16|0;g=c[h>>2]|0;if((g|0)==0)break;if((c[g+4>>2]&-8|0)==(m|0)){e=g;break b}else{f=f<<1;a=g}}if(h>>>0<(c[36108]|0)>>>0)Db();else{c[h>>2]=d;c[d+24>>2]=a;c[d+12>>2]=d;c[d+8>>2]=d;break a}}else e=g;while(0);g=e+8|0;f=c[g>>2]|0;h=c[36108]|0;if(e>>>0<h>>>0)Db();if(f>>>0<h>>>0)Db();else{c[f+12>>2]=d;c[g>>2]=d;c[d+8>>2]=f;c[d+12>>2]=e;c[d+24>>2]=0;break}}else{c[36105]=a|h;c[g>>2]=d;c[d+24>>2]=g;c[d+12>>2]=d;c[d+8>>2]=d}while(0);w=(c[36112]|0)+ -1|0;c[36112]=w;if((w|0)==0)d=144872|0;else{i=b;return}while(1){d=c[d>>2]|0;if((d|0)==0)break;else d=d+8|0}c[36112]=-1;i=b;return}function Px(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;if((a|0)!=0){e=da(b,a)|0;if((b|a)>>>0>65535)e=((e>>>0)/(a>>>0)|0|0)==(b|0)?e:-1}else e=0;a=Nx(e)|0;if((a|0)==0){i=d;return a|0}if((c[a+ -4>>2]&3|0)==0){i=d;return a|0}vy(a|0,0,e|0)|0;i=d;return a|0}function Qx(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;if((a|0)==0){e=Nx(b)|0;i=d;return e|0}if(b>>>0>4294967231){c[(tb()|0)>>2]=12;e=0;i=d;return e|0}if(b>>>0<11)e=16;else e=b+11&-8;e=Rx(a+ -8|0,e)|0;if((e|0)!=0){e=e+8|0;i=d;return e|0}e=Nx(b)|0;if((e|0)==0){e=0;i=d;return e|0}f=c[a+ -4>>2]|0;f=(f&-8)-((f&3|0)==0?8:4)|0;By(e|0,a|0,(f>>>0<b>>>0?f:b)|0)|0;Ox(a);i=d;return e|0}function Rx(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=i;e=a+4|0;g=c[e>>2]|0;j=g&-8;f=a+j|0;l=c[36108]|0;if(a>>>0<l>>>0)Db();n=g&3;if(!((n|0)!=1&a>>>0<f>>>0))Db();h=a+(j|4)|0;o=c[h>>2]|0;if((o&1|0)==0)Db();if((n|0)==0){if(b>>>0<256){q=0;i=d;return q|0}if(!(j>>>0<(b+4|0)>>>0)?!((j-b|0)>>>0>c[36224]<<1>>>0):0){q=a;i=d;return q|0}q=0;i=d;return q|0}if(!(j>>>0<b>>>0)){f=j-b|0;if(!(f>>>0>15)){q=a;i=d;return q|0}c[e>>2]=g&1|b|2;c[a+(b+4)>>2]=f|3;c[h>>2]=c[h>>2]|1;Sx(a+b|0,f);q=a;i=d;return q|0}if((f|0)==(c[36110]|0)){f=(c[36107]|0)+j|0;if(!(f>>>0>b>>>0)){q=0;i=d;return q|0}q=f-b|0;c[e>>2]=g&1|b|2;c[a+(b+4)>>2]=q|1;c[36110]=a+b;c[36107]=q;q=a;i=d;return q|0}if((f|0)==(c[36109]|0)){h=(c[36106]|0)+j|0;if(h>>>0<b>>>0){q=0;i=d;return q|0}f=h-b|0;if(f>>>0>15){c[e>>2]=g&1|b|2;c[a+(b+4)>>2]=f|1;c[a+h>>2]=f;q=a+(h+4)|0;c[q>>2]=c[q>>2]&-2;b=a+b|0}else{c[e>>2]=g&1|h|2;b=a+(h+4)|0;c[b>>2]=c[b>>2]|1;b=0;f=0}c[36106]=f;c[36109]=b;q=a;i=d;return q|0}if((o&2|0)!=0){q=0;i=d;return q|0}h=(o&-8)+j|0;if(h>>>0<b>>>0){q=0;i=d;return q|0}g=h-b|0;n=o>>>3;do if(!(o>>>0<256)){m=c[a+(j+24)>>2]|0;o=c[a+(j+12)>>2]|0;do if((o|0)==(f|0)){o=a+(j+20)|0;n=c[o>>2]|0;if((n|0)==0){o=a+(j+16)|0;n=c[o>>2]|0;if((n|0)==0){k=0;break}}while(1){q=n+20|0;p=c[q>>2]|0;if((p|0)!=0){n=p;o=q;continue}q=n+16|0;p=c[q>>2]|0;if((p|0)==0)break;else{n=p;o=q}}if(o>>>0<l>>>0)Db();else{c[o>>2]=0;k=n;break}}else{n=c[a+(j+8)>>2]|0;if(n>>>0<l>>>0)Db();p=n+12|0;if((c[p>>2]|0)!=(f|0))Db();l=o+8|0;if((c[l>>2]|0)==(f|0)){c[p>>2]=o;c[l>>2]=n;k=o;break}else Db()}while(0);if((m|0)!=0){l=c[a+(j+28)>>2]|0;n=144720+(l<<2)|0;if((f|0)==(c[n>>2]|0)){c[n>>2]=k;if((k|0)==0){c[36105]=c[36105]&~(1<<l);break}}else{if(m>>>0<(c[36108]|0)>>>0)Db();l=m+16|0;if((c[l>>2]|0)==(f|0))c[l>>2]=k;else c[m+20>>2]=k;if((k|0)==0)break}if(k>>>0<(c[36108]|0)>>>0)Db();c[k+24>>2]=m;f=c[a+(j+16)>>2]|0;do if((f|0)!=0)if(f>>>0<(c[36108]|0)>>>0)Db();else{c[k+16>>2]=f;c[f+24>>2]=k;break}while(0);f=c[a+(j+20)>>2]|0;if((f|0)!=0)if(f>>>0<(c[36108]|0)>>>0)Db();else{c[k+20>>2]=f;c[f+24>>2]=k;break}}}else{k=c[a+(j+8)>>2]|0;j=c[a+(j+12)>>2]|0;o=144456+(n<<1<<2)|0;if((k|0)!=(o|0)){if(k>>>0<l>>>0)Db();if((c[k+12>>2]|0)!=(f|0))Db()}if((j|0)==(k|0)){c[36104]=c[36104]&~(1<<n);break}if((j|0)!=(o|0)){if(j>>>0<l>>>0)Db();l=j+8|0;if((c[l>>2]|0)==(f|0))m=l;else Db()}else m=j+8|0;c[k+12>>2]=j;c[m>>2]=k}while(0);if(g>>>0<16){c[e>>2]=h|c[e>>2]&1|2;q=a+(h|4)|0;c[q>>2]=c[q>>2]|1;q=a;i=d;return q|0}else{c[e>>2]=c[e>>2]&1|b|2;c[a+(b+4)>>2]=g|3;q=a+(h|4)|0;c[q>>2]=c[q>>2]|1;Sx(a+b|0,g);q=a;i=d;return q|0}return 0}function Sx(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;d=i;h=a+b|0;l=c[a+4>>2]|0;do if((l&1|0)==0){p=c[a>>2]|0;if((l&3|0)==0){i=d;return}l=a+(0-p)|0;m=p+b|0;q=c[36108]|0;if(l>>>0<q>>>0)Db();if((l|0)==(c[36109]|0)){e=a+(b+4)|0;if((c[e>>2]&3|0)!=3){e=l;n=m;break}c[36106]=m;c[e>>2]=c[e>>2]&-2;c[a+(4-p)>>2]=m|1;c[h>>2]=m;i=d;return}s=p>>>3;if(p>>>0<256){e=c[a+(8-p)>>2]|0;n=c[a+(12-p)>>2]|0;o=144456+(s<<1<<2)|0;if((e|0)!=(o|0)){if(e>>>0<q>>>0)Db();if((c[e+12>>2]|0)!=(l|0))Db()}if((n|0)==(e|0)){c[36104]=c[36104]&~(1<<s);e=l;n=m;break}if((n|0)!=(o|0)){if(n>>>0<q>>>0)Db();o=n+8|0;if((c[o>>2]|0)==(l|0))r=o;else Db()}else r=n+8|0;c[e+12>>2]=n;c[r>>2]=e;e=l;n=m;break}r=c[a+(24-p)>>2]|0;t=c[a+(12-p)>>2]|0;do if((t|0)==(l|0)){u=16-p|0;t=a+(u+4)|0;s=c[t>>2]|0;if((s|0)==0){t=a+u|0;s=c[t>>2]|0;if((s|0)==0){o=0;break}}while(1){u=s+20|0;v=c[u>>2]|0;if((v|0)!=0){s=v;t=u;continue}v=s+16|0;u=c[v>>2]|0;if((u|0)==0)break;else{s=u;t=v}}if(t>>>0<q>>>0)Db();else{c[t>>2]=0;o=s;break}}else{s=c[a+(8-p)>>2]|0;if(s>>>0<q>>>0)Db();u=s+12|0;if((c[u>>2]|0)!=(l|0))Db();q=t+8|0;if((c[q>>2]|0)==(l|0)){c[u>>2]=t;c[q>>2]=s;o=t;break}else Db()}while(0);if((r|0)!=0){q=c[a+(28-p)>>2]|0;s=144720+(q<<2)|0;if((l|0)==(c[s>>2]|0)){c[s>>2]=o;if((o|0)==0){c[36105]=c[36105]&~(1<<q);e=l;n=m;break}}else{if(r>>>0<(c[36108]|0)>>>0)Db();q=r+16|0;if((c[q>>2]|0)==(l|0))c[q>>2]=o;else c[r+20>>2]=o;if((o|0)==0){e=l;n=m;break}}if(o>>>0<(c[36108]|0)>>>0)Db();c[o+24>>2]=r;p=16-p|0;q=c[a+p>>2]|0;do if((q|0)!=0)if(q>>>0<(c[36108]|0)>>>0)Db();else{c[o+16>>2]=q;c[q+24>>2]=o;break}while(0);p=c[a+(p+4)>>2]|0;if((p|0)!=0)if(p>>>0<(c[36108]|0)>>>0)Db();else{c[o+20>>2]=p;c[p+24>>2]=o;e=l;n=m;break}else{e=l;n=m}}else{e=l;n=m}}else{e=a;n=b}while(0);l=c[36108]|0;if(h>>>0<l>>>0)Db();m=a+(b+4)|0;o=c[m>>2]|0;if((o&2|0)==0){if((h|0)==(c[36110]|0)){v=(c[36107]|0)+n|0;c[36107]=v;c[36110]=e;c[e+4>>2]=v|1;if((e|0)!=(c[36109]|0)){i=d;return}c[36109]=0;c[36106]=0;i=d;return}if((h|0)==(c[36109]|0)){v=(c[36106]|0)+n|0;c[36106]=v;c[36109]=e;c[e+4>>2]=v|1;c[e+v>>2]=v;i=d;return}n=(o&-8)+n|0;m=o>>>3;do if(!(o>>>0<256)){k=c[a+(b+24)>>2]|0;m=c[a+(b+12)>>2]|0;do if((m|0)==(h|0)){o=a+(b+20)|0;m=c[o>>2]|0;if((m|0)==0){o=a+(b+16)|0;m=c[o>>2]|0;if((m|0)==0){j=0;break}}while(1){q=m+20|0;p=c[q>>2]|0;if((p|0)!=0){m=p;o=q;continue}p=m+16|0;q=c[p>>2]|0;if((q|0)==0)break;else{m=q;o=p}}if(o>>>0<l>>>0)Db();else{c[o>>2]=0;j=m;break}}else{o=c[a+(b+8)>>2]|0;if(o>>>0<l>>>0)Db();l=o+12|0;if((c[l>>2]|0)!=(h|0))Db();p=m+8|0;if((c[p>>2]|0)==(h|0)){c[l>>2]=m;c[p>>2]=o;j=m;break}else Db()}while(0);if((k|0)!=0){l=c[a+(b+28)>>2]|0;m=144720+(l<<2)|0;if((h|0)==(c[m>>2]|0)){c[m>>2]=j;if((j|0)==0){c[36105]=c[36105]&~(1<<l);break}}else{if(k>>>0<(c[36108]|0)>>>0)Db();l=k+16|0;if((c[l>>2]|0)==(h|0))c[l>>2]=j;else c[k+20>>2]=j;if((j|0)==0)break}if(j>>>0<(c[36108]|0)>>>0)Db();c[j+24>>2]=k;h=c[a+(b+16)>>2]|0;do if((h|0)!=0)if(h>>>0<(c[36108]|0)>>>0)Db();else{c[j+16>>2]=h;c[h+24>>2]=j;break}while(0);h=c[a+(b+20)>>2]|0;if((h|0)!=0)if(h>>>0<(c[36108]|0)>>>0)Db();else{c[j+20>>2]=h;c[h+24>>2]=j;break}}}else{j=c[a+(b+8)>>2]|0;a=c[a+(b+12)>>2]|0;b=144456+(m<<1<<2)|0;if((j|0)!=(b|0)){if(j>>>0<l>>>0)Db();if((c[j+12>>2]|0)!=(h|0))Db()}if((a|0)==(j|0)){c[36104]=c[36104]&~(1<<m);break}if((a|0)!=(b|0)){if(a>>>0<l>>>0)Db();b=a+8|0;if((c[b>>2]|0)==(h|0))k=b;else Db()}else k=a+8|0;c[j+12>>2]=a;c[k>>2]=j}while(0);c[e+4>>2]=n|1;c[e+n>>2]=n;if((e|0)==(c[36109]|0)){c[36106]=n;i=d;return}}else{c[m>>2]=o&-2;c[e+4>>2]=n|1;c[e+n>>2]=n}a=n>>>3;if(n>>>0<256){b=a<<1;h=144456+(b<<2)|0;j=c[36104]|0;a=1<<a;if((j&a|0)!=0){b=144456+(b+2<<2)|0;a=c[b>>2]|0;if(a>>>0<(c[36108]|0)>>>0)Db();else{g=b;f=a}}else{c[36104]=j|a;g=144456+(b+2<<2)|0;f=h}c[g>>2]=e;c[f+12>>2]=e;c[e+8>>2]=f;c[e+12>>2]=h;i=d;return}f=n>>>8;if((f|0)!=0)if(n>>>0>16777215)f=31;else{u=(f+1048320|0)>>>16&8;v=f<<u;t=(v+520192|0)>>>16&4;v=v<<t;f=(v+245760|0)>>>16&2;f=14-(t|u|f)+(v<<f>>>15)|0;f=n>>>(f+7|0)&1|f<<1}else f=0;a=144720+(f<<2)|0;c[e+28>>2]=f;c[e+20>>2]=0;c[e+16>>2]=0;h=c[36105]|0;g=1<<f;if((h&g|0)==0){c[36105]=h|g;c[a>>2]=e;c[e+24>>2]=a;c[e+12>>2]=e;c[e+8>>2]=e;i=d;return}g=c[a>>2]|0;if((f|0)==31)f=0;else f=25-(f>>>1)|0;a:do if((c[g+4>>2]&-8|0)!=(n|0)){f=n<<f;a=g;while(1){h=a+(f>>>31<<2)+16|0;g=c[h>>2]|0;if((g|0)==0)break;if((c[g+4>>2]&-8|0)==(n|0))break a;else{f=f<<1;a=g}}if(h>>>0<(c[36108]|0)>>>0)Db();c[h>>2]=e;c[e+24>>2]=a;c[e+12>>2]=e;c[e+8>>2]=e;i=d;return}while(0);f=g+8|0;a=c[f>>2]|0;h=c[36108]|0;if(g>>>0<h>>>0)Db();if(a>>>0<h>>>0)Db();c[a+12>>2]=e;c[f>>2]=e;c[e+8>>2]=a;c[e+12>>2]=g;c[e+24>>2]=0;i=d;return}function Tx(a){a=a|0;if((a|0)==32)a=1;else a=(a+ -9|0)>>>0<5;return a&1|0}function Ux(a){a=a|0;if((a+ -48|0)>>>0<10)a=1;else a=((a|32)+ -97|0)>>>0<6;return a&1|0}function Vx(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;j=i;if(e>>>0>36){c[(tb()|0)>>2]=22;s=0;t=0;H=s;i=j;return t|0}k=b+4|0;l=b+100|0;do{m=c[k>>2]|0;if(m>>>0<(c[l>>2]|0)>>>0){c[k>>2]=m+1;o=d[m>>0]|0}else o=Zx(b)|0}while((Tx(o)|0)!=0);do if((o|0)==43|(o|0)==45){m=((o|0)==45)<<31>>31;n=c[k>>2]|0;if(n>>>0<(c[l>>2]|0)>>>0){c[k>>2]=n+1;o=d[n>>0]|0;break}else{o=Zx(b)|0;break}}else m=0;while(0);n=(e|0)==0;do if((e&-17|0)==0&(o|0)==48){o=c[k>>2]|0;if(o>>>0<(c[l>>2]|0)>>>0){c[k>>2]=o+1;o=d[o>>0]|0}else o=Zx(b)|0;if((o|32|0)!=120){f=n?8:e;e=32;break}e=c[k>>2]|0;if(e>>>0<(c[l>>2]|0)>>>0){c[k>>2]=e+1;o=d[e>>0]|0}else o=Zx(b)|0;if((d[o+144913>>0]|0)>15){h=(c[l>>2]|0)==0;if(!h)c[k>>2]=(c[k>>2]|0)+ -1;if((f|0)==0){Yx(b,0);s=0;t=0;H=s;i=j;return t|0}if(h){s=0;t=0;H=s;i=j;return t|0}c[k>>2]=(c[k>>2]|0)+ -1;s=0;t=0;H=s;i=j;return t|0}else{f=16;e=47}}else{f=n?10:e;if((d[o+144913>>0]|0)>>>0<f>>>0)e=32;else{if((c[l>>2]|0)!=0)c[k>>2]=(c[k>>2]|0)+ -1;Yx(b,0);c[(tb()|0)>>2]=22;s=0;t=0;H=s;i=j;return t|0}}while(0);if((e|0)==32)if((f|0)==10){f=o+ -48|0;if(f>>>0<10){n=0;while(1){n=n+f|0;f=c[k>>2]|0;if(f>>>0<(c[l>>2]|0)>>>0){c[k>>2]=f+1;o=d[f>>0]|0}else o=Zx(b)|0;f=o+ -48|0;if(!(f>>>0<10&n>>>0<429496729))break;n=n*10|0}p=0}else{n=0;p=0}f=o+ -48|0;if(f>>>0<10){do{s=Iy(n|0,p|0,10,0)|0;r=H;q=((f|0)<0)<<31>>31;t=~q;if(r>>>0>t>>>0|(r|0)==(t|0)&s>>>0>~f>>>0)break;n=xy(s|0,r|0,f|0,q|0)|0;p=H;f=c[k>>2]|0;if(f>>>0<(c[l>>2]|0)>>>0){c[k>>2]=f+1;o=d[f>>0]|0}else o=Zx(b)|0;f=o+ -48|0}while(f>>>0<10&(p>>>0<429496729|(p|0)==429496729&n>>>0<2576980378));if(!(f>>>0>9)){f=10;e=73}}}else e=47;a:do if((e|0)==47){if((f+ -1&f|0)==0){e=a[145176+((f*23|0)>>>5&7)>>0]|0;r=a[o+144913>>0]|0;n=r&255;if(n>>>0<f>>>0){o=n;n=0;do{n=o|n<<e;o=c[k>>2]|0;if(o>>>0<(c[l>>2]|0)>>>0){c[k>>2]=o+1;s=d[o>>0]|0}else s=Zx(b)|0;r=a[s+144913>>0]|0;o=r&255}while(o>>>0<f>>>0&n>>>0<134217728);p=0}else{p=0;n=0;s=o}o=yy(-1,-1,e|0)|0;q=H;if((r&255)>>>0>=f>>>0|(p>>>0>q>>>0|(p|0)==(q|0)&n>>>0>o>>>0)){o=s;e=73;break}while(1){n=Ay(n|0,p|0,e|0)|0;p=H;n=r&255|n;r=c[k>>2]|0;if(r>>>0<(c[l>>2]|0)>>>0){c[k>>2]=r+1;s=d[r>>0]|0}else s=Zx(b)|0;r=a[s+144913>>0]|0;if((r&255)>>>0>=f>>>0|(p>>>0>q>>>0|(p|0)==(q|0)&n>>>0>o>>>0)){o=s;e=73;break a}}}r=a[o+144913>>0]|0;e=r&255;if(e>>>0<f>>>0){n=0;do{n=e+(da(n,f)|0)|0;e=c[k>>2]|0;if(e>>>0<(c[l>>2]|0)>>>0){c[k>>2]=e+1;q=d[e>>0]|0}else q=Zx(b)|0;r=a[q+144913>>0]|0;e=r&255}while(e>>>0<f>>>0&n>>>0<119304647);p=0}else{n=0;p=0;q=o}if((r&255)>>>0<f>>>0){e=Jy(-1,-1,f|0,0)|0;o=H;while(1){if(p>>>0>o>>>0|(p|0)==(o|0)&n>>>0>e>>>0){o=q;e=73;break a}t=Iy(n|0,p|0,f|0,0)|0;s=H;r=r&255;if(s>>>0>4294967295|(s|0)==-1&t>>>0>~r>>>0){o=q;e=73;break a}n=xy(r|0,0,t|0,s|0)|0;p=H;q=c[k>>2]|0;if(q>>>0<(c[l>>2]|0)>>>0){c[k>>2]=q+1;q=d[q>>0]|0}else q=Zx(b)|0;r=a[q+144913>>0]|0;if(!((r&255)>>>0<f>>>0)){o=q;e=73;break}}}else{o=q;e=73}}while(0);if((e|0)==73)if((d[o+144913>>0]|0)>>>0<f>>>0){do{e=c[k>>2]|0;if(e>>>0<(c[l>>2]|0)>>>0){c[k>>2]=e+1;e=d[e>>0]|0}else e=Zx(b)|0}while((d[e+144913>>0]|0)>>>0<f>>>0);c[(tb()|0)>>2]=34;p=h;n=g}if((c[l>>2]|0)!=0)c[k>>2]=(c[k>>2]|0)+ -1;if(!(p>>>0<h>>>0|(p|0)==(h|0)&n>>>0<g>>>0)){if((g&1|0)==0&0==0&(m|0)==0){c[(tb()|0)>>2]=34;t=xy(g|0,h|0,-1,-1)|0;s=H;H=s;i=j;return t|0}if(p>>>0>h>>>0|(p|0)==(h|0)&n>>>0>g>>>0){c[(tb()|0)>>2]=34;s=h;t=g;H=s;i=j;return t|0}}t=((m|0)<0)<<31>>31;t=uy(n^m|0,p^t|0,m|0,t|0)|0;s=H;H=s;i=j;return t|0}function Wx(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0,t=0,u=0,v=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,I=0.0,J=0,K=0.0,L=0.0,M=0.0,N=0.0;g=i;i=i+512|0;k=g;if((e|0)==0){e=24;h=-149}else if((e|0)==1){e=53;h=-1074}else if((e|0)==2){e=53;h=-1074}else{L=0.0;i=g;return+L}n=b+4|0;o=b+100|0;do{j=c[n>>2]|0;if(j>>>0<(c[o>>2]|0)>>>0){c[n>>2]=j+1;E=d[j>>0]|0}else E=Zx(b)|0}while((Tx(E)|0)!=0);do if((E|0)==43|(E|0)==45){j=1-(((E|0)==45&1)<<1)|0;m=c[n>>2]|0;if(m>>>0<(c[o>>2]|0)>>>0){c[n>>2]=m+1;E=d[m>>0]|0;break}else{E=Zx(b)|0;break}}else j=1;while(0);m=0;do{if((E|32|0)!=(a[145192+m>>0]|0))break;do if(m>>>0<7){p=c[n>>2]|0;if(p>>>0<(c[o>>2]|0)>>>0){c[n>>2]=p+1;E=d[p>>0]|0;break}else{E=Zx(b)|0;break}}while(0);m=m+1|0}while(m>>>0<8);do if((m|0)==3)q=23;else if((m|0)!=8){p=(f|0)==0;if(!(m>>>0<4|p))if((m|0)==8)break;else{q=23;break}a:do if((m|0)==0){m=0;do{if((E|32|0)!=(a[145208+m>>0]|0))break a;do if(m>>>0<2){s=c[n>>2]|0;if(s>>>0<(c[o>>2]|0)>>>0){c[n>>2]=s+1;E=d[s>>0]|0;break}else{E=Zx(b)|0;break}}while(0);m=m+1|0}while(m>>>0<3)}while(0);if((m|0)==0){do if((E|0)==48){m=c[n>>2]|0;if(m>>>0<(c[o>>2]|0)>>>0){c[n>>2]=m+1;m=d[m>>0]|0}else m=Zx(b)|0;if((m|32|0)!=120){if((c[o>>2]|0)==0){E=48;break}c[n>>2]=(c[n>>2]|0)+ -1;E=48;break}k=c[n>>2]|0;if(k>>>0<(c[o>>2]|0)>>>0){c[n>>2]=k+1;A=d[k>>0]|0;y=0}else{A=Zx(b)|0;y=0}while(1){if((A|0)==46){q=70;break}else if((A|0)!=48){k=0;m=0;s=0;t=0;v=0;z=0;I=1.0;u=0;r=0.0;break}k=c[n>>2]|0;if(k>>>0<(c[o>>2]|0)>>>0){c[n>>2]=k+1;A=d[k>>0]|0;y=1;continue}else{A=Zx(b)|0;y=1;continue}}b:do if((q|0)==70){k=c[n>>2]|0;if(k>>>0<(c[o>>2]|0)>>>0){c[n>>2]=k+1;A=d[k>>0]|0}else A=Zx(b)|0;if((A|0)==48){s=-1;t=-1;while(1){k=c[n>>2]|0;if(k>>>0<(c[o>>2]|0)>>>0){c[n>>2]=k+1;A=d[k>>0]|0}else A=Zx(b)|0;if((A|0)!=48){k=0;m=0;y=1;v=1;z=0;I=1.0;u=0;r=0.0;break b}J=xy(s|0,t|0,-1,-1)|0;s=J;t=H}}else{k=0;m=0;s=0;t=0;v=1;z=0;I=1.0;u=0;r=0.0}}while(0);c:while(1){B=A+ -48|0;do if(!(B>>>0<10)){C=A|32;D=(A|0)==46;if(!((C+ -97|0)>>>0<6|D))break c;if(D)if((v|0)==0){s=m;t=k;v=1;break}else{A=46;break c}else{B=(A|0)>57?C+ -87|0:B;q=84;break}}else q=84;while(0);if((q|0)==84){q=0;do if(!((k|0)<0|(k|0)==0&m>>>0<8)){if((k|0)<0|(k|0)==0&m>>>0<14){L=I*.0625;K=L;r=r+L*+(B|0);break}if((B|0)!=0&(z|0)==0){z=1;K=I;r=r+I*.5}else K=I}else{K=I;u=B+(u<<4)|0}while(0);m=xy(m|0,k|0,1,0)|0;k=H;y=1;I=K}A=c[n>>2]|0;if(A>>>0<(c[o>>2]|0)>>>0){c[n>>2]=A+1;A=d[A>>0]|0;continue}else{A=Zx(b)|0;continue}}if((y|0)==0){e=(c[o>>2]|0)==0;if(!e)c[n>>2]=(c[n>>2]|0)+ -1;if(!p){if(!e?(l=c[n>>2]|0,c[n>>2]=l+ -1,(v|0)!=0):0)c[n>>2]=l+ -2}else Yx(b,0);L=+(j|0)*0.0;i=g;return+L}q=(v|0)==0;l=q?m:s;q=q?k:t;if((k|0)<0|(k|0)==0&m>>>0<8)do{u=u<<4;m=xy(m|0,k|0,1,0)|0;k=H}while((k|0)<0|(k|0)==0&m>>>0<8);do if((A|32|0)==112){m=Xx(b,f)|0;k=H;if((m|0)==0&(k|0)==-2147483648)if(p){Yx(b,0);L=0.0;i=g;return+L}else{if((c[o>>2]|0)==0){m=0;k=0;break}c[n>>2]=(c[n>>2]|0)+ -1;m=0;k=0;break}}else if((c[o>>2]|0)==0){m=0;k=0}else{c[n>>2]=(c[n>>2]|0)+ -1;m=0;k=0}while(0);l=Ay(l|0,q|0,2)|0;l=xy(l|0,H|0,-32,-1)|0;k=xy(l|0,H|0,m|0,k|0)|0;l=H;if((u|0)==0){L=+(j|0)*0.0;i=g;return+L}if((l|0)>0|(l|0)==0&k>>>0>(0-h|0)>>>0){c[(tb()|0)>>2]=34;L=+(j|0)*1.7976931348623157e+308*1.7976931348623157e+308;i=g;return+L}J=h+ -106|0;G=((J|0)<0)<<31>>31;if((l|0)<(G|0)|(l|0)==(G|0)&k>>>0<J>>>0){c[(tb()|0)>>2]=34;L=+(j|0)*2.2250738585072014e-308*2.2250738585072014e-308;i=g;return+L}if((u|0)>-1)do{u=u<<1;if(!(r>=.5))I=r;else{I=r+-1.0;u=u|1}r=r+I;k=xy(k|0,l|0,-1,-1)|0;l=H}while((u|0)>-1);h=uy(32,0,h|0,((h|0)<0)<<31>>31|0)|0;h=xy(k|0,l|0,h|0,H|0)|0;J=H;if(0>(J|0)|0==(J|0)&e>>>0>h>>>0)e=(h|0)<0?0:h;do if((e|0)<53){K=+(j|0);I=+Cb(+(+ay(1.0,84-e|0)),+K);if(!((e|0)<32&r!=0.0))break;J=u&1;u=(J^1)+u|0;r=(J|0)==0?0.0:r}else{I=0.0;K=+(j|0)}while(0);r=K*r+(I+K*+(u>>>0))-I;if(!(r!=0.0))c[(tb()|0)>>2]=34;L=+by(r,k);i=g;return+L}while(0);m=h+e|0;l=0-m|0;B=0;while(1){if((E|0)==46){q=139;break}else if((E|0)!=48){A=0;z=0;D=0;break}s=c[n>>2]|0;if(s>>>0<(c[o>>2]|0)>>>0){c[n>>2]=s+1;E=d[s>>0]|0;B=1;continue}else{E=Zx(b)|0;B=1;continue}}d:do if((q|0)==139){s=c[n>>2]|0;if(s>>>0<(c[o>>2]|0)>>>0){c[n>>2]=s+1;E=d[s>>0]|0}else E=Zx(b)|0;if((E|0)==48){A=-1;z=-1;while(1){s=c[n>>2]|0;if(s>>>0<(c[o>>2]|0)>>>0){c[n>>2]=s+1;E=d[s>>0]|0}else E=Zx(b)|0;if((E|0)!=48){B=1;D=1;break d}J=xy(A|0,z|0,-1,-1)|0;A=J;z=H}}else{A=0;z=0;D=1}}while(0);c[k>>2]=0;F=E+ -48|0;G=(E|0)==46;e:do if(F>>>0<10|G){s=k+496|0;C=0;y=0;v=0;u=0;t=0;while(1){do if(G)if((D|0)==0){A=C;z=y;D=1}else break e;else{J=xy(C|0,y|0,1,0)|0;y=H;G=(E|0)!=48;if((u|0)>=125){if(!G){C=J;break}c[s>>2]=c[s>>2]|1;C=J;break}B=k+(u<<2)|0;if((v|0)!=0)F=E+ -48+((c[B>>2]|0)*10|0)|0;c[B>>2]=F;v=v+1|0;F=(v|0)==9;C=J;B=1;v=F?0:v;u=(F&1)+u|0;t=G?J:t}while(0);E=c[n>>2]|0;if(E>>>0<(c[o>>2]|0)>>>0){c[n>>2]=E+1;E=d[E>>0]|0}else E=Zx(b)|0;F=E+ -48|0;G=(E|0)==46;if(!(F>>>0<10|G)){q=162;break}}}else{C=0;y=0;v=0;u=0;t=0;q=162}while(0);if((q|0)==162){J=(D|0)==0;A=J?C:A;z=J?y:z}q=(B|0)!=0;if(q?(E|32|0)==101:0){s=Xx(b,f)|0;f=H;do if((s|0)==0&(f|0)==-2147483648)if(p){Yx(b,0);L=0.0;i=g;return+L}else{if((c[o>>2]|0)==0){s=0;f=0;break}c[n>>2]=(c[n>>2]|0)+ -1;s=0;f=0;break}while(0);A=xy(s|0,f|0,A|0,z|0)|0;z=H}else if((E|0)>-1?(c[o>>2]|0)!=0:0)c[n>>2]=(c[n>>2]|0)+ -1;if(!q){c[(tb()|0)>>2]=22;Yx(b,0);L=0.0;i=g;return+L}b=c[k>>2]|0;if((b|0)==0){L=+(j|0)*0.0;i=g;return+L}do if((A|0)==(C|0)&(z|0)==(y|0)&((y|0)<0|(y|0)==0&C>>>0<10)){if(!(e>>>0>30)?(b>>>e|0)!=0:0)break;L=+(j|0)*+(b>>>0);i=g;return+L}while(0);J=(h|0)/-2|0;G=((J|0)<0)<<31>>31;if((z|0)>(G|0)|(z|0)==(G|0)&A>>>0>J>>>0){c[(tb()|0)>>2]=34;L=+(j|0)*1.7976931348623157e+308*1.7976931348623157e+308;i=g;return+L}J=h+ -106|0;G=((J|0)<0)<<31>>31;if((z|0)<(G|0)|(z|0)==(G|0)&A>>>0<J>>>0){c[(tb()|0)>>2]=34;L=+(j|0)*2.2250738585072014e-308*2.2250738585072014e-308;i=g;return+L}if((v|0)!=0){if((v|0)<9){b=k+(u<<2)|0;n=c[b>>2]|0;do{n=n*10|0;v=v+1|0}while((v|0)!=9);c[b>>2]=n}u=u+1|0}do if((t|0)<9?(t|0)<=(A|0)&(A|0)<18:0){if((A|0)==9){L=+(j|0)*+((c[k>>2]|0)>>>0);i=g;return+L}if((A|0)<9){L=+(j|0)*+((c[k>>2]|0)>>>0)/+(c[145224+(8-A<<2)>>2]|0);i=g;return+L}J=e+27+(da(A,-3)|0)|0;b=c[k>>2]|0;if((J|0)<=30?(b>>>J|0)!=0:0)break;L=+(j|0)*+(b>>>0)*+(c[145224+(A+ -10<<2)>>2]|0);i=g;return+L}while(0);b=(A|0)%9|0;if((b|0)==0){n=0;o=0;b=A}else{b=(A|0)>-1?b:b+9|0;q=c[145224+(8-b<<2)>>2]|0;if((u|0)!=0){p=1e9/(q|0)|0;n=0;o=0;f=0;do{F=k+(f<<2)|0;G=c[F>>2]|0;J=((G>>>0)/(q>>>0)|0)+o|0;c[F>>2]=J;o=da((G>>>0)%(q>>>0)|0,p)|0;G=f;f=f+1|0;if((G|0)==(n|0)&(J|0)==0){n=f&127;A=A+ -9|0}}while((f|0)!=(u|0));if((o|0)!=0){c[k+(u<<2)>>2]=o;u=u+1|0}}else{n=0;u=0}o=0;b=9-b+A|0}f:while(1){f=k+(n<<2)|0;if((b|0)<18){do{q=0;f=u+127|0;while(1){f=f&127;p=k+(f<<2)|0;s=Ay(c[p>>2]|0,0,29)|0;s=xy(s|0,H|0,q|0,0)|0;q=H;if(q>>>0>0|(q|0)==0&s>>>0>1e9){J=Jy(s|0,q|0,1e9,0)|0;s=Ky(s|0,q|0,1e9,0)|0;q=J}else q=0;c[p>>2]=s;p=(f|0)==(n|0);if(!((f|0)!=(u+127&127|0)|p))u=(s|0)==0?f:u;if(p)break;else f=f+ -1|0}o=o+ -29|0}while((q|0)==0)}else{if((b|0)!=18)break;do{if(!((c[f>>2]|0)>>>0<9007199)){b=18;break f}q=0;p=u+127|0;while(1){p=p&127;s=k+(p<<2)|0;t=Ay(c[s>>2]|0,0,29)|0;t=xy(t|0,H|0,q|0,0)|0;q=H;if(q>>>0>0|(q|0)==0&t>>>0>1e9){J=Jy(t|0,q|0,1e9,0)|0;t=Ky(t|0,q|0,1e9,0)|0;q=J}else q=0;c[s>>2]=t;s=(p|0)==(n|0);if(!((p|0)!=(u+127&127|0)|s))u=(t|0)==0?p:u;if(s)break;else p=p+ -1|0}o=o+ -29|0}while((q|0)==0)}n=n+127&127;if((n|0)==(u|0)){J=u+127&127;u=k+((u+126&127)<<2)|0;c[u>>2]=c[u>>2]|c[k+(J<<2)>>2];u=J}c[k+(n<<2)>>2]=q;b=b+9|0}g:while(1){f=u+1&127;p=k+((u+127&127)<<2)|0;while(1){s=(b|0)==18;q=(b|0)>27?9:1;while(1){t=0;while(1){v=t+n&127;if((v|0)==(u|0)){t=2;break}z=c[k+(v<<2)>>2]|0;y=c[145216+(t<<2)>>2]|0;if(z>>>0<y>>>0){t=2;break}v=t+1|0;if(z>>>0>y>>>0)break;if((v|0)<2)t=v;else{t=v;break}}if((t|0)==2&s)break g;o=q+o|0;if((n|0)==(u|0))n=u;else break}s=(1<<q)+ -1|0;v=1e9>>>q;y=n;t=0;do{F=k+(n<<2)|0;G=c[F>>2]|0;J=(G>>>q)+t|0;c[F>>2]=J;t=da(G&s,v)|0;J=(n|0)==(y|0)&(J|0)==0;n=n+1&127;b=J?b+ -9|0:b;y=J?n:y}while((n|0)!=(u|0));if((t|0)==0){n=y;continue}if((f|0)!=(y|0))break;c[p>>2]=c[p>>2]|1;n=y}c[k+(u<<2)>>2]=t;n=y;u=f}b=n&127;if((b|0)==(u|0)){c[k+(f+ -1<<2)>>2]=0;u=f}I=+((c[k+(b<<2)>>2]|0)>>>0);b=n+1&127;if((b|0)==(u|0)){u=u+1&127;c[k+(u+ -1<<2)>>2]=0}r=+(j|0);K=r*(I*1.0e9+ +((c[k+(b<<2)>>2]|0)>>>0));j=o+53|0;h=j-h|0;if((h|0)<(e|0)){e=(h|0)<0?0:h;b=1}else b=0;if((e|0)<53){N=+Cb(+(+ay(1.0,105-e|0)),+K);M=+Ia(+K,+(+ay(1.0,53-e|0)));I=N;L=M;K=N+(K-M)}else{I=0.0;L=0.0}f=n+2&127;do if((f|0)!=(u|0)){k=c[k+(f<<2)>>2]|0;do if(!(k>>>0<5e8)){if(k>>>0>5e8){L=r*.75+L;break}if((n+3&127|0)==(u|0)){L=r*.5+L;break}else{L=r*.75+L;break}}else{if((k|0)==0?(n+3&127|0)==(u|0):0)break;L=r*.25+L}while(0);if((53-e|0)<=1)break;if(+Ia(+L,1.0)!=0.0)break;L=L+1.0}while(0);r=K+L-I;do if((j&2147483647|0)>(-2-m|0)){if(+S(+r)>=9007199254740992.0){b=(b|0)!=0&(e|0)==(h|0)?0:b;o=o+1|0;r=r*.5}if((o+50|0)<=(l|0)?!((b|0)!=0&L!=0.0):0)break;c[(tb()|0)>>2]=34}while(0);N=+by(r,o);i=g;return+N}else if((m|0)==3){e=c[n>>2]|0;if(e>>>0<(c[o>>2]|0)>>>0){c[n>>2]=e+1;e=d[e>>0]|0}else e=Zx(b)|0;if((e|0)==40)e=1;else{if((c[o>>2]|0)==0){N=w;i=g;return+N}c[n>>2]=(c[n>>2]|0)+ -1;N=w;i=g;return+N}while(1){h=c[n>>2]|0;if(h>>>0<(c[o>>2]|0)>>>0){c[n>>2]=h+1;h=d[h>>0]|0}else h=Zx(b)|0;if(!((h+ -48|0)>>>0<10|(h+ -65|0)>>>0<26)?!((h+ -97|0)>>>0<26|(h|0)==95):0)break;e=e+1|0}if((h|0)==41){N=w;i=g;return+N}h=(c[o>>2]|0)==0;if(!h)c[n>>2]=(c[n>>2]|0)+ -1;if(p){c[(tb()|0)>>2]=22;Yx(b,0);N=0.0;i=g;return+N}if((e|0)==0|h){N=w;i=g;return+N}do{e=e+ -1|0;c[n>>2]=(c[n>>2]|0)+ -1}while((e|0)!=0);r=w;i=g;return+r}else{if((c[o>>2]|0)!=0)c[n>>2]=(c[n>>2]|0)+ -1;c[(tb()|0)>>2]=22;Yx(b,0);N=0.0;i=g;return+N}}while(0);if((q|0)==23){e=(c[o>>2]|0)==0;if(!e)c[n>>2]=(c[n>>2]|0)+ -1;if(!(m>>>0<4|(f|0)==0|e))do{c[n>>2]=(c[n>>2]|0)+ -1;m=m+ -1|0}while(m>>>0>3)}N=+(j|0)*x;i=g;return+N}function Xx(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;g=a+4|0;h=c[g>>2]|0;f=a+100|0;if(h>>>0<(c[f>>2]|0)>>>0){c[g>>2]=h+1;j=d[h>>0]|0}else j=Zx(a)|0;if((j|0)==43|(j|0)==45){h=(j|0)==45&1;j=c[g>>2]|0;if(j>>>0<(c[f>>2]|0)>>>0){c[g>>2]=j+1;j=d[j>>0]|0}else j=Zx(a)|0;if(!((j+ -48|0)>>>0<10|(b|0)==0)?(c[f>>2]|0)!=0:0)c[g>>2]=(c[g>>2]|0)+ -1}else h=0;if((j+ -48|0)>>>0>9){if((c[f>>2]|0)==0){j=-2147483648;k=0;H=j;i=e;return k|0}c[g>>2]=(c[g>>2]|0)+ -1;j=-2147483648;k=0;H=j;i=e;return k|0}else b=0;while(1){b=j+ -48+b|0;j=c[g>>2]|0;if(j>>>0<(c[f>>2]|0)>>>0){c[g>>2]=j+1;j=d[j>>0]|0}else j=Zx(a)|0;if(!((j+ -48|0)>>>0<10&(b|0)<214748364))break;b=b*10|0}k=((b|0)<0)<<31>>31;if((j+ -48|0)>>>0<10)do{k=Iy(b|0,k|0,10,0)|0;b=H;j=xy(j|0,((j|0)<0)<<31>>31|0,-48,-1)|0;b=xy(j|0,H|0,k|0,b|0)|0;k=H;j=c[g>>2]|0;if(j>>>0<(c[f>>2]|0)>>>0){c[g>>2]=j+1;j=d[j>>0]|0}else j=Zx(a)|0}while((j+ -48|0)>>>0<10&((k|0)<21474836|(k|0)==21474836&b>>>0<2061584302));if((j+ -48|0)>>>0<10)do{j=c[g>>2]|0;if(j>>>0<(c[f>>2]|0)>>>0){c[g>>2]=j+1;j=d[j>>0]|0}else j=Zx(a)|0}while((j+ -48|0)>>>0<10);if((c[f>>2]|0)!=0)c[g>>2]=(c[g>>2]|0)+ -1;g=(h|0)!=0;h=uy(0,0,b|0,k|0)|0;j=g?H:k;k=g?h:b;H=j;i=e;return k|0}function Yx(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;c[a+104>>2]=b;f=c[a+8>>2]|0;e=c[a+4>>2]|0;g=f-e|0;c[a+108>>2]=g;if((b|0)!=0&(g|0)>(b|0)){c[a+100>>2]=e+b;i=d;return}else{c[a+100>>2]=f;i=d;return}}function Zx(b){b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;f=i;j=b+104|0;l=c[j>>2]|0;if(!((l|0)!=0?(c[b+108>>2]|0)>=(l|0):0))k=3;if((k|0)==3?(e=hy(b)|0,(e|0)>=0):0){k=c[j>>2]|0;j=c[b+8>>2]|0;if((k|0)!=0?(g=c[b+4>>2]|0,h=k-(c[b+108>>2]|0)+ -1|0,(j-g|0)>(h|0)):0)c[b+100>>2]=g+h;else c[b+100>>2]=j;g=c[b+4>>2]|0;if((j|0)!=0){l=b+108|0;c[l>>2]=j+1-g+(c[l>>2]|0)}b=g+ -1|0;if((d[b>>0]|0|0)==(e|0)){l=e;i=f;return l|0}a[b>>0]=e;l=e;i=f;return l|0}c[b+100>>2]=0;l=-1;i=f;return l|0}function _x(a,b){a=+a;b=b|0;var d=0,e=0,f=0,g=0;d=i;h[k>>3]=a;f=c[k>>2]|0;g=c[k+4>>2]|0;e=yy(f|0,g|0,52)|0;e=e&2047;if((e|0)==2047){i=d;return+a}else if((e|0)==0){if(a!=0.0){a=+_x(a*18446744073709552000.0,b);e=(c[b>>2]|0)+ -64|0}else e=0;c[b>>2]=e;i=d;return+a}else{c[b>>2]=e+ -1022;c[k>>2]=f;c[k+4>>2]=g&-2146435073|1071644672;a=+h[k>>3];i=d;return+a}return 0.0}function $x(a,b){a=+a;b=b|0;var c=0;c=i;a=+_x(a,b);i=c;return+a}function ay(a,b){a=+a;b=b|0;var d=0,e=0;d=i;if((b|0)>1023){a=a*8.98846567431158e+307;e=b+ -1023|0;if((e|0)>1023){b=b+ -2046|0;b=(b|0)>1023?1023:b;a=a*8.98846567431158e+307}else b=e}else if((b|0)<-1022){a=a*2.2250738585072014e-308;e=b+1022|0;if((e|0)<-1022){b=b+2044|0;b=(b|0)<-1022?-1022:b;a=a*2.2250738585072014e-308}else b=e}b=Ay(b+1023|0,0,52)|0;e=H;c[k>>2]=b;c[k+4>>2]=e;a=a*+h[k>>3];i=d;return+a}function by(a,b){a=+a;b=b|0;var c=0;c=i;a=+ay(a,b);i=c;return+a}function cy(a,b){a=a|0;b=b|0;var c=0;c=i;if((a|0)==0)a=0;else a=dy(a,b,0)|0;i=c;return a|0}function dy(b,d,e){b=b|0;d=d|0;e=e|0;e=i;if((b|0)==0){b=1;i=e;return b|0}if(d>>>0<128){a[b>>0]=d;b=1;i=e;return b|0}if(d>>>0<2048){a[b>>0]=d>>>6|192;a[b+1>>0]=d&63|128;b=2;i=e;return b|0}if(d>>>0<55296|(d+ -57344|0)>>>0<8192){a[b>>0]=d>>>12|224;a[b+1>>0]=d>>>6&63|128;a[b+2>>0]=d&63|128;b=3;i=e;return b|0}if((d+ -65536|0)>>>0<1048576){a[b>>0]=d>>>18|240;a[b+1>>0]=d>>>12&63|128;a[b+2>>0]=d>>>6&63|128;a[b+3>>0]=d&63|128;b=4;i=e;return b|0}else{c[(tb()|0)>>2]=84;b=-1;i=e;return b|0}return 0}function ey(a){a=a|0;var b=0;b=(da(c[a>>2]|0,1103515245)|0)+12345|0;c[a>>2]=b;a=b>>>11^b;a=a<<7&-1658038656^a;a=a<<15&-272236544^a;return(a>>>18^a)>>>1|0}function fy(b){b=b|0;var d=0,e=0,f=0;e=i;f=b+74|0;d=a[f>>0]|0;a[f>>0]=d+255|d;f=b+20|0;d=b+44|0;if((c[f>>2]|0)>>>0>(c[d>>2]|0)>>>0)Qb[c[b+36>>2]&31](b,0,0)|0;c[b+16>>2]=0;c[b+28>>2]=0;c[f>>2]=0;f=c[b>>2]|0;if((f&20|0)==0){f=c[d>>2]|0;c[b+8>>2]=f;c[b+4>>2]=f;f=0;i=e;return f|0}if((f&4|0)==0){f=-1;i=e;return f|0}c[b>>2]=f|32;f=-1;i=e;return f|0}function gy(b){b=b|0;var d=0,e=0,f=0;d=i;e=b+74|0;f=a[e>>0]|0;a[e>>0]=f+255|f;e=c[b>>2]|0;if((e&8|0)==0){c[b+8>>2]=0;c[b+4>>2]=0;f=c[b+44>>2]|0;c[b+28>>2]=f;c[b+20>>2]=f;c[b+16>>2]=f+(c[b+48>>2]|0);f=0;i=d;return f|0}else{c[b>>2]=e|32;f=-1;i=d;return f|0}return 0}function hy(a){a=a|0;var b=0,e=0;b=i;i=i+16|0;e=b;if((c[a+8>>2]|0)==0?(fy(a)|0)!=0:0)a=-1;else if((Qb[c[a+32>>2]&31](a,e,1)|0)==1)a=d[e>>0]|0;else a=-1;i=b;return a|0}function iy(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;g=e+16|0;h=c[g>>2]|0;do if((h|0)==0)if((gy(e)|0)==0){h=c[g>>2]|0;break}else{k=0;i=f;return k|0}while(0);g=e+20|0;j=c[g>>2]|0;if((h-j|0)>>>0<d>>>0){k=Qb[c[e+36>>2]&31](e,b,d)|0;i=f;return k|0}a:do if((a[e+75>>0]|0)>-1){h=d;while(1){if((h|0)==0){e=0;break a}k=h+ -1|0;if((a[b+k>>0]|0)==10)break;else h=k}if((Qb[c[e+36>>2]&31](e,b,h)|0)>>>0<h>>>0){k=h;i=f;return k|0}else{j=c[g>>2]|0;e=h;d=d-h|0;b=b+h|0;break}}else e=0;while(0);By(j|0,b|0,d|0)|0;c[g>>2]=(c[g>>2]|0)+d;k=e+d|0;i=f;return k|0}function jy(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;c[g>>2]=e;e=my(a,b,d,g)|0;i=f;return e|0}function ky(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+224|0;j=e+120|0;g=e+80|0;f=e;h=e+136|0;k=g+0|0;l=k+40|0;do{c[k>>2]=0;k=k+4|0}while((k|0)<(l|0));c[j>>2]=c[d>>2];if((ly(0,b,j,f,g)|0)<0){o=-1;i=e;return o|0}k=a+48|0;if((c[k>>2]|0)==0){o=a+44|0;d=c[o>>2]|0;c[o>>2]=h;m=a+28|0;c[m>>2]=h;l=a+20|0;c[l>>2]=h;c[k>>2]=80;n=a+16|0;c[n>>2]=h+80;f=ly(a,b,j,f,g)|0;if((d|0)!=0){Qb[c[a+36>>2]&31](a,0,0)|0;f=(c[l>>2]|0)==0?-1:f;c[o>>2]=d;c[k>>2]=0;c[n>>2]=0;c[m>>2]=0;c[l>>2]=0}}else f=ly(a,b,j,f,g)|0;o=f;i=e;return o|0}



function ly(e,f,g,j,l){e=e|0;f=f|0;g=g|0;j=j|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0.0,Za=0,_a=0,$a=0,ab=0.0,bb=0;o=i;i=i+864|0;A=o+16|0;q=o+8|0;u=o+560|0;v=u;t=o+840|0;r=o+584|0;S=o+520|0;M=o;F=o+852|0;L=(e|0)!=0;p=S+40|0;G=p;S=S+39|0;N=M+4|0;s=t+12|0;t=t+11|0;z=s;y=z-v|0;w=-2-v|0;x=z+2|0;B=A+288|0;C=u+9|0;D=C;E=u+8|0;Oa=0;La=0;ta=0;Pa=0;Ma=0;a:while(1){do if((ta|0)>-1)if((Pa|0)>(2147483647-ta|0)){c[(tb()|0)>>2]=75;ta=-1;break}else{ta=Pa+ta|0;break}while(0);Ja=a[f>>0]|0;if(Ja<<24>>24==0){Ha=344;break}else Ia=f;while(1){if(Ja<<24>>24==37){K=Ia;J=Ia;Ha=9;break}else if(Ja<<24>>24==0){ma=Ia;oa=Ia;break}$a=Ia+1|0;Ja=a[$a>>0]|0;Ia=$a}b:do if((Ha|0)==9)while(1){Ha=0;if((a[K+1>>0]|0)!=37){ma=K;oa=J;break b}oa=J+1|0;ma=K+2|0;if((a[ma>>0]|0)==37){K=ma;J=oa}else break}while(0);Pa=oa-f|0;if(L)iy(f,Pa,e)|0;if((oa|0)!=(f|0)){f=ma;continue}Ja=ma+1|0;Na=a[Ja>>0]|0;Qa=(Na<<24>>24)+ -48|0;if(Qa>>>0<10?(a[ma+2>>0]|0)==36:0){Ja=ma+3|0;Na=a[Ja>>0]|0;Ia=1}else{Qa=-1;Ia=Ma}Ka=Na<<24>>24;c:do if((Ka+ -32|0)>>>0<32){Ra=0;while(1){if((1<<Ka+ -32&75913|0)==0){Ka=Na;break c}Ra=1<<(Na<<24>>24)+ -32|Ra;Ja=Ja+1|0;Na=a[Ja>>0]|0;Ka=Na<<24>>24;if(!((Ka+ -32|0)>>>0<32)){Ka=Na;break}}}else{Ka=Na;Ra=0}while(0);do if(Ka<<24>>24==42){Ta=Ja+1|0;Ka=(a[Ta>>0]|0)+ -48|0;if(Ka>>>0<10?(a[Ja+2>>0]|0)==36:0){c[l+(Ka<<2)>>2]=10;Ia=1;Ja=Ja+3|0;Ka=c[j+((a[Ta>>0]|0)+ -48<<3)>>2]|0}else{if((Ia|0)!=0){m=-1;Ha=362;break a}if(!L){Ia=0;Ka=0;break}Ia=c[g>>2]|0;Ka=c[Ia>>2]|0;c[g>>2]=Ia+4;Ia=0;Ja=Ta}if((Ka|0)<0){Ra=Ra|8192;Ta=Ja;Ka=0-Ka|0}else Ta=Ja}else{Ka=Ka<<24>>24;if((Ka+ -48|0)>>>0<10){Ta=Ja;Ja=Ka;Ka=0;do{Ka=Ja+ -48+(Ka*10|0)|0;Ta=Ta+1|0;Ja=a[Ta>>0]|0}while((Ja+ -48|0)>>>0<10);if((Ka|0)<0){m=-1;Ha=362;break a}}else{Ta=Ja;Ka=0}}while(0);d:do if((a[Ta>>0]|0)==46){Na=Ta+1|0;Ja=a[Na>>0]|0;if(!(Ja<<24>>24==42)){Ja=Ja<<24>>24;if((Ja+ -48|0)>>>0<10){Ta=Na;Na=0}else{Ta=Na;Na=0;break}while(1){Na=Ja+ -48+(Na*10|0)|0;Ta=Ta+1|0;Ja=a[Ta>>0]|0;if(!((Ja+ -48|0)>>>0<10))break d}}Ja=Ta+2|0;Na=(a[Ja>>0]|0)+ -48|0;if(Na>>>0<10?(a[Ta+3>>0]|0)==36:0){c[l+(Na<<2)>>2]=10;Ta=Ta+4|0;Na=c[j+((a[Ja>>0]|0)+ -48<<3)>>2]|0;break}if((Ia|0)!=0){m=-1;Ha=362;break a}if(L){Ta=c[g>>2]|0;Na=c[Ta>>2]|0;c[g>>2]=Ta+4;Ta=Ja}else{Ta=Ja;Na=0}}else Na=-1;while(0);Sa=0;while(1){Ua=a[Ta>>0]|0;Va=(Ua<<24>>24)+ -65|0;if(Va>>>0>57){m=-1;Ha=362;break a}Ja=Ta+1|0;Wa=a[145256+(Sa*58|0)+Va>>0]|0;Va=Wa&255;if((Va+ -1|0)>>>0<8){Ta=Ja;Sa=Va}else break}if(Wa<<24>>24==0){m=-1;Ha=362;break}Xa=(Qa|0)>-1;e:do if(Wa<<24>>24==19)if(Xa){m=-1;Ha=362;break a}else{O=Oa;P=La;Ha=63}else{if(Xa){c[l+(Qa<<2)>>2]=Va;P=j+(Qa<<3)|0;O=c[P>>2]|0;P=c[P+4>>2]|0;Ha=63;break}if(!L){m=0;Ha=362;break a}if((Wa&255)>20){I=Ua;T=Oa;U=La}else do switch(Va|0){case 15:{Q=c[g>>2]|0;R=c[Q>>2]|0;c[g>>2]=Q+4;Q=R<<24>>24;R=(((R&255)<<24>>24|0)<0)<<31>>31;Ha=64;break e};case 18:{O=c[g>>2]|0;c[k>>2]=c[O>>2];c[k+4>>2]=c[O+4>>2];ab=+h[k>>3];c[g>>2]=O+8;h[k>>3]=ab;O=c[k>>2]|0;P=c[k+4>>2]|0;Ha=63;break e};case 17:{Q=c[g>>2]|0;c[k>>2]=c[Q>>2];c[k+4>>2]=c[Q+4>>2];ab=+h[k>>3];c[g>>2]=Q+8;h[k>>3]=ab;Q=c[k>>2]|0;R=c[k+4>>2]|0;Ha=64;break e};case 9:{R=c[g>>2]|0;Q=c[R>>2]|0;c[g>>2]=R+4;R=La;Ha=64;break e};case 12:{Ha=c[g>>2]|0;R=Ha;Q=c[R>>2]|0;R=c[R+4>>2]|0;c[g>>2]=Ha+8;Ha=64;break e};case 11:{R=c[g>>2]|0;Q=c[R>>2]|0;c[g>>2]=R+4;R=0;Ha=64;break e};case 13:{Q=c[g>>2]|0;R=c[Q>>2]|0;c[g>>2]=Q+4;Q=R<<16>>16;R=(((R&65535)<<16>>16|0)<0)<<31>>31;Ha=64;break e};case 10:{Q=c[g>>2]|0;R=c[Q>>2]|0;c[g>>2]=Q+4;Q=R;R=((R|0)<0)<<31>>31;Ha=64;break e};case 14:{R=c[g>>2]|0;Q=c[R>>2]|0;c[g>>2]=R+4;Q=Q&65535;R=0;Ha=64;break e};case 16:{R=c[g>>2]|0;Q=c[R>>2]|0;c[g>>2]=R+4;Q=Q&255;R=0;Ha=64;break e};default:{Q=Oa;R=La;Ha=64;break e}}while(0)}while(0);if((Ha|0)==63){Ha=0;if(L){Q=O;R=P;Ha=64}else{Oa=O;La=P;f=Ja;Ma=Ia;continue}}if((Ha|0)==64){Ha=0;I=a[Ta>>0]|0;T=Q;U=R}Oa=I<<24>>24;if((Sa|0)!=0)Oa=(Oa&15|0)==3?Oa&-33:Oa;Qa=Ra&-65537;La=(Ra&8192|0)==0?Ra:Qa;f:do switch(Oa|0){case 111:{za=T;Ga=(za|0)==0&(U|0)==0;if(Ga)Da=p;else{Ba=U;Da=p;do{Da=Da+ -1|0;a[Da>>0]=za&7|48;za=yy(za|0,Ba|0,3)|0;Ba=H}while(!((za|0)==0&(Ba|0)==0))}if((La&8|0)==0){za=T;Fa=U;Ca=La;Ea=Na;Ba=0;Ga=145720;Ha=94}else{za=T;Fa=U;Ca=La;Ea=Na;Ba=Ga&1^1;Ga=Ga?145720:145725;Ha=94}break};case 112:{ba=La|8;ca=Na>>>0>8?Na:8;aa=120;Ha=77;break};case 88:case 120:{ba=La;ca=Na;aa=Oa;Ha=77;break};case 67:{c[M>>2]=T;c[N>>2]=0;Y=M;W=M;X=-1;Ha=104;break};case 83:{if((Na|0)==0){ua=T;va=T;wa=0;Ha=110}else{Y=T;W=T;X=Na;Ha=104}break};case 109:{Z=Ib(c[(tb()|0)>>2]|0)|0;Ha=99;break};case 115:{Z=(T|0)==0?145736:T;Ha=99;break};case 105:case 100:{if((U|0)<0){ea=uy(0,0,T|0,U|0)|0;fa=H;ga=1;ha=145720;Ha=89;break f}if((La&2048|0)==0){ha=La&1;ea=T;fa=U;ga=ha;ha=(ha|0)==0?145720:145722;Ha=89}else{ea=T;fa=U;ga=1;ha=145721;Ha=89}break};case 117:{ea=T;fa=U;ga=0;ha=145720;Ha=89;break};case 99:{a[S>>0]=T;la=T;ia=S;ka=U;na=Qa;ra=1;qa=0;pa=145720;sa=p;break};case 110:switch(Sa|0){case 2:{Oa=T;c[Oa>>2]=ta;c[Oa+4>>2]=((ta|0)<0)<<31>>31;Oa=T;La=U;f=Ja;Ma=Ia;continue a};case 3:{b[T>>1]=ta;Oa=T;La=U;f=Ja;Ma=Ia;continue a};case 4:{a[T>>0]=ta;Oa=T;La=U;f=Ja;Ma=Ia;continue a};case 6:{c[T>>2]=ta;Oa=T;La=U;f=Ja;Ma=Ia;continue a};case 7:{Oa=T;c[Oa>>2]=ta;c[Oa+4>>2]=((ta|0)<0)<<31>>31;Oa=T;La=U;f=Ja;Ma=Ia;continue a};case 1:{c[T>>2]=ta;Oa=T;La=U;f=Ja;Ma=Ia;continue a};case 0:{c[T>>2]=ta;Oa=T;La=U;f=Ja;Ma=Ia;continue a};default:{Oa=T;La=U;f=Ja;Ma=Ia;continue a}};case 65:case 71:case 70:case 69:case 97:case 103:case 102:case 101:{c[k>>2]=T;c[k+4>>2]=U;Ya=+h[k>>3];c[q>>2]=0;if((U|0)>=0)if((La&2048|0)==0){Ma=La&1;f=Ma;Ma=(Ma|0)==0?145745:145750}else{f=1;Ma=145747}else{f=1;Ma=145744;Ya=-Ya}h[k>>3]=Ya;$a=c[k+4>>2]&2146435072;if(!($a>>>0<2146435072|($a|0)==2146435072&0<0)){Na=(Oa&32|0)!=0;if(Ya!=Ya|0.0!=0.0){f=0;Oa=Na?145784:145792}else Oa=Na?145768:145776;Pa=f+3|0;Na=(Pa|0)<(Ka|0);if((La&8192|0)==0&Na){Qa=Ka-Pa|0;vy(r|0,32,(Qa>>>0>256?256:Qa)|0)|0;if(Qa>>>0>255)do{iy(r,256,e)|0;Qa=Qa+ -256|0}while(Qa>>>0>255);iy(r,Qa,e)|0}iy(Ma,f,e)|0;iy(Oa,3,e)|0;if((La&73728|0)==8192&Na){La=Ka-Pa|0;vy(r|0,32,(La>>>0>256?256:La)|0)|0;if(La>>>0>255)do{iy(r,256,e)|0;La=La+ -256|0}while(La>>>0>255);iy(r,La,e)|0}Oa=T;La=U;f=Ja;Pa=Na?Ka:Pa;Ma=Ia;continue a}Ya=+$x(Ya,q)*2.0;Qa=Ya!=0.0;if(Qa)c[q>>2]=(c[q>>2]|0)+ -1;Sa=Oa|32;if((Sa|0)==97){Qa=Oa&32;Ma=(Qa|0)==0?Ma:Ma+9|0;f=f|2;Pa=Na>>>0>11?0:12-Na|0;do if((Pa|0)!=0){ab=8.0;do{Pa=Pa+ -1|0;ab=ab*16.0}while((Pa|0)!=0);if((a[Ma>>0]|0)==45){Ya=-(ab+(-Ya-ab));break}else{Ya=Ya+ab-ab;break}}while(0);Sa=c[q>>2]|0;Sa=(Sa|0)<0?0-Sa|0:Sa;if((Sa|0)<0){Pa=Sa;Sa=((Sa|0)<0)<<31>>31;Ra=s;while(1){$a=Ky(Pa|0,Sa|0,10,0)|0;Ra=Ra+ -1|0;a[Ra>>0]=$a|48;$a=Pa;Pa=Jy(Pa|0,Sa|0,10,0)|0;if(!(Sa>>>0>9|(Sa|0)==9&$a>>>0>4294967295))break;else Sa=H}}else{Ra=s;Pa=Sa}if((Pa|0)!=0)while(1){Ra=Ra+ -1|0;a[Ra>>0]=(Pa>>>0)%10|0|48;if(Pa>>>0<10)break;else Pa=(Pa>>>0)/10|0}if((Ra|0)==(s|0)){a[t>>0]=48;Ra=t}a[Ra+ -1>>0]=(c[q>>2]>>31&2)+43;Pa=Ra+ -2|0;a[Pa>>0]=Oa+15;Oa=(La&8|0)==0;if((Na|0)>0)if(Oa){Ra=u;while(1){$a=~~Ya;Oa=Ra+1|0;a[Ra>>0]=d[145800+$a>>0]|Qa;Ya=(Ya- +($a|0))*16.0;if((Oa-v|0)==1){a[Oa>>0]=46;Oa=Ra+2|0}if(!(Ya!=0.0))break;else Ra=Oa}}else{Ra=u;while(1){$a=~~Ya;Oa=Ra+1|0;a[Ra>>0]=d[145800+$a>>0]|Qa;Ya=(Ya- +($a|0))*16.0;if((Oa-v|0)==1){a[Oa>>0]=46;Oa=Ra+2|0}if(!(Ya!=0.0))break;else Ra=Oa}}else if(Oa){Sa=u;while(1){Ra=~~Ya;Oa=Sa+1|0;a[Sa>>0]=d[145800+Ra>>0]|Qa;Ya=(Ya- +(Ra|0))*16.0;Ra=Ya!=0.0;if((Oa-v|0)==1&Ra){a[Oa>>0]=46;Oa=Sa+2|0}if(!Ra)break;else Sa=Oa}}else{Ra=u;while(1){$a=~~Ya;Oa=Ra+1|0;a[Ra>>0]=d[145800+$a>>0]|Qa;Ya=(Ya- +($a|0))*16.0;if((Oa-v|0)==1){a[Oa>>0]=46;Oa=Ra+2|0}if(!(Ya!=0.0))break;else Ra=Oa}}do if((Na|0)==0)Ha=173;else{if((w+Oa|0)>=(Na|0)){Ha=173;break}V=x+Na-Pa|0}while(0);if((Ha|0)==173){Ha=0;V=y-Pa+Oa|0}Na=V+f|0;La=La&73728;Qa=(Na|0)<(Ka|0);if((La|0)==0&Qa){Ra=Ka-Na|0;vy(r|0,32,(Ra>>>0>256?256:Ra)|0)|0;if(Ra>>>0>255)do{iy(r,256,e)|0;Ra=Ra+ -256|0}while(Ra>>>0>255);iy(r,Ra,e)|0}iy(Ma,f,e)|0;if((La|0)==65536&Qa){Ma=Ka-Na|0;vy(r|0,48,(Ma>>>0>256?256:Ma)|0)|0;if(Ma>>>0>255)do{iy(r,256,e)|0;Ma=Ma+ -256|0}while(Ma>>>0>255);iy(r,Ma,e)|0}f=Oa-v|0;iy(u,f,e)|0;Ma=z-Pa|0;f=V-Ma-f|0;if((f|0)>0){vy(r|0,48,(f>>>0>256?256:f)|0)|0;if(f>>>0>255)do{iy(r,256,e)|0;f=f+ -256|0}while(f>>>0>255);iy(r,f,e)|0}iy(Pa,Ma,e)|0;if((La|0)==8192&Qa){La=Ka-Na|0;vy(r|0,32,(La>>>0>256?256:La)|0)|0;if(La>>>0>255)do{iy(r,256,e)|0;La=La+ -256|0}while(La>>>0>255);iy(r,La,e)|0}Oa=T;La=U;f=Ja;Pa=Qa?Ka:Na;Ma=Ia;continue a}Pa=(Na|0)<0?6:Na;if(Qa){Na=(c[q>>2]|0)+ -28|0;c[q>>2]=Na;Ya=Ya*268435456.0}else Na=c[q>>2]|0;Na=(Na|0)<0?A:B;Qa=Na;do{$a=~~Ya>>>0;c[Qa>>2]=$a;Qa=Qa+4|0;Ya=(Ya- +($a>>>0))*1.0e9}while(Ya!=0.0);Wa=c[q>>2]|0;if((Wa|0)>0){Ra=Na;do{Ta=(Wa|0)>29?29:Wa;Va=Qa+ -4|0;do if(!(Va>>>0<Ra>>>0)){Ua=0;do{_a=Ay(c[Va>>2]|0,0,Ta|0)|0;_a=xy(_a|0,H|0,Ua|0,0)|0;$a=H;Za=Ky(_a|0,$a|0,1e9,0)|0;c[Va>>2]=Za;Ua=Jy(_a|0,$a|0,1e9,0)|0;Va=Va+ -4|0}while(!(Va>>>0<Ra>>>0));if((Ua|0)==0)break;Ra=Ra+ -4|0;c[Ra>>2]=Ua}while(0);while(1){if(!(Qa>>>0>Ra>>>0))break;Ua=Qa+ -4|0;if((c[Ua>>2]|0)==0)Qa=Ua;else break}Wa=(c[q>>2]|0)-Ta|0;c[q>>2]=Wa}while((Wa|0)>0)}else Ra=Na;g:do if((Wa|0)<0){Ta=((Pa+25|0)/9|0)+1|0;if((Sa|0)==102){Va=Na;Ua=Na+(Ta<<2)|0;while(1){Wa=0-Wa|0;Wa=(Wa|0)>9?9:Wa;do if(Ra>>>0<Qa>>>0){_a=(1<<Wa)+ -1|0;$a=1e9>>>Wa;Xa=0;Za=Ra;do{bb=c[Za>>2]|0;c[Za>>2]=(bb>>>Wa)+Xa;Xa=da(bb&_a,$a)|0;Za=Za+4|0}while(Za>>>0<Qa>>>0);Ra=(c[Ra>>2]|0)==0?Ra+4|0:Ra;if((Xa|0)==0)break;c[Qa>>2]=Xa;Qa=Qa+4|0}else Ra=(c[Ra>>2]|0)==0?Ra+4|0:Ra;while(0);Qa=(Qa-Va>>2|0)>(Ta|0)?Ua:Qa;Wa=(c[q>>2]|0)+Wa|0;c[q>>2]=Wa;if((Wa|0)>=0)break g}}do{Ua=0-Wa|0;Ua=(Ua|0)>9?9:Ua;do if(Ra>>>0<Qa>>>0){Za=(1<<Ua)+ -1|0;Xa=1e9>>>Ua;Va=0;Wa=Ra;do{bb=c[Wa>>2]|0;c[Wa>>2]=(bb>>>Ua)+Va;Va=da(bb&Za,Xa)|0;Wa=Wa+4|0}while(Wa>>>0<Qa>>>0);Ra=(c[Ra>>2]|0)==0?Ra+4|0:Ra;if((Va|0)==0)break;c[Qa>>2]=Va;Qa=Qa+4|0}else Ra=(c[Ra>>2]|0)==0?Ra+4|0:Ra;while(0);if((Qa-Ra>>2|0)>(Ta|0))Qa=Ra+(Ta<<2)|0;Wa=(c[q>>2]|0)+Ua|0;c[q>>2]=Wa}while((Wa|0)<0)}while(0);Ta=Na;do if(Ra>>>0<Qa>>>0){Ua=(Ta-Ra>>2)*9|0;Va=c[Ra>>2]|0;if(Va>>>0<10)break;else Wa=10;do{Wa=Wa*10|0;Ua=Ua+1|0}while(!(Va>>>0<Wa>>>0))}else Ua=0;while(0);Va=(Sa|0)==103;Sa=Pa-((Sa|0)!=102?Ua:0)+((Va&(Pa|0)!=0)<<31>>31)|0;if((Sa|0)<(((Qa-Ta>>2)*9|0)+ -9|0)){Za=Sa+9216|0;Xa=(Za|0)/9|0;Sa=Na+(Xa+ -1023<<2)|0;Za=((Za|0)%9|0)+1|0;if((Za|0)<9){Wa=10;do{Wa=Wa*10|0;Za=Za+1|0}while((Za|0)!=9)}else Wa=10;Za=c[Sa>>2]|0;_a=(Za>>>0)%(Wa>>>0)|0;if((_a|0)==0?(Na+(Xa+ -1022<<2)|0)==(Qa|0):0){xa=Ra;ya=Sa;Aa=Ua}else Ha=233;do if((Ha|0)==233){Ha=0;Ya=(((Za>>>0)/(Wa>>>0)|0)&1|0)==0?9007199254740992.0:9007199254740994.0;xa=(Wa|0)/2|0;do if(_a>>>0<xa>>>0)ab=.5;else{if((_a|0)==(xa|0)?(Na+(Xa+ -1022<<2)|0)==(Qa|0):0){ab=1.0;break}ab=1.5}while(0);do if((f|0)!=0){if((a[Ma>>0]|0)!=45)break;Ya=Ya*-1.0;ab=ab*-1.0}while(0);xa=Za-_a|0;c[Sa>>2]=xa;if(!(Ya+ab!=Ya)){xa=Ra;ya=Sa;Aa=Ua;break}bb=xa+Wa|0;c[Sa>>2]=bb;if(bb>>>0>999999999){xa=Ra;while(1){ya=Sa+ -4|0;c[Sa>>2]=0;if(ya>>>0<xa>>>0){xa=xa+ -4|0;c[xa>>2]=0}bb=(c[ya>>2]|0)+1|0;c[ya>>2]=bb;if(bb>>>0>999999999)Sa=ya;else break}}else{xa=Ra;ya=Sa}Aa=(Ta-xa>>2)*9|0;Ra=c[xa>>2]|0;if(Ra>>>0<10)break;else Sa=10;do{Sa=Sa*10|0;Aa=Aa+1|0}while(!(Ra>>>0<Sa>>>0))}while(0);bb=ya+4|0;Ra=xa;Sa=Aa;Qa=Qa>>>0>bb>>>0?bb:Qa}else Sa=Ua;Xa=0-Sa|0;while(1){if(!(Qa>>>0>Ra>>>0)){Ua=0;break}Ua=Qa+ -4|0;if((c[Ua>>2]|0)==0)Qa=Ua;else{Ua=1;break}}do if(Va){Pa=((Pa|0)==0&1)+Pa|0;if((Pa|0)>(Sa|0)&(Sa|0)>-5){Pa=Pa+ -1-Sa|0;Oa=Oa+ -1|0}else{Pa=Pa+ -1|0;Oa=Oa+ -2|0}if((La&8|0)!=0)break;do if(Ua){Wa=c[Qa+ -4>>2]|0;if((Wa|0)==0){Za=9;break}if(((Wa>>>0)%10|0|0)==0){Va=10;Za=0}else{Za=0;break}do{Va=Va*10|0;Za=Za+1|0}while(((Wa>>>0)%(Va>>>0)|0|0)==0)}else Za=9;while(0);Ta=((Qa-Ta>>2)*9|0)+ -9|0;if((Oa|32|0)==102){bb=Ta-Za|0;bb=(bb|0)<0?0:bb;Pa=(Pa|0)<(bb|0)?Pa:bb;break}else{bb=Ta+Sa-Za|0;bb=(bb|0)<0?0:bb;Pa=(Pa|0)<(bb|0)?Pa:bb;break}}while(0);Va=(Pa|0)!=0;if(Va)Ta=1;else Ta=(La&8|0)!=0;Ta=Ta&1;Wa=(Oa|32|0)==102;if(Wa){Xa=0;Oa=(Sa|0)>0?Sa:0}else{_a=(Sa|0)<0?Xa:Sa;if((_a|0)<0){Xa=_a;_a=((_a|0)<0)<<31>>31;Za=s;while(1){bb=Ky(Xa|0,_a|0,10,0)|0;Za=Za+ -1|0;a[Za>>0]=bb|48;bb=Xa;Xa=Jy(Xa|0,_a|0,10,0)|0;if(!(_a>>>0>9|(_a|0)==9&bb>>>0>4294967295))break;else _a=H}}else{Za=s;Xa=_a}if((Xa|0)!=0)while(1){Za=Za+ -1|0;a[Za>>0]=(Xa>>>0)%10|0|48;if(Xa>>>0<10)break;else Xa=(Xa>>>0)/10|0}if((z-Za|0)<2)do{Za=Za+ -1|0;a[Za>>0]=48}while((z-Za|0)<2);a[Za+ -1>>0]=(Sa>>31&2)+43;bb=Za+ -2|0;a[bb>>0]=Oa;Xa=bb;Oa=z-bb|0}Ta=f+1+Pa+Ta+Oa|0;Oa=La&73728;Sa=(Ta|0)<(Ka|0);if((Oa|0)==0&Sa){Za=Ka-Ta|0;vy(r|0,32,(Za>>>0>256?256:Za)|0)|0;if(Za>>>0>255)do{iy(r,256,e)|0;Za=Za+ -256|0}while(Za>>>0>255);iy(r,Za,e)|0}iy(Ma,f,e)|0;if((Oa|0)==65536&Sa){Ma=Ka-Ta|0;vy(r|0,48,(Ma>>>0>256?256:Ma)|0)|0;if(Ma>>>0>255)do{iy(r,256,e)|0;Ma=Ma+ -256|0}while(Ma>>>0>255);iy(r,Ma,e)|0}do if(Wa){f=Ra>>>0>Na>>>0?Na:Ra;Ma=f;do{Ra=c[Ma>>2]|0;if((Ra|0)==0)Ua=C;else{Ua=C;while(1){Ua=Ua+ -1|0;a[Ua>>0]=(Ra>>>0)%10|0|48;if(Ra>>>0<10)break;else Ra=(Ra>>>0)/10|0}}do if((Ma|0)==(f|0)){if((Ua|0)!=(C|0))break;a[E>>0]=48;Ua=E}else{if(!(Ua>>>0>u>>>0))break;do{Ua=Ua+ -1|0;a[Ua>>0]=48}while(Ua>>>0>u>>>0)}while(0);iy(Ua,D-Ua|0,e)|0;Ma=Ma+4|0}while(!(Ma>>>0>Na>>>0));if(!Va?(La&8|0)==0:0)break;iy(145816,1,e)|0;if(Ma>>>0<Qa>>>0&(Pa|0)>0)do{Na=c[Ma>>2]|0;if((Na|0)!=0){La=C;while(1){La=La+ -1|0;a[La>>0]=(Na>>>0)%10|0|48;if(Na>>>0<10)break;else Na=(Na>>>0)/10|0}if(La>>>0>u>>>0){_=La;Ha=300}else ja=La}else{_=C;Ha=300}if((Ha|0)==300)while(1){Ha=0;ja=_+ -1|0;a[ja>>0]=48;if(ja>>>0>u>>>0)_=ja;else break}iy(ja,(Pa|0)>9?9:Pa,e)|0;Ma=Ma+4|0;Pa=Pa+ -9|0}while(Ma>>>0<Qa>>>0&(Pa|0)>0);if((Pa|0)<=0)break;vy(r|0,48,(Pa>>>0>256?256:Pa)|0)|0;if(Pa>>>0>255)do{iy(r,256,e)|0;Pa=Pa+ -256|0}while(Pa>>>0>255);iy(r,Pa,e)|0}else{Ma=Ua?Qa:Ra+4|0;do if((Pa|0)>-1){La=(La&8|0)!=0;Na=Ra;do{Qa=c[Na>>2]|0;if((Qa|0)!=0){f=C;while(1){f=f+ -1|0;a[f>>0]=(Qa>>>0)%10|0|48;if(Qa>>>0<10)break;else Qa=(Qa>>>0)/10|0}if((f|0)!=(C|0))$=f;else Ha=311}else Ha=311;if((Ha|0)==311){Ha=0;a[E>>0]=48;$=E}do if((Na|0)==(Ra|0)){f=$+1|0;iy($,1,e)|0;if(!((Pa|0)>0|La))break;iy(145816,1,e)|0}else{if($>>>0>u>>>0)f=$;else{f=$;break}do{f=f+ -1|0;a[f>>0]=48}while(f>>>0>u>>>0)}while(0);bb=D-f|0;iy(f,(bb|0)<(Pa|0)?bb:Pa,e)|0;Pa=Pa-bb|0;Na=Na+4|0}while(Na>>>0<Ma>>>0&(Pa|0)>-1);if((Pa|0)<=0)break;vy(r|0,48,(Pa>>>0>256?256:Pa)|0)|0;if(Pa>>>0>255)do{iy(r,256,e)|0;Pa=Pa+ -256|0}while(Pa>>>0>255);iy(r,Pa,e)|0}while(0);iy(Xa,z-Xa|0,e)|0}while(0);if((Oa|0)==8192&Sa){La=Ka-Ta|0;vy(r|0,32,(La>>>0>256?256:La)|0)|0;if(La>>>0>255)do{iy(r,256,e)|0;La=La+ -256|0}while(La>>>0>255);iy(r,La,e)|0}Oa=T;La=U;f=Ja;Pa=Sa?Ka:Ta;Ma=Ia;continue a};default:{la=T;ia=f;ka=U;na=La;ra=Na;qa=0;pa=145720;sa=p}}while(0);h:do if((Ha|0)==77){Ca=T;za=aa&32;if(!((Ca|0)==0&(U|0)==0)){Ba=U;Da=p;do{Da=Da+ -1|0;a[Da>>0]=d[145800+(Ca&15)>>0]|za;Ca=yy(Ca|0,Ba|0,4)|0;Ba=H}while(!((Ca|0)==0&(Ba|0)==0));if((ba&8|0)==0){za=T;Fa=U;Ca=ba;Ea=ca;Ba=0;Ga=145720;Ha=94}else{za=T;Fa=U;Ca=ba;Ea=ca;Ba=2;Ga=145720+(aa>>4)|0;Ha=94}}else{za=T;Da=p;Fa=U;Ca=ba;Ea=ca;Ba=0;Ga=145720;Ha=94}}else if((Ha|0)==89){za=ea;if(fa>>>0>0|(fa|0)==0&za>>>0>4294967295){Ba=fa;Da=p;while(1){bb=Ky(za|0,Ba|0,10,0)|0;Da=Da+ -1|0;a[Da>>0]=bb|48;bb=za;za=Jy(za|0,Ba|0,10,0)|0;if(!(Ba>>>0>9|(Ba|0)==9&bb>>>0>4294967295))break;else Ba=H}}else Da=p;if((za|0)==0){za=ea;Fa=fa;Ca=La;Ea=Na;Ba=ga;Ga=ha;Ha=94}else while(1){Da=Da+ -1|0;a[Da>>0]=(za>>>0)%10|0|48;if(za>>>0<10){za=ea;Fa=fa;Ca=La;Ea=Na;Ba=ga;Ga=ha;Ha=94;break}else za=(za>>>0)/10|0}}else if((Ha|0)==99){Ha=0;sa=ry(Z,0,Na)|0;if((sa|0)==0){la=T;ia=Z;ka=U;na=Qa;ra=Na;qa=0;pa=145720;sa=Z+Na|0;break}else{la=T;ia=Z;ka=U;na=Qa;ra=sa-Z|0;qa=0;pa=145720;break}}else if((Ha|0)==104){wa=0;va=0;ua=Y;while(1){Ha=c[ua>>2]|0;if((Ha|0)==0)break;va=cy(F,Ha)|0;if(!((va|0)>-1)){m=-1;Ha=362;break a}Ha=va+wa|0;if(va>>>0>(X-wa|0)>>>0){ua=Y;va=W;Ha=110;break h}if(Ha>>>0<X>>>0){wa=Ha;ua=ua+4|0}else{wa=Ha;break}}if((va|0)<0){m=-1;Ha=362;break a}else{ua=Y;va=W;Ha=110}}while(0);if((Ha|0)==94){Ha=0;na=(Ea|0)>-1?Ca&-65537:Ca;ia=(za|0)==0&(Fa|0)==0;if(ia&(Ea|0)==0){la=za;ia=p;ka=Fa;ra=0;qa=Ba;pa=Ga;sa=p}else{ra=(ia&1)+(G-Da)|0;la=za;ia=Da;ka=Fa;ra=(Ea|0)>(ra|0)?Ea:ra;qa=Ba;pa=Ga;sa=p}}else if((Ha|0)==110){Ha=0;La=La&73728;Ma=(wa|0)<(Ka|0);if((La|0)==0&Ma){Na=Ka-wa|0;vy(r|0,32,(Na>>>0>256?256:Na)|0)|0;if(Na>>>0>255)do{iy(r,256,e)|0;Na=Na+ -256|0}while(Na>>>0>255);iy(r,Na,e)|0}i:do if((wa|0)!=0){f=0;Na=ua;while(1){Oa=c[Na>>2]|0;if((Oa|0)==0)break i;Oa=cy(F,Oa)|0;f=Oa+f|0;if((f|0)>(wa|0))break i;iy(F,Oa,e)|0;if(!(f>>>0<wa>>>0))break;else Na=Na+4|0}}while(0);if((La|0)==8192&Ma){La=Ka-wa|0;vy(r|0,32,(La>>>0>256?256:La)|0)|0;if(La>>>0>255)do{iy(r,256,e)|0;La=La+ -256|0}while(La>>>0>255);iy(r,La,e)|0}Oa=va;La=U;f=Ja;Pa=Ma?Ka:wa;Ma=Ia;continue}Ma=sa-ia|0;f=(ra|0)<(Ma|0)?Ma:ra;La=qa+f|0;Pa=(Ka|0)<(La|0)?La:Ka;Ka=na&73728;Na=(La|0)<(Pa|0);if((Ka|0)==0&Na){Oa=Pa-La|0;vy(r|0,32,(Oa>>>0>256?256:Oa)|0)|0;if(Oa>>>0>255)do{iy(r,256,e)|0;Oa=Oa+ -256|0}while(Oa>>>0>255);iy(r,Oa,e)|0}iy(pa,qa,e)|0;if((Ka|0)==65536&Na){Oa=Pa-La|0;vy(r|0,48,(Oa>>>0>256?256:Oa)|0)|0;if(Oa>>>0>255)do{iy(r,256,e)|0;Oa=Oa+ -256|0}while(Oa>>>0>255);iy(r,Oa,e)|0}if((Ma|0)<(f|0)){f=f-Ma|0;vy(r|0,48,(f>>>0>256?256:f)|0)|0;if(f>>>0>255)do{iy(r,256,e)|0;f=f+ -256|0}while(f>>>0>255);iy(r,f,e)|0}iy(ia,Ma,e)|0;if(!((Ka|0)==8192&Na)){Oa=la;La=ka;f=Ja;Ma=Ia;continue}Ka=Pa-La|0;vy(r|0,32,(Ka>>>0>256?256:Ka)|0)|0;if(Ka>>>0>255)do{iy(r,256,e)|0;Ka=Ka+ -256|0}while(Ka>>>0>255);iy(r,Ka,e)|0;Oa=la;La=ka;f=Ja;Ma=Ia}if((Ha|0)==344){if((e|0)!=0){bb=ta;i=o;return bb|0}if((Ma|0)==0){bb=0;i=o;return bb|0}else p=1;while(1){q=c[l+(p<<2)>>2]|0;if((q|0)==0){n=p;break}r=j+(p<<3)|0;j:do if(!(q>>>0>20))do switch(q|0){case 9:{$a=c[g>>2]|0;bb=c[$a>>2]|0;c[g>>2]=$a+4;c[r>>2]=bb;break j};case 10:{bb=c[g>>2]|0;$a=c[bb>>2]|0;c[g>>2]=bb+4;bb=r;c[bb>>2]=$a;c[bb+4>>2]=(($a|0)<0)<<31>>31;break j};case 11:{bb=c[g>>2]|0;$a=c[bb>>2]|0;c[g>>2]=bb+4;bb=r;c[bb>>2]=$a;c[bb+4>>2]=0;break j};case 12:{bb=c[g>>2]|0;$a=bb;_a=c[$a>>2]|0;$a=c[$a+4>>2]|0;c[g>>2]=bb+8;bb=r;c[bb>>2]=_a;c[bb+4>>2]=$a;break j};case 13:{bb=c[g>>2]|0;$a=c[bb>>2]|0;c[g>>2]=bb+4;$a=($a&65535)<<16>>16;bb=r;c[bb>>2]=$a;c[bb+4>>2]=(($a|0)<0)<<31>>31;break j};case 14:{bb=c[g>>2]|0;$a=c[bb>>2]|0;c[g>>2]=bb+4;bb=r;c[bb>>2]=$a&65535;c[bb+4>>2]=0;break j};case 15:{bb=c[g>>2]|0;$a=c[bb>>2]|0;c[g>>2]=bb+4;$a=($a&255)<<24>>24;bb=r;c[bb>>2]=$a;c[bb+4>>2]=(($a|0)<0)<<31>>31;break j};case 16:{bb=c[g>>2]|0;$a=c[bb>>2]|0;c[g>>2]=bb+4;bb=r;c[bb>>2]=$a&255;c[bb+4>>2]=0;break j};case 17:{bb=c[g>>2]|0;c[k>>2]=c[bb>>2];c[k+4>>2]=c[bb+4>>2];ab=+h[k>>3];c[g>>2]=bb+8;h[r>>3]=ab;break j};case 18:{bb=c[g>>2]|0;c[k>>2]=c[bb>>2];c[k+4>>2]=c[bb+4>>2];ab=+h[k>>3];c[g>>2]=bb+8;h[r>>3]=ab;break j};default:break j}while(0);while(0);p=p+1|0;if((p|0)>=10){m=1;Ha=362;break}}if((Ha|0)==362){i=o;return m|0}while(1){if((c[l+(n<<2)>>2]|0)!=0){m=-1;Ha=362;break}n=n+1|0;if((n|0)>=10){m=1;Ha=362;break}}if((Ha|0)==362){i=o;return m|0}}else if((Ha|0)==362){i=o;return m|0}return 0}function my(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+128|0;j=g+112|0;h=g;k=h+0|0;m=145824|0;l=k+112|0;do{c[k>>2]=c[m>>2];k=k+4|0;m=m+4|0}while((k|0)<(l|0));if((d+ -1|0)>>>0>2147483646)if((d|0)==0){d=1;b=j}else{c[(tb()|0)>>2]=75;m=-1;i=g;return m|0}m=-2-b|0;m=d>>>0>m>>>0?m:d;c[h+48>>2]=m;j=h+20|0;c[j>>2]=b;c[h+44>>2]=b;d=b+m|0;b=h+16|0;c[b>>2]=d;c[h+28>>2]=d;h=ky(h,e,f)|0;if((m|0)==0){m=h;i=g;return m|0}m=c[j>>2]|0;a[m+(((m|0)==(c[b>>2]|0))<<31>>31)>>0]=0;m=h;i=g;return m|0}function ny(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;f=a+20|0;g=c[f>>2]|0;a=(c[a+16>>2]|0)-g|0;a=a>>>0>d>>>0?d:a;By(g|0,b|0,a|0)|0;c[f>>2]=(c[f>>2]|0)+a;i=e;return d|0}function oy(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,g=0,h=0;d=i;i=i+112|0;e=d;h=e+0|0;g=h+112|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(g|0));g=e+4|0;c[g>>2]=a;h=e+8|0;c[h>>2]=-1;c[e+44>>2]=a;c[e+76>>2]=-1;Yx(e,0);f=+Wx(e,2,1);e=(c[g>>2]|0)-(c[h>>2]|0)+(c[e+108>>2]|0)|0;if((b|0)==0){i=d;return+f}if((e|0)!=0)a=a+e|0;c[b>>2]=a;i=d;return+f}function py(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+112|0;g=e;c[g>>2]=0;f=g+4|0;c[f>>2]=a;c[g+44>>2]=a;if((a|0)<0)c[g+8>>2]=-1;else c[g+8>>2]=a+2147483647;c[g+76>>2]=-1;Yx(g,0);d=Vx(g,d,1,-1,-1)|0;h=H;if((b|0)==0){H=h;i=e;return d|0}c[b>>2]=a+((c[f>>2]|0)+(c[g+108>>2]|0)-(c[g+8>>2]|0));H=h;i=e;return d|0}function qy(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+112|0;g=e;c[g>>2]=0;f=g+4|0;c[f>>2]=a;c[g+44>>2]=a;if((a|0)<0)c[g+8>>2]=-1;else c[g+8>>2]=a+2147483647;c[g+76>>2]=-1;Yx(g,0);d=Vx(g,d,1,0,-2147483648)|0;h=H;if((b|0)==0){H=h;i=e;return d|0}c[b>>2]=a+((c[f>>2]|0)+(c[g+108>>2]|0)-(c[g+8>>2]|0));H=h;i=e;return d|0}function ry(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;g=d&255;j=(e|0)==0;a:do if((b&3|0)==0|j){h=e;e=5}else{h=d&255;while(1){if((a[b>>0]|0)==h<<24>>24){h=e;e=6;break a}b=b+1|0;j=e+ -1|0;e=(j|0)==0;if((b&3|0)==0|e){h=j;j=e;e=5;break}else e=j}}while(0);if((e|0)==5)if(j)h=0;else e=6;b:do if((e|0)==6){d=d&255;if(!((a[b>>0]|0)==d<<24>>24)){g=da(g,16843009)|0;c:do if(h>>>0>3)do{j=c[b>>2]^g;if(((j&-2139062144^-2139062144)&j+ -16843009|0)!=0)break c;b=b+4|0;h=h+ -4|0}while(h>>>0>3);while(0);if((h|0)==0)h=0;else while(1){if((a[b>>0]|0)==d<<24>>24)break b;b=b+1|0;h=h+ -1|0;if((h|0)==0){h=0;break}}}}while(0);i=f;return((h|0)!=0?b:0)|0}function sy(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;f=i;if((d|0)==0){h=0;i=f;return h|0}while(1){g=a[b>>0]|0;h=a[c>>0]|0;if(!(g<<24>>24==h<<24>>24))break;d=d+ -1|0;if((d|0)==0){b=0;e=5;break}else{b=b+1|0;c=c+1|0}}if((e|0)==5){i=f;return b|0}h=(g&255)-(h&255)|0;i=f;return h|0}function ty(){}function uy(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;b=b-d-(c>>>0>a>>>0|0)>>>0;return(H=b,a-c>>>0|0)|0}function vy(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b+e|0;if((e|0)>=20){d=d&255;i=b&3;h=d|d<<8|d<<16|d<<24;g=f&~3;if(i){i=b+4-i|0;while((b|0)<(i|0)){a[b>>0]=d;b=b+1|0}}while((b|0)<(g|0)){c[b>>2]=h;b=b+4|0}}while((b|0)<(f|0)){a[b>>0]=d;b=b+1|0}return b-e|0}function wy(b){b=b|0;var c=0;c=b;while(a[c>>0]|0)c=c+1|0;return c-b|0}function xy(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;c=a+c>>>0;return(H=b+d+(c>>>0<a>>>0|0)>>>0,c|0)|0}function yy(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){H=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}H=0;return b>>>c-32|0}function zy(b){b=b|0;var c=0;c=a[n+(b>>>24)>>0]|0;if((c|0)<8)return c|0;c=a[n+(b>>16&255)>>0]|0;if((c|0)<8)return c+8|0;c=a[n+(b>>8&255)>>0]|0;if((c|0)<8)return c+16|0;return(a[n+(b&255)>>0]|0)+24|0}function Ay(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){H=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}H=a<<c-32;return 0}function By(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((e|0)>=4096)return bb(b|0,d|0,e|0)|0;f=b|0;if((b&3)==(d&3)){while(b&3){if((e|0)==0)return f|0;a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function Cy(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if((c|0)<(b|0)&(b|0)<(c+d|0)){e=b;c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b>>0]=a[c>>0]|0}b=e}else By(b,c,d)|0;return b|0}function Dy(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){H=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}H=(b|0)<0?-1:0;return b>>c-32|0}function Ey(b){b=b|0;var c=0;c=a[m+(b&255)>>0]|0;if((c|0)<8)return c|0;c=a[m+(b>>8&255)>>0]|0;if((c|0)<8)return c+8|0;c=a[m+(b>>16&255)>>0]|0;if((c|0)<8)return c+16|0;return(a[m+(b>>>24)>>0]|0)+24|0}function Fy(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;f=a&65535;d=b&65535;c=da(d,f)|0;e=a>>>16;d=(c>>>16)+(da(d,e)|0)|0;b=b>>>16;a=da(b,f)|0;return(H=(d>>>16)+(da(b,e)|0)+(((d&65535)+a|0)>>>16)|0,d+a<<16|c&65535|0)|0}function Gy(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;j=b>>31|((b|0)<0?-1:0)<<1;i=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;f=d>>31|((d|0)<0?-1:0)<<1;e=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;h=uy(j^a,i^b,j,i)|0;g=H;b=f^j;a=e^i;a=uy((Ly(h,g,uy(f^c,e^d,f,e)|0,H,0)|0)^b,H^a,b,a)|0;return a|0}function Hy(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+8|0;j=f|0;h=b>>31|((b|0)<0?-1:0)<<1;g=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;l=e>>31|((e|0)<0?-1:0)<<1;k=((e|0)<0?-1:0)>>31|((e|0)<0?-1:0)<<1;b=uy(h^a,g^b,h,g)|0;a=H;Ly(b,a,uy(l^d,k^e,l,k)|0,H,j)|0;a=uy(c[j>>2]^h,c[j+4>>2]^g,h,g)|0;b=H;i=f;return(H=b,a)|0}function Iy(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;f=c;a=Fy(e,f)|0;c=H;return(H=(da(b,f)|0)+(da(d,e)|0)+c|c&0,a|0|0)|0}function Jy(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=Ly(a,b,c,d,0)|0;return a|0}function Ky(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;g=i;i=i+8|0;f=g|0;Ly(a,b,d,e,f)|0;i=g;return(H=c[f+4>>2]|0,c[f>>2]|0)|0}function Ly(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=a;j=b;i=j;l=d;g=e;k=g;if((i|0)==0){g=(f|0)!=0;if((k|0)==0){if(g){c[f>>2]=(h>>>0)%(l>>>0);c[f+4>>2]=0}k=0;m=(h>>>0)/(l>>>0)>>>0;return(H=k,m)|0}else{if(!g){l=0;m=0;return(H=l,m)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;l=0;m=0;return(H=l,m)|0}}m=(k|0)==0;do if((l|0)!=0){if(!m){k=(zy(k|0)|0)-(zy(i|0)|0)|0;if(k>>>0<=31){m=k+1|0;l=31-k|0;a=k-31>>31;j=m;b=h>>>(m>>>0)&a|i<<l;a=i>>>(m>>>0)&a;k=0;l=h<<l;break}if((f|0)==0){l=0;m=0;return(H=l,m)|0}c[f>>2]=a|0;c[f+4>>2]=j|b&0;l=0;m=0;return(H=l,m)|0}k=l-1|0;if((k&l|0)!=0){l=(zy(l|0)|0)+33-(zy(i|0)|0)|0;p=64-l|0;m=32-l|0;n=m>>31;o=l-32|0;a=o>>31;j=l;b=m-1>>31&i>>>(o>>>0)|(i<<m|h>>>(l>>>0))&a;a=a&i>>>(l>>>0);k=h<<p&n;l=(i<<p|h>>>(o>>>0))&n|h<<m&l-33>>31;break}if((f|0)!=0){c[f>>2]=k&h;c[f+4>>2]=0}if((l|0)==1){o=j|b&0;p=a|0|0;return(H=o,p)|0}else{p=Ey(l|0)|0;o=i>>>(p>>>0)|0;p=i<<32-p|h>>>(p>>>0)|0;return(H=o,p)|0}}else{if(m){if((f|0)!=0){c[f>>2]=(i>>>0)%(l>>>0);c[f+4>>2]=0}o=0;p=(i>>>0)/(l>>>0)>>>0;return(H=o,p)|0}if((h|0)==0){if((f|0)!=0){c[f>>2]=0;c[f+4>>2]=(i>>>0)%(k>>>0)}o=0;p=(i>>>0)/(k>>>0)>>>0;return(H=o,p)|0}l=k-1|0;if((l&k|0)==0){if((f|0)!=0){c[f>>2]=a|0;c[f+4>>2]=l&i|b&0}o=0;p=i>>>((Ey(k|0)|0)>>>0);return(H=o,p)|0}k=(zy(k|0)|0)-(zy(i|0)|0)|0;if(k>>>0<=30){a=k+1|0;l=31-k|0;j=a;b=i<<l|h>>>(a>>>0);a=i>>>(a>>>0);k=0;l=h<<l;break}if((f|0)==0){o=0;p=0;return(H=o,p)|0}c[f>>2]=a|0;c[f+4>>2]=j|b&0;o=0;p=0;return(H=o,p)|0}while(0);if((j|0)==0){g=l;e=0;i=0}else{h=d|0|0;g=g|e&0;e=xy(h,g,-1,-1)|0;d=H;i=0;do{m=l;l=k>>>31|l<<1;k=i|k<<1;m=b<<1|m>>>31|0;n=b>>>31|a<<1|0;uy(e,d,m,n)|0;p=H;o=p>>31|((p|0)<0?-1:0)<<1;i=o&1;b=uy(m,n,o&h,(((p|0)<0?-1:0)>>31|((p|0)<0?-1:0)<<1)&g)|0;a=H;j=j-1|0}while((j|0)!=0);g=l;e=0}h=0;if((f|0)!=0){c[f>>2]=b;c[f+4>>2]=a}o=(k|0)>>>31|(g|h)<<1|(h<<1|k>>>31)&0|e;p=(k<<1|0>>>31)&-2|i;return(H=o,p)|0}function My(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Qb[a&31](b|0,c|0,d|0)|0}function Ny(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;Rb[a&63](b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function Oy(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;Sb[a&3](b|0,c|0,d|0,e|0,f|0)}function Py(a,b){a=a|0;b=b|0;Tb[a&127](b|0)}function Qy(a,b,c){a=a|0;b=b|0;c=c|0;Ub[a&63](b|0,c|0)}function Ry(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;Vb[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0)}function Sy(a,b){a=a|0;b=b|0;return Wb[a&63](b|0)|0}function Ty(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=+h;Xb[a&3](b|0,c|0,d|0,e|0,f|0,g|0,+h)}function Uy(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Yb[a&3](b|0,c|0,d|0)}function Vy(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;Zb[a&7](b|0,c|0,d|0,e|0,f|0,+g)}function Wy(a){a=a|0;_b[a&3]()}function Xy(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return $b[a&15](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)|0}function Yy(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return ac[a&7](b|0,c|0,d|0,e|0)|0}function Zy(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;bc[a&7](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function _y(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;cc[a&15](b|0,c|0,d|0,e|0,f|0,g|0)}function $y(a,b,c){a=a|0;b=b|0;c=c|0;return dc[a&15](b|0,c|0)|0}function az(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return ec[a&15](b|0,c|0,d|0,e|0,f|0)|0}function bz(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;fc[a&7](b|0,c|0,d|0,e|0)}function cz(a,b,c){a=a|0;b=b|0;c=c|0;ea(0);return 0}function dz(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ea(1)}function ez(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ea(2)}function fz(a){a=a|0;ea(3)}function gz(a,b){a=a|0;b=b|0;ea(4)}function hz(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;ea(5)}function iz(a){a=a|0;ea(6);return 0}function jz(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;ea(7)}function kz(a,b,c){a=a|0;b=b|0;c=c|0;ea(8)}function lz(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;ea(9)}function mz(){ea(10)}function nz(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;ea(11);return 0}function oz(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ea(12);return 0}function pz(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;ea(13)}function qz(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ea(14)}function rz(a,b){a=a|0;b=b|0;ea(15);return 0}function sz(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ea(16);return 0}function tz(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ea(17)}




// EMSCRIPTEN_END_FUNCS
var Qb=[cz,Pn,Un,Wl,Yn,zn,En,jm,In,Dm,Em,Ko,Po,_s,dt,vu,xu,Au,cu,ju,mu,pu,ux,ny,Gw,cz,cz,cz,cz,cz,cz,cz];var Rb=[dz,So,Uo,Wo,Yo,_o,ap,cp,ep,gp,ip,kp,qp,sp,up,wp,yp,Ap,Cp,Ep,Gp,Ip,Kp,$p,bq,oq,qq,zq,Aq,Bq,Dq,Fq,Zq,_q,$q,br,dr,Rs,Xs,dz,dz,dz,dz,dz,dz,dz,dz,dz,dz,dz,dz,dz,dz,dz,dz,dz,dz,dz,dz,dz,dz,dz,dz,dz];var Sb=[ez,Gx,Fx,Cx];var Tb=[fz,Sl,Tl,Zl,_l,fm,gm,mm,nm,Jm,Im,vn,un,Ln,Kn,$n,_n,bo,ao,go,fo,io,ho,lo,ko,no,mo,ro,qo,to,so,Co,Bo,qn,Do,zo,Eo,Go,Fo,$t,Mo,Lo,Ro,Qo,pp,op,Tp,Sp,jq,iq,xq,wq,Xq,Wq,ur,tr,zr,yr,Dr,Cr,Or,Nr,Zr,Yr,is,hs,ts,ss,Fs,Es,Ns,Ms,Ts,Ss,Zs,Ys,ct,bt,Ot,Nt,tu,su,gt,Lu,qv,pv,sv,rv,Ho,_t,bu,Cu,Tu,cv,nv,ov,Ww,Vw,bx,ax,ex,dx,gx,hx,mx,lx,ox,rx,px,qx,sx,tx,Ql,vs,Ox,au,$v,ow,nw,mw,lw,kw,jw,Tm,gn,Pw,fz,fz];var Ub=[gz,Ul,$l,hm,om,yn,On,Gr,Hr,Ir,Jr,Lr,Mr,Rr,Sr,Tr,Ur,Wr,Xr,as,bs,cs,ds,fs,gs,ls,ms,ns,os,qs,rs,at,ft,xv,zv,Bv,yv,Av,Cv,gz,gz,gz,gz,gz,gz,gz,gz,gz,gz,gz,gz,gz,gz,gz,gz,gz,gz,gz,gz,gz,gz,gz,gz,gz];var Vb=[hz,Hq,fr,hz];var Wb=[iz,Vl,Tn,Vn,Wn,Sn,am,bm,im,Dn,Fn,Gn,Cn,pm,qm,fx,wo,yq,Ev,Gv,Iv,Ov,Qv,Kv,Mv,Yq,Fv,Hv,Jv,Pv,Rv,Lv,Nv,Er,Fr,Kr,Pr,Qr,Vr,_r,$r,es,js,ks,ps,Pu,Qu,Su,tv,vv,uv,wv,Gu,Hu,Ju,Zu,_u,bv,iv,jv,mv,Xw,cx,nx];var Xb=[jz,Os,Us,jz];var Yb=[kz,Cm,xo,kz];var Zb=[lz,cq,gq,rq,tq,lz,lz,lz];var _b=[mz,Mw,Ow,mz];var $b=[nz,Mu,Nu,Du,Eu,Uu,Wu,dv,fv,nz,nz,nz,nz,nz,nz,nz];var ac=[oz,zu,eu,fu,gu,ou,oz,oz];var bc=[pz,wr,Ar,us,ys,Gs,Is,pz];var cc=[qz,Qn,An,Up,Vp,aq,hq,kq,lq,pq,uq,$s,et,Jx,Ix,Hx];var dc=[rz,Xn,Xl,cm,Zn,Hn,km,rm,Jn,uu,wu,yu,hu,ku,nu,Yk];var ec=[sz,Io,No,Bu,Ou,Ru,qu,Fu,Iu,Yu,$u,hv,kv,sz,sz,sz];var fc=[tz,Rn,Bn,Jo,Oo,wx,xx,zx];return{___cxa_can_catch:Kx,_free:Ox,___cxa_is_pointer_type:Lx,_i64Add:xy,_memmove:Cy,_realloc:Qx,_i64Subtract:uy,_memset:vy,_malloc:Nx,_encode:oc,_memcpy:By,_strlen:wy,_llvm_ctlz_i32:zy,_bitshift64Lshr:yy,_calloc:Px,_bitshift64Shl:Ay,__GLOBAL__I_a:tm,runPostSets:ty,stackAlloc:gc,stackSave:hc,stackRestore:ic,setThrew:jc,setTempRet0:mc,getTempRet0:nc,dynCall_iiii:My,dynCall_viiiiiii:Ny,dynCall_viiiii:Oy,dynCall_vi:Py,dynCall_vii:Qy,dynCall_viiiiiiiii:Ry,dynCall_ii:Sy,dynCall_viiiiiid:Ty,dynCall_viii:Uy,dynCall_viiiiid:Vy,dynCall_v:Wy,dynCall_iiiiiiiii:Xy,dynCall_iiiii:Yy,dynCall_viiiiiiii:Zy,dynCall_viiiiii:_y,dynCall_iii:$y,dynCall_iiiiii:az,dynCall_viiii:bz}
// EMSCRIPTEN_END_ASM

})({Math:Math,Int8Array:Int8Array,Int16Array:Int16Array,Int32Array:Int32Array,Uint8Array:Uint8Array,Uint16Array:Uint16Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array},{abort:D,assert:x,min:Aa,invoke_iiii:function(a,b,c,d){try{return u.dynCall_iiii(a,b,c,d)}catch(f){"number"!==typeof f&&"longjmp"!==f&&e(f),W.setThrew(1,0)}},invoke_viiiiiii:function(a,b,c,d,f,g,h,i){try{u.dynCall_viiiiiii(a,b,c,d,f,g,h,i)}catch(k){"number"!==typeof k&&
"longjmp"!==k&&e(k),W.setThrew(1,0)}},invoke_viiiii:function(a,b,c,d,f,g){try{u.dynCall_viiiii(a,b,c,d,f,g)}catch(h){"number"!==typeof h&&"longjmp"!==h&&e(h),W.setThrew(1,0)}},invoke_vi:function(a,b){try{u.dynCall_vi(a,b)}catch(c){"number"!==typeof c&&"longjmp"!==c&&e(c),W.setThrew(1,0)}},invoke_vii:function(a,b,c){try{u.dynCall_vii(a,b,c)}catch(d){"number"!==typeof d&&"longjmp"!==d&&e(d),W.setThrew(1,0)}},invoke_viiiiiiiii:function(a,b,c,d,f,g,h,i,k,m){try{u.dynCall_viiiiiiiii(a,b,c,d,f,g,h,i,k,
m)}catch(v){"number"!==typeof v&&"longjmp"!==v&&e(v),W.setThrew(1,0)}},invoke_ii:function(a,b){try{return u.dynCall_ii(a,b)}catch(c){"number"!==typeof c&&"longjmp"!==c&&e(c),W.setThrew(1,0)}},invoke_viiiiiid:function(a,b,c,d,f,g,h,i){try{u.dynCall_viiiiiid(a,b,c,d,f,g,h,i)}catch(k){"number"!==typeof k&&"longjmp"!==k&&e(k),W.setThrew(1,0)}},invoke_viii:function(a,b,c,d){try{u.dynCall_viii(a,b,c,d)}catch(f){"number"!==typeof f&&"longjmp"!==f&&e(f),W.setThrew(1,0)}},invoke_viiiiid:function(a,b,c,d,f,
g,h){try{u.dynCall_viiiiid(a,b,c,d,f,g,h)}catch(i){"number"!==typeof i&&"longjmp"!==i&&e(i),W.setThrew(1,0)}},invoke_v:function(a){try{u.dynCall_v(a)}catch(b){"number"!==typeof b&&"longjmp"!==b&&e(b),W.setThrew(1,0)}},invoke_iiiiiiiii:function(a,b,c,d,f,g,h,i,k){try{return u.dynCall_iiiiiiiii(a,b,c,d,f,g,h,i,k)}catch(m){"number"!==typeof m&&"longjmp"!==m&&e(m),W.setThrew(1,0)}},invoke_iiiii:function(a,b,c,d,f){try{return u.dynCall_iiiii(a,b,c,d,f)}catch(g){"number"!==typeof g&&"longjmp"!==g&&e(g),
W.setThrew(1,0)}},invoke_viiiiiiii:function(a,b,c,d,f,g,h,i,k){try{u.dynCall_viiiiiiii(a,b,c,d,f,g,h,i,k)}catch(m){"number"!==typeof m&&"longjmp"!==m&&e(m),W.setThrew(1,0)}},invoke_viiiiii:function(a,b,c,d,f,g,h){try{u.dynCall_viiiiii(a,b,c,d,f,g,h)}catch(i){"number"!==typeof i&&"longjmp"!==i&&e(i),W.setThrew(1,0)}},invoke_iii:function(a,b,c){try{return u.dynCall_iii(a,b,c)}catch(d){"number"!==typeof d&&"longjmp"!==d&&e(d),W.setThrew(1,0)}},invoke_iiiiii:function(a,b,c,d,f,g){try{return u.dynCall_iiiiii(a,
b,c,d,f,g)}catch(h){"number"!==typeof h&&"longjmp"!==h&&e(h),W.setThrew(1,0)}},invoke_viiii:function(a,b,c,d,f){try{u.dynCall_viiii(a,b,c,d,f)}catch(g){"number"!==typeof g&&"longjmp"!==g&&e(g),W.setThrew(1,0)}},_fabs:Ob,_strftime:Gb,_pthread_cond_wait:ca(0),___cxa_rethrow:function(){mc.Pa=n;var a=tb.pop();sb=a;e(a+" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.")},_send:function(a,b,c){return!j.fb(a)?
(U(ob),-1):Jb(a,b,c)},_fread:Rb,_log2:function(a){return Math.log(a)/Math.LN2},_fmod:Wb,___cxa_guard_acquire:function(a){return!I[a>>0]?I[a>>0]=1:0},_fmodl:function(){return Wb.apply(p,arguments)},_vfprintf:function(a,b,c){return dc(a,b,J[c>>2])},_ungetc:function(a,b){b=G.T(b);if(!b)return-1;if(-1===a)return a;a=db(a&255);b.Ta.push(a);b.Ha=r;return a},___cxa_free_exception:lc,___cxa_allocate_exception:function(a){return M(a)},___cxa_find_matching_catch:vb,_ceilf:xb,___ctype_toupper_loc:$b,_fflush:aa(),
___cxa_guard_release:aa(),__addDays:Fb,_pwrite:function(a,b,c,d){a=G.ma(a);if(!a)return U(ob),-1;try{return G.write(a,I,b,c,d)}catch(f){return G.na(f),-1}},_strerror_r:zb,_strftime_l:function(a,b,c,d){return Gb(a,b,c,d)},_pthread_mutex_lock:aa(),__reallyNegative:ac,_sbrk:ic,_uselocale:function(a){var b=Vb;a&&(Vb=a);return b},_catgets:function(a,b,c,d){return d},_newlocale:function(a,b,c){(a=b)&&(a=B(a));if(!("C"===a||"POSIX"===a||!a))return U(2),0;c||(c=kc(1,4));return c},___cxa_begin_catch:function(a){rb.ta--;
tb.push(a);var b=ub(a);b&&V[b].U++;return a},_emscripten_memcpy_big:function(a,b,c){N.set(N.subarray(b,b+c),a);return a},_fileno:Kb,___resumeException:function(a){sb||(sb=a);var b=ub(a);b&&(V[b].U=0);e(a+" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.")},__ZSt18uncaught_exceptionv:rb,_sysconf:function(a){switch(a){case 30:return 4096;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 79:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;
case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;
case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1E3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"===typeof navigator?navigator.hardwareConcurrency||1:1}U(pb);return-1},
___setErrNo:U,_pthread_getspecific:function(a){return Mb[a]||0},__arraySum:Cb,___ctype_tolower_loc:ec,___cxa_end_catch:mc,_pthread_mutex_unlock:aa(),_pthread_once:Hb,_pread:function(a,b,c,d){a=G.ma(a);if(!a)return U(ob),-1;try{return G.pb(a,I,b,c,d)}catch(f){return G.na(f),-1}},___ctype_b_loc:Ub,_pthread_key_create:function(a){if(0==a)return pb;J[a>>2]=hc;Mb[hc]=0;hc++;return 0},_getc:function(){return Sb.apply(p,arguments)},_write:Jb,__isLeapYear:Bb,___errno_location:function(){return nb},_recv:function(a,
b,c){return!j.fb(a)?(U(ob),-1):Qb(a,b,c)},_pthread_setspecific:function(a,b){if(!(a in Mb))return pb;Mb[a]=b;return 0},_fgetc:Sb,_copysign:nc,_fputc:Lb,___cxa_throw:function(a,b,c){V[a]={Tb:a,Aa:a,type:b,Ea:c,U:0};sb=a;"uncaught_exception"in rb?rb.ta++:rb.ta=1;e(a+" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.")},_freelocale:function(a){Ka(a)},_pthread_cond_broadcast:ca(0),_copysignl:function(){return nc.apply(p,
arguments)},_abort:function(){u.abort()},_catclose:ca(0),_fwrite:Pb,_time:function(a){var b=Date.now()/1E3|0;a&&(J[a>>2]=b);return b},_fprintf:dc,_strerror:Ab,___cxa_atexit:function(){return lb.apply(p,arguments)},_abs:Tb,__formatString:bc,_atexit:lb,_catopen:ca(-1),_read:Qb,STACKTOP:z,STACK_MAX:Qa,tempDoublePtr:T,ABORT:pa,cttz_i8:sc,ctlz_i8:Yb,NaN:NaN,Infinity:Infinity,___dso_handle:oc,_stderr:pc,_stdin:qc,_stdout:rc},R);u.___cxa_can_catch=W.___cxa_can_catch;Ka=u._free=W._free;
u.___cxa_is_pointer_type=W.___cxa_is_pointer_type;var Nb=u._i64Add=W._i64Add,jc=u._memmove=W._memmove;u._realloc=W._realloc;var mb=u._i64Subtract=W._i64Subtract,wb=u._memset=W._memset,M=u._malloc=W._malloc;u._encode=W._encode;var gc=u._memcpy=W._memcpy,Ib=u._strlen=W._strlen,Zb=u._llvm_ctlz_i32=W._llvm_ctlz_i32,Xb=u._bitshift64Lshr=W._bitshift64Lshr,kc=u._calloc=W._calloc,fc=u._bitshift64Shl=W._bitshift64Shl,kb=u.__GLOBAL__I_a=W.__GLOBAL__I_a;u.runPostSets=W.runPostSets;u.dynCall_iiii=W.dynCall_iiii;
u.dynCall_viiiiiii=W.dynCall_viiiiiii;u.dynCall_viiiii=W.dynCall_viiiii;u.dynCall_vi=W.dynCall_vi;u.dynCall_vii=W.dynCall_vii;u.dynCall_viiiiiiiii=W.dynCall_viiiiiiiii;u.dynCall_ii=W.dynCall_ii;u.dynCall_viiiiiid=W.dynCall_viiiiiid;u.dynCall_viii=W.dynCall_viii;u.dynCall_viiiiid=W.dynCall_viiiiid;u.dynCall_v=W.dynCall_v;u.dynCall_iiiiiiiii=W.dynCall_iiiiiiiii;u.dynCall_iiiii=W.dynCall_iiiii;u.dynCall_viiiiiiii=W.dynCall_viiiiiiii;u.dynCall_viiiiii=W.dynCall_viiiiii;u.dynCall_iii=W.dynCall_iii;
u.dynCall_iiiiii=W.dynCall_iiiiii;u.dynCall_viiii=W.dynCall_viiii;A.aa=W.stackAlloc;A.ba=W.stackSave;A.ra=W.stackRestore;A.rb=W.setTempRet0;A.gb=W.getTempRet0;var cc;function X(a,b){a!=p&&("number"==typeof a?this.C(a):b==p&&"string"!=typeof a?this.r(a,256):this.r(a,b))}function tc(){return new X(p)}function uc(a,b){var c=vc[a.charCodeAt(b)];return c==p?-1:c}function wc(a){var b=tc();b.J(a);return b}function Y(a,b){this.n=a|0;this.p=b|0}Y.wa={};
Y.J=function(a){if(-128<=a&&128>a){var b=Y.wa[a];if(b)return b}b=new Y(a|0,0>a?-1:0);-128<=a&&128>a&&(Y.wa[a]=b);return b};Y.C=function(a){return isNaN(a)||!isFinite(a)?Y.ZERO:a<=-Y.ya?Y.MIN_VALUE:a+1>=Y.ya?Y.MAX_VALUE:0>a?Y.C(-a).o():new Y(a%Y.H|0,a/Y.H|0)};Y.G=function(a,b){return new Y(a,b)};
Y.r=function(a,b){0==a.length&&e(Error("number format error: empty string"));var c=b||10;(2>c||36<c)&&e(Error("radix out of range: "+c));if("-"==a.charAt(0))return Y.r(a.substring(1),c).o();0<=a.indexOf("-")&&e(Error('number format error: interior "-" character: '+a));for(var d=Y.C(Math.pow(c,8)),f=Y.ZERO,g=0;g<a.length;g+=8){var h=Math.min(8,a.length-g),i=parseInt(a.substring(g,g+h),c);8>h?(h=Y.C(Math.pow(c,h)),f=f.multiply(h).add(Y.C(i))):(f=f.multiply(d),f=f.add(Y.C(i)))}return f};Y.fa=65536;
Y.Ab=16777216;Y.H=Y.fa*Y.fa;Y.Bb=Y.H/2;Y.Cb=Y.H*Y.fa;Y.Wa=Y.H*Y.H;Y.ya=Y.Wa/2;Y.ZERO=Y.J(0);Y.ONE=Y.J(1);Y.xa=Y.J(-1);Y.MAX_VALUE=Y.G(-1,2147483647);Y.MIN_VALUE=Y.G(0,-2147483648);Y.Va=Y.J(16777216);t=Y.prototype;t.da=function(){return this.p*Y.H+this.eb()};
t.toString=function(a){a=a||10;(2>a||36<a)&&e(Error("radix out of range: "+a));if(this.M())return"0";if(this.A()){if(this.B(Y.MIN_VALUE)){var b=Y.C(a),c=this.L(b),b=c.multiply(b).V(this);return c.toString(a)+b.n.toString(a)}return"-"+this.o().toString(a)}for(var c=Y.C(Math.pow(a,6)),b=this,d="";;){var f=b.L(c),g=b.V(f.multiply(c)).n.toString(a),b=f;if(b.M())return g+d;for(;6>g.length;)g="0"+g;d=""+g+d}};t.eb=function(){return 0<=this.n?this.n:Y.H+this.n};t.M=function(){return 0==this.p&&0==this.n};
t.A=function(){return 0>this.p};t.Ma=function(){return 1==(this.n&1)};t.B=function(a){return this.p==a.p&&this.n==a.n};t.Oa=function(){return 0>this.ja(Y.Va)};t.hb=function(a){return 0<this.ja(a)};t.ib=function(a){return 0<=this.ja(a)};t.ja=function(a){if(this.B(a))return 0;var b=this.A(),c=a.A();return b&&!c?-1:!b&&c?1:this.V(a).A()?-1:1};t.o=function(){return this.B(Y.MIN_VALUE)?Y.MIN_VALUE:this.lb().add(Y.ONE)};
t.add=function(a){var b=this.p>>>16,c=this.p&65535,d=this.n>>>16,f=a.p>>>16,g=a.p&65535,h=a.n>>>16,i;i=0+((this.n&65535)+(a.n&65535));a=0+(i>>>16);a+=d+h;d=0+(a>>>16);d+=c+g;c=0+(d>>>16);c=c+(b+f)&65535;return Y.G((a&65535)<<16|i&65535,c<<16|d&65535)};t.V=function(a){return this.add(a.o())};
t.multiply=function(a){if(this.M()||a.M())return Y.ZERO;if(this.B(Y.MIN_VALUE))return a.Ma()?Y.MIN_VALUE:Y.ZERO;if(a.B(Y.MIN_VALUE))return this.Ma()?Y.MIN_VALUE:Y.ZERO;if(this.A())return a.A()?this.o().multiply(a.o()):this.o().multiply(a).o();if(a.A())return this.multiply(a.o()).o();if(this.Oa()&&a.Oa())return Y.C(this.da()*a.da());var b=this.p>>>16,c=this.p&65535,d=this.n>>>16,f=this.n&65535,g=a.p>>>16,h=a.p&65535,i=a.n>>>16,a=a.n&65535,k,m,v,q;q=0+f*a;v=0+(q>>>16);v+=d*a;m=0+(v>>>16);v=(v&65535)+
f*i;m+=v>>>16;v&=65535;m+=c*a;k=0+(m>>>16);m=(m&65535)+d*i;k+=m>>>16;m&=65535;m+=f*h;k+=m>>>16;m&=65535;k=k+(b*a+c*i+d*h+f*g)&65535;return Y.G(v<<16|q&65535,k<<16|m)};
t.L=function(a){a.M()&&e(Error("division by zero"));if(this.M())return Y.ZERO;if(this.B(Y.MIN_VALUE)){if(a.B(Y.ONE)||a.B(Y.xa))return Y.MIN_VALUE;if(a.B(Y.MIN_VALUE))return Y.ONE;var b=this.sb().L(a).shiftLeft(1);if(b.B(Y.ZERO))return a.A()?Y.ONE:Y.xa;var c=this.V(a.multiply(b));return b.add(c.L(a))}if(a.B(Y.MIN_VALUE))return Y.ZERO;if(this.A())return a.A()?this.o().L(a.o()):this.o().L(a).o();if(a.A())return this.L(a.o()).o();for(var d=Y.ZERO,c=this;c.ib(a);){for(var b=Math.max(1,Math.floor(c.da()/
a.da())),f=Math.ceil(Math.log(b)/Math.LN2),f=48>=f?1:Math.pow(2,f-48),g=Y.C(b),h=g.multiply(a);h.A()||h.hb(c);)b-=f,g=Y.C(b),h=g.multiply(a);g.M()&&(g=Y.ONE);d=d.add(g);c=c.V(h)}return d};t.lb=function(){return Y.G(~this.n,~this.p)};t.shiftLeft=function(a){a&=63;if(0==a)return this;var b=this.n;return 32>a?Y.G(b<<a,this.p<<a|b>>>32-a):Y.G(0,b<<a-32)};t.sb=function(){var a;a=1;if(0==a)return this;var b=this.p;return 32>a?Y.G(this.n>>>a|b<<32-a,b>>a):Y.G(b>>a-32,0<=b?0:-1)};t=X.prototype;
t.ha=function(a,b,c,d){for(var f=0,g=0;0<=--d;){var h=a*this[f++]+b[c]+g,g=Math.floor(h/67108864);b[c++]=h&67108863}return g};t.k=26;t.F=67108863;t.Q=67108864;t.Ua=Math.pow(2,52);t.ua=26;t.va=0;var vc=[],xc,Z;xc=48;for(Z=0;9>=Z;++Z)vc[xc++]=Z;xc=97;for(Z=10;36>Z;++Z)vc[xc++]=Z;xc=65;for(Z=10;36>Z;++Z)vc[xc++]=Z;t=X.prototype;t.copyTo=function(a){for(var b=this.e-1;0<=b;--b)a[b]=this[b];a.e=this.e;a.g=this.g};t.J=function(a){this.e=1;this.g=0>a?-1:0;0<a?this[0]=a:-1>a?this[0]=a+DV:this.e=0};
t.r=function(a,b){var c;if(16==b)c=4;else if(8==b)c=3;else if(256==b)c=8;else if(2==b)c=1;else if(32==b)c=5;else if(4==b)c=2;else{this.cb(a,b);return}this.g=this.e=0;for(var d=a.length,f=r,g=0;0<=--d;){var h=8==c?a[d]&255:uc(a,d);0>h?"-"==a.charAt(d)&&(f=n):(f=r,0==g?this[this.e++]=h:g+c>this.k?(this[this.e-1]|=(h&(1<<this.k-g)-1)<<g,this[this.e++]=h>>this.k-g):this[this.e-1]|=h<<g,g+=c,g>=this.k&&(g-=this.k))}8==c&&0!=(a[0]&128)&&(this.g=-1,0<g&&(this[this.e-1]|=(1<<this.k-g)-1<<g));this.I();f&&
X.ZERO.D(this,this)};t.I=function(){for(var a=this.g&this.F;0<this.e&&this[this.e-1]==a;)--this.e};t.ka=function(a,b){var c;for(c=this.e-1;0<=c;--c)b[c+a]=this[c];for(c=a-1;0<=c;--c)b[c]=0;b.e=this.e+a;b.g=this.g};t.$a=function(a,b){for(var c=a;c<this.e;++c)b[c-a]=this[c];b.e=Math.max(this.e-a,0);b.g=this.g};
t.Na=function(a,b){var c=a%this.k,d=this.k-c,f=(1<<d)-1,g=Math.floor(a/this.k),h=this.g<<c&this.F,i;for(i=this.e-1;0<=i;--i)b[i+g+1]=this[i]>>d|h,h=(this[i]&f)<<c;for(i=g-1;0<=i;--i)b[i]=0;b[g]=h;b.e=this.e+g+1;b.g=this.g;b.I()};t.ob=function(a,b){b.g=this.g;var c=Math.floor(a/this.k);if(c>=this.e)b.e=0;else{var d=a%this.k,f=this.k-d,g=(1<<d)-1;b[0]=this[c]>>d;for(var h=c+1;h<this.e;++h)b[h-c-1]|=(this[h]&g)<<f,b[h-c]=this[h]>>d;0<d&&(b[this.e-c-1]|=(this.g&g)<<f);b.e=this.e-c;b.I()}};
t.D=function(a,b){for(var c=0,d=0,f=Math.min(a.e,this.e);c<f;)d+=this[c]-a[c],b[c++]=d&this.F,d>>=this.k;if(a.e<this.e){for(d-=a.g;c<this.e;)d+=this[c],b[c++]=d&this.F,d>>=this.k;d+=this.g}else{for(d+=this.g;c<a.e;)d-=a[c],b[c++]=d&this.F,d>>=this.k;d-=a.g}b.g=0>d?-1:0;-1>d?b[c++]=this.Q+d:0<d&&(b[c++]=d);b.e=c;b.I()};t.kb=function(a){var b=$.Sa,c=this.abs(),d=b.abs(),f=c.e;for(a.e=f+d.e;0<=--f;)a[f]=0;for(f=0;f<d.e;++f)a[f+c.e]=c.ha(d[f],a,f,c.e);a.g=0;a.I();this.g!=b.g&&X.ZERO.D(a,a)};
t.Fa=function(a,b,c){var d=a.abs();if(!(0>=d.e)){var f=this.abs();if(f.e<d.e)b!=p&&b.J(0),c!=p&&this.copyTo(c);else{c==p&&(c=tc());var g=tc(),h=this.g,a=a.g,i=d[d.e-1],k=1,m;if(0!=(m=i>>>16))i=m,k+=16;if(0!=(m=i>>8))i=m,k+=8;if(0!=(m=i>>4))i=m,k+=4;if(0!=(m=i>>2))i=m,k+=2;0!=i>>1&&(k+=1);i=this.k-k;0<i?(d.Na(i,g),f.Na(i,c)):(d.copyTo(g),f.copyTo(c));d=g.e;f=g[d-1];if(0!=f){m=f*(1<<this.ua)+(1<d?g[d-2]>>this.va:0);k=this.Ua/m;m=(1<<this.ua)/m;var v=1<<this.va,q=c.e,y=q-d,E=b==p?tc():b;g.ka(y,E);0<=
c.Z(E)&&(c[c.e++]=1,c.D(E,c));X.ONE.ka(d,E);for(E.D(g,g);g.e<d;)g[g.e++]=0;for(;0<=--y;){var F=c[--q]==f?this.F:Math.floor(c[q]*k+(c[q-1]+v)*m);if((c[q]+=g.ha(F,c,y,d))<F){g.ka(y,E);for(c.D(E,c);c[q]<--F;)c.D(E,c)}}b!=p&&(c.$a(d,b),h!=a&&X.ZERO.D(b,b));c.e=d;c.I();0<i&&c.ob(i,c);0>h&&X.ZERO.D(c,c)}}}};
t.toString=function(a){if(0>this.g)return"-"+this.o().toString(a);if(16==a)a=4;else if(8==a)a=3;else if(2==a)a=1;else if(32==a)a=5;else if(4==a)a=2;else return this.xb(a);var b=(1<<a)-1,c,d=r,f="",g=this.e,h=this.k-g*this.k%a;if(0<g--){if(h<this.k&&0<(c=this[g]>>h))d=n,f="0123456789abcdefghijklmnopqrstuvwxyz".charAt(c);for(;0<=g;)h<a?(c=(this[g]&(1<<h)-1)<<a-h,c|=this[--g]>>(h+=this.k-a)):(c=this[g]>>(h-=a)&b,0>=h&&(h+=this.k,--g)),0<c&&(d=n),d&&(f+="0123456789abcdefghijklmnopqrstuvwxyz".charAt(c))}return d?
f:"0"};t.o=function(){var a=tc();X.ZERO.D(this,a);return a};t.abs=function(){return 0>this.g?this.o():this};t.Z=function(a){var b=this.g-a.g;if(0!=b)return b;var c=this.e,b=c-a.e;if(0!=b)return 0>this.g?-b:b;for(;0<=--c;)if(0!=(b=this[c]-a[c]))return b;return 0};X.ZERO=wc(0);X.ONE=wc(1);t=X.prototype;
t.cb=function(a,b){this.J(0);b==p&&(b=10);for(var c=this.Ba(b),d=Math.pow(b,c),f=r,g=0,h=0,i=0;i<a.length;++i){var k=uc(a,i);0>k?"-"==a.charAt(i)&&0==this.qa()&&(f=n):(h=b*h+k,++g>=c&&(this.Da(d),this.Ca(h),h=g=0))}0<g&&(this.Da(Math.pow(b,g)),this.Ca(h));f&&X.ZERO.D(this,this)};t.Ba=function(a){return Math.floor(Math.LN2*this.k/Math.log(a))};t.qa=function(){return 0>this.g?-1:0>=this.e||1==this.e&&0>=this[0]?0:1};t.Da=function(a){this[this.e]=this.ha(a-1,this,0,this.e);++this.e;this.I()};
t.Ca=function(a){var b=0;if(0!=a){for(;this.e<=b;)this[this.e++]=0;for(this[b]+=a;this[b]>=this.Q;)this[b]-=this.Q,++b>=this.e&&(this[this.e++]=0),++this[b]}};t.xb=function(a){a==p&&(a=10);if(0==this.qa()||2>a||36<a)return"0";var b=this.Ba(a),b=Math.pow(a,b),c=wc(b),d=tc(),f=tc(),g="";for(this.Fa(c,d,f);0<d.qa();)g=(b+f.La()).toString(a).substr(1)+g,d.Fa(c,d,f);return f.La().toString(a)+g};
t.La=function(){if(0>this.g){if(1==this.e)return this[0]-this.Q;if(0==this.e)return-1}else{if(1==this.e)return this[0];if(0==this.e)return 0}return(this[1]&(1<<32-this.k)-1)<<this.k|this[0]};
t.ga=function(a,b){for(var c=0,d=0,f=Math.min(a.e,this.e);c<f;)d+=this[c]+a[c],b[c++]=d&this.F,d>>=this.k;if(a.e<this.e){for(d+=a.g;c<this.e;)d+=this[c],b[c++]=d&this.F,d>>=this.k;d+=this.g}else{for(d+=this.g;c<a.e;)d+=a[c],b[c++]=d&this.F,d>>=this.k;d+=a.g}b.g=0>d?-1:0;0<d?b[c++]=d:-1>d&&(b[c++]=this.Q+d);b.e=c;b.I()};
var $={abs:function(a,b){var c=new Y(a,b),c=c.A()?c.o():c;J[T>>2]=c.n;J[T+4>>2]=c.p},Ga:function(){$.ab||($.ab=n,$.Sa=new X,$.Sa.r("4294967296",10),$.sa=new X,$.sa.r("18446744073709551616",10),$.Vb=new X,$.Wb=new X)},Sb:function(a,b){var c=new X;c.r(b.toString(),10);var d=new X;c.kb(d);c=new X;c.r(a.toString(),10);var f=new X;c.ga(d,f);return f},stringify:function(a,b,c){a=(new Y(a,b)).toString();c&&"-"==a[0]&&($.Ga(),c=new X,c.r(a,10),a=new X,$.sa.ga(c,a),a=a.toString(10));return a},r:function(a,
b,c,d,f){$.Ga();var g=new X;g.r(a,b);a=new X;a.r(c,10);c=new X;c.r(d,10);f&&0>g.Z(X.ZERO)&&(d=new X,g.ga($.sa,d),g=d);d=r;0>g.Z(a)?(g=a,d=n):0<g.Z(c)&&(g=c,d=n);g=Y.r(g.toString());J[T>>2]=g.n;J[T+4>>2]=g.p;d&&e("range error")}};cc=$;
if(S)if("function"===typeof u.locateFile?S=u.locateFile(S):u.memoryInitializerPrefixURL&&(S=u.memoryInitializerPrefixURL+S),ea||ha){var yc=u.readBinary(S);N.set(yc,Oa)}else ib(),Browser.Jb(S,function(a){N.set(a,Oa);jb()},function(){e("could not load memory initializer "+S)});function la(a){this.name="ExitStatus";this.message="Program terminated with exit("+a+")";this.status=a}la.prototype=Error();var zc,Ac=p,hb=function Bc(){!u.calledRun&&Cc&&Dc();u.calledRun||(hb=Bc)};
u.callMain=u.Kb=function(a){function b(){for(var a=0;3>a;a++)d.push(0)}x(0==fb,"cannot call main when async dependencies remain! (listen on __ATMAIN__)");x(0==Ua.length,"cannot call main when preRun functions remain to be called");a=a||[];Za||(Za=n,Ta(Va));var c=a.length+1,d=[L(bb(u.thisProgram),"i8",Ga)];b();for(var f=0;f<c-1;f+=1)d.push(L(bb(a[f]),"i8",Ga)),b();d.push(0);d=L(d,"i32",Ga);zc=z;try{var g=u._main(c,d,0);Ec(g)}catch(h){h instanceof la||("SimulateInfiniteLoop"==h?u.noExitRuntime=n:(h&&
("object"===typeof h&&h.stack)&&u.N("exception thrown: "+[h,h.stack]),e(h)))}finally{}};
function Dc(a){function b(){if(!u.calledRun&&(u.calledRun=n,!pa)){Za||(Za=n,Ta(Va));Ta(Wa);fa&&Ac!==p&&u.N("pre-main prep time: "+(Date.now()-Ac)+" ms");u._main&&Cc&&u.callMain(a);if(u.postRun)for("function"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;)ab(u.postRun.shift());Ta(Ya)}}a=a||u.arguments;Ac===p&&(Ac=Date.now());if(0<fb)u.N("run() called, but dependencies remain, so not running");else{if(u.preRun)for("function"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)$a(u.preRun.shift());
Ta(Ua);!(0<fb)&&!u.calledRun&&(u.setStatus?(u.setStatus("Running..."),setTimeout(function(){setTimeout(function(){u.setStatus("")},1);b()},1)):b())}}u.run=u.Ub=Dc;function Ec(a){u.noExitRuntime||(pa=n,z=zc,Ta(Xa),ea?(process.stdout.once("drain",function(){process.exit(a)}),console.log(" "),setTimeout(function(){process.exit(a)},500)):ha&&"function"===typeof quit&&quit(a),e(new la(a)))}u.exit=u.Lb=Ec;
function D(a){a&&(u.print(a),u.N(a));pa=n;e("abort() at "+La()+"\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.")}u.abort=u.abort=D;if(u.preInit)for("function"==typeof u.preInit&&(u.preInit=[u.preInit]);0<u.preInit.length;)u.preInit.pop()();var Cc=n;u.noInitialRun&&(Cc=r);Dc();


}).call(this,require('_process'),"/node_modules/fontkit/node_modules/brotli/build")
},{"../src/read_memory":71,"_process":25,"fs":1,"path":24}],66:[function(require,module,exports){
var brotli = require('./build/encode');
module.exports = require('./src/compress').bind(brotli);

},{"./build/encode":65,"./src/compress":69}],67:[function(require,module,exports){
var brotli = require('./build/decode');
module.exports = require('./src/decompress').bind(brotli);

},{"./build/decode":64,"./src/decompress":70}],68:[function(require,module,exports){
var brotli = require('./build/all');

exports.compress = require('./compress').bind(brotli);
exports.decompress = require('./decompress').bind(brotli);

},{"./build/all":63,"./compress":66,"./decompress":67}],69:[function(require,module,exports){
/**
 * Compresses the given buffer
 * The second parameter is optional and specifies whether the buffer is
 * text or binary data (the default is binary).
 * Returns null on error
 */
module.exports = function(buffer, isText) {
  // default to binary data
  var mode = isText ? 0 : 1;
  
  // allocate input buffer and copy data to it
  var buf = this._malloc(buffer.length);
  this.HEAPU8.set(buffer, buf);
  
  // allocate output buffer (same size + some padding to be sure it fits), and encode
  var outBuf = this._malloc(buffer.length + 1024);
  var encodedSize = this._encode(mode, buffer.length, buf, buffer.length, outBuf);
  
  var outBuffer = null;
  if (encodedSize !== -1) {
    // allocate and copy data to an output buffer
    outBuffer = new Uint8Array(encodedSize);
    outBuffer.set(this.HEAPU8.subarray(outBuf, outBuf + encodedSize));
  }
  
  // free malloc'd buffers
  this._free(buf);
  this._free(outBuf);
    
  return outBuffer;
};

},{}],70:[function(require,module,exports){
/**
 * Decompresses the given buffer
 * If outSize is given, it is used as the output buffer size,
 * otherwise the size must be guessed.
 * Returns null on error or if the output buffer wasn't big enough
 */
module.exports = function(buffer, outSize) {
  // If no output size was given, guess one
  if (!outSize)
    outSize = 4 * buffer.length;
  
  // allocate input buffer and copy data to it
  var buf = this._malloc(buffer.length);
  this.HEAPU8.set(buffer, buf);
    
  // allocate output buffer, and decode
  var outBuf = this._malloc(outSize);
  var decodedSize = this._decode(buffer.length, buf, outSize, outBuf);
  
  var outBuffer = null;
  if (decodedSize !== -1) {
    // allocate and copy data to an output buffer
    outBuffer = new Uint8Array(decodedSize);
    outBuffer.set(this.HEAPU8.subarray(outBuf, outBuf + decodedSize));
  }
  
  // free malloc'd buffers
  this._free(buf);
  this._free(outBuf);
  
  return outBuffer;
};

},{}],71:[function(require,module,exports){
(function (Buffer){

var inflate = require('pako/lib/inflate').inflate;

module.exports = function(memoryFile) {
  var src = Buffer("H4sICDiHHVUCA2RlY29kZS5qcy5tZW0A7L3pcxxHlieo6q7uLqHF7p6enp6anp6eUFaVCFQRCZAUKRauWp4lVetgC1TVdNWU0SIzPDMDiIxIhUcATEoyAw8cBA+Q4i3wvimRAMETBwmsDW3361Jm+4E02w+yWURmwmz/gP24v9/zZE1VT4/NtLXthzXblJIAMj083J+/4/eeP3+RCa3XO633P3r33Vfk1ad8JwhbMmEQeW6Lo7ItGTfaHirbUWE6+8orG+SLd3w32uBGH8rHct2f4f2neP8x3t9+5TcfvXy/8q3fer98fesf+fkrc4NNKhsUS6HS+tfWR77aUVLZSDkWBmcFOcv1S3GUbpCLeLM/xPsP6j9fdvT7eP/ef7nXd+rvlwP7zm8P7rfavPJb3/3Dtq/8I2N/eYvfr/+sz12G80p9SN+q98GfDfVr/qT+88/r1/5V/Weq3seq+s8N9b4y9Z+7633+J7z/iN9/y/S9AZ29yp/fNvfYgA9f48/vmntt+A+vvPLd/8HxvlLv+7dp8mr9Z0N9Hq/Vf/72PPjzL+t9/0395xv1e6yt/9xSv1eu/nOofs//tX7PLfX5bKnPZ0t9Plu+Y8b/m9e3v/1fBv/ba/jan7322l+89mff/evXXrNe+/5rK37zsqzvNuLD1jfffPPl+3f//e5r+Pq1dR0dHS/fv/svv+ek/1n//d7v//P+e+W/9/rW775+7zev/+qDf/gy3//+f/PFb1/5f/v1e/+d1397fv9jr9//Z76+/c98/cE/8fWHv/v6o1e+87uvP/snvr77z3xZ/8xX4z/x1fq7r3WUoG//wR/+0Xdebfjj15b9yZ/+2b/483/5F//qL//1d//NX/3bv/53f/PvrddT3/v+D95Y3tj0wx+taE63tK5ctfrNNWvfWvfjtvaOzq6f/H/++rqIv+TllzwlzIEXeeJVvBrw+mO8oNFeW4bXn+D1p3iRB/4FXn+O17/E6y/w+ld4/SVe/xovrvG/weuv8Pq3eP01Xv8Or7/B69/jxTV8Ha8UXt/D6/t4/QCvN/BajhfXrAmvH+L1I7yoeZvxSuPVghcXcSVeq/BajRcV7xq81uL1Fl7r8PoxXm14teNFxduJVxdeP8Hrlf//9V+/CE6+j/c2vA/gfQvvZ3j/3/wcOnsb3j7eo3ifxvvit14ZuIn3HH7/X/D+3771yv/0v3/rlf/5xbdeufB//OM6vqH+/uP6u+Efeb9af3+nbsv/6B/8/oe/BdVe4o3ILSon6Pc9N6c8lYsydrY3GzjKsSNbF4L+wPfK2o1U1o3KQUn5PbEGPOxVuVCp/iDsjdSOqKzsMOhTYSZwyh5+yQVhMRMEvSXPLntun/JcXxWUVyoERaVdRxWDkNc6XuDno4Iq9rmqP+f6TsnO475lnYs9rwBoG6mwqOxswQb8zYVBMQpjVbTDXjvjqbgU+AU3X8A4lWf7jq/6tQJ4BlaNsrZWmSAqlAIdxVo5RaDkAtoUFO5bsCPfLqp3Xb834wV57e5UGbTH+NCuF/27Pq4JlzdZPyoEngPEq/vdqPA++icK70cf2s37EdoW7D6VR19aKT9re17Jjgr9Cj+9WBeVH+dcr1iyw6gncP2o4GrP1VE+CDBW5fRjnv1K47uMLmLutqcDDCcI3WwB99eeraNI2ZhusZzDNb2un+93PU/h8347dDK4NueGaito1usH/TY6TJf8fBH0jzBZL7CdPGivlZfzg0gV42whp0gLvxwG2V43G/iBn1Ue1qmANXFc5byN9QljTxVAN7vH3uH6uSDrxRnP7tceXIGC7eU01xB97Qx8tbK19Qf4obNYoG3go9DOqowXY/3jsF+p3hz+LoBp8qATFhHrjbEXlA+a9PaqUlSyNTp1S2EQFN/e9t674Bd/W7kEfkSnuKZXqVLOs/Pgn15Qx8lhPhHGG2LNI/BsT1wsRaCWg/4wBnwPDgYvYvTlXtAKdIhyWBc7jgLwBvwn8JDt9YKvS32giYP+i+B1rGgUxaGfCfAGn0ASvDDQKg69Rg3Ch4FHdwisGGmQG2ursI6ek+4p5SEaxT47LOOaCLzsazCMEwaln4Ons0GpvDLdmuposbt0BEJ4WA0XNwN9SpCzdN7NgQZRVuuf5EO7jDv4b+Sj9hDrgTFGHuapbRfd2Q7uYWH9vJ6g4INHektBiLnpaPlH65sd8GVHS6arFARhhvMGDT9Kd6f7wTdFyOuq0o72d7CWoe339qPvftsHD3lkJudXrb9uL9mx1w966zhU329c/r1+242KWBvwns4HSuchE1iafAljeb252fLAPzE8UKwb++kFHxb7oT92FL2UpkxjiqtaSztAOoy9H/MNvFzgo0/X03YO36Jnu6Sz0AMh+s55QX/GzpR1yfY15OJNjHct3hAdDd6PIHdev9vrQidEOgLjhC6mn2/xIIP9yu6NsBZboHMg96CJr7GGvVjuchj7uif2ytBkvSvRXz6wvTxUgMb9lJNXrtOZ0irSa/Bdukf/5E2M2c1ZjToIsI7QE+DDKM6onYrc4GMcygFPR5DmAEsH9gqLK9eVdmShAwqgewbj2Ale7gtAZFuXQ8gseNIrYYwu6JUF/6/GvXqw9pGd1/DsNXjLg/BFvVBgPni3AwTOg2g/6/7gfSeOyu9Tv9ieKgcx6B6BRK7fY+/cmaVuKiudc3Whv78/HboafWY0fPa+lZgH/larMLENkEcH41jd2roigzUHF2BsoQ9d4mSCHemc7YYexgN6se+wJ8acVbbg5hpfL4HPVJ/rfb8xBZ4Iix6udcAPJejnFcARnKUT2v2FGEJRCqJc7DsZyFEhVDloFq9XlXWEPgrgd8g+9LryVoIZdexGuNT7sLs7RZWPNSn/dPO2FGimbBc8xyG5jgZp2327r5yHQERuSX8PuATjgG50ypB33dRufVYqlH4C3e1Brr1+GJidhbbkhy3LGiwoJ+grL93QsP4t9FOKdQGWJAJp2rPggR+2dLQUYOHeAo2gY6IQOsx64w0L1sTDesK6gKswiKILHdXrliKsP2wU7IOn8uCZEhbjTdB0WcOyhiz5GzohjcF0ZMIuBQEtYq3zsQs97WGhNG4NIbGpkYJii1vMv/G9dau8GLYW/YKU7WCqch78VoiK1BKeE8b5LR9u3uxDP/mg4U/ArB65ELTvow2AbIF+Fvg/DJVXzsAGafCKE/cq39Z21i6pfvBGPvZy21atbiuA18D3UR46Bcofti8Ooa/KKzH/5cub2pvaU11FDaXlQn7c0NHQLxkFyYEe37ZyXRuWXlMAMH9vLYiYAz/854HTOhOUNXRIGl2ktn7QvS2D8fRi7ZraP/sMxqsMujmNH/1t08ex7WBtKs0wuMSjUPolXLMMuCPatvLHbX1uFtrPKTsqE3VhYtBlnq84zqB/28q1bQ50m+qzvW0r32rzQH/wLdjR9kqQHz/osyEPOq98Zf3ngWM6yEE3FVXkih7XHYXV0I1xmAMOKMGWdERhF2yu2/Tp6434qTCuWgb8BP0StrY2tRddr9dqbu5yw8AHznEcyFY/1kkHrleKI93So1uADcrbVq1qe6d7w/vbVrW22Y5dBK1wr1VdPVCCy1dYy2Fio22rVrZZmA/sLFS9axehWzpaSl06iL1333l/M+QReCUEDd5s6yis7FoH2kIFdPwYfLqt9c22IrBW25trfwkeUK6fLfw9MBfYi2NeXN7UBL4OsSZ5BZsK1vKBe3ynbfVbv9we5LYv/3VTO3hrBdpWI+jEMnFD0O9lIAtta9b+8md2n70a92v49LOGH2xc/YO21W/+skflcpv/w9Z3oEsLfS7MHVhbA1+gj6WPY9pQyAP4B7YqAu3SGfChA34tAItAXwAj+VHb6rW/fHvbtq3Nq1pX5gJYavSx+f1N1g4onLY1b/5ywweb/t5BH+0NnzWoHS7ar/kl7JsG70TLP2tqBxaJIOrtNtDcZ591tPzK/XX6Xdif3uJ/utuP+0TgOdtxNLSFB3Hc0d7w6mdQWYGPtUzDMLS2rmkCLco9UPUaTAWJhZ4NcqBFk7WqtRU8DhkGMQD/gFMhE2E5i3WNyuAsBUzhBn4axiwLO5fHfWET02tAp62F9CboA0A9wVc+5LoXvAJLY/uwhzvAJ1nwfYMDm5v13FITlM9buA50aN308036rV93dUSQSyJg90c/aurHugFkBCUYj6AUweR7asv6v9PgE7951dptHvU5eP2jD9+1MrEHXB70tn+2rOHtzes3Qeaa7EwG+tr2G1f+eB3wWYFKoaPFBW9Bl8TE0cAJbkl92tzwemvrqiYfQP9XK3/d/qtftze8G+Qt2JVoWcOrr8Je5mFTixnop6ZPljW0kiewDr1B2/8FvQZady3TbS0tFi6EViS+zTc2fdKAphbs5nJMr+TENuyfHaV/tvWnTVjYj+Mgws8GyDg05GfLwApv4r0G77V4v4X3Orx/vKpV/luJ9yq8V+ONdqvQbhXarUK7VWi3Cu1Wo91qtFuNdqvRbjXarUa71Wi3mv3hM7i18G7xRttWXNOKa1vxXSvatKJtK65BByAG3miHf8BoeK/D+y281+K9Bu838V6N9yq8V+KNduvQbh3arUO7dWi3Du3Wod06tFuHduvQbh3avYV2b6HdW2j3Ftq9hXZvod1baPcW2r2Fdm+h3Vq0W4t2a9FuLdqtRbu1aLcW7dai3Vq0W4t2a9BuDdqtQbs1aLcG7dag3Rq0W4N2a9BuDWbcylm/uXL1j9+kj08fHpg1KD69CG8iUgRdJeCYKHCCAnB5FgrLfjoVZFwo6Ke3bVs/vd3nOrAbmogrgF4K6JHgdzuLtXXcngC+WwCc6sMW06OANoXEevng4/jpTaJaH33CRgAKQHJggzJ2D+9Hdg7sfGyXYkBMP4BIAntDh3mxS1MHJ6ccwJ+woRzDkov7Z3BPjw28wHEDyEXIcbnPHj278+wJ3vPPHn898OzO1wNf7/l6t3z24NkCPp3HX9No9QS/35e/5p89xHfz+GT668FnZ9H2Af6b+no/etj/7POv93+9C9/exe938fMs+3g29ew8/p1DT7jq2YVnV/D5g2dn0HY32p2TTx+j/zvPTuJ9DO+zX+/B51O434Nnp3D/B89mnj3BZ4/x3yVct+fZwxe7Xow+v/xi6MXg8+t4z7zY82Iv/h55PvV8Et9cx/f7Xgy/GHmx98Ug3nvwCX8ffn7j+T38vvf5VVw7LH2MvtiNa4bx2Vfo6QZ/k7aj+H0v2vLnnuf3pddBtB98MfT8S3w2ijZDz2/LFYP45j7ufh/YXUdYeBV48KYjuOXwg7E6QHX0+gk5MsSHIb/VtP707AF/wEPwLdxszoXnTFAZlujmwkQD5cHbAiKDmw6VEDrAf1oB1MYlRgw0wwUa7EgnDu5+P36hyxYaBQxgSM8dfnYJGh3YB/dVYQjHmJtOdiaII8YFACwjj96gJ25/BJ8E2gxOKNBhmJfwghbfnNxD2JyFW5qNdRZOT0inz8vQjSFEgw8iXGYzKgG/3aa/U8S9yy4tK6MFGvDbpx/K7nF7oA3YGcAh4AMY+TcAGNsxD7jYQZhVJRpoOtKwaHnXt3O4ArbUjYAlY8VoBr4AroHpVDuiANCVCBk941Nc60ey8ZaJXS8S1xdGQAF9xU4ZwujQvfYdTVcTP0G6Alxhhlw0RBNmDeYYjQF9GApwGKfwQbU+BZSrCzl3B9xrDMgPgP5CRl6ATYGzYCNtL4SDHdKj1R/HsM8gSUkV4qLtw0ozdOFKfAHWGdbeyUAis3BtslQtoDgwesGDX+SL89MPVaMY0NGMpmiHXUNFhCqD6cObj6MC3CRci9tpEDsq9DM8w0k7YL0ssVhEcsbFCP4ElUoYMZhS3gjN0EsPLmRsCQsKT9Wzy4rIIyzzHuVY3HSSKQvCRli80AKoJV+V4hLdY22XSl75Ha5vBrgqH5egHBknITehF9BU0x3XWKAQCgpLS0XYy1AL3TQCbkADHeOyki3Xonvyls+oi0+mYexIOdvIrBy4/iklAKrNBz5gNCcAYXM2+JdxpbIdgwm5WhrT9xRjFS2coMNolnYAd8vwyjw6S3bUE8N9jQqMUcCv1D4HnWGYIBswnsBgHCeoGBHR2XKW/wIcM8CiqVl7+7nMwHPKL7kqS1jvejlMVNGtpOTBzrtFuKw2ucOFE0jYg+ZgZYbsFLkH4hdnCxnSOQzKQEW6V2HxgGIwP7IFBMwiJQDWo4KsKNFVOcjlwBLZoKRITLhYEHGgB660icpBLYSMh8B+hFFINGXDF8dUAx8LKkoGLgbhbjdVxrvkOvBqqRxks3A1VS5qA27XBXBxRBrApaTgMO6m4xBwJ8dbkoGx0KRVHAXtWJ1Ipel/FSkkcPZs7+/JORo3w1SBbkHifnyK+9Lt9aEFXQYnsoUP2R9DkdCQYbZA8KMY6dMMM2oniDPwpMp+NoI00QsP+rGWKlemGMB7gVtMvxSc0IcFhewyWqk3Ui67qbkIvMs9EmmEH+UB52VVKz3wbqrNEuTTY9wFIJcaQTQ1HHgqcxME1Yz0aIbktM3gBBZPKyJX6nFfBo0FKIGE+DNiiFUzxsZvyxQw+ORYfM1YLxV3SOn283CgV3dxyfIE3S3FGPqXi+xspXCine9EAbQPYITrNDIAmmFEhBE/9pKDk+aSvT1PIr7lXD2+BqcJba2WFrhgtkMHLV8uRZup5emttm8mszIWnMrSu4N29CMJ5cK9SHVRiIH47T4GMeAJuzuVzgN4RBjum11hwMAwvi2zgxViOwhpnGxI2+Hm4UT3Q0M7NhgYBNGqixEZ5W//qPuN763+cTux7o7tZGoYAgzN7wHn99g70ja9Bg2RKTD0ZjF2TPAOferDmvp2X6qLQQBfol6MJoItQA3o+yDspu0hysQKQikwTqx77JKoBw9utwueg6SENk0O5rGqy4YPB+wFYYQUhXaquaXlFwyBasahNAPHeiuFGLOMCrR5PoMTP9EYQAThJQsCfFHDRQy/5rAyCqasP9UF+kOww5g6Fob+57TnW6gZ0r6KuCQNcJ/L1icNjEgyYq4Z1iKrgNoOeOBjEjsKJWaYCUIG/qE7MFwoW8ZFInKlcsNVdKkkns2Ynt5IwYZ0Q8NRo3OfQDOgxEAoaM2Yd5HiQqtGfepqCW87MVWz2mHrXAhpZ3hkxaefiqNSSmGsWDyGJVIBwwsdmbClK4d5hZoxOUeVooJldgAgpllqee42SPCyHTom7zNMpfs5Ko62HcqlM8XwNUwWZvQeZm6l0+mOFkBXP5/hpLkJYjFy2M5tBbB3GJahLcDsKkdbkVfbuQ+SLpI3AENsfIvlKnEHRTYKOlqisIvhH83BWzY4hAqIrq4HFbYDUsKgQYG7NJoGN8tYs6WhxDWgmi+hYW01glMZRHe2E0Mw9KkFu5OFemUnRoSRcu4wCNDeT3OCuWnV2NSesjYQHuHSeEcPw/El6ESPQZ6upnY319hMJevYAI6AV1ptIbTC7LnvskPpbTSVMBKcjCp2Zeww1ZXWYbYzomaAAutMZYkOC+C18qo3RfVFcckFX5aJw0oQekwCrCGxak3dkYZCV9w+UB7jg7olq3ULdyDauUUBhRLnchkXnTKyrxn+a+2FpNnwY5c1MKoPTKNi1Wl98ln7OokCckvlE/q/NjebspyvC7YqcHvLCinPBKmakeVU2S4EQROD5euJQLlbpSGIK7vgA8V5BpjFS++kz6I/awIFGehsL1GrMKSoub+gW3esbW3lrkFK4rgZmo7IBsGKLlQZ0ZsHAetoYXAZM4JyaubikaXSmEfDq0UKiQV//8db1v9dR0sY5FWYY1h/I2VmFQOm3OTRjCR1QDCjiLF4vYpjAQTze5usTz+1PEYGuZvjfa8VKs0CO1nct3P6SXEquPYeu+3/3K1dcHUHI/choEOZ2x7w3wh/QbBSRDuzgbqziSlsDjErox4MtRRhjnpVuQj30uOOWpphbKtE7AyZ9suMJGoinNRKkqOfgJwRrGL3tvUfbiNvWS5wrL/Cgi/PcEIDAW66zwUYkFAq9IsPuYSV4QYYoXXglyi/lJmGoBm4hbsSstWiaSktBt98Rl0+sZ0go5ZzMV2nc2UrDUI7t+us9Kp00eUmWophb0ANLM9GYq4M1KFaxZFikZt+xF8+ZRAb8gdLXKCIr1zVmrJoYqH6upY10EB0Oi5AACUeX4Dg1J0N38vlchAiQBYivBThA4w1Lmti9HmlyAJwVsk3AWf4Q1yKPdyqyJKIKU5adod0M2St2aGj1fCGF7Uz8qrb3lz3yw7u3TaHMQSNO08WDSTQeq+4CiXdaaVS7TAGsEek2kruSED92z7D6AG1YWfQ+YNVWyxqI7jmGdXhFvMW3qmuFVauR/M3K0X6vbctKG3gjl3KV/1eeRPWpDe7UwlWdj1iZQrJmq6c/XGqa2ehOeuvbMVqNq9MNbUThXdytxD2LfbK1CWawaR2UK/jdUYsPIubHjB2y2T1rR76EpR4i6uVhuQua+gnLuHeh46pbhxudWQgNL0RZQtylLK4Rwv8jKExCAL5/hg8GgdFVwfwRaBDHSV7O4yM6FJMB/TpVMCgydOLkQuNCxQQ2YyJCIzn7iQ4M4aeYRwl5NBsdFaESgVcLcJkBfbH8dPbjKpo/fSeF9jl2LFzitsPjIYAGEX0MwOMKgo0IyxaOJh7tIHNaIcX57lFVg64NWkCIKAIEQD4QjOmyvHZGNDT25pjsQHQYkeCNvTeAyBf5RMvwm9yKLAEeyp8ehGwiDPOumFPoCVsY4dEVoAWcSkoMIwqbIC7wWYAmgcw77b2uY1PaKY4VRsSqLi15kocCKok69o5QEtuH7mAeyBsCZoiyMSYJtF1aIPFPP5pE0UC5YQ70W+GThyGADbAjZ7eKwacZNDDP4Frns4W2IQ0KAP+Z+1i3AOMDDQU5mIaEtwoyMM/sN08cHEf6cIAFgAfiM+1BHmLuA94C/Yaa8eQle8HUGAAUFmMGdLDEKwGcVwGpQqwZKEOAHpBKVAVwvj0ng/NtTNgYEFiU7qPY7ZLQRkj9QmyIHD8LMhCnEPZPoKPhLFQiWR5GcNamlESn0zjP71In88VHwi+E9goK8O16Ut65A3MHX4AhgFqAF0rwmRVgiWGWWQ3uJq5EAyLAd0yigYeynuMvPHWIETRhkqmd2wI6Lvg6o/NPbRNJygbFBjU63PtHihfIOinN2lzyPIhfGLwTY8N9gY/w/2yPVpk5Sm6wUBztqwhwGqgvZjb9VhkdOWRbriCHnbIOKEwEtMYstzo7MPNMSowiRP0ATNphv20XcwE3LR12M61iW1FFmwdw2sHQO4BdaH76cRhem7WBjGe3u4JeCssma1EpqgKIAZuqGPlcQSBzknEhhFGLrdMkHSE5854FFfVhkcWEJbZ5N2ItsFTLtMvMoHHECaoBiYE+OKAnu6SdcsyDwZXwNcAM7BHDugiVxodcF+KoU9qkJvkTgo75QQzoVGyCZjxW1b8rQgCj66oWcBrZdANi+QVgS4DAkgJptKtAEJxMS1OH7oLnI1JQOFTlwDPlyQYKw6bLUpNu9zG5ZLR3wAwh+LBx4rhmx4iR2UzJKvfoK/a7gS00ugYBp+gJzZBNfCQZnCurDl8MRcZbsqEoRIYnuXudVyi4wvWg2NL3RMXYbZwlQ9Xl5qHsAYcCM+gFGdgL3EV82WApzT5vAgRDG0mCTE4piGnYRYTCmWTNZSIE7wKJVBCMRUnW5DwBNaHQcdQ5TEqN2KeC8QWnhLHCdkNvLjo09MKoRbpcUvAsEu5jFwASOejQg76DW5nyBA4CAdcBy6GrqUUYwJKomNxsQgK0DMPSV3llEywaQfcM6cEXZctiwmI6OVTRAHhjTaB3YUmgTcHLJF3xLmUQJeWICGQlIuV7hd3vaTAjIqCly9DQ8bEugwk5CDcIfOM0ENWOCnI5QCDIYYYIAOIMLFxpsgwBGOBEmTVcYnZP8BoHtwlhokcCfACnhW4Ux1L/wVwaj+YBjOVmK3+INOjspGEBbWJ9oKtoVuyhVDytooYIRieMbuC8JhPY4txYo5Q92A1zhXy9nFsM5AXUecwwKYZgOQKchaS08KNKowfbiW9bNAq4OYyPCj0A9K/S52D6UQMSoG2VNtFIngF3ayYNaScKMjnPSVhaPA1d4/Jt242C0MKLiKuKpZpyfrtKII3IpvXUU6C3AXBlsxuSnUxp0054Pdc7Ikkl8VXlYgJ1x28AN7KYjjUTnkTh9RqR5ZpKIwA5LmuGE9BiJGDmY8kJG4i3BrrhbHBOMA+Mc8jCPvImepDoRjFHAxGoSS4oB3OYiaa2QMA3LIYKYvgj0EZFeUlwkOZIgOBJ4HOcgQJZahQryiKhtHiLNxkSqvrS76dTW7ZKMG7QFZZ4rnQKo7jqc3cgaQ67GcAM29ny0WRcSx2nC8wt0sJ2FaMweddn+O2YZlc3gsGIUssDgUiewWOxMkI7Zn7YnP8geynCv+UxUVkOgTMXJb+JvQA5L3gKGrqUHgJEksMEENdREXmCpZdiUyKrCkJ3ev3Rbc4MfWDiSbK3oFm1pdyCClMYAmukOtBckG9PKPt3N/NiOwwlMdsLIiO/qnoLsZk6RkxspoVWmUkygoUG9ol8AFWz8TCoDzI54B0URmzIO+V4DlGzWYQJerbIlN+8ow4wsDHUMfQ9cxvAfhB393Z0C1FGAOD82RSejVQeY5LSWUgjGzPOTZLFAF0BB3AhVAItvAAd1KUw+CKcjYKDUFgBtAKDFbYHvMLmU+YsuDfQG+QJvDdP2HUBgPMuTsC2S5425wsYnpMYxbKgxxAfAG4hsl7NlBX4UPRhJHMiPsYlPMIOsgR/t8gkg7vI47KEhqmfssHUbdoMJuaHkhNOBpaiaM1FkE84ogrGCp+855oeLFC4G2G57vFFoia1xyBct7wM7rUzqC+VuKIWzTVvtPBsK3F/XFX9ms6UxBWYAvJ7gNW6pPsCXpDbda2grIcRtTysi+lN2z+6TvvW+9BJGiXGajPij9QEM1si0vxjtyFiifSm4tYbNUtuhTyDmlw8Hc2MtsCkB1IerfIRbqh4QNfgjrKocuS6toKHO6WJJilC5KZgFVDDx+IlgiF9sLE2pd4YrdoG0cxaMPwrVe2GlU6n86oAvMuAvIJJgLG4T6AkixAvLnrJKHdSBMWyqxcbbafnNV08D8lpHNsRluzZe4AwchJ7isc+p3M0qO2F/7pyqgytF+zxP+pnUqRWEOHeMZXW4KAAQGb2Z8SEGnYTpWdkgis6GGtU1YLfLi0eGOBZKYKJ4Qf7GA2GseHBYY2c/tEcv2cZFltMuFY+qMpu1SiNYPwpLpkc1Ezx7VXMwNYXLAsI7awNpgzRqvWw6gDJZJsBMFYz61iYTsyIcbST+MSyi6dxGWU8+mnDAtx/qku11gxyJhdpuSnuphrBH2ifPif0GsxdQhAnC9hfr2SkcFPxfyQhvhIdlNSjNzg7mSids7EFltmeytlj4GfgMlDbpTkQI6oTQIPlux4pdeLFZCNJa3Ndh/1hvO2Ce4zHhh+tG1L87qUbD1aG8QKpK1fAN1wo9ANJF4M/OYzNygE2ox6/i6WTBXyp8RagKCg4COgIMgBPJs8V5yiySiJ9YmrQxuEtsuCXrK4JaOGqa6CaAwSg5t5lG/ZQtKyn9ouZHAk+NoBT0Gkm2vY3MzMVmgoNypjMswWwfV2LNEwa6XsZgSZiPFp4jRtS6hrhfWOn2WgRDllkSALNgT2RTaO09ToypEdofJ2Mmt6iyA6Bq6V855YTE8ry81tFcyGte5V5aZ2yaUV1zov2Ey2l/UmwcCfMUn3E4gPmm9Anx0tOeFw2dlM5wQPyx6F7pBILzdurNYSPivaYDoMS1zgEG4AfDfBJ47sx2lmzbj+GglGMSgEyaIf4KcJiBrtPjsSHwDU2y5TEk7QIpu27BSvyIl1E/SlzYlQ2QFoFOkIuwUHknfZs1NOdTX8kMpuW4HLDMuDmfYQ0pSZy97Rwq3eXJlHO6Ec4M+EZdnC7dwoWlQCcZYtOyzbBcZxG9Z2qJf6YIuzoK3stzR0i3dgbWIwOEtgEsrOv5aItrOe4WuLGbxe2fnN/nKqi2cAOE4qPNlN13SbYy35CAxS/urX7ZKHkM7HcH5C4ANmunKEbdydVc4HBBcWtzVSFrRczB0ZLDJcBG6GyV4zqASYkgN2gUXbaDwxOMzQorIl3C3Wp6HhF9DKkQ22CSU7oA0XMrs6JDqJhHqpJutHVkpWvCsTUyJkH1e/JzaaFodIsiQQkDqZ21Sprj5JOxAfOJS9TFgogBV6ghFDa5FgeyweLJNv93X1Mv1ZU2+kumRrWnfK/rBsCFsF6a3VCHxDwzu+ZUmaxFb4qb1usxAR94Ae3CAWX/YGrWbhpVWic3hGItXVKiHXD0TLNYt6KpKvwBjkW+YzWq0ijpYkR2jxDpqUeH9E327I3LiUZRknQXpuFuGH/dq8o9QmW6o8M+H6dNqBGJnIoWVfY5lsfVsNr1IGu5gc9io+d7oa5NuGjF1g3lDIRcoz0xYymYdHW5I56rCEfyVjZmRx+nblxHB1YmDxydHqzK6lr44tLlys7JrE58n4k8rIkcW5W4vTA4vTXyaDt5Kx6erExerhodrEbHJ2PBmbXJy7WjlzMBm9WDn5cOnkfTRbnJ1dnL2eHN1VG/4yeTS1+HjX4vQXlfNXq2f2J4+uLj45U9t1rHpvrnL3YuXMvuqTI9WvTlf2DeD32uRedMv7LuzhkL66UD12ozLyaOnaiaWLD3jhwGBlFC0nl05OLF06VR2fTgbvLU7vrz15Ujl8pnr/0uKTBVxSe4JRPUzO3KjOLixOz6Fl7cHeyonTtetDS5eOJOPnkisHK/duJEMHePe5M5VjD2snx5KhwWRipnLoRu3g4WR6d3JmtvJwBHSo3pzFvJKxI8n0nsW5gcWZkeTqk2Rsf/XY+cr9uWR8vrpvmN9OHU+u7a6cO1PZt7+Ca0/cWTo5VzkzgF8qJ2aSx2PJgZOLs7cqY4cX58c57NlDlfH7yZUvagunQTQQpDp3vnr+6tKuo5Xp6crIWDKzkBwZTQYfLs6dQP+1izeSiX3J4I3qLVmOx18kR07VFsZrFw9Ud88kw3PVfSOVs3uqxx4ktw8vTp+oHj9Qm5ivTVxMBg/W7s9Ujp+u7b6bjF5IBq9y2KM30C1WNjk+hJVKDn6RTFyqHroDoi1Oj1YePMJcFp8cTx7drc6NVXHtjYHa5LXq3FD1ynxyYLZ6ei55crxy5hbWbunMQO3arsW5R5ULjyvHJisHdoFtlk4PLh2drxy6it+TiYfJ3CwGUwEDjO1fOjVYm5yr3DuezO9ffHKw+mQCt6g8OLQ0sK+y/yaoUbnwKHlyNNl3MBkZqk7NVQ59jjkm4xcWp8FXVyqnjoKqyeFDS+fvLc5gpgdre54sDYCMw2gGTqtePwImAWfic9w0uTKcHB4B8yRXrmMkGD9IV71wrHrz4eL0UbQHSZf23Fi6OFMdn8Ddl4YP1BZOVU5NJo8Hkuv7K3sGk6EHoGpt7xHwJPnq6K7qvgPJ9EQyehOfJAdOkLtmD7P/29fw/+LMheTMneTsQOXBWO36SGX0OBqA86s39oNQlandlYFD4CLISzJwOhk9j3GCS/EVBoBZo3FtYjI5fwhMCM4BobimT6Yq+8dru04ll+9UTh1anJvj6uy6msw+qhy/Uzk4UZ0/RGmdelJ7cm1xbn917uDikyHMghR7sAu8CpGElEFaOZfJs5VT89Urs2Sk2fHk4HEsBMQWHAWaV84d5vjH5ysnB8GKGHky+AjzQifg0mTkJKQG65hMnwCnJZND1Qu7IFbk20PXk5GHvPbAbHJ+FuwB2mJUaA+mWho+yDmCe2cPJCfOVG5dAveCG9EViEwpmB2vDeypTR4Ht5MVz8/UJm5jwGTIYwvJ7JnKCJZ7tnpoMrm0Z+na6cr0ZHL4AMl4YwqcgKuWBqBqBpKJL7h2Y0e46Ed3VS4MJ8NDcrtDteuXk6F7GCEIKzptP/pPxkZr9y+DpJWRE9AwEATonMW5y5C46vVJECS5CmmdBZ0502MDybGJZBjDuFO9NgcNk8weg84BWdAe3IghVR+fqM1DsZyH9EHv1SYvkUux9Gcgv/eoHM7tTeZHIPuVz29Xjs1X5/ZW54Yxx+rtE9Xx+5AasEQyOl45exV8VTm9e+nEUSrPkTvVPbeXTt5AJ0vHJsC9oPPS2XPJ9HRt/1Rt8nb19Hwyey2ZPlA5M05+uHqvMnmsNr+nyjEM1a7vJWUoiRNk+JM3KnvBn7uqd+eTJzcrJ6HGqZ2WvjpFbXMDimtm6ewlrOPS8JHkyl7ofKiXpdOHwYrQeEtHH0LcKCmY1MjQ4uxX1X03KRpzY7XDVyuPoGEucIQTD7Gy1esHwXKihx9hUhS60Yu0JkdGaxN3oElofeb21+7fWBoeqx57RFZ8MpUcPZg8Pk4TMHoVLTFmrsXCV0sD55PPb4CqXPo7X0CTYyLVY/dqk+TSyoWLWJHa5NXk0FAydjcZ+xJSUFs4BrVfu397ceZOcvhg9fodUSZD4CgK4OR9yhTU8uyx5PZN0Z9HaV9u7E9mx8AntZFblTN7kqMX2RsX8WEysWdx4Wxl9EptADrn2OLcaHLlZvXLk8nYZajWysCu6uhD/rtvJhn5qjZxBbdLFgaXLs5B58MiJHfGeNORI8kAuZTffvk57G9yYLCy/9bS7svQD7gvNSH059Ag1dFhTG2Gkg75vT6EmS6dvgTBpN1cGMZQq8emYFPIqNCcw7NC54P4qnL7MrQ6Jlg5db5yfHBxdj/4h/b3wjDmSP0/erE2fxSSiDuC/bDi1YsDsBdUZbNDFJm52ept8PNRWDcaoMN7oG/JVDAuI58nkzO4b20f5H2SFnnoAOUXuuLM+eoXe3ntV/urt/dVZ69DmSfnoJrGlr48kEyco4yPPMT0MVRABYynente5H1/cuh8MjJeOXmBZgIWEJBgYD9xBaR7ZLhyYDg5eJJScPL20vhQMn5JbKIIF8z6+IXK7SvVwevg0sqjqeTMPcyRLAd7+uic8Pl5MDnGAztSW8C8HsNAUNipD49CcsWO0NbQrEzuhWmrXd+XzJ+kpBw8RHM2ezuZOADmqew9z68m9tUuD6IBJHRp9wRtBNTg7LWly+eJgk4/qe59WHtyiyhl9Cp7m7hDJAPdfhH3PQDB56rdOUI1chQa7Ezt6gIkEYu4NPh5MnsSl8PeLc6dqtyahwaAuafWwipPHKCCJTI5AUsHS7p0aSiZfEyUhfkemAOHQG/w/7mxZHCaVB2/kMzcS8YgBXshlcmlc5DTytnDQEdky0vnFmf24161XbSkleMjWHHy9sx9ADMYO3IsGBJiO7kPeANma3FhonJsJhnbvTh9qLLvaHLwDiQU2pha7tKd2vXdBCe3TxGM3Z2vXj1XO/RICHUTk63OXa/O3V58cgE4hPofNvHGRSAlqDLiDejAK+eXxgdrpw9VjsKcnVm6fAgYg/L44BGsPPnzyVGgmur524SsZy+C8pW7c9UTJ2sLh4lwZq9jFjD30HggS20ECHYEnEn8OX4eCIFidXxsCQiKvL0XtyB6vLOHSvveMBEjEOzojdr98zAQyRDkFF0tAHyCeysnnhDejJ2sTdwAcSizQMhjB5eujRBlPZ6l+h24XjuwJ4HIAyHvP734+MjSybugJ5iQVubMwdr1ASr2sd24BMICJUkZxPounK1NAkfNL85cg4BzIR7sh2WsXidyg4CTODBkE1/Udl+sXqXdqZy4DSQGdEEbBAqPnoPsYDWBXZeGhzmvw1dhvIhGsHbjExS3kSlY3sqRvUQXZ/bR/l4Zrl1+QlQDRXpmFqSD1UtunwR7Y6GhP6nkhyCwR4iazl6iRAA9Uh+eg2Jhb3fug8HAvSJNo8AwtTuX8H/l9ASkiVplGmwzuvj4ArXByFeV2wcq43cr+6+KHRknbB48SAka+5IW8+RDGuJ7w7Ubo7X5ecgXJIUrOHGJMHJgF3oD8Ma94DLQK7l/H9q7+vAucCmRPyzU8JcQHwg77gUrA6gDdl06e5PrNUsLSz0Mvn0MA3QZ9j0ZubB0+gqJPzJdG90NQgG3YEUqty5Wjk/DZCd3jtCSjnwOnAbLWNkno4I8Hj5EBDh4Q+77ALpl8ck9GJ3q7WMwDUQaC2eXvjgDpYcbVS4PgMewFlg72AJMs3L3cy40dPX0dPXYF7XhexzP4SFiQiA92EpAmiuAxA9x09q5g8nMdPXaGDE/UNaTSzRkw0PAutQngKzwcUbuVAbOVvaACQ/RjhwcgxTAEmFqxM9Xn0A66MIc2AdVSVaEBpuBu3SGDPb4K/AMlpvOyz5oj71gRSx35ewCeBUgDSoLgkZ36dRRzI6QbxSSMk4VDZ/i4DAITjM9e43rte8mZer4fQBRDG9p4AI1J3ns5NL5m9AntfvT7AcTxFKOTy+dPENtDOvwZIqWDl4V9DnwzMQMKQxyjYqXdPYi9CFdRaDHCS4NGF5AzsNkahCCA81ZWzgHIYUBSg7CT5zHhXQNHl1Prl6FiqAXA6sHB/bsVePSgofBe+QZGFMYHWj70XMkPoT62ggsGhYI8rV07DQWmlM4PAK8B5WeDDwGg3Gy40eqZy/DLkM10Qub/RLmaekUzRk16r6Fyv5BqNml4wsicbNEEfCYYIXhm8zdh5RBOVdm5pNH15Kxe5DuxbknYCFYCogYvCpYf+g6OmXgjWPnkyNwry5DmgBf6YODfx6DK2Zq++6C5TAvrDtdRUgTNAYc/L3gn4NU9YPXuXywpFCMC4fJNlBKCydr9y4Tsz0EIB9OzpwnVH5wujJ1Hp4dDdChG4S+cPow/rO3aU/3Xad3BrYcuABtQ9CCNjML4kvOVsbGagt3krFT8JIo8nPnKe/7RBZO36xNzhNiHaDGJm6EB4ebHpqjDdp3EF45vYOZ++CiytndGBt4YHH6CbiX5vs0rNtQ5cyXnCP0LZ0U+LmXoWGIhfaNJGdP1ma/wipgvsnsEIYN3E7GE3mhP37mfG1KPt8DX+AM4e7uierEFKAF/fSp3TCCydgJ6FJaQziq49OgPESbqHhkaOnz8/Br8Gf14gRxNXT1/H56RmcH4DVUzsFTOF2bBCKaIAqaOFu7fxYalaDl8iHMvXJIvHV4WJOfJxMXICNQO4RbN4/XvjpRPTGPr+CYUDNgJFC8X52mJd27UP3qamVyTFTK7eSKkeghfELrc+Vm5f5ViBWR5Nid6q7L4ChgVEyZ8ZPpL2GPkolTDEfAZQDyH5+mmR45VT1+ldAXV83DrRuhczS/QCA9fhscSD90ZCGZ2l+5MEZ1BCcR1AbbDN+vfrmLHLXrqADRWxJOOQqhqFy8TI4dvQdlkoxdS66coPwO7gGepwtAwHAKmC0ZHxfrfLH2JVD6oaUvDlev7wKtSK7re2E6Kw9HavdnksEpSFmycArAiUEqOKHT17juhw9istXTjxkbeTwAT4pmlJb9pFgKcho0BnwKeo7iweF39AZvRVzU87DRBPxEm4xBEaUACZw9D1OFtYYUUI8NMkYB4tAYPT5VvT4AMgL4gSZQoUu7Risjd8lFY5cZ25m9ktyZIupYOAv3XDwICPJu3Jq6hZiKIbJkaoosB3O59zyktTIxSo66eK5y+ExyZ38yBWN6iA7ayKPa/Uv0lS7fWToP2MZwED4hnDv7BfXGzF24RZgdVRww1fgoPejTR/DJEuT9wCC0usTQHtITfDBOCAdHYP+4KJwDGAx12qnJ6pnH1bNYC0CU+8kNGIhxIknQ5+BXDB08PlXZcwFsmVwepjIcnKrtm2QQbHCQIZpb17DiS6eBkx9iLkQvQCBjk/BJcTtYSUYe4LnAu6QPMs+IwaXH6Gfx8UmA3srJMcbB4C1iUbBwWOjb6HASnLM0sJsK9tB5rDVAF9UgOjkxDF4CtK7OLUDLVW8QBVXnRkAxOh37bsKPY4zl8JnqfoDAcaz44vRVKr0707WFM8nQaU75zD54stWvQOd98F9qUxfBZiAUR371SXXuLD5MDu6iY7uwp7YwjknBEYA9YtDp8alkdIEtMfhbl2sPxpIZeCjHGMwEToBwHT4i1uEOFTVw18Q8sCJ0Du/yYC8QLKXmwv2lL8aqZweona5cZzDw1GRl8jg55PQsdfWBE5SyiQMUHCzW+UNQnnR/oH5h9Pcdhb6tHrvE+Ma13RKhukHvb+FsFRBr/EL1/gXqB2BLYO/dN4iLxucZjdw7LqYHMnIZZksgE318WvCJfZVDn1cA/Kb2LQ0fEC03DveNju3N2aVrJwCe6XGc2Lt0c4roeno/2pAOQ/DuKS9wwxdn9i2dupcM7sPqMx71ePfi7EQyBGCwv3roJm3c/BWsOzHknSMwyuAT+uM3pmi1Bx+h2+qxOYAWopd7dFph7olFAaT3PAFvM3B38RZtNDyLM/sr04OVq19UDp+r3jrCKPGFXUtzRGXgHLL91Pna/jEsN9Hp9Fx14uLSqYeViQe1G3PJ0Gh1Ya42eQRKGIKT7PqCiOjx48WZQ3T6Jia5ZI+uVvcPVAb3L84AcE5XD01SqM9DHc2R5gsPiEbOMdgLFEdKwlM+sIDpZGOmcSi/z2VenxO6jqRIhq7vZt0gclWxFJSC8ONYZWMmqnDH0wkkYdaXhE3NegehLYmzvh8UM6GS/Fm/pEIewrKZvyoppTrrxo7tyD57YMc++pR+tCOfSNZ8WAoV7qtV/umsL3mkui9gLocklmoeJ/Htgp3h2eW8bKQxJVdLaiGHzWyUj2O3ZBIfteTWatvLx76dDcJQBeZwJ1N63dAOQzfD7EP0VpCRK26AcyOD47SLGbeekci8U6aaayb6Pb3tK5t5O1llknAld1RSczM2U3BDyYXFeGLm6UluT1BkwqbXx2xAfo75CpW0JOBqSdL1pSqALZm8mvtQzGbmLrujeJ47yHGPTTI9teTDBDw54dqSnMk5gmJSvlVObist2T5ctRA3cCU9k/u3JhMylPxP7TD/BnMMs65dChwMgqe1o8BxOVD8nvEkqZhZApirx/odbpANXe1iNXkOCSsVswf8rnLkEFAlBGXleJVSTIwKJIFaMpQdW3qwgxypBwqgqWrmxjkpY2vZK9eSqxYwZ8n0z2xQUCqQvEEtWdcak3WZZcszI5JGrUN759N7uGfG5Uxj5rgFnnKCSPlYX0z26ayW7Dxmy7q+zbwmjJeUsbNMawqyTy867k7J+2TuH66S0142V38nOdz1Aqwix0yWD5/e3OHiHk/vldROcpVj9z297ahA9XHvsmTzFHBRMYWcqaw8BsTjErmnF7Oul7UzuEgygiV91UGfuDrosUuYhSTD6oxwiGROa0mjDSVb2M8JtbHWXHGm+mo5rsuZYu4Z18vYASUCjEOp1MxhsiW/0Qme3X829/XY18NySn722R28p3nq/euD8sndr3fJWfl7+H3h6wF8vlvaPPh6H9575Fz9F/LJFH57JGfq58xJ+2efy7ULcgr/NnuTHh9/PYxPH/O0Pv6e4788xY9r5+VU/z20rn//7BjH9uw878vv0J+c4JcT9o+fzUp/96T/u+xdxvb42cVnN54dxs87uPa6mYVce1e+xZUY9yUZ8335jHd9LPOVWePbz+UT3OXrQZk1+2aNAba8j/+eoOfPzR3rY+NZ/89fjhDX7qr3wDYD6HHqNxUDpnHFE6HpOfmPtB6Su9+RNqaOASsLzEvlgHn0zHGa+gXzX+9Cb/e/uXL8m6vD31yZ+ebqiPw+8M2Vafnk+DdX5uWT/d9cOfbNlTvfXPlS/r0h345JA/y/8M2V23LVMC/kJ2hzRa6akX+H5MIZaTPJX/jvPNuw8VX83mNTpqXlGf7Pqwa/uXLrmyvX5PeT31wZka/m5fcx6WRC7njjmysP6n1yVFdf/ot7nZKRnHnZz4DcTvrh7w+k5Q355MbLPtF+n8xi4iUFJqQlxnBXPpmW3ibkqmvyyVG5akg+vCUNbssnt6TbL3ghv7ohbU4KbQekt4HnMy/2vtj3/Cr/fTH8/M7z688vPZ94PvV85vkk/rv+8nO8H0hdh9kXo8+npJLDEOszoD1rMAyh/dTzh2i398WeF8P4+zo+HXkx+GK31HmYkUoO1+VztmDFhi/R825Wd0C/t5/fRE+474td+OwReruBu09Jy6scFX4bRIvraDnJ0UptiVGpJDHz/CG+HX2xC7/ffv6V3JVjG0a/l3nH57fqMxnG7/dYiwLjGXo+KWO6J/eawuw4U1aVuMNaEmh5WWpTDKJHM+IvZSYYAa5ijYoHuOo+3rfxyYhUq2A1jOsyWl7B+0xxXi+vxQgvo+8RzPM6rr5c/3yId5OxcCYj+G83x4uWQ88nSG357UvpcxB3vP78osxuVNqw9QOujdBn6sVuVscglUhjWZdJGcdlaQ86Y+2+JHVxxRA+u4U+BmUMX3JNnt/CbzdBpSG0HMVdB9Ges5h9fhefDGEO97jiMp69UqWDFDaj2w363JB5XyeF0dNl4RFW7bjINZFxDNbXbg8reuBb8tyX+IajuvEbqt8TyuyRe80IV0xifBiX3JV0mJHehqX/Yc4cfDP1/BHHILlhcjaIOZLMPY29qMAkVy9nMrAF1jHhKS5JNqKkKTmsrCHVHSRTLWfrghv4HSbHXlJOwjLgjpzplWx6Hten7TYnAXQY+76cfg54OasRMJNXcpN5uobnOPuVJ0UXgc+ynop9Kb3gK55q7yW6sf2yU4ZZNcfytST09dnZMvpktnm3mRHL0aBTx5WzEaGS08mhzBd3yLD8RMGVohHmHICupyvzLkx3VSHzXZkhw+IDBWZGeybvPm07cuZRKnsop19JtrNgyywPVTsxS+ZLaijADFM+eZwta/vm8ISjY5mugGaeLcoWeGwhDqWOBU+ZsOBIBuCiLFnKUrrT5nlPKdwW8mACvivaPOauTFqiFhIQEPjEChhEnnl+ADkqKpvzGEJrHiWTnHwnAvTJ85gCM2010zKZD+fJ2V2CNZ/QnSnKZYJ4DJdHxpnmJElfPFJXkqMJHnOZzFmSFT3oDJfg7rKcrLuGvs2XageTZ3X9bEWG+ZpZtZkz1YWNhs+iQsiUq62SLm0BI5qyD0yNj+w+yb6jg4C5y3GjvOoGK7DSHfFsWHZUlplNPKzKwyOu5vqx7gdIzOIJbsQ6m0xezMuBOo/8wSMDSlpqk+gk9TFYo0LOu7J4I+C1OeWgzaEMbfKzWbSLNCODYQWYA+zK6RCyhuPmicxLbpbkWW9qrhTpbJDyNpN+PbPS5piM8YhsD4xLjjSnJ1pMWryWvE6ARiV5Y8yU5fxiHVkZZU526J8bbo152MArKx46c3hGgglrTPAXGetzA0BKEBKfc5Ry6EB4vqMl9rqWNTDplUUFPKlLIvl8rs8MPqZu8ihfXtlmKiyABlAvGfjKKckxAz82999k5p615Vj3L4yoMZM25qEciFEWXA4ZUc56lg/hkQz6N2CNPJfKMnluJqmXeXzkhvUxT51FeRXJ3OVoi+ZQ8NdWs8RZW+TXHJDhOQM57EJUn1U8P8AFFlprch08k86Vcqe3jRKwOi1f9VsbzTqYo01ONznE9t43uoc6xJUSDhQSyDXlYSNPt+WlHlGGBRmZsqkzSs6SSC64cjapONI80uOT5yV/PzR1dlhMJupX9cP9Xlmb+YGlOOluI77QLyWy546Cm3EjHvh9vbl5o1EeUgOHB6r7uA5BLFmg9XMv9cMxjUZplWL6gEr0dGfKpNxbTDiXwhzCIe+IL8k1ARfwFBHErGwOtujmlawp2CAHEcLiRqOsWJzWN6eCyGAlHq3Js0AK0ySN4pQcfuX8lNzvQwvzFJDD1Nqw2OXCc4kd1V9QhqV4EsTpNiuWtSMm6q83NsCcKTIFniANvsvrRduoMs+5gPIbeTowHxRYcsQu/9RIOE8MgWlXGBUkLAVWVKxLnacw9pF3NRMT5ewVGJ8KyCunGxp4WAC3tcBkDngHErABmgGLu5FaF0YSJLZYbtJFK/VOKLWoU5acwDbHODT9W1eKMvO0wrtGpRdiOfDo+hZbQRPYbqg3goI8zswThraXCU16tivnrDxpnW9jHd7OlDk9YdUPKTHTHzSDMBfdmKdAejHb9UWWIbU3O3I2/tdm7u8Zq81jKVYUSGZnZ4rG1FM7mDVNLojk5EGGmbN9Sip+qbDZHL8zx+k0azLgcpb3xdy3QBhywQ4aNyYmw1bRaRZlBZO1wy3GxYJRctArruOVoZ+LUoUUXAIDj3Gy7Lfke2upbYWpYATKnK2OWe3Vt3VUBnvirla3wSEhTyjGirokKJY/NLCCj82hbaROpoJDz7ifLeydNiRYb1DJZocW2dIqTyn+MIAqjyxznENvtbOuUc08GxCXrH4pX8R017Z+ZbHs93qxkvVTGnq7Oa3HkkuYtJ0VBcEKylh3KbqhnDZLUnkjA4YytLo6ymAlcm7EvGgMsNsoeFYmBc2ggdGhLgaiX1gnDz9cbbGgOeceaiWREiwF61N3psTUgaFZWaiPOf88isB1kMqlRUWK7sD9i+Y8cKjMwaA2JWE1B0SyWBeI6dk2ZFhMcr9dJsmt9THPsZpTZnqjAV/mVJmWInCw4yyapuVoCAYhFTCWNZRY0xoWPZSjkVnWGy9Fgt2YSBzKYTWTtG2OcbIQGI/IWcuXU/CgQDh3GFNPzrBCmUOHGDNvAJaywZYQSh6rFnXBw2q6KS2HfOTEcbZ+DgmWREI7JhbmmKR+y5zBCaXoGvP0WatIbZYkfz70iMxQP2S50UA/V2Jmng9dTugQyzJuN0cieKSDfMaE6FQXlbhHWCid0RDgu2ZAzt76MTLl/CxmeWTao5JUiIMVLuptBZg4bRWDnUQ3XEZXyrLwWKMywgwFT3XXJhy1osDyW8r5wCsXATS2GyVpDrJqKU6FiQFS+W62forSHGdkfj6QosRwI1EesiLmfKwUGfPKeXMQVkpkgf9MkRoaPnZjjKLh/DSrUhTcEgv2uDxaK6pLTucQprAgkRNHslQ8HcrTiAYyRvJ9XmTN42EEniHcYPA80C/v+5klhXm2GjgJE0ltxZL1YLEtYAwoenM8UctJOuVspuzQ4uRo7XkUF4CHzyuAtulWMpdmQ6UtBkrzHFmQYxETlg+S0kU01z7PXLJcVmNrUwtLSfdIdW2qC+NGdEeqVFA+DxAo3woy4lRIeaZlDe/JyTOLFMNQU5YUvTFHljXsyhYweUPDexAjy5zN0pLLj3UwWi/nCiRjkQwMjQFTKW/IUxfwUIRKLJiUdeGMAKRr3WN46aeKxQKsDSySExdNaaKuqN8VZBbwYEaZ1d1Zfs4GLg+VZY5RsIYM/bFCyCAihZbiKGeyBFxClbJq8bIGa6Nx7sDrkEmW9NcYIO9u2Vru7kJ85GhhB8Wiq4OV7wEkBDksazDn9bQZizIEaSOYRS9Zg4xXmuMHUl6swdJmxTKmZpY5cGr1KzmW19pq6rWB38GEgKHUYFL5A8rTpQm3Mi4fq1Dm4y0sFjW1uIAsjo6/3ghtmIR2Pq6BlbdZec3PNxrm3YR/gKp4eI/86fJoCEsB8Q7rjSr5OWAZ/M8+MCO/jKlkdJYlCG1PTKvV+QujPKRKGFSsJebUHFZxOmw52MuDSCCmtR76N3TFxhXUppfuagRD4vC4Sx9nxGPL7RmbikWzMDdHBg1IpxgqAzSlDbds+pT0PoFH2dnPeCQRkENOmsiBN5oJc0zDHAOxtshZF4tohuJbLpHdpPRhlr5i0ZW6iL7l5ozTFJkDYQ4ZCLdtMVogY07bNIvf0saKnOL381h2Ws5PpbowMtw1gg/iKfH2yPNy5gffgcixG22Rhw04PPdEuaAdsLXUx0t1YZakszkmCwDJJwZ08bEYVkaeMoJFtS3RWkU6qGG5RU5OpXMGAjhYE5gzFqeBZcsazC4lD8SXofflRmLt/VhU0s+khrolqlJHhH74MyfFJ6kLIJUs68Xam0ahWP2FgMMlk8YsoiGFKTRAPsYrpGPJTDnvbg50626pWWCxjD9XMyhyOYmUwFS0f7iRObTYkSlzMa33DUTdaoId5sgry2lSPHhwCba8G+KB/qSmm1feSssEDRlY3MGiZxPTS6ZTqk2VBJ4ZpnXScipZ8xEqIBPrCdHLsuVcEz12KB1ziLCx2RzEEjci1UWvJ3JL3cZ1NpUO9LY47MUgpHCqCtNSQrNRcEFDQ8bwoJSu42M4eE6zXvmh80PWxQgdOU3ulUt8DoorbrH78ghRgxx1avte7IkAyaaZlgcpiAaDK5CV8vACHVQ2rsdDtBRTxcQ2mSCXIWtDmyWVAKXuG7exYiiHojhUWCqGpzC+HVLdTo63LmswVQ7SP9lR9Kw+ea6N+GqsAMc6AlwkPlMBbfi0xObmrqY0JDZsNCf2NB+uggtYBwovcat3qp/zGCgYRY6JgsfDbGeqZauJITk8Xc5IkmC+yADBrVJKw+JTayzX/xkrtxXkzgSYxlfrkNPoXbYlMJjPbfCXyyNFwhXWZhPhycG3IyqjwATh2zHdofJ6NzQ1DmQqYBt6Lu9JmRXPnPXTW+uBpRVAVY5lmXOD9fAPS9TKSfocRLrBlMDQP5Un6VjrjZ/Da4u22DlTGQMAscwSd2IDRDWzvab2AuJ1NWvHwTNnnfyAh9CAg6Nwo6lW8l6sgUz0L4x7BYeqKNhUone01qDnO3JOdIXUzvTKLfRzt9sQGXmmgNQiaFwfS5lFiijYzUS3Vrzji8QBEnPF3lYWH9JjjoLr9bIZW2549VVWHNsEp1JBCRlfTQ7Dpbp4tBsiI7hnp1oPv69gFxtN6YhPjACVYum6ScxYozn12LBp/bb1v7J+SJwIXCF+EZ2KCKOXg+uMwrG6YtnaLvX+louagS6To5zazTUSNrwTyXDf4ENo2q1Ul9Sh5RNuwC8fmBinMkCXj8QR3cOzm35e0I8V+FLuV2BFrpyl5qNUmbhUBJvf79OrZs1Pv4/sKYLq57lg+I6PAAELpyx4xJ0ph0e2g5K5Q4Q5kAPMCVkN55+jYHVKSLPtZem8N7WLpjCHBW1gCOr5PjH/EjuEeV1voq+szavi0DYxJNnShqh4HjFRf31iYma0BP9yZVFEUn0l51K0MehstMlgRbqsIE+DrKllCq7IeUz08q6UPLA20MIGOVpDCS/6fHAMzSA4pZdByt5IDicvNwcjU5YpZdPZb7QprfyHbr69QebHchic4Xos1AorG8ZSv4Z1DVJdjGOiXym4qVnMjk42HYP4paOpzalgC2LIEIVgxU6rYZkUvYwCKTLwofHYt5q48BaDNbYyUMDSPFK64uduSNaqF2TYaMJaWw0aNWfh20uECqx1YTPk+a54q5apY6LX+wBMftnYd+tDE9rZbLxy437orOFyLDo4xUAxBlDE62k2hWjeN3hQzoICZL6sDmGznJApyaH5lCWCEykWpEXzZcq0t1K3O+xFn+BPMGQZ4JOhQH6Hzm2jz/jAKCxcQ0M3DKW1XKogLzdVN3SvKrNguNh+z+MRdbSUirVN7YxOqn7LVOuxpFY2lGlo8QCzlFJor4+2XWKvsEdyzlubA7AWoxHKy3WbqMoWJYe2+8QIK6mHpAuMwMIsRYwvAclmpWYCzbnFKlG0nnpT3EutaMoErRCH2I36jcrjU4iwALYlR4xTbalCFJV4Z0iiqTrRIGWHvLKpRRNmjeNAQWfvguv8brOdwHgnbuSxnHNUzhnfgkoeoEYZv0rHDDSpbvEirYLh6w+lxIkv9QN0tN5jOMUWYyNRD7pXgn1TXWmBoY4TCM7KGYKw/iraMB5iR4VNxuJtNKFjU/NGNxljgyHUYRqfCEeUYFQXY3LvGEcz5+YixYfgWHwYW1pKd6blsQS+kzPl5OGrsZQQZMqT89p56O9sp/Uebp4WJxvazyDjkikAYltS15r110ACVrCnEjBPQ86I2xLyyWYWvWeaeYu1EiwmtwjWD6UqSb3IESsoRGKdIqkH7AWxkwsZakFn70mwYiU3uxjvgQcJo7fBhIeJ+gO5gClGfUZupUI8wLPUsHP4mBWoDFPTwZJCI8p518S935aCUJY88anMBwfhr7JEm6BNpWCGZA0RYrASfapLywjyfNQPeHCDnMpuYtU6LHZoai/9FMaYe2dYAAuWJmbtNcfUI9AsDmyBWUxIj2U2ucS0jaCELX6O4UgpAIBLYbmcIBsLIQusrS/F9FmZJhebCJRlil50bWG5N12mtRc41YPFdD4y2x4croQUAm7ymD1FS4IBWRULuLDeM/60Oc/foOhM+FFGSWwNumAj66O5O8hEtPZFN/s98/RTMl7IuJQDaGqZQmOWWFsgFjCLUBDY1OqU+sLcB2LVDr3VgFI+x4A4MpL75mIJTvfJM5fyphYTbID4+MyNgicrVbxVvc6LpowpRunEokgYLUv5YBUOU/qsmU+JYbzA9iks5mQ9SGkRjTWlYTUbmyRo1NQuhYON4NFqG23D3VSao9BlXT5T8kiz/CreJjILWbeo7DYK2tam+pS1IRZHs17DaJvxCiC+wt8lxaoV+cBhVbptdp78uV6Eqo1mC4rlQ6nQAk5nCpY8gRIKyZQ+eONdFgTy/H5lUSQ2mv24n8XQ6rpo/BWGVmirZGfCgsbXHAtUHB04qRq+fIUwH7ypgK29BrGQLEfL+iT0NugV1mECTAVhqClvZaqG6Q2s8RBK/R9ugFPuoZoND/LhmRbLz4ew2+EWE2bq4e41vE+x5em0cY8JTXyWu7H46BRTmoj1cCD3vvyITE5iypLtm9BijWBqUNzOD+QJZcJ10CHlIjhQHAI+3UKFraYsBOEB0K/B46mWH1odr/9qozhpVmcgwRGLvivkSB7t5lgG/dJt0b8xL9oyzgWUIS7ol83BrDbVz/jYSpZO4RMhqQAxf5KuHiMV7WZZplTcZxK1azSFBAsstpYJdvQbU2cm5rBW207ImOUEcE1CExxPW2Kg+/vTKaxnRhzivFR8D9pIN9A6bUngzISL9KeffvJZe78rECDI6bJvyMN9Ui01SRUjnGR2Vl3ZFtqxKFJLmwJ2xlHpgDh1AyqtN1Fw4+amjTcYbTTeoDBkyvqF6wF8FHUMLzbDZ47FWK2MK7V10/JIgEZTDNEydQe11IkJcj5rotneRrOTzVp2ni3PKgBB5GkAXrnZhHiaTZHFjhbP7WpoSFsSXoTgkYuhfhno31yPiUudL6vPtcVXK7FapQfWY2QvjD1Bz6EE47JGGgkKWK8v9qgICxT6oNdUT1zRaZiosV44TeKsQMBS5J21mkG+96RyifW3fM6qU65Xg2LxfnYmsXRngzziVUv1/o4WgjpiG1PPkQAeWrjgFsk1dCMyWEbx49Ks88/S4PA3+VhHTisKdNo859GR4EOJxdKisuGvNlcYuvyu2em1LRGFt1WYERkN3V5wsqmHmK6Xe5Tif/Wt7xIfAglxkkhaaBn9aTHGCZcO6ILPeGRQFEISGkwke+OWxV2PIp9d6oaiaWHj3OhvDfIHFg58NzD1Gq16ecC6nTAlCRkaZTQ01cQHqTVKMMDj5jY1iqmqVh/0iq0mawBk5DMGLcbEO1OWsWeuL8GADrONYSrb/Lyr4z+2QCUyBMQdaQPWNQuyhoC3YoTlGSu2fr3TWo6/GQ6Vx9aGEShhasG0rQ/tDJActTDmnjXhIlYX42xlF7DZVAxcAVai3WD1ZXxHkwlR2+iRcj5LqTEYlxd7a4K3UhWfaqa+F2ksHqbOWtwbjYdpilfpLuO2CiUY9QP2zHimpJ4lmRWYingF6ZJuS1k/scyTYyKwE7e6WLIdi2rqLWopso+R8RkiDGM45BvCCkEJ6LwzRUNk9qSY57HBzsCf8c3+WF3NSLiBe7CRbMGt1wJfTSU6TelzQ4ou44R0u8E/b7PicOCvqkcus1miC1Mk1GI5fm6dGpjWJE/RayxRm6F7E5OFmP0s9sog44+sFBEuNzgZdgVaY9AJ/CieMEN9ljztdPmPlsMcGkRsmRpqNDYcjqmzp/lwZa4K97zteiFQq8OwFMGWbEKyZSNLtkEQyC5wMSC0fCR02pJ9NXmAiZToxO/lFiO/mbwgHxgGLvg75pkX8rARQD8DD1aVdlirSzt65GkmaXkqkmWbCqppOCpELIafmzslJtdO/qRpkoKxadOnJSbS6jS1W1fQ1+GT6UxhQFNgikEyJiDxcZiWrU3NUkcKCIamNn+DRSMcSJVVIuqc4RfaR58RX4thD5Kc5srsH/YbWNFfkCgs97ogxZmwi8/7NLEcy+wQd4qRAoKI6dsrV0v8zJYlstY7RTeUcO8O5bSb6rfWeyZHaSv5eoVFTRK6AbEUtxBDMbCQd5ZO7EzJY09YCMpsBhP92jITUbKCfkUZy1MPLBCrSOTP52JZrGkGmYwjDb2kc2V0m5MigsAv0D2BOGmmUJoW5vMZMIP4FwmbuLHiCkh0XAlqb+HmLJxXicw1muKZjEeW0I3J87DIDDQK9Ca45cp9Z52tpxmwmNXLYnLNdNSwVPCSYZvLpvakbjFmdGMYYMC2Zeo98hEMnFgk7qAoCKyDEkvX9Alzx6DjBGB5xtXjw6pg0bbIK2VkOiWPeLAtHvIIyppIyuKzYvgQDd9sBodFo8HijDyCIVSSy0YoBo40MK1Lkh8xMSVP2H3fbBm4vikHHAgxfsGSrMv1+2ZbVYpM2r5sJ9APEOsInUXQZsr1loms5PG4YvFMXc5PCPtZCVBqqEIGJTMkbWL/llQKa5TnNqW6YtbQT3VZ3QwoM2jRJyYA1hfWCvYT60foy4LHUDaYtNmVsyyzHcGQCdiqMbXpg/c2BibhUOSceRHi5lh/a9I2TE1BbiJLPlFA89tvIHS7gWmRU1fUokP8Ihwqxjx4qod4WCJfhnuWixWFBZf6vs4GpnDBvw0iUypMaoUZv3hVXmIxpY0mhSRdr0Ntyr5KskKBG7Dcd2TSIXVdVnoR28adCsukcDF3QNNVKEgxQ+ZncQLQDSYXrjNj4nx0pGAxOzsthlU6DLs2SLlR7mXJVq0IY734aFoweuDTsMN8pk0MkXtY9GzAv7kgNAViLVOrENOW54wFRkeaon9p6kFhMcnQ2mii9dpUAuagMRsyKSSaKAsratQ9144sTD5xMSOz/wfCsigjeRfwT0oYMvVEYJrZttqeMfAAOJiPenjHgHVTAnyFbckeDi8HKd6X+n+WPAFEhXzqO8tms2v7ZV3c/kDi5o2miLFBFaJqMNdmI4Bbpe6lkFZgRcilMl7SdlP/eoXkWUjaqRs4KxhzN/u3Jq4miYOyuV7P8WTtSgLX8nqTiBLJvmG512ANMcHLGihNWBWbqVeB78csWuptNAmOEuzngSLh1iAUIMGoDYiK5ivwYTaU55WZEnnNJq9Zf5DlVhkf1kAnzUiAxcgXLthkog6KQT0iFl3gvhqf0+Zx584zYSb82elGkrPCBKs+6gmTWioGpV7cUBumazBOWtql6wg7aFwvYze32xYfOgYw1MuS9yYVagURNSa23TCoPCyMzx8hBVaYbDsYWCFMRgSvKM+Qg/mUOvCW2eOzKGdiJjSxsamhbBk+04ImwrIpkq4ts0m01eQvQclw6UwOuZOTpx5yY53SIdvwrs8sPQAVGmhGzExInI8zIrFY4heej9mYlpwgz5Mn7Fm2Kd5pmYrfaXZNC/auLbiCW8Jx9DYICC4Q7zpT5vaa8Xq4G+a4Ujg6I2lMZXF9PNvYMS21LiNNGcuTPRh99UOVi/XLutJW50fdvKbbbJOZspha9mjBjkKBNLUF7md22lfwcZDch42lXqSIk+cZ8NRi9Mr27aYu69t2CJXntMgzl4yOE0zJ6CpzvZhwwTLzQIe9ZSye/RFPwDlKNjSXNayPWPnXli3s2DxXq7yCz4n26Gzhr1RXvQqmPG3RsgHXGQ0H95CwUsEei1dP2BYlYLEqqvVJg8k/4vOgOekVIoy0XoyO0lP7BZ8/rbjiWVt44m3WWqYmkqSFel3JTwzTMo+OMY+c5KaSIHxGOeaHkRXN3ZmQ1M9cnCjkGUc+ZAuUFVvKARQZuCbtg/AjzUyXDlonAmvWpXV1s8kSK5jIHsth4i70PuUZjIobCHwcG+O7kfgytNr0l2QXQ7smuSxnTMKGOAdwFZjynB0SfIe+Drn+wUazZSBejuubGqD15HExnwDe8G77APZNdXzrMz5EiztsFjuSJ+rYHrfOfKb/Ug+2RDEf+8hittwI74boFSX/l9uAzVaHbRVC87gFGGvr/Q+2Waac/gpZExvKL7RMzXyG6SNjYcWVXNZgjH26YKRDRshdMJfbMykKZ6oryAA/sXwxd7SDFM1DzhXDDhptZrIWHDGp5u764slTN4P1bRaRj9TP+DQvFf49Y++vW4RToDZTECT9l3ra0iZLDyMl0PiJSUY15yXq5trKuPLsSjGwnSkQQ2YUiV/9oRy3WGEqQFumgLZl8lH65Tmw4E7GTWyrZGJWgVHwzWYB203qkSmmbpmqyCa/QvWXjC2WBzRZUvYck7YtyadodMW41QML7WbvW/k7y0xOksAE9RXZ5xOzLcRR2qUyhkG5YmRHouqM2TfIg9ZoAyWW/h/j1tbVG22JGVq2ZDq8+qrJVhXJhCbt6N744Ttbt31oElhMtfUWSToPdmwov+M0pnbIAVC9ot9sc2IsWpgyZ0HKTFl+ywBUbX3EgK7sHRZsKUeONZIlzpRZXpsbamajwzi2TospxG8ez+X3BR4xCu7AXT7bCGzGbN+/Y7bhJWKcD7hhj4EaMbJMHlmHiVnY7SwL3dFiyqBrya+yo/+HrTftkuu6rgTl2cgq1DyPz6FyMdGVyATl7l4uZCK9QJAUIXNaImR1t7ta62XGy8xHRkZExYvIRFDSWiBIcBIlyrZI2TJtieIEQQQIAgQIgNMH2N/JTwZXf3GtRUJUr+7f0H323ufcd0PVGpCZMbzhvnvPPcPe+8hzEAVgVBXSAOf6XtoqC8bsQ6Fr78J+dAgZMowzeNHmCfxBScjfoT/8L8vzGxNpkzdLq0yHI/VmO+pRjQvXw8pvqQDUFIKE3FbVDxJZZZvg9R91BdsnI7uamEF9yGz0ZlnVPQtRzDja30q8lQi1ygcrsB/s/GM1gdkGNXh9MLz+4ia7UVrIAZA0G6oM1scTtKCaECKMQ2D68wOlejmA1N4kRnyJ2uf1nwA/sV6Xjd4rxaEaiI4PlXbQfYW7KPvXr9n3BiW4312whIHV3baLWEPTR+xsosQP1EnK4uEHGRPRJ94aON+crKLuAHLqm8CIsukGqORo4YfujPDzdwRXxXUOrl9DK+YB945BI2rTQCQhtXAi62QEAXq0daoHdkHokrRNjvtAjPGmUjKIbbXAe7GhGiH6rK6/ORgTpoOWUd16c8CWFF0+BzsYUwN1WSoZZyMB9tTmBAn8kQQAGtcWwF91xTAfDYlA5DLjd/3seIJGSn30ZQLrHB2QYHofHGxwXynJtkK9De+VRMiZkSbDvbEBAxjarr6+frFP2NSYfFm7QJHy1fKgQdefdagXrK/jkxb72K2P2LiL/XOBSkRTn9H1FxHrjGpXJmi2/bmDpX/W/DybN/1SQ05RBrsWdBeq0dtqG8xxWJzr1/psETZgQ7BttAmzYS2pCEC8P7AW7Ja9rbbNiMVQrUcxHX/DyQcuy9ZkaX6U05DQNJMVQFS6kHRhj+IReoiqS0B0sqmOi3bDjLw9DyRRYSXxqMas7HcBwZk6EbHxW+45ka55eD/RDgeddmN+wga4N5XIC2P0xwLtHorrY9o3UUYaZ+t04b/iiwTu8n5r8raQf0LiESgyzGcwqwBFF46s7CG4h/cp0FE1ci6XeY8NCXSI5W129NC+Gb6+c3do7LCdOpeuIZkAjkZ/SrpSudYQXUmOHuq6O+rGbcF8+TCwY0RQAF+oMj2znnbiHdm2YsVryQjAgc1A+QFAtPFgk6bQSTndNXYPgh79LiMNf27MtCGR1zg76W5/zsrugDcpfhu7XuP8Zm+Bkdi2FQjgTBALtGH3piysg0HD7q4jLIsSm8EGhnsHbJaK6VuiQtmZhhj7MWhGuDaIVSBPp2LsOtpEcrsgW65kBynSn5zd2fTNFFGJ3qFo6FBmTyyYYl2VUDqrQ7RGsReYZyT/FE/X5ikcfPu+mR12DkS8D7eIXVpHbHG5jecPqCmyc/D6MQ+Ixbe5GexGJAHsyGNUETEfeV92z16fmxK+ZY9QvQ2q7iHxQJDbnEdeQzUURBXqjYD5PMHU7xLlMC3r0Tq6xypVxflGVBmYM0BGOnuqcaB5d2vQEDUBwA6uHyBXhGHlcIh9YMtJneoNs7piRmnCNJkIA53CrXRPRtS8Cycheg5+Spj6hn2oIvF0U7r8gGMjx7w+FlLMzrtZ71+r+0tOOIt1qOlGfpGcEb9uWy/YbGwCHLexR4KIeDc0He3iJrEc1ORtfZ1Dc4+vEwAGuMDY46S/6Qm+VUfjdw8WQTwdsx07EPxYQA+E/VBXgBEy6+R/opPW5nhL3Geb50wjEohKOwpeLdIWIuquT9kuHvL2WKj2STYm3ajcrnJ+MlexhcYHGElkjrX+Bz08aLHDupi3tmLHSsh0CiGk0bR4yqKNU4UadeSJria9KQAgWK+qNZqdAyJvCK6cRaljmA7Ojy47oxPRJTv9HwRvWnQU0vrqijmcK2NwYGiPRPWq0NCZqTZeLSjejrpl80K797ts8OCZOZe6cYJ2g2QmspSCTOA5bg9gz4M3joSA7aKVimOdVXhjCIVEfa3Lr4o3UxROVbzb7YY0htbH3KzZtUN2DVEP/GZP9M05x7ehf24eIrlSaO3XF91JnQls6JiD7zk6HjhLOtwN9zsxAmkvvhz2XzyZrtO2G9R1YA/WarN7qK+gK1i1KaxVDfQSodyAKrD86/vMlAUdm3f3y1HrETACwjn9N60um1td9UdZWnWed0N6yVxROGSt8e5102C+OYK8q15dWP9CoQIcCjtvq8wiULNfdjbco+aNzTdzDoTAY7p+lSGwPRm2bOf/YDHN48FDt0FzlNvS3aJuFOoj1VntFOq/VMxr3aFnI87nWdk57t+jdaQrbbDqUvsHHkJNO7nsPDu43Oj7R68B6xqoEKA0LOyDKXeysXqHHCw+L6pSQ5UC5qTM/up+Jj1UslacOeKYA4CouA8zTrKfK72a85q0Jnt07NtN4h0SV+vVijJ7q5p/yC8KFiqUQ7UPCVzsew6ULrbV+nC8jgjTzu04soNcf7YfO1Kg06sf5gzzNGKxz8NGJ1t11Tdnbo6LzRYOux9vo517n/PCVQQah80znQCbhH0SbB/PKE6xF2O/f3DSJePRKdiLKEPjOIUvYHHc0XGPIPkOwqbSwiQ1emNrtzHpGdw/0QOp5D61WCgt2q0JVilEfViv9sv9298pxFx1YBRJhDB/Dt3zIEHsRwKlKoWLtDO2IJ2VDMUpOoZyf3rTg8UtrAHeIjDQLbzb6AoHO0ssGjhl5G4U2lc3pndaDIM9n0lge0LB4nEUdOP02T5RDQT473B+fBWE5nI7iF2jr7k6huzA+tT1A5Co4Mre6FXH4VcecT+5V+6OOJ90vavqO8kOV3zeRUaZxXqyoBXTeNXlLCxM3wYUpu9CEQX7eGEHED+xWfKkwJI7wJKzgN0ZjSebTkw61OlwHtofu7DOxGXQ0HbZEczWj6qencLtaBfWtRHtj3bxP6JbdD1cBlv+dru3jkfpiB3Qp1p4tk6BuYUZJGQLaJHmgavrI+0eHhdSt67z0JCKPqgbhzXO7XFNERfisM3DVofZWaSUYN9AV6UPzNoDOzYyRSkWCtfBEIHeoY7gO3c4SMb9xEbdMztFNXJ2eNdznNPtIdDfEC1BFg8BG/gpvr+ssJsfNhgBexsXEVlE3zPkWArllw6FeIrMR2d10QHIsntQAanFhJv0NrFFLXoZyq+/6xT2wsmzzR3iP6LLEeZhc5/b+Y6D5LXc2NdyhLyoK540pftB5EjaBd7ufhMDVLuBxUJk9ykRDb0NhykV5pJt1Ra1uEZHQcbQWo1IH3HclNVS8v1lD1ENQ9JUVgwsRd5/4djjxoHChfPIqv2/+7v/03/ef2sHzAnEkh68j4rQ6mDnxoMHvIIwRoyEueyCIM1+5yAxBWDj6FifgmFcu9/btEFSHGwX1ls6bt8Wfb/oOlW52QSj0eLRubnDBCigBxLsGJNHKxABWB90E16zs4rsEvYlF5gBcHsMQ/OgTW4k0QjKtvtwEPsixEnI5TQ7DjvqbMVGZMm5PSLvYF5Ibcez8cvjgZAZK0vEUa8OHuohH1A6+Q35OLK6DzjV1BUQmi/7vHXti24xv2uGbqtYLHR/8ENgx+hPtWTrkUusFD6fCidYdFywonB9FSRp6B8uuyTBspOzAg0hu1b2Fnz+BYJ+UdSJjkUXpNysenoPKIF1s+5AvUGbYrxl89FupMuApqn+I1xvO53FdITlsXmtnZ+rjdcvYRQHkwaapuBlld2BU186yGOYn9Nb8XK4cwlXVryI8jVIxgybb7h0SOPiETEtC2d2Fmy73Yd/rzrnyprykz2nQxVucAtnzTt/uVlRLrUInQVXYgEt0Gy8QFnwqxTf96b7XIxiXB4ntQI0ELzv1z3nmhMNrPzk+plGvZmPDQoPVDW/9s6Z24T+qlOzmjaEdcOo2vzoDZvkUyA0B6Ne9xagm3pdMDX8cR0KeRyPt7eHx5cB+t5fOC/bRX8av5/uTil/3faN7SG7ICs/gDIPSVWij4eZPMDzcH4LHb3ihMojkd9BAmWjPj7nC8W3t2LFDb7LZDSsjwE2LzmYonDHyt2bghRzs9ss/0DawNVggovIShjmkXR/NoPtLliHfcdllAobefMJVuUHoY6r/ntYNPSPRC5VXgKXqmnZuN1aVNfOo+xNauM/RVAQ79u5O66XtI9VkropXNWj4TjZc3LpAcwbi1H6CHrN2NuMFDboECwdfMQHS1R8UQWCPkrjGiqd1c1yWycUbblAtQTrzedTgaI60a+wQswrDQ/eOjxeLPoHnK3SONb4C73y4Sksax95Nhsgji/5LzQDHXo7tp8LqLWy5OGmv3/wC0ue6HPtsMLj1kKV7U7hgjdejjZL4TAyF5GZm1cruH3zaga3b8ucm3HzUF273zgabF//cf+vHh1ff3f00PXXKijAQdmNKdLrP+kTJWZupSfxvXc3eqYzE970kVnGBKcfVg/8OQ482x/rotwcrNUIkDyN33iCG1304FiVsEPYP5GymVz/iR2f/ja+P6VCqoZhMLx+DWG5rfVmAN1Q+RfYd2knkDftIe3AHol95KOQjB4j6834ApkNaNF6vgwXMq7t6ryg0NDfun6RcYZFpuZMMSPflNvXfwLHd4fZEjMMUB/qUq50yECNhNVy5CTMwRCENTBDcF67HxYtkAb1Be7Fhobfg5bu9YujroUmD6OKMni4jMKIALjsImoPVgo/uL6yZzsOwE8qmcgc23PyvC87a+Jz/nfpRYPGx6+kdmy9Myjxh10jNY3tvvAHdVFVh0AcD82ZKFaYX0jkCXAdA6TZSwxivy6Rl8T5vMRhtnqdirqlXXWPHbBrvr+BLAteZwYefk3EG0wVNSIY8LmjetOslUxvVaHIpTisHHk+ZqAsDf5GZKn5BwfvwesXd1AwUP5tPBhf/8k6HAx7/0EIJbOnvF2/ylElQtcJwicUQHABYqeCvGCjd/0sigQ7HB/p2Pn3MI9Y2UHedYD5THEOdEeuSD2FTcAvNj+vX7QAZoBMD8eN9CI0hccqQ3wldV6zSBwnPg8bp8FQ4886Qo3z098dgEy5Y8dBN0gcD2CVeq0eeV6wpF/DdUWAbFlqmtqnrp9FIrJ7/SJolK6PgXXHigo0qa+fHaD0vQ7NG1u5sLvm98BftgAB47OGTAyUnQA7J3nf9sNSzx9xF8aRzcxHm6Xo2QM6Z5hdzHcCfajn4ZWcsxYc7FBnmDJgD0NGGpJRY+a7yf5ToQnolOtnoQ5MpeyKy3dzYp/fwdfsumyZQvE41H0buyfbGx5mfeb6myXqI4A7ewFK+baKOwE7o3p9sRFl0talLV7ApXUfgBxJ/1mU38prXTYPND6lq++e//DSR49AyRY/Pzr50TNJB9h+4m9XE373w+f0uaTcCz1eqOlSZ/ijU/65qzwmtIV1nCs6D5Rv+Xk/nv1f75+n0vCbdhxczRX7BP/GZ6nY+z71eK/alTzmKsTvSdOYqsDv2/Xo51Wc6aMTuGb7C+eX/vG7ev+j7/Dan/TzX4E6sKsmv+UawFLtPe86v+d57W/ynNQdtm9AEfhZKPriL971SSgu27Fx5bi/d3gMfP8Sv2f35ddn16PPUEMZ18/rwPXhFSog4zzf+uhxjtO38DR4FdAPfsuuW8rJl3i0t3ifGqcL9vuTPl7v8vlcsXs774rNj1IF+bx9i2rF9tv7vOPz/ly+9eHb1Gf+DvWKL+I5UfX4oo/fVb/qk1SXfs8+o++/7/d73n9i9pzgiF6xY3Fe8LVnMG84j6QUTc1mu94r1IF9THqwN85AnfXjU9SFlWLsT/j6eSqiPkb129dtt39a6rY3fix1XXgA0HKlWuyljx9xzddWhRbffNrefdJeeQsarPa+tHSlOfsav/0kdGZvvGTv/tSOeI6Ku/r/WarH4iiPUaP3SWi13rh849qNt+2aeVxXAH6U7+D8OOobVAB+zD512q//0RtvUV0WWsGnoLHrSrSvQVcX12XvvQqNXlyp/XybyrLQi6Warq4fV21XLBXfN+3KT/n9PgIF249PUpv3FI93wVV5fwKFXPv5hivWPs0RhRquNI5/AiVZfJdqu/jm6xgP++xL1Ch+yhWEX+O5z9oIXeU4XLa/3vJzXLTvPKbxhI4vv/0GtXdfk+6tne0nocNLdd7L0kzmM31E53et3jP2/iM3LvO4GL1zHFs8l9N+fa/pfaoTQ8eYOr3U38WYn5JXaE/rJR/fN6jZ/Jo/08dxP9RvPsMnc4r6w+fwm57L5/w/v+T//WX/76/6fz/3S7/8K7/6a7/+G7/x67/2q7/yy7/0ud/cM/d3/u7ev/f3//7f2/t3/87cnt/8B//wH/3jf/JP/9k//+f/7J/+k3/8j/7hP/gX//Jf/et/82//3b//9//u3/6bf/2v/uW/+H/tP3EO/P5L9vOX/f+/5P//Fb4Xf/pvv+n//Rwv6lfsUn7tc7/+ud+IvJayrGCgRIVc7ROUK97eBgNoaptP3UOWheJKcNxvP3b70nFqMBFSZoECaJrge6LTQTXeatnZ1Ug5LwpLrXEbt0jOw3okrwGSHXUiYLY4gznnVUpzwInvFM7Wsf16orIMi5aA6A08raW0Rd2bKp6TZm8POaHKRSggmw+GIDTBvMZcxC+NdIWhBjseTVjoB+iFFfxOVKKGYOqDJgQQuS7Da8iurGYRINhLzBQm+ER1HIAOKPwip81KmiKXvXNEZ+P7KGlQeOu2esC60fSbAbyM8ltDTBsC6MMeWDaBpGi6CGSRy25KqsSM2+KoKw2YB0OclTkTxC0A0m+BbY8ZWVfDWlmS1iekC5V7tNOwqGlXa0/MLgPlX7yCQwk69XDVjVN0KVnXB2/M7oWYuvGWxcx9mzr3ejGtWNywK2vm9y3Df+ftbNebel5lH07Nekj0WcgoxRSKujZk00CaD+HnTiUkG8J/JFNQeETpAIXBqfKJdcqUQ3fSZg9y06pR1802tWrwmYpd1s1dO9yrjjN1Xw6VeesGEKUhbhupKVdHs4m0sYFcJYpbSrOvksGK9wUutl+WItEIeg+LD462PdRZi6fMyt0uZP7Im7HPAMp5/bWybu6yiT3dHQxQvysVcTsQp7EFQoGfObIZcPrbzZdF7A2KHFEM3SMWfpBMA804HLi5zXE+SPxtTHDA1TlPsUdoGXpHABlUlBUrmBUC7Z1h3oa62jsWuELOYQi6qioVcwF5aMiywcP1+kLZk/gtZQMdB+B0i86Sg/Kr7h2xrIZgQB3tj+fRToVJ5Unf+aR2Ll7ynMqUdhn32mQhdrBi4RXy1VLSq7rj3UEBxYZGpJixsIJkrrvUcWeVHPJ+CVqO6pzd24hYJit6pBL9mAVB0OQRMyBJTB1ScAvjbpo7EEyt2QlWHCy5GoVy+24zIUI3+KjLIoTbcb5Y+UxAKMTyr4VJdnDW3bdJvGoCGLVY94kloPyZMEBHwj47eGnSBMqGci4Q/6sC79SQGIHH2RegHITZTQltctZIdpdU+TXAm1mumbokXG8KdiefaRSIl4UUcIiSymuSyza7YXaduin4Amd5zYqVHVk6nJBkwGpDipZaT7hVAAqHWwNIUVbbNnjDKsBBDVFNgFHsi3wzJPl4ZBXkqCe1PVhHKY6kf06/42OZi2biVUHPrqOMrzJkk/YAPxfog3WXM8quGeyOtdApN8NtJk5ZTK9SdwNe1UT9fK6ZNKq4ewWjONAM6xF2rl7Uwue2a8h2WKSmKrmNmKtrIJ8M1qxNIEmY2cV7wutBqrVVkB13GWbYXoGcujD6tNguqkX1Wj0wAiBwgxKnRkkf6jFBWplg6/+SJwsLIu0p6eDp127Z28ROu7UdAKcGmBSKOwsb3q9YG5mMBNbCMojqi8rowsM4JY3APlWe5gMqImiaHAaJ5+9jVnJ9qwi0SHd/1EXvrNZGUDUsooBbRCXxICEPMHa2AFnrxuYLBh08mR4yFYc6mpnrUHIttQEddsBcIX8I6gbHnWp8Fwbj9/FPVI0DZVNsE6BgWwnhOxRn3djQZIvM5B5PsVPHg9vxos1ZF0sjwbYESXFgw767NQicoieGGvFUagTpKlWyFikUJCbADmxaV2q/NSABnpBddIGWeZeyAxIElQu7QqwzSi4mzBM+wfRTVOG6EAWmw7E/TGTVxzMCEL7nc8MhbsAorEp0KormhWvLVt17PR1cxG61sgFwAzyro44ALIpBf603GZlfN2F1mTdYD6UF0lCLrLjHxo8smnJtIDfD1X2dXwjYeoUhgHshSWmzWn2IHxDl192hGmUzPO7A/3U3jF1zSg91zJ/pOMKOLSokalsEONK7XAxGgRZrvNxXdR8Aeg93WHa7LEjNxxwpPEVfkdpCLSR3SqEdbfcB8/5AmHdoF9mwsGnWmOpuoerWdWjXqPkS0uq4PegekKgi8wVtLS+nOifOrhaAZySW7FbWaoiHEAqyCV9tl4rU0OE4vuxCjlsVxO+hwES46GQU1bcqCnxd2ybKvnQb3DShdlcDB8ouBLgeMZFtRdzusJ6p2142VoDgkTlmErA0F52QNGKehM1qROwCO99RvIthTlc2iMaDVAZWNwShID/eUFiKAvk1iPfgB9kWVARqhqgcCJ5wx4JDDo+vFLBUQ1hM+q4BaOv0IQptdAqXr4tiVyV5FmpKb1dUngrc0nQNlhOljrJw7XM+HcxKWID+eHVl6d7BaNc2WbjMRBfxMZmJc1wtopPRfCAp4M8DmT11DWCIM43lJRO6RXSDbzeL3i0BBl/Rzcgm1g4fHBAUesoWMpDLKC4l5Ool2AkG85pgOqU6K9ji5a5lnzncbgFECqE9n0MBD9cj7Ls2ychzAy9TqhQ7FQjnGODKxRrqMbVevLKFHUyisZC96NHEddGJYzTYpToUrTtoWZKYsPkW+Ntme9CDZErVEINvNoy+KD1xyGuSYUnw+ZZ5y6TLUW+hcoNGafQhrDDVRoFHIIGIrC1BeMUggwIIi/p4yrQtOE4/3EvhNe1gd8S+TAE1THy292s0RbcZRNwvcHnZo0g6nj9s5jo8NAtUITo8gksjfISkrQCX+a0/PEINyM6qozAecHBZ4SoLZior7Nf2rcXiKDWUUGvToInwMEYJVlDCRWGgBIoiKLFxUezedH8EqPLZ6PyPXRjHnv9+wWw23MlGrRCDsFmNj5BNyqgfz2tlSYXFVVKgtp3sXEuSUx51I6UBuo7AAtNVo73vj6lyiPKeYEl1tfvV2p038/90p9JjsD0Cd0u1jz8wo/fwxGzpvAQcelP6ZAinVb5DXCc8JtR7dsysFVDU29G0+Wr9UD3EbJV3QXCJJNWm8jp2QRSxy8dOH3VoB5DBP5RWczlmAY27DNWRRqB09iTv42x3+nWU5u2KcwV/rHK9wNUoiR6lP4ZbOCbZU5JdaaScoLTdkMyFDeNOWB3bbClMwd2cPjbsFFL2vDCMiiRyMWvxTI+F2yN6A2qKMMKYPX2z+5tADHlB3YzDEBwwYCKp5k5J4J6Yn1IGh9B/7Ou44i7E+zQVYTdKp1i6qgrk3VUEL6TrCTkN+zSNflm4BngPdqyhXBJTM4ON+3zSFi59ZGuZ8V2tPk7b2DjMze1xnRO+0tAt8W4o1MOgpj0bB9hc+npgMUWlpkrfps7lLZ1QuGVB0uLB7U0Baqg1B8ku+N/QnqzUf4ZfjyI5dvJxuT1Egw3aXjyUL44oy7tZMkoCsVndNyBI0i1KsAbxxAZ9SuDiweFbX0WM5gxw+qLCIx/bon8+ik5RQCCBmAyovENoG+mw2beOhO8X99V10eoKa7GiZP9KIBsd2bZ3zsO4dSDktJUEKGG1JFHffi+KaPHgOFPgQDboI+0PCLtLLkJKaioVFGrvDGzo6Jpi05TmMCyj2OZQARiR6th8JSIFj4DMzm+SgTauqAOAJQqGojZJGHUc3LXSFwIA0ln1cxE6rrReJdFHW8JsaEGbALSBNBkRVZqXizowfNgjW5AAq6HaIeaAzVQi/KDR1tRYzCja697nAqagHBoFJDxNRwGZ0hwM5pmYhaDExA4CcOim2wGhwvgQuhlgTYMcEg0HzMuFvBlA7mVAZ1bMj+hB40FXuA0dPSRwzcjMzbl0sWvpjQei5SB55byJZjUYROEJO7RbraImQz4LlP7wmNjRFn536cC9Him/bnaghLXrPbbo7rpK1RF7smtrFYbA7UawRJpdZEXML+xHpiKotAeppbeG/Iak0e0bLmBf3AqHCknBVfe0elNp2GJOwvJj2w4AdxGMNrKMeamRdymkVQUtm8rsCka1idSQ2azR4U0BpJX2kYL8cMs8teCS2JzdBMooSBgLG+a7McVEhwHeR+CUViBCRTOItcMedhIsgMdIh+GhCmQAc6KRUYTfAoMf2Z4F6RzZDT7AFl/aB5E0N5+ETC54wLGJB3jaPBk9gdWxKziBBq0FEQDcJmKi7rHwVyGqR1MZD+WQ1CwAKcbWDyfHJVOhttIQ6p+YBnYKzxJFjnqaQLnrNJkQMfQUkQ1Ut09+Ox4c1bOKoPrF4/4COfY4Tlm0XciUZ/PoeDCSjBTQMRA3tAleRLkBaiaEaM3Jrxt3V+VvFJS+Jkp2znyLdfcuoHwKXnkkwcYQuUObBTkD2Nhizw6Q1MqKKzesip9t1xA4nX4ArVdjtzlAgQuad+foLTDxDQYzN3FGNeaQUy5X3btgtZxQucB8tGQaBZ0uIgd70GWve9Mj3D5tp8ABJb8LdjvGCNOPWy3eovstiKAU2KWMAR2eJj1upNsjokfPEoUhLja9Vd1jS2WyTbFgSF3ZKp+PvNg2Ghc0g3E5DBpmWfgTux3FARxR8tHcPb0lhRq22CVCVfkb2I5IRpdDZSeDeeoUdDfMJ4GXh9FwPGudGEWNiz+sDyLnWQQ5qKQ2gqhGUAKySVmSDc++EQ65dE3TeszFCmxcEeD7WBeF1Ghshgge77hGurvMhcPucgLgCvdGgv2QC2Uudiv51VWgzgslE2Al7DjshbOy5IwTH1TNcAiTVOTg4Rps6ev7bBRx17F77qYsBGLX6UHX7j6yheSgW0huJlQiQwUvwoFif6BXfaO30Df4e6DckFpTxt5EbBzI1RtRpOiBtlX99YsT28bGk536ry/+1TP2Jxpm/9W3/Ze/vfrY3175/t9e+fHN779y84XXPzvzlwLsfXr2+0Ls2S//z3Mv/F+Xzv7fz7/1yZVrn7xz4pOrT3527sWfnfs+etW//r3Pzp3HF09/57OfPv/pt0/cfOHbnz794qd/dvqTa3/82SPf+9l7f3TzyQ8+feH8J9de++SDNz+5+t2fP3r60yeu/eypJ3/28vs3v/PHn734zM1XX7AXP/vuezd/9O5nH/z5J1dO3Dz7ys3vvfHJO3/66bm/+PmZZz5745Gf/eiRT1/73qd/9KefvPuDm8+dv/ntc59e+5Obl5/87K2rn5049enTf/npqdc/PffyZ+dOf3bu2qfPXLv59pufvnDx0ysnb/7x2Zvfe9+u59Nnvv/JtdftlU9ffu3Ts6/+7Hs//Ozy0zf/4hX792d2O999HAf/4MWbj7xh1xxwwsbm3vWzFjMM4LphIpdrJWDbqJBMCIKrRo4B6yaQoPlXPcGc4Guhbmsz3IMaW9ITIrzWrl9DTZfsc6GF2KmdKgGKbpCMFXrQ4ad1dxDO22gngqyEJATwCqA+yqQQDNWHM0tuuvblFs6YcJFN7QmugZjRhN6tTwi/E9f5+tmy3r7+IvyLQMmWo4BXjVhzAdISdHue1Ny46z/ZAEsfLbIckyUQmci0OgVxcpipL/bQq97552Z0HUDVeMasLs38o1RRNs7ZHjQOyoqutTbydjHXX1wfi1dCYKSPYe1IMnsFo8xRxcLhpcZdOMqbcDXC+Mqe816ovGAvQAuBqpWI0kuoOPXRz7D/sF1+9XAkkC3K73G2lAHja9wtwxQYAVnZBxLvRVYyAMklRgzXzEkyLP1bgRZsAiYZIz9ooqn2SbbE/sBbbqPp+Ek2xlZT8Cv89xW+e4lvnefHnohO5GpS/sjfvvzn/hY+/zr/fZUdu6/GcdSV/Co//Gwc5wQvQyd9lZdxOr7+creGUsVgvfEW4Lik83/7ykn2Lz/Nz5zj7y/z95/y6+fZHP0KX3w5LulCtC3X2R+PU5yPruGX4y27kuf5ygWeTpf0XJxLTcpfZz/1E36p+OUHvItneEaN2IXoUP48G5w/FX3KX+X/XlafdR5Bg3A5+p2f4ne/z5OejbN8P9q9ayTPZ/3a9eCeiibxfHA+zjZQj3ibc7z1Qx9t3OC32Ij9uRiEU3Gu70fj9pc5Gqnb+g9joE7yw7qe78ZJz8WI6crfj4dufz4dXep/EOf6bgyRDqiW8B/wRY32BY6V5sPr8aB1O5qr78eonuAgvM7LO82r1defiAt7HK97X3nNZ81VPZ2neLVno439+biLF3yq+Dif8/vCu2f47wtxg6/EuU7w+q9GV3td5I/iT334Ed6yVtDLfDHNlpfj8l7lNev3M37BuOZneAuX43pejan1RpxUl/oGHy5P5Nd8wvU70OAL7WNIdonq+t65I4FjKR4sd0pRFhOAhZ3ZpGaxMgxsDgtrbLkGH0i9G1bKeFeKkjBh3pfmCwduxZEf0JEDBNRALaK7Pppsr8GbNINs3jWQPg/DOvUUqOIoR9DSBR0yS9fbqImE9tTPvUpp1dwC+vKVPZttv/XTu8qPltmdr2wHz6JTpCJ2dEzUN0qBSrzLhLmJEwjNF7d85fD+UWLLJxRSg6SDMtm8FgbKXy2pQTwetMm3xSI5iTUZBPgGkgprI1Q0VN+ljqai7Top7x7qfD4w99R5c0fOXQXcb7XbqC2ya4ZgrFC4rYWtUXeqengsPcH70cy6dATYsGTGetKLZ7nIwPi+jfkOQuUesSRevuY4exG2UQc+xIVfTlXFryVMGMv/FjINuv2BU2JXmMHmUUCOU0hKUagho1nIbtpZDnVWsgQngwu2nqybRbreXhKzoxwZ9D2mY3iF+HeMh7afHn4qjKOnxUR0ziiZ6I5sn7FLhWKGWNfzsQ8vUDez9NUzig7iAI7g7dvSCvAOkyjh9PkA6qaaZ6MWyFenClQnVFY6haMYbP9OLv1SQqvMRe9xXpn5ecC2D48ve6g5tJARDI+taRR216PuLjk7gGnIkfeCYHeYoB8QCpPSa6QTK+YJ1uBsTLemwwGbxDaLqkbP71umShdT2ESNePdgaHTifu/kCHFMA4PWoaDl0FVgXB8DfIOJuHmR3cWYoloyVi1UYordetvriTYPjghIFRxGlHsQxNFFWl+fDPVYBwjYNkjnAkeSre1HA0eZOR+8lkICSA7QFgkrtenAnHq9k5hM7CLHtlapxr7UreLpr6e5NpxAGQVHqXrUfhCL2J8Hu9kKMDCMOJ6GhHOSrFReQQoVu1u3xsqDorhQJQ4/WJdaJ6dBg7ztGmvBX0x2cm7udkapxTjVCRFx1Ir/UI4hP2nsuZwxeLvbvgaZieB9rKSKgNJKyBndiwY+7Ii2Vk0HeuahlVR1nRVofzmSSIolvhakCFD1OwkdsHcudFGWC8fokNPJtsVgnVLbFUL6CfwUeS1oLbGCzyt1LNreuSJBPgKPURTKoPHe1lx3l6p0ShdR9JPjF5oFVf9+sucnoDWhYspCPbASFseAD7od6lHEhbACWvaY2AGT83jRgIxbfJ7pEOYzXLUB6pf9wmFFjkp8GDMRgEckJsA+ZmPLJrJsUHRA1Q23x5wnAaVbX4i5YdbCcarzKalNVVHMI+xgbB8PHaKOa6d3vcw8mhLpNhRGKCz1Rrt+jydtDsEhNia9wFGNGvDRoDQ22Sa8hLVVXJ/yE/2BbYq2yY6XXf8DiV0pftUkxgk35F3AMT0m/chOBKBvfZpScxARRzEFD8nsM7spj7B+5Zj4HKc6R29dSWlqM3Kd92x2eiEbz5Jy9wcStjgAT2Zzer2JqocbUDxmepezj6b/flkz+/Kt6bvDBvlo7JxEZrGGIroo7shmNl5A5XnAXgBmwCDjWnHNJMBxE3WG3nQ1gQgHVEuGsjGSbyOObr1NzCyae28UakSwUKp5hJ3j7uQpfKUfOEzkQVVsnEvQ51rJR3v3yCAKowQDsNXD/Wp8SswdZYFQ5Qw0QvFAZOEXpPJAPqxgOXaUvekk8HsE4BxLitWuD/ML6BSzQ6reO5BMR5b+LvR4/odUDQ/o8jokJz3cVdIXPk2s7pWl5JfcUpszdWC5qIuVgOOuE9kk8EsC/zbKBmO9hdpRbzoeSKeXqGxwwMZIN+938d9vzoXFcv45fBUxqh+mhlAlewAQO29t1dcM8RwDT0neU5V9sm4XYi1UwiCQg46EsxpnCJOBVOKx5EUCyiic61rZPFRRy42AR8p6ey6UecnCc7ArqZQpyAHmGnvE0b9ComGrksKRl7wbZW9hXF11z2yEClsNRUHZAhjqsKmWlPb45kuy/NyxHb8WngfVjWBoiPnBKFKEZk87J5FQ4piupgAkYf4bpm1ZJIkKT9XcnmxYAtM3qlNO2DdG9FGMSeHVBUoxUmo6YYn3MKFAFIy7p7CdVfQpbZFMrvXNp0OWIpZ3gnWrjI9KTkI7F46GsYG+e3LcfDcbnM1QGimRxSk0sVRZQsWtI2e4s2/ZgRS7pdBo7OROCoW5X4c6gk3cgayxK/TY/HLL2Zs6BA1Rx2Dou+4k2YPErOjfl+0uYWPnHKaKgjD9RGr9EtlrkxwujdaRQ+bNkKtdNQb/cJphGwBd0HbOpeKoI0KY8gcflKDE3wkrqp2uIaqo5xGaYE6M31jShh2fj/kyn1DBjRpBwCqkOkyzQk1auNDaglAnoXoKsdyKbCjlyCoI3lenJu5+fgrsVgSW0bvZcdC59/+D9ab8Mc7rlJSH4ettuMgAxZfpKcKy2tHNunP+IXFZDQMkVFBNhmKwgKzryAnn+oVQnhhsNLsOuFr06MmGv8+iAfyN3RGquf1ibZrANE2Chd4Ku9Mdlbtlb6M3KMcHIeZbo6UNcS8Jf97C+ht10saOdHvyrtfQQ4ye6jDFiPAFBDKgf9UnodxVJAGzdEJEIdAYVhksnEB9iEhL1FBK11XrYa45MaWhGqVNe4KGtdt370+xeK+OmfOAIgeod+kFcztg5ekwNQmbyP59asJwN1jMyhCgGC+ogBoxslxOhLwgGsJrdQ+nVZsqvNt3C8w5GE0T3PULibSC7sPu5yDSrPgENfZoyxd+Oc4GjQ2MJGGJaxYqAlHTU6ehB5J/70p+NjCQNvNd19UxOij4FqoTQIDZi9JCM1WC0BI+tOB90jgTHdwxN2S3SqA55MOh8pzq4TbXQkMuOZZFS64qCyTTRyRpOBy8A7gQGmBpBfTp+ZoFdkWOVL0shLQHLiQRGAp1SuV2IFUL8+CJbiqLjWoX+vnCOGn+YPyEQgaaJSEjVg+jKz1bsxVpSshGUBDeNTErKhzX1OtIWYg55fxRpxf6H+e4gx2Ti2pzMwG/oWyAcqxZkPtTTuZI8oICQtxZTUfeu9RCCtSJyWbE/gebpvvQLfv2LXvXFcYGrbot1ididn8F5whgSpMwyEVJiD70dBK20jxz5O8wp+5PuSDbT7xJ5/0pVyAlQeYUKrbwtivwFgsEq+yyT+JWlYDFCc9OMDZEfw4cOABRtEGxCZZViiAdMwB/nGIrPtsFsOo2dgf7AUjcGPQfqqa0IcvRd/XgXVX4pyKKsAVwkFEK9YRlHDRa96bm4WntVAnUUSTMVuH6lPCMpPSI/Im6giIiZWUVRgLoPoGWQmFnzx6OPbIi4V/ZRHX9O6CP6QOhroMGE5LB604q73Snls14qvDIpOVnvhQknhwmpnZc3l7OXjsWJKUFlLPkP3/Z1TrLvhADIH/ckbyCh+xRKs5L6zKYf8yMVfrGCJHrJvD8TcvIRCxUW9w6ojLlsAaBRhqo7BjW7zqqr8Q1d+m5BXbYVwAOvp5iCHB3kEcyb9MjengjQ2pRKoZl5FOG979TqbEzNWlcY7c3VaSEVI/X5Oz6OJLruALGpnxG9CLN76zGtnomWmfcFrUxp/BzPtGpjmRxaOEoB84wmio0aRgzbLOn5ZJNAbvAFPTl+3sJ9jrnfYntqWJvVGYxtIGKslMEzeDuurKxgGLPXELeCTBONIIeM6EYXTTPFRCy0l3Syqud2GhzUjmWxJYAPfgAitzSuOYuI83RtuJfMSkmQygyAYG7KRrug0KpJRQ6dbAVpywmFNltQkTw6duosLF4YlWyISl5mVXT7r/BSFtcVxNnQDf7hfqCyaHfv+tzUv7AAwTx487dH6rhivjsPMi+oWjgMPBuKFiv91a7xf8KWFwZbklTJ9ZnN+2rk+CNBjbHTAeAiNxgy8iA71RE/0HEWzxcqr4dEQDKbj9YrfBFyu70AcJPHFvMNkqxPprAkRBuKEoHXBbtVslToN85RowIZoNwXAtFqDGJa4F9P0FlYUdcdNI1vPF8gQ3h9r6UshCbVeTbWaBRDFb15OlUiQBcgEEmCwc5xyRWZj7wIXPICFzl40LHuJot7aD9IpA4/AOADqC3yLWKFQ+kcOqVp3hGNmcyQjwfiqED794iRKWsxW6wTYpEql6ISg0t9UT2gPA6Yr9xDrX9SgztJoHUittld4EwFqjw1gMHCJ3myb2FWWBiqFDsHbNhkAeFnzqxGgi9uRM+15ZjhtGr0JXUO6vouiUXJrI4Zc/jqO5k2xvJYdEXYdkAd9fqLxK8OXFsF1GQ2E/eC725XmmbluOL7La7iSLfUyu9ohxLHRqHKdm+iiAsGOGBmg2I7Ch8vFDMvgkWA4EzuTMlZGqKwHcqYefgYzawtpSD11NGk01vhVzAp0LXFMwBaHGqCw/imVEt1eHB0FGQQiJr7XOiln0BqbHPsBbDBGDybtQ4kS3slJeiKvGU+FgWhuBQYB2w+TjblIowhXfXRgFd9zwrQgzyP2hF1z0Px8Y9jY7ic1KKrwKbYbajuw3U8DHTutAOUKNnrfN14WYPFLdW2/j/8m0pJ7OUEhzYSRAsMYD0isRSUhVAsxn5heOUKzDLOTbTMtrcSj763tCNnd+QviYaOnq/WWb46KvsnSssSiiVbVoTEh9OCDTSnRKk7gbMMRIjWTjMC8/oSNj2hZZwAgo2ro7K33R1Jk2SICgct2q/rKZdLfHTVzxphtZ3yKMQurao1n+dpSUonXuNlEJ3gDmG2rvttYjB1ktnPQpB3y0CaNhP1Qfp20L58G9+/Dd/9Den/+bP/ubMx49Q5e3i//kMBJRGCCsR71fqsElLQ3hOg0jNEU1UNbPpyr2H707Wav+cfK/a1dCIpGmRQU2yrJV6X+C1hOoCi5PhL+a+A7NQb3SVMma3eI6A8NYDdl3h2YJrVg+od6BrGaw5+CrRrqsE3mqYgcQXGtXjYaHDf0k9O6impYoxq+bmG2A/kvK+7lK5oBq9vHp2P/bqGnQKEXqXQn8JbqXeG3bNgUdrQocOtB8HLTXO/KseLkNUoYpxAfzKLv/6RTRdSOIS6Pdil2m+zsPKRdYsuztszKvNbJ6SDO8GyhVSYANHQhprIatQsUkqQxbqFV2mEtGbUpf66KS/ht8uQIPpw3c/epYqStf46hPURILu1Jv28x17/9KH71OPKelSURXpGn9Cx+oD6ky9k9SkLrZ6VFJy4lneDu2kj06md6GBdYXaSleo2nSZGli8Unzuwx+6dtU1+8xbrpTkClHStvroWXsHeliP6i6TjtRVV5zCb7i+ExyDd/mvNL2kPXU1KWSdShpQ5300oJf1rhS/8AleIb7l12zXEipPONujNnJQmPrA7/ctu/Pz/O6V+M31naSXhe9Blao9L67+fY66rlmKYlQQ45mf4Fi8w7/5XXvtUbxCJSo9kXeo/SUNqbfSfVzypxZP6wnqX/0wnpt/7kp25Ktx19Tc4rtQ85I+lZ3vRWpUXXPFMWhhvfvhD9I5rvGJXvTrfR9j6opWeB7v+dMPVbIr0h/Ds7QxxXPjGKTxe5/nvUT9sB9QPwtj8nKcF3pmuBZ/UtIk+yBmjl0hVMKetaPpWT770eOuHnbSvnmSx3iLCmvnqSx2Kh3v/Id/kUaD18I7iRlx3u4cumbP8Bmdx7H8KZ/g3cbnNM+u8XdX9bJn/q5mrdTNOO5X9NtH3/G58S7n0UXOXWiQ8fqoVvbtpFqGZ/se7ibN+3d53Zq737VrOmVHvQAVrRtnbrzx8VM3XsFO4apg+ikNsatQhZK6lHS/qMJ16sbrVNZ6+uMnobRln5MeVqiMxXcv26uvUK/qEb328ckbF/0bV12P6yyUy6gg9Rh3rDP4zf49aVcFta43qB+Gb7xF7Skoa1HNyt59287/tP3mKmF2ZLsPHMXO8zZUtahRRi2zG9fsCs7gW/aN03wNula6V2iGnUuj8bRf35v+uZM3Ltl/7R54HaeSphr1z/j5n4YeW9wb78bHjepiUi17VLpmOBKU1HhvGKE3eD8/oebXm7gWjSkU0ew1KIT5GNj9nqT21uP23VO8Gil04XOXOJKnbITexB1xHKgCZ+/zbqQkRsW209A2S08Bn7tILbFTUDKD6hjHHmd8SnpmUEfzz+Fsr2sk/EnblfrZeDWubOZj75p0r6Vn/BJmBlTjQuXMj3KOz5Lz78arfr8n9RSpqPaGXfspu//XbryNEcZMtKt5jM/tbXtdM0xjrpn8OpXO3sJz19jbp95wpby3MWOa26bHyk2oIs2r1QgrhLe2oIXFzXrDX9W+TOBbdLkWFq7nQXenrYIlxhicf4l8mesm/BQPVvV36tGA6BSvsREWg5TsEICsirii7W7ZbC0nVjloEV5qXFlSGZyRJHJmXu724n+g1qoxk8zM7G+xSXZbjT6YZLo6qwdagE8lEQJEDg7wERAH3FXP7kqcx9vheNx92DOahDUFNIQ6wkOPIqux90uen4x68w6/2MZdsBzSCNOzH1LLDEJYkgFZjS6/HXdfm8lq6+zN4pfu/+I3qLH1jeQljSsV71Ygpt1WepZX2mrJlnlKNlwIu+bm7grapPrFCCqJdNNBFJWX1wcJyaj+y4Uq7xaiwq0/1JGoBi8daZn/rSrhlSehkqo73BqMXeQoFGSQduiNl5vJENBGFX6Ay5neS3YU3frQZbLh2y6Pi793qNPYRTysT9zePu6kMtWDer+LyhQrS9GyaXW8xQzfWj3qjqqkdiX8GucZnlTUGT2DVVcNACONV/xSrrWZ25MinRYp0g3GGztFSYkMqWHXqatDpxdwgu7/3E65Nge+zGQvWckgPEf7Eo6Z8qQR9W/giEobWvx9eGOT9YixUsMezN1jkwudkQej+caCOkTwRMX0FbGtVWqT5YIYFFQo2bBavWvtxCsttIiZFVEea7YMZQqt7u8w0LQL3re4qSk+v49uOCOt3u0VOpIxr9Bpo8NaSWYO6vEy6q3qruSvIvGhRdYmF5SOYJAbHUFI3w1YTrOWcpUFOsv7Iru9XUOhW2Ura7EFAAloKoRmwgE2XoJkydtRYRyo/rRQHqib8kyFGi8p9zggPAAll3vYJqJA3WilBbi2dseOwzbZOEQwZGhAihBzA52jLzQiM0lKVEUwh45xnlcDEw9FecXSSW+wN2VvQZto/fF0f1vsg/i6P1i1aeXswOibYemBGzsAnKCPmUgwZc3cgNCIBDl92SZLjbyGme0i4ZwcEobpqV4SXsAnhMCfcbcSeZOQlGa0fqiztNLCG73EESItPlM9UkVlfWUpFfiifSLsQ001KvGWSQ6kHBw2qnWvHXi9oCrUpJrJwEVtaPeCC7w5qtX/rjrc2p3UwRIwZea+yX5UVo+JtsSbLeZbCDbG14vuLrJz64EDv40cimterLSQB9I88ZQPdfYtJiGhtOYH/fv6UaEqomEfahOuSoQE9Ej4HdENs8KCMmfUeuqVo18AUzRH2208YOmcv4rY2ZazoGUnyidVvFvDdWub/S/UKodH2Ldsi1STPQmCoMchlN/Q2r3vAFJkjIB07st8JlR4Z7XF6TP56u2b8AXHN/xWyrcsD48vF753Rhs8ZBq9lsJ87rbrQ3TbukDhADpV85uBp6xXtv7HeCxdylWsa8xcRmBt2rIPWj4oTFARxf9dCQwqHzcEJA0ZtnL9v05q31iVD2Nylx2LJkItCn9iv36drTWAJTsYG0ABNBIy0UDEVC1Xo0ujAEQPUC1dmDXq3iQgfnDOOIEScn0xaeL1pkczYz4uQvPRiXNT5k7JyAfU0NuS8e6BdSwJQlczO0d0KxVD6OgoamdYb/YXdhA8LC/u0mwq14jUuCvalJTcoe8TzTyQC02oyAKNXpScbqJbqBQyfEjUEw7SfFTjSNWzSoBn6nWWKe8ZBXpziGxKQ9FvgO5Q6jYqgNCG9xZiFluPmzxcoStk/Nm1wi418DrNgCflpatkAMpxdOmEYg5RuaTQR88fQnbYLJ3jIAVSDPXRB+6LPkkUvxmMAJJry1mF1EWoJuINuyhSah8NATUyljktDyapw3lMOA6J+cqOGg9LIAmhpQebaLRhBwtCNNXCKmGW2rwwpB3dGWm3ujnPTWNy7Z2LJjQrDgs+pn1zWMvuALblhblomwn5mEAosFmcK3jQIeoLfiixQtVAieYS6GpQNOWUD+GO1ikriwRECo1UbHUJHtq4Fgd1fZLL2kTXODvCXWr0hdUU1XiWxiQJWvemUkQR3DXkdnrT6AuGMinigZK4yg2375i/Dt+zr22J6iCwWUDCmujcaustmvfYg+Xyl1PWbGHpiOJeSqoUIkAskvHl6CmGJU2QIqtSnRZmTEwBDGhzkBJ6+prNdUn/bVUtertweVzUHwbc8VnvpcZBXDo7vkoNV6BVVHddUs0ub0veJDQ2bCs/6g3pOuHf2VX1U423BUtywjjZYm4u8yeTZGq796yIu3DHDiFratVlZ+0UKKBXtn19DW0ea90F27I5nE9Nn7BoWHmt+c6RdncKbozdhQpVnJ73TJITiU0KpQr7s90svwCL7h9w7xV/bdfHQ8hjrRrvVhLPiEZvmBpJaLqXQtodODEBAo0CAdG2vmftVEu3H7u9+F+gCuBirYT0cNn016dC3VEr0L7mEDGs327rr7cF/SKCILvQxaQ2UFB4Qq7E4dZ5go3y/j8BseIuQlVqYMloN6VPsdCGPkF1seu8fyYj4OS8JtRAaxfL0InLtTXsDSpLb0ZGoEk1oqKNxovohhp+qvCZrM/LXQywN7ev2INvjSbe9rW7WqOLapW3XZWh50RBm2DqFo3cU6AR4wMQVK3FmGdA50YLkroccJMIdVurWn6enfWL9xxTD7jDrbcNB9q9lTtSymCBESAdytT3F+fCNFxjRVizBMSxLYq1bNEXCzaWB6+VUIv30L0VIBKwEx+ohJrpS9iP7nCLrCTc0Cv0thqJtbAt6GjrTwaakDI86I/YhZWDCfOCX4q7dzIuX1O0vFLaPu2umlGsqSbJG/r3FLqocv4RFWUKxWi8IYcQbakKTkE3lHZrttXaSmiKtWl6xkE4wwq3wH68H0KoqYWcORfu6WIRqHxdgxM4aL147HMACZRdpUPslFIjpngAOCdCF2DKtQ7nwspS2lkrxecMq5OF+Z2jbXzRMkQbxgD7WadbLFJmJFp0Uco1eW2iMnH7ip7aUJACIFkOXMZ0NPsTPByeQkvPW2HieSdhdFCJXWTPLsL5cGi/C4U7YelD5FnOtK1e4gDYtC2ok3BsAvWkDEdREmNo/xsO66TM30NP1ejgvEbOK6+MgkKcGbviE3AAtitzP9W1+FhwQiwgSND55lgbGgWIjgo9zkhFSTjNkpbf2QT5CDXvMkWLtiNiYlHIRz2U0TK1hYT+XsLG1f2ku191HQeJQEU/OXcS648wNmpb2HHvYQ2ZPkrICWdYMDjpjWsw2qRt6YyhOkg6XCKdBr3uYfhc6p0Nu+66mMQzdgtHGhG0pnUCmbtG0BAFJ3xu91Ohgn23qR3lvMxx8vu4pLEMgMgu6KJBd5AkPV4dVSAlvBlCqeZzHU2MoIUWgtiMKWfEwM1majghKS9X9lJSs+ylGrGFUdROsunMaQQq+kOakwzY7EmmbhNFWRzf7vWbg4PNQ+a3JJp74sIfHx9JXEMXEeewAaUImUYAPkmnIii5RXHPRRMO2FS7HI9ROJyUoC0D1UH92+3KzaCyatxxWpIehLngwcDSM4en8aXb3HDjwobjMKQ2VbHcUvkXFKgTw2PX8FBVDfWMg+ncwAAW7IHeaCajJ0jniAfx9ryiT6Y9TSZcCcJcdgwulpSQZ8yKeToN7TLtgiAeiKkRHWXpSnAikmPt40BVf8BHqHEbXcj/a4d9DkSyG5SF0BoEGkmdq1gCekuQh970jrYmsbelv/gjtOmwsNo6nAdaTgVO6zKIDt3HMwomgwe6Lp8T/cdngI5A0EJJ3gGETuVoDvZtx1imROAKA9ACMuaUdRVIVH4f1tYAkQBmlkVognHRoeDmLtiYU8YxYaJpAoaEUM0BO84nXlpxNPL7Y3JMnaCatGvBMpCpMMute2Muvd7Q3opkuxmFDTGKSpv4YyWs9s7tUdi9dw7j6zvZhkD1ebdcmFeuCzp8ztHhmh8UyfdWKoJjtqvoF5vEKAEhGdOoMDFib1yvzRShFUhtxkZxEFUMqRLYMjKK9XbPCtk8LJQIn/dleZqCAo2DvqOwPPpdYW8FMThaBY2DAQ2FDkEov9kejE6H9dqonmyTIa+trnaFVFvSUBV1m9oSYJl/AG4O/blHVaBP6UDqXqMlNowYhADdvCKIV8YlFDPqVveU/U02UzxkwTK7KmPSKodlx/anvr9bTpOqP4iT2iCBvpuoDzy0PNqSmWIyrePGLwaIcGDIBddO2vjeK4Lq7jRB6v6hKADPj8Bbx9oP+vdgBdyHnQgwMjEwo6+rDR90olA3sbhAk5YdjiOy1A4ZO5l2XuYHyiLpZmN8/RqSzmg9dnIB9c+pm0dXCFPdp0GgH5nGovRGu3h5ZanjjjYfRy0GoNs+e38bNatnh6+WhHXfhVroJtnxa1MNjcP2HX7qylyOIh6CiGQ3H3x/794xFvmGp6IYeK/Nqi1y6Yk46JLTcEYiFitEVkFsSpgf189XFh8IjYQZNCbEgXtRadtoBQHwHd/HUxsOwO2LLQiYElHKru1dam96VoaVRm2Cgw1hWt3R8tzKeHCrDcEdZlSB1lSICuc0qZ+hquwc0EIWTPOO6qkq7/jhEfNFB2GKxFYh+u5OIa1Rt3unVMaqsPZb9ZDr0nOZnhBUJTX8XuGOKWGo0rf9Zjsk+2dzlnBIaaKKhNndkqUV+TAME55mLzJASYsGk9bDBNu7MKiIX9HMIhHjSs/+8Ak5HFS5V2WQ635oVY+7q333nGpJT1O8GDKKScWHESCrL6nStDbuoym5D1QgqGEktuRQsQym8jAz3vLeYKAhy9vOEk+R3W1W0F9NNEpswg2WJURp72hTJ9GJHIuhTfW0CjML3vtg5AvHPSwKaKpUlHLxqmdxy6n7wGE+JJMFD88bF6c2O7egv2mB5DHZCxvYg0Ha8MbXeBZtgAftn76Pg3wVhWgtPr7VDKJ6qFM4kDX0ybUaO+yePc67En2rCC6ZJ8Io5mrRjvT47GwPhjVKapn9aavlsBCNWCboOzOMjADITd4zBAqz/gjcrWtmWBAQtnnIU4rg6yMF36tXtagK9BqnM8L+a121x/0qHCxHZJM83WYEUhoXO47kVKkc3IQFx5rw5wY/PKactlo+efk6nLuer8JkVdpEUsACYKgfxTod6JHahImRttqGSfT+9WurWLUQnW0KTNoyWh+N2yCTBY5ENg3/lByX6gjMf0rZ2mOpUgz5QOvxt/pOC87SEC46tJ4aF2FnlE8BftozEfD5Dl13J6+IfIYJGqwPjJk3gTL3IMFEsPt7bwwoOGB+c8VykR1nfivdfE0nx/0SLCf3ViRPw/VG5rRkCtzJh2h1O6ZLJGpQJnLqESr2NWnnsuolHESSvPWyOuJwv2MXuodHLJ0Jdy1DzGyRK5YKCH1vh+LuV9Qi6JDIOdWShCowAt2+Dx8/QGhyL0nPgsml/JnNcjjG/oT8LuD6bP9iKTlZua/qco61GS11Z6Dz9EAb+4fGzReKbzAfVTABEy4QiyHDSFBIZoZmMHghDI0S4SK6Ask/Q8uRnnLFCF8oQiH2T58S+Fww5kBSk93vpD8oojDniiyNChxKotouQmuJzvYVaQ/b4O4vuVuHoN0DJgSwSoc06mgSmiYLdGQV0vCzSlJwGvXV/S2uF91HkrUXd4rTHsCoWHpF0u/eblP4bsER+7cycwuUp0edzdytZLYXXQeiyTMudX9PBhEat6wdF+vGYmhSwJQKXsjdpNKhd+KTdPpO1Cx9FXJItK/g1z2ZUBjaKpCk23VfQ82C6F2wvwXtJHKyDVaLZ6fJDJRFgo84kOXwjCVoje1muXjEGRoWHvkp1BWn7Lk8CNM3yrjgbGaqkfAp2/ZaSs2rU1w56TMkoFnZcbvjwBqsycRMUmTpPleqluwOXHGDhRNFq/Dw2tW9wBF1GY0+nT1vz+C2etGJvJgTCea4Pk2y8mbeBgXkelQGY7lX9aGUNOO66PlySjokqqMjzzKAPPlRidNETW0LmrRFWHnmlyto2jWyOywWu+wg7fpm2jePtcVzXqTypE7KZXvS5LovuDv+VTVCmjoduunZVO3/1bchRJ9YMU0IxXVLDZ8oHq1ob6sTiZLLOhNE18+Wmr9Ok+kHm6Uk7EIN0zUO6B3e8k+aINyAR8gmCtwWAQYpt2sKklV2dKFDooMUz+aue4gy8hQtAyeRcewiEbEin90tu+5a4hPrUM7VKZJwr1mbibeXbxCOQqeX8r2JG9NI7mfdOSeTbl2KyEO4AEJDaT/yA7bKu+YLPVhCez14Rc3Aa6UcXy+mQiaFpeYNuzew3Ea6HGSOzRvCHYd+JEcScRYfAKNbPSEBbqHJQyqSY26U2eKvfTMBm+lZUNTGTgJxsZD/ZjZDsg8HO8XBpBCWIXwbpIujP1a0WoBFWVpKQk1z96knrLBEgXe036Fb56WKg6lxp4VG3Qrq6vuZTqPFDC2zDGAaI6jOuS2+YClLN7pwJgiI80WGD8quf6kFYK1XS0u7u7uLm4PBZs877DwcbYUH4S1nVWzlnkfOi2TApyyjKpuVhlo4JIBtD976u+ZfqrniFMJ5cUEZ0K+tXhLn2FbzvOOPsKgQp/Bru/U/Z8eMHiW2I2b17+4XDrSf2Z9hqrg9o+q1Zs9rtQXBoNXOhg/QLUm+45Z9d05YTEOksEBcxI6npFL99xCyKIOR70BdCH17DCZ0RfRLFW+Yj9s2LGfXN2xrVaDpCbj3bcL6/qrfb6a9HRuA8nDrFi+s4Cm7Jh+Qw0sOHYZKSsj8Ay1iS6dnP8sWINObZoi0OYcfCWid0J5lz8KIwyH2leGYmpQIr6WJFUW8Q1km0Ftaq0/xYnfcRScdu+BWQbLsHRm0D/6WhQyGE91IgVpLZXS4de1FZKDIJss63loWrarMSktZ7dxhm9c6213XpdAdAlpmaLuu4i2B9JM+qN3j7fYZv+gmG7eV1EzNnmlq841NB47ohrItrWYYsiqt0xK78vxXHtiHOLrfZXwz72Aj1RMXiyzACLTAetXJUEbCsrNMsHyEucNdRhoAyUZ2L3nnDGk8NkGztSxaqrLxWc5K/Q9OzA0OScSxO2I2P/LyzlHoBsixWMjQ+f/JdSUdP04ddSV5miK10h51Wm3eBEJ3JDyoAJjP/qrY8onHa+MJ++BFh1a9GFjJbfTDjnbn20O3qyRNHOrYV835DJYt/X5HOzEjoYZHo0m1/ADZ2ktLd9xrI47n4s1WpCOlohrSxGErMvRokVTebP4cya4haZdA2+63/hCt5Tb+y/79q99s8/9zKfRgJ/cEGlzwllKKlJ1LrrIzS7N8OPItlRWcD/kElVkRQxNIO+m3yqBs9RpNTUJz0cYk20eK1Mq8YHW2H889C/KXAishtVskZV1PTPJUQhxiv/BuOytZlfmLE3q4Ckt3CBjtIbXrCdwoPSiUtOW2MLfYRz2UsUkL2KdWoKNL53Jsp1JLZhyGx4usRHFr6k5u95vxXW7dBgAuPdN2fyRsxmPxTaYDlXe2KAB7gVrrBs/Hrv9LScm7U/SxjBmgNE0LM1yvbosu6vb51SybmG1Tc9ljLJIKWGrRIusCYxbo/mwtWKDT2wj7nDnDRZyKUNzQi8tqH1MVdoK0YLHlGCFQj7BXBOpS6TVbdHy7d1B7UKuqAVVblC/VsiWJpzKQqtIDy8Gzqem23eGXbHtrPAC/P7Pz4H+EuAVyWPt5koOjbOvY56EQ1xdCWjO3mMOoaiaJFrT7Q1NywgSaImngSJ+H0fdSlnko2EV5q+7aJFi2R2rHXyMOV7ZOSlipfzeeCxL4HpDi+9HZd0/GjvJutqWUyAVEYqdOgBuUJW7YyL5OXUfVzcfWyb0DdAfnVFrImF7N3J425jVbnlI9VQudoxRjiPzOW8hbsIfhvsVO0eqVDDM7g8/HLfO5e118T1vOmZvLAnsk0nqhIdcCJYu7vKpxJ6Ledo9oMpi97GoyxXgYt+AxLwnOGYqzRUolc5p6quPrLQzqYJZQLLLUdpE6twpt1Rs4OST6I1d5ftZeP1y04NYMGlxkaIWuUFu6/tWc0qJKHfOra21Nnshy4XuqeO6sr0aSmSmbbrdqsxgtQ62l9ZS9B9BiZlx8Bc1S7M7D++h6Wppn77Ntq2oh1PCJIneb1iwyemBztM9emQus2banLevtNt6BpAinP+EzKTkEWelBxAvDrBZFI9e7bbKG72QbZJbkKxTxcyl1R21WV9I1dvk9CqQUSdbtaOYL0Ylzu5eFU+2kLdDINz2v0dbE/lLrY8ZusX/554nzYrJnpAmU5X2LUDSjYhKPQ5hKw3H2ay5HVSoA4vcAnDfbbLep/aIQXQkQeDaydOQr0HcBU7YHmvDlDj8gDIJrxNmfBP5XUv94gFKVsPxlv41k9s4FNM9hLal7NQ54r1eC0uIdwrwitJAdbhXr0MSwhOD/pPEyX+CloLkYey5rtX6/UTFCqkh7jf5t836dQrpIQ66j/qBIdbdRFRTR3jTsHubqaoaYZzHNa3L8YvRhzHywqGGoipaAgBzMozCbtQDE7MugFB3eYm9IL1vxhSNZ3JEVFZxrqNWM09CmU4/ZnUOmPwUwMvt7PDiquK/MXBXZXqY6navPws8ovHYkMI9SwNRgc7pKqrtrr2HuVI0FvX7F0iVxNQ0Kss73oZlIvUoDLOQlh/ksjjs6bsUCURGN/dcui0scfrhqT0IYH85icEcachpntL0m82H60hbTdaZWwlCOYizspcySjCpuJuZtJI2gXa31tUGvu5y05dRVE/VewoUSUQk2raXX1eo1oYwHW8sWXy1HxdGjY64Qiqs2sY4z9D7Ncukqe6zhtwh1zudIXXLdNcz8FrEGMdatL702FaZI2e8jKZeixqzwJroRm/hekNXfCyhEFx7Q3N8mnDO7N+h7pZwAmQy+Sc5M2BZFy8K9BDDRUXVEbXYzCqP2L+8yr7TvMLgUvrdybNzfJlor47IHF5VGk5UptxAZ+MFVqsUIS80xsY5s9oVtXM02p8R4cn6lU2SbjE7fdLLcjvZH4gXMrrYxS/SBYM6BNbSCE3YAI+9OtKvBdcaDYSepghP5mpDQOSJ5b+i4otjgfgvhCqpes27QeAeRsZpQJ2ZPo56GMc7eeAT1AI2nk6NaTh/toVMBGaN53kNUYcVZuIAAUia+kB1NtsJ5e9jrq9DBU6/d8GOJIC5HbKYZtoN7qC+C1PaXFcFE1mxYQ/a1afEURMzuW6/aOBJ1gNBfw1yKOAZrU0B2zRwWFHYjng2er2OM/fgZ3cvtpFplcNNJ8K02aZWF3XP4PCVIpTXLLu1Z4YUmqUGvOAQ7Bzqrrea8lOTUb54EAHWkZfxrN+AyBw7MiuJTEwj80Mruw6qHqjoqhOvyNrCoUvWYtIMqFWGx3qJuX2cq+IGR8/sdx9qBv4oiEOKFDKA/p6MrhzCIZslmhYCw9PzgIUZGCU3kXUo5VmnPXQhFP66jBvg5taVosjxP0P+nrI3aZutl5mhPC3ekkzwY9iehqFiuQzD1illC3WT7VFJ9gOnwNYsENOFUdBnQTKeX5rzZN5KbkWNsvQTCwre1kbNtekLk7LKnu9ZGYDSALnK8LYnorR2GGusk1VZ9bLn4UyNv8GjoT36ZfmkwHnNdYPVj8s4MsMHIDleiTqYqbsCfnOnjjWnpE2DcStb5nQ7ux9f6QjuOTV/jutYsVG2E9pAFU+VRm11mhjfEMpHzIRsr2x7y29jynCnhGZQ2J5n5mSOmZ3xjD2T6lHTW6DbQWf0yPPrijm1Au6MeL9tSRHVxIflFrMYXSSIZ40MzUm9U8xnNeTW74Qx+WFQJ4m8+ibk+Yc8T80q20cnb/QFtDhaNfKOwOFUKcOx5HW1BbgtrWf5Hfeq1nlNfaXiVAjXRnmyzY4TXWmWXxDxcj8ikN4WwCgl9yKHhqTice6de12jawMxniexWvRl1CvdzYHAjb1OyXpOGhWvW7yw4aMTtOkeF83ykOb4L5sdgO7FEQGyI+NdZTL6XJRuyyH5n43FofsMPb4RWSLHqQtB98Fwcck0+dPhOzPNEh3FxdAuqJNBuaEZgDchOaiS1iY97ngcYB84i/PqmpT1wCFq1i5rtpFvfL4F71ebefcWW79RUjAuiBXlay3U/yUUob59gXSJgjX29OwjKhszuThxYxxI5yGUae7U6L4i9fcwWkWyX9v5gm7qdmUSetiSgy31vooJrgqfTptCOg/lZTZXgbZDCRl564L2bo9Zgu7t8Y2guYHzauOkBL2JPxfCuBMldqzLtn1uX/o//vflP37D//4elzWrf1xEJ7BbVN5fdJ+FeDkJW0skORAkaf28NEpkm0VuoAFymOTxC13tRCJs9GQEosdOT/yNblOkoQSXa6zi/v6/KajofvkB9vYtU2nvxoxMffkB1witUqPvvf38/9MWgyHXz7Es//+n3Prly9ubzT6grtP9+9ZH0+80Xnvr5n30XzZefvfLJtWs3z//Rze998Om1F37+px/8/IlnPn37Lfvfz15+/5N3f/DJlXc+ufrUzT/59ifvvfCzi+/87J0f2id/dvb5mxef++y1x3zdsQxuIzESzCB6qwBEsD7wfJ1K5WYimQfrsjfuIEADXo/jZ0IJs+yCQ4njX39RTZnj9UGjznTMLqPz0Fr5YMkmy0KBlyrWT9GDWccHMsA+cXe9NqI/zK7D5mpLicF1NydwXgMnEURx1/Js6ij1N9TBhMJme49lIDNwHDUMwmV0B8rTxn1Bb0W/m11Mv+NgUTur0O5uu3K4QuTrBjlKJFo/CxySMvhAW6xF+9GSyn3QDIRC34+obPgIlP9aXcjQ3fzoGalJQv3PtRhb3U6oS56g6iNVGaU+aUe4RP3NUCsMNU4oMqZzffQs5jBn54X8OK7bSa1BqVHGufn3ex++R63KtzjzL+OvpFwItcJ0TPsUjvgmdSqvZufKtBGpr3iFmqI6Z2hiXkrHv0R1xNC2vML3qKxpY/eXVN2UymHSybRPt2P4KHQuqRn5jt0v7gWKpk9BNdQVOy9mWqEXfYTPQ6ET6qI+JtCgbNUtL9ndc3zsucTYQL3xAsbV7ugdV148TxXTb9m9X7DXXAH0w4s8ygf2vW9lGpKXsns/z3GScuc7riJK7UmqmL7jV/eWdFj5xPSZK7ynN11HFTMAd0YdT+pBSi3zPTvDNV7BFT+OP0coV1JZ0s5td4i/n+AVYH6ma/vwx+28lQ4m59a79vOkz5qr2XdxLx9Qf/N9KF/yKV6GpixnIO/cvvsBNU3Pc3x0vdJm/UBz3Z7XlaQUi3c/cB3ad3kf/pmZe3k/exZXdD7OuffbOcwzawZcifVFfc6TH76YrZ13pRELLdGkonqR8+g93B/vtl0vlzDW9oS5vjIN0EutRqhdy6P89AW7imelo+prSgq3er7vcQ1g3n7HZu57XDcn7Ld3XX/3yfz6uR7P+wq8yud/niqxJ3kcnPdtO1c7h/Ec23WU9FA16zjesD9/7lq2Nj5Zb+6T7MJ8PnpJn/L+4+qBjpbT0VraW0irR7Z94Nt867n45f3ojm2febFtQd4eR42kX82OeSbal7PNNF4/yVfORjftl7PrOcEW7e+3n8e/l9prQ1Pv1K1b573K7t6n4/jPxWdej37oqUU1G4j753UXL3gHcx3TW7f/sD1Xe1618H6KvzzHz7+RNcW+wtPpanVfb/Pfx3lfz0VX7g+iNfllXpgawcdl4/U/5eD8cPYeT7T3pd7Z3nM8jdJz0QD9tWj1firrL6++87rZczzvX8S3NP4vxZik+7Un+y7Pm+7xZHzmh7yRy+wa/+1o0p2e9QvxBE/H2MYxX3kya2h+Js6envWJaAh+OnqUn4x7PxPP6IT3iPexiueI11/n8X/Ew6Yx15Wc53W+HU/8JF9Mn/lWtG6/MDMffNyucuhe9l98XaQ5cCLuWo3dX41zvcA7PYl+8X79V6IX/JX2ltO89SNw/PH5F7KxuhQr6AoPezrG87Q3uG+vWWP1p9FC/UJ7Xz6qJ3g9T8TneXk48su85vMcyZMcpQvts/N19H60kn88sxuX4vXT7RzWuGGOvR5fuRqf12euxDq9yst7mZ/UfNP8/2GMycvxUC7HHNA1X/YL1nNv52oawydivT/Jo12OMXk1sw8nsnvMbI7fUQwpzpuu5zy71Sc7w/PiaOey+ZPm54mYpZf4FhvZ+/N6Pptjp2LOvMKTprWmtfD8rP08wW9prZ3jvX8Qx9H8l5F/btbmX43PvJrNGU3sC5kd+GmMyethyV92G4WvnIsL+z7vKB3/fKygd9txwFuPx1tn4omfjqfAK9GwtOv9+Rlb0T7cWGs+zy/5zSb74H/qWWjuPcPjc9q4lT7f7nF+v2mcT/HPK/zM63GRz/o9+meuxAO6kN3jE/Hv8zzCJb7+drZXnvfvwm5ov3slPXeqRUMX+2kqJL9FPelHk+rzxRtvh2Lzx49AXfrjU3z9MhWRW61mKSmfunGBat5JBzwpLL+WaSy/YUd4A7rg0NMOZXC8OqMh/piUsXG+j0/6uSICpqo0da/1+uu4JlebPu+q4/j9LD7rxzz78UkeSdfzJnWv45iv2XunoEhtx7nin4dC9+P8FPStnwiNcqpIv5S0yd+88WPeBbTGT2fnfZL63Lw2VziXIvVFqnZL8Rva3Kdw/xzTUMZ+k/rmj0tvXNrV1BG/SP1pvf4oVczP+Lg9zrs8LcXqG2dw/zgOX71MvfSn+TpUzM9gDNJ3qdHtet2n+Y03/PjSLdf14Nhv+z2es3nw9I2LPOKbSa/7p9m/l6ig7WPeap3bzGjH5Bz00P25v+7q2q12/BPxenqm0Pe+irkXzyLu8caruBqNgx3VFcdtvB6ncnmoe8dzwcx70+fPG/bbkzwy5v81+ws66Zd4BTE3TlPx/Yxf2xW8zrwiMn8I29t2osj8H8pgZtIGd+wpJTU2JyPPXvbbdyg3HWllig+DjTfYnt/HYoj0WqZA8SCzpyZa6/VofbLtGcfFHBucY/KblV9AYra17UzMCjgP6CB4zbbVUwo5605q8h5ammSg76Cl7qL90wkh0ZFK7SGfiHTYPajvrG9NIHsisoVXfg+x+BeVGSbZIw07HKGttRc0MgzE5zcChE6mwJ0Z6rXYVhWq7Fd2K8S5J2BwNBh3wZ8smYI6SUcgsg5Tz2qqdKiDzGZSOntgMkR5sDiCnlw5tLho+5r2pgv3MuHtMNnh8eX2wlupv7pq7sjnzuJ4cDeqskdsyOZbBBKVBVp4ncske9L/zgxEsuCZbJEm8RyS3LdjlDegwgGd8IYqJOj8fA/4hcji9asS1cRRKVmMUVaLU6O7VHws1LHPh4q57RBTcxFbYlFcZnBLqJOWt015jwwDlGrYLEW4HuwiyhmsGkcp6AGbu3dCxQ5w0xxv0grKkOaIA5HTCZhPUoa3ywkxGq4wBzco057Ueh1K4bDhJHUtHDabVqfGsvM5zPpYBoVB1YvlC5saIjs0SXg4adHZK19EWZGqvKAn5kVT1FN2WKMGa7SV3T/UWS4y4sKDk6YlnTi5xIXYJiwBqKzn0D2hOkB2bEECwhnLBGQjWnydJaAoR87lCe4iRw2HzkAl7YrAMNlYe4cCNbUvW6yVlAVcj9q1qrykYdNlpLIDBdZHnJcun0lcgmNEMv3ylSW1VgjTmbM0XO0nYJAkaa3Z7HqIikkj785aJOY7zpNRr3vTti2zrQXWXqQFMpoBCy1nyFEIlybZu95U6LVv5FA2v24+7YAFrOR4i0FObmj1/NW3mbIn9pnNg0vH9zdbdi+7Nhv3t3wUrlNp1LOacm+GIF9wFITwJBm+qGrl7ByV6S0WOe2zukuLcUSxN0eMhKmORrEjNrWE+lCOcVtoC5r20SUXwuZ2l2TyJOgRvc17LthRrgtl0EoyA94jXXivefczjcpEpKBUC0qd+BR0VbcG28irqw24CPylQLxpRsEk5ejPRuYs4WqktUOgYGJIEgVftT3Pmxyq9/leCP+oICmFTu10RYYR7hStnsXqTCE1AYdcfygeXtVVicxhSEdtb9kfgJKdSa/vj1e9wYlYDHHohF8n5jvAYqkb6BGAJTQhBR8ITU/hU2znS+1+Wwtbl30XWFFTd4c46Y/85oqWDGZmeTGnmUiDPXRFAqeFR5/xXvbOHQ1BDMLTCXksOF+qHAe66I2N1QLY108dg+gKmZidjvdmVToJBcBGBZJUEL6koooPZy0vEhK5ceSVVpbTILcGYW4zPGlvChs/HIaqsAuGc3ehfUuYfHOtiEnFx1Zm0McO/BYLXmVQVViPoVgcIiqStWb7VlQhvYUzD6nFKyGB6HPKSZFIVUSEgBEx55SIBPmB+W7VMSVq5ZqXNbvFeSffJLEfohlmJlJ75pZKZh+TRrZLZaM0m+rY4gYFMSHIMtvUn8buGBDOliLQKWKZSdssAWtsIhzOrX8L2rMr2JMTZzOVv940Z5I2sU/ShhCP7DzXbpH12ynaPjKueZlEfcqW+0ZJHcJpOKLJ0AX0Wu7FLJfALkdCddgZbFdsmQIQvJv20ROSXLSk34C5k8QkMcXUv9h1/IocD0/qcl1qO2wbGWeSbQX8g/Fg8FARGJ/QjuLcyQhDvemK21T+CLFsmU5o2cZUIMCqAAXVPpEJCEJBNAitZnLtde/nY//kBN2F3D1uQkd8Kq6CzwNXL2PDYAIg256ettpvd7aiC362XK7mGNVKHckFBzDQtQePZHC8haOz4YvvpxwVPM5oMeNyRr4HY6bZmbgfrg3MpQ75q/mcApqh0TpFJu4JQHhTN0m5Ksk5OxQlKONNyI8SACd6VSs9RMIQZ09O22xaT4gH9Ak3MacEm8QxrEIpM/RaTFyGDaTwOOXLGKZu1L3tIhS294uFKIJvdE3gpAgipSxF65TUjTe9DzE+78kM2+6ANQHJJuCRrFfs5AkIV6vY1jYVsYM4VqwgCryORsu+vZsvFvhAV2Xiimwb8drR9uRUROynCSsGe92rnbR6Vwa0Lw7nyzmJ7ONjLpuhnSnryFWUZBZVifIV85r429CdgbsfIgISH3YFKbirM75n4qw2ku2QKgfQfF9s1bMGG61QNLFXO1UCX8XAEwBIBJ6okDYgOU9tp4bq0/8P2X5BEDaiI9H0wRZGUCJgQ9Juy145qStIUzib3lYJA7MqU5dBJx9e9WrO3M4CKNATfR8B/yX080hoy4UGCnZGDup97HMAOTa5qn01l28S8tz9j0QbcL5yC91K4vNEFgaTQZrmMd3sPHMzsyqpilKtQShX/qA2YmhBtZ4QQMhEHO/36ZxTYUkH4kxvKinRDr35QCLbYv/JJqzZxCp6wntcLxkhCGoQ1ec5ndxUyYYHtngufyRlj6ZLYrRYMola2Yphw42IXMDUxSQTwydXcGg8nQQls3432o9QFwY0Nt/a6n5GHFpaFRwr6Mq5eEMmz95oVwi5L4/bZcXy7Nm2k/XQzJumplWndwqTHj/sc5JN79U7Ykn57I0OIL3pnYMMK/zl3PfPhO0oa9RuaMJx+mIPLrUDAgPS7cLw4RatttJWNVC10SjMdZSAr2UwrHiOsdu4EfxPIkPTCH0ZScNLTlbN9UClKZNTWUpvXPUwV/BSzrAtc34xQVrRmyT6dxB3DFKHQki7Ru+0VXahPX4sQYjNY7QXd+ow3g6uVLxJ9GLE6K38FAy+N/JjWsQJymI8Zkxmu+0EpXS8dAJk27s1rwyzXkq0VGsknCyFIgvCWaaHVQRm02a8mDiaFLlXw/AlZb96g7J7xDxI84ap3d7mmSXhpZHKOSxlT0KXzkSR4BI2GaI8E+UK3c2ziDJ5qXhezPdGV5GA4FO75c6q224SlMIKQGoKuqhhXGQEfozZ/UHQYQrIY5QuOsEX4PHsAtMmny8wl8GxcRB9AouWZkgSbH0542Ss5LyHadbNCpsFEbS71cg8ylwcsvxKaHfAECQzCEZ3iDPzqtM78OyI5I54yAa37kXASwvb79uLoFsgngzdmvy2m1VP/TCPGsp3cs5uv6+4975jxeG7j93xZReJl+dJvkqz9HuNHe+QtlCHqrZQW5uCW3liIIC3E3aeaZWge9M2IwPblzQDBk0WIphVgj7XdmjhufSgpn+uP9OnsxCORQv9FhU3WMZNtZyzF1uLbBNnOetMcVCRayiwJn0XCf+1FQLfX7SXa2T9O2uljUJZ3GOWeTrpD0bNQ+bxPbR9/ZWe/uhP+VMaXn/9IlW8vAyxrk4x0KxrxbdUB0mQUFw4//CWjG3Hs3J7rd6ccHXcPsCeid6wtywUt5Rd9ab35Fq9DYoKaxTmckTHdteQyOKJKKgoRjjo2GyPY3JFEFsFq7kTkUSsXLZ7AzwHH+8U5Ct9rOajfoaVPDm3egix4W//zuHf/sKd9r+VmdJI/LTJYdHJ0kwZ6Jv78mW52GTSQPOHZ0biUNG3qOLwaFROQTKYyfXM7DjLXwE2eDxhu4zpQmc116SYOfvqoVs4M8x2VuNbCu8+5T7yQpEn71d6daZKwsaeqXNhJikKWz1mayW/I5U/1ECoU8zNJNBT29bS27htF2K2QYgzWlKkto4tV3iRF73oN13MJCskJxG6/JnWPHVJk3BJd7o4k8cujuQlvEZPKi4mOJLKAu3fn4/9/RB1KtQJgyKVvjGguALnqUhyPmoSk5p6zeQnyKBKTowGOTFpy5a5LEXF1o+J6HjdR6mdrTtks7Vb1swKmFOOrXHvdMauw9JnWoLFTGnFjSQMVHAR0/rLFR7M8uTliP1ZLzh77re1PSXsaDOh7tzKTEkiU+oF78G7OOh7K5piXpkhzSwxyNXyMHyGus0lgQG9b7l4sFmsu8Uhm/Ftd4UDB367M2NOC/GhjliwOQCIndnzSE5u5M5oMVNhuXWcp0PQXdcuNGWzMUdSF5chZ8+2z57FB5ts6WSNXtm9i+YtKuNk290huzW/u5j1H5uXyz7u4p/RaspbYSqVR/Na7kIxkzU58nBle0/0mvPS+e+jidNgu606wUdB8Y8uCQNraeIFd3x+JgUG5cG2Q1amj5eKI8GFa0tzLHrxvm7RSNzi+kNmgeZWoCJsCyjFq6szh/G+iR7QzM+UyPfMmLDVmYpSy67EtWYd+7DV5/TkVQk7R27Ic3Nue9bL0RolqsysdKu5mSg47pOVgv1LMwnjrK+dGkFmlmhlpiAbgaK6pxyr/9u1D+zUf1D/t3eeGCv907iT7AuPLSoPfv7ATGlhpoyzQofR1YmqbtT24X10ipnNaW4m2C2qdfN8m7qUNLC82chUtWoXGM+VmXiGSi3UlQ2HTC44MqM149JoiTmTbSg8vvdCtnLKYd08l+5PpTMTuM6k3wpvAeZPumnfSGLV+2HEgb3ARCyituABhNuXAFUIvZFp7YRVRJ8tvcDplpjX3rLVNtb+YNwGZpioLdMTHrVFfVA2cdCAOmpGmbx1MzHrkuY98QZtxQYXmgndeUzWNnw/nJeeiqzPj4WzaSdh/LcyszUXM+6M+snF9TB2SHIHtJhO967l+KaidmtRqHwScYB4clpv6ly9SsWoFJgx3YFXmF+DdEsNZRsu8ixbbdNjxg/ZO7OKi6zTLFMoYatx0L0z69a7PftuMlNslnbaKHT02eMtFSaylARCySLXwsuafqTcw1psJb7CtXDzKA26H3GncM3Cp5IFg5dcJ/PatlpAhiVris32kgAK9VLarc5WQFHknvEM7qaYiSWL5Rn8UqbUwBWQgZ6aVh2K6AHAA1Ij60y73aZRq1VGj23Gsmet+35x76iLmQkz45cDGuVC0bhC6vazFSXmYJSBpfY0qrgPux3hCKYa+R+gX1wKy9XdMcYNKiqcuMya8nspks1E8W4dHs90NDxb6HreSA9IYsLX7Z7ZG8zzpDCQZot6nunxJJ/CwSaaJ4hjOxPopQSxknaZzqergGR8Wtdm8mxfysJI6yVP585c5nh+Bokn2ArptuDZthk2tTh1VW+sKmpspCROvvqaKkp/GpdbMzVBr/OksXbmuKcNXDbfw/6s76CPfFuXnZspaWZtCb2BByt2LL20PFrYMk/BpLp1EswnCkSlYa/F+JJGoujgWtaRCnpLbV8mNiJBGgm9bbECvgb3tAW6lMN6XMa63TuX4Y0aV6ZMLUqI5pioTHr8nrvvst3nyxUlSliHTDC1BhatG73b6Vml8ZwpmDTNZLShDinJk0taakAO2AJk7m59+jXbO9uIPpWiQ3I+c/SOzvjlEWWlvgVZ5z51Ewp1cmaSfYir7u1tx/lYt1Wkdo/MxEfaRbGZ4alxKaVWbzMzeT1T17FPzgSte+sNNblm46sN6EWr70DI5NepDJ9wcXya7lHf6+OpOeGyaoO2noV83LDKnvvhVqnCzjI3Y95it5cV4LikfWV+ZvnPAPaa2Xa1amwdzS5UVQsLvbSaT7RiBiLJdTQZAfQZvTWSbs6ye54bGxvfnFucmzUUbUMZZi9T71mUqGYmNgsvyS7Rg0gJO48UIyJq+4rbUWZKBSxxt9jdmUtZy3o32ojIt5f+iW16gygequFNHkLPZNT2e/ex1hZEncErcC4wxr0xcFtS1EoNwe3sSUROijJtNdY+KV89MJzs1Zg8Od96sOCRYNiqiuy4rK6HSk0ONbAfOV6iyJylub1zMzlydfNK7XESvJNWMbtOWzNtyt1nJEoojnTY9eYKcvi9M4nbnvaYaMLWmcFbZJ1rC2y2tFmRsffWh4c6/UGnUKO3aL189OiC+b92XQzkcS1tK+BIw9YjtG9qi6d8YjlaUWDWFG+WTDIEQsPGJesWm0TcQrnLW3eHtlBb5MrV9Gxr95J33bT9mLwGVqY+DEQDJ1mYwcAb0LSjr7hNUUAW4/HHzN4I45F5eW0UpYZpqVG5eQqtTLb8MxbtvKrKWC01eAx8atahJu1XzGC5vqnNAt+ZmxT/tWqgWVIRnnEMunrpDYpMMM2hyb5WommqL7Mi39GVjQncRxbnbLHL67paZ6sBfVUkffJpi2ZPdwSTzBZPMzZkqFg5OoHu2fOLZ2/bm2fblo3uDCwwCrTun3nVwhfFTPJ8PayACnIz+PyFViMLkL+Z+H1lBkNuK2zYPDTYgjZe85BN9zyX8OGPwP2XmsaHV8Fdbv9K3n2ms1AP9RfZ6eSjk+f9PlUIgoGfv3eVPPJ3nCN/LWel27t/IS76f/89KAC0x/zomQ8vUGNAKgjZJ+39Z117gXoD/Oua2PHO8s7P8JJdAfjgV8hPz5QX7K/2mFAjeGRGCyDjwH/0HaqOQM8Bx7xAvQNxzKGN8Eg6xnvkoT+RRoVqEhyN98iH/xOy2y+QSf6sj8r7VBm4MsPdh2rAJbLR36OmxIsz9wem/reTLsMj1IJ466NHcbZW5QCfdGb/eWfGXyO/HtfzHs+azoCnlI3EJf68SO67fy+99+6HP+Kn36GqwXlnoz1+48yNNz5+Kv32dDCEyOK6TCaX86ladptYc4nH9iZ5R6+STRaMu+AZvWSfuWx/vTjD4hKf6syNSxk76bX8k7waO6azql4Sm8p5T+D4vW7fe8zfO0nOlI5y+cY1sLv8Hh4BB8w++aR/702yx07PMNniWsBgi2t56cY58t/edM7WIxmD7KWZv87wfp8GbxB/fXyy5WoFB8zPd46Msbd1TI7kGfv3qjO5ngYLzs8nPtpZO8pV+644bI85R+xMqOb4eD6Z8dleAg+xPXt+D3amM+CvpfeuiQ+IpmjmDwpQM1pOjTC1E0WnF9/wO7NZ3aylMOVA1X4lSDAwdzBoXitFzeUbbcO8ld/qDtapScXkoyt7mkmsUCVamU0Yz1TmzPOdNeWzxZ2mTYRtVijrzaR05wgiWUdj2nVCbaP0hDgf0EXlD1OxMi/cNJHZ8avy7Ibq3p0i8/bS5gKdToES52Y3vzhU5MfbNAKD55nUNmPRLF7btzwTqs64/p3VfbNVuLWZmk57v+uDwUP1L2QQl76Jsfq6fOeDB5bzHiKQA/U+5n6oxdliB7bZLDqaQX3NzeXFY9s7V2afSlZ+w5E7M9iCTsvbcFXqIm/C4kXUmFeK2FJasrM6kzWc9b5WLNDV53cHo26zENXaQuVab+CdVLsz9VQ0jJj11uyqdqter21bUOQq7ntnkxk+Kt4Mey7r2h4ujWd/Uyf0cb3mHWPd2UuslZmA5+BsqWqlmC3FRzHAvZcvsud9kuSdTXF+3iuvNhvvt+GetkJzuoy2bAE+kJfBIgnEidz28u4UM2ulhZtpxiOobX3K+0ZYvYPjxZGtyWh9K2tcjA/Pxr3Ed2WLR0CWLULNzIn75r753NPSs47bbRKOVYf2adZkAM17WRUgTC8tTeGXM6jHZNSbZ465DUmbX4h+oiwnd3iGXdlPUW2WsGrLFDxvFvdkkoD4fBu5KBFWzBRVmDdqxy/YVR75tIBeIiZnrdnqbuppzalCKdSvQbwchz6U9fDOnP6IZkP711sim2MampIee+ZC7lk2SZqW2SqTrFm0fUE2ZabOFu3BJ204UIRKLlNOeRqyyGM7e6I5gop5mF6vHCZDSU5km31NvSv1rprOOGJ2bZr1kXf5RFvOOhHRzpvqTi/TwKtqqQFpHQvEUM7yTu+aNYwSgU9xYZYmi1A2yzN9pa9Wi3aHeHirsyYoBzkyFToY3j8aDMvNMtSSvQdzxkGJ7GtG+8AEkaychfKbfUBCqz7yPw8gX2r32NaddaKjrEulp9KaKprCjBi7Y3NWcexOqE7O4llcCzTl+2c41Hbds+ge5XMTnC4nuwQau62CzxjRvXMW4OetrNJclZFhTcTxklhlmqHuSRysmyIHGccWI07ncjELw8HSyHruSPmwmJcm4r7UZVDNDNstVc0Pc/AXjFvio2JFU+7jDGU6JNCUVIC+HYoc5zK9qQuh//MtV4aBXMnpkBW6kGlSnQ6Jj+daXRd8+IIrVr38vMuYuMLPD0Ij5QOKgZx12Rx/97KrMLnqS35VSVXm+yGslERFQmsL543Pu4aSXepT/Mq5UKH5IIRlrmbaMnbNj0JjBF/5EY/8Y8qevJypTr0QUjnP+ZH9UD8MzRwpsTyfHfan/1971/ccV3XfZX4EvMQJdPrQPvWwjEdSIq3kknaMtFqwZCjuAHZBDO4wDF7vruS1V7ti78q2EjqRLUxMiAPMxIGhTDDBGEUxIEyM1wZbnfSlTx77jUf7pdO+RW99adXz/XXO95x7nfwBrTTSvXv33nPOPT+/5/v9fD9fZIb5mbCpLEkxHD8MMSCdkW/PBqRDzHwizD+OKMw1CtfkaaZ1YkquI/jVWaF8+UwePyocL2cUB45QQkFG/yylonyJ4+WCFP49oSl7TXiNTuNXRHt1FHM8jikTY9jrQui0LCRaH+L5r4WPSNO/EFvRb4UB5gTWDKX8S8n3GPbDE1jOK/D/I6TzYpahLlPowPlpqcM3hJmK3ugT6T/vQGEgKWIDO4NJdaURz3DH5le4KO8rNcmd7QQ+4pivPhayo1WhUTovVXda3vcMUgm9L88uSTpfShtR33A8cmek054WSqL3hAVoWbGcXZDOTFksyAhy9FOORee0jKYjMhv8RLXCFWEEIn6hD5h6CG4+KS3+mbASLclYWOSkeBy9Lgm+j/Xs5pOjforgyqQivSu9XXi9OGXi9jknN0uP5Zp0pGFSdXDbSX4EviLKJuHygo+fSUbvydQELFLtJPm+jrEx2AmtPHhZc7l3HEgYzeqhwJ0rRjAME/iVNeqlaFfcYZ/Rgp3LMalCxS5CB7xly4TryWAk0uYkfbevLodb9v7RyDYE6OWqFXdIQBkxkazq8UkoDo0IHzurYs044ZLBXbsJKCOJ6yhSdRE1sRAjDSgCamOEwPO7hWjnlwM4ho435mhdJPZstYrwuSdw71FrO/wwOcSaJGqAoUhXwBzIVjJN5m0KM/lQhNzSQeLwsfyLYLk/kC8hJ43xyEuF9gY43mgu0hgMmNCaX0YR28fsijbrRZc/WxhHowognIIXVRGro90zTYh4Upsf8stUcbhACpKtpuw13R4X+R/ypXy0o8oZE5hVIeEtf6McO9jetL02VbZyWB85dDkKFTM+/0OKCs589UAc9HJnn/3+Zai/lw8CfFVtDdUpAV2ifYjCwALOI9G84PDAM2R1ciFtdLxh8sGh4cNy4ggjNZwAGbiMQJpYC80WyYr5Em1VPFZSuzhie5sQDxr2ruFhHh+DVjwsQ8APctIElxfSD6l9NJKO4OZfxdaDWKwV6MEV2obnww3/4GPoQIsW5nLSag5Ew2FjMj4/WZ4Gi39f0v/88AuRaFssRBd8TyAFWS8Wq7eX9w29yj6GFchKIacE9Pg+xrXP4t7DmCKdRHuQDqszXP/dG80vjmOcglr3Xz159Sv7e+Hq5asXr166evb6MWADRp052UEuoaZ7FTXgXdTAn0OuY9Sw2+Mv0FIBmnzk+w3tHcz5e4G+xaffQYZg4BO+jDaBX6EV4Tx+SxYLYlRGzmc8hvdrDTzzKTMHbvf6q2jHAOvAebZOnGerwBUswRvXjzEPL7FGgw1mFfmGF4nN1paf3+/6z/n9LqO9BJmy7RPnw/rAuy9jWal+zkfWkRWv3VeceMxLpvTar4Kmm/XKSuMP/53++nNlSVgEprZvlvj5L765CJx5lN43nwBLGebgucnoqZ86rr7jyPcm32P+yLe3LHaEgOfsI1uCV+hKVEbPecf5tVt7Wx0drMXZ8smWmy95H0omLCvGaxTOcQhy45kuHlRFRwwFaJmWXVyR60eN/YTmYaVQjAdSUUcKQedv0hgg6IVOCQSPWJ0ma9ZYkyu70Xw0vXnsnEPoHwKTaM1P+Bh1vtXEIYyDWaJ7mkchpGTbzoiFgLlhUy7QtICvcjG0jMKqIzpnrsJAbAFIvHuEGyYv4XHcUSuRaOqRdhFUb8iVZO/IxdIHz6UeDsi+CyLNjOW3QdC8AfN4rXEQ/V0HsF20FcSrMPhh78SOO3+72DDm3/4D1UipGEhoEPUpwiZDGDTQbjofoJShorfIaOix/FxnanBrvpTzKE0HSDxYKzeUWhLUWNSaJqmhdjxe7UwsDiHQR/R6iDHR7lRQdEBwTFHIJVoGQs8bBCQop3Hlt4q4u6n64XwpatpNOXC1qQ1WIS47EWOQLhjeDBZUQDJOGdKjTliJyy5a5QSiytfMgXoDkDVtoBKMREfCGlU6rsc4PiRRwu3a10IVltnGEXMlgod7fbYJNNy7jNea+8sQuQTY3Q7Ygthva4MgYkGtTZdnajx/eE8ee/NzFACKI2hJDCUjwsGudgtBWH9nPzT3gsewJsIRwCyicpAdCREvigqMYFGITtHRVJnZTWwjsuXw+nHRqQkEU8AhXrp3Ux/qFJMhcU1z9cFhpUDGQu1jErpCATKIJFSvxkQKiTlwywNXiXolCZi/UGfKYG8K3lSebvE43iQDeVMsFuQAP2Z0oGfbZwaMnhECWijI5cm63QqBI695Di2ZifeB4LnQw9C4Hyhhhqa2gD8M66NFcDgIkoTKcwjrRI3IRJVCTKGgTOEWomBFuwpCxSQYUj1pNZxXDCKDtfO3KDR3WonYkZ2wl6uPfV6H+IuCRyH2APK1cYnqENjoDz2DmLx6x7kV6EC8HEnHdhOOsEmgRee0MgQRHCHuWi00Sm2LJ+ngAVgVKxAUCXDP0rU7h1qDVuZtu8CM2+c4HB4gtSAqYVUuQHLteqsaOjIYqqBwY8X8eGy3a8wHpIRCjuWYJ2HZxcCEbTV/BPx1iMDF3kP6cqzqgHMT7BZuY1LemwBxgt2TxZOwU3KPiD58VO1KaaM0ur982I73vQnrE4a2FLyJSryNqDGUnnuIh7UWf1AEgVl+EIlIxvJ2Pj9YrtjtF6KIYfmr9eU3Pzih3Px6U2Uu7VRx3zCI5oDaCZKs9NdFD56UtVSRbthNcbkzYhc0u24BHk0GYWrs51ICWZKuIC09EXeOSfU8j86UCI95Ewtq+dSOUvGacfZQrB8MNVp2XmbvyarqoNQhvSegSAXIZteYV2QcEifR+2GNpoRAbSgnvFtAboj3gw9FuTqPJAvkjRaagmAddvKFE1VNYFChvS5SjlEIVdyxF+/fvnNi8h93PWqkKTRpD/3Pl2KdVNDAqFUJ8X6Q2VhK0AA8nZBtzjXAqzSaXOxcEXo9Qbs+Xm7b8la1RscLVew1TaIy+NeKMmDnYQjtpZdtlsoP1OYRK2BHDL+F6mlqp8D+mVPINNFQPsS6h5N4blJie+iTgd4dqYWmkFq9Q18KnNEb0E8ayrgOyFXs9Y71A2TC0LNRmKO834ksahQ6bKrDRIXCSGV0LFAvXmgPN3KgC4YoCIyVEC1KPoL6Lmj3sol1TJOpMqf2NR2PLwZFVK3dajOJj12IG3MJEkgEzpeofdHR2Wi3Z7sauQg77puJHdtY3fSY7St7W60DDhvgmTKa1HPKznYrftd+Uka319qM8t5Hpq1OA/RnFYoYS8Zv+yaiPhqQtuDYwgqrTrNAwoj/nZ2OihpZSk2R25omMrUrshNH9wkbmLm2FwkmWk3q0lZMoM0w9JZpK+XMJeyKl+wCsC/wdkx7g7hGVTv+IKBz8QADAgnMeO8cbQk1uCEoV/eXEVPj+hjqvQKFsBXyEyYgcqynihOWmG5sujjROsP8PiImFYZy9GdkpIRTt24HzSPKUOKL7WiBDXmoCq2R9lQSL1LPSExCpOZNAH1kq621aug6RqmTA1YFaUOoA9vu0UaKXyA4FNhZsClww8ppG0G6gepsEebH9i8HgzHlW62DfqcUiLWHbK0lEReCHaeMd1IIlfEWzLxACMPseUnkQ2a3dAoSyD0z8oUHwZx8KKF9Wx1w/kgk2qZQMAE/j+J9x31C6P1LxN3xPtPlDQwChwuz+2YjrJ3tfamJNufZMYX6qAzkXC2cInivG2ppIaxjiDFHX1QmgvJy/KT2cMB3F3hdnjLP9496Gp868cvWAqgdVjEuqkZTxLGbFqpkiFtteNRExqiQnwT7Ia6wuNcbOjwIGmGVCbejSW3n9bekRXPmB3dCcyaWZ7aOnC7X3rr+02tfAXYZ44VRnLL4ymmKAoZI8ldBv8uR3S5FUdgkqh3rOMMr199greoXHOEN9Kqg113Fz6wZvvY5PrlKqHLEU3+NZ6TlXbH5kTb2AqLKWceMCG/GdXPupFH+CuP6UVwzyh1w35f4LaLygE4ZNbiXWWP8s+s/R+T5McTNd1nXC5HtPmdt8mVEf1/GGG3nMX96U7iHcPhy5RK9BUdpg9zfxPsvYUy5yxDlD+2tJwQwsCIG2eNoUT2CtulzaO0l+7IDMKi4YxzC6Zg8ckbMtRfFvH5CrNVk0v1Axbo6o5AAZO/WEbgEHQHX5SmwO7+L5+8zioNjCRHi4l1l/D2qzO5LWIYjKvrPFfVeDi3j3qIr6byFj5yT2GdLAg5ZEVzBAqa/wnZzxhIQrobC4nwiEJGv5TWP4yP6KaoZVc9ch8vyiIrC4zEGJ8SersEVqwq5sSyV/Jo0xEWFz1F16AEkDkugoSBXpOkFjeDROO95CEEQ8+6IQqF8qZAzH0qNrUrrXBBQhAIXBUiPExIDaxlPVhFhcoXjN/nSHpVoeoQeeTeEppyTmz/GB4/6N/V5LUuLnMSnPmWACgfjow72sdTJpxKBi6rutITZkphunPunQe/leHbHsSYXELhCMIbXBRREQe6oPL9U9f+qFO8n0p9dPZ9lXIqHFX0tvXdJhs+ShKByfUxQN/4KNdOSqufzPh0Ch/C4WJIR5wJvLWEJP1PB4DBiIHz81KWTtiMFvineI2XR3rWE3hzLzqtBohnBPRft8bMgOo+/InGaYvvQb9hP5DhaqH6HVipKGXxaljBiEZdHYhypK1+gtesVZ5k6i+U6At4cHMfn4zgvvPe8nKkNpahgDj1YaLWnh7Y89NBDQ4eRxAf2CLFSCLe98O2ocaaAlBZGWJtUfI48sLcI6/dYvjU1ldeUdkzjNwrhNsBUL6B/K7GkFErmgcg/BMRAbbJiG46Tsh7IZwXw4Yd1QA++lCum7DFDQ48+lTc6w0NAWlKtPfv0jglwMW2itMQZ7rdSNyUxEhueMcZ4ZFNJKk6rY5w+TtNZcbYmLd2l9+OBQMYZp5vWgBQaabTEUIH1ToqooYy2TSuesCawkcko9HApdyhlBnk4Mr2hbgVt/UFaJrVjHUnrW3KoLQyie3SKaZWUydaVRGB2pZiRh8P+jS8VhJAgVofA4Rz5wkxIYeBV9oHCX7tjS0XHZQJ1dQhZhocV+ZJ0UZOyJW5xfiaokbMDYXovxPNmpYDdS08DoiU1EOozAqpSW5htlXK1NkN6CUKOJEqTJKgevavk4hdsp+FNxPj8jmpfvdpPTHL7BZgNW2LZZgi1V/8oM84EbZsW0XNBO5OOrJTWGAtWuea9XBgmjoEvmANDx3Rg03VgAaf/6ZmjHkSDILVixBVGdAPg9hwEfgBTHOz+m9MdIFbcXpgopPv9IPEwCBcEKDYGdGgyYffwu8KqcreO3IaUwUxUnewhBvY/0T+atAJypp6E4dlaU46nasDs401hktZuTthpbGZvvawSqx22HZJJUdg5ZS6h6ASq3lgRGFh/QV0TKu3KU1MQdKGjXgix51zHPKy88k4xxKVU4KJYgft2QBLNqoY68kjzVji329YhA3hw7xTb5aHaXvvONWQWKYOxsd3xTou02oEOyBndAGckekVnbRUSBMdy8RhrdlWRGcqkIwAxK7zuJk/Z/bBvL2J/0C5OZZx3KuXZsgQk8SxoWnEbdDlwTaEuNzXXxn6q5jFfXxTFAPw7JJyFn0pBBTZv62AaCOCI2CzdQMXQNLR78Nltg7P75hNCO7ggNYADtEsqTGHS+5xuqgJfVABt1yev4Y2jOA1gxSNuhN4xYVYOp+dinzMn0UBUHq3+IUUkhLpqI8cUDBM0Z2A7ViC2YBuIIqBeNj/46OYHJ7iP2Q/5/v7RWCMFK2RAUig6bNutXoz8HmN8LcAso0kaoZdpO9vuQeCR3W5HUl8/TNqT9Rl7ZtIqmHywrLBk4SUkL/NEDrkYlc69gxKNkKpWRhfP53Jfr6qD0HWW8cYOjqOseBkiE2vo9fzUEQFJ58zUrKEoApH1Dk0ix3AZlut57noTzjUSW0DHu5OJJwDfckYhdwc79UQ4Z6atmG6XZxD/4hAQOsCRgJdceh5tETjWyn0ZK3Z6+XwpX8wQaNRy5GTUwH7Bd1MtRy31t6UivKjuwsIop3sgCnWRJ3aMt0b/XJO2JOcz1s0M6S1PbdkJ2jLJkPw25dLlK2V1fJ4MJCAdxB8bzVg0PGOYD5jiIldJdJI6BDPgsA0ag02Y/wBgFVk+i/A/iCbBdjF6n5D9WA29g616tW+4fzQfMI47V+f0Vs3bHPzUXcoQuUP8IZ1FHuoILiEMFMYcJc47eF/FbCWDoZhWMlfYqg0rR6M+hdU7EMRBFDBKegoznoMS7iPxoFqfbRCxqGOwSTyvj39f7BgR/s1k1AEbrxORcdC+mCE+BtGulOgWhOsijq/Ujo5CqaG1253p0E0SlcL24E5sWbEy7gHqib5vVSVYBM9fDnQmAZG4Tl2sHnUf27WC7VHkII1QAmzTg4AjAhrkGrAjJSTZzYK90zFd9bkNst9DqLpyFlHPgu3lo4wmKpmMDSRicAiUgMAhKBuFLwvhENgjMSyQx1eq6FQorxyqJ4ClQ2s6DkNxT4b5Jco8dLykcUnxw2poU6xX6f34heCDszo6q5paIKBBWjO25yrBKwiXyC0wlTG/IB6Tw0IxPgjJ9Oem5/51OTF9ZFuf6xc+nOtvX7t8/QhaO1bQhhBdu3YKrQZHkCOIbCMXY9sFIcztM6+gFeBrsafY9MQK4m0Il4kzSKwPwK2Tfpax8vG1U2RFsekChr3rMPpkDznvWHnS6f2cygsl9lw7Nn9iB1rBa8iHI/wmqPM7i5HXX2X92u9YU7iosONH6do3n8C1cI16dvIxmEsSkr7sRKl8YULXXQ7HGsw60puQ1mTM9GJfk8k+Ne2ARBVpskg7lGTJWfmsxUBhxP2U5KSRnBJHcLjFw6+YJaTIl4GE471ChAnMSlwpmRESNsBBXq8cCFa5PpFslWD7T4owVCSdvNmFontvovdVxmQJ5LGgjdJ8apkml5Rg6aJDPLerO6P/DwDvJwzHH9mhPMhuW7ksGZdIa0oheQ0tXpE6Qm7N6XsjkSJXvH9w8PmQwGNbvQ0lKeUyaiRLMj10o3vqRvfcje5v4P/FV250377R/fXNxY9uLr55c/HUzcW3by5+eHPx3ZuL7/z7Jx/+529/4VzOLx6xn/rFLrYixguyMnyAevvX2ATGhh6x2rDH5Qkxtzmv0siC48wTzijgvFCXxQm0y1ZIeOqkdxT1vsPOs9g5z76tzDeRQfB1cYJeFRvWr6R4x8SfdEUZGZ3XsLNXLonDrzbcHEm5Zp9kD1M2iml7VuSmfVqceU+w0zrXyRL6z67KV8tiIDspd66Kye999TjVz1Ess764LN67oRc8l3ZFWSFPKwuRa3d66kN58FOpVZv7B0HgUrcLTqMJAX+gxAjllpbq9nDg3UksQQDZispG/G9wwor3l1mrfr4Uz4E0XDL08odnGupeP5lF9FIyeypOGrWbsatAhgyVJQ8PlWKVBu1qCtkzt9px+kGvJ1I/u6bxlzB9RttQ9gZVs7va4g0ODT334MTQ0PbJ7Wb345NPPmG2FIZNuOkSjUy04WGqLFtc5mnCrRv4SNiKygWrpzziNRl/byv9Ga70rHpMxqez9n8mqize0WIuvVFr9qZ1UAggClPgdjWZS9ZY7/czLFDFzCUzB4aeAdMB5k549QE0vSmvL+WOFvqRSz/LnPqzB0C4nDkBIUtTZFu+XS8PUhPYN2/P2Y3S7y8Uqe7jcdAYGx4lP3QlHv1Ibfyxa48YYEbK7Kj7Nm7M0qeVOxBBPi5JKXP5z3yL7HW1llkNY+3M7GpjWcKKlsarLTPetkJ6o19xLXaRt5GwPOcQEwQy8pcevxPwTp4Tb0z0vfyC2CMVpikjBXsVUniD+CEB4UO+p+HsaXY9O/7EjgmTb3YGJyMiA2i+tE5lAr4HbQzDzrR9lWZiOxE2E1332dPBpP1Ic+eWwU6QoBJtJ5/mW4YyJGQ7Gke1B6RaWlBV1HnKDrIC+a2MI/w1c/5olvcn6T5rU3Lb2f4C4uG586ZlWHwA+3B6rUlrHfHrLE2X3d2qVUEL9cXs1SKttcJCqTVEU+5lYAJwlGTPlGntCFZyuZC5Wcms1pnavuzX5AhRcW/R/QS7yQ8Kw1vMZLj6O4PjLfIs3qJ58iZ7Bct4eTR7jmXWYaev12SvC7eor3w1W4hJABncyIBDpN+fxkYxWzwBe3LmFziWCumaTo1lHvmRGOEWx1s0Ye4W1VnMmqfhvW5RbSVEZ76hZiievQiDKb7zvOv3yMcuoyidHzqgL3GuXEVEo0tHsGZdEVedtH5S0F5vK1hZN8S4va5YYUi6/1gBlxwib1UR/KxymhniPG1cTiLFFOG2VgSr9X7WPmM53AmdEJKnK4j86obSPWPHdjSBC7SK+n8AXvuANQVAmo+YzVUjOkP80Kg18bh3Hlw4KDz05mquh3/6/rDBHeV82B6H1Tlc/7a6J6euw89WdT9ceyR6Fn4eV8/qvHbx+SZ1fQOf785IZzfnFZdhjzrfZ4+zGc8eVucL6vy4On+Tz2+PyvmOOj/F599R99wW3b+kzldUmfU9XXtcUPU2rN4RPn83uv9f1Pm/qfNr6vwbPr9XPXsfn2+N2vqOKP0bfH5PdP0/1Pkf1Pl/8fldUdv1rPl77lbn9675d+yqdP6C7/lzlc6fqfNvReUxa74vSV3dHd3Tp/IdXvPvLv3wTnX/RlX/Os0c95mFKN97VL/KRf1nq3pHeO6RNV/nrgyq/Lodd6sy71nz+eq89LvrPrxP5btVpTPL1++Jx4K6ruttQb3jYZVvV/VPo9I/vubrTbfpm+qed1Sa+n1PqWcXVN87rvJaUO+7R6W5pNKEZ1fW0uNoj3p2q7pf109XXdftvqDKtkfV1VZ1vluVeY9KR/cTqbd7ondcUOl0Vd/T6esyLPD7yY+RI+xV7THhC7BbxSNYRuxxQK7Xm3S908Jjja/nOZ0CH/MlOsoC8YLkA4YKTNdIvuWOPS1I+rhx7unpdfeDC4s97p3HOwpmEgsKDl9UPioxQOngCPpZzHcjPT/C6dSqlEGfpIu59vQ0KNmeMX6BQqU1M8Tvz1XSI/lCFgPyPNh3Id023VJucDpc8Kk5ugAso5gPmF/h/oTyrf+Qrv/+FN0Pjm5whPUC1gBppdtv8XfbLf7in3X7A2n9jz3C9/9tj7f/kevPb6+BzmGCQl88WZ59wTzbdHFUmD4ahdgCNu0GzvdOPm7k4yY+3sfl/Us+3s/Hfj5usX+wfmzj4z/wsczHlzjtt/j4OR+v83HN/sG8vmUDHV+yx7to6cC5fO02KtPaHdQX1+xFGBNrdmEDWWTNUFnXHrHrB7z/03YL9/jc1NRMuTlhK+JPvD7X+x3273b7e1vw+Y6eDX/i+zt7Ntx2uz3c961777p7Y+6eb2/6znep3dLlGJ+rN+TKJAI5psr1Rq06Qv1/czXzuSdqzenOvoQfJ3NjtQbS3DQoqCDGvE7m1s//8Wq49XNI12c3gkpW3MBtD+0Er/tX9u9h+/dj6JfwZ2+Azrhub1i3N6zbG9btDes/hn4Lfxt6oLeu2xvW7Q3r9oZ1e8O6vWEdbrA/TfCvNN8zgJg1JTMseR+0hW+1hwCJ1qgPVWuVoaQ8VXsRYm+2KoVKzzh+8Yy99iRe6vn/n/+TP/8LlGUmTkD3AQA=","base64");
  return inflate(src);
};

}).call(this,require("buffer").Buffer)
},{"buffer":17,"pako/lib/inflate":75}],72:[function(require,module,exports){
(function (global){
/**
 * @license
 * Lo-Dash 2.4.2 (Custom Build) <https://lodash.com/>
 * Build: `lodash modern -o ./dist/lodash.js`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre ES5 environments */
  var undefined;

  /** Used to pool arrays and objects used internally */
  var arrayPool = [],
      objectPool = [];

  /** Used to generate unique IDs */
  var idCounter = 0;

  /** Used to prefix keys to avoid issues with `__proto__` and properties on `Object.prototype` */
  var keyPrefix = +new Date + '';

  /** Used as the size when optimizations are enabled for large arrays */
  var largeArraySize = 75;

  /** Used as the max size of the `arrayPool` and `objectPool` */
  var maxPoolSize = 40;

  /** Used to detect and test whitespace */
  var whitespace = (
    // whitespace
    ' \t\x0B\f\xA0\ufeff' +

    // line terminators
    '\n\r\u2028\u2029' +

    // unicode category "Zs" space separators
    '\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000'
  );

  /** Used to match empty string literals in compiled template source */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /**
   * Used to match ES6 template delimiters
   * http://people.mozilla.org/~jorendorff/es6-draft.html#sec-literals-string-literals
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match regexp flags from their coerced string values */
  var reFlags = /\w*$/;

  /** Used to detected named functions */
  var reFuncName = /^\s*function[ \n\r\t]+\w/;

  /** Used to match "interpolate" template delimiters */
  var reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match leading whitespace and zeros to be removed */
  var reLeadingSpacesAndZeros = RegExp('^[' + whitespace + ']*0+(?=.$)');

  /** Used to ensure capturing order of template delimiters */
  var reNoMatch = /($^)/;

  /** Used to detect functions containing a `this` reference */
  var reThis = /\bthis\b/;

  /** Used to match unescaped characters in compiled string literals */
  var reUnescapedString = /['\n\r\t\u2028\u2029\\]/g;

  /** Used to assign default `context` object properties */
  var contextProps = [
    'Array', 'Boolean', 'Date', 'Function', 'Math', 'Number', 'Object',
    'RegExp', 'String', '_', 'attachEvent', 'clearTimeout', 'isFinite', 'isNaN',
    'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify */
  var templateCounter = 0;

  /** `Object#toString` result shortcuts */
  var argsClass = '[object Arguments]',
      arrayClass = '[object Array]',
      boolClass = '[object Boolean]',
      dateClass = '[object Date]',
      funcClass = '[object Function]',
      numberClass = '[object Number]',
      objectClass = '[object Object]',
      regexpClass = '[object RegExp]',
      stringClass = '[object String]';

  /** Used to identify object classifications that `_.clone` supports */
  var cloneableClasses = {};
  cloneableClasses[funcClass] = false;
  cloneableClasses[argsClass] = cloneableClasses[arrayClass] =
  cloneableClasses[boolClass] = cloneableClasses[dateClass] =
  cloneableClasses[numberClass] = cloneableClasses[objectClass] =
  cloneableClasses[regexpClass] = cloneableClasses[stringClass] = true;

  /** Used as an internal `_.debounce` options object */
  var debounceOptions = {
    'leading': false,
    'maxWait': 0,
    'trailing': false
  };

  /** Used as the property descriptor for `__bindData__` */
  var descriptor = {
    'configurable': false,
    'enumerable': false,
    'value': null,
    'writable': false
  };

  /** Used to determine if values are of the language type Object */
  var objectTypes = {
    'boolean': false,
    'function': true,
    'object': true,
    'number': false,
    'string': false,
    'undefined': false
  };

  /** Used to escape characters for inclusion in compiled string literals */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\t': 't',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Used as a reference to the global object */
  var root = (objectTypes[typeof window] && window) || this;

  /** Detect free variable `exports` */
  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;

  /** Detect free variable `module` */
  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports` */
  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;

  /** Detect free variable `global` from Node.js or Browserified code and use it as `root` */
  var freeGlobal = objectTypes[typeof global] && global;
  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {
    root = freeGlobal;
  }

  /*--------------------------------------------------------------------------*/

  /**
   * The base implementation of `_.indexOf` without support for binary searches
   * or `fromIndex` constraints.
   *
   * @private
   * @param {Array} array The array to search.
   * @param {*} value The value to search for.
   * @param {number} [fromIndex=0] The index to search from.
   * @returns {number} Returns the index of the matched value or `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    var index = (fromIndex || 0) - 1,
        length = array ? array.length : 0;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * An implementation of `_.contains` for cache objects that mimics the return
   * signature of `_.indexOf` by returning `0` if the value is found, else `-1`.
   *
   * @private
   * @param {Object} cache The cache object to inspect.
   * @param {*} value The value to search for.
   * @returns {number} Returns `0` if `value` is found, else `-1`.
   */
  function cacheIndexOf(cache, value) {
    var type = typeof value;
    cache = cache.cache;

    if (type == 'boolean' || value == null) {
      return cache[value] ? 0 : -1;
    }
    if (type != 'number' && type != 'string') {
      type = 'object';
    }
    var key = type == 'number' ? value : keyPrefix + value;
    cache = (cache = cache[type]) && cache[key];

    return type == 'object'
      ? (cache && baseIndexOf(cache, value) > -1 ? 0 : -1)
      : (cache ? 0 : -1);
  }

  /**
   * Adds a given value to the corresponding cache object.
   *
   * @private
   * @param {*} value The value to add to the cache.
   */
  function cachePush(value) {
    var cache = this.cache,
        type = typeof value;

    if (type == 'boolean' || value == null) {
      cache[value] = true;
    } else {
      if (type != 'number' && type != 'string') {
        type = 'object';
      }
      var key = type == 'number' ? value : keyPrefix + value,
          typeCache = cache[type] || (cache[type] = {});

      if (type == 'object') {
        (typeCache[key] || (typeCache[key] = [])).push(value);
      } else {
        typeCache[key] = true;
      }
    }
  }

  /**
   * Used by `_.max` and `_.min` as the default callback when a given
   * collection is a string value.
   *
   * @private
   * @param {string} value The character to inspect.
   * @returns {number} Returns the code unit of given character.
   */
  function charAtCallback(value) {
    return value.charCodeAt(0);
  }

  /**
   * Used by `sortBy` to compare transformed `collection` elements, stable sorting
   * them in ascending order.
   *
   * @private
   * @param {Object} a The object to compare to `b`.
   * @param {Object} b The object to compare to `a`.
   * @returns {number} Returns the sort order indicator of `1` or `-1`.
   */
  function compareAscending(a, b) {
    var ac = a.criteria,
        bc = b.criteria,
        index = -1,
        length = ac.length;

    while (++index < length) {
      var value = ac[index],
          other = bc[index];

      if (value !== other) {
        if (value > other || typeof value == 'undefined') {
          return 1;
        }
        if (value < other || typeof other == 'undefined') {
          return -1;
        }
      }
    }
    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
    // that causes it, under certain circumstances, to return the same value for
    // `a` and `b`. See https://github.com/jashkenas/underscore/pull/1247
    //
    // This also ensures a stable sort in V8 and other engines.
    // See http://code.google.com/p/v8/issues/detail?id=90
    return a.index - b.index;
  }

  /**
   * Creates a cache object to optimize linear searches of large arrays.
   *
   * @private
   * @param {Array} [array=[]] The array to search.
   * @returns {null|Object} Returns the cache object or `null` if caching should not be used.
   */
  function createCache(array) {
    var index = -1,
        length = array.length,
        first = array[0],
        mid = array[(length / 2) | 0],
        last = array[length - 1];

    if (first && typeof first == 'object' &&
        mid && typeof mid == 'object' && last && typeof last == 'object') {
      return false;
    }
    var cache = getObject();
    cache['false'] = cache['null'] = cache['true'] = cache['undefined'] = false;

    var result = getObject();
    result.array = array;
    result.cache = cache;
    result.push = cachePush;

    while (++index < length) {
      result.push(array[index]);
    }
    return result;
  }

  /**
   * Used by `template` to escape characters for inclusion in compiled
   * string literals.
   *
   * @private
   * @param {string} match The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(match) {
    return '\\' + stringEscapes[match];
  }

  /**
   * Gets an array from the array pool or creates a new one if the pool is empty.
   *
   * @private
   * @returns {Array} The array from the pool.
   */
  function getArray() {
    return arrayPool.pop() || [];
  }

  /**
   * Gets an object from the object pool or creates a new one if the pool is empty.
   *
   * @private
   * @returns {Object} The object from the pool.
   */
  function getObject() {
    return objectPool.pop() || {
      'array': null,
      'cache': null,
      'criteria': null,
      'false': false,
      'index': 0,
      'null': false,
      'number': null,
      'object': null,
      'push': null,
      'string': null,
      'true': false,
      'undefined': false,
      'value': null
    };
  }

  /**
   * Releases the given array back to the array pool.
   *
   * @private
   * @param {Array} [array] The array to release.
   */
  function releaseArray(array) {
    array.length = 0;
    if (arrayPool.length < maxPoolSize) {
      arrayPool.push(array);
    }
  }

  /**
   * Releases the given object back to the object pool.
   *
   * @private
   * @param {Object} [object] The object to release.
   */
  function releaseObject(object) {
    var cache = object.cache;
    if (cache) {
      releaseObject(cache);
    }
    object.array = object.cache = object.criteria = object.object = object.number = object.string = object.value = null;
    if (objectPool.length < maxPoolSize) {
      objectPool.push(object);
    }
  }

  /**
   * Slices the `collection` from the `start` index up to, but not including,
   * the `end` index.
   *
   * Note: This function is used instead of `Array#slice` to support node lists
   * in IE < 9 and to ensure dense arrays are returned.
   *
   * @private
   * @param {Array|Object|string} collection The collection to slice.
   * @param {number} start The start index.
   * @param {number} end The end index.
   * @returns {Array} Returns the new array.
   */
  function slice(array, start, end) {
    start || (start = 0);
    if (typeof end == 'undefined') {
      end = array ? array.length : 0;
    }
    var index = -1,
        length = end - start || 0,
        result = Array(length < 0 ? 0 : length);

    while (++index < length) {
      result[index] = array[start + index];
    }
    return result;
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new `lodash` function using the given context object.
   *
   * @static
   * @memberOf _
   * @category Utilities
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns the `lodash` function.
   */
  function runInContext(context) {
    // Avoid issues with some ES3 environments that attempt to use values, named
    // after built-in constructors like `Object`, for the creation of literals.
    // ES5 clears this up by stating that literals must use built-in constructors.
    // See http://es5.github.io/#x11.1.5.
    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;

    /** Native constructor references */
    var Array = context.Array,
        Boolean = context.Boolean,
        Date = context.Date,
        Function = context.Function,
        Math = context.Math,
        Number = context.Number,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /**
     * Used for `Array` method references.
     *
     * Normally `Array.prototype` would suffice, however, using an array literal
     * avoids issues in Narwhal.
     */
    var arrayRef = [];

    /** Used for native method references */
    var objectProto = Object.prototype;

    /** Used to restore the original `_` reference in `noConflict` */
    var oldDash = context._;

    /** Used to resolve the internal [[Class]] of values */
    var toString = objectProto.toString;

    /** Used to detect if a method is native */
    var reNative = RegExp('^' +
      String(toString)
        .replace(/[.*+?^${}()|[\]\\]/g, '\\$&')
        .replace(/toString| for [^\]]+/g, '.*?') + '$'
    );

    /** Native method shortcuts */
    var ceil = Math.ceil,
        clearTimeout = context.clearTimeout,
        floor = Math.floor,
        fnToString = Function.prototype.toString,
        getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,
        hasOwnProperty = objectProto.hasOwnProperty,
        push = arrayRef.push,
        setTimeout = context.setTimeout,
        splice = arrayRef.splice,
        unshift = arrayRef.unshift;

    /** Used to set meta data on functions */
    var defineProperty = (function() {
      // IE 8 only accepts DOM elements
      try {
        var o = {},
            func = isNative(func = Object.defineProperty) && func,
            result = func(o, o, o) && func;
      } catch(e) { }
      return result;
    }());

    /* Native method shortcuts for methods with the same name as other `lodash` methods */
    var nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,
        nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,
        nativeIsFinite = context.isFinite,
        nativeIsNaN = context.isNaN,
        nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys,
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random;

    /** Used to lookup a built-in constructor by [[Class]] */
    var ctorByClass = {};
    ctorByClass[arrayClass] = Array;
    ctorByClass[boolClass] = Boolean;
    ctorByClass[dateClass] = Date;
    ctorByClass[funcClass] = Function;
    ctorByClass[objectClass] = Object;
    ctorByClass[numberClass] = Number;
    ctorByClass[regexpClass] = RegExp;
    ctorByClass[stringClass] = String;

    /*--------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps the given value to enable intuitive
     * method chaining.
     *
     * In addition to Lo-Dash methods, wrappers also have the following `Array` methods:
     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,
     * and `unshift`
     *
     * Chaining is supported in custom builds as long as the `value` method is
     * implicitly or explicitly included in the build.
     *
     * The chainable wrapper functions are:
     * `after`, `assign`, `bind`, `bindAll`, `bindKey`, `chain`, `compact`,
     * `compose`, `concat`, `countBy`, `create`, `createCallback`, `curry`,
     * `debounce`, `defaults`, `defer`, `delay`, `difference`, `filter`, `flatten`,
     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,
     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,
     * `invoke`, `keys`, `map`, `max`, `memoize`, `merge`, `min`, `object`, `omit`,
     * `once`, `pairs`, `partial`, `partialRight`, `pick`, `pluck`, `pull`, `push`,
     * `range`, `reject`, `remove`, `rest`, `reverse`, `shuffle`, `slice`, `sort`,
     * `sortBy`, `splice`, `tap`, `throttle`, `times`, `toArray`, `transform`,
     * `union`, `uniq`, `unshift`, `unzip`, `values`, `where`, `without`, `wrap`,
     * and `zip`
     *
     * The non-chainable wrapper functions are:
     * `clone`, `cloneDeep`, `contains`, `escape`, `every`, `find`, `findIndex`,
     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `has`, `identity`,
     * `indexOf`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,
     * `isEmpty`, `isEqual`, `isFinite`, `isFunction`, `isNaN`, `isNull`, `isNumber`,
     * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `join`,
     * `lastIndexOf`, `mixin`, `noConflict`, `parseInt`, `pop`, `random`, `reduce`,
     * `reduceRight`, `result`, `shift`, `size`, `some`, `sortedIndex`, `runInContext`,
     * `template`, `unescape`, `uniqueId`, and `value`
     *
     * The wrapper functions `first` and `last` return wrapped values when `n` is
     * provided, otherwise they return unwrapped values.
     *
     * Explicit chaining can be enabled by using the `_.chain` method.
     *
     * @name _
     * @constructor
     * @category Chaining
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns a `lodash` instance.
     * @example
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // returns an unwrapped value
     * wrapped.reduce(function(sum, num) {
     *   return sum + num;
     * });
     * // => 6
     *
     * // returns a wrapped value
     * var squares = wrapped.map(function(num) {
     *   return num * num;
     * });
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      // don't wrap if already wrapped, even if wrapped by a different `lodash` constructor
      return (value && typeof value == 'object' && !isArray(value) && hasOwnProperty.call(value, '__wrapped__'))
       ? value
       : new lodashWrapper(value);
    }

    /**
     * A fast path for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap in a `lodash` instance.
     * @param {boolean} chainAll A flag to enable chaining for all methods
     * @returns {Object} Returns a `lodash` instance.
     */
    function lodashWrapper(value, chainAll) {
      this.__chain__ = !!chainAll;
      this.__wrapped__ = value;
    }
    // ensure `new lodashWrapper` is an instance of `lodash`
    lodashWrapper.prototype = lodash.prototype;

    /**
     * An object used to flag environments features.
     *
     * @static
     * @memberOf _
     * @type Object
     */
    var support = lodash.support = {};

    /**
     * Detect if functions can be decompiled by `Function#toString`
     * (all but PS3 and older Opera mobile browsers & avoided in Windows 8 apps).
     *
     * @memberOf _.support
     * @type boolean
     */
    support.funcDecomp = !isNative(context.WinRTError) && reThis.test(runInContext);

    /**
     * Detect if `Function#name` is supported (all but IE).
     *
     * @memberOf _.support
     * @type boolean
     */
    support.funcNames = typeof Function.name == 'string';

    /**
     * By default, the template delimiters used by Lo-Dash are similar to those in
     * embedded Ruby (ERB). Change the following template settings to use alternative
     * delimiters.
     *
     * @static
     * @memberOf _
     * @type Object
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type RegExp
       */
      'escape': /<%-([\s\S]+?)%>/g,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type RegExp
       */
      'evaluate': /<%([\s\S]+?)%>/g,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type RegExp
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type string
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type Object
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type Function
         */
        '_': lodash
      }
    };

    /*--------------------------------------------------------------------------*/

    /**
     * The base implementation of `_.bind` that creates the bound function and
     * sets its meta data.
     *
     * @private
     * @param {Array} bindData The bind data array.
     * @returns {Function} Returns the new bound function.
     */
    function baseBind(bindData) {
      var func = bindData[0],
          partialArgs = bindData[2],
          thisArg = bindData[4];

      function bound() {
        // `Function#bind` spec
        // http://es5.github.io/#x15.3.4.5
        if (partialArgs) {
          // avoid `arguments` object deoptimizations by using `slice` instead
          // of `Array.prototype.slice.call` and not assigning `arguments` to a
          // variable as a ternary expression
          var args = slice(partialArgs);
          push.apply(args, arguments);
        }
        // mimic the constructor's `return` behavior
        // http://es5.github.io/#x13.2.2
        if (this instanceof bound) {
          // ensure `new bound` is an instance of `func`
          var thisBinding = baseCreate(func.prototype),
              result = func.apply(thisBinding, args || arguments);
          return isObject(result) ? result : thisBinding;
        }
        return func.apply(thisArg, args || arguments);
      }
      setBindData(bound, bindData);
      return bound;
    }

    /**
     * The base implementation of `_.clone` without argument juggling or support
     * for `thisArg` binding.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} [isDeep=false] Specify a deep clone.
     * @param {Function} [callback] The function to customize cloning values.
     * @param {Array} [stackA=[]] Tracks traversed source objects.
     * @param {Array} [stackB=[]] Associates clones with source counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, isDeep, callback, stackA, stackB) {
      if (callback) {
        var result = callback(value);
        if (typeof result != 'undefined') {
          return result;
        }
      }
      // inspect [[Class]]
      var isObj = isObject(value);
      if (isObj) {
        var className = toString.call(value);
        if (!cloneableClasses[className]) {
          return value;
        }
        var ctor = ctorByClass[className];
        switch (className) {
          case boolClass:
          case dateClass:
            return new ctor(+value);

          case numberClass:
          case stringClass:
            return new ctor(value);

          case regexpClass:
            result = ctor(value.source, reFlags.exec(value));
            result.lastIndex = value.lastIndex;
            return result;
        }
      } else {
        return value;
      }
      var isArr = isArray(value);
      if (isDeep) {
        // check for circular references and return corresponding clone
        var initedStack = !stackA;
        stackA || (stackA = getArray());
        stackB || (stackB = getArray());

        var length = stackA.length;
        while (length--) {
          if (stackA[length] == value) {
            return stackB[length];
          }
        }
        result = isArr ? ctor(value.length) : {};
      }
      else {
        result = isArr ? slice(value) : assign({}, value);
      }
      // add array properties assigned by `RegExp#exec`
      if (isArr) {
        if (hasOwnProperty.call(value, 'index')) {
          result.index = value.index;
        }
        if (hasOwnProperty.call(value, 'input')) {
          result.input = value.input;
        }
      }
      // exit for shallow clone
      if (!isDeep) {
        return result;
      }
      // add the source value to the stack of traversed objects
      // and associate it with its clone
      stackA.push(value);
      stackB.push(result);

      // recursively populate clone (susceptible to call stack limits)
      (isArr ? forEach : forOwn)(value, function(objValue, key) {
        result[key] = baseClone(objValue, isDeep, callback, stackA, stackB);
      });

      if (initedStack) {
        releaseArray(stackA);
        releaseArray(stackB);
      }
      return result;
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} prototype The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    function baseCreate(prototype, properties) {
      return isObject(prototype) ? nativeCreate(prototype) : {};
    }
    // fallback for browsers without `Object.create`
    if (!nativeCreate) {
      baseCreate = (function() {
        function Object() {}
        return function(prototype) {
          if (isObject(prototype)) {
            Object.prototype = prototype;
            var result = new Object;
            Object.prototype = null;
          }
          return result || context.Object();
        };
      }());
    }

    /**
     * The base implementation of `_.createCallback` without support for creating
     * "_.pluck" or "_.where" style callbacks.
     *
     * @private
     * @param {*} [func=identity] The value to convert to a callback.
     * @param {*} [thisArg] The `this` binding of the created callback.
     * @param {number} [argCount] The number of arguments the callback accepts.
     * @returns {Function} Returns a callback function.
     */
    function baseCreateCallback(func, thisArg, argCount) {
      if (typeof func != 'function') {
        return identity;
      }
      // exit early for no `thisArg` or already bound by `Function#bind`
      if (typeof thisArg == 'undefined' || !('prototype' in func)) {
        return func;
      }
      var bindData = func.__bindData__;
      if (typeof bindData == 'undefined') {
        if (support.funcNames) {
          bindData = !func.name;
        }
        bindData = bindData || !support.funcDecomp;
        if (!bindData) {
          var source = fnToString.call(func);
          if (!support.funcNames) {
            bindData = !reFuncName.test(source);
          }
          if (!bindData) {
            // checks if `func` references the `this` keyword and stores the result
            bindData = reThis.test(source);
            setBindData(func, bindData);
          }
        }
      }
      // exit early if there are no `this` references or `func` is bound
      if (bindData === false || (bindData !== true && bindData[1] & 1)) {
        return func;
      }
      switch (argCount) {
        case 1: return function(value) {
          return func.call(thisArg, value);
        };
        case 2: return function(a, b) {
          return func.call(thisArg, a, b);
        };
        case 3: return function(value, index, collection) {
          return func.call(thisArg, value, index, collection);
        };
        case 4: return function(accumulator, value, index, collection) {
          return func.call(thisArg, accumulator, value, index, collection);
        };
      }
      return bind(func, thisArg);
    }

    /**
     * The base implementation of `createWrapper` that creates the wrapper and
     * sets its meta data.
     *
     * @private
     * @param {Array} bindData The bind data array.
     * @returns {Function} Returns the new function.
     */
    function baseCreateWrapper(bindData) {
      var func = bindData[0],
          bitmask = bindData[1],
          partialArgs = bindData[2],
          partialRightArgs = bindData[3],
          thisArg = bindData[4],
          arity = bindData[5];

      var isBind = bitmask & 1,
          isBindKey = bitmask & 2,
          isCurry = bitmask & 4,
          isCurryBound = bitmask & 8,
          key = func;

      function bound() {
        var thisBinding = isBind ? thisArg : this;
        if (partialArgs) {
          var args = slice(partialArgs);
          push.apply(args, arguments);
        }
        if (partialRightArgs || isCurry) {
          args || (args = slice(arguments));
          if (partialRightArgs) {
            push.apply(args, partialRightArgs);
          }
          if (isCurry && args.length < arity) {
            bitmask |= 16 & ~32;
            return baseCreateWrapper([func, (isCurryBound ? bitmask : bitmask & ~3), args, null, thisArg, arity]);
          }
        }
        args || (args = arguments);
        if (isBindKey) {
          func = thisBinding[key];
        }
        if (this instanceof bound) {
          thisBinding = baseCreate(func.prototype);
          var result = func.apply(thisBinding, args);
          return isObject(result) ? result : thisBinding;
        }
        return func.apply(thisBinding, args);
      }
      setBindData(bound, bindData);
      return bound;
    }

    /**
     * The base implementation of `_.difference` that accepts a single array
     * of values to exclude.
     *
     * @private
     * @param {Array} array The array to process.
     * @param {Array} [values] The array of values to exclude.
     * @returns {Array} Returns a new array of filtered values.
     */
    function baseDifference(array, values) {
      var index = -1,
          indexOf = getIndexOf(),
          length = array ? array.length : 0,
          isLarge = length >= largeArraySize && indexOf === baseIndexOf,
          result = [];

      if (isLarge) {
        var cache = createCache(values);
        if (cache) {
          indexOf = cacheIndexOf;
          values = cache;
        } else {
          isLarge = false;
        }
      }
      while (++index < length) {
        var value = array[index];
        if (indexOf(values, value) < 0) {
          result.push(value);
        }
      }
      if (isLarge) {
        releaseObject(values);
      }
      return result;
    }

    /**
     * The base implementation of `_.flatten` without support for callback
     * shorthands or `thisArg` binding.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.
     * @param {boolean} [isStrict=false] A flag to restrict flattening to arrays and `arguments` objects.
     * @param {number} [fromIndex=0] The index to start from.
     * @returns {Array} Returns a new flattened array.
     */
    function baseFlatten(array, isShallow, isStrict, fromIndex) {
      var index = (fromIndex || 0) - 1,
          length = array ? array.length : 0,
          result = [];

      while (++index < length) {
        var value = array[index];

        if (value && typeof value == 'object' && typeof value.length == 'number'
            && (isArray(value) || isArguments(value))) {
          // recursively flatten arrays (susceptible to call stack limits)
          if (!isShallow) {
            value = baseFlatten(value, isShallow, isStrict);
          }
          var valIndex = -1,
              valLength = value.length,
              resIndex = result.length;

          result.length += valLength;
          while (++valIndex < valLength) {
            result[resIndex++] = value[valIndex];
          }
        } else if (!isStrict) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.isEqual`, without support for `thisArg` binding,
     * that allows partial "_.where" style comparisons.
     *
     * @private
     * @param {*} a The value to compare.
     * @param {*} b The other value to compare.
     * @param {Function} [callback] The function to customize comparing values.
     * @param {Function} [isWhere=false] A flag to indicate performing partial comparisons.
     * @param {Array} [stackA=[]] Tracks traversed `a` objects.
     * @param {Array} [stackB=[]] Tracks traversed `b` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(a, b, callback, isWhere, stackA, stackB) {
      // used to indicate that when comparing objects, `a` has at least the properties of `b`
      if (callback) {
        var result = callback(a, b);
        if (typeof result != 'undefined') {
          return !!result;
        }
      }
      // exit early for identical values
      if (a === b) {
        // treat `+0` vs. `-0` as not equal
        return a !== 0 || (1 / a == 1 / b);
      }
      var type = typeof a,
          otherType = typeof b;

      // exit early for unlike primitive values
      if (a === a &&
          !(a && objectTypes[type]) &&
          !(b && objectTypes[otherType])) {
        return false;
      }
      // exit early for `null` and `undefined` avoiding ES3's Function#call behavior
      // http://es5.github.io/#x15.3.4.4
      if (a == null || b == null) {
        return a === b;
      }
      // compare [[Class]] names
      var className = toString.call(a),
          otherClass = toString.call(b);

      if (className == argsClass) {
        className = objectClass;
      }
      if (otherClass == argsClass) {
        otherClass = objectClass;
      }
      if (className != otherClass) {
        return false;
      }
      switch (className) {
        case boolClass:
        case dateClass:
          // coerce dates and booleans to numbers, dates to milliseconds and booleans
          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal
          return +a == +b;

        case numberClass:
          // treat `NaN` vs. `NaN` as equal
          return (a != +a)
            ? b != +b
            // but treat `+0` vs. `-0` as not equal
            : (a == 0 ? (1 / a == 1 / b) : a == +b);

        case regexpClass:
        case stringClass:
          // coerce regexes to strings (http://es5.github.io/#x15.10.6.4)
          // treat string primitives and their corresponding object instances as equal
          return a == String(b);
      }
      var isArr = className == arrayClass;
      if (!isArr) {
        // unwrap any `lodash` wrapped values
        var aWrapped = hasOwnProperty.call(a, '__wrapped__'),
            bWrapped = hasOwnProperty.call(b, '__wrapped__');

        if (aWrapped || bWrapped) {
          return baseIsEqual(aWrapped ? a.__wrapped__ : a, bWrapped ? b.__wrapped__ : b, callback, isWhere, stackA, stackB);
        }
        // exit for functions and DOM nodes
        if (className != objectClass) {
          return false;
        }
        // in older versions of Opera, `arguments` objects have `Array` constructors
        var ctorA = a.constructor,
            ctorB = b.constructor;

        // non `Object` object instances with different constructors are not equal
        if (ctorA != ctorB &&
              !(isFunction(ctorA) && ctorA instanceof ctorA && isFunction(ctorB) && ctorB instanceof ctorB) &&
              ('constructor' in a && 'constructor' in b)
            ) {
          return false;
        }
      }
      // assume cyclic structures are equal
      // the algorithm for detecting cyclic structures is adapted from ES 5.1
      // section 15.12.3, abstract operation `JO` (http://es5.github.io/#x15.12.3)
      var initedStack = !stackA;
      stackA || (stackA = getArray());
      stackB || (stackB = getArray());

      var length = stackA.length;
      while (length--) {
        if (stackA[length] == a) {
          return stackB[length] == b;
        }
      }
      var size = 0;
      result = true;

      // add `a` and `b` to the stack of traversed objects
      stackA.push(a);
      stackB.push(b);

      // recursively compare objects and arrays (susceptible to call stack limits)
      if (isArr) {
        // compare lengths to determine if a deep comparison is necessary
        length = a.length;
        size = b.length;
        result = size == length;

        if (result || isWhere) {
          // deep compare the contents, ignoring non-numeric properties
          while (size--) {
            var index = length,
                value = b[size];

            if (isWhere) {
              while (index--) {
                if ((result = baseIsEqual(a[index], value, callback, isWhere, stackA, stackB))) {
                  break;
                }
              }
            } else if (!(result = baseIsEqual(a[size], value, callback, isWhere, stackA, stackB))) {
              break;
            }
          }
        }
      }
      else {
        // deep compare objects using `forIn`, instead of `forOwn`, to avoid `Object.keys`
        // which, in this case, is more costly
        forIn(b, function(value, key, b) {
          if (hasOwnProperty.call(b, key)) {
            // count the number of properties.
            size++;
            // deep compare each property value.
            return (result = hasOwnProperty.call(a, key) && baseIsEqual(a[key], value, callback, isWhere, stackA, stackB));
          }
        });

        if (result && !isWhere) {
          // ensure both objects have the same number of properties
          forIn(a, function(value, key, a) {
            if (hasOwnProperty.call(a, key)) {
              // `size` will be `-1` if `a` has more properties than `b`
              return (result = --size > -1);
            }
          });
        }
      }
      stackA.pop();
      stackB.pop();

      if (initedStack) {
        releaseArray(stackA);
        releaseArray(stackB);
      }
      return result;
    }

    /**
     * The base implementation of `_.merge` without argument juggling or support
     * for `thisArg` binding.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {Function} [callback] The function to customize merging properties.
     * @param {Array} [stackA=[]] Tracks traversed source objects.
     * @param {Array} [stackB=[]] Associates values with source counterparts.
     */
    function baseMerge(object, source, callback, stackA, stackB) {
      (isArray(source) ? forEach : forOwn)(source, function(source, key) {
        var found,
            isArr,
            result = source,
            value = object[key];

        if (source && ((isArr = isArray(source)) || isPlainObject(source))) {
          // avoid merging previously merged cyclic sources
          var stackLength = stackA.length;
          while (stackLength--) {
            if ((found = stackA[stackLength] == source)) {
              value = stackB[stackLength];
              break;
            }
          }
          if (!found) {
            var isShallow;
            if (callback) {
              result = callback(value, source);
              if ((isShallow = typeof result != 'undefined')) {
                value = result;
              }
            }
            if (!isShallow) {
              value = isArr
                ? (isArray(value) ? value : [])
                : (isPlainObject(value) ? value : {});
            }
            // add `source` and associated `value` to the stack of traversed objects
            stackA.push(source);
            stackB.push(value);

            // recursively merge objects and arrays (susceptible to call stack limits)
            if (!isShallow) {
              baseMerge(value, source, callback, stackA, stackB);
            }
          }
        }
        else {
          if (callback) {
            result = callback(value, source);
            if (typeof result == 'undefined') {
              result = source;
            }
          }
          if (typeof result != 'undefined') {
            value = result;
          }
        }
        object[key] = value;
      });
    }

    /**
     * The base implementation of `_.random` without argument juggling or support
     * for returning floating-point numbers.
     *
     * @private
     * @param {number} min The minimum possible value.
     * @param {number} max The maximum possible value.
     * @returns {number} Returns a random number.
     */
    function baseRandom(min, max) {
      return min + floor(nativeRandom() * (max - min + 1));
    }

    /**
     * The base implementation of `_.uniq` without support for callback shorthands
     * or `thisArg` binding.
     *
     * @private
     * @param {Array} array The array to process.
     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.
     * @param {Function} [callback] The function called per iteration.
     * @returns {Array} Returns a duplicate-value-free array.
     */
    function baseUniq(array, isSorted, callback) {
      var index = -1,
          indexOf = getIndexOf(),
          length = array ? array.length : 0,
          result = [];

      var isLarge = !isSorted && length >= largeArraySize && indexOf === baseIndexOf,
          seen = (callback || isLarge) ? getArray() : result;

      if (isLarge) {
        var cache = createCache(seen);
        indexOf = cacheIndexOf;
        seen = cache;
      }
      while (++index < length) {
        var value = array[index],
            computed = callback ? callback(value, index, array) : value;

        if (isSorted
              ? !index || seen[seen.length - 1] !== computed
              : indexOf(seen, computed) < 0
            ) {
          if (callback || isLarge) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      if (isLarge) {
        releaseArray(seen.array);
        releaseObject(seen);
      } else if (callback) {
        releaseArray(seen);
      }
      return result;
    }

    /**
     * Creates a function that aggregates a collection, creating an object composed
     * of keys generated from the results of running each element of the collection
     * through a callback. The given `setter` function sets the keys and values
     * of the composed object.
     *
     * @private
     * @param {Function} setter The setter function.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter) {
      return function(collection, callback, thisArg) {
        var result = {};
        callback = lodash.createCallback(callback, thisArg, 3);

        var index = -1,
            length = collection ? collection.length : 0;

        if (typeof length == 'number') {
          while (++index < length) {
            var value = collection[index];
            setter(result, value, callback(value, index, collection), collection);
          }
        } else {
          forOwn(collection, function(value, key, collection) {
            setter(result, value, callback(value, key, collection), collection);
          });
        }
        return result;
      };
    }

    /**
     * Creates a function that, when called, either curries or invokes `func`
     * with an optional `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to reference.
     * @param {number} bitmask The bitmask of method flags to compose.
     *  The bitmask may be composed of the following flags:
     *  1 - `_.bind`
     *  2 - `_.bindKey`
     *  4 - `_.curry`
     *  8 - `_.curry` (bound)
     *  16 - `_.partial`
     *  32 - `_.partialRight`
     * @param {Array} [partialArgs] An array of arguments to prepend to those
     *  provided to the new function.
     * @param {Array} [partialRightArgs] An array of arguments to append to those
     *  provided to the new function.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new function.
     */
    function createWrapper(func, bitmask, partialArgs, partialRightArgs, thisArg, arity) {
      var isBind = bitmask & 1,
          isBindKey = bitmask & 2,
          isCurry = bitmask & 4,
          isCurryBound = bitmask & 8,
          isPartial = bitmask & 16,
          isPartialRight = bitmask & 32;

      if (!isBindKey && !isFunction(func)) {
        throw new TypeError;
      }
      if (isPartial && !partialArgs.length) {
        bitmask &= ~16;
        isPartial = partialArgs = false;
      }
      if (isPartialRight && !partialRightArgs.length) {
        bitmask &= ~32;
        isPartialRight = partialRightArgs = false;
      }
      var bindData = func && func.__bindData__;
      if (bindData && bindData !== true) {
        // clone `bindData`
        bindData = slice(bindData);
        if (bindData[2]) {
          bindData[2] = slice(bindData[2]);
        }
        if (bindData[3]) {
          bindData[3] = slice(bindData[3]);
        }
        // set `thisBinding` is not previously bound
        if (isBind && !(bindData[1] & 1)) {
          bindData[4] = thisArg;
        }
        // set if previously bound but not currently (subsequent curried functions)
        if (!isBind && bindData[1] & 1) {
          bitmask |= 8;
        }
        // set curried arity if not yet set
        if (isCurry && !(bindData[1] & 4)) {
          bindData[5] = arity;
        }
        // append partial left arguments
        if (isPartial) {
          push.apply(bindData[2] || (bindData[2] = []), partialArgs);
        }
        // append partial right arguments
        if (isPartialRight) {
          unshift.apply(bindData[3] || (bindData[3] = []), partialRightArgs);
        }
        // merge flags
        bindData[1] |= bitmask;
        return createWrapper.apply(null, bindData);
      }
      // fast path for `_.bind`
      var creater = (bitmask == 1 || bitmask === 17) ? baseBind : baseCreateWrapper;
      return creater([func, bitmask, partialArgs, partialRightArgs, thisArg, arity]);
    }

    /**
     * Used by `escape` to convert characters to HTML entities.
     *
     * @private
     * @param {string} match The matched character to escape.
     * @returns {string} Returns the escaped character.
     */
    function escapeHtmlChar(match) {
      return htmlEscapes[match];
    }

    /**
     * Gets the appropriate "indexOf" function. If the `_.indexOf` method is
     * customized, this method returns the custom method, otherwise it returns
     * the `baseIndexOf` function.
     *
     * @private
     * @returns {Function} Returns the "indexOf" function.
     */
    function getIndexOf() {
      var result = (result = lodash.indexOf) === indexOf ? baseIndexOf : result;
      return result;
    }

    /**
     * Checks if `value` is a native function.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a native function, else `false`.
     */
    function isNative(value) {
      return typeof value == 'function' && reNative.test(value);
    }

    /**
     * Sets `this` binding data on a given function.
     *
     * @private
     * @param {Function} func The function to set data on.
     * @param {Array} value The data array to set.
     */
    var setBindData = !defineProperty ? noop : function(func, value) {
      descriptor.value = value;
      defineProperty(func, '__bindData__', descriptor);
      descriptor.value = null;
    };

    /**
     * A fallback implementation of `isPlainObject` which checks if a given value
     * is an object created by the `Object` constructor, assuming objects created
     * by the `Object` constructor have no inherited enumerable properties and that
     * there are no `Object.prototype` extensions.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     */
    function shimIsPlainObject(value) {
      var ctor,
          result;

      // avoid non Object objects, `arguments` objects, and DOM elements
      if (!(value && toString.call(value) == objectClass) ||
          (ctor = value.constructor, isFunction(ctor) && !(ctor instanceof ctor))) {
        return false;
      }
      // In most environments an object's own properties are iterated before
      // its inherited properties. If the last iterated property is an object's
      // own property then there are no inherited enumerable properties.
      forIn(value, function(value, key) {
        result = key;
      });
      return typeof result == 'undefined' || hasOwnProperty.call(value, result);
    }

    /**
     * Used by `unescape` to convert HTML entities to characters.
     *
     * @private
     * @param {string} match The matched character to unescape.
     * @returns {string} Returns the unescaped character.
     */
    function unescapeHtmlChar(match) {
      return htmlUnescapes[match];
    }

    /*--------------------------------------------------------------------------*/

    /**
     * Checks if `value` is an `arguments` object.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is an `arguments` object, else `false`.
     * @example
     *
     * (function() { return _.isArguments(arguments); })(1, 2, 3);
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    function isArguments(value) {
      return value && typeof value == 'object' && typeof value.length == 'number' &&
        toString.call(value) == argsClass || false;
    }

    /**
     * Checks if `value` is an array.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is an array, else `false`.
     * @example
     *
     * (function() { return _.isArray(arguments); })();
     * // => false
     *
     * _.isArray([1, 2, 3]);
     * // => true
     */
    var isArray = nativeIsArray || function(value) {
      return value && typeof value == 'object' && typeof value.length == 'number' &&
        toString.call(value) == arrayClass || false;
    };

    /**
     * A fallback implementation of `Object.keys` which produces an array of the
     * given object's own enumerable property names.
     *
     * @private
     * @type Function
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns an array of property names.
     */
    var shimKeys = function(object) {
      var index, iterable = object, result = [];
      if (!iterable) return result;
      if (!(objectTypes[typeof object])) return result;
        for (index in iterable) {
          if (hasOwnProperty.call(iterable, index)) {
            result.push(index);
          }
        }
      return result
    };

    /**
     * Creates an array composed of the own enumerable property names of an object.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns an array of property names.
     * @example
     *
     * _.keys({ 'one': 1, 'two': 2, 'three': 3 });
     * // => ['one', 'two', 'three'] (property order is not guaranteed across environments)
     */
    var keys = !nativeKeys ? shimKeys : function(object) {
      if (!isObject(object)) {
        return [];
      }
      return nativeKeys(object);
    };

    /**
     * Used to convert characters to HTML entities:
     *
     * Though the `>` character is escaped for symmetry, characters like `>` and `/`
     * don't require escaping in HTML and have no special meaning unless they're part
     * of a tag or an unquoted attribute value.
     * http://mathiasbynens.be/notes/ambiguous-ampersands (under "semi-related fun fact")
     */
    var htmlEscapes = {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#39;'
    };

    /** Used to convert HTML entities to characters */
    var htmlUnescapes = invert(htmlEscapes);

    /** Used to match HTML entities and HTML characters */
    var reEscapedHtml = RegExp('(' + keys(htmlUnescapes).join('|') + ')', 'g'),
        reUnescapedHtml = RegExp('[' + keys(htmlEscapes).join('') + ']', 'g');

    /*--------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable properties of source object(s) to the destination
     * object. Subsequent sources will overwrite property assignments of previous
     * sources. If a callback is provided it will be executed to produce the
     * assigned values. The callback is bound to `thisArg` and invoked with two
     * arguments; (objectValue, sourceValue).
     *
     * @static
     * @memberOf _
     * @type Function
     * @alias extend
     * @category Objects
     * @param {Object} object The destination object.
     * @param {...Object} [source] The source objects.
     * @param {Function} [callback] The function to customize assigning values.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns the destination object.
     * @example
     *
     * _.assign({ 'name': 'fred' }, { 'employer': 'slate' });
     * // => { 'name': 'fred', 'employer': 'slate' }
     *
     * var defaults = _.partialRight(_.assign, function(a, b) {
     *   return typeof a == 'undefined' ? b : a;
     * });
     *
     * var object = { 'name': 'barney' };
     * defaults(object, { 'name': 'fred', 'employer': 'slate' });
     * // => { 'name': 'barney', 'employer': 'slate' }
     */
    var assign = function(object, source, guard) {
      var index, iterable = object, result = iterable;
      if (!iterable) return result;
      var args = arguments,
          argsIndex = 0,
          argsLength = typeof guard == 'number' ? 2 : args.length;
      if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {
        var callback = baseCreateCallback(args[--argsLength - 1], args[argsLength--], 2);
      } else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {
        callback = args[--argsLength];
      }
      while (++argsIndex < argsLength) {
        iterable = args[argsIndex];
        if (iterable && objectTypes[typeof iterable]) {
        var ownIndex = -1,
            ownProps = objectTypes[typeof iterable] && keys(iterable),
            length = ownProps ? ownProps.length : 0;

        while (++ownIndex < length) {
          index = ownProps[ownIndex];
          result[index] = callback ? callback(result[index], iterable[index]) : iterable[index];
        }
        }
      }
      return result
    };

    /**
     * Creates a clone of `value`. If `isDeep` is `true` nested objects will also
     * be cloned, otherwise they will be assigned by reference. If a callback
     * is provided it will be executed to produce the cloned values. If the
     * callback returns `undefined` cloning will be handled by the method instead.
     * The callback is bound to `thisArg` and invoked with one argument; (value).
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to clone.
     * @param {boolean} [isDeep=false] Specify a deep clone.
     * @param {Function} [callback] The function to customize cloning values.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the cloned value.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * var shallow = _.clone(characters);
     * shallow[0] === characters[0];
     * // => true
     *
     * var deep = _.clone(characters, true);
     * deep[0] === characters[0];
     * // => false
     *
     * _.mixin({
     *   'clone': _.partialRight(_.clone, function(value) {
     *     return _.isElement(value) ? value.cloneNode(false) : undefined;
     *   })
     * });
     *
     * var clone = _.clone(document.body);
     * clone.childNodes.length;
     * // => 0
     */
    function clone(value, isDeep, callback, thisArg) {
      // allows working with "Collections" methods without using their `index`
      // and `collection` arguments for `isDeep` and `callback`
      if (typeof isDeep != 'boolean' && isDeep != null) {
        thisArg = callback;
        callback = isDeep;
        isDeep = false;
      }
      return baseClone(value, isDeep, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));
    }

    /**
     * Creates a deep clone of `value`. If a callback is provided it will be
     * executed to produce the cloned values. If the callback returns `undefined`
     * cloning will be handled by the method instead. The callback is bound to
     * `thisArg` and invoked with one argument; (value).
     *
     * Note: This method is loosely based on the structured clone algorithm. Functions
     * and DOM nodes are **not** cloned. The enumerable properties of `arguments` objects and
     * objects created by constructors other than `Object` are cloned to plain `Object` objects.
     * See http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to deep clone.
     * @param {Function} [callback] The function to customize cloning values.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the deep cloned value.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * var deep = _.cloneDeep(characters);
     * deep[0] === characters[0];
     * // => false
     *
     * var view = {
     *   'label': 'docs',
     *   'node': element
     * };
     *
     * var clone = _.cloneDeep(view, function(value) {
     *   return _.isElement(value) ? value.cloneNode(true) : undefined;
     * });
     *
     * clone.node == view.node;
     * // => false
     */
    function cloneDeep(value, callback, thisArg) {
      return baseClone(value, true, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));
    }

    /**
     * Creates an object that inherits from the given `prototype` object. If a
     * `properties` object is provided its own enumerable properties are assigned
     * to the created object.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, { 'constructor': Circle });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties ? assign(result, properties) : result;
    }

    /**
     * Assigns own enumerable properties of source object(s) to the destination
     * object for all destination properties that resolve to `undefined`. Once a
     * property is set, additional defaults of the same property will be ignored.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Objects
     * @param {Object} object The destination object.
     * @param {...Object} [source] The source objects.
     * @param- {Object} [guard] Allows working with `_.reduce` without using its
     *  `key` and `object` arguments as sources.
     * @returns {Object} Returns the destination object.
     * @example
     *
     * var object = { 'name': 'barney' };
     * _.defaults(object, { 'name': 'fred', 'employer': 'slate' });
     * // => { 'name': 'barney', 'employer': 'slate' }
     */
    var defaults = function(object, source, guard) {
      var index, iterable = object, result = iterable;
      if (!iterable) return result;
      var args = arguments,
          argsIndex = 0,
          argsLength = typeof guard == 'number' ? 2 : args.length;
      while (++argsIndex < argsLength) {
        iterable = args[argsIndex];
        if (iterable && objectTypes[typeof iterable]) {
        var ownIndex = -1,
            ownProps = objectTypes[typeof iterable] && keys(iterable),
            length = ownProps ? ownProps.length : 0;

        while (++ownIndex < length) {
          index = ownProps[ownIndex];
          if (typeof result[index] == 'undefined') result[index] = iterable[index];
        }
        }
      }
      return result
    };

    /**
     * This method is like `_.findIndex` except that it returns the key of the
     * first element that passes the callback check, instead of the element itself.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to search.
     * @param {Function|Object|string} [callback=identity] The function called per
     *  iteration. If a property name or object is provided it will be used to
     *  create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {string|undefined} Returns the key of the found element, else `undefined`.
     * @example
     *
     * var characters = {
     *   'barney': {  'age': 36, 'blocked': false },
     *   'fred': {    'age': 40, 'blocked': true },
     *   'pebbles': { 'age': 1,  'blocked': false }
     * };
     *
     * _.findKey(characters, function(chr) {
     *   return chr.age < 40;
     * });
     * // => 'barney' (property order is not guaranteed across environments)
     *
     * // using "_.where" callback shorthand
     * _.findKey(characters, { 'age': 1 });
     * // => 'pebbles'
     *
     * // using "_.pluck" callback shorthand
     * _.findKey(characters, 'blocked');
     * // => 'fred'
     */
    function findKey(object, callback, thisArg) {
      var result;
      callback = lodash.createCallback(callback, thisArg, 3);
      forOwn(object, function(value, key, object) {
        if (callback(value, key, object)) {
          result = key;
          return false;
        }
      });
      return result;
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements
     * of a `collection` in the opposite order.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to search.
     * @param {Function|Object|string} [callback=identity] The function called per
     *  iteration. If a property name or object is provided it will be used to
     *  create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {string|undefined} Returns the key of the found element, else `undefined`.
     * @example
     *
     * var characters = {
     *   'barney': {  'age': 36, 'blocked': true },
     *   'fred': {    'age': 40, 'blocked': false },
     *   'pebbles': { 'age': 1,  'blocked': true }
     * };
     *
     * _.findLastKey(characters, function(chr) {
     *   return chr.age < 40;
     * });
     * // => returns `pebbles`, assuming `_.findKey` returns `barney`
     *
     * // using "_.where" callback shorthand
     * _.findLastKey(characters, { 'age': 40 });
     * // => 'fred'
     *
     * // using "_.pluck" callback shorthand
     * _.findLastKey(characters, 'blocked');
     * // => 'pebbles'
     */
    function findLastKey(object, callback, thisArg) {
      var result;
      callback = lodash.createCallback(callback, thisArg, 3);
      forOwnRight(object, function(value, key, object) {
        if (callback(value, key, object)) {
          result = key;
          return false;
        }
      });
      return result;
    }

    /**
     * Iterates over own and inherited enumerable properties of an object,
     * executing the callback for each property. The callback is bound to `thisArg`
     * and invoked with three arguments; (value, key, object). Callbacks may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Objects
     * @param {Object} object The object to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * Shape.prototype.move = function(x, y) {
     *   this.x += x;
     *   this.y += y;
     * };
     *
     * _.forIn(new Shape, function(value, key) {
     *   console.log(key);
     * });
     * // => logs 'x', 'y', and 'move' (property order is not guaranteed across environments)
     */
    var forIn = function(collection, callback, thisArg) {
      var index, iterable = collection, result = iterable;
      if (!iterable) return result;
      if (!objectTypes[typeof iterable]) return result;
      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);
        for (index in iterable) {
          if (callback(iterable[index], index, collection) === false) return result;
        }
      return result
    };

    /**
     * This method is like `_.forIn` except that it iterates over elements
     * of a `collection` in the opposite order.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * Shape.prototype.move = function(x, y) {
     *   this.x += x;
     *   this.y += y;
     * };
     *
     * _.forInRight(new Shape, function(value, key) {
     *   console.log(key);
     * });
     * // => logs 'move', 'y', and 'x' assuming `_.forIn ` logs 'x', 'y', and 'move'
     */
    function forInRight(object, callback, thisArg) {
      var pairs = [];

      forIn(object, function(value, key) {
        pairs.push(key, value);
      });

      var length = pairs.length;
      callback = baseCreateCallback(callback, thisArg, 3);
      while (length--) {
        if (callback(pairs[length--], pairs[length], object) === false) {
          break;
        }
      }
      return object;
    }

    /**
     * Iterates over own enumerable properties of an object, executing the callback
     * for each property. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, key, object). Callbacks may exit iteration early by
     * explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Objects
     * @param {Object} object The object to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns `object`.
     * @example
     *
     * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {
     *   console.log(key);
     * });
     * // => logs '0', '1', and 'length' (property order is not guaranteed across environments)
     */
    var forOwn = function(collection, callback, thisArg) {
      var index, iterable = collection, result = iterable;
      if (!iterable) return result;
      if (!objectTypes[typeof iterable]) return result;
      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);
        var ownIndex = -1,
            ownProps = objectTypes[typeof iterable] && keys(iterable),
            length = ownProps ? ownProps.length : 0;

        while (++ownIndex < length) {
          index = ownProps[ownIndex];
          if (callback(iterable[index], index, collection) === false) return result;
        }
      return result
    };

    /**
     * This method is like `_.forOwn` except that it iterates over elements
     * of a `collection` in the opposite order.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns `object`.
     * @example
     *
     * _.forOwnRight({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {
     *   console.log(key);
     * });
     * // => logs 'length', '1', and '0' assuming `_.forOwn` logs '0', '1', and 'length'
     */
    function forOwnRight(object, callback, thisArg) {
      var props = keys(object),
          length = props.length;

      callback = baseCreateCallback(callback, thisArg, 3);
      while (length--) {
        var key = props[length];
        if (callback(object[key], key, object) === false) {
          break;
        }
      }
      return object;
    }

    /**
     * Creates a sorted array of property names of all enumerable properties,
     * own and inherited, of `object` that have function values.
     *
     * @static
     * @memberOf _
     * @alias methods
     * @category Objects
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns an array of property names that have function values.
     * @example
     *
     * _.functions(_);
     * // => ['all', 'any', 'bind', 'bindAll', 'clone', 'compact', 'compose', ...]
     */
    function functions(object) {
      var result = [];
      forIn(object, function(value, key) {
        if (isFunction(value)) {
          result.push(key);
        }
      });
      return result.sort();
    }

    /**
     * Checks if the specified property name exists as a direct property of `object`,
     * instead of an inherited property.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to inspect.
     * @param {string} key The name of the property to check.
     * @returns {boolean} Returns `true` if key is a direct property, else `false`.
     * @example
     *
     * _.has({ 'a': 1, 'b': 2, 'c': 3 }, 'b');
     * // => true
     */
    function has(object, key) {
      return object ? hasOwnProperty.call(object, key) : false;
    }

    /**
     * Creates an object composed of the inverted keys and values of the given object.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the created inverted object.
     * @example
     *
     * _.invert({ 'first': 'fred', 'second': 'barney' });
     * // => { 'fred': 'first', 'barney': 'second' }
     */
    function invert(object) {
      var index = -1,
          props = keys(object),
          length = props.length,
          result = {};

      while (++index < length) {
        var key = props[index];
        result[object[key]] = key;
      }
      return result;
    }

    /**
     * Checks if `value` is a boolean value.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a boolean value, else `false`.
     * @example
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        value && typeof value == 'object' && toString.call(value) == boolClass || false;
    }

    /**
     * Checks if `value` is a date.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a date, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     */
    function isDate(value) {
      return value && typeof value == 'object' && toString.call(value) == dateClass || false;
    }

    /**
     * Checks if `value` is a DOM element.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     */
    function isElement(value) {
      return value && value.nodeType === 1 || false;
    }

    /**
     * Checks if `value` is empty. Arrays, strings, or `arguments` objects with a
     * length of `0` and objects with no own enumerable properties are considered
     * "empty".
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Array|Object|string} value The value to inspect.
     * @returns {boolean} Returns `true` if the `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({});
     * // => true
     *
     * _.isEmpty('');
     * // => true
     */
    function isEmpty(value) {
      var result = true;
      if (!value) {
        return result;
      }
      var className = toString.call(value),
          length = value.length;

      if ((className == arrayClass || className == stringClass || className == argsClass ) ||
          (className == objectClass && typeof length == 'number' && isFunction(value.splice))) {
        return !length;
      }
      forOwn(value, function() {
        return (result = false);
      });
      return result;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent to each other. If a callback is provided it will be executed
     * to compare values. If the callback returns `undefined` comparisons will
     * be handled by the method instead. The callback is bound to `thisArg` and
     * invoked with two arguments; (a, b).
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} a The value to compare.
     * @param {*} b The other value to compare.
     * @param {Function} [callback] The function to customize comparing values.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'name': 'fred' };
     * var copy = { 'name': 'fred' };
     *
     * object == copy;
     * // => false
     *
     * _.isEqual(object, copy);
     * // => true
     *
     * var words = ['hello', 'goodbye'];
     * var otherWords = ['hi', 'goodbye'];
     *
     * _.isEqual(words, otherWords, function(a, b) {
     *   var reGreet = /^(?:hello|hi)$/i,
     *       aGreet = _.isString(a) && reGreet.test(a),
     *       bGreet = _.isString(b) && reGreet.test(b);
     *
     *   return (aGreet || bGreet) ? (aGreet == bGreet) : undefined;
     * });
     * // => true
     */
    function isEqual(a, b, callback, thisArg) {
      return baseIsEqual(a, b, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 2));
    }

    /**
     * Checks if `value` is, or can be coerced to, a finite number.
     *
     * Note: This is not the same as native `isFinite` which will return true for
     * booleans and empty strings. See http://es5.github.io/#x15.1.2.5.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is finite, else `false`.
     * @example
     *
     * _.isFinite(-101);
     * // => true
     *
     * _.isFinite('10');
     * // => true
     *
     * _.isFinite(true);
     * // => false
     *
     * _.isFinite('');
     * // => false
     *
     * _.isFinite(Infinity);
     * // => false
     */
    function isFinite(value) {
      return nativeIsFinite(value) && !nativeIsNaN(parseFloat(value));
    }

    /**
     * Checks if `value` is a function.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     */
    function isFunction(value) {
      return typeof value == 'function';
    }

    /**
     * Checks if `value` is the language type of Object.
     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(1);
     * // => false
     */
    function isObject(value) {
      // check if the value is the ECMAScript language type of Object
      // http://es5.github.io/#x8
      // and avoid a V8 bug
      // http://code.google.com/p/v8/issues/detail?id=2291
      return !!(value && objectTypes[typeof value]);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * Note: This is not the same as native `isNaN` which will return `true` for
     * `undefined` and other non-numeric values. See http://es5.github.io/#x15.1.2.4.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // `NaN` as a primitive is the only value that is not equal to itself
      // (perform the [[Class]] check first to avoid errors with some host objects in IE)
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(undefined);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is a number.
     *
     * Note: `NaN` is considered a number. See http://es5.github.io/#x8.5.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(8.4 * 5);
     * // => true
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        value && typeof value == 'object' && toString.call(value) == numberClass || false;
    }

    /**
     * Checks if `value` is an object created by the `Object` constructor.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * _.isPlainObject(new Shape);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     */
    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {
      if (!(value && toString.call(value) == objectClass)) {
        return false;
      }
      var valueOf = value.valueOf,
          objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);

      return objProto
        ? (value == objProto || getPrototypeOf(value) == objProto)
        : shimIsPlainObject(value);
    };

    /**
     * Checks if `value` is a regular expression.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a regular expression, else `false`.
     * @example
     *
     * _.isRegExp(/fred/);
     * // => true
     */
    function isRegExp(value) {
      return value && typeof value == 'object' && toString.call(value) == regexpClass || false;
    }

    /**
     * Checks if `value` is a string.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a string, else `false`.
     * @example
     *
     * _.isString('fred');
     * // => true
     */
    function isString(value) {
      return typeof value == 'string' ||
        value && typeof value == 'object' && toString.call(value) == stringClass || false;
    }

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     */
    function isUndefined(value) {
      return typeof value == 'undefined';
    }

    /**
     * Creates an object with the same keys as `object` and values generated by
     * running each own enumerable property of `object` through the callback.
     * The callback is bound to `thisArg` and invoked with three arguments;
     * (value, key, object).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new object with values of the results of each `callback` execution.
     * @example
     *
     * _.mapValues({ 'a': 1, 'b': 2, 'c': 3} , function(num) { return num * 3; });
     * // => { 'a': 3, 'b': 6, 'c': 9 }
     *
     * var characters = {
     *   'fred': { 'name': 'fred', 'age': 40 },
     *   'pebbles': { 'name': 'pebbles', 'age': 1 }
     * };
     *
     * // using "_.pluck" callback shorthand
     * _.mapValues(characters, 'age');
     * // => { 'fred': 40, 'pebbles': 1 }
     */
    function mapValues(object, callback, thisArg) {
      var result = {};
      callback = lodash.createCallback(callback, thisArg, 3);

      forOwn(object, function(value, key, object) {
        result[key] = callback(value, key, object);
      });
      return result;
    }

    /**
     * Recursively merges own enumerable properties of the source object(s), that
     * don't resolve to `undefined` into the destination object. Subsequent sources
     * will overwrite property assignments of previous sources. If a callback is
     * provided it will be executed to produce the merged values of the destination
     * and source properties. If the callback returns `undefined` merging will
     * be handled by the method instead. The callback is bound to `thisArg` and
     * invoked with two arguments; (objectValue, sourceValue).
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The destination object.
     * @param {...Object} [source] The source objects.
     * @param {Function} [callback] The function to customize merging properties.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns the destination object.
     * @example
     *
     * var names = {
     *   'characters': [
     *     { 'name': 'barney' },
     *     { 'name': 'fred' }
     *   ]
     * };
     *
     * var ages = {
     *   'characters': [
     *     { 'age': 36 },
     *     { 'age': 40 }
     *   ]
     * };
     *
     * _.merge(names, ages);
     * // => { 'characters': [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred', 'age': 40 }] }
     *
     * var food = {
     *   'fruits': ['apple'],
     *   'vegetables': ['beet']
     * };
     *
     * var otherFood = {
     *   'fruits': ['banana'],
     *   'vegetables': ['carrot']
     * };
     *
     * _.merge(food, otherFood, function(a, b) {
     *   return _.isArray(a) ? a.concat(b) : undefined;
     * });
     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot] }
     */
    function merge(object) {
      var args = arguments,
          length = 2;

      if (!isObject(object)) {
        return object;
      }
      // allows working with `_.reduce` and `_.reduceRight` without using
      // their `index` and `collection` arguments
      if (typeof args[2] != 'number') {
        length = args.length;
      }
      if (length > 3 && typeof args[length - 2] == 'function') {
        var callback = baseCreateCallback(args[--length - 1], args[length--], 2);
      } else if (length > 2 && typeof args[length - 1] == 'function') {
        callback = args[--length];
      }
      var sources = slice(arguments, 1, length),
          index = -1,
          stackA = getArray(),
          stackB = getArray();

      while (++index < length) {
        baseMerge(object, sources[index], callback, stackA, stackB);
      }
      releaseArray(stackA);
      releaseArray(stackB);
      return object;
    }

    /**
     * Creates a shallow clone of `object` excluding the specified properties.
     * Property names may be specified as individual arguments or as arrays of
     * property names. If a callback is provided it will be executed for each
     * property of `object` omitting the properties the callback returns truey
     * for. The callback is bound to `thisArg` and invoked with three arguments;
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The source object.
     * @param {Function|...string|string[]} [callback] The properties to omit or the
     *  function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns an object without the omitted properties.
     * @example
     *
     * _.omit({ 'name': 'fred', 'age': 40 }, 'age');
     * // => { 'name': 'fred' }
     *
     * _.omit({ 'name': 'fred', 'age': 40 }, function(value) {
     *   return typeof value == 'number';
     * });
     * // => { 'name': 'fred' }
     */
    function omit(object, callback, thisArg) {
      var result = {};
      if (typeof callback != 'function') {
        var props = [];
        forIn(object, function(value, key) {
          props.push(key);
        });
        props = baseDifference(props, baseFlatten(arguments, true, false, 1));

        var index = -1,
            length = props.length;

        while (++index < length) {
          var key = props[index];
          result[key] = object[key];
        }
      } else {
        callback = lodash.createCallback(callback, thisArg, 3);
        forIn(object, function(value, key, object) {
          if (!callback(value, key, object)) {
            result[key] = value;
          }
        });
      }
      return result;
    }

    /**
     * Creates a two dimensional array of an object's key-value pairs,
     * i.e. `[[key1, value1], [key2, value2]]`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns new array of key-value pairs.
     * @example
     *
     * _.pairs({ 'barney': 36, 'fred': 40 });
     * // => [['barney', 36], ['fred', 40]] (property order is not guaranteed across environments)
     */
    function pairs(object) {
      var index = -1,
          props = keys(object),
          length = props.length,
          result = Array(length);

      while (++index < length) {
        var key = props[index];
        result[index] = [key, object[key]];
      }
      return result;
    }

    /**
     * Creates a shallow clone of `object` composed of the specified properties.
     * Property names may be specified as individual arguments or as arrays of
     * property names. If a callback is provided it will be executed for each
     * property of `object` picking the properties the callback returns truey
     * for. The callback is bound to `thisArg` and invoked with three arguments;
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The source object.
     * @param {Function|...string|string[]} [callback] The function called per
     *  iteration or property names to pick, specified as individual property
     *  names or arrays of property names.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns an object composed of the picked properties.
     * @example
     *
     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, 'name');
     * // => { 'name': 'fred' }
     *
     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, function(value, key) {
     *   return key.charAt(0) != '_';
     * });
     * // => { 'name': 'fred' }
     */
    function pick(object, callback, thisArg) {
      var result = {};
      if (typeof callback != 'function') {
        var index = -1,
            props = baseFlatten(arguments, true, false, 1),
            length = isObject(object) ? props.length : 0;

        while (++index < length) {
          var key = props[index];
          if (key in object) {
            result[key] = object[key];
          }
        }
      } else {
        callback = lodash.createCallback(callback, thisArg, 3);
        forIn(object, function(value, key, object) {
          if (callback(value, key, object)) {
            result[key] = value;
          }
        });
      }
      return result;
    }

    /**
     * An alternative to `_.reduce` this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable properties through a callback, with each callback execution
     * potentially mutating the `accumulator` object. The callback is bound to
     * `thisArg` and invoked with four arguments; (accumulator, value, key, object).
     * Callbacks may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Array|Object} object The object to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * var squares = _.transform([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], function(result, num) {
     *   num *= num;
     *   if (num % 2) {
     *     return result.push(num) < 3;
     *   }
     * });
     * // => [1, 9, 25]
     *
     * var mapped = _.transform({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {
     *   result[key] = num * 3;
     * });
     * // => { 'a': 3, 'b': 6, 'c': 9 }
     */
    function transform(object, callback, accumulator, thisArg) {
      var isArr = isArray(object);
      if (accumulator == null) {
        if (isArr) {
          accumulator = [];
        } else {
          var ctor = object && object.constructor,
              proto = ctor && ctor.prototype;

          accumulator = baseCreate(proto);
        }
      }
      if (callback) {
        callback = lodash.createCallback(callback, thisArg, 4);
        (isArr ? forEach : forOwn)(object, function(value, index, object) {
          return callback(accumulator, value, index, object);
        });
      }
      return accumulator;
    }

    /**
     * Creates an array composed of the own enumerable property values of `object`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns an array of property values.
     * @example
     *
     * _.values({ 'one': 1, 'two': 2, 'three': 3 });
     * // => [1, 2, 3] (property order is not guaranteed across environments)
     */
    function values(object) {
      var index = -1,
          props = keys(object),
          length = props.length,
          result = Array(length);

      while (++index < length) {
        result[index] = object[props[index]];
      }
      return result;
    }

    /*--------------------------------------------------------------------------*/

    /**
     * Creates an array of elements from the specified indexes, or keys, of the
     * `collection`. Indexes may be specified as individual arguments or as arrays
     * of indexes.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {...(number|number[]|string|string[])} [index] The indexes of `collection`
     *   to retrieve, specified as individual indexes or arrays of indexes.
     * @returns {Array} Returns a new array of elements corresponding to the
     *  provided indexes.
     * @example
     *
     * _.at(['a', 'b', 'c', 'd', 'e'], [0, 2, 4]);
     * // => ['a', 'c', 'e']
     *
     * _.at(['fred', 'barney', 'pebbles'], 0, 2);
     * // => ['fred', 'pebbles']
     */
    function at(collection) {
      var args = arguments,
          index = -1,
          props = baseFlatten(args, true, false, 1),
          length = (args[2] && args[2][args[1]] === collection) ? 1 : props.length,
          result = Array(length);

      while(++index < length) {
        result[index] = collection[props[index]];
      }
      return result;
    }

    /**
     * Checks if a given value is present in a collection using strict equality
     * for comparisons, i.e. `===`. If `fromIndex` is negative, it is used as the
     * offset from the end of the collection.
     *
     * @static
     * @memberOf _
     * @alias include
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {*} target The value to check for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {boolean} Returns `true` if the `target` element is found, else `false`.
     * @example
     *
     * _.contains([1, 2, 3], 1);
     * // => true
     *
     * _.contains([1, 2, 3], 1, 2);
     * // => false
     *
     * _.contains({ 'name': 'fred', 'age': 40 }, 'fred');
     * // => true
     *
     * _.contains('pebbles', 'eb');
     * // => true
     */
    function contains(collection, target, fromIndex) {
      var index = -1,
          indexOf = getIndexOf(),
          length = collection ? collection.length : 0,
          result = false;

      fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex) || 0;
      if (isArray(collection)) {
        result = indexOf(collection, target, fromIndex) > -1;
      } else if (typeof length == 'number') {
        result = (isString(collection) ? collection.indexOf(target, fromIndex) : indexOf(collection, target, fromIndex)) > -1;
      } else {
        forOwn(collection, function(value) {
          if (++index >= fromIndex) {
            return !(result = value === target);
          }
        });
      }
      return result;
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` through the callback. The corresponding value
     * of each key is the number of times the key was returned by the callback.
     * The callback is bound to `thisArg` and invoked with three arguments;
     * (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([4.3, 6.1, 6.4], function(num) { return Math.floor(num); });
     * // => { '4': 1, '6': 2 }
     *
     * _.countBy([4.3, 6.1, 6.4], function(num) { return this.floor(num); }, Math);
     * // => { '4': 1, '6': 2 }
     *
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      (hasOwnProperty.call(result, key) ? result[key]++ : result[key] = 1);
    });

    /**
     * Checks if the given callback returns truey value for **all** elements of
     * a collection. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias all
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {boolean} Returns `true` if all elements passed the callback check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes']);
     * // => false
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.every(characters, 'age');
     * // => true
     *
     * // using "_.where" callback shorthand
     * _.every(characters, { 'age': 36 });
     * // => false
     */
    function every(collection, callback, thisArg) {
      var result = true;
      callback = lodash.createCallback(callback, thisArg, 3);

      var index = -1,
          length = collection ? collection.length : 0;

      if (typeof length == 'number') {
        while (++index < length) {
          if (!(result = !!callback(collection[index], index, collection))) {
            break;
          }
        }
      } else {
        forOwn(collection, function(value, index, collection) {
          return (result = !!callback(value, index, collection));
        });
      }
      return result;
    }

    /**
     * Iterates over elements of a collection, returning an array of all elements
     * the callback returns truey for. The callback is bound to `thisArg` and
     * invoked with three arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias select
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new array of elements that passed the callback check.
     * @example
     *
     * var evens = _.filter([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });
     * // => [2, 4, 6]
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36, 'blocked': false },
     *   { 'name': 'fred',   'age': 40, 'blocked': true }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.filter(characters, 'blocked');
     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]
     *
     * // using "_.where" callback shorthand
     * _.filter(characters, { 'age': 36 });
     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]
     */
    function filter(collection, callback, thisArg) {
      var result = [];
      callback = lodash.createCallback(callback, thisArg, 3);

      var index = -1,
          length = collection ? collection.length : 0;

      if (typeof length == 'number') {
        while (++index < length) {
          var value = collection[index];
          if (callback(value, index, collection)) {
            result.push(value);
          }
        }
      } else {
        forOwn(collection, function(value, index, collection) {
          if (callback(value, index, collection)) {
            result.push(value);
          }
        });
      }
      return result;
    }

    /**
     * Iterates over elements of a collection, returning the first element that
     * the callback returns truey for. The callback is bound to `thisArg` and
     * invoked with three arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias detect, findWhere
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the found element, else `undefined`.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney',  'age': 36, 'blocked': false },
     *   { 'name': 'fred',    'age': 40, 'blocked': true },
     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }
     * ];
     *
     * _.find(characters, function(chr) {
     *   return chr.age < 40;
     * });
     * // => { 'name': 'barney', 'age': 36, 'blocked': false }
     *
     * // using "_.where" callback shorthand
     * _.find(characters, { 'age': 1 });
     * // =>  { 'name': 'pebbles', 'age': 1, 'blocked': false }
     *
     * // using "_.pluck" callback shorthand
     * _.find(characters, 'blocked');
     * // => { 'name': 'fred', 'age': 40, 'blocked': true }
     */
    function find(collection, callback, thisArg) {
      callback = lodash.createCallback(callback, thisArg, 3);

      var index = -1,
          length = collection ? collection.length : 0;

      if (typeof length == 'number') {
        while (++index < length) {
          var value = collection[index];
          if (callback(value, index, collection)) {
            return value;
          }
        }
      } else {
        var result;
        forOwn(collection, function(value, index, collection) {
          if (callback(value, index, collection)) {
            result = value;
            return false;
          }
        });
        return result;
      }
    }

    /**
     * This method is like `_.find` except that it iterates over elements
     * of a `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the found element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(num) {
     *   return num % 2 == 1;
     * });
     * // => 3
     */
    function findLast(collection, callback, thisArg) {
      var result;
      callback = lodash.createCallback(callback, thisArg, 3);
      forEachRight(collection, function(value, index, collection) {
        if (callback(value, index, collection)) {
          result = value;
          return false;
        }
      });
      return result;
    }

    /**
     * Iterates over elements of a collection, executing the callback for each
     * element. The callback is bound to `thisArg` and invoked with three arguments;
     * (value, index|key, collection). Callbacks may exit iteration early by
     * explicitly returning `false`.
     *
     * Note: As with other "Collections" methods, objects with a `length` property
     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`
     * may be used for object iteration.
     *
     * @static
     * @memberOf _
     * @alias each
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array|Object|string} Returns `collection`.
     * @example
     *
     * _([1, 2, 3]).forEach(function(num) { console.log(num); }).join(',');
     * // => logs each number and returns '1,2,3'
     *
     * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { console.log(num); });
     * // => logs each number and returns the object (property order is not guaranteed across environments)
     */
    function forEach(collection, callback, thisArg) {
      var index = -1,
          length = collection ? collection.length : 0;

      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);
      if (typeof length == 'number') {
        while (++index < length) {
          if (callback(collection[index], index, collection) === false) {
            break;
          }
        }
      } else {
        forOwn(collection, callback);
      }
      return collection;
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements
     * of a `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @alias eachRight
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array|Object|string} Returns `collection`.
     * @example
     *
     * _([1, 2, 3]).forEachRight(function(num) { console.log(num); }).join(',');
     * // => logs each number from right to left and returns '3,2,1'
     */
    function forEachRight(collection, callback, thisArg) {
      var length = collection ? collection.length : 0;
      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);
      if (typeof length == 'number') {
        while (length--) {
          if (callback(collection[length], length, collection) === false) {
            break;
          }
        }
      } else {
        var props = keys(collection);
        length = props.length;
        forOwn(collection, function(value, key, collection) {
          key = props ? props[--length] : --length;
          return callback(collection[key], key, collection);
        });
      }
      return collection;
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of a collection through the callback. The corresponding value
     * of each key is an array of the elements responsible for generating the key.
     * The callback is bound to `thisArg` and invoked with three arguments;
     * (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([4.2, 6.1, 6.4], function(num) { return Math.floor(num); });
     * // => { '4': [4.2], '6': [6.1, 6.4] }
     *
     * _.groupBy([4.2, 6.1, 6.4], function(num) { return this.floor(num); }, Math);
     * // => { '4': [4.2], '6': [6.1, 6.4] }
     *
     * // using "_.pluck" callback shorthand
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      (hasOwnProperty.call(result, key) ? result[key] : result[key] = []).push(value);
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of the collection through the given callback. The corresponding
     * value of each key is the last element responsible for generating the key.
     * The callback is bound to `thisArg` and invoked with three arguments;
     * (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var keys = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.indexBy(keys, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     *
     * _.indexBy(keys, function(key) { return String.fromCharCode(key.code); });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.indexBy(characters, function(key) { this.fromCharCode(key.code); }, String);
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     */
    var indexBy = createAggregator(function(result, value, key) {
      result[key] = value;
    });

    /**
     * Invokes the method named by `methodName` on each element in the `collection`
     * returning an array of the results of each invoked method. Additional arguments
     * will be provided to each invoked method. If `methodName` is a function it
     * will be invoked for, and `this` bound to, each element in the `collection`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|string} methodName The name of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [arg] Arguments to invoke the method with.
     * @returns {Array} Returns a new array of the results of each invoked method.
     * @example
     *
     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invoke([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    function invoke(collection, methodName) {
      var args = slice(arguments, 2),
          index = -1,
          isFunc = typeof methodName == 'function',
          length = collection ? collection.length : 0,
          result = Array(typeof length == 'number' ? length : 0);

      forEach(collection, function(value) {
        result[++index] = (isFunc ? methodName : value[methodName]).apply(value, args);
      });
      return result;
    }

    /**
     * Creates an array of values by running each element in the collection
     * through the callback. The callback is bound to `thisArg` and invoked with
     * three arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias collect
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new array of the results of each `callback` execution.
     * @example
     *
     * _.map([1, 2, 3], function(num) { return num * 3; });
     * // => [3, 6, 9]
     *
     * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { return num * 3; });
     * // => [3, 6, 9] (property order is not guaranteed across environments)
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.map(characters, 'name');
     * // => ['barney', 'fred']
     */
    function map(collection, callback, thisArg) {
      var index = -1,
          length = collection ? collection.length : 0;

      callback = lodash.createCallback(callback, thisArg, 3);
      if (typeof length == 'number') {
        var result = Array(length);
        while (++index < length) {
          result[index] = callback(collection[index], index, collection);
        }
      } else {
        result = [];
        forOwn(collection, function(value, key, collection) {
          result[++index] = callback(value, key, collection);
        });
      }
      return result;
    }

    /**
     * Retrieves the maximum value of a collection. If the collection is empty or
     * falsey `-Infinity` is returned. If a callback is provided it will be executed
     * for each value in the collection to generate the criterion by which the value
     * is ranked. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, index, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * _.max(characters, function(chr) { return chr.age; });
     * // => { 'name': 'fred', 'age': 40 };
     *
     * // using "_.pluck" callback shorthand
     * _.max(characters, 'age');
     * // => { 'name': 'fred', 'age': 40 };
     */
    function max(collection, callback, thisArg) {
      var computed = -Infinity,
          result = computed;

      // allows working with functions like `_.map` without using
      // their `index` argument as a callback
      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {
        callback = null;
      }
      if (callback == null && isArray(collection)) {
        var index = -1,
            length = collection.length;

        while (++index < length) {
          var value = collection[index];
          if (value > result) {
            result = value;
          }
        }
      } else {
        callback = (callback == null && isString(collection))
          ? charAtCallback
          : lodash.createCallback(callback, thisArg, 3);

        forEach(collection, function(value, index, collection) {
          var current = callback(value, index, collection);
          if (current > computed) {
            computed = current;
            result = value;
          }
        });
      }
      return result;
    }

    /**
     * Retrieves the minimum value of a collection. If the collection is empty or
     * falsey `Infinity` is returned. If a callback is provided it will be executed
     * for each value in the collection to generate the criterion by which the value
     * is ranked. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, index, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * _.min(characters, function(chr) { return chr.age; });
     * // => { 'name': 'barney', 'age': 36 };
     *
     * // using "_.pluck" callback shorthand
     * _.min(characters, 'age');
     * // => { 'name': 'barney', 'age': 36 };
     */
    function min(collection, callback, thisArg) {
      var computed = Infinity,
          result = computed;

      // allows working with functions like `_.map` without using
      // their `index` argument as a callback
      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {
        callback = null;
      }
      if (callback == null && isArray(collection)) {
        var index = -1,
            length = collection.length;

        while (++index < length) {
          var value = collection[index];
          if (value < result) {
            result = value;
          }
        }
      } else {
        callback = (callback == null && isString(collection))
          ? charAtCallback
          : lodash.createCallback(callback, thisArg, 3);

        forEach(collection, function(value, index, collection) {
          var current = callback(value, index, collection);
          if (current < computed) {
            computed = current;
            result = value;
          }
        });
      }
      return result;
    }

    /**
     * Retrieves the value of a specified property from all elements in the collection.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {string} property The name of the property to pluck.
     * @returns {Array} Returns a new array of property values.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * _.pluck(characters, 'name');
     * // => ['barney', 'fred']
     */
    var pluck = map;

    /**
     * Reduces a collection to a value which is the accumulated result of running
     * each element in the collection through the callback, where each successive
     * callback execution consumes the return value of the previous execution. If
     * `accumulator` is not provided the first element of the collection will be
     * used as the initial `accumulator` value. The callback is bound to `thisArg`
     * and invoked with four arguments; (accumulator, value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @alias foldl, inject
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [accumulator] Initial value of the accumulator.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * var sum = _.reduce([1, 2, 3], function(sum, num) {
     *   return sum + num;
     * });
     * // => 6
     *
     * var mapped = _.reduce({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {
     *   result[key] = num * 3;
     *   return result;
     * }, {});
     * // => { 'a': 3, 'b': 6, 'c': 9 }
     */
    function reduce(collection, callback, accumulator, thisArg) {
      if (!collection) return accumulator;
      var noaccum = arguments.length < 3;
      callback = lodash.createCallback(callback, thisArg, 4);

      var index = -1,
          length = collection.length;

      if (typeof length == 'number') {
        if (noaccum) {
          accumulator = collection[++index];
        }
        while (++index < length) {
          accumulator = callback(accumulator, collection[index], index, collection);
        }
      } else {
        forOwn(collection, function(value, index, collection) {
          accumulator = noaccum
            ? (noaccum = false, value)
            : callback(accumulator, value, index, collection)
        });
      }
      return accumulator;
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements
     * of a `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @alias foldr
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [accumulator] Initial value of the accumulator.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * var list = [[0, 1], [2, 3], [4, 5]];
     * var flat = _.reduceRight(list, function(a, b) { return a.concat(b); }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, callback, accumulator, thisArg) {
      var noaccum = arguments.length < 3;
      callback = lodash.createCallback(callback, thisArg, 4);
      forEachRight(collection, function(value, index, collection) {
        accumulator = noaccum
          ? (noaccum = false, value)
          : callback(accumulator, value, index, collection);
      });
      return accumulator;
    }

    /**
     * The opposite of `_.filter` this method returns the elements of a
     * collection that the callback does **not** return truey for.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new array of elements that failed the callback check.
     * @example
     *
     * var odds = _.reject([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });
     * // => [1, 3, 5]
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36, 'blocked': false },
     *   { 'name': 'fred',   'age': 40, 'blocked': true }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.reject(characters, 'blocked');
     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]
     *
     * // using "_.where" callback shorthand
     * _.reject(characters, { 'age': 36 });
     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]
     */
    function reject(collection, callback, thisArg) {
      callback = lodash.createCallback(callback, thisArg, 3);
      return filter(collection, function(value, index, collection) {
        return !callback(value, index, collection);
      });
    }

    /**
     * Retrieves a random element or `n` random elements from a collection.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to sample.
     * @param {number} [n] The number of elements to sample.
     * @param- {Object} [guard] Allows working with functions like `_.map`
     *  without using their `index` arguments as `n`.
     * @returns {Array} Returns the random sample(s) of `collection`.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     *
     * _.sample([1, 2, 3, 4], 2);
     * // => [3, 1]
     */
    function sample(collection, n, guard) {
      if (collection && typeof collection.length != 'number') {
        collection = values(collection);
      }
      if (n == null || guard) {
        return collection ? collection[baseRandom(0, collection.length - 1)] : undefined;
      }
      var result = shuffle(collection);
      result.length = nativeMin(nativeMax(0, n), result.length);
      return result;
    }

    /**
     * Creates an array of shuffled values, using a version of the Fisher-Yates
     * shuffle. See http://en.wikipedia.org/wiki/Fisher-Yates_shuffle.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to shuffle.
     * @returns {Array} Returns a new shuffled collection.
     * @example
     *
     * _.shuffle([1, 2, 3, 4, 5, 6]);
     * // => [4, 1, 6, 3, 5, 2]
     */
    function shuffle(collection) {
      var index = -1,
          length = collection ? collection.length : 0,
          result = Array(typeof length == 'number' ? length : 0);

      forEach(collection, function(value) {
        var rand = baseRandom(0, ++index);
        result[index] = result[rand];
        result[rand] = value;
      });
      return result;
    }

    /**
     * Gets the size of the `collection` by returning `collection.length` for arrays
     * and array-like objects or the number of own enumerable properties for objects.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns `collection.length` or number of own enumerable properties.
     * @example
     *
     * _.size([1, 2]);
     * // => 2
     *
     * _.size({ 'one': 1, 'two': 2, 'three': 3 });
     * // => 3
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      var length = collection ? collection.length : 0;
      return typeof length == 'number' ? length : keys(collection).length;
    }

    /**
     * Checks if the callback returns a truey value for **any** element of a
     * collection. The function returns as soon as it finds a passing value and
     * does not iterate over the entire collection. The callback is bound to
     * `thisArg` and invoked with three arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias any
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {boolean} Returns `true` if any element passed the callback check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36, 'blocked': false },
     *   { 'name': 'fred',   'age': 40, 'blocked': true }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.some(characters, 'blocked');
     * // => true
     *
     * // using "_.where" callback shorthand
     * _.some(characters, { 'age': 1 });
     * // => false
     */
    function some(collection, callback, thisArg) {
      var result;
      callback = lodash.createCallback(callback, thisArg, 3);

      var index = -1,
          length = collection ? collection.length : 0;

      if (typeof length == 'number') {
        while (++index < length) {
          if ((result = callback(collection[index], index, collection))) {
            break;
          }
        }
      } else {
        forOwn(collection, function(value, index, collection) {
          return !(result = callback(value, index, collection));
        });
      }
      return !!result;
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection through the callback. This method
     * performs a stable sort, that is, it will preserve the original sort order
     * of equal elements. The callback is bound to `thisArg` and invoked with
     * three arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an array of property names is provided for `callback` the collection
     * will be sorted by each property value.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Array|Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new array of sorted elements.
     * @example
     *
     * _.sortBy([1, 2, 3], function(num) { return Math.sin(num); });
     * // => [3, 1, 2]
     *
     * _.sortBy([1, 2, 3], function(num) { return this.sin(num); }, Math);
     * // => [3, 1, 2]
     *
     * var characters = [
     *   { 'name': 'barney',  'age': 36 },
     *   { 'name': 'fred',    'age': 40 },
     *   { 'name': 'barney',  'age': 26 },
     *   { 'name': 'fred',    'age': 30 }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.map(_.sortBy(characters, 'age'), _.values);
     * // => [['barney', 26], ['fred', 30], ['barney', 36], ['fred', 40]]
     *
     * // sorting by multiple properties
     * _.map(_.sortBy(characters, ['name', 'age']), _.values);
     * // = > [['barney', 26], ['barney', 36], ['fred', 30], ['fred', 40]]
     */
    function sortBy(collection, callback, thisArg) {
      var index = -1,
          isArr = isArray(callback),
          length = collection ? collection.length : 0,
          result = Array(typeof length == 'number' ? length : 0);

      if (!isArr) {
        callback = lodash.createCallback(callback, thisArg, 3);
      }
      forEach(collection, function(value, key, collection) {
        var object = result[++index] = getObject();
        if (isArr) {
          object.criteria = map(callback, function(key) { return value[key]; });
        } else {
          (object.criteria = getArray())[0] = callback(value, key, collection);
        }
        object.index = index;
        object.value = value;
      });

      length = result.length;
      result.sort(compareAscending);
      while (length--) {
        var object = result[length];
        result[length] = object.value;
        if (!isArr) {
          releaseArray(object.criteria);
        }
        releaseObject(object);
      }
      return result;
    }

    /**
     * Converts the `collection` to an array.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to convert.
     * @returns {Array} Returns the new converted array.
     * @example
     *
     * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3, 4);
     * // => [2, 3, 4]
     */
    function toArray(collection) {
      if (collection && typeof collection.length == 'number') {
        return slice(collection);
      }
      return values(collection);
    }

    /**
     * Performs a deep comparison of each element in a `collection` to the given
     * `properties` object, returning an array of all elements that have equivalent
     * property values.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Object} props The object of property values to filter by.
     * @returns {Array} Returns a new array of elements that have the given properties.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36, 'pets': ['hoppy'] },
     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }
     * ];
     *
     * _.where(characters, { 'age': 36 });
     * // => [{ 'name': 'barney', 'age': 36, 'pets': ['hoppy'] }]
     *
     * _.where(characters, { 'pets': ['dino'] });
     * // => [{ 'name': 'fred', 'age': 40, 'pets': ['baby puss', 'dino'] }]
     */
    var where = filter;

    /*--------------------------------------------------------------------------*/

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are all falsey.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to compact.
     * @returns {Array} Returns a new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array ? array.length : 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * Creates an array excluding all values of the provided arrays using strict
     * equality for comparisons, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to process.
     * @param {...Array} [values] The arrays of values to exclude.
     * @returns {Array} Returns a new array of filtered values.
     * @example
     *
     * _.difference([1, 2, 3, 4, 5], [5, 2, 10]);
     * // => [1, 3, 4]
     */
    function difference(array) {
      return baseDifference(array, baseFlatten(arguments, true, true, 1));
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element that passes the callback check, instead of the element itself.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to search.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney',  'age': 36, 'blocked': false },
     *   { 'name': 'fred',    'age': 40, 'blocked': true },
     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }
     * ];
     *
     * _.findIndex(characters, function(chr) {
     *   return chr.age < 20;
     * });
     * // => 2
     *
     * // using "_.where" callback shorthand
     * _.findIndex(characters, { 'age': 36 });
     * // => 0
     *
     * // using "_.pluck" callback shorthand
     * _.findIndex(characters, 'blocked');
     * // => 1
     */
    function findIndex(array, callback, thisArg) {
      var index = -1,
          length = array ? array.length : 0;

      callback = lodash.createCallback(callback, thisArg, 3);
      while (++index < length) {
        if (callback(array[index], index, array)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of a `collection` from right to left.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to search.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney',  'age': 36, 'blocked': true },
     *   { 'name': 'fred',    'age': 40, 'blocked': false },
     *   { 'name': 'pebbles', 'age': 1,  'blocked': true }
     * ];
     *
     * _.findLastIndex(characters, function(chr) {
     *   return chr.age > 30;
     * });
     * // => 1
     *
     * // using "_.where" callback shorthand
     * _.findLastIndex(characters, { 'age': 36 });
     * // => 0
     *
     * // using "_.pluck" callback shorthand
     * _.findLastIndex(characters, 'blocked');
     * // => 2
     */
    function findLastIndex(array, callback, thisArg) {
      var length = array ? array.length : 0;
      callback = lodash.createCallback(callback, thisArg, 3);
      while (length--) {
        if (callback(array[length], length, array)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Gets the first element or first `n` elements of an array. If a callback
     * is provided elements at the beginning of the array are returned as long
     * as the callback returns truey. The callback is bound to `thisArg` and
     * invoked with three arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias head, take
     * @category Arrays
     * @param {Array} array The array to query.
     * @param {Function|Object|number|string} [callback] The function called
     *  per element or the number of elements to return. If a property name or
     *  object is provided it will be used to create a "_.pluck" or "_.where"
     *  style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the first element(s) of `array`.
     * @example
     *
     * _.first([1, 2, 3]);
     * // => 1
     *
     * _.first([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.first([1, 2, 3], function(num) {
     *   return num < 3;
     * });
     * // => [1, 2]
     *
     * var characters = [
     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },
     *   { 'name': 'fred',    'blocked': false, 'employer': 'slate' },
     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.first(characters, 'blocked');
     * // => [{ 'name': 'barney', 'blocked': true, 'employer': 'slate' }]
     *
     * // using "_.where" callback shorthand
     * _.pluck(_.first(characters, { 'employer': 'slate' }), 'name');
     * // => ['barney', 'fred']
     */
    function first(array, callback, thisArg) {
      var n = 0,
          length = array ? array.length : 0;

      if (typeof callback != 'number' && callback != null) {
        var index = -1;
        callback = lodash.createCallback(callback, thisArg, 3);
        while (++index < length && callback(array[index], index, array)) {
          n++;
        }
      } else {
        n = callback;
        if (n == null || thisArg) {
          return array ? array[0] : undefined;
        }
      }
      return slice(array, 0, nativeMin(nativeMax(0, n), length));
    }

    /**
     * Flattens a nested array (the nesting can be to any depth). If `isShallow`
     * is truey, the array will only be flattened a single level. If a callback
     * is provided each element of the array is passed through the callback before
     * flattening. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to flatten.
     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new flattened array.
     * @example
     *
     * _.flatten([1, [2], [3, [[4]]]]);
     * // => [1, 2, 3, 4];
     *
     * _.flatten([1, [2], [3, [[4]]]], true);
     * // => [1, 2, 3, [[4]]];
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 30, 'pets': ['hoppy'] },
     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.flatten(characters, 'pets');
     * // => ['hoppy', 'baby puss', 'dino']
     */
    function flatten(array, isShallow, callback, thisArg) {
      // juggle arguments
      if (typeof isShallow != 'boolean' && isShallow != null) {
        thisArg = callback;
        callback = (typeof isShallow != 'function' && thisArg && thisArg[isShallow] === array) ? null : isShallow;
        isShallow = false;
      }
      if (callback != null) {
        array = map(array, callback, thisArg);
      }
      return baseFlatten(array, isShallow);
    }

    /**
     * Gets the index at which the first occurrence of `value` is found using
     * strict equality for comparisons, i.e. `===`. If the array is already sorted
     * providing `true` for `fromIndex` will run a faster binary search.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to search.
     * @param {*} value The value to search for.
     * @param {boolean|number} [fromIndex=0] The index to search from or `true`
     *  to perform a binary search on a sorted array.
     * @returns {number} Returns the index of the matched value or `-1`.
     * @example
     *
     * _.indexOf([1, 2, 3, 1, 2, 3], 2);
     * // => 1
     *
     * _.indexOf([1, 2, 3, 1, 2, 3], 2, 3);
     * // => 4
     *
     * _.indexOf([1, 1, 2, 2, 3, 3], 2, true);
     * // => 2
     */
    function indexOf(array, value, fromIndex) {
      if (typeof fromIndex == 'number') {
        var length = array ? array.length : 0;
        fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex || 0);
      } else if (fromIndex) {
        var index = sortedIndex(array, value);
        return array[index] === value ? index : -1;
      }
      return baseIndexOf(array, value, fromIndex);
    }

    /**
     * Gets all but the last element or last `n` elements of an array. If a
     * callback is provided elements at the end of the array are excluded from
     * the result as long as the callback returns truey. The callback is bound
     * to `thisArg` and invoked with three arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to query.
     * @param {Function|Object|number|string} [callback=1] The function called
     *  per element or the number of elements to exclude. If a property name or
     *  object is provided it will be used to create a "_.pluck" or "_.where"
     *  style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     *
     * _.initial([1, 2, 3], 2);
     * // => [1]
     *
     * _.initial([1, 2, 3], function(num) {
     *   return num > 1;
     * });
     * // => [1]
     *
     * var characters = [
     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },
     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },
     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.initial(characters, 'blocked');
     * // => [{ 'name': 'barney',  'blocked': false, 'employer': 'slate' }]
     *
     * // using "_.where" callback shorthand
     * _.pluck(_.initial(characters, { 'employer': 'na' }), 'name');
     * // => ['barney', 'fred']
     */
    function initial(array, callback, thisArg) {
      var n = 0,
          length = array ? array.length : 0;

      if (typeof callback != 'number' && callback != null) {
        var index = length;
        callback = lodash.createCallback(callback, thisArg, 3);
        while (index-- && callback(array[index], index, array)) {
          n++;
        }
      } else {
        n = (callback == null || thisArg) ? 1 : callback || n;
      }
      return slice(array, 0, nativeMin(nativeMax(0, length - n), length));
    }

    /**
     * Creates an array of unique values present in all provided arrays using
     * strict equality for comparisons, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {...Array} [array] The arrays to inspect.
     * @returns {Array} Returns an array of shared values.
     * @example
     *
     * _.intersection([1, 2, 3], [5, 2, 1, 4], [2, 1]);
     * // => [1, 2]
     */
    function intersection() {
      var args = [],
          argsIndex = -1,
          argsLength = arguments.length,
          caches = getArray(),
          indexOf = getIndexOf(),
          trustIndexOf = indexOf === baseIndexOf,
          seen = getArray();

      while (++argsIndex < argsLength) {
        var value = arguments[argsIndex];
        if (isArray(value) || isArguments(value)) {
          args.push(value);
          caches.push(trustIndexOf && value.length >= largeArraySize &&
            createCache(argsIndex ? args[argsIndex] : seen));
        }
      }
      var array = args[0],
          index = -1,
          length = array ? array.length : 0,
          result = [];

      outer:
      while (++index < length) {
        var cache = caches[0];
        value = array[index];

        if ((cache ? cacheIndexOf(cache, value) : indexOf(seen, value)) < 0) {
          argsIndex = argsLength;
          (cache || seen).push(value);
          while (--argsIndex) {
            cache = caches[argsIndex];
            if ((cache ? cacheIndexOf(cache, value) : indexOf(args[argsIndex], value)) < 0) {
              continue outer;
            }
          }
          result.push(value);
        }
      }
      while (argsLength--) {
        cache = caches[argsLength];
        if (cache) {
          releaseObject(cache);
        }
      }
      releaseArray(caches);
      releaseArray(seen);
      return result;
    }

    /**
     * Gets the last element or last `n` elements of an array. If a callback is
     * provided elements at the end of the array are returned as long as the
     * callback returns truey. The callback is bound to `thisArg` and invoked
     * with three arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to query.
     * @param {Function|Object|number|string} [callback] The function called
     *  per element or the number of elements to return. If a property name or
     *  object is provided it will be used to create a "_.pluck" or "_.where"
     *  style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the last element(s) of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     *
     * _.last([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.last([1, 2, 3], function(num) {
     *   return num > 1;
     * });
     * // => [2, 3]
     *
     * var characters = [
     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },
     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },
     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.pluck(_.last(characters, 'blocked'), 'name');
     * // => ['fred', 'pebbles']
     *
     * // using "_.where" callback shorthand
     * _.last(characters, { 'employer': 'na' });
     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]
     */
    function last(array, callback, thisArg) {
      var n = 0,
          length = array ? array.length : 0;

      if (typeof callback != 'number' && callback != null) {
        var index = length;
        callback = lodash.createCallback(callback, thisArg, 3);
        while (index-- && callback(array[index], index, array)) {
          n++;
        }
      } else {
        n = callback;
        if (n == null || thisArg) {
          return array ? array[length - 1] : undefined;
        }
      }
      return slice(array, nativeMax(0, length - n));
    }

    /**
     * Gets the index at which the last occurrence of `value` is found using strict
     * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used
     * as the offset from the end of the collection.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to search.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value or `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2);
     * // => 4
     *
     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2, 3);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var index = array ? array.length : 0;
      if (typeof fromIndex == 'number') {
        index = (fromIndex < 0 ? nativeMax(0, index + fromIndex) : nativeMin(fromIndex, index - 1)) + 1;
      }
      while (index--) {
        if (array[index] === value) {
          return index;
        }
      }
      return -1;
    }

    /**
     * Removes all provided values from the given array using strict equality for
     * comparisons, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to modify.
     * @param {...*} [value] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3, 1, 2, 3];
     * _.pull(array, 2, 3);
     * console.log(array);
     * // => [1, 1]
     */
    function pull(array) {
      var args = arguments,
          argsIndex = 0,
          argsLength = args.length,
          length = array ? array.length : 0;

      while (++argsIndex < argsLength) {
        var index = -1,
            value = args[argsIndex];
        while (++index < length) {
          if (array[index] === value) {
            splice.call(array, index--, 1);
            length--;
          }
        }
      }
      return array;
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to but not including `end`. If `start` is less than `stop` a
     * zero-length range is created unless a negative `step` is specified.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns a new range array.
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    function range(start, end, step) {
      start = +start || 0;
      step = typeof step == 'number' ? step : (+step || 1);

      if (end == null) {
        end = start;
        start = 0;
      }
      // use `Array(length)` so engines like Chakra and V8 avoid slower modes
      // http://youtu.be/XAqIpGU8ZZk#t=17m25s
      var index = -1,
          length = nativeMax(0, ceil((end - start) / (step || 1))),
          result = Array(length);

      while (++index < length) {
        result[index] = start;
        start += step;
      }
      return result;
    }

    /**
     * Removes all elements from an array that the callback returns truey for
     * and returns an array of removed elements. The callback is bound to `thisArg`
     * and invoked with three arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to modify.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4, 5, 6];
     * var evens = _.remove(array, function(num) { return num % 2 == 0; });
     *
     * console.log(array);
     * // => [1, 3, 5]
     *
     * console.log(evens);
     * // => [2, 4, 6]
     */
    function remove(array, callback, thisArg) {
      var index = -1,
          length = array ? array.length : 0,
          result = [];

      callback = lodash.createCallback(callback, thisArg, 3);
      while (++index < length) {
        var value = array[index];
        if (callback(value, index, array)) {
          result.push(value);
          splice.call(array, index--, 1);
          length--;
        }
      }
      return result;
    }

    /**
     * The opposite of `_.initial` this method gets all but the first element or
     * first `n` elements of an array. If a callback function is provided elements
     * at the beginning of the array are excluded from the result as long as the
     * callback returns truey. The callback is bound to `thisArg` and invoked
     * with three arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias drop, tail
     * @category Arrays
     * @param {Array} array The array to query.
     * @param {Function|Object|number|string} [callback=1] The function called
     *  per element or the number of elements to exclude. If a property name or
     *  object is provided it will be used to create a "_.pluck" or "_.where"
     *  style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a slice of `array`.
     * @example
     *
     * _.rest([1, 2, 3]);
     * // => [2, 3]
     *
     * _.rest([1, 2, 3], 2);
     * // => [3]
     *
     * _.rest([1, 2, 3], function(num) {
     *   return num < 3;
     * });
     * // => [3]
     *
     * var characters = [
     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },
     *   { 'name': 'fred',    'blocked': false,  'employer': 'slate' },
     *   { 'name': 'pebbles', 'blocked': true, 'employer': 'na' }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.pluck(_.rest(characters, 'blocked'), 'name');
     * // => ['fred', 'pebbles']
     *
     * // using "_.where" callback shorthand
     * _.rest(characters, { 'employer': 'slate' });
     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]
     */
    function rest(array, callback, thisArg) {
      if (typeof callback != 'number' && callback != null) {
        var n = 0,
            index = -1,
            length = array ? array.length : 0;

        callback = lodash.createCallback(callback, thisArg, 3);
        while (++index < length && callback(array[index], index, array)) {
          n++;
        }
      } else {
        n = (callback == null || thisArg) ? 1 : nativeMax(0, callback);
      }
      return slice(array, n);
    }

    /**
     * Uses a binary search to determine the smallest index at which a value
     * should be inserted into a given sorted array in order to maintain the sort
     * order of the array. If a callback is provided it will be executed for
     * `value` and each element of `array` to compute their sort ranking. The
     * callback is bound to `thisArg` and invoked with one argument; (value).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([20, 30, 50], 40);
     * // => 2
     *
     * // using "_.pluck" callback shorthand
     * _.sortedIndex([{ 'x': 20 }, { 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');
     * // => 2
     *
     * var dict = {
     *   'wordToNumber': { 'twenty': 20, 'thirty': 30, 'fourty': 40, 'fifty': 50 }
     * };
     *
     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {
     *   return dict.wordToNumber[word];
     * });
     * // => 2
     *
     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {
     *   return this.wordToNumber[word];
     * }, dict);
     * // => 2
     */
    function sortedIndex(array, value, callback, thisArg) {
      var low = 0,
          high = array ? array.length : low;

      // explicitly reference `identity` for better inlining in Firefox
      callback = callback ? lodash.createCallback(callback, thisArg, 1) : identity;
      value = callback(value);

      while (low < high) {
        var mid = (low + high) >>> 1;
        (callback(array[mid]) < value)
          ? low = mid + 1
          : high = mid;
      }
      return low;
    }

    /**
     * Creates an array of unique values, in order, of the provided arrays using
     * strict equality for comparisons, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {...Array} [array] The arrays to inspect.
     * @returns {Array} Returns an array of combined values.
     * @example
     *
     * _.union([1, 2, 3], [5, 2, 1, 4], [2, 1]);
     * // => [1, 2, 3, 5, 4]
     */
    function union() {
      return baseUniq(baseFlatten(arguments, true, true));
    }

    /**
     * Creates a duplicate-value-free version of an array using strict equality
     * for comparisons, i.e. `===`. If the array is sorted, providing
     * `true` for `isSorted` will use a faster algorithm. If a callback is provided
     * each element of `array` is passed through the callback before uniqueness
     * is computed. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias unique
     * @category Arrays
     * @param {Array} array The array to process.
     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a duplicate-value-free array.
     * @example
     *
     * _.uniq([1, 2, 1, 3, 1]);
     * // => [1, 2, 3]
     *
     * _.uniq([1, 1, 2, 2, 3], true);
     * // => [1, 2, 3]
     *
     * _.uniq(['A', 'b', 'C', 'a', 'B', 'c'], function(letter) { return letter.toLowerCase(); });
     * // => ['A', 'b', 'C']
     *
     * _.uniq([1, 2.5, 3, 1.5, 2, 3.5], function(num) { return this.floor(num); }, Math);
     * // => [1, 2.5, 3]
     *
     * // using "_.pluck" callback shorthand
     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniq(array, isSorted, callback, thisArg) {
      // juggle arguments
      if (typeof isSorted != 'boolean' && isSorted != null) {
        thisArg = callback;
        callback = (typeof isSorted != 'function' && thisArg && thisArg[isSorted] === array) ? null : isSorted;
        isSorted = false;
      }
      if (callback != null) {
        callback = lodash.createCallback(callback, thisArg, 3);
      }
      return baseUniq(array, isSorted, callback);
    }

    /**
     * Creates an array excluding all provided values using strict equality for
     * comparisons, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to filter.
     * @param {...*} [value] The values to exclude.
     * @returns {Array} Returns a new array of filtered values.
     * @example
     *
     * _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);
     * // => [2, 3, 4]
     */
    function without(array) {
      return baseDifference(array, slice(arguments, 1));
    }

    /**
     * Creates an array that is the symmetric difference of the provided arrays.
     * See http://en.wikipedia.org/wiki/Symmetric_difference.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {...Array} [array] The arrays to inspect.
     * @returns {Array} Returns an array of values.
     * @example
     *
     * _.xor([1, 2, 3], [5, 2, 1, 4]);
     * // => [3, 5, 4]
     *
     * _.xor([1, 2, 5], [2, 3, 5], [3, 4, 5]);
     * // => [1, 4, 5]
     */
    function xor() {
      var index = -1,
          length = arguments.length;

      while (++index < length) {
        var array = arguments[index];
        if (isArray(array) || isArguments(array)) {
          var result = result
            ? baseUniq(baseDifference(result, array).concat(baseDifference(array, result)))
            : array;
        }
      }
      return result || [];
    }

    /**
     * Creates an array of grouped elements, the first of which contains the first
     * elements of the given arrays, the second of which contains the second
     * elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @alias unzip
     * @category Arrays
     * @param {...Array} [array] Arrays to process.
     * @returns {Array} Returns a new array of grouped elements.
     * @example
     *
     * _.zip(['fred', 'barney'], [30, 40], [true, false]);
     * // => [['fred', 30, true], ['barney', 40, false]]
     */
    function zip() {
      var array = arguments.length > 1 ? arguments : arguments[0],
          index = -1,
          length = array ? max(pluck(array, 'length')) : 0,
          result = Array(length < 0 ? 0 : length);

      while (++index < length) {
        result[index] = pluck(array, index);
      }
      return result;
    }

    /**
     * Creates an object composed from arrays of `keys` and `values`. Provide
     * either a single two dimensional array, i.e. `[[key1, value1], [key2, value2]]`
     * or two arrays, one of `keys` and one of corresponding `values`.
     *
     * @static
     * @memberOf _
     * @alias object
     * @category Arrays
     * @param {Array} keys The array of keys.
     * @param {Array} [values=[]] The array of values.
     * @returns {Object} Returns an object composed of the given keys and
     *  corresponding values.
     * @example
     *
     * _.zipObject(['fred', 'barney'], [30, 40]);
     * // => { 'fred': 30, 'barney': 40 }
     */
    function zipObject(keys, values) {
      var index = -1,
          length = keys ? keys.length : 0,
          result = {};

      if (!values && length && !isArray(keys[0])) {
        values = [];
      }
      while (++index < length) {
        var key = keys[index];
        if (values) {
          result[key] = values[index];
        } else if (key) {
          result[key[0]] = key[1];
        }
      }
      return result;
    }

    /*--------------------------------------------------------------------------*/

    /**
     * Creates a function that executes `func`, with  the `this` binding and
     * arguments of the created function, only after being called `n` times.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {number} n The number of times the function must be called before
     *  `func` is executed.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('Done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => logs 'Done saving!', after all saves have completed
     */
    function after(n, func) {
      if (!isFunction(func)) {
        throw new TypeError;
      }
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that, when called, invokes `func` with the `this`
     * binding of `thisArg` and prepends any additional `bind` arguments to those
     * provided to the bound function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to bind.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {...*} [arg] Arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var func = function(greeting) {
     *   return greeting + ' ' + this.name;
     * };
     *
     * func = _.bind(func, { 'name': 'fred' }, 'hi');
     * func();
     * // => 'hi fred'
     */
    function bind(func, thisArg) {
      return arguments.length > 2
        ? createWrapper(func, 17, slice(arguments, 2), null, thisArg)
        : createWrapper(func, 1, null, null, thisArg);
    }

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method. Method names may be specified as individual arguments or as arrays
     * of method names. If no method names are provided all the function properties
     * of `object` will be bound.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...string} [methodName] The object method names to
     *  bind, specified as individual method names or arrays of method names.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'onClick': function() { console.log('clicked ' + this.label); }
     * };
     *
     * _.bindAll(view);
     * jQuery('#docs').on('click', view.onClick);
     * // => logs 'clicked docs', when the button is clicked
     */
    function bindAll(object) {
      var funcs = arguments.length > 1 ? baseFlatten(arguments, true, false, 1) : functions(object),
          index = -1,
          length = funcs.length;

      while (++index < length) {
        var key = funcs[index];
        object[key] = createWrapper(object[key], 1, null, null, object);
      }
      return object;
    }

    /**
     * Creates a function that, when called, invokes the method at `object[key]`
     * and prepends any additional `bindKey` arguments to those provided to the bound
     * function. This method differs from `_.bind` by allowing bound functions to
     * reference methods that will be redefined or don't yet exist.
     * See http://michaux.ca/articles/lazy-function-definition-pattern.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Object} object The object the method belongs to.
     * @param {string} key The key of the method.
     * @param {...*} [arg] Arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'name': 'fred',
     *   'greet': function(greeting) {
     *     return greeting + ' ' + this.name;
     *   }
     * };
     *
     * var func = _.bindKey(object, 'greet', 'hi');
     * func();
     * // => 'hi fred'
     *
     * object.greet = function(greeting) {
     *   return greeting + 'ya ' + this.name + '!';
     * };
     *
     * func();
     * // => 'hiya fred!'
     */
    function bindKey(object, key) {
      return arguments.length > 2
        ? createWrapper(key, 19, slice(arguments, 2), null, object)
        : createWrapper(key, 3, null, null, object);
    }

    /**
     * Creates a function that is the composition of the provided functions,
     * where each function consumes the return value of the function that follows.
     * For example, composing the functions `f()`, `g()`, and `h()` produces `f(g(h()))`.
     * Each function is executed with the `this` binding of the composed function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {...Function} [func] Functions to compose.
     * @returns {Function} Returns the new composed function.
     * @example
     *
     * var realNameMap = {
     *   'pebbles': 'penelope'
     * };
     *
     * var format = function(name) {
     *   name = realNameMap[name.toLowerCase()] || name;
     *   return name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();
     * };
     *
     * var greet = function(formatted) {
     *   return 'Hiya ' + formatted + '!';
     * };
     *
     * var welcome = _.compose(greet, format);
     * welcome('pebbles');
     * // => 'Hiya Penelope!'
     */
    function compose() {
      var funcs = arguments,
          length = funcs.length;

      while (length--) {
        if (!isFunction(funcs[length])) {
          throw new TypeError;
        }
      }
      return function() {
        var args = arguments,
            length = funcs.length;

        while (length--) {
          args = [funcs[length].apply(this, args)];
        }
        return args[0];
      };
    }

    /**
     * Creates a function which accepts one or more arguments of `func` that when
     * invoked either executes `func` returning its result, if all `func` arguments
     * have been provided, or returns a function that accepts one or more of the
     * remaining `func` arguments, and so on. The arity of `func` can be specified
     * if `func.length` is not sufficient.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var curried = _.curry(function(a, b, c) {
     *   console.log(a + b + c);
     * });
     *
     * curried(1)(2)(3);
     * // => 6
     *
     * curried(1, 2)(3);
     * // => 6
     *
     * curried(1, 2, 3);
     * // => 6
     */
    function curry(func, arity) {
      arity = typeof arity == 'number' ? arity : (+arity || func.length);
      return createWrapper(func, 4, null, null, null, arity);
    }

    /**
     * Creates a function that will delay the execution of `func` until after
     * `wait` milliseconds have elapsed since the last time it was invoked.
     * Provide an options object to indicate that `func` should be invoked on
     * the leading and/or trailing edge of the `wait` timeout. Subsequent calls
     * to the debounced function will return the result of the last `func` call.
     *
     * Note: If `leading` and `trailing` options are `true` `func` will be called
     * on the trailing edge of the timeout only if the the debounced function is
     * invoked more than once during the `wait` timeout.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to debounce.
     * @param {number} wait The number of milliseconds to delay.
     * @param {Object} [options] The options object.
     * @param {boolean} [options.leading=false] Specify execution on the leading edge of the timeout.
     * @param {number} [options.maxWait] The maximum time `func` is allowed to be delayed before it's called.
     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // avoid costly calculations while the window size is in flux
     * var lazyLayout = _.debounce(calculateLayout, 150);
     * jQuery(window).on('resize', lazyLayout);
     *
     * // execute `sendMail` when the click event is fired, debouncing subsequent calls
     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * });
     *
     * // ensure `batchLog` is executed once after 1 second of debounced calls
     * var source = new EventSource('/stream');
     * source.addEventListener('message', _.debounce(batchLog, 250, {
     *   'maxWait': 1000
     * }, false);
     */
    function debounce(func, wait, options) {
      var args,
          maxTimeoutId,
          result,
          stamp,
          thisArg,
          timeoutId,
          trailingCall,
          lastCalled = 0,
          maxWait = false,
          trailing = true;

      if (!isFunction(func)) {
        throw new TypeError;
      }
      wait = nativeMax(0, wait) || 0;
      if (options === true) {
        var leading = true;
        trailing = false;
      } else if (isObject(options)) {
        leading = options.leading;
        maxWait = 'maxWait' in options && (nativeMax(wait, options.maxWait) || 0);
        trailing = 'trailing' in options ? options.trailing : trailing;
      }
      var delayed = function() {
        var remaining = wait - (now() - stamp);
        if (remaining <= 0) {
          if (maxTimeoutId) {
            clearTimeout(maxTimeoutId);
          }
          var isCalled = trailingCall;
          maxTimeoutId = timeoutId = trailingCall = undefined;
          if (isCalled) {
            lastCalled = now();
            result = func.apply(thisArg, args);
            if (!timeoutId && !maxTimeoutId) {
              args = thisArg = null;
            }
          }
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      };

      var maxDelayed = function() {
        if (timeoutId) {
          clearTimeout(timeoutId);
        }
        maxTimeoutId = timeoutId = trailingCall = undefined;
        if (trailing || (maxWait !== wait)) {
          lastCalled = now();
          result = func.apply(thisArg, args);
          if (!timeoutId && !maxTimeoutId) {
            args = thisArg = null;
          }
        }
      };

      return function() {
        args = arguments;
        stamp = now();
        thisArg = this;
        trailingCall = trailing && (timeoutId || !leading);

        if (maxWait === false) {
          var leadingCall = leading && !timeoutId;
        } else {
          if (!maxTimeoutId && !leading) {
            lastCalled = stamp;
          }
          var remaining = maxWait - (stamp - lastCalled),
              isCalled = remaining <= 0;

          if (isCalled) {
            if (maxTimeoutId) {
              maxTimeoutId = clearTimeout(maxTimeoutId);
            }
            lastCalled = stamp;
            result = func.apply(thisArg, args);
          }
          else if (!maxTimeoutId) {
            maxTimeoutId = setTimeout(maxDelayed, remaining);
          }
        }
        if (isCalled && timeoutId) {
          timeoutId = clearTimeout(timeoutId);
        }
        else if (!timeoutId && wait !== maxWait) {
          timeoutId = setTimeout(delayed, wait);
        }
        if (leadingCall) {
          isCalled = true;
          result = func.apply(thisArg, args);
        }
        if (isCalled && !timeoutId && !maxTimeoutId) {
          args = thisArg = null;
        }
        return result;
      };
    }

    /**
     * Defers executing the `func` function until the current call stack has cleared.
     * Additional arguments will be provided to `func` when it is invoked.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to defer.
     * @param {...*} [arg] Arguments to invoke the function with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) { console.log(text); }, 'deferred');
     * // logs 'deferred' after one or more milliseconds
     */
    function defer(func) {
      if (!isFunction(func)) {
        throw new TypeError;
      }
      var args = slice(arguments, 1);
      return setTimeout(function() { func.apply(undefined, args); }, 1);
    }

    /**
     * Executes the `func` function after `wait` milliseconds. Additional arguments
     * will be provided to `func` when it is invoked.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay execution.
     * @param {...*} [arg] Arguments to invoke the function with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) { console.log(text); }, 1000, 'later');
     * // => logs 'later' after one second
     */
    function delay(func, wait) {
      if (!isFunction(func)) {
        throw new TypeError;
      }
      var args = slice(arguments, 2);
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided it will be used to determine the cache key for storing the result
     * based on the arguments provided to the memoized function. By default, the
     * first argument provided to the memoized function is used as the cache key.
     * The `func` is executed with the `this` binding of the memoized function.
     * The result cache is exposed as the `cache` property on the memoized function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] A function used to resolve the cache key.
     * @returns {Function} Returns the new memoizing function.
     * @example
     *
     * var fibonacci = _.memoize(function(n) {
     *   return n < 2 ? n : fibonacci(n - 1) + fibonacci(n - 2);
     * });
     *
     * fibonacci(9)
     * // => 34
     *
     * var data = {
     *   'fred': { 'name': 'fred', 'age': 40 },
     *   'pebbles': { 'name': 'pebbles', 'age': 1 }
     * };
     *
     * // modifying the result cache
     * var get = _.memoize(function(name) { return data[name]; }, _.identity);
     * get('pebbles');
     * // => { 'name': 'pebbles', 'age': 1 }
     *
     * get.cache.pebbles.name = 'penelope';
     * get('pebbles');
     * // => { 'name': 'penelope', 'age': 1 }
     */
    function memoize(func, resolver) {
      if (!isFunction(func)) {
        throw new TypeError;
      }
      var memoized = function() {
        var cache = memoized.cache,
            key = resolver ? resolver.apply(this, arguments) : keyPrefix + arguments[0];

        return hasOwnProperty.call(cache, key)
          ? cache[key]
          : (cache[key] = func.apply(this, arguments));
      }
      memoized.cache = {};
      return memoized;
    }

    /**
     * Creates a function that is restricted to execute `func` once. Repeat calls to
     * the function will return the value of the first call. The `func` is executed
     * with the `this` binding of the created function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // `initialize` executes `createApplication` once
     */
    function once(func) {
      var ran,
          result;

      if (!isFunction(func)) {
        throw new TypeError;
      }
      return function() {
        if (ran) {
          return result;
        }
        ran = true;
        result = func.apply(this, arguments);

        // clear the `func` variable so the function may be garbage collected
        func = null;
        return result;
      };
    }

    /**
     * Creates a function that, when called, invokes `func` with any additional
     * `partial` arguments prepended to those provided to the new function. This
     * method is similar to `_.bind` except it does **not** alter the `this` binding.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [arg] Arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * var greet = function(greeting, name) { return greeting + ' ' + name; };
     * var hi = _.partial(greet, 'hi');
     * hi('fred');
     * // => 'hi fred'
     */
    function partial(func) {
      return createWrapper(func, 16, slice(arguments, 1));
    }

    /**
     * This method is like `_.partial` except that `partial` arguments are
     * appended to those provided to the new function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [arg] Arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * var defaultsDeep = _.partialRight(_.merge, _.defaults);
     *
     * var options = {
     *   'variable': 'data',
     *   'imports': { 'jq': $ }
     * };
     *
     * defaultsDeep(options, _.templateSettings);
     *
     * options.variable
     * // => 'data'
     *
     * options.imports
     * // => { '_': _, 'jq': $ }
     */
    function partialRight(func) {
      return createWrapper(func, 32, null, slice(arguments, 1));
    }

    /**
     * Creates a function that, when executed, will only call the `func` function
     * at most once per every `wait` milliseconds. Provide an options object to
     * indicate that `func` should be invoked on the leading and/or trailing edge
     * of the `wait` timeout. Subsequent calls to the throttled function will
     * return the result of the last `func` call.
     *
     * Note: If `leading` and `trailing` options are `true` `func` will be called
     * on the trailing edge of the timeout only if the the throttled function is
     * invoked more than once during the `wait` timeout.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to throttle.
     * @param {number} wait The number of milliseconds to throttle executions to.
     * @param {Object} [options] The options object.
     * @param {boolean} [options.leading=true] Specify execution on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // avoid excessively updating the position while scrolling
     * var throttled = _.throttle(updatePosition, 100);
     * jQuery(window).on('scroll', throttled);
     *
     * // execute `renewToken` when the click event is fired, but not more than once every 5 minutes
     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {
     *   'trailing': false
     * }));
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (!isFunction(func)) {
        throw new TypeError;
      }
      if (options === false) {
        leading = false;
      } else if (isObject(options)) {
        leading = 'leading' in options ? options.leading : leading;
        trailing = 'trailing' in options ? options.trailing : trailing;
      }
      debounceOptions.leading = leading;
      debounceOptions.maxWait = wait;
      debounceOptions.trailing = trailing;

      return debounce(func, wait, debounceOptions);
    }

    /**
     * Creates a function that provides `value` to the wrapper function as its
     * first argument. Additional arguments provided to the function are appended
     * to those provided to the wrapper function. The wrapper is executed with
     * the `this` binding of the created function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {*} value The value to wrap.
     * @param {Function} wrapper The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('Fred, Wilma, & Pebbles');
     * // => '<p>Fred, Wilma, &amp; Pebbles</p>'
     */
    function wrap(value, wrapper) {
      return createWrapper(wrapper, 16, [value]);
    }

    /*--------------------------------------------------------------------------*/

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var object = { 'name': 'fred' };
     * var getter = _.constant(object);
     * getter() === object;
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Produces a callback bound to an optional `thisArg`. If `func` is a property
     * name the created callback will return the property value for a given element.
     * If `func` is an object the created callback will return `true` for elements
     * that contain the equivalent object properties, otherwise it will return `false`.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {*} [func=identity] The value to convert to a callback.
     * @param {*} [thisArg] The `this` binding of the created callback.
     * @param {number} [argCount] The number of arguments the callback accepts.
     * @returns {Function} Returns a callback function.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * // wrap to create custom callback shorthands
     * _.createCallback = _.wrap(_.createCallback, function(func, callback, thisArg) {
     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(callback);
     *   return !match ? func(callback, thisArg) : function(object) {
     *     return match[2] == 'gt' ? object[match[1]] > match[3] : object[match[1]] < match[3];
     *   };
     * });
     *
     * _.filter(characters, 'age__gt38');
     * // => [{ 'name': 'fred', 'age': 40 }]
     */
    function createCallback(func, thisArg, argCount) {
      var type = typeof func;
      if (func == null || type == 'function') {
        return baseCreateCallback(func, thisArg, argCount);
      }
      // handle "_.pluck" style callback shorthands
      if (type != 'object') {
        return property(func);
      }
      var props = keys(func),
          key = props[0],
          a = func[key];

      // handle "_.where" style callback shorthands
      if (props.length == 1 && a === a && !isObject(a)) {
        // fast path the common case of providing an object with a single
        // property containing a primitive value
        return function(object) {
          var b = object[key];
          return a === b && (a !== 0 || (1 / a == 1 / b));
        };
      }
      return function(object) {
        var length = props.length,
            result = false;

        while (length--) {
          if (!(result = baseIsEqual(object[props[length]], func[props[length]], null, true))) {
            break;
          }
        }
        return result;
      };
    }

    /**
     * Converts the characters `&`, `<`, `>`, `"`, and `'` in `string` to their
     * corresponding HTML entities.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} string The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('Fred, Wilma, & Pebbles');
     * // => 'Fred, Wilma, &amp; Pebbles'
     */
    function escape(string) {
      return string == null ? '' : String(string).replace(reUnescapedHtml, escapeHtmlChar);
    }

    /**
     * This method returns the first argument provided to it.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'name': 'fred' };
     * _.identity(object) === object;
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Adds function properties of a source object to the destination object.
     * If `object` is a function methods will be added to its prototype as well.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {Function|Object} [object=lodash] object The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options] The options object.
     * @param {boolean} [options.chain=true] Specify whether the functions added are chainable.
     * @example
     *
     * function capitalize(string) {
     *   return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();
     * }
     *
     * _.mixin({ 'capitalize': capitalize });
     * _.capitalize('fred');
     * // => 'Fred'
     *
     * _('fred').capitalize().value();
     * // => 'Fred'
     *
     * _.mixin({ 'capitalize': capitalize }, { 'chain': false });
     * _('fred').capitalize();
     * // => 'Fred'
     */
    function mixin(object, source, options) {
      var chain = true,
          methodNames = source && functions(source);

      if (!source || (!options && !methodNames.length)) {
        if (options == null) {
          options = source;
        }
        ctor = lodashWrapper;
        source = object;
        object = lodash;
        methodNames = functions(source);
      }
      if (options === false) {
        chain = false;
      } else if (isObject(options) && 'chain' in options) {
        chain = options.chain;
      }
      var ctor = object,
          isFunc = isFunction(ctor);

      forEach(methodNames, function(methodName) {
        var func = object[methodName] = source[methodName];
        if (isFunc) {
          ctor.prototype[methodName] = function() {
            var chainAll = this.__chain__,
                value = this.__wrapped__,
                args = [value];

            push.apply(args, arguments);
            var result = func.apply(object, args);
            if (chain || chainAll) {
              if (value === result && isObject(result)) {
                return this;
              }
              result = new ctor(result);
              result.__chain__ = chainAll;
            }
            return result;
          };
        }
      });
    }

    /**
     * Reverts the '_' variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      context._ = oldDash;
      return this;
    }

    /**
     * A no-operation function.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @example
     *
     * var object = { 'name': 'fred' };
     * _.noop(object) === undefined;
     * // => true
     */
    function noop() {
      // no operation performed
    }

    /**
     * Gets the number of milliseconds that have elapsed since the Unix epoch
     * (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @example
     *
     * var stamp = _.now();
     * _.defer(function() { console.log(_.now() - stamp); });
     * // => logs the number of milliseconds it took for the deferred function to be called
     */
    var now = isNative(now = Date.now) && now || function() {
      return new Date().getTime();
    };

    /**
     * Converts the given value into an integer of the specified radix.
     * If `radix` is `undefined` or `0` a `radix` of `10` is used unless the
     * `value` is a hexadecimal, in which case a `radix` of `16` is used.
     *
     * Note: This method avoids differences in native ES3 and ES5 `parseInt`
     * implementations. See http://es5.github.io/#E.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} value The value to parse.
     * @param {number} [radix] The radix used to interpret the value to parse.
     * @returns {number} Returns the new integer value.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     */
    var parseInt = nativeParseInt(whitespace + '08') == 8 ? nativeParseInt : function(value, radix) {
      // Firefox < 21 and Opera < 15 follow the ES3 specified implementation of `parseInt`
      return nativeParseInt(isString(value) ? value.replace(reLeadingSpacesAndZeros, '') : value, radix || 0);
    };

    /**
     * Creates a "_.pluck" style function, which returns the `key` value of a
     * given object.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} key The name of the property to retrieve.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var characters = [
     *   { 'name': 'fred',   'age': 40 },
     *   { 'name': 'barney', 'age': 36 }
     * ];
     *
     * var getName = _.property('name');
     *
     * _.map(characters, getName);
     * // => ['barney', 'fred']
     *
     * _.sortBy(characters, getName);
     * // => [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred',   'age': 40 }]
     */
    function property(key) {
      return function(object) {
        return object[key];
      };
    }

    /**
     * Produces a random number between `min` and `max` (inclusive). If only one
     * argument is provided a number between `0` and the given number will be
     * returned. If `floating` is truey or either `min` or `max` are floats a
     * floating-point number will be returned instead of an integer.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {number} [min=0] The minimum possible value.
     * @param {number} [max=1] The maximum possible value.
     * @param {boolean} [floating=false] Specify returning a floating-point number.
     * @returns {number} Returns a random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(min, max, floating) {
      var noMin = min == null,
          noMax = max == null;

      if (floating == null) {
        if (typeof min == 'boolean' && noMax) {
          floating = min;
          min = 1;
        }
        else if (!noMax && typeof max == 'boolean') {
          floating = max;
          noMax = true;
        }
      }
      if (noMin && noMax) {
        max = 1;
      }
      min = +min || 0;
      if (noMax) {
        max = min;
        min = 0;
      } else {
        max = +max || 0;
      }
      if (floating || min % 1 || max % 1) {
        var rand = nativeRandom();
        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand +'').length - 1)))), max);
      }
      return baseRandom(min, max);
    }

    /**
     * Resolves the value of property `key` on `object`. If `key` is a function
     * it will be invoked with the `this` binding of `object` and its result returned,
     * else the property value is returned. If `object` is falsey then `undefined`
     * is returned.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {Object} object The object to inspect.
     * @param {string} key The name of the property to resolve.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = {
     *   'cheese': 'crumpets',
     *   'stuff': function() {
     *     return 'nonsense';
     *   }
     * };
     *
     * _.result(object, 'cheese');
     * // => 'crumpets'
     *
     * _.result(object, 'stuff');
     * // => 'nonsense'
     */
    function result(object, key) {
      if (object) {
        var value = object[key];
        return isFunction(value) ? object[key]() : value;
      }
    }

    /**
     * A micro-templating method that handles arbitrary delimiters, preserves
     * whitespace, and correctly escapes quotes within interpolated code.
     *
     * Note: In the development build, `_.template` utilizes sourceURLs for easier
     * debugging. See http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl
     *
     * For more information on precompiling templates see:
     * https://lodash.com/custom-builds
     *
     * For more information on Chrome extension sandboxes see:
     * http://developer.chrome.com/stable/extensions/sandboxingEval.html
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} text The template text.
     * @param {Object} data The data object used to populate the text.
     * @param {Object} [options] The options object.
     * @param {RegExp} [options.escape] The "escape" delimiter.
     * @param {RegExp} [options.evaluate] The "evaluate" delimiter.
     * @param {Object} [options.imports] An object to import into the template as local variables.
     * @param {RegExp} [options.interpolate] The "interpolate" delimiter.
     * @param {string} [sourceURL] The sourceURL of the template's compiled source.
     * @param {string} [variable] The data object variable name.
     * @returns {Function|string} Returns a compiled function when no `data` object
     *  is given, else it returns the interpolated text.
     * @example
     *
     * // using the "interpolate" delimiter to create a compiled template
     * var compiled = _.template('hello <%= name %>');
     * compiled({ 'name': 'fred' });
     * // => 'hello fred'
     *
     * // using the "escape" delimiter to escape HTML in data property values
     * _.template('<b><%- value %></b>', { 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // using the "evaluate" delimiter to generate HTML
     * var list = '<% _.forEach(people, function(name) { %><li><%- name %></li><% }); %>';
     * _.template(list, { 'people': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // using the ES6 delimiter as an alternative to the default "interpolate" delimiter
     * _.template('hello ${ name }', { 'name': 'pebbles' });
     * // => 'hello pebbles'
     *
     * // using the internal `print` function in "evaluate" delimiters
     * _.template('<% print("hello " + name); %>!', { 'name': 'barney' });
     * // => 'hello barney!'
     *
     * // using a custom template delimiters
     * _.templateSettings = {
     *   'interpolate': /{{([\s\S]+?)}}/g
     * };
     *
     * _.template('hello {{ name }}!', { 'name': 'mustache' });
     * // => 'hello mustache!'
     *
     * // using the `imports` option to import jQuery
     * var list = '<% jq.each(people, function(name) { %><li><%- name %></li><% }); %>';
     * _.template(list, { 'people': ['fred', 'barney'] }, { 'imports': { 'jq': jQuery } });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // using the `sourceURL` option to specify a custom sourceURL for the template
     * var compiled = _.template('hello <%= name %>', null, { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector
     *
     * // using the `variable` option to ensure a with-statement isn't used in the compiled template
     * var compiled = _.template('hi <%= data.name %>!', null, { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     *   var __t, __p = '', __e = _.escape;
     *   __p += 'hi ' + ((__t = ( data.name )) == null ? '' : __t) + '!';
     *   return __p;
     * }
     *
     * // using the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and a stack trace
     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(text, data, options) {
      // based on John Resig's `tmpl` implementation
      // http://ejohn.org/blog/javascript-micro-templating/
      // and Laura Doktorova's doT.js
      // https://github.com/olado/doT
      var settings = lodash.templateSettings;
      text = String(text || '');

      // avoid missing dependencies when `iteratorTemplate` is not defined
      options = defaults({}, options, settings);

      var imports = defaults({}, options.imports, settings.imports),
          importsKeys = keys(imports),
          importsValues = values(imports);

      var isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // compile the regexp to match each delimiter
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      text.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // escape characters that cannot be included in string literals
        source += text.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // replace delimiters with snippets
        if (escapeValue) {
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // the JS engine embedded in Adobe products requires returning the `match`
        // string in order to produce the correct `offset` value
        return match;
      });

      source += "';\n";

      // if `variable` is not specified, wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain
      var variable = options.variable,
          hasVariable = variable;

      if (!hasVariable) {
        variable = 'obj';
        source = 'with (' + variable + ') {\n' + source + '\n}\n';
      }
      // cleanup code by stripping empty strings
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // frame code as the function body
      source = 'function(' + variable + ') {\n' +
        (hasVariable ? '' : variable + ' || (' + variable + ' = {});\n') +
        "var __t, __p = '', __e = _.escape" +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      // Use a sourceURL for easier debugging.
      // http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl
      var sourceURL = '\n/*\n//# sourceURL=' + (options.sourceURL || '/lodash/template/source[' + (templateCounter++) + ']') + '\n*/';

      try {
        var result = Function(importsKeys, 'return ' + source + sourceURL).apply(undefined, importsValues);
      } catch(e) {
        e.source = source;
        throw e;
      }
      if (data) {
        return result(data);
      }
      // provide the compiled function's source by its `toString` method, in
      // supported environments, or the `source` property as a convenience for
      // inlining compiled templates during the build process
      result.source = source;
      return result;
    }

    /**
     * Executes the callback `n` times, returning an array of the results
     * of each callback execution. The callback is bound to `thisArg` and invoked
     * with one argument; (index).
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {number} n The number of times to execute the callback.
     * @param {Function} callback The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns an array of the results of each `callback` execution.
     * @example
     *
     * var diceRolls = _.times(3, _.partial(_.random, 1, 6));
     * // => [3, 6, 4]
     *
     * _.times(3, function(n) { mage.castSpell(n); });
     * // => calls `mage.castSpell(n)` three times, passing `n` of `0`, `1`, and `2` respectively
     *
     * _.times(3, function(n) { this.cast(n); }, mage);
     * // => also calls `mage.castSpell(n)` three times
     */
    function times(n, callback, thisArg) {
      n = (n = +n) > -1 ? n : 0;
      var index = -1,
          result = Array(n);

      callback = baseCreateCallback(callback, thisArg, 1);
      while (++index < n) {
        result[index] = callback(index);
      }
      return result;
    }

    /**
     * The inverse of `_.escape` this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to their
     * corresponding characters.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} string The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('Fred, Barney &amp; Pebbles');
     * // => 'Fred, Barney & Pebbles'
     */
    function unescape(string) {
      return string == null ? '' : String(string).replace(reEscapedHtml, unescapeHtmlChar);
    }

    /**
     * Generates a unique ID. If `prefix` is provided the ID will be appended to it.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} [prefix] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return String(prefix == null ? '' : prefix) + id;
    }

    /*--------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object that wraps the given value with explicit
     * method chaining enabled.
     *
     * @static
     * @memberOf _
     * @category Chaining
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney',  'age': 36 },
     *   { 'name': 'fred',    'age': 40 },
     *   { 'name': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _.chain(characters)
     *     .sortBy('age')
     *     .map(function(chr) { return chr.name + ' is ' + chr.age; })
     *     .first()
     *     .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      value = new lodashWrapper(value);
      value.__chain__ = true;
      return value;
    }

    /**
     * Invokes `interceptor` with the `value` as the first argument and then
     * returns `value`. The purpose of this method is to "tap into" a method
     * chain in order to perform operations on intermediate results within
     * the chain.
     *
     * @static
     * @memberOf _
     * @category Chaining
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3, 4])
     *  .tap(function(array) { array.pop(); })
     *  .reverse()
     *  .value();
     * // => [3, 2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * Enables explicit method chaining on the wrapper object.
     *
     * @name chain
     * @memberOf _
     * @category Chaining
     * @returns {*} Returns the wrapper object.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * // without explicit chaining
     * _(characters).first();
     * // => { 'name': 'barney', 'age': 36 }
     *
     * // with explicit chaining
     * _(characters).chain()
     *   .first()
     *   .pick('age')
     *   .value();
     * // => { 'age': 36 }
     */
    function wrapperChain() {
      this.__chain__ = true;
      return this;
    }

    /**
     * Produces the `toString` result of the wrapped value.
     *
     * @name toString
     * @memberOf _
     * @category Chaining
     * @returns {string} Returns the string result.
     * @example
     *
     * _([1, 2, 3]).toString();
     * // => '1,2,3'
     */
    function wrapperToString() {
      return String(this.__wrapped__);
    }

    /**
     * Extracts the wrapped value.
     *
     * @name valueOf
     * @memberOf _
     * @alias value
     * @category Chaining
     * @returns {*} Returns the wrapped value.
     * @example
     *
     * _([1, 2, 3]).valueOf();
     * // => [1, 2, 3]
     */
    function wrapperValueOf() {
      return this.__wrapped__;
    }

    /*--------------------------------------------------------------------------*/

    // add functions that return wrapped values when chaining
    lodash.after = after;
    lodash.assign = assign;
    lodash.at = at;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.chain = chain;
    lodash.compact = compact;
    lodash.compose = compose;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.createCallback = createCallback;
    lodash.curry = curry;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.filter = filter;
    lodash.flatten = flatten;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.functions = functions;
    lodash.groupBy = groupBy;
    lodash.indexBy = indexBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.invert = invert;
    lodash.invoke = invoke;
    lodash.keys = keys;
    lodash.map = map;
    lodash.mapValues = mapValues;
    lodash.max = max;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.min = min;
    lodash.omit = omit;
    lodash.once = once;
    lodash.pairs = pairs;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.pick = pick;
    lodash.pluck = pluck;
    lodash.property = property;
    lodash.pull = pull;
    lodash.range = range;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.shuffle = shuffle;
    lodash.sortBy = sortBy;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.times = times;
    lodash.toArray = toArray;
    lodash.transform = transform;
    lodash.union = union;
    lodash.uniq = uniq;
    lodash.values = values;
    lodash.where = where;
    lodash.without = without;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.zip = zip;
    lodash.zipObject = zipObject;

    // add aliases
    lodash.collect = map;
    lodash.drop = rest;
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.extend = assign;
    lodash.methods = functions;
    lodash.object = zipObject;
    lodash.select = filter;
    lodash.tail = rest;
    lodash.unique = uniq;
    lodash.unzip = zip;

    // add functions to `lodash.prototype`
    mixin(lodash);

    /*--------------------------------------------------------------------------*/

    // add functions that return unwrapped values when chaining
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.contains = contains;
    lodash.escape = escape;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.has = has;
    lodash.identity = identity;
    lodash.indexOf = indexOf;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isBoolean = isBoolean;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isNaN = isNaN;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isString = isString;
    lodash.isUndefined = isUndefined;
    lodash.lastIndexOf = lastIndexOf;
    lodash.mixin = mixin;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.result = result;
    lodash.runInContext = runInContext;
    lodash.size = size;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.template = template;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;

    // add aliases
    lodash.all = every;
    lodash.any = some;
    lodash.detect = find;
    lodash.findWhere = find;
    lodash.foldl = reduce;
    lodash.foldr = reduceRight;
    lodash.include = contains;
    lodash.inject = reduce;

    mixin(function() {
      var source = {}
      forOwn(lodash, function(func, methodName) {
        if (!lodash.prototype[methodName]) {
          source[methodName] = func;
        }
      });
      return source;
    }(), false);

    /*--------------------------------------------------------------------------*/

    // add functions capable of returning wrapped and unwrapped values when chaining
    lodash.first = first;
    lodash.last = last;
    lodash.sample = sample;

    // add aliases
    lodash.take = first;
    lodash.head = first;

    forOwn(lodash, function(func, methodName) {
      var callbackable = methodName !== 'sample';
      if (!lodash.prototype[methodName]) {
        lodash.prototype[methodName]= function(n, guard) {
          var chainAll = this.__chain__,
              result = func(this.__wrapped__, n, guard);

          return !chainAll && (n == null || (guard && !(callbackable && typeof n == 'function')))
            ? result
            : new lodashWrapper(result, chainAll);
        };
      }
    });

    /*--------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type string
     */
    lodash.VERSION = '2.4.2';

    // add "Chaining" functions to the wrapper
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.toString = wrapperToString;
    lodash.prototype.value = wrapperValueOf;
    lodash.prototype.valueOf = wrapperValueOf;

    // add `Array` functions that return unwrapped values
    forEach(['join', 'pop', 'shift'], function(methodName) {
      var func = arrayRef[methodName];
      lodash.prototype[methodName] = function() {
        var chainAll = this.__chain__,
            result = func.apply(this.__wrapped__, arguments);

        return chainAll
          ? new lodashWrapper(result, chainAll)
          : result;
      };
    });

    // add `Array` functions that return the existing wrapped value
    forEach(['push', 'reverse', 'sort', 'unshift'], function(methodName) {
      var func = arrayRef[methodName];
      lodash.prototype[methodName] = function() {
        func.apply(this.__wrapped__, arguments);
        return this;
      };
    });

    // add `Array` functions that return new wrapped values
    forEach(['concat', 'slice', 'splice'], function(methodName) {
      var func = arrayRef[methodName];
      lodash.prototype[methodName] = function() {
        return new lodashWrapper(func.apply(this.__wrapped__, arguments), this.__chain__);
      };
    });

    return lodash;
  }

  /*--------------------------------------------------------------------------*/

  // expose Lo-Dash
  var _ = runInContext();

  // some AMD build optimizers like r.js check for condition patterns like the following:
  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {
    // Expose Lo-Dash to the global object even when an AMD loader is present in
    // case Lo-Dash is loaded with a RequireJS shim config.
    // See http://requirejs.org/docs/api.html#config-shim
    root._ = _;

    // define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module
    define(function() {
      return _;
    });
  }
  // check for `exports` after `define` in case a build optimizer adds an `exports` object
  else if (freeExports && freeModule) {
    // in Node.js or RingoJS
    if (moduleExports) {
      (freeModule.exports = _)._ = _;
    }
    // in Narwhal or Rhino -require
    else {
      freeExports._ = _;
    }
  }
  else {
    // in a browser or Rhino
    root._ = _;
  }
}.call(this));

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],73:[function(require,module,exports){
// Top level file is just a mixin of submodules & constants
'use strict';

var assign    = require('./lib/utils/common').assign;

var deflate   = require('./lib/deflate');
var inflate   = require('./lib/inflate');
var constants = require('./lib/zlib/constants');

var pako = {};

assign(pako, deflate, inflate, constants);

module.exports = pako;

},{"./lib/deflate":74,"./lib/inflate":75,"./lib/utils/common":76,"./lib/zlib/constants":79}],74:[function(require,module,exports){
'use strict';


var zlib_deflate = require('./zlib/deflate.js');
var utils = require('./utils/common');
var strings = require('./utils/strings');
var msg = require('./zlib/messages');
var zstream = require('./zlib/zstream');

var toString = Object.prototype.toString;

/* Public constants ==========================================================*/
/* ===========================================================================*/

var Z_NO_FLUSH      = 0;
var Z_FINISH        = 4;

var Z_OK            = 0;
var Z_STREAM_END    = 1;
var Z_SYNC_FLUSH    = 2;

var Z_DEFAULT_COMPRESSION = -1;

var Z_DEFAULT_STRATEGY    = 0;

var Z_DEFLATED  = 8;

/* ===========================================================================*/


/**
 * class Deflate
 *
 * Generic JS-style wrapper for zlib calls. If you don't need
 * streaming behaviour - use more simple functions: [[deflate]],
 * [[deflateRaw]] and [[gzip]].
 **/

/* internal
 * Deflate.chunks -> Array
 *
 * Chunks of output data, if [[Deflate#onData]] not overriden.
 **/

/**
 * Deflate.result -> Uint8Array|Array
 *
 * Compressed result, generated by default [[Deflate#onData]]
 * and [[Deflate#onEnd]] handlers. Filled after you push last chunk
 * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you
 * push a chunk with explicit flush (call [[Deflate#push]] with
 * `Z_SYNC_FLUSH` param).
 **/

/**
 * Deflate.err -> Number
 *
 * Error code after deflate finished. 0 (Z_OK) on success.
 * You will not need it in real life, because deflate errors
 * are possible only on wrong options or bad `onData` / `onEnd`
 * custom handlers.
 **/

/**
 * Deflate.msg -> String
 *
 * Error message, if [[Deflate.err]] != 0
 **/


/**
 * new Deflate(options)
 * - options (Object): zlib deflate options.
 *
 * Creates new deflator instance with specified params. Throws exception
 * on bad params. Supported options:
 *
 * - `level`
 * - `windowBits`
 * - `memLevel`
 * - `strategy`
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information on these.
 *
 * Additional options, for internal needs:
 *
 * - `chunkSize` - size of generated data chunks (16K by default)
 * - `raw` (Boolean) - do raw deflate
 * - `gzip` (Boolean) - create gzip wrapper
 * - `to` (String) - if equal to 'string', then result will be "binary string"
 *    (each char code [0..255])
 * - `header` (Object) - custom header for gzip
 *   - `text` (Boolean) - true if compressed data believed to be text
 *   - `time` (Number) - modification time, unix timestamp
 *   - `os` (Number) - operation system code
 *   - `extra` (Array) - array of bytes with extra data (max 65536)
 *   - `name` (String) - file name (binary string)
 *   - `comment` (String) - comment (binary string)
 *   - `hcrc` (Boolean) - true if header crc should be added
 *
 * ##### Example:
 *
 * ```javascript
 * var pako = require('pako')
 *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])
 *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);
 *
 * var deflate = new pako.Deflate({ level: 3});
 *
 * deflate.push(chunk1, false);
 * deflate.push(chunk2, true);  // true -> last chunk
 *
 * if (deflate.err) { throw new Error(deflate.err); }
 *
 * console.log(deflate.result);
 * ```
 **/
var Deflate = function(options) {

  this.options = utils.assign({
    level: Z_DEFAULT_COMPRESSION,
    method: Z_DEFLATED,
    chunkSize: 16384,
    windowBits: 15,
    memLevel: 8,
    strategy: Z_DEFAULT_STRATEGY,
    to: ''
  }, options || {});

  var opt = this.options;

  if (opt.raw && (opt.windowBits > 0)) {
    opt.windowBits = -opt.windowBits;
  }

  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {
    opt.windowBits += 16;
  }

  this.err    = 0;      // error code, if happens (0 = Z_OK)
  this.msg    = '';     // error message
  this.ended  = false;  // used to avoid multiple onEnd() calls
  this.chunks = [];     // chunks of compressed data

  this.strm = new zstream();
  this.strm.avail_out = 0;

  var status = zlib_deflate.deflateInit2(
    this.strm,
    opt.level,
    opt.method,
    opt.windowBits,
    opt.memLevel,
    opt.strategy
  );

  if (status !== Z_OK) {
    throw new Error(msg[status]);
  }

  if (opt.header) {
    zlib_deflate.deflateSetHeader(this.strm, opt.header);
  }
};

/**
 * Deflate#push(data[, mode]) -> Boolean
 * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be
 *   converted to utf8 byte sequence.
 * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.
 *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` meansh Z_FINISH.
 *
 * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with
 * new compressed chunks. Returns `true` on success. The last data block must have
 * mode Z_FINISH (or `true`). That will flush internal pending buffers and call
 * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you
 * can use mode Z_SYNC_FLUSH, keeping the compression context.
 *
 * On fail call [[Deflate#onEnd]] with error code and return false.
 *
 * We strongly recommend to use `Uint8Array` on input for best speed (output
 * array format is detected automatically). Also, don't skip last param and always
 * use the same type in your code (boolean or number). That will improve JS speed.
 *
 * For regular `Array`-s make sure all elements are [0..255].
 *
 * ##### Example
 *
 * ```javascript
 * push(chunk, false); // push one of data chunks
 * ...
 * push(chunk, true);  // push last chunk
 * ```
 **/
Deflate.prototype.push = function(data, mode) {
  var strm = this.strm;
  var chunkSize = this.options.chunkSize;
  var status, _mode;

  if (this.ended) { return false; }

  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);

  // Convert data if needed
  if (typeof data === 'string') {
    // If we need to compress text, change encoding to utf8.
    strm.input = strings.string2buf(data);
  } else if (toString.call(data) === '[object ArrayBuffer]') {
    strm.input = new Uint8Array(data);
  } else {
    strm.input = data;
  }

  strm.next_in = 0;
  strm.avail_in = strm.input.length;

  do {
    if (strm.avail_out === 0) {
      strm.output = new utils.Buf8(chunkSize);
      strm.next_out = 0;
      strm.avail_out = chunkSize;
    }
    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */

    if (status !== Z_STREAM_END && status !== Z_OK) {
      this.onEnd(status);
      this.ended = true;
      return false;
    }
    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {
      if (this.options.to === 'string') {
        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));
      } else {
        this.onData(utils.shrinkBuf(strm.output, strm.next_out));
      }
    }
  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);

  // Finalize on the last chunk.
  if (_mode === Z_FINISH) {
    status = zlib_deflate.deflateEnd(this.strm);
    this.onEnd(status);
    this.ended = true;
    return status === Z_OK;
  }

  // callback interim results if Z_SYNC_FLUSH.
  if (_mode === Z_SYNC_FLUSH) {
    this.onEnd(Z_OK);
    strm.avail_out = 0;
    return true;
  }

  return true;
};


/**
 * Deflate#onData(chunk) -> Void
 * - chunk (Uint8Array|Array|String): ouput data. Type of array depends
 *   on js engine support. When string output requested, each chunk
 *   will be string.
 *
 * By default, stores data blocks in `chunks[]` property and glue
 * those in `onEnd`. Override this handler, if you need another behaviour.
 **/
Deflate.prototype.onData = function(chunk) {
  this.chunks.push(chunk);
};


/**
 * Deflate#onEnd(status) -> Void
 * - status (Number): deflate status. 0 (Z_OK) on success,
 *   other if not.
 *
 * Called once after you tell deflate that the input stream is
 * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)
 * or if an error happened. By default - join collected chunks,
 * free memory and fill `results` / `err` properties.
 **/
Deflate.prototype.onEnd = function(status) {
  // On success - join
  if (status === Z_OK) {
    if (this.options.to === 'string') {
      this.result = this.chunks.join('');
    } else {
      this.result = utils.flattenChunks(this.chunks);
    }
  }
  this.chunks = [];
  this.err = status;
  this.msg = this.strm.msg;
};


/**
 * deflate(data[, options]) -> Uint8Array|Array|String
 * - data (Uint8Array|Array|String): input data to compress.
 * - options (Object): zlib deflate options.
 *
 * Compress `data` with deflate alrorythm and `options`.
 *
 * Supported options are:
 *
 * - level
 * - windowBits
 * - memLevel
 * - strategy
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information on these.
 *
 * Sugar (options):
 *
 * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify
 *   negative windowBits implicitly.
 * - `to` (String) - if equal to 'string', then result will be "binary string"
 *    (each char code [0..255])
 *
 * ##### Example:
 *
 * ```javascript
 * var pako = require('pako')
 *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);
 *
 * console.log(pako.deflate(data));
 * ```
 **/
function deflate(input, options) {
  var deflator = new Deflate(options);

  deflator.push(input, true);

  // That will never happens, if you don't cheat with options :)
  if (deflator.err) { throw deflator.msg; }

  return deflator.result;
}


/**
 * deflateRaw(data[, options]) -> Uint8Array|Array|String
 * - data (Uint8Array|Array|String): input data to compress.
 * - options (Object): zlib deflate options.
 *
 * The same as [[deflate]], but creates raw data, without wrapper
 * (header and adler32 crc).
 **/
function deflateRaw(input, options) {
  options = options || {};
  options.raw = true;
  return deflate(input, options);
}


/**
 * gzip(data[, options]) -> Uint8Array|Array|String
 * - data (Uint8Array|Array|String): input data to compress.
 * - options (Object): zlib deflate options.
 *
 * The same as [[deflate]], but create gzip wrapper instead of
 * deflate one.
 **/
function gzip(input, options) {
  options = options || {};
  options.gzip = true;
  return deflate(input, options);
}


exports.Deflate = Deflate;
exports.deflate = deflate;
exports.deflateRaw = deflateRaw;
exports.gzip = gzip;

},{"./utils/common":76,"./utils/strings":77,"./zlib/deflate.js":81,"./zlib/messages":86,"./zlib/zstream":88}],75:[function(require,module,exports){
'use strict';


var zlib_inflate = require('./zlib/inflate.js');
var utils = require('./utils/common');
var strings = require('./utils/strings');
var c = require('./zlib/constants');
var msg = require('./zlib/messages');
var zstream = require('./zlib/zstream');
var gzheader = require('./zlib/gzheader');

var toString = Object.prototype.toString;

/**
 * class Inflate
 *
 * Generic JS-style wrapper for zlib calls. If you don't need
 * streaming behaviour - use more simple functions: [[inflate]]
 * and [[inflateRaw]].
 **/

/* internal
 * inflate.chunks -> Array
 *
 * Chunks of output data, if [[Inflate#onData]] not overriden.
 **/

/**
 * Inflate.result -> Uint8Array|Array|String
 *
 * Uncompressed result, generated by default [[Inflate#onData]]
 * and [[Inflate#onEnd]] handlers. Filled after you push last chunk
 * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you
 * push a chunk with explicit flush (call [[Inflate#push]] with
 * `Z_SYNC_FLUSH` param).
 **/

/**
 * Inflate.err -> Number
 *
 * Error code after inflate finished. 0 (Z_OK) on success.
 * Should be checked if broken data possible.
 **/

/**
 * Inflate.msg -> String
 *
 * Error message, if [[Inflate.err]] != 0
 **/


/**
 * new Inflate(options)
 * - options (Object): zlib inflate options.
 *
 * Creates new inflator instance with specified params. Throws exception
 * on bad params. Supported options:
 *
 * - `windowBits`
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information on these.
 *
 * Additional options, for internal needs:
 *
 * - `chunkSize` - size of generated data chunks (16K by default)
 * - `raw` (Boolean) - do raw inflate
 * - `to` (String) - if equal to 'string', then result will be converted
 *   from utf8 to utf16 (javascript) string. When string output requested,
 *   chunk length can differ from `chunkSize`, depending on content.
 *
 * By default, when no options set, autodetect deflate/gzip data format via
 * wrapper header.
 *
 * ##### Example:
 *
 * ```javascript
 * var pako = require('pako')
 *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])
 *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);
 *
 * var inflate = new pako.Inflate({ level: 3});
 *
 * inflate.push(chunk1, false);
 * inflate.push(chunk2, true);  // true -> last chunk
 *
 * if (inflate.err) { throw new Error(inflate.err); }
 *
 * console.log(inflate.result);
 * ```
 **/
var Inflate = function(options) {

  this.options = utils.assign({
    chunkSize: 16384,
    windowBits: 0,
    to: ''
  }, options || {});

  var opt = this.options;

  // Force window size for `raw` data, if not set directly,
  // because we have no header for autodetect.
  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {
    opt.windowBits = -opt.windowBits;
    if (opt.windowBits === 0) { opt.windowBits = -15; }
  }

  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate
  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&
      !(options && options.windowBits)) {
    opt.windowBits += 32;
  }

  // Gzip header has no info about windows size, we can do autodetect only
  // for deflate. So, if window size not set, force it to max when gzip possible
  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {
    // bit 3 (16) -> gzipped data
    // bit 4 (32) -> autodetect gzip/deflate
    if ((opt.windowBits & 15) === 0) {
      opt.windowBits |= 15;
    }
  }

  this.err    = 0;      // error code, if happens (0 = Z_OK)
  this.msg    = '';     // error message
  this.ended  = false;  // used to avoid multiple onEnd() calls
  this.chunks = [];     // chunks of compressed data

  this.strm   = new zstream();
  this.strm.avail_out = 0;

  var status  = zlib_inflate.inflateInit2(
    this.strm,
    opt.windowBits
  );

  if (status !== c.Z_OK) {
    throw new Error(msg[status]);
  }

  this.header = new gzheader();

  zlib_inflate.inflateGetHeader(this.strm, this.header);
};

/**
 * Inflate#push(data[, mode]) -> Boolean
 * - data (Uint8Array|Array|ArrayBuffer|String): input data
 * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.
 *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` meansh Z_FINISH.
 *
 * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with
 * new output chunks. Returns `true` on success. The last data block must have
 * mode Z_FINISH (or `true`). That will flush internal pending buffers and call
 * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you
 * can use mode Z_SYNC_FLUSH, keeping the decompression context.
 *
 * On fail call [[Inflate#onEnd]] with error code and return false.
 *
 * We strongly recommend to use `Uint8Array` on input for best speed (output
 * format is detected automatically). Also, don't skip last param and always
 * use the same type in your code (boolean or number). That will improve JS speed.
 *
 * For regular `Array`-s make sure all elements are [0..255].
 *
 * ##### Example
 *
 * ```javascript
 * push(chunk, false); // push one of data chunks
 * ...
 * push(chunk, true);  // push last chunk
 * ```
 **/
Inflate.prototype.push = function(data, mode) {
  var strm = this.strm;
  var chunkSize = this.options.chunkSize;
  var status, _mode;
  var next_out_utf8, tail, utf8str;

  if (this.ended) { return false; }
  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);

  // Convert data if needed
  if (typeof data === 'string') {
    // Only binary strings can be decompressed on practice
    strm.input = strings.binstring2buf(data);
  } else if (toString.call(data) === '[object ArrayBuffer]') {
    strm.input = new Uint8Array(data);
  } else {
    strm.input = data;
  }

  strm.next_in = 0;
  strm.avail_in = strm.input.length;

  do {
    if (strm.avail_out === 0) {
      strm.output = new utils.Buf8(chunkSize);
      strm.next_out = 0;
      strm.avail_out = chunkSize;
    }

    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */

    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {
      this.onEnd(status);
      this.ended = true;
      return false;
    }

    if (strm.next_out) {
      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {

        if (this.options.to === 'string') {

          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);

          tail = strm.next_out - next_out_utf8;
          utf8str = strings.buf2string(strm.output, next_out_utf8);

          // move tail
          strm.next_out = tail;
          strm.avail_out = chunkSize - tail;
          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }

          this.onData(utf8str);

        } else {
          this.onData(utils.shrinkBuf(strm.output, strm.next_out));
        }
      }
    }
  } while ((strm.avail_in > 0) && status !== c.Z_STREAM_END);

  if (status === c.Z_STREAM_END) {
    _mode = c.Z_FINISH;
  }

  // Finalize on the last chunk.
  if (_mode === c.Z_FINISH) {
    status = zlib_inflate.inflateEnd(this.strm);
    this.onEnd(status);
    this.ended = true;
    return status === c.Z_OK;
  }

  // callback interim results if Z_SYNC_FLUSH.
  if (_mode === c.Z_SYNC_FLUSH) {
    this.onEnd(c.Z_OK);
    strm.avail_out = 0;
    return true;
  }

  return true;
};


/**
 * Inflate#onData(chunk) -> Void
 * - chunk (Uint8Array|Array|String): ouput data. Type of array depends
 *   on js engine support. When string output requested, each chunk
 *   will be string.
 *
 * By default, stores data blocks in `chunks[]` property and glue
 * those in `onEnd`. Override this handler, if you need another behaviour.
 **/
Inflate.prototype.onData = function(chunk) {
  this.chunks.push(chunk);
};


/**
 * Inflate#onEnd(status) -> Void
 * - status (Number): inflate status. 0 (Z_OK) on success,
 *   other if not.
 *
 * Called either after you tell inflate that the input stream is
 * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)
 * or if an error happened. By default - join collected chunks,
 * free memory and fill `results` / `err` properties.
 **/
Inflate.prototype.onEnd = function(status) {
  // On success - join
  if (status === c.Z_OK) {
    if (this.options.to === 'string') {
      // Glue & convert here, until we teach pako to send
      // utf8 alligned strings to onData
      this.result = this.chunks.join('');
    } else {
      this.result = utils.flattenChunks(this.chunks);
    }
  }
  this.chunks = [];
  this.err = status;
  this.msg = this.strm.msg;
};


/**
 * inflate(data[, options]) -> Uint8Array|Array|String
 * - data (Uint8Array|Array|String): input data to decompress.
 * - options (Object): zlib inflate options.
 *
 * Decompress `data` with inflate/ungzip and `options`. Autodetect
 * format via wrapper header by default. That's why we don't provide
 * separate `ungzip` method.
 *
 * Supported options are:
 *
 * - windowBits
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information.
 *
 * Sugar (options):
 *
 * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify
 *   negative windowBits implicitly.
 * - `to` (String) - if equal to 'string', then result will be converted
 *   from utf8 to utf16 (javascript) string. When string output requested,
 *   chunk length can differ from `chunkSize`, depending on content.
 *
 *
 * ##### Example:
 *
 * ```javascript
 * var pako = require('pako')
 *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])
 *   , output;
 *
 * try {
 *   output = pako.inflate(input);
 * } catch (err)
 *   console.log(err);
 * }
 * ```
 **/
function inflate(input, options) {
  var inflator = new Inflate(options);

  inflator.push(input, true);

  // That will never happens, if you don't cheat with options :)
  if (inflator.err) { throw inflator.msg; }

  return inflator.result;
}


/**
 * inflateRaw(data[, options]) -> Uint8Array|Array|String
 * - data (Uint8Array|Array|String): input data to decompress.
 * - options (Object): zlib inflate options.
 *
 * The same as [[inflate]], but creates raw data, without wrapper
 * (header and adler32 crc).
 **/
function inflateRaw(input, options) {
  options = options || {};
  options.raw = true;
  return inflate(input, options);
}


/**
 * ungzip(data[, options]) -> Uint8Array|Array|String
 * - data (Uint8Array|Array|String): input data to decompress.
 * - options (Object): zlib inflate options.
 *
 * Just shortcut to [[inflate]], because it autodetects format
 * by header.content. Done for convenience.
 **/


exports.Inflate = Inflate;
exports.inflate = inflate;
exports.inflateRaw = inflateRaw;
exports.ungzip  = inflate;

},{"./utils/common":76,"./utils/strings":77,"./zlib/constants":79,"./zlib/gzheader":82,"./zlib/inflate.js":84,"./zlib/messages":86,"./zlib/zstream":88}],76:[function(require,module,exports){
arguments[4][4][0].apply(exports,arguments)
},{"dup":4}],77:[function(require,module,exports){
// String encode/decode helpers
'use strict';


var utils = require('./common');


// Quick check if we can use fast array to bin string conversion
//
// - apply(Array) can fail on Android 2.2
// - apply(Uint8Array) can fail on iOS 5.1 Safary
//
var STR_APPLY_OK = true;
var STR_APPLY_UIA_OK = true;

try { String.fromCharCode.apply(null, [0]); } catch(__) { STR_APPLY_OK = false; }
try { String.fromCharCode.apply(null, new Uint8Array(1)); } catch(__) { STR_APPLY_UIA_OK = false; }


// Table with utf8 lengths (calculated by first byte of sequence)
// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,
// because max possible codepoint is 0x10ffff
var _utf8len = new utils.Buf8(256);
for (var q=0; q<256; q++) {
  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);
}
_utf8len[254]=_utf8len[254]=1; // Invalid sequence start


// convert string to array (typed, when possible)
exports.string2buf = function (str) {
  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;

  // count binary size
  for (m_pos = 0; m_pos < str_len; m_pos++) {
    c = str.charCodeAt(m_pos);
    if ((c & 0xfc00) === 0xd800 && (m_pos+1 < str_len)) {
      c2 = str.charCodeAt(m_pos+1);
      if ((c2 & 0xfc00) === 0xdc00) {
        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);
        m_pos++;
      }
    }
    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;
  }

  // allocate buffer
  buf = new utils.Buf8(buf_len);

  // convert
  for (i=0, m_pos = 0; i < buf_len; m_pos++) {
    c = str.charCodeAt(m_pos);
    if ((c & 0xfc00) === 0xd800 && (m_pos+1 < str_len)) {
      c2 = str.charCodeAt(m_pos+1);
      if ((c2 & 0xfc00) === 0xdc00) {
        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);
        m_pos++;
      }
    }
    if (c < 0x80) {
      /* one byte */
      buf[i++] = c;
    } else if (c < 0x800) {
      /* two bytes */
      buf[i++] = 0xC0 | (c >>> 6);
      buf[i++] = 0x80 | (c & 0x3f);
    } else if (c < 0x10000) {
      /* three bytes */
      buf[i++] = 0xE0 | (c >>> 12);
      buf[i++] = 0x80 | (c >>> 6 & 0x3f);
      buf[i++] = 0x80 | (c & 0x3f);
    } else {
      /* four bytes */
      buf[i++] = 0xf0 | (c >>> 18);
      buf[i++] = 0x80 | (c >>> 12 & 0x3f);
      buf[i++] = 0x80 | (c >>> 6 & 0x3f);
      buf[i++] = 0x80 | (c & 0x3f);
    }
  }

  return buf;
};

// Helper (used in 2 places)
function buf2binstring(buf, len) {
  // use fallback for big arrays to avoid stack overflow
  if (len < 65537) {
    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {
      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));
    }
  }

  var result = '';
  for (var i=0; i < len; i++) {
    result += String.fromCharCode(buf[i]);
  }
  return result;
}


// Convert byte array to binary string
exports.buf2binstring = function(buf) {
  return buf2binstring(buf, buf.length);
};


// Convert binary string (typed, when possible)
exports.binstring2buf = function(str) {
  var buf = new utils.Buf8(str.length);
  for (var i=0, len=buf.length; i < len; i++) {
    buf[i] = str.charCodeAt(i);
  }
  return buf;
};


// convert array to string
exports.buf2string = function (buf, max) {
  var i, out, c, c_len;
  var len = max || buf.length;

  // Reserve max possible length (2 words per char)
  // NB: by unknown reasons, Array is significantly faster for
  //     String.fromCharCode.apply than Uint16Array.
  var utf16buf = new Array(len*2);

  for (out=0, i=0; i<len;) {
    c = buf[i++];
    // quick process ascii
    if (c < 0x80) { utf16buf[out++] = c; continue; }

    c_len = _utf8len[c];
    // skip 5 & 6 byte codes
    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len-1; continue; }

    // apply mask on first byte
    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;
    // join the rest
    while (c_len > 1 && i < len) {
      c = (c << 6) | (buf[i++] & 0x3f);
      c_len--;
    }

    // terminated by end of string?
    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }

    if (c < 0x10000) {
      utf16buf[out++] = c;
    } else {
      c -= 0x10000;
      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);
      utf16buf[out++] = 0xdc00 | (c & 0x3ff);
    }
  }

  return buf2binstring(utf16buf, out);
};


// Calculate max possible position in utf8 buffer,
// that will not break sequence. If that's not possible
// - (very small limits) return max size as is.
//
// buf[] - utf8 bytes array
// max   - length limit (mandatory);
exports.utf8border = function(buf, max) {
  var pos;

  max = max || buf.length;
  if (max > buf.length) { max = buf.length; }

  // go back from last position, until start of sequence found
  pos = max-1;
  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }

  // Fuckup - very small and broken sequence,
  // return max, because we should return something anyway.
  if (pos < 0) { return max; }

  // If we came to start of buffer - that means vuffer is too small,
  // return max too.
  if (pos === 0) { return max; }

  return (pos + _utf8len[buf[pos]] > max) ? pos : max;
};

},{"./common":76}],78:[function(require,module,exports){
arguments[4][5][0].apply(exports,arguments)
},{"dup":5}],79:[function(require,module,exports){
arguments[4][6][0].apply(exports,arguments)
},{"dup":6}],80:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],81:[function(require,module,exports){
arguments[4][8][0].apply(exports,arguments)
},{"../utils/common":76,"./adler32":78,"./crc32":80,"./messages":86,"./trees":87,"dup":8}],82:[function(require,module,exports){
'use strict';


function GZheader() {
  /* true if compressed data believed to be text */
  this.text       = 0;
  /* modification time */
  this.time       = 0;
  /* extra flags (not used when writing a gzip file) */
  this.xflags     = 0;
  /* operating system */
  this.os         = 0;
  /* pointer to extra field or Z_NULL if none */
  this.extra      = null;
  /* extra field length (valid if extra != Z_NULL) */
  this.extra_len  = 0; // Actually, we don't need it in JS,
                       // but leave for few code modifications

  //
  // Setup limits is not necessary because in js we should not preallocate memory
  // for inflate use constant limit in 65536 bytes
  //

  /* space at extra (only when reading header) */
  // this.extra_max  = 0;
  /* pointer to zero-terminated file name or Z_NULL */
  this.name       = '';
  /* space at name (only when reading header) */
  // this.name_max   = 0;
  /* pointer to zero-terminated comment or Z_NULL */
  this.comment    = '';
  /* space at comment (only when reading header) */
  // this.comm_max   = 0;
  /* true if there was or will be a header crc */
  this.hcrc       = 0;
  /* true when done reading gzip header (not used when writing a gzip file) */
  this.done       = false;
}

module.exports = GZheader;

},{}],83:[function(require,module,exports){
arguments[4][9][0].apply(exports,arguments)
},{"dup":9}],84:[function(require,module,exports){
arguments[4][10][0].apply(exports,arguments)
},{"../utils/common":76,"./adler32":78,"./crc32":80,"./inffast":83,"./inftrees":85,"dup":10}],85:[function(require,module,exports){
arguments[4][11][0].apply(exports,arguments)
},{"../utils/common":76,"dup":11}],86:[function(require,module,exports){
arguments[4][12][0].apply(exports,arguments)
},{"dup":12}],87:[function(require,module,exports){
arguments[4][13][0].apply(exports,arguments)
},{"../utils/common":76,"dup":13}],88:[function(require,module,exports){
arguments[4][14][0].apply(exports,arguments)
},{"dup":14}],89:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
(function() {
  var key, val, _ref, _ref1;

  exports.EncodeStream = require('./src/EncodeStream');

  exports.DecodeStream = require('./src/DecodeStream');

  exports.Array = require('./src/Array');

  exports.Bitfield = require('./src/Bitfield');

  exports.Buffer = require('./src/Buffer');

  exports.Enum = require('./src/Enum');

  exports.Optional = require('./src/Optional');

  exports.Reserved = require('./src/Reserved');

  exports.String = require('./src/String');

  exports.Struct = require('./src/Struct');

  exports.VersionedStruct = require('./src/VersionedStruct');

  _ref = require('./src/Number');
  for (key in _ref) {
    val = _ref[key];
    exports[key] = val;
  }

  _ref1 = require('./src/Pointer');
  for (key in _ref1) {
    val = _ref1[key];
    exports[key] = val;
  }

}).call(this);

},{"./src/Array":109,"./src/Bitfield":110,"./src/Buffer":111,"./src/DecodeStream":112,"./src/EncodeStream":113,"./src/Enum":114,"./src/Number":115,"./src/Optional":116,"./src/Pointer":117,"./src/Reserved":118,"./src/String":119,"./src/Struct":120,"./src/VersionedStruct":121}],90:[function(require,module,exports){
(function (Buffer){
"use strict"

// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.
// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.
// To save memory and loading time, we read table files only when requested.

exports._dbcs = DBCSCodec;

var UNASSIGNED = -1,
    GB18030_CODE = -2,
    SEQ_START  = -10,
    NODE_START = -1000,
    UNASSIGNED_NODE = new Array(0x100),
    DEF_CHAR = -1;

for (var i = 0; i < 0x100; i++)
    UNASSIGNED_NODE[i] = UNASSIGNED;


// Class DBCSCodec reads and initializes mapping tables.
function DBCSCodec(codecOptions, iconv) {
    this.encodingName = codecOptions.encodingName;
    if (!codecOptions)
        throw new Error("DBCS codec is called without the data.")
    if (!codecOptions.table)
        throw new Error("Encoding '" + this.encodingName + "' has no data.");

    // Load tables.
    var mappingTable = codecOptions.table();


    // Decode tables: MBCS -> Unicode.

    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.
    // Trie root is decodeTables[0].
    // Values: >=  0 -> unicode character code. can be > 0xFFFF
    //         == UNASSIGNED -> unknown/unassigned sequence.
    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.
    //         <= NODE_START -> index of the next node in our trie to process next byte.
    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.
    this.decodeTables = [];
    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.

    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. 
    this.decodeTableSeq = [];

    // Actual mapping tables consist of chunks. Use them to fill up decode tables.
    for (var i = 0; i < mappingTable.length; i++)
        this._addDecodeChunk(mappingTable[i]);

    this.defaultCharUnicode = iconv.defaultCharUnicode;

    
    // Encode tables: Unicode -> DBCS.

    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.
    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.
    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).
    //         == UNASSIGNED -> no conversion found. Output a default char.
    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.
    this.encodeTable = [];
    
    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of
    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key
    // means end of sequence (needed when one sequence is a strict subsequence of another).
    // Objects are kept separately from encodeTable to increase performance.
    this.encodeTableSeq = [];

    // Some chars can be decoded, but need not be encoded.
    var skipEncodeChars = {};
    if (codecOptions.encodeSkipVals)
        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {
            var val = codecOptions.encodeSkipVals[i];
            if (typeof val === 'number')
                skipEncodeChars[val] = true;
            else
                for (var j = val.from; j <= val.to; j++)
                    skipEncodeChars[j] = true;
        }
        
    // Use decode trie to recursively fill out encode tables.
    this._fillEncodeTable(0, 0, skipEncodeChars);

    // Add more encoding pairs when needed.
    if (codecOptions.encodeAdd) {
        for (var uChar in codecOptions.encodeAdd)
            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))
                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);
    }

    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];
    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];
    if (this.defCharSB === UNASSIGNED) this.defCharSB = "?".charCodeAt(0);


    // Load & create GB18030 tables when needed.
    if (typeof codecOptions.gb18030 === 'function') {
        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.

        // Add GB18030 decode tables.
        var thirdByteNodeIdx = this.decodeTables.length;
        var thirdByteNode = this.decodeTables[thirdByteNodeIdx] = UNASSIGNED_NODE.slice(0);

        var fourthByteNodeIdx = this.decodeTables.length;
        var fourthByteNode = this.decodeTables[fourthByteNodeIdx] = UNASSIGNED_NODE.slice(0);

        for (var i = 0x81; i <= 0xFE; i++) {
            var secondByteNodeIdx = NODE_START - this.decodeTables[0][i];
            var secondByteNode = this.decodeTables[secondByteNodeIdx];
            for (var j = 0x30; j <= 0x39; j++)
                secondByteNode[j] = NODE_START - thirdByteNodeIdx;
        }
        for (var i = 0x81; i <= 0xFE; i++)
            thirdByteNode[i] = NODE_START - fourthByteNodeIdx;
        for (var i = 0x30; i <= 0x39; i++)
            fourthByteNode[i] = GB18030_CODE
    }        
}

DBCSCodec.prototype.encoder = DBCSEncoder;
DBCSCodec.prototype.decoder = DBCSDecoder;

// Decoder helpers
DBCSCodec.prototype._getDecodeTrieNode = function(addr) {
    var bytes = [];
    for (; addr > 0; addr >>= 8)
        bytes.push(addr & 0xFF);
    if (bytes.length == 0)
        bytes.push(0);

    var node = this.decodeTables[0];
    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.
        var val = node[bytes[i]];

        if (val == UNASSIGNED) { // Create new node.
            node[bytes[i]] = NODE_START - this.decodeTables.length;
            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));
        }
        else if (val <= NODE_START) { // Existing node.
            node = this.decodeTables[NODE_START - val];
        }
        else
            throw new Error("Overwrite byte in " + this.encodingName + ", addr: " + addr.toString(16));
    }
    return node;
}


DBCSCodec.prototype._addDecodeChunk = function(chunk) {
    // First element of chunk is the hex mbcs code where we start.
    var curAddr = parseInt(chunk[0], 16);

    // Choose the decoding node where we'll write our chars.
    var writeTable = this._getDecodeTrieNode(curAddr);
    curAddr = curAddr & 0xFF;

    // Write all other elements of the chunk to the table.
    for (var k = 1; k < chunk.length; k++) {
        var part = chunk[k];
        if (typeof part === "string") { // String, write as-is.
            for (var l = 0; l < part.length;) {
                var code = part.charCodeAt(l++);
                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate
                    var codeTrail = part.charCodeAt(l++);
                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)
                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);
                    else
                        throw new Error("Incorrect surrogate pair in "  + this.encodingName + " at chunk " + chunk[0]);
                }
                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)
                    var len = 0xFFF - code + 2;
                    var seq = [];
                    for (var m = 0; m < len; m++)
                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.

                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;
                    this.decodeTableSeq.push(seq);
                }
                else
                    writeTable[curAddr++] = code; // Basic char
            }
        } 
        else if (typeof part === "number") { // Integer, meaning increasing sequence starting with prev character.
            var charCode = writeTable[curAddr - 1] + 1;
            for (var l = 0; l < part; l++)
                writeTable[curAddr++] = charCode++;
        }
        else
            throw new Error("Incorrect type '" + typeof part + "' given in "  + this.encodingName + " at chunk " + chunk[0]);
    }
    if (curAddr > 0xFF)
        throw new Error("Incorrect chunk in "  + this.encodingName + " at addr " + chunk[0] + ": too long" + curAddr);
}

// Encoder helpers
DBCSCodec.prototype._getEncodeBucket = function(uCode) {
    var high = uCode >> 8; // This could be > 0xFF because of astral characters.
    if (this.encodeTable[high] === undefined)
        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.
    return this.encodeTable[high];
}

DBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {
    var bucket = this._getEncodeBucket(uCode);
    var low = uCode & 0xFF;
    if (bucket[low] <= SEQ_START)
        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.
    else if (bucket[low] == UNASSIGNED)
        bucket[low] = dbcsCode;
}

DBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {
    
    // Get the root of character tree according to first character of the sequence.
    var uCode = seq[0];
    var bucket = this._getEncodeBucket(uCode);
    var low = uCode & 0xFF;

    var node;
    if (bucket[low] <= SEQ_START) {
        // There's already a sequence with  - use it.
        node = this.encodeTableSeq[SEQ_START-bucket[low]];
    }
    else {
        // There was no sequence object - allocate a new one.
        node = {};
        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.
        bucket[low] = SEQ_START - this.encodeTableSeq.length;
        this.encodeTableSeq.push(node);
    }

    // Traverse the character tree, allocating new nodes as needed.
    for (var j = 1; j < seq.length-1; j++) {
        var oldVal = node[uCode];
        if (typeof oldVal === 'object')
            node = oldVal;
        else {
            node = node[uCode] = {}
            if (oldVal !== undefined)
                node[DEF_CHAR] = oldVal
        }
    }

    // Set the leaf to given dbcsCode.
    uCode = seq[seq.length-1];
    node[uCode] = dbcsCode;
}

DBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {
    var node = this.decodeTables[nodeIdx];
    for (var i = 0; i < 0x100; i++) {
        var uCode = node[i];
        var mbCode = prefix + i;
        if (skipEncodeChars[mbCode])
            continue;

        if (uCode >= 0)
            this._setEncodeChar(uCode, mbCode);
        else if (uCode <= NODE_START)
            this._fillEncodeTable(NODE_START - uCode, mbCode << 8, skipEncodeChars);
        else if (uCode <= SEQ_START)
            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);
    }
}



// == Encoder ==================================================================

function DBCSEncoder(options, codec) {
    // Encoder state
    this.leadSurrogate = -1;
    this.seqObj = undefined;
    
    // Static data
    this.encodeTable = codec.encodeTable;
    this.encodeTableSeq = codec.encodeTableSeq;
    this.defaultCharSingleByte = codec.defCharSB;
    this.gb18030 = codec.gb18030;
}

DBCSEncoder.prototype.write = function(str) {
    var newBuf = new Buffer(str.length * (this.gb18030 ? 4 : 3)), 
        leadSurrogate = this.leadSurrogate,
        seqObj = this.seqObj, nextChar = -1,
        i = 0, j = 0;

    while (true) {
        // 0. Get next character.
        if (nextChar === -1) {
            if (i == str.length) break;
            var uCode = str.charCodeAt(i++);
        }
        else {
            var uCode = nextChar;
            nextChar = -1;    
        }

        // 1. Handle surrogates.
        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.
            if (uCode < 0xDC00) { // We've got lead surrogate.
                if (leadSurrogate === -1) {
                    leadSurrogate = uCode;
                    continue;
                } else {
                    leadSurrogate = uCode;
                    // Double lead surrogate found.
                    uCode = UNASSIGNED;
                }
            } else { // We've got trail surrogate.
                if (leadSurrogate !== -1) {
                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);
                    leadSurrogate = -1;
                } else {
                    // Incomplete surrogate pair - only trail surrogate found.
                    uCode = UNASSIGNED;
                }
                
            }
        }
        else if (leadSurrogate !== -1) {
            // Incomplete surrogate pair - only lead surrogate found.
            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.
            leadSurrogate = -1;
        }

        // 2. Convert uCode character.
        var dbcsCode = UNASSIGNED;
        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence
            var resCode = seqObj[uCode];
            if (typeof resCode === 'object') { // Sequence continues.
                seqObj = resCode;
                continue;

            } else if (typeof resCode == 'number') { // Sequence finished. Write it.
                dbcsCode = resCode;

            } else if (resCode == undefined) { // Current character is not part of the sequence.

                // Try default character for this sequence
                resCode = seqObj[DEF_CHAR];
                if (resCode !== undefined) {
                    dbcsCode = resCode; // Found. Write it.
                    nextChar = uCode; // Current character will be written too in the next iteration.

                } else {
                    // TODO: What if we have no default? (resCode == undefined)
                    // Then, we should write first char of the sequence as-is and try the rest recursively.
                    // Didn't do it for now because no encoding has this situation yet.
                    // Currently, just skip the sequence and write current char.
                }
            }
            seqObj = undefined;
        }
        else if (uCode >= 0) {  // Regular character
            var subtable = this.encodeTable[uCode >> 8];
            if (subtable !== undefined)
                dbcsCode = subtable[uCode & 0xFF];
            
            if (dbcsCode <= SEQ_START) { // Sequence start
                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];
                continue;
            }

            if (dbcsCode == UNASSIGNED && this.gb18030) {
                // Use GB18030 algorithm to find character(s) to write.
                var idx = findIdx(this.gb18030.uChars, uCode);
                if (idx != -1) {
                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);
                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;
                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;
                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;
                    newBuf[j++] = 0x30 + dbcsCode;
                    continue;
                }
            }
        }

        // 3. Write dbcsCode character.
        if (dbcsCode === UNASSIGNED)
            dbcsCode = this.defaultCharSingleByte;
        
        if (dbcsCode < 0x100) {
            newBuf[j++] = dbcsCode;
        }
        else if (dbcsCode < 0x10000) {
            newBuf[j++] = dbcsCode >> 8;   // high byte
            newBuf[j++] = dbcsCode & 0xFF; // low byte
        }
        else {
            newBuf[j++] = dbcsCode >> 16;
            newBuf[j++] = (dbcsCode >> 8) & 0xFF;
            newBuf[j++] = dbcsCode & 0xFF;
        }
    }

    this.seqObj = seqObj;
    this.leadSurrogate = leadSurrogate;
    return newBuf.slice(0, j);
}

DBCSEncoder.prototype.end = function() {
    if (this.leadSurrogate === -1 && this.seqObj === undefined)
        return; // All clean. Most often case.

    var newBuf = new Buffer(10), j = 0;

    if (this.seqObj) { // We're in the sequence.
        var dbcsCode = this.seqObj[DEF_CHAR];
        if (dbcsCode !== undefined) { // Write beginning of the sequence.
            if (dbcsCode < 0x100) {
                newBuf[j++] = dbcsCode;
            }
            else {
                newBuf[j++] = dbcsCode >> 8;   // high byte
                newBuf[j++] = dbcsCode & 0xFF; // low byte
            }
        } else {
            // See todo above.
        }
        this.seqObj = undefined;
    }

    if (this.leadSurrogate !== -1) {
        // Incomplete surrogate pair - only lead surrogate found.
        newBuf[j++] = this.defaultCharSingleByte;
        this.leadSurrogate = -1;
    }
    
    return newBuf.slice(0, j);
}

// Export for testing
DBCSEncoder.prototype.findIdx = findIdx;


// == Decoder ==================================================================

function DBCSDecoder(options, codec) {
    // Decoder state
    this.nodeIdx = 0;
    this.prevBuf = new Buffer(0);

    // Static data
    this.decodeTables = codec.decodeTables;
    this.decodeTableSeq = codec.decodeTableSeq;
    this.defaultCharUnicode = codec.defaultCharUnicode;
    this.gb18030 = codec.gb18030;
}

DBCSDecoder.prototype.write = function(buf) {
    var newBuf = new Buffer(buf.length*2),
        nodeIdx = this.nodeIdx, 
        prevBuf = this.prevBuf, prevBufOffset = this.prevBuf.length,
        seqStart = -this.prevBuf.length, // idx of the start of current parsed sequence.
        uCode;

    if (prevBufOffset > 0) // Make prev buf overlap a little to make it easier to slice later.
        prevBuf = Buffer.concat([prevBuf, buf.slice(0, 10)]);
    
    for (var i = 0, j = 0; i < buf.length; i++) {
        var curByte = (i >= 0) ? buf[i] : prevBuf[i + prevBufOffset];

        // Lookup in current trie node.
        var uCode = this.decodeTables[nodeIdx][curByte];

        if (uCode >= 0) { 
            // Normal character, just use it.
        }
        else if (uCode === UNASSIGNED) { // Unknown char.
            // TODO: Callback with seq.
            //var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);
            i = seqStart; // Try to parse again, after skipping first byte of the sequence ('i' will be incremented by 'for' cycle).
            uCode = this.defaultCharUnicode.charCodeAt(0);
        }
        else if (uCode === GB18030_CODE) {
            var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);
            var ptr = (curSeq[0]-0x81)*12600 + (curSeq[1]-0x30)*1260 + (curSeq[2]-0x81)*10 + (curSeq[3]-0x30);
            var idx = findIdx(this.gb18030.gbChars, ptr);
            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];
        }
        else if (uCode <= NODE_START) { // Go to next trie node.
            nodeIdx = NODE_START - uCode;
            continue;
        }
        else if (uCode <= SEQ_START) { // Output a sequence of chars.
            var seq = this.decodeTableSeq[SEQ_START - uCode];
            for (var k = 0; k < seq.length - 1; k++) {
                uCode = seq[k];
                newBuf[j++] = uCode & 0xFF;
                newBuf[j++] = uCode >> 8;
            }
            uCode = seq[seq.length-1];
        }
        else
            throw new Error("iconv-lite internal error: invalid decoding table value " + uCode + " at " + nodeIdx + "/" + curByte);

        // Write the character to buffer, handling higher planes using surrogate pair.
        if (uCode > 0xFFFF) { 
            uCode -= 0x10000;
            var uCodeLead = 0xD800 + Math.floor(uCode / 0x400);
            newBuf[j++] = uCodeLead & 0xFF;
            newBuf[j++] = uCodeLead >> 8;

            uCode = 0xDC00 + uCode % 0x400;
        }
        newBuf[j++] = uCode & 0xFF;
        newBuf[j++] = uCode >> 8;

        // Reset trie node.
        nodeIdx = 0; seqStart = i+1;
    }

    this.nodeIdx = nodeIdx;
    this.prevBuf = (seqStart >= 0) ? buf.slice(seqStart) : prevBuf.slice(seqStart + prevBufOffset);
    return newBuf.slice(0, j).toString('ucs2');
}

DBCSDecoder.prototype.end = function() {
    var ret = '';

    // Try to parse all remaining chars.
    while (this.prevBuf.length > 0) {
        // Skip 1 character in the buffer.
        ret += this.defaultCharUnicode;
        var buf = this.prevBuf.slice(1);

        // Parse remaining as usual.
        this.prevBuf = new Buffer(0);
        this.nodeIdx = 0;
        if (buf.length > 0)
            ret += this.write(buf);
    }

    this.nodeIdx = 0;
    return ret;
}

// Binary search for GB18030. Returns largest i such that table[i] <= val.
function findIdx(table, val) {
    if (table[0] > val)
        return -1;

    var l = 0, r = table.length;
    while (l < r-1) { // always table[l] <= val < table[r]
        var mid = l + Math.floor((r-l+1)/2);
        if (table[mid] <= val)
            l = mid;
        else
            r = mid;
    }
    return l;
}


}).call(this,require("buffer").Buffer)
},{"buffer":17}],91:[function(require,module,exports){
"use strict"

// Description of supported double byte encodings and aliases.
// Tables are not require()-d until they are needed to speed up library load.
// require()-s are direct to support Browserify.

module.exports = {
    
    // == Japanese/ShiftJIS ====================================================
    // All japanese encodings are based on JIS X set of standards:
    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.
    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. 
    //              Has several variations in 1978, 1983, 1990 and 1997.
    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.
    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.
    //              2 planes, first is superset of 0208, second - revised 0212.
    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)

    // Byte encodings are:
    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte
    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.
    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.
    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.
    //               0x00-0x7F       - lower part of 0201
    //               0x8E, 0xA1-0xDF - upper part of 0201
    //               (0xA1-0xFE)x2   - 0208 plane (94x94).
    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).
    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.
    //               Used as-is in ISO2022 family.
    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, 
    //                0201-1976 Roman, 0208-1978, 0208-1983.
    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.
    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.
    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.
    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.
    //
    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.
    //
    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html


    'shiftjis': {
        type: '_dbcs',
        table: function() { return require('./tables/shiftjis.json') },
        encodeAdd: {'\u00a5': 0x5C, '\u203E': 0x7E},
        encodeSkipVals: [{from: 0xED40, to: 0xF940}],
    },
    'csshiftjis': 'shiftjis',
    'mskanji': 'shiftjis',
    'sjis': 'shiftjis',
    'windows31j': 'shiftjis',
    'xsjis': 'shiftjis',
    'windows932': 'shiftjis',
    '932': 'shiftjis',
    'cp932': 'shiftjis',

    'eucjp': {
        type: '_dbcs',
        table: function() { return require('./tables/eucjp.json') },
        encodeAdd: {'\u00a5': 0x5C, '\u203E': 0x7E},
    },

    // TODO: KDDI extension to Shift_JIS
    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.
    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.

    // == Chinese/GBK ==========================================================
    // http://en.wikipedia.org/wiki/GBK

    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936
    'gb2312': 'cp936',
    'gb231280': 'cp936',
    'gb23121980': 'cp936',
    'csgb2312': 'cp936',
    'csiso58gb231280': 'cp936',
    'euccn': 'cp936',
    'isoir58': 'gbk',

    // Microsoft's CP936 is a subset and approximation of GBK.
    // TODO: Euro = 0x80 in cp936, but not in GBK (where it's valid but undefined)
    'windows936': 'cp936',
    '936': 'cp936',
    'cp936': {
        type: '_dbcs',
        table: function() { return require('./tables/cp936.json') },
    },

    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.
    'gbk': {
        type: '_dbcs',
        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },
    },
    'xgbk': 'gbk',

    // GB18030 is an algorithmic extension of GBK.
    'gb18030': {
        type: '_dbcs',
        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },
        gb18030: function() { return require('./tables/gb18030-ranges.json') },
    },

    'chinese': 'gb18030',

    // TODO: Support GB18030 (~27000 chars + whole unicode mapping, cp54936)
    // http://icu-project.org/docs/papers/gb18030.html
    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml
    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0

    // == Korean ===============================================================
    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.
    'windows949': 'cp949',
    '949': 'cp949',
    'cp949': {
        type: '_dbcs',
        table: function() { return require('./tables/cp949.json') },
    },

    'cseuckr': 'cp949',
    'csksc56011987': 'cp949',
    'euckr': 'cp949',
    'isoir149': 'cp949',
    'korean': 'cp949',
    'ksc56011987': 'cp949',
    'ksc56011989': 'cp949',
    'ksc5601': 'cp949',


    // == Big5/Taiwan/Hong Kong ================================================
    // There are lots of tables for Big5 and cp950. Please see the following links for history:
    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html
    // Variations, in roughly number of defined chars:
    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT
    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/
    //  * Big5-2003 (Taiwan standard) almost superset of cp950.
    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.
    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. 
    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.
    //    Plus, it has 4 combining sequences.
    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299
    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.
    //    Implementations are not consistent within browsers; sometimes labeled as just big5.
    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.
    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31
    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.
    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt
    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt
    // 
    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder
    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.

    'windows950': 'cp950',
    '950': 'cp950',
    'cp950': {
        type: '_dbcs',
        table: function() { return require('./tables/cp950.json') },
    },

    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.
    'big5': 'big5hkscs',
    'big5hkscs': {
        type: '_dbcs',
        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },
        encodeSkipVals: [0xa2cc],
    },

    'cnbig5': 'big5hkscs',
    'csbig5': 'big5hkscs',
    'xxbig5': 'big5hkscs',

};

},{"./tables/big5-added.json":97,"./tables/cp936.json":98,"./tables/cp949.json":99,"./tables/cp950.json":100,"./tables/eucjp.json":101,"./tables/gb18030-ranges.json":102,"./tables/gbk-added.json":103,"./tables/shiftjis.json":104}],92:[function(require,module,exports){
"use strict"

// Update this array if you add/rename/remove files in this directory.
// We support Browserify by skipping automatic module discovery and requiring modules directly.
var modules = [
    require("./internal"),
    require("./utf16"),
    require("./utf7"),
    require("./sbcs-codec"),
    require("./sbcs-data"),
    require("./sbcs-data-generated"),
    require("./dbcs-codec"),
    require("./dbcs-data"),
];

// Put all encoding/alias/codec definitions to single object and export it. 
for (var i = 0; i < modules.length; i++) {
    var module = modules[i];
    for (var enc in module)
        if (Object.prototype.hasOwnProperty.call(module, enc))
            exports[enc] = module[enc];
}

},{"./dbcs-codec":90,"./dbcs-data":91,"./internal":93,"./sbcs-codec":94,"./sbcs-data":96,"./sbcs-data-generated":95,"./utf16":105,"./utf7":106}],93:[function(require,module,exports){
(function (Buffer){
"use strict"

// Export Node.js internal encodings.

module.exports = {
    // Encodings
    utf8:   { type: "_internal", bomAware: true},
    cesu8:  "utf8",
    unicode11utf8: "utf8",

    ucs2:   { type: "_internal", bomAware: true},
    utf16le: "ucs2",

    binary: { type: "_internal" },
    base64: { type: "_internal" },
    hex:    { type: "_internal" },

    // Codec.
    _internal: InternalCodec,
};

//------------------------------------------------------------------------------

function InternalCodec(codecOptions) {
    this.enc = codecOptions.encodingName;
    this.bomAware = codecOptions.bomAware;

    if (this.enc === "base64")
        this.encoder = InternalEncoderBase64;
}

InternalCodec.prototype.encoder = InternalEncoder;
InternalCodec.prototype.decoder = InternalDecoder;

//------------------------------------------------------------------------------

// We use node.js internal decoder. It's signature is the same as ours.
var StringDecoder = require('string_decoder').StringDecoder;

if (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.
    StringDecoder.prototype.end = function() {};


function InternalDecoder(options, codec) {
    StringDecoder.call(this, codec.enc);
}

InternalDecoder.prototype = StringDecoder.prototype;


//------------------------------------------------------------------------------
// Encoder is mostly trivial

function InternalEncoder(options, codec) {
    this.enc = codec.enc;
}

InternalEncoder.prototype.write = function(str) {
    return new Buffer(str, this.enc);
}

InternalEncoder.prototype.end = function() {
}


//------------------------------------------------------------------------------
// Except base64 encoder, which must keep its state.

function InternalEncoderBase64(options, codec) {
    this.prevStr = '';
}

InternalEncoderBase64.prototype.write = function(str) {
    str = this.prevStr + str;
    var completeQuads = str.length - (str.length % 4);
    this.prevStr = str.slice(completeQuads);
    str = str.slice(0, completeQuads);

    return new Buffer(str, "base64");
}

InternalEncoderBase64.prototype.end = function() {
    return new Buffer(this.prevStr, "base64");
}


}).call(this,require("buffer").Buffer)
},{"buffer":17,"string_decoder":38}],94:[function(require,module,exports){
(function (Buffer){
"use strict"

// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that
// correspond to encoded bytes (if 128 - then lower half is ASCII). 

exports._sbcs = SBCSCodec;
function SBCSCodec(codecOptions, iconv) {
    if (!codecOptions)
        throw new Error("SBCS codec is called without the data.")
    
    // Prepare char buffer for decoding.
    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))
        throw new Error("Encoding '"+codecOptions.type+"' has incorrect 'chars' (must be of len 128 or 256)");
    
    if (codecOptions.chars.length === 128) {
        var asciiString = "";
        for (var i = 0; i < 128; i++)
            asciiString += String.fromCharCode(i);
        codecOptions.chars = asciiString + codecOptions.chars;
    }

    this.decodeBuf = new Buffer(codecOptions.chars, 'ucs2');
    
    // Encoding buffer.
    var encodeBuf = new Buffer(65536);
    encodeBuf.fill(iconv.defaultCharSingleByte.charCodeAt(0));

    for (var i = 0; i < codecOptions.chars.length; i++)
        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;

    this.encodeBuf = encodeBuf;
}

SBCSCodec.prototype.encoder = SBCSEncoder;
SBCSCodec.prototype.decoder = SBCSDecoder;


function SBCSEncoder(options, codec) {
    this.encodeBuf = codec.encodeBuf;
}

SBCSEncoder.prototype.write = function(str) {
    var buf = new Buffer(str.length);
    for (var i = 0; i < str.length; i++)
        buf[i] = this.encodeBuf[str.charCodeAt(i)];
    
    return buf;
}

SBCSEncoder.prototype.end = function() {
}


function SBCSDecoder(options, codec) {
    this.decodeBuf = codec.decodeBuf;
}

SBCSDecoder.prototype.write = function(buf) {
    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.
    var decodeBuf = this.decodeBuf;
    var newBuf = new Buffer(buf.length*2);
    var idx1 = 0, idx2 = 0;
    for (var i = 0; i < buf.length; i++) {
        idx1 = buf[i]*2; idx2 = i*2;
        newBuf[idx2] = decodeBuf[idx1];
        newBuf[idx2+1] = decodeBuf[idx1+1];
    }
    return newBuf.toString('ucs2');
}

SBCSDecoder.prototype.end = function() {
}

}).call(this,require("buffer").Buffer)
},{"buffer":17}],95:[function(require,module,exports){
"use strict"

// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.
module.exports = {
  "437": "cp437",
  "737": "cp737",
  "775": "cp775",
  "850": "cp850",
  "852": "cp852",
  "855": "cp855",
  "856": "cp856",
  "857": "cp857",
  "858": "cp858",
  "860": "cp860",
  "861": "cp861",
  "862": "cp862",
  "863": "cp863",
  "864": "cp864",
  "865": "cp865",
  "866": "cp866",
  "869": "cp869",
  "874": "windows874",
  "922": "cp922",
  "1046": "cp1046",
  "1124": "cp1124",
  "1125": "cp1125",
  "1129": "cp1129",
  "1133": "cp1133",
  "1161": "cp1161",
  "1162": "cp1162",
  "1163": "cp1163",
  "1250": "windows1250",
  "1251": "windows1251",
  "1252": "windows1252",
  "1253": "windows1253",
  "1254": "windows1254",
  "1255": "windows1255",
  "1256": "windows1256",
  "1257": "windows1257",
  "1258": "windows1258",
  "28591": "iso88591",
  "28592": "iso88592",
  "28593": "iso88593",
  "28594": "iso88594",
  "28595": "iso88595",
  "28596": "iso88596",
  "28597": "iso88597",
  "28598": "iso88598",
  "28599": "iso88599",
  "28600": "iso885910",
  "28601": "iso885911",
  "28603": "iso885913",
  "28604": "iso885914",
  "28605": "iso885915",
  "28606": "iso885916",
  "windows874": {
    "type": "_sbcs",
    "chars": "€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"
  },
  "win874": "windows874",
  "cp874": "windows874",
  "windows1250": {
    "type": "_sbcs",
    "chars": "€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙"
  },
  "win1250": "windows1250",
  "cp1250": "windows1250",
  "windows1251": {
    "type": "_sbcs",
    "chars": "ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"
  },
  "win1251": "windows1251",
  "cp1251": "windows1251",
  "windows1252": {
    "type": "_sbcs",
    "chars": "€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"
  },
  "win1252": "windows1252",
  "cp1252": "windows1252",
  "windows1253": {
    "type": "_sbcs",
    "chars": "€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�"
  },
  "win1253": "windows1253",
  "cp1253": "windows1253",
  "windows1254": {
    "type": "_sbcs",
    "chars": "€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ"
  },
  "win1254": "windows1254",
  "cp1254": "windows1254",
  "windows1255": {
    "type": "_sbcs",
    "chars": "€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹ�ֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�"
  },
  "win1255": "windows1255",
  "cp1255": "windows1255",
  "windows1256": {
    "type": "_sbcs",
    "chars": "€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے"
  },
  "win1256": "windows1256",
  "cp1256": "windows1256",
  "windows1257": {
    "type": "_sbcs",
    "chars": "€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙"
  },
  "win1257": "windows1257",
  "cp1257": "windows1257",
  "windows1258": {
    "type": "_sbcs",
    "chars": "€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ"
  },
  "win1258": "windows1258",
  "cp1258": "windows1258",
  "iso88591": {
    "type": "_sbcs",
    "chars": " ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"
  },
  "cp28591": "iso88591",
  "iso88592": {
    "type": "_sbcs",
    "chars": " Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙"
  },
  "cp28592": "iso88592",
  "iso88593": {
    "type": "_sbcs",
    "chars": " Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙"
  },
  "cp28593": "iso88593",
  "iso88594": {
    "type": "_sbcs",
    "chars": " ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙"
  },
  "cp28594": "iso88594",
  "iso88595": {
    "type": "_sbcs",
    "chars": " ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ"
  },
  "cp28595": "iso88595",
  "iso88596": {
    "type": "_sbcs",
    "chars": " ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������"
  },
  "cp28596": "iso88596",
  "iso88597": {
    "type": "_sbcs",
    "chars": " ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�"
  },
  "cp28597": "iso88597",
  "iso88598": {
    "type": "_sbcs",
    "chars": " �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�"
  },
  "cp28598": "iso88598",
  "iso88599": {
    "type": "_sbcs",
    "chars": " ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ"
  },
  "cp28599": "iso88599",
  "iso885910": {
    "type": "_sbcs",
    "chars": " ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ"
  },
  "cp28600": "iso885910",
  "iso885911": {
    "type": "_sbcs",
    "chars": " กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"
  },
  "cp28601": "iso885911",
  "iso885913": {
    "type": "_sbcs",
    "chars": " ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’"
  },
  "cp28603": "iso885913",
  "iso885914": {
    "type": "_sbcs",
    "chars": " Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ"
  },
  "cp28604": "iso885914",
  "iso885915": {
    "type": "_sbcs",
    "chars": " ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"
  },
  "cp28605": "iso885915",
  "iso885916": {
    "type": "_sbcs",
    "chars": " ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ"
  },
  "cp28606": "iso885916",
  "cp437": {
    "type": "_sbcs",
    "chars": "ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
  },
  "ibm437": "cp437",
  "csibm437": "cp437",
  "cp737": {
    "type": "_sbcs",
    "chars": "ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ "
  },
  "ibm737": "cp737",
  "csibm737": "cp737",
  "cp775": {
    "type": "_sbcs",
    "chars": "ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ "
  },
  "ibm775": "cp775",
  "csibm775": "cp775",
  "cp850": {
    "type": "_sbcs",
    "chars": "ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ "
  },
  "ibm850": "cp850",
  "csibm850": "cp850",
  "cp852": {
    "type": "_sbcs",
    "chars": "ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ "
  },
  "ibm852": "cp852",
  "csibm852": "cp852",
  "cp855": {
    "type": "_sbcs",
    "chars": "ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ "
  },
  "ibm855": "cp855",
  "csibm855": "cp855",
  "cp856": {
    "type": "_sbcs",
    "chars": "אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ "
  },
  "ibm856": "cp856",
  "csibm856": "cp856",
  "cp857": {
    "type": "_sbcs",
    "chars": "ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ "
  },
  "ibm857": "cp857",
  "csibm857": "cp857",
  "cp858": {
    "type": "_sbcs",
    "chars": "ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ "
  },
  "ibm858": "cp858",
  "csibm858": "cp858",
  "cp860": {
    "type": "_sbcs",
    "chars": "ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
  },
  "ibm860": "cp860",
  "csibm860": "cp860",
  "cp861": {
    "type": "_sbcs",
    "chars": "ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
  },
  "ibm861": "cp861",
  "csibm861": "cp861",
  "cp862": {
    "type": "_sbcs",
    "chars": "אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
  },
  "ibm862": "cp862",
  "csibm862": "cp862",
  "cp863": {
    "type": "_sbcs",
    "chars": "ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
  },
  "ibm863": "cp863",
  "csibm863": "cp863",
  "cp864": {
    "type": "_sbcs",
    "chars": "\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�"
  },
  "ibm864": "cp864",
  "csibm864": "cp864",
  "cp865": {
    "type": "_sbcs",
    "chars": "ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
  },
  "ibm865": "cp865",
  "csibm865": "cp865",
  "cp866": {
    "type": "_sbcs",
    "chars": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ "
  },
  "ibm866": "cp866",
  "csibm866": "cp866",
  "cp869": {
    "type": "_sbcs",
    "chars": "������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ "
  },
  "ibm869": "cp869",
  "csibm869": "cp869",
  "cp922": {
    "type": "_sbcs",
    "chars": " ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ"
  },
  "ibm922": "cp922",
  "csibm922": "cp922",
  "cp1046": {
    "type": "_sbcs",
    "chars": "ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�"
  },
  "ibm1046": "cp1046",
  "csibm1046": "cp1046",
  "cp1124": {
    "type": "_sbcs",
    "chars": " ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ"
  },
  "ibm1124": "cp1124",
  "csibm1124": "cp1124",
  "cp1125": {
    "type": "_sbcs",
    "chars": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ "
  },
  "ibm1125": "cp1125",
  "csibm1125": "cp1125",
  "cp1129": {
    "type": "_sbcs",
    "chars": " ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ"
  },
  "ibm1129": "cp1129",
  "csibm1129": "cp1129",
  "cp1133": {
    "type": "_sbcs",
    "chars": " ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�"
  },
  "ibm1133": "cp1133",
  "csibm1133": "cp1133",
  "cp1161": {
    "type": "_sbcs",
    "chars": "��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ "
  },
  "ibm1161": "cp1161",
  "csibm1161": "cp1161",
  "cp1162": {
    "type": "_sbcs",
    "chars": "€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"
  },
  "ibm1162": "cp1162",
  "csibm1162": "cp1162",
  "cp1163": {
    "type": "_sbcs",
    "chars": " ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ"
  },
  "ibm1163": "cp1163",
  "csibm1163": "cp1163",
  "maccroatian": {
    "type": "_sbcs",
    "chars": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ"
  },
  "maccyrillic": {
    "type": "_sbcs",
    "chars": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤"
  },
  "macgreek": {
    "type": "_sbcs",
    "chars": "Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�"
  },
  "maciceland": {
    "type": "_sbcs",
    "chars": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"
  },
  "macroman": {
    "type": "_sbcs",
    "chars": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"
  },
  "macromania": {
    "type": "_sbcs",
    "chars": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"
  },
  "macthai": {
    "type": "_sbcs",
    "chars": "«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����"
  },
  "macturkish": {
    "type": "_sbcs",
    "chars": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ"
  },
  "macukraine": {
    "type": "_sbcs",
    "chars": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤"
  },
  "koi8r": {
    "type": "_sbcs",
    "chars": "─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"
  },
  "koi8u": {
    "type": "_sbcs",
    "chars": "─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"
  },
  "koi8ru": {
    "type": "_sbcs",
    "chars": "─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"
  },
  "koi8t": {
    "type": "_sbcs",
    "chars": "қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"
  },
  "armscii8": {
    "type": "_sbcs",
    "chars": " �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�"
  },
  "rk1048": {
    "type": "_sbcs",
    "chars": "ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"
  },
  "tcvn": {
    "type": "_sbcs",
    "chars": "\u0000ÚỤ\u0003ỪỬỮ\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010ỨỰỲỶỸÝỴ\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ"
  },
  "georgianacademy": {
    "type": "_sbcs",
    "chars": "‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ"
  },
  "georgianps": {
    "type": "_sbcs",
    "chars": "‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"
  },
  "pt154": {
    "type": "_sbcs",
    "chars": "ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"
  },
  "viscii": {
    "type": "_sbcs",
    "chars": "\u0000\u0001Ẳ\u0003\u0004ẴẪ\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013Ỷ\u0015\u0016\u0017\u0018Ỹ\u001a\u001b\u001c\u001dỴ\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ"
  },
  "iso646cn": {
    "type": "_sbcs",
    "chars": "\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������"
  },
  "iso646jp": {
    "type": "_sbcs",
    "chars": "\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������"
  },
  "hproman8": {
    "type": "_sbcs",
    "chars": " ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�"
  },
  "macintosh": {
    "type": "_sbcs",
    "chars": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"
  },
  "ascii": {
    "type": "_sbcs",
    "chars": "��������������������������������������������������������������������������������������������������������������������������������"
  },
  "tis620": {
    "type": "_sbcs",
    "chars": "���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"
  }
}
},{}],96:[function(require,module,exports){
"use strict"

// Manually added data to be used by sbcs codec in addition to generated one.

module.exports = {
    // Not supported by iconv, not sure why.
    "10029": "maccenteuro",
    "maccenteuro": {
        "type": "_sbcs",
        "chars": "ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ"
    },

    "808": "cp808",
    "ibm808": "cp808",
    "cp808": {
        "type": "_sbcs",
        "chars": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ "
    },

    // Aliases of generated encodings.
    "ascii8bit": "ascii",
    "usascii": "ascii",
    "ansix34": "ascii",
    "ansix341968": "ascii",
    "ansix341986": "ascii",
    "csascii": "ascii",
    "cp367": "ascii",
    "ibm367": "ascii",
    "isoir6": "ascii",
    "iso646us": "ascii",
    "iso646irv": "ascii",
    "us": "ascii",

    "latin1": "iso88591",
    "latin2": "iso88592",
    "latin3": "iso88593",
    "latin4": "iso88594",
    "latin5": "iso88599",
    "latin6": "iso885910",
    "latin7": "iso885913",
    "latin8": "iso885914",
    "latin9": "iso885915",
    "latin10": "iso885916",

    "csisolatin1": "iso88591",
    "csisolatin2": "iso88592",
    "csisolatin3": "iso88593",
    "csisolatin4": "iso88594",
    "csisolatincyrillic": "iso88595",
    "csisolatinarabic": "iso88596",
    "csisolatingreek" : "iso88597",
    "csisolatinhebrew": "iso88598",
    "csisolatin5": "iso88599",
    "csisolatin6": "iso885910",

    "l1": "iso88591",
    "l2": "iso88592",
    "l3": "iso88593",
    "l4": "iso88594",
    "l5": "iso88599",
    "l6": "iso885910",
    "l7": "iso885913",
    "l8": "iso885914",
    "l9": "iso885915",
    "l10": "iso885916",

    "isoir14": "iso646jp",
    "isoir57": "iso646cn",
    "isoir100": "iso88591",
    "isoir101": "iso88592",
    "isoir109": "iso88593",
    "isoir110": "iso88594",
    "isoir144": "iso88595",
    "isoir127": "iso88596",
    "isoir126": "iso88597",
    "isoir138": "iso88598",
    "isoir148": "iso88599",
    "isoir157": "iso885910",
    "isoir166": "tis620",
    "isoir179": "iso885913",
    "isoir199": "iso885914",
    "isoir203": "iso885915",
    "isoir226": "iso885916",

    "cp819": "iso88591",
    "ibm819": "iso88591",

    "cyrillic": "iso88595",

    "arabic": "iso88596",
    "arabic8": "iso88596",
    "ecma114": "iso88596",
    "asmo708": "iso88596",

    "greek" : "iso88597",
    "greek8" : "iso88597",
    "ecma118" : "iso88597",
    "elot928" : "iso88597",

    "hebrew": "iso88598",
    "hebrew8": "iso88598",

    "turkish": "iso88599",
    "turkish8": "iso88599",

    "thai": "iso885911",
    "thai8": "iso885911",

    "celtic": "iso885914",
    "celtic8": "iso885914",
    "isoceltic": "iso885914",

    "tis6200": "tis620",
    "tis62025291": "tis620",
    "tis62025330": "tis620",

    "10000": "macroman",
    "10006": "macgreek",
    "10007": "maccyrillic",
    "10079": "maciceland",
    "10081": "macturkish",

    "cspc8codepage437": "cp437",
    "cspc775baltic": "cp775",
    "cspc850multilingual": "cp850",
    "cspcp852": "cp852",
    "cspc862latinhebrew": "cp862",
    "cpgr": "cp869",

    "msee": "cp1250",
    "mscyrl": "cp1251",
    "msansi": "cp1252",
    "msgreek": "cp1253",
    "msturk": "cp1254",
    "mshebr": "cp1255",
    "msarab": "cp1256",
    "winbaltrim": "cp1257",

    "cp20866": "koi8r",
    "20866": "koi8r",
    "ibm878": "koi8r",
    "cskoi8r": "koi8r",

    "cp21866": "koi8u",
    "21866": "koi8u",
    "ibm1168": "koi8u",

    "strk10482002": "rk1048",

    "tcvn5712": "tcvn",
    "tcvn57121": "tcvn",

    "gb198880": "iso646cn",
    "cn": "iso646cn",

    "csiso14jisc6220ro": "iso646jp",
    "jisc62201969ro": "iso646jp",
    "jp": "iso646jp",

    "cshproman8": "hproman8",
    "r8": "hproman8",
    "roman8": "hproman8",
    "xroman8": "hproman8",
    "ibm1051": "hproman8",

    "mac": "macintosh",
    "csmacintosh": "macintosh",
};


},{}],97:[function(require,module,exports){
module.exports=[
["8740","䏰䰲䘃䖦䕸𧉧䵷䖳𧲱䳢𧳅㮕䜶䝄䱇䱀𤊿𣘗𧍒𦺋𧃒䱗𪍑䝏䗚䲅𧱬䴇䪤䚡𦬣爥𥩔𡩣𣸆𣽡晍囻"],
["8767","綕夝𨮹㷴霴𧯯寛𡵞媤㘥𩺰嫑宷峼杮薓𩥅瑡璝㡵𡵓𣚞𦀡㻬"],
["87a1","𥣞㫵竼龗𤅡𨤍𣇪𠪊𣉞䌊蒄龖鐯䤰蘓墖靊鈘秐稲晠権袝瑌篅枂稬剏遆㓦珄𥶹瓆鿇垳䤯呌䄱𣚎堘穲𧭥讏䚮𦺈䆁𥶙箮𢒼鿈𢓁𢓉𢓌鿉蔄𣖻䂴鿊䓡𪷿拁灮鿋"],
["8840","㇀",4,"𠄌㇅𠃑𠃍㇆㇇𠃋𡿨㇈𠃊㇉㇊㇋㇌𠄎㇍㇎ĀÁǍÀĒÉĚÈŌÓǑÒ࿿Ê̄Ế࿿Ê̌ỀÊāáǎàɑēéěèīíǐìōóǒòūúǔùǖǘǚ"],
["88a1","ǜü࿿ê̄ế࿿ê̌ềêɡ⏚⏛"],
["8940","𪎩𡅅"],
["8943","攊"],
["8946","丽滝鵎釟"],
["894c","𧜵撑会伨侨兖兴农凤务动医华发变团声处备夲头学实実岚庆总斉柾栄桥济炼电纤纬纺织经统缆缷艺苏药视设询车轧轮"],
["89a1","琑糼緍楆竉刧"],
["89ab","醌碸酞肼"],
["89b0","贋胶𠧧"],
["89b5","肟黇䳍鷉鸌䰾𩷶𧀎鸊𪄳㗁"],
["89c1","溚舾甙"],
["89c5","䤑马骏龙禇𨑬𡷊𠗐𢫦两亁亀亇亿仫伷㑌侽㹈倃傈㑽㒓㒥円夅凛凼刅争剹劐匧㗇厩㕑厰㕓参吣㕭㕲㚁咓咣咴咹哐哯唘唣唨㖘唿㖥㖿嗗㗅"],
["8a40","𧶄唥"],
["8a43","𠱂𠴕𥄫喐𢳆㧬𠍁蹆𤶸𩓥䁓𨂾睺𢰸㨴䟕𨅝𦧲𤷪擝𠵼𠾴𠳕𡃴撍蹾𠺖𠰋𠽤𢲩𨉖𤓓"],
["8a64","𠵆𩩍𨃩䟴𤺧𢳂骲㩧𩗴㿭㔆𥋇𩟔𧣈𢵄鵮頕"],
["8a76","䏙𦂥撴哣𢵌𢯊𡁷㧻𡁯"],
["8aa1","𦛚𦜖𧦠擪𥁒𠱃蹨𢆡𨭌𠜱"],
["8aac","䠋𠆩㿺塳𢶍"],
["8ab2","𤗈𠓼𦂗𠽌𠶖啹䂻䎺"],
["8abb","䪴𢩦𡂝膪飵𠶜捹㧾𢝵跀嚡摼㹃"],
["8ac9","𪘁𠸉𢫏𢳉"],
["8ace","𡃈𣧂㦒㨆𨊛㕸𥹉𢃇噒𠼱𢲲𩜠㒼氽𤸻"],
["8adf","𧕴𢺋𢈈𪙛𨳍𠹺𠰴𦠜羓𡃏𢠃𢤹㗻𥇣𠺌𠾍𠺪㾓𠼰𠵇𡅏𠹌"],
["8af6","𠺫𠮩𠵈𡃀𡄽㿹𢚖搲𠾭"],
["8b40","𣏴𧘹𢯎𠵾𠵿𢱑𢱕㨘𠺘𡃇𠼮𪘲𦭐𨳒𨶙𨳊閪哌苄喹"],
["8b55","𩻃鰦骶𧝞𢷮煀腭胬尜𦕲脴㞗卟𨂽醶𠻺𠸏𠹷𠻻㗝𤷫㘉𠳖嚯𢞵𡃉𠸐𠹸𡁸𡅈𨈇𡑕𠹹𤹐𢶤婔𡀝𡀞𡃵𡃶垜𠸑"],
["8ba1","𧚔𨋍𠾵𠹻𥅾㜃𠾶𡆀𥋘𪊽𤧚𡠺𤅷𨉼墙剨㘚𥜽箲孨䠀䬬鼧䧧鰟鮍𥭴𣄽嗻㗲嚉丨夂𡯁屮靑𠂆乛亻㔾尣彑忄㣺扌攵歺氵氺灬爫丬犭𤣩罒礻糹罓𦉪㓁"],
["8bde","𦍋耂肀𦘒𦥑卝衤见𧢲讠贝钅镸长门𨸏韦页风飞饣𩠐鱼鸟黄歯龜丷𠂇阝户钢"],
["8c40","倻淾𩱳龦㷉袏𤅎灷峵䬠𥇍㕙𥴰愢𨨲辧釶熑朙玺𣊁𪄇㲋𡦀䬐磤琂冮𨜏䀉橣𪊺䈣蘏𠩯稪𩥇𨫪靕灍匤𢁾鏴盙𨧣龧矝亣俰傼丯众龨吴綋墒壐𡶶庒庙忂𢜒斋"],
["8ca1","𣏹椙橃𣱣泿"],
["8ca7","爀𤔅玌㻛𤨓嬕璹讃𥲤𥚕窓篬糃繬苸薗龩袐龪躹龫迏蕟駠鈡龬𨶹𡐿䁱䊢娚"],
["8cc9","顨杫䉶圽"],
["8cce","藖𤥻芿𧄍䲁𦵴嵻𦬕𦾾龭龮宖龯曧繛湗秊㶈䓃𣉖𢞖䎚䔶"],
["8ce6","峕𣬚諹屸㴒𣕑嵸龲煗䕘𤃬𡸣䱷㥸㑊𠆤𦱁諌侴𠈹妿腬顖𩣺弻"],
["8d40","𠮟"],
["8d42","𢇁𨥭䄂䚻𩁹㼇龳𪆵䃸㟖䛷𦱆䅼𨚲𧏿䕭㣔𥒚䕡䔛䶉䱻䵶䗪㿈𤬏㙡䓞䒽䇭崾嵈嵖㷼㠏嶤嶹㠠㠸幂庽弥徃㤈㤔㤿㥍惗愽峥㦉憷憹懏㦸戬抐拥挘㧸嚱"],
["8da1","㨃揢揻搇摚㩋擀崕嘡龟㪗斆㪽旿晓㫲暒㬢朖㭂枤栀㭘桊梄㭲㭱㭻椉楃牜楤榟榅㮼槖㯝橥橴橱檂㯬檙㯲檫檵櫔櫶殁毁毪汵沪㳋洂洆洦涁㳯涤涱渕渘温溆𨧀溻滢滚齿滨滩漤漴㵆𣽁澁澾㵪㵵熷岙㶊瀬㶑灐灔灯灿炉𠌥䏁㗱𠻘"],
["8e40","𣻗垾𦻓焾𥟠㙎榢𨯩孴穉𥣡𩓙穥穽𥦬窻窰竂竃燑𦒍䇊竚竝竪䇯咲𥰁笋筕笩𥌎𥳾箢筯莜𥮴𦱿篐萡箒箸𥴠㶭𥱥蒒篺簆簵𥳁籄粃𤢂粦晽𤕸糉糇糦籴糳糵糎"],
["8ea1","繧䔝𦹄絝𦻖璍綉綫焵綳緒𤁗𦀩緤㴓緵𡟹緥𨍭縝𦄡𦅚繮纒䌫鑬縧罀罁罇礶𦋐駡羗𦍑羣𡙡𠁨䕜𣝦䔃𨌺翺𦒉者耈耝耨耯𪂇𦳃耻耼聡𢜔䦉𦘦𣷣𦛨朥肧𨩈脇脚墰𢛶汿𦒘𤾸擧𡒊舘𡡞橓𤩥𤪕䑺舩𠬍𦩒𣵾俹𡓽蓢荢𦬊𤦧𣔰𡝳𣷸芪椛芳䇛"],
["8f40","蕋苐茚𠸖𡞴㛁𣅽𣕚艻苢茘𣺋𦶣𦬅𦮗𣗎㶿茝嗬莅䔋𦶥莬菁菓㑾𦻔橗蕚㒖𦹂𢻯葘𥯤葱㷓䓤檧葊𣲵祘蒨𦮖𦹷𦹃蓞萏莑䒠蒓蓤𥲑䉀𥳀䕃蔴嫲𦺙䔧蕳䔖枿蘖"],
["8fa1","𨘥𨘻藁𧂈蘂𡖂𧃍䕫䕪蘨㙈𡢢号𧎚虾蝱𪃸蟮𢰧螱蟚蠏噡虬桖䘏衅衆𧗠𣶹𧗤衞袜䙛袴袵揁装睷𧜏覇覊覦覩覧覼𨨥觧𧤤𧪽誜瞓釾誐𧩙竩𧬺𣾏䜓𧬸煼謌謟𥐰𥕥謿譌譍誩𤩺讐讛誯𡛟䘕衏貛𧵔𧶏貫㜥𧵓賖𧶘𧶽贒贃𡤐賛灜贑𤳉㻐起"],
["9040","趩𨀂𡀔𤦊㭼𨆼𧄌竧躭躶軃鋔輙輭𨍥𨐒辥錃𪊟𠩐辳䤪𨧞𨔽𣶻廸𣉢迹𪀔𨚼𨔁𢌥㦀𦻗逷𨔼𧪾遡𨕬𨘋邨𨜓郄𨛦邮都酧㫰醩釄粬𨤳𡺉鈎沟鉁鉢𥖹銹𨫆𣲛𨬌𥗛"],
["90a1","𠴱錬鍫𨫡𨯫炏嫃𨫢𨫥䥥鉄𨯬𨰹𨯿鍳鑛躼閅閦鐦閠濶䊹𢙺𨛘𡉼𣸮䧟氜陻隖䅬隣𦻕懚隶磵𨫠隽双䦡𦲸𠉴𦐐𩂯𩃥𤫑𡤕𣌊霱虂霶䨏䔽䖅𤫩灵孁霛靜𩇕靗孊𩇫靟鐥僐𣂷𣂼鞉鞟鞱鞾韀韒韠𥑬韮琜𩐳響韵𩐝𧥺䫑頴頳顋顦㬎𧅵㵑𠘰𤅜"],
["9140","𥜆飊颷飈飇䫿𦴧𡛓喰飡飦飬鍸餹𤨩䭲𩡗𩤅駵騌騻騐驘𥜥㛄𩂱𩯕髠髢𩬅髴䰎鬔鬭𨘀倴鬴𦦨㣃𣁽魐魀𩴾婅𡡣鮎𤉋鰂鯿鰌𩹨鷔𩾷𪆒𪆫𪃡𪄣𪇟鵾鶃𪄴鸎梈"],
["91a1","鷄𢅛𪆓𪈠𡤻𪈳鴹𪂹𪊴麐麕麞麢䴴麪麯𤍤黁㭠㧥㴝伲㞾𨰫鼂鼈䮖鐤𦶢鼗鼖鼹嚟嚊齅馸𩂋韲葿齢齩竜龎爖䮾𤥵𤦻煷𤧸𤍈𤩑玞𨯚𡣺禟𨥾𨸶鍩鏳𨩄鋬鎁鏋𨥬𤒹爗㻫睲穃烐𤑳𤏸煾𡟯炣𡢾𣖙㻇𡢅𥐯𡟸㜢𡛻𡠹㛡𡝴𡣑𥽋㜣𡛀坛𤨥𡏾𡊨"],
["9240","𡏆𡒶蔃𣚦蔃葕𤦔𧅥𣸱𥕜𣻻𧁒䓴𣛮𩦝𦼦柹㜳㰕㷧塬𡤢栐䁗𣜿𤃡𤂋𤄏𦰡哋嚞𦚱嚒𠿟𠮨𠸍鏆𨬓鎜仸儫㠙𤐶亼𠑥𠍿佋侊𥙑婨𠆫𠏋㦙𠌊𠐔㐵伩𠋀𨺳𠉵諚𠈌亘"],
["92a1","働儍侢伃𤨎𣺊佂倮偬傁俌俥偘僼兙兛兝兞湶𣖕𣸹𣺿浲𡢄𣺉冨凃𠗠䓝𠒣𠒒𠒑赺𨪜𠜎剙劤𠡳勡鍮䙺熌𤎌𠰠𤦬𡃤槑𠸝瑹㻞璙琔瑖玘䮎𤪼𤂍叐㖄爏𤃉喴𠍅响𠯆圝鉝雴鍦埝垍坿㘾壋媙𨩆𡛺𡝯𡜐娬妸銏婾嫏娒𥥆𡧳𡡡𤊕㛵洅瑃娡𥺃"],
["9340","媁𨯗𠐓鏠璌𡌃焅䥲鐈𨧻鎽㞠尞岞幞幈𡦖𡥼𣫮廍孏𡤃𡤄㜁𡢠㛝𡛾㛓脪𨩇𡶺𣑲𨦨弌弎𡤧𡞫婫𡜻孄蘔𧗽衠恾𢡠𢘫忛㺸𢖯𢖾𩂈𦽳懀𠀾𠁆𢘛憙憘恵𢲛𢴇𤛔𩅍"],
["93a1","摱𤙥𢭪㨩𢬢𣑐𩣪𢹸挷𪑛撶挱揑𤧣𢵧护𢲡搻敫楲㯴𣂎𣊭𤦉𣊫唍𣋠𡣙𩐿曎𣊉𣆳㫠䆐𥖄𨬢𥖏𡛼𥕛𥐥磮𣄃𡠪𣈴㑤𣈏𣆂𤋉暎𦴤晫䮓昰𧡰𡷫晣𣋒𣋡昞𥡲㣑𣠺𣞼㮙𣞢𣏾瓐㮖枏𤘪梶栞㯄檾㡣𣟕𤒇樳橒櫉欅𡤒攑梘橌㯗橺歗𣿀𣲚鎠鋲𨯪𨫋"],
["9440","銉𨀞𨧜鑧涥漋𤧬浧𣽿㶏渄𤀼娽渊塇洤硂焻𤌚𤉶烱牐犇犔𤞏𤜥兹𤪤𠗫瑺𣻸𣙟𤩊𤤗𥿡㼆㺱𤫟𨰣𣼵悧㻳瓌琼鎇琷䒟𦷪䕑疃㽣𤳙𤴆㽘畕癳𪗆㬙瑨𨫌𤦫𤦎㫻"],
["94a1","㷍𤩎㻿𤧅𤣳釺圲鍂𨫣𡡤僟𥈡𥇧睸𣈲眎眏睻𤚗𣞁㩞𤣰琸璛㺿𤪺𤫇䃈𤪖𦆮錇𥖁砞碍碈磒珐祙𧝁𥛣䄎禛蒖禥樭𣻺稺秴䅮𡛦䄲鈵秱𠵌𤦌𠊙𣶺𡝮㖗啫㕰㚪𠇔𠰍竢婙𢛵𥪯𥪜娍𠉛磰娪𥯆竾䇹籝籭䈑𥮳𥺼𥺦糍𤧹𡞰粎籼粮檲緜縇緓罎𦉡"],
["9540","𦅜𧭈綗𥺂䉪𦭵𠤖柖𠁎𣗏埄𦐒𦏸𤥢翝笧𠠬𥫩𥵃笌𥸎駦虅驣樜𣐿㧢𤧷𦖭騟𦖠蒀𧄧𦳑䓪脷䐂胆脉腂𦞴飃𦩂艢艥𦩑葓𦶧蘐𧈛媆䅿𡡀嬫𡢡嫤𡣘蚠蜨𣶏蠭𧐢娂"],
["95a1","衮佅袇袿裦襥襍𥚃襔𧞅𧞄𨯵𨯙𨮜𨧹㺭蒣䛵䛏㟲訽訜𩑈彍鈫𤊄旔焩烄𡡅鵭貟賩𧷜妚矃姰䍮㛔踪躧𤰉輰轊䋴汘澻𢌡䢛潹溋𡟚鯩㚵𤤯邻邗啱䤆醻鐄𨩋䁢𨫼鐧𨰝𨰻蓥訫閙閧閗閖𨴴瑅㻂𤣿𤩂𤏪㻧𣈥随𨻧𨹦𨹥㻌𤧭𤩸𣿮琒瑫㻼靁𩂰"],
["9640","桇䨝𩂓𥟟靝鍨𨦉𨰦𨬯𦎾銺嬑譩䤼珹𤈛鞛靱餸𠼦巁𨯅𤪲頟𩓚鋶𩗗釥䓀𨭐𤩧𨭤飜𨩅㼀鈪䤥萔餻饍𧬆㷽馛䭯馪驜𨭥𥣈檏騡嫾騯𩣱䮐𩥈馼䮽䮗鍽塲𡌂堢𤦸"],
["96a1","𡓨硄𢜟𣶸棅㵽鑘㤧慐𢞁𢥫愇鱏鱓鱻鰵鰐魿鯏𩸭鮟𪇵𪃾鴡䲮𤄄鸘䲰鴌𪆴𪃭𪃳𩤯鶥蒽𦸒𦿟𦮂藼䔳𦶤𦺄𦷰萠藮𦸀𣟗𦁤秢𣖜𣙀䤭𤧞㵢鏛銾鍈𠊿碹鉷鑍俤㑀遤𥕝砽硔碶硋𡝗𣇉𤥁㚚佲濚濙瀞瀞吔𤆵垻壳垊鴖埗焴㒯𤆬燫𦱀𤾗嬨𡞵𨩉"],
["9740","愌嫎娋䊼𤒈㜬䭻𨧼鎻鎸𡣖𠼝葲𦳀𡐓𤋺𢰦𤏁妔𣶷𦝁綨𦅛𦂤𤦹𤦋𨧺鋥珢㻩璴𨭣𡢟㻡𤪳櫘珳珻㻖𤨾𤪔𡟙𤩦𠎧𡐤𤧥瑈𤤖炥𤥶銄珦鍟𠓾錱𨫎𨨖鎆𨯧𥗕䤵𨪂煫"],
["97a1","𤥃𠳿嚤𠘚𠯫𠲸唂秄𡟺緾𡛂𤩐𡡒䔮鐁㜊𨫀𤦭妰𡢿𡢃𧒄媡㛢𣵛㚰鉟婹𨪁𡡢鍴㳍𠪴䪖㦊僴㵩㵌𡎜煵䋻𨈘渏𩃤䓫浗𧹏灧沯㳖𣿭𣸭渂漌㵯𠏵畑㚼㓈䚀㻚䡱姄鉮䤾轁𨰜𦯀堒埈㛖𡑒烾𤍢𤩱𢿣𡊰𢎽梹楧𡎘𣓥𧯴𣛟𨪃𣟖𣏺𤲟樚𣚭𦲷萾䓟䓎"],
["9840","𦴦𦵑𦲂𦿞漗𧄉茽𡜺菭𦲀𧁓𡟛妉媂𡞳婡婱𡤅𤇼㜭姯𡜼㛇熎鎐暚𤊥婮娫𤊓樫𣻹𧜶𤑛𤋊焝𤉙𨧡侰𦴨峂𤓎𧹍𤎽樌𤉖𡌄炦焳𤏩㶥泟勇𤩏繥姫崯㷳彜𤩝𡟟綤萦"],
["98a1","咅𣫺𣌀𠈔坾𠣕𠘙㿥𡾞𪊶瀃𩅛嵰玏糓𨩙𩐠俈翧狍猐𧫴猸猹𥛶獁獈㺩𧬘遬燵𤣲珡臶㻊県㻑沢国琙琞琟㻢㻰㻴㻺瓓㼎㽓畂畭畲疍㽼痈痜㿀癍㿗癴㿜発𤽜熈嘣覀塩䀝睃䀹条䁅㗛瞘䁪䁯属瞾矋売砘点砜䂨砹硇硑硦葈𥔵礳栃礲䄃"],
["9940","䄉禑禙辻稆込䅧窑䆲窼艹䇄竏竛䇏両筢筬筻簒簛䉠䉺类粜䊌粸䊔糭输烀𠳏総緔緐緽羮羴犟䎗耠耥笹耮耱联㷌垴炠肷胩䏭脌猪脎脒畠脔䐁㬹腖腙腚"],
["99a1","䐓堺腼膄䐥膓䐭膥埯臁臤艔䒏芦艶苊苘苿䒰荗险榊萅烵葤惣蒈䔄蒾蓡蓸蔐蔸蕒䔻蕯蕰藠䕷虲蚒蚲蛯际螋䘆䘗袮裿褤襇覑𧥧訩訸誔誴豑賔賲贜䞘塟跃䟭仮踺嗘坔蹱嗵躰䠷軎転軤軭軲辷迁迊迌逳駄䢭飠鈓䤞鈨鉘鉫銱銮銿"],
["9a40","鋣鋫鋳鋴鋽鍃鎄鎭䥅䥑麿鐗匁鐝鐭鐾䥪鑔鑹锭関䦧间阳䧥枠䨤靀䨵鞲韂噔䫤惨颹䬙飱塄餎餙冴餜餷饂饝饢䭰駅䮝騼鬏窃魩鮁鯝鯱鯴䱭鰠㝯𡯂鵉鰺"],
["9aa1","黾噐鶓鶽鷀鷼银辶鹻麬麱麽黆铜黢黱黸竈齄𠂔𠊷𠎠椚铃妬𠓗塀铁㞹𠗕𠘕𠙶𡚺块煳𠫂𠫍𠮿呪吆𠯋咞𠯻𠰻𠱓𠱥𠱼惧𠲍噺𠲵𠳝𠳭𠵯𠶲𠷈楕鰯螥𠸄𠸎𠻗𠾐𠼭𠹳尠𠾼帋𡁜𡁏𡁶朞𡁻𡂈𡂖㙇𡂿𡃓𡄯𡄻卤蒭𡋣𡍵𡌶讁𡕷𡘙𡟃𡟇乸炻𡠭𡥪"],
["9b40","𡨭𡩅𡰪𡱰𡲬𡻈拃𡻕𡼕熘桕𢁅槩㛈𢉼𢏗𢏺𢜪𢡱𢥏苽𢥧𢦓𢫕覥𢫨辠𢬎鞸𢬿顇骽𢱌"],
["9b62","𢲈𢲷𥯨𢴈𢴒𢶷𢶕𢹂𢽴𢿌𣀳𣁦𣌟𣏞徱晈暿𧩹𣕧𣗳爁𤦺矗𣘚𣜖纇𠍆墵朎"],
["9ba1","椘𣪧𧙗𥿢𣸑𣺹𧗾𢂚䣐䪸𤄙𨪚𤋮𤌍𤀻𤌴𤎖𤩅𠗊凒𠘑妟𡺨㮾𣳿𤐄𤓖垈𤙴㦛𤜯𨗨𩧉㝢𢇃譞𨭎駖𤠒𤣻𤨕爉𤫀𠱸奥𤺥𤾆𠝹軚𥀬劏圿煱𥊙𥐙𣽊𤪧喼𥑆𥑮𦭒釔㑳𥔿𧘲𥕞䜘𥕢𥕦𥟇𤤿𥡝偦㓻𣏌惞𥤃䝼𨥈𥪮𥮉𥰆𡶐垡煑澶𦄂𧰒遖𦆲𤾚譢𦐂𦑊"],
["9c40","嵛𦯷輶𦒄𡤜諪𤧶𦒈𣿯𦔒䯀𦖿𦚵𢜛鑥𥟡憕娧晉侻嚹𤔡𦛼乪𤤴陖涏𦲽㘘襷𦞙𦡮𦐑𦡞營𦣇筂𩃀𠨑𦤦鄄𦤹穅鷰𦧺騦𦨭㙟𦑩𠀡禃𦨴𦭛崬𣔙菏𦮝䛐𦲤画补𦶮墶"],
["9ca1","㜜𢖍𧁋𧇍㱔𧊀𧊅銁𢅺𧊋錰𧋦𤧐氹钟𧑐𠻸蠧裵𢤦𨑳𡞱溸𤨪𡠠㦤㚹尐秣䔿暶𩲭𩢤襃𧟌𧡘囖䃟𡘊㦡𣜯𨃨𡏅熭荦𧧝𩆨婧䲷𧂯𨦫𧧽𧨊𧬋𧵦𤅺筃祾𨀉澵𪋟樃𨌘厢𦸇鎿栶靝𨅯𨀣𦦵𡏭𣈯𨁈嶅𨰰𨂃圕頣𨥉嶫𤦈斾槕叒𤪥𣾁㰑朶𨂐𨃴𨄮𡾡𨅏"],
["9d40","𨆉𨆯𨈚𨌆𨌯𨎊㗊𨑨𨚪䣺揦𨥖砈鉕𨦸䏲𨧧䏟𨧨𨭆𨯔姸𨰉輋𨿅𩃬筑𩄐𩄼㷷𩅞𤫊运犏嚋𩓧𩗩𩖰𩖸𩜲𩣑𩥉𩥪𩧃𩨨𩬎𩵚𩶛纟𩻸𩼣䲤镇𪊓熢𪋿䶑递𪗋䶜𠲜达嗁"],
["9da1","辺𢒰边𤪓䔉繿潖檱仪㓤𨬬𧢝㜺躀𡟵𨀤𨭬𨮙𧨾𦚯㷫𧙕𣲷𥘵𥥖亚𥺁𦉘嚿𠹭踎孭𣺈𤲞揞拐𡟶𡡻攰嘭𥱊吚𥌑㷆𩶘䱽嘢嘞罉𥻘奵𣵀蝰东𠿪𠵉𣚺脗鵞贘瘻鱅癎瞹鍅吲腈苷嘥脲萘肽嗪祢噃吖𠺝㗎嘅嗱曱𨋢㘭甴嗰喺咗啲𠱁𠲖廐𥅈𠹶𢱢"],
["9e40","𠺢麫絚嗞𡁵抝靭咔賍燶酶揼掹揾啩𢭃鱲𢺳冚㓟𠶧冧呍唞唓癦踭𦢊疱肶蠄螆裇膶萜𡃁䓬猄𤜆宐茋𦢓噻𢛴𧴯𤆣𧵳𦻐𧊶酰𡇙鈈𣳼𪚩𠺬𠻹牦𡲢䝎𤿂𧿹𠿫䃺"],
["9ea1","鱝攟𢶠䣳𤟠𩵼𠿬𠸊恢𧖣𠿭"],
["9ead","𦁈𡆇熣纎鵐业丄㕷嬍沲卧㚬㧜卽㚥𤘘墚𤭮舭呋垪𥪕𠥹"],
["9ec5","㩒𢑥獴𩺬䴉鯭𣳾𩼰䱛𤾩𩖞𩿞葜𣶶𧊲𦞳𣜠挮紥𣻷𣸬㨪逈勌㹴㙺䗩𠒎癀嫰𠺶硺𧼮墧䂿噼鮋嵴癔𪐴麅䳡痹㟻愙𣃚𤏲"],
["9ef5","噝𡊩垧𤥣𩸆刴𧂮㖭汊鵼"],
["9f40","籖鬹埞𡝬屓擓𩓐𦌵𧅤蚭𠴨𦴢𤫢𠵱"],
["9f4f","凾𡼏嶎霃𡷑麁遌笟鬂峑箣扨挵髿篏鬪籾鬮籂粆鰕篼鬉鼗鰛𤤾齚啳寃俽麘俲剠㸆勑坧偖妷帒韈鶫轜呩鞴饀鞺匬愰"],
["9fa1","椬叚鰊鴂䰻陁榀傦畆𡝭駚剳"],
["9fae","酙隁酜"],
["9fb2","酑𨺗捿𦴣櫊嘑醎畺抅𠏼獏籰𥰡𣳽"],
["9fc1","𤤙盖鮝个𠳔莾衂"],
["9fc9","届槀僭坺刟巵从氱𠇲伹咜哚劚趂㗾弌㗳"],
["9fdb","歒酼龥鮗頮颴骺麨麄煺笔"],
["9fe7","毺蠘罸"],
["9feb","嘠𪙊蹷齓"],
["9ff0","跔蹏鸜踁抂𨍽踨蹵竓𤩷稾磘泪詧瘇"],
["a040","𨩚鼦泎蟖痃𪊲硓咢贌狢獱謭猂瓱賫𤪻蘯徺袠䒷"],
["a055","𡠻𦸅"],
["a058","詾𢔛"],
["a05b","惽癧髗鵄鍮鮏蟵"],
["a063","蠏賷猬霡鮰㗖犲䰇籑饊𦅙慙䰄麖慽"],
["a073","坟慯抦戹拎㩜懢厪𣏵捤栂㗒"],
["a0a1","嵗𨯂迚𨸹"],
["a0a6","僙𡵆礆匲阸𠼻䁥"],
["a0ae","矾"],
["a0b0","糂𥼚糚稭聦聣絍甅瓲覔舚朌聢𧒆聛瓰脃眤覉𦟌畓𦻑螩蟎臈螌詉貭譃眫瓸蓚㘵榲趦"],
["a0d4","覩瑨涹蟁𤀑瓧㷛煶悤憜㳑煢恷"],
["a0e2","罱𨬭牐惩䭾删㰘𣳇𥻗𧙖𥔱𡥄𡋾𩤃𦷜𧂭峁𦆭𨨏𣙷𠃮𦡆𤼎䕢嬟𦍌齐麦𦉫"],
["a3c0","␀",31,"␡"],
["c6a1","①",9,"⑴",9,"ⅰ",9,"丶丿亅亠冂冖冫勹匸卩厶夊宀巛⼳广廴彐彡攴无疒癶辵隶¨ˆヽヾゝゞ〃仝々〆〇ー［］✽ぁ",23],
["c740","す",58,"ァアィイ"],
["c7a1","ゥ",81,"А",5,"ЁЖ",4],
["c840","Л",26,"ёж",25,"⇧↸↹㇏𠃌乚𠂊刂䒑"],
["c8a1","龰冈龱𧘇"],
["c8cd","￢￤＇＂㈱№℡゛゜⺀⺄⺆⺇⺈⺊⺌⺍⺕⺜⺝⺥⺧⺪⺬⺮⺶⺼⺾⻆⻊⻌⻍⻏⻖⻗⻞⻣"],
["c8f5","ʃɐɛɔɵœøŋʊɪ"],
["f9fe","￭"],
["fa40","𠕇鋛𠗟𣿅蕌䊵珯况㙉𤥂𨧤鍄𡧛苮𣳈砼杄拟𤤳𨦪𠊠𦮳𡌅侫𢓭倈𦴩𧪄𣘀𤪱𢔓倩𠍾徤𠎀𠍇滛𠐟偽儁㑺儎顬㝃萖𤦤𠒇兠𣎴兪𠯿𢃼𠋥𢔰𠖎𣈳𡦃宂蝽𠖳𣲙冲冸"],
["faa1","鴴凉减凑㳜凓𤪦决凢卂凭菍椾𣜭彻刋刦刼劵剗劔効勅簕蕂勠蘍𦬓包𨫞啉滙𣾀𠥔𣿬匳卄𠯢泋𡜦栛珕恊㺪㣌𡛨燝䒢卭却𨚫卾卿𡖖𡘓矦厓𨪛厠厫厮玧𥝲㽙玜叁叅汉义埾叙㪫𠮏叠𣿫𢶣叶𠱷吓灹唫晗浛呭𦭓𠵴啝咏咤䞦𡜍𠻝㶴𠵍"],
["fb40","𨦼𢚘啇䳭启琗喆喩嘅𡣗𤀺䕒𤐵暳𡂴嘷曍𣊊暤暭噍噏磱囱鞇叾圀囯园𨭦㘣𡉏坆𤆥汮炋坂㚱𦱾埦𡐖堃𡑔𤍣堦𤯵塜墪㕡壠壜𡈼壻寿坃𪅐𤉸鏓㖡够梦㛃湙"],
["fba1","𡘾娤啓𡚒蔅姉𠵎𦲁𦴪𡟜姙𡟻𡞲𦶦浱𡠨𡛕姹𦹅媫婣㛦𤦩婷㜈媖瑥嫓𦾡𢕔㶅𡤑㜲𡚸広勐孶斈孼𧨎䀄䡝𠈄寕慠𡨴𥧌𠖥寳宝䴐尅𡭄尓珎尔𡲥𦬨屉䣝岅峩峯嶋𡷹𡸷崐崘嵆𡺤岺巗苼㠭𤤁𢁉𢅳芇㠶㯂帮檊幵幺𤒼𠳓厦亷廐厨𡝱帉廴𨒂"],
["fc40","廹廻㢠廼栾鐛弍𠇁弢㫞䢮𡌺强𦢈𢏐彘𢑱彣鞽𦹮彲鍀𨨶徧嶶㵟𥉐𡽪𧃸𢙨釖𠊞𨨩怱暅𡡷㥣㷇㘹垐𢞴祱㹀悞悤悳𤦂𤦏𧩓璤僡媠慤萤慂慈𦻒憁凴𠙖憇宪𣾷"],
["fca1","𢡟懓𨮝𩥝懐㤲𢦀𢣁怣慜攞掋𠄘担𡝰拕𢸍捬𤧟㨗搸揸𡎎𡟼撐澊𢸶頔𤂌𥜝擡擥鑻㩦携㩗敍漖𤨨𤨣斅敭敟𣁾斵𤥀䬷旑䃘𡠩无旣忟𣐀昘𣇷𣇸晄𣆤𣆥晋𠹵晧𥇦晳晴𡸽𣈱𨗴𣇈𥌓矅𢣷馤朂𤎜𤨡㬫槺𣟂杞杧杢𤇍𩃭柗䓩栢湐鈼栁𣏦𦶠桝"],
["fd40","𣑯槡樋𨫟楳棃𣗍椁椀㴲㨁𣘼㮀枬楡𨩊䋼椶榘㮡𠏉荣傐槹𣙙𢄪橅𣜃檝㯳枱櫈𩆜㰍欝𠤣惞欵歴𢟍溵𣫛𠎵𡥘㝀吡𣭚毡𣻼毜氷𢒋𤣱𦭑汚舦汹𣶼䓅𣶽𤆤𤤌𤤀"],
["fda1","𣳉㛥㳫𠴲鮃𣇹𢒑羏样𦴥𦶡𦷫涖浜湼漄𤥿𤂅𦹲蔳𦽴凇沜渝萮𨬡港𣸯瑓𣾂秌湏媑𣁋濸㜍澝𣸰滺𡒗𤀽䕕鏰潄潜㵎潴𩅰㴻澟𤅄濓𤂑𤅕𤀹𣿰𣾴𤄿凟𤅖𤅗𤅀𦇝灋灾炧炁烌烕烖烟䄄㷨熴熖𤉷焫煅媈煊煮岜𤍥煏鍢𤋁焬𤑚𤨧𤨢熺𨯨炽爎"],
["fe40","鑂爕夑鑃爤鍁𥘅爮牀𤥴梽牕牗㹕𣁄栍漽犂猪猫𤠣𨠫䣭𨠄猨献珏玪𠰺𦨮珉瑉𤇢𡛧𤨤昣㛅𤦷𤦍𤧻珷琕椃𤨦琹𠗃㻗瑜𢢭瑠𨺲瑇珤瑶莹瑬㜰瑴鏱樬璂䥓𤪌"],
["fea1","𤅟𤩹𨮏孆𨰃𡢞瓈𡦈甎瓩甞𨻙𡩋寗𨺬鎅畍畊畧畮𤾂㼄𤴓疎瑝疞疴瘂瘬癑癏癯癶𦏵皐臯㟸𦤑𦤎皡皥皷盌𦾟葢𥂝𥅽𡸜眞眦着撯𥈠睘𣊬瞯𨥤𨥨𡛁矴砉𡍶𤨒棊碯磇磓隥礮𥗠磗礴碱𧘌辸袄𨬫𦂃𢘜禆褀椂禀𥡗禝𧬹礼禩渪𧄦㺨秆𩄍秔"]
]

},{}],98:[function(require,module,exports){
module.exports=[
["0","\u0000",127,"€"],
["8140","丂丄丅丆丏丒丗丟丠両丣並丩丮丯丱丳丵丷丼乀乁乂乄乆乊乑乕乗乚乛乢乣乤乥乧乨乪",5,"乲乴",9,"乿",6,"亇亊"],
["8180","亐亖亗亙亜亝亞亣亪亯亰亱亴亶亷亸亹亼亽亾仈仌仏仐仒仚仛仜仠仢仦仧仩仭仮仯仱仴仸仹仺仼仾伀伂",6,"伋伌伒",4,"伜伝伡伣伨伩伬伭伮伱伳伵伷伹伻伾",4,"佄佅佇",5,"佒佔佖佡佢佦佨佪佫佭佮佱佲併佷佸佹佺佽侀侁侂侅來侇侊侌侎侐侒侓侕侖侘侙侚侜侞侟価侢"],
["8240","侤侫侭侰",4,"侶",8,"俀俁係俆俇俈俉俋俌俍俒",4,"俙俛俠俢俤俥俧俫俬俰俲俴俵俶俷俹俻俼俽俿",11],
["8280","個倎倐們倓倕倖倗倛倝倞倠倢倣値倧倫倯",10,"倻倽倿偀偁偂偄偅偆偉偊偋偍偐",4,"偖偗偘偙偛偝",7,"偦",5,"偭",8,"偸偹偺偼偽傁傂傃傄傆傇傉傊傋傌傎",20,"傤傦傪傫傭",4,"傳",6,"傼"],
["8340","傽",17,"僐",5,"僗僘僙僛",10,"僨僩僪僫僯僰僱僲僴僶",4,"僼",9,"儈"],
["8380","儉儊儌",5,"儓",13,"儢",28,"兂兇兊兌兎兏児兒兓兗兘兙兛兝",4,"兣兤兦內兩兪兯兲兺兾兿冃冄円冇冊冋冎冏冐冑冓冔冘冚冝冞冟冡冣冦",4,"冭冮冴冸冹冺冾冿凁凂凃凅凈凊凍凎凐凒",5],
["8440","凘凙凚凜凞凟凢凣凥",5,"凬凮凱凲凴凷凾刄刅刉刋刌刏刐刓刔刕刜刞刟刡刢刣別刦刧刪刬刯刱刲刴刵刼刾剄",5,"剋剎剏剒剓剕剗剘"],
["8480","剙剚剛剝剟剠剢剣剤剦剨剫剬剭剮剰剱剳",9,"剾劀劃",4,"劉",6,"劑劒劔",6,"劜劤劥劦劧劮劯劰労",9,"勀勁勂勄勅勆勈勊勌勍勎勏勑勓勔動勗務",5,"勠勡勢勣勥",10,"勱",7,"勻勼勽匁匂匃匄匇匉匊匋匌匎"],
["8540","匑匒匓匔匘匛匜匞匟匢匤匥匧匨匩匫匬匭匯",9,"匼匽區卂卄卆卋卌卍卐協単卙卛卝卥卨卪卬卭卲卶卹卻卼卽卾厀厁厃厇厈厊厎厏"],
["8580","厐",4,"厖厗厙厛厜厞厠厡厤厧厪厫厬厭厯",6,"厷厸厹厺厼厽厾叀參",4,"収叏叐叒叓叕叚叜叝叞叡叢叧叴叺叾叿吀吂吅吇吋吔吘吙吚吜吢吤吥吪吰吳吶吷吺吽吿呁呂呄呅呇呉呌呍呎呏呑呚呝",4,"呣呥呧呩",7,"呴呹呺呾呿咁咃咅咇咈咉咊咍咑咓咗咘咜咞咟咠咡"],
["8640","咢咥咮咰咲咵咶咷咹咺咼咾哃哅哊哋哖哘哛哠",4,"哫哬哯哰哱哴",5,"哻哾唀唂唃唄唅唈唊",4,"唒唓唕",5,"唜唝唞唟唡唥唦"],
["8680","唨唩唫唭唲唴唵唶唸唹唺唻唽啀啂啅啇啈啋",4,"啑啒啓啔啗",4,"啝啞啟啠啢啣啨啩啫啯",5,"啹啺啽啿喅喆喌喍喎喐喒喓喕喖喗喚喛喞喠",6,"喨",8,"喲喴営喸喺喼喿",4,"嗆嗇嗈嗊嗋嗎嗏嗐嗕嗗",4,"嗞嗠嗢嗧嗩嗭嗮嗰嗱嗴嗶嗸",4,"嗿嘂嘃嘄嘅"],
["8740","嘆嘇嘊嘋嘍嘐",7,"嘙嘚嘜嘝嘠嘡嘢嘥嘦嘨嘩嘪嘫嘮嘯嘰嘳嘵嘷嘸嘺嘼嘽嘾噀",11,"噏",4,"噕噖噚噛噝",4],
["8780","噣噥噦噧噭噮噯噰噲噳噴噵噷噸噹噺噽",7,"嚇",6,"嚐嚑嚒嚔",14,"嚤",10,"嚰",6,"嚸嚹嚺嚻嚽",12,"囋",8,"囕囖囘囙囜団囥",5,"囬囮囯囲図囶囷囸囻囼圀圁圂圅圇國",6],
["8840","園",9,"圝圞圠圡圢圤圥圦圧圫圱圲圴",4,"圼圽圿坁坃坄坅坆坈坉坋坒",4,"坘坙坢坣坥坧坬坮坰坱坲坴坵坸坹坺坽坾坿垀"],
["8880","垁垇垈垉垊垍",4,"垔",6,"垜垝垞垟垥垨垪垬垯垰垱垳垵垶垷垹",8,"埄",6,"埌埍埐埑埓埖埗埛埜埞埡埢埣埥",7,"埮埰埱埲埳埵埶執埻埼埾埿堁堃堄堅堈堉堊堌堎堏堐堒堓堔堖堗堘堚堛堜堝堟堢堣堥",4,"堫",4,"報堲堳場堶",7],
["8940","堾",5,"塅",6,"塎塏塐塒塓塕塖塗塙",4,"塟",5,"塦",4,"塭",16,"塿墂墄墆墇墈墊墋墌"],
["8980","墍",4,"墔",4,"墛墜墝墠",7,"墪",17,"墽墾墿壀壂壃壄壆",10,"壒壓壔壖",13,"壥",5,"壭壯壱売壴壵壷壸壺",7,"夃夅夆夈",4,"夎夐夑夒夓夗夘夛夝夞夠夡夢夣夦夨夬夰夲夳夵夶夻"],
["8a40","夽夾夿奀奃奅奆奊奌奍奐奒奓奙奛",4,"奡奣奤奦",12,"奵奷奺奻奼奾奿妀妅妉妋妌妎妏妐妑妔妕妘妚妛妜妝妟妠妡妢妦"],
["8a80","妧妬妭妰妱妳",5,"妺妼妽妿",6,"姇姈姉姌姍姎姏姕姖姙姛姞",4,"姤姦姧姩姪姫姭",11,"姺姼姽姾娀娂娊娋娍娎娏娐娒娔娕娖娗娙娚娛娝娞娡娢娤娦娧娨娪",6,"娳娵娷",4,"娽娾娿婁",4,"婇婈婋",9,"婖婗婘婙婛",5],
["8b40","婡婣婤婥婦婨婩婫",8,"婸婹婻婼婽婾媀",17,"媓",6,"媜",13,"媫媬"],
["8b80","媭",4,"媴媶媷媹",4,"媿嫀嫃",5,"嫊嫋嫍",4,"嫓嫕嫗嫙嫚嫛嫝嫞嫟嫢嫤嫥嫧嫨嫪嫬",4,"嫲",22,"嬊",11,"嬘",25,"嬳嬵嬶嬸",7,"孁",6],
["8c40","孈",7,"孒孖孞孠孡孧孨孫孭孮孯孲孴孶孷學孹孻孼孾孿宂宆宊宍宎宐宑宒宔宖実宧宨宩宬宭宮宯宱宲宷宺宻宼寀寁寃寈寉寊寋寍寎寏"],
["8c80","寑寔",8,"寠寢寣實寧審",4,"寯寱",6,"寽対尀専尃尅將專尋尌對導尐尒尓尗尙尛尞尟尠尡尣尦尨尩尪尫尭尮尯尰尲尳尵尶尷屃屄屆屇屌屍屒屓屔屖屗屘屚屛屜屝屟屢層屧",6,"屰屲",6,"屻屼屽屾岀岃",4,"岉岊岋岎岏岒岓岕岝",4,"岤",4],
["8d40","岪岮岯岰岲岴岶岹岺岻岼岾峀峂峃峅",5,"峌",5,"峓",5,"峚",6,"峢峣峧峩峫峬峮峯峱",9,"峼",4],
["8d80","崁崄崅崈",5,"崏",4,"崕崗崘崙崚崜崝崟",4,"崥崨崪崫崬崯",4,"崵",7,"崿",7,"嵈嵉嵍",10,"嵙嵚嵜嵞",10,"嵪嵭嵮嵰嵱嵲嵳嵵",12,"嶃",21,"嶚嶛嶜嶞嶟嶠"],
["8e40","嶡",21,"嶸",12,"巆",6,"巎",12,"巜巟巠巣巤巪巬巭"],
["8e80","巰巵巶巸",4,"巿帀帄帇帉帊帋帍帎帒帓帗帞",7,"帨",4,"帯帰帲",4,"帹帺帾帿幀幁幃幆",5,"幍",6,"幖",4,"幜幝幟幠幣",14,"幵幷幹幾庁庂広庅庈庉庌庍庎庒庘庛庝庡庢庣庤庨",4,"庮",4,"庴庺庻庼庽庿",6],
["8f40","廆廇廈廋",5,"廔廕廗廘廙廚廜",11,"廩廫",8,"廵廸廹廻廼廽弅弆弇弉弌弍弎弐弒弔弖弙弚弜弝弞弡弢弣弤"],
["8f80","弨弫弬弮弰弲",6,"弻弽弾弿彁",14,"彑彔彙彚彛彜彞彟彠彣彥彧彨彫彮彯彲彴彵彶彸彺彽彾彿徃徆徍徎徏徑従徔徖徚徛徝從徟徠徢",5,"復徫徬徯",5,"徶徸徹徺徻徾",4,"忇忈忊忋忎忓忔忕忚忛応忞忟忢忣忥忦忨忩忬忯忰忲忳忴忶忷忹忺忼怇"],
["9040","怈怉怋怌怐怑怓怗怘怚怞怟怢怣怤怬怭怮怰",4,"怶",4,"怽怾恀恄",6,"恌恎恏恑恓恔恖恗恘恛恜恞恟恠恡恥恦恮恱恲恴恵恷恾悀"],
["9080","悁悂悅悆悇悈悊悋悎悏悐悑悓悕悗悘悙悜悞悡悢悤悥悧悩悪悮悰悳悵悶悷悹悺悽",7,"惇惈惉惌",4,"惒惓惔惖惗惙惛惞惡",4,"惪惱惲惵惷惸惻",4,"愂愃愄愅愇愊愋愌愐",4,"愖愗愘愙愛愜愝愞愡愢愥愨愩愪愬",18,"慀",6],
["9140","慇慉態慍慏慐慒慓慔慖",6,"慞慟慠慡慣慤慥慦慩",6,"慱慲慳慴慶慸",18,"憌憍憏",4,"憕"],
["9180","憖",6,"憞",8,"憪憫憭",9,"憸",5,"憿懀懁懃",4,"應懌",4,"懓懕",16,"懧",13,"懶",8,"戀",5,"戇戉戓戔戙戜戝戞戠戣戦戧戨戩戫戭戯戰戱戲戵戶戸",4,"扂扄扅扆扊"],
["9240","扏扐払扖扗扙扚扜",6,"扤扥扨扱扲扴扵扷扸扺扻扽抁抂抃抅抆抇抈抋",5,"抔抙抜抝択抣抦抧抩抪抭抮抯抰抲抳抴抶抷抸抺抾拀拁"],
["9280","拃拋拏拑拕拝拞拠拡拤拪拫拰拲拵拸拹拺拻挀挃挄挅挆挊挋挌挍挏挐挒挓挔挕挗挘挙挜挦挧挩挬挭挮挰挱挳",5,"挻挼挾挿捀捁捄捇捈捊捑捒捓捔捖",7,"捠捤捥捦捨捪捫捬捯捰捲捳捴捵捸捹捼捽捾捿掁掃掄掅掆掋掍掑掓掔掕掗掙",6,"採掤掦掫掯掱掲掵掶掹掻掽掿揀"],
["9340","揁揂揃揅揇揈揊揋揌揑揓揔揕揗",6,"揟揢揤",4,"揫揬揮揯揰揱揳揵揷揹揺揻揼揾搃搄搆",4,"損搎搑搒搕",5,"搝搟搢搣搤"],
["9380","搥搧搨搩搫搮",5,"搵",4,"搻搼搾摀摂摃摉摋",6,"摓摕摖摗摙",4,"摟",7,"摨摪摫摬摮",9,"摻",6,"撃撆撈",8,"撓撔撗撘撚撛撜撝撟",4,"撥撦撧撨撪撫撯撱撲撳撴撶撹撻撽撾撿擁擃擄擆",6,"擏擑擓擔擕擖擙據"],
["9440","擛擜擝擟擠擡擣擥擧",24,"攁",7,"攊",7,"攓",4,"攙",8],
["9480","攢攣攤攦",4,"攬攭攰攱攲攳攷攺攼攽敀",4,"敆敇敊敋敍敎敐敒敓敔敗敘敚敜敟敠敡敤敥敧敨敩敪敭敮敯敱敳敵敶數",14,"斈斉斊斍斎斏斒斔斕斖斘斚斝斞斠斢斣斦斨斪斬斮斱",7,"斺斻斾斿旀旂旇旈旉旊旍旐旑旓旔旕旘",7,"旡旣旤旪旫"],
["9540","旲旳旴旵旸旹旻",4,"昁昄昅昇昈昉昋昍昐昑昒昖昗昘昚昛昜昞昡昢昣昤昦昩昪昫昬昮昰昲昳昷",4,"昽昿晀時晄",6,"晍晎晐晑晘"],
["9580","晙晛晜晝晞晠晢晣晥晧晩",4,"晱晲晳晵晸晹晻晼晽晿暀暁暃暅暆暈暉暊暋暍暎暏暐暒暓暔暕暘",4,"暞",8,"暩",4,"暯",4,"暵暶暷暸暺暻暼暽暿",25,"曚曞",7,"曧曨曪",5,"曱曵曶書曺曻曽朁朂會"],
["9640","朄朅朆朇朌朎朏朑朒朓朖朘朙朚朜朞朠",5,"朧朩朮朰朲朳朶朷朸朹朻朼朾朿杁杄杅杇杊杋杍杒杔杕杗",4,"杝杢杣杤杦杧杫杬杮東杴杶"],
["9680","杸杹杺杻杽枀枂枃枅枆枈枊枌枍枎枏枑枒枓枔枖枙枛枟枠枡枤枦枩枬枮枱枲枴枹",7,"柂柅",9,"柕柖柗柛柟柡柣柤柦柧柨柪柫柭柮柲柵",7,"柾栁栂栃栄栆栍栐栒栔栕栘",4,"栞栟栠栢",6,"栫",6,"栴栵栶栺栻栿桇桋桍桏桒桖",5],
["9740","桜桝桞桟桪桬",7,"桵桸",8,"梂梄梇",7,"梐梑梒梔梕梖梘",9,"梣梤梥梩梪梫梬梮梱梲梴梶梷梸"],
["9780","梹",6,"棁棃",5,"棊棌棎棏棐棑棓棔棖棗棙棛",4,"棡棢棤",9,"棯棲棳棴棶棷棸棻棽棾棿椀椂椃椄椆",4,"椌椏椑椓",11,"椡椢椣椥",7,"椮椯椱椲椳椵椶椷椸椺椻椼椾楀楁楃",16,"楕楖楘楙楛楜楟"],
["9840","楡楢楤楥楧楨楩楪楬業楯楰楲",4,"楺楻楽楾楿榁榃榅榊榋榌榎",5,"榖榗榙榚榝",9,"榩榪榬榮榯榰榲榳榵榶榸榹榺榼榽"],
["9880","榾榿槀槂",7,"構槍槏槑槒槓槕",5,"槜槝槞槡",11,"槮槯槰槱槳",9,"槾樀",9,"樋",11,"標",5,"樠樢",5,"権樫樬樭樮樰樲樳樴樶",6,"樿",4,"橅橆橈",7,"橑",6,"橚"],
["9940","橜",4,"橢橣橤橦",10,"橲",6,"橺橻橽橾橿檁檂檃檅",8,"檏檒",4,"檘",7,"檡",5],
["9980","檧檨檪檭",114,"欥欦欨",6],
["9a40","欯欰欱欳欴欵欶欸欻欼欽欿歀歁歂歄歅歈歊歋歍",11,"歚",7,"歨歩歫",13,"歺歽歾歿殀殅殈"],
["9a80","殌殎殏殐殑殔殕殗殘殙殜",4,"殢",7,"殫",7,"殶殸",6,"毀毃毄毆",4,"毌毎毐毑毘毚毜",4,"毢",7,"毬毭毮毰毱毲毴毶毷毸毺毻毼毾",6,"氈",4,"氎氒気氜氝氞氠氣氥氫氬氭氱氳氶氷氹氺氻氼氾氿汃汄汅汈汋",4,"汑汒汓汖汘"],
["9b40","汙汚汢汣汥汦汧汫",4,"汱汳汵汷汸決汻汼汿沀沄沇沊沋沍沎沑沒沕沖沗沘沚沜沝沞沠沢沨沬沯沰沴沵沶沷沺泀況泂泃泆泇泈泋泍泎泏泑泒泘"],
["9b80","泙泚泜泝泟泤泦泧泩泬泭泲泴泹泿洀洂洃洅洆洈洉洊洍洏洐洑洓洔洕洖洘洜洝洟",5,"洦洨洩洬洭洯洰洴洶洷洸洺洿浀浂浄浉浌浐浕浖浗浘浛浝浟浡浢浤浥浧浨浫浬浭浰浱浲浳浵浶浹浺浻浽",4,"涃涄涆涇涊涋涍涏涐涒涖",4,"涜涢涥涬涭涰涱涳涴涶涷涹",5,"淁淂淃淈淉淊"],
["9c40","淍淎淏淐淒淓淔淕淗淚淛淜淟淢淣淥淧淨淩淪淭淯淰淲淴淵淶淸淺淽",7,"渆渇済渉渋渏渒渓渕渘渙減渜渞渟渢渦渧渨渪測渮渰渱渳渵"],
["9c80","渶渷渹渻",7,"湅",7,"湏湐湑湒湕湗湙湚湜湝湞湠",10,"湬湭湯",14,"満溁溂溄溇溈溊",4,"溑",6,"溙溚溛溝溞溠溡溣溤溦溨溩溫溬溭溮溰溳溵溸溹溼溾溿滀滃滄滅滆滈滉滊滌滍滎滐滒滖滘滙滛滜滝滣滧滪",5],
["9d40","滰滱滲滳滵滶滷滸滺",7,"漃漄漅漇漈漊",4,"漐漑漒漖",9,"漡漢漣漥漦漧漨漬漮漰漲漴漵漷",6,"漿潀潁潂"],
["9d80","潃潄潅潈潉潊潌潎",9,"潙潚潛潝潟潠潡潣潤潥潧",5,"潯潰潱潳潵潶潷潹潻潽",6,"澅澆澇澊澋澏",12,"澝澞澟澠澢",4,"澨",10,"澴澵澷澸澺",5,"濁濃",5,"濊",6,"濓",10,"濟濢濣濤濥"],
["9e40","濦",7,"濰",32,"瀒",7,"瀜",6,"瀤",6],
["9e80","瀫",9,"瀶瀷瀸瀺",17,"灍灎灐",13,"灟",11,"灮灱灲灳灴灷灹灺灻災炁炂炃炄炆炇炈炋炌炍炏炐炑炓炗炘炚炛炞",12,"炰炲炴炵炶為炾炿烄烅烆烇烉烋",12,"烚"],
["9f40","烜烝烞烠烡烢烣烥烪烮烰",6,"烸烺烻烼烾",10,"焋",4,"焑焒焔焗焛",10,"焧",7,"焲焳焴"],
["9f80","焵焷",13,"煆煇煈煉煋煍煏",12,"煝煟",4,"煥煩",4,"煯煰煱煴煵煶煷煹煻煼煾",5,"熅",4,"熋熌熍熎熐熑熒熓熕熖熗熚",4,"熡",6,"熩熪熫熭",5,"熴熶熷熸熺",8,"燄",9,"燏",4],
["a040","燖",9,"燡燢燣燤燦燨",5,"燯",9,"燺",11,"爇",19],
["a080","爛爜爞",9,"爩爫爭爮爯爲爳爴爺爼爾牀",6,"牉牊牋牎牏牐牑牓牔牕牗牘牚牜牞牠牣牤牥牨牪牫牬牭牰牱牳牴牶牷牸牻牼牽犂犃犅",4,"犌犎犐犑犓",11,"犠",11,"犮犱犲犳犵犺",6,"狅狆狇狉狊狋狌狏狑狓狔狕狖狘狚狛"],
["a1a1","　、。·ˉˇ¨〃々—～‖…‘’“”〔〕〈",7,"〖〗【】±×÷∶∧∨∑∏∪∩∈∷√⊥∥∠⌒⊙∫∮≡≌≈∽∝≠≮≯≤≥∞∵∴♂♀°′″℃＄¤￠￡‰§№☆★○●◎◇◆□■△▲※→←↑↓〓"],
["a2a1","ⅰ",9],
["a2b1","⒈",19,"⑴",19,"①",9],
["a2e5","㈠",9],
["a2f1","Ⅰ",11],
["a3a1","！＂＃￥％",88,"￣"],
["a4a1","ぁ",82],
["a5a1","ァ",85],
["a6a1","Α",16,"Σ",6],
["a6c1","α",16,"σ",6],
["a6e0","︵︶︹︺︿﹀︽︾﹁﹂﹃﹄"],
["a6ee","︻︼︷︸︱"],
["a6f4","︳︴"],
["a7a1","А",5,"ЁЖ",25],
["a7d1","а",5,"ёж",25],
["a840","ˊˋ˙–―‥‵℅℉↖↗↘↙∕∟∣≒≦≧⊿═",35,"▁",6],
["a880","█",7,"▓▔▕▼▽◢◣◤◥☉⊕〒〝〞"],
["a8a1","āáǎàēéěèīíǐìōóǒòūúǔùǖǘǚǜüêɑ"],
["a8bd","ńň"],
["a8c0","ɡ"],
["a8c5","ㄅ",36],
["a940","〡",8,"㊣㎎㎏㎜㎝㎞㎡㏄㏎㏑㏒㏕︰￢￤"],
["a959","℡㈱"],
["a95c","‐"],
["a960","ー゛゜ヽヾ〆ゝゞ﹉",9,"﹔﹕﹖﹗﹙",8],
["a980","﹢",4,"﹨﹩﹪﹫"],
["a996","〇"],
["a9a4","─",75],
["aa40","狜狝狟狢",5,"狪狫狵狶狹狽狾狿猀猂猄",5,"猋猌猍猏猐猑猒猔猘猙猚猟猠猣猤猦猧猨猭猯猰猲猳猵猶猺猻猼猽獀",8],
["aa80","獉獊獋獌獎獏獑獓獔獕獖獘",7,"獡",10,"獮獰獱"],
["ab40","獲",11,"獿",4,"玅玆玈玊玌玍玏玐玒玓玔玕玗玘玙玚玜玝玞玠玡玣",5,"玪玬玭玱玴玵玶玸玹玼玽玾玿珁珃",4],
["ab80","珋珌珎珒",6,"珚珛珜珝珟珡珢珣珤珦珨珪珫珬珮珯珰珱珳",4],
["ac40","珸",10,"琄琇琈琋琌琍琎琑",8,"琜",5,"琣琤琧琩琫琭琯琱琲琷",4,"琽琾琿瑀瑂",11],
["ac80","瑎",6,"瑖瑘瑝瑠",12,"瑮瑯瑱",4,"瑸瑹瑺"],
["ad40","瑻瑼瑽瑿璂璄璅璆璈璉璊璌璍璏璑",10,"璝璟",7,"璪",15,"璻",12],
["ad80","瓈",9,"瓓",8,"瓝瓟瓡瓥瓧",6,"瓰瓱瓲"],
["ae40","瓳瓵瓸",6,"甀甁甂甃甅",7,"甎甐甒甔甕甖甗甛甝甞甠",4,"甦甧甪甮甴甶甹甼甽甿畁畂畃畄畆畇畉畊畍畐畑畒畓畕畖畗畘"],
["ae80","畝",7,"畧畨畩畫",6,"畳畵當畷畺",4,"疀疁疂疄疅疇"],
["af40","疈疉疊疌疍疎疐疓疕疘疛疜疞疢疦",4,"疭疶疷疺疻疿痀痁痆痋痌痎痏痐痑痓痗痙痚痜痝痟痠痡痥痩痬痭痮痯痲痳痵痶痷痸痺痻痽痾瘂瘄瘆瘇"],
["af80","瘈瘉瘋瘍瘎瘏瘑瘒瘓瘔瘖瘚瘜瘝瘞瘡瘣瘧瘨瘬瘮瘯瘱瘲瘶瘷瘹瘺瘻瘽癁療癄"],
["b040","癅",6,"癎",5,"癕癗",4,"癝癟癠癡癢癤",6,"癬癭癮癰",7,"癹発發癿皀皁皃皅皉皊皌皍皏皐皒皔皕皗皘皚皛"],
["b080","皜",7,"皥",8,"皯皰皳皵",9,"盀盁盃啊阿埃挨哎唉哀皑癌蔼矮艾碍爱隘鞍氨安俺按暗岸胺案肮昂盎凹敖熬翱袄傲奥懊澳芭捌扒叭吧笆八疤巴拔跋靶把耙坝霸罢爸白柏百摆佰败拜稗斑班搬扳般颁板版扮拌伴瓣半办绊邦帮梆榜膀绑棒磅蚌镑傍谤苞胞包褒剥"],
["b140","盄盇盉盋盌盓盕盙盚盜盝盞盠",4,"盦",7,"盰盳盵盶盷盺盻盽盿眀眂眃眅眆眊県眎",10,"眛眜眝眞眡眣眤眥眧眪眫"],
["b180","眬眮眰",4,"眹眻眽眾眿睂睄睅睆睈",7,"睒",7,"睜薄雹保堡饱宝抱报暴豹鲍爆杯碑悲卑北辈背贝钡倍狈备惫焙被奔苯本笨崩绷甭泵蹦迸逼鼻比鄙笔彼碧蓖蔽毕毙毖币庇痹闭敝弊必辟壁臂避陛鞭边编贬扁便变卞辨辩辫遍标彪膘表鳖憋别瘪彬斌濒滨宾摈兵冰柄丙秉饼炳"],
["b240","睝睞睟睠睤睧睩睪睭",11,"睺睻睼瞁瞂瞃瞆",5,"瞏瞐瞓",11,"瞡瞣瞤瞦瞨瞫瞭瞮瞯瞱瞲瞴瞶",4],
["b280","瞼瞾矀",12,"矎",8,"矘矙矚矝",4,"矤病并玻菠播拨钵波博勃搏铂箔伯帛舶脖膊渤泊驳捕卜哺补埠不布步簿部怖擦猜裁材才财睬踩采彩菜蔡餐参蚕残惭惨灿苍舱仓沧藏操糙槽曹草厕策侧册测层蹭插叉茬茶查碴搽察岔差诧拆柴豺搀掺蝉馋谗缠铲产阐颤昌猖"],
["b340","矦矨矪矯矰矱矲矴矵矷矹矺矻矼砃",5,"砊砋砎砏砐砓砕砙砛砞砠砡砢砤砨砪砫砮砯砱砲砳砵砶砽砿硁硂硃硄硆硈硉硊硋硍硏硑硓硔硘硙硚"],
["b380","硛硜硞",11,"硯",7,"硸硹硺硻硽",6,"场尝常长偿肠厂敞畅唱倡超抄钞朝嘲潮巢吵炒车扯撤掣彻澈郴臣辰尘晨忱沉陈趁衬撑称城橙成呈乘程惩澄诚承逞骋秤吃痴持匙池迟弛驰耻齿侈尺赤翅斥炽充冲虫崇宠抽酬畴踌稠愁筹仇绸瞅丑臭初出橱厨躇锄雏滁除楚"],
["b440","碄碅碆碈碊碋碏碐碒碔碕碖碙碝碞碠碢碤碦碨",7,"碵碶碷碸確碻碼碽碿磀磂磃磄磆磇磈磌磍磎磏磑磒磓磖磗磘磚",9],
["b480","磤磥磦磧磩磪磫磭",4,"磳磵磶磸磹磻",5,"礂礃礄礆",6,"础储矗搐触处揣川穿椽传船喘串疮窗幢床闯创吹炊捶锤垂春椿醇唇淳纯蠢戳绰疵茨磁雌辞慈瓷词此刺赐次聪葱囱匆从丛凑粗醋簇促蹿篡窜摧崔催脆瘁粹淬翠村存寸磋撮搓措挫错搭达答瘩打大呆歹傣戴带殆代贷袋待逮"],
["b540","礍",5,"礔",9,"礟",4,"礥",14,"礵",4,"礽礿祂祃祄祅祇祊",8,"祔祕祘祙祡祣"],
["b580","祤祦祩祪祫祬祮祰",6,"祹祻",4,"禂禃禆禇禈禉禋禌禍禎禐禑禒怠耽担丹单郸掸胆旦氮但惮淡诞弹蛋当挡党荡档刀捣蹈倒岛祷导到稻悼道盗德得的蹬灯登等瞪凳邓堤低滴迪敌笛狄涤翟嫡抵底地蒂第帝弟递缔颠掂滇碘点典靛垫电佃甸店惦奠淀殿碉叼雕凋刁掉吊钓调跌爹碟蝶迭谍叠"],
["b640","禓",6,"禛",11,"禨",10,"禴",4,"禼禿秂秄秅秇秈秊秌秎秏秐秓秔秖秗秙",5,"秠秡秢秥秨秪"],
["b680","秬秮秱",6,"秹秺秼秾秿稁稄稅稇稈稉稊稌稏",4,"稕稖稘稙稛稜丁盯叮钉顶鼎锭定订丢东冬董懂动栋侗恫冻洞兜抖斗陡豆逗痘都督毒犊独读堵睹赌杜镀肚度渡妒端短锻段断缎堆兑队对墩吨蹲敦顿囤钝盾遁掇哆多夺垛躲朵跺舵剁惰堕蛾峨鹅俄额讹娥恶厄扼遏鄂饿恩而儿耳尔饵洱二"],
["b740","稝稟稡稢稤",14,"稴稵稶稸稺稾穀",5,"穇",9,"穒",4,"穘",16],
["b780","穩",6,"穱穲穳穵穻穼穽穾窂窅窇窉窊窋窌窎窏窐窓窔窙窚窛窞窡窢贰发罚筏伐乏阀法珐藩帆番翻樊矾钒繁凡烦反返范贩犯饭泛坊芳方肪房防妨仿访纺放菲非啡飞肥匪诽吠肺废沸费芬酚吩氛分纷坟焚汾粉奋份忿愤粪丰封枫蜂峰锋风疯烽逢冯缝讽奉凤佛否夫敷肤孵扶拂辐幅氟符伏俘服"],
["b840","窣窤窧窩窪窫窮",4,"窴",10,"竀",10,"竌",9,"竗竘竚竛竜竝竡竢竤竧",5,"竮竰竱竲竳"],
["b880","竴",4,"竻竼竾笀笁笂笅笇笉笌笍笎笐笒笓笖笗笘笚笜笝笟笡笢笣笧笩笭浮涪福袱弗甫抚辅俯釜斧脯腑府腐赴副覆赋复傅付阜父腹负富讣附妇缚咐噶嘎该改概钙盖溉干甘杆柑竿肝赶感秆敢赣冈刚钢缸肛纲岗港杠篙皋高膏羔糕搞镐稿告哥歌搁戈鸽胳疙割革葛格蛤阁隔铬个各给根跟耕更庚羹"],
["b940","笯笰笲笴笵笶笷笹笻笽笿",5,"筆筈筊筍筎筓筕筗筙筜筞筟筡筣",10,"筯筰筳筴筶筸筺筼筽筿箁箂箃箄箆",6,"箎箏"],
["b980","箑箒箓箖箘箙箚箛箞箟箠箣箤箥箮箯箰箲箳箵箶箷箹",7,"篂篃範埂耿梗工攻功恭龚供躬公宫弓巩汞拱贡共钩勾沟苟狗垢构购够辜菇咕箍估沽孤姑鼓古蛊骨谷股故顾固雇刮瓜剐寡挂褂乖拐怪棺关官冠观管馆罐惯灌贯光广逛瑰规圭硅归龟闺轨鬼诡癸桂柜跪贵刽辊滚棍锅郭国果裹过哈"],
["ba40","篅篈築篊篋篍篎篏篐篒篔",4,"篛篜篞篟篠篢篣篤篧篨篩篫篬篭篯篰篲",4,"篸篹篺篻篽篿",7,"簈簉簊簍簎簐",5,"簗簘簙"],
["ba80","簚",4,"簠",5,"簨簩簫",12,"簹",5,"籂骸孩海氦亥害骇酣憨邯韩含涵寒函喊罕翰撼捍旱憾悍焊汗汉夯杭航壕嚎豪毫郝好耗号浩呵喝荷菏核禾和何合盒貉阂河涸赫褐鹤贺嘿黑痕很狠恨哼亨横衡恒轰哄烘虹鸿洪宏弘红喉侯猴吼厚候后呼乎忽瑚壶葫胡蝴狐糊湖"],
["bb40","籃",9,"籎",36,"籵",5,"籾",9],
["bb80","粈粊",6,"粓粔粖粙粚粛粠粡粣粦粧粨粩粫粬粭粯粰粴",4,"粺粻弧虎唬护互沪户花哗华猾滑画划化话槐徊怀淮坏欢环桓还缓换患唤痪豢焕涣宦幻荒慌黄磺蝗簧皇凰惶煌晃幌恍谎灰挥辉徽恢蛔回毁悔慧卉惠晦贿秽会烩汇讳诲绘荤昏婚魂浑混豁活伙火获或惑霍货祸击圾基机畸稽积箕"],
["bc40","粿糀糂糃糄糆糉糋糎",6,"糘糚糛糝糞糡",6,"糩",5,"糰",7,"糹糺糼",13,"紋",5],
["bc80","紑",14,"紡紣紤紥紦紨紩紪紬紭紮細",6,"肌饥迹激讥鸡姬绩缉吉极棘辑籍集及急疾汲即嫉级挤几脊己蓟技冀季伎祭剂悸济寄寂计记既忌际妓继纪嘉枷夹佳家加荚颊贾甲钾假稼价架驾嫁歼监坚尖笺间煎兼肩艰奸缄茧检柬碱硷拣捡简俭剪减荐槛鉴践贱见键箭件"],
["bd40","紷",54,"絯",7],
["bd80","絸",32,"健舰剑饯渐溅涧建僵姜将浆江疆蒋桨奖讲匠酱降蕉椒礁焦胶交郊浇骄娇嚼搅铰矫侥脚狡角饺缴绞剿教酵轿较叫窖揭接皆秸街阶截劫节桔杰捷睫竭洁结解姐戒藉芥界借介疥诫届巾筋斤金今津襟紧锦仅谨进靳晋禁近烬浸"],
["be40","継",12,"綧",6,"綯",42],
["be80","線",32,"尽劲荆兢茎睛晶鲸京惊精粳经井警景颈静境敬镜径痉靖竟竞净炯窘揪究纠玖韭久灸九酒厩救旧臼舅咎就疚鞠拘狙疽居驹菊局咀矩举沮聚拒据巨具距踞锯俱句惧炬剧捐鹃娟倦眷卷绢撅攫抉掘倔爵觉决诀绝均菌钧军君峻"],
["bf40","緻",62],
["bf80","縺縼",4,"繂",4,"繈",21,"俊竣浚郡骏喀咖卡咯开揩楷凯慨刊堪勘坎砍看康慷糠扛抗亢炕考拷烤靠坷苛柯棵磕颗科壳咳可渴克刻客课肯啃垦恳坑吭空恐孔控抠口扣寇枯哭窟苦酷库裤夸垮挎跨胯块筷侩快宽款匡筐狂框矿眶旷况亏盔岿窥葵奎魁傀"],
["c040","繞",35,"纃",23,"纜纝纞"],
["c080","纮纴纻纼绖绤绬绹缊缐缞缷缹缻",6,"罃罆",9,"罒罓馈愧溃坤昆捆困括扩廓阔垃拉喇蜡腊辣啦莱来赖蓝婪栏拦篮阑兰澜谰揽览懒缆烂滥琅榔狼廊郎朗浪捞劳牢老佬姥酪烙涝勒乐雷镭蕾磊累儡垒擂肋类泪棱楞冷厘梨犁黎篱狸离漓理李里鲤礼莉荔吏栗丽厉励砾历利傈例俐"],
["c140","罖罙罛罜罝罞罠罣",4,"罫罬罭罯罰罳罵罶罷罸罺罻罼罽罿羀羂",7,"羋羍羏",4,"羕",4,"羛羜羠羢羣羥羦羨",6,"羱"],
["c180","羳",4,"羺羻羾翀翂翃翄翆翇翈翉翋翍翏",4,"翖翗翙",5,"翢翣痢立粒沥隶力璃哩俩联莲连镰廉怜涟帘敛脸链恋炼练粮凉梁粱良两辆量晾亮谅撩聊僚疗燎寥辽潦了撂镣廖料列裂烈劣猎琳林磷霖临邻鳞淋凛赁吝拎玲菱零龄铃伶羚凌灵陵岭领另令溜琉榴硫馏留刘瘤流柳六龙聋咙笼窿"],
["c240","翤翧翨翪翫翬翭翯翲翴",6,"翽翾翿耂耇耈耉耊耎耏耑耓耚耛耝耞耟耡耣耤耫",5,"耲耴耹耺耼耾聀聁聄聅聇聈聉聎聏聐聑聓聕聖聗"],
["c280","聙聛",13,"聫",5,"聲",11,"隆垄拢陇楼娄搂篓漏陋芦卢颅庐炉掳卤虏鲁麓碌露路赂鹿潞禄录陆戮驴吕铝侣旅履屡缕虑氯律率滤绿峦挛孪滦卵乱掠略抡轮伦仑沦纶论萝螺罗逻锣箩骡裸落洛骆络妈麻玛码蚂马骂嘛吗埋买麦卖迈脉瞒馒蛮满蔓曼慢漫"],
["c340","聾肁肂肅肈肊肍",5,"肔肕肗肙肞肣肦肧肨肬肰肳肵肶肸肹肻胅胇",4,"胏",6,"胘胟胠胢胣胦胮胵胷胹胻胾胿脀脁脃脄脅脇脈脋"],
["c380","脌脕脗脙脛脜脝脟",12,"脭脮脰脳脴脵脷脹",4,"脿谩芒茫盲氓忙莽猫茅锚毛矛铆卯茂冒帽貌贸么玫枚梅酶霉煤没眉媒镁每美昧寐妹媚门闷们萌蒙檬盟锰猛梦孟眯醚靡糜迷谜弥米秘觅泌蜜密幂棉眠绵冕免勉娩缅面苗描瞄藐秒渺庙妙蔑灭民抿皿敏悯闽明螟鸣铭名命谬摸"],
["c440","腀",5,"腇腉腍腎腏腒腖腗腘腛",4,"腡腢腣腤腦腨腪腫腬腯腲腳腵腶腷腸膁膃",4,"膉膋膌膍膎膐膒",5,"膙膚膞",4,"膤膥"],
["c480","膧膩膫",7,"膴",5,"膼膽膾膿臄臅臇臈臉臋臍",6,"摹蘑模膜磨摩魔抹末莫墨默沫漠寞陌谋牟某拇牡亩姆母墓暮幕募慕木目睦牧穆拿哪呐钠那娜纳氖乃奶耐奈南男难囊挠脑恼闹淖呢馁内嫩能妮霓倪泥尼拟你匿腻逆溺蔫拈年碾撵捻念娘酿鸟尿捏聂孽啮镊镍涅您柠狞凝宁"],
["c540","臔",14,"臤臥臦臨臩臫臮",4,"臵",5,"臽臿舃與",4,"舎舏舑舓舕",5,"舝舠舤舥舦舧舩舮舲舺舼舽舿"],
["c580","艀艁艂艃艅艆艈艊艌艍艎艐",7,"艙艛艜艝艞艠",7,"艩拧泞牛扭钮纽脓浓农弄奴努怒女暖虐疟挪懦糯诺哦欧鸥殴藕呕偶沤啪趴爬帕怕琶拍排牌徘湃派攀潘盘磐盼畔判叛乓庞旁耪胖抛咆刨炮袍跑泡呸胚培裴赔陪配佩沛喷盆砰抨烹澎彭蓬棚硼篷膨朋鹏捧碰坯砒霹批披劈琵毗"],
["c640","艪艫艬艭艱艵艶艷艸艻艼芀芁芃芅芆芇芉芌芐芓芔芕芖芚芛芞芠芢芣芧芲芵芶芺芻芼芿苀苂苃苅苆苉苐苖苙苚苝苢苧苨苩苪苬苭苮苰苲苳苵苶苸"],
["c680","苺苼",4,"茊茋茍茐茒茓茖茘茙茝",9,"茩茪茮茰茲茷茻茽啤脾疲皮匹痞僻屁譬篇偏片骗飘漂瓢票撇瞥拼频贫品聘乒坪苹萍平凭瓶评屏坡泼颇婆破魄迫粕剖扑铺仆莆葡菩蒲埔朴圃普浦谱曝瀑期欺栖戚妻七凄漆柒沏其棋奇歧畦崎脐齐旗祈祁骑起岂乞企启契砌器气迄弃汽泣讫掐"],
["c740","茾茿荁荂荄荅荈荊",4,"荓荕",4,"荝荢荰",6,"荹荺荾",6,"莇莈莊莋莌莍莏莐莑莔莕莖莗莙莚莝莟莡",6,"莬莭莮"],
["c780","莯莵莻莾莿菂菃菄菆菈菉菋菍菎菐菑菒菓菕菗菙菚菛菞菢菣菤菦菧菨菫菬菭恰洽牵扦钎铅千迁签仟谦乾黔钱钳前潜遣浅谴堑嵌欠歉枪呛腔羌墙蔷强抢橇锹敲悄桥瞧乔侨巧鞘撬翘峭俏窍切茄且怯窃钦侵亲秦琴勤芹擒禽寝沁青轻氢倾卿清擎晴氰情顷请庆琼穷秋丘邱球求囚酋泅趋区蛆曲躯屈驱渠"],
["c840","菮華菳",4,"菺菻菼菾菿萀萂萅萇萈萉萊萐萒",5,"萙萚萛萞",5,"萩",7,"萲",5,"萹萺萻萾",7,"葇葈葉"],
["c880","葊",6,"葒",4,"葘葝葞葟葠葢葤",4,"葪葮葯葰葲葴葷葹葻葼取娶龋趣去圈颧权醛泉全痊拳犬券劝缺炔瘸却鹊榷确雀裙群然燃冉染瓤壤攘嚷让饶扰绕惹热壬仁人忍韧任认刃妊纫扔仍日戎茸蓉荣融熔溶容绒冗揉柔肉茹蠕儒孺如辱乳汝入褥软阮蕊瑞锐闰润若弱撒洒萨腮鳃塞赛三叁"],
["c940","葽",4,"蒃蒄蒅蒆蒊蒍蒏",7,"蒘蒚蒛蒝蒞蒟蒠蒢",12,"蒰蒱蒳蒵蒶蒷蒻蒼蒾蓀蓂蓃蓅蓆蓇蓈蓋蓌蓎蓏蓒蓔蓕蓗"],
["c980","蓘",4,"蓞蓡蓢蓤蓧",4,"蓭蓮蓯蓱",10,"蓽蓾蔀蔁蔂伞散桑嗓丧搔骚扫嫂瑟色涩森僧莎砂杀刹沙纱傻啥煞筛晒珊苫杉山删煽衫闪陕擅赡膳善汕扇缮墒伤商赏晌上尚裳梢捎稍烧芍勺韶少哨邵绍奢赊蛇舌舍赦摄射慑涉社设砷申呻伸身深娠绅神沈审婶甚肾慎渗声生甥牲升绳"],
["ca40","蔃",8,"蔍蔎蔏蔐蔒蔔蔕蔖蔘蔙蔛蔜蔝蔞蔠蔢",8,"蔭",9,"蔾",4,"蕄蕅蕆蕇蕋",10],
["ca80","蕗蕘蕚蕛蕜蕝蕟",4,"蕥蕦蕧蕩",8,"蕳蕵蕶蕷蕸蕼蕽蕿薀薁省盛剩胜圣师失狮施湿诗尸虱十石拾时什食蚀实识史矢使屎驶始式示士世柿事拭誓逝势是嗜噬适仕侍释饰氏市恃室视试收手首守寿授售受瘦兽蔬枢梳殊抒输叔舒淑疏书赎孰熟薯暑曙署蜀黍鼠属术述树束戍竖墅庶数漱"],
["cb40","薂薃薆薈",6,"薐",10,"薝",6,"薥薦薧薩薫薬薭薱",5,"薸薺",6,"藂",6,"藊",4,"藑藒"],
["cb80","藔藖",5,"藝",6,"藥藦藧藨藪",14,"恕刷耍摔衰甩帅栓拴霜双爽谁水睡税吮瞬顺舜说硕朔烁斯撕嘶思私司丝死肆寺嗣四伺似饲巳松耸怂颂送宋讼诵搜艘擞嗽苏酥俗素速粟僳塑溯宿诉肃酸蒜算虽隋随绥髓碎岁穗遂隧祟孙损笋蓑梭唆缩琐索锁所塌他它她塔"],
["cc40","藹藺藼藽藾蘀",4,"蘆",10,"蘒蘓蘔蘕蘗",15,"蘨蘪",13,"蘹蘺蘻蘽蘾蘿虀"],
["cc80","虁",11,"虒虓處",4,"虛虜虝號虠虡虣",7,"獭挞蹋踏胎苔抬台泰酞太态汰坍摊贪瘫滩坛檀痰潭谭谈坦毯袒碳探叹炭汤塘搪堂棠膛唐糖倘躺淌趟烫掏涛滔绦萄桃逃淘陶讨套特藤腾疼誊梯剔踢锑提题蹄啼体替嚏惕涕剃屉天添填田甜恬舔腆挑条迢眺跳贴铁帖厅听烃"],
["cd40","虭虯虰虲",6,"蚃",6,"蚎",4,"蚔蚖",5,"蚞",4,"蚥蚦蚫蚭蚮蚲蚳蚷蚸蚹蚻",4,"蛁蛂蛃蛅蛈蛌蛍蛒蛓蛕蛖蛗蛚蛜"],
["cd80","蛝蛠蛡蛢蛣蛥蛦蛧蛨蛪蛫蛬蛯蛵蛶蛷蛺蛻蛼蛽蛿蜁蜄蜅蜆蜋蜌蜎蜏蜐蜑蜔蜖汀廷停亭庭挺艇通桐酮瞳同铜彤童桶捅筒统痛偷投头透凸秃突图徒途涂屠土吐兔湍团推颓腿蜕褪退吞屯臀拖托脱鸵陀驮驼椭妥拓唾挖哇蛙洼娃瓦袜歪外豌弯湾玩顽丸烷完碗挽晚皖惋宛婉万腕汪王亡枉网往旺望忘妄威"],
["ce40","蜙蜛蜝蜟蜠蜤蜦蜧蜨蜪蜫蜬蜭蜯蜰蜲蜳蜵蜶蜸蜹蜺蜼蜽蝀",6,"蝊蝋蝍蝏蝐蝑蝒蝔蝕蝖蝘蝚",5,"蝡蝢蝦",7,"蝯蝱蝲蝳蝵"],
["ce80","蝷蝸蝹蝺蝿螀螁螄螆螇螉螊螌螎",4,"螔螕螖螘",6,"螠",4,"巍微危韦违桅围唯惟为潍维苇萎委伟伪尾纬未蔚味畏胃喂魏位渭谓尉慰卫瘟温蚊文闻纹吻稳紊问嗡翁瓮挝蜗涡窝我斡卧握沃巫呜钨乌污诬屋无芜梧吾吴毋武五捂午舞伍侮坞戊雾晤物勿务悟误昔熙析西硒矽晰嘻吸锡牺"],
["cf40","螥螦螧螩螪螮螰螱螲螴螶螷螸螹螻螼螾螿蟁",4,"蟇蟈蟉蟌",4,"蟔",6,"蟜蟝蟞蟟蟡蟢蟣蟤蟦蟧蟨蟩蟫蟬蟭蟯",9],
["cf80","蟺蟻蟼蟽蟿蠀蠁蠂蠄",5,"蠋",7,"蠔蠗蠘蠙蠚蠜",4,"蠣稀息希悉膝夕惜熄烯溪汐犀檄袭席习媳喜铣洗系隙戏细瞎虾匣霞辖暇峡侠狭下厦夏吓掀锨先仙鲜纤咸贤衔舷闲涎弦嫌显险现献县腺馅羡宪陷限线相厢镶香箱襄湘乡翔祥详想响享项巷橡像向象萧硝霄削哮嚣销消宵淆晓"],
["d040","蠤",13,"蠳",5,"蠺蠻蠽蠾蠿衁衂衃衆",5,"衎",5,"衕衖衘衚",6,"衦衧衪衭衯衱衳衴衵衶衸衹衺"],
["d080","衻衼袀袃袆袇袉袊袌袎袏袐袑袓袔袕袗",4,"袝",4,"袣袥",5,"小孝校肖啸笑效楔些歇蝎鞋协挟携邪斜胁谐写械卸蟹懈泄泻谢屑薪芯锌欣辛新忻心信衅星腥猩惺兴刑型形邢行醒幸杏性姓兄凶胸匈汹雄熊休修羞朽嗅锈秀袖绣墟戌需虚嘘须徐许蓄酗叙旭序畜恤絮婿绪续轩喧宣悬旋玄"],
["d140","袬袮袯袰袲",4,"袸袹袺袻袽袾袿裀裃裄裇裈裊裋裌裍裏裐裑裓裖裗裚",4,"裠裡裦裧裩",6,"裲裵裶裷裺裻製裿褀褁褃",5],
["d180","褉褋",4,"褑褔",4,"褜",4,"褢褣褤褦褧褨褩褬褭褮褯褱褲褳褵褷选癣眩绚靴薛学穴雪血勋熏循旬询寻驯巡殉汛训讯逊迅压押鸦鸭呀丫芽牙蚜崖衙涯雅哑亚讶焉咽阉烟淹盐严研蜒岩延言颜阎炎沿奄掩眼衍演艳堰燕厌砚雁唁彦焰宴谚验殃央鸯秧杨扬佯疡羊洋阳氧仰痒养样漾邀腰妖瑶"],
["d240","褸",8,"襂襃襅",24,"襠",5,"襧",19,"襼"],
["d280","襽襾覀覂覄覅覇",26,"摇尧遥窑谣姚咬舀药要耀椰噎耶爷野冶也页掖业叶曳腋夜液一壹医揖铱依伊衣颐夷遗移仪胰疑沂宜姨彝椅蚁倚已乙矣以艺抑易邑屹亿役臆逸肄疫亦裔意毅忆义益溢诣议谊译异翼翌绎茵荫因殷音阴姻吟银淫寅饮尹引隐"],
["d340","覢",30,"觃觍觓觔觕觗觘觙觛觝觟觠觡觢觤觧觨觩觪觬觭觮觰觱觲觴",6],
["d380","觻",4,"訁",5,"計",21,"印英樱婴鹰应缨莹萤营荧蝇迎赢盈影颖硬映哟拥佣臃痈庸雍踊蛹咏泳涌永恿勇用幽优悠忧尤由邮铀犹油游酉有友右佑釉诱又幼迂淤于盂榆虞愚舆余俞逾鱼愉渝渔隅予娱雨与屿禹宇语羽玉域芋郁吁遇喻峪御愈欲狱育誉"],
["d440","訞",31,"訿",8,"詉",21],
["d480","詟",25,"詺",6,"浴寓裕预豫驭鸳渊冤元垣袁原援辕园员圆猿源缘远苑愿怨院曰约越跃钥岳粤月悦阅耘云郧匀陨允运蕴酝晕韵孕匝砸杂栽哉灾宰载再在咱攒暂赞赃脏葬遭糟凿藻枣早澡蚤躁噪造皂灶燥责择则泽贼怎增憎曾赠扎喳渣札轧"],
["d540","誁",7,"誋",7,"誔",46],
["d580","諃",32,"铡闸眨栅榨咋乍炸诈摘斋宅窄债寨瞻毡詹粘沾盏斩辗崭展蘸栈占战站湛绽樟章彰漳张掌涨杖丈帐账仗胀瘴障招昭找沼赵照罩兆肇召遮折哲蛰辙者锗蔗这浙珍斟真甄砧臻贞针侦枕疹诊震振镇阵蒸挣睁征狰争怔整拯正政"],
["d640","諤",34,"謈",27],
["d680","謤謥謧",30,"帧症郑证芝枝支吱蜘知肢脂汁之织职直植殖执值侄址指止趾只旨纸志挚掷至致置帜峙制智秩稚质炙痔滞治窒中盅忠钟衷终种肿重仲众舟周州洲诌粥轴肘帚咒皱宙昼骤珠株蛛朱猪诸诛逐竹烛煮拄瞩嘱主著柱助蛀贮铸筑"],
["d740","譆",31,"譧",4,"譭",25],
["d780","讇",24,"讬讱讻诇诐诪谉谞住注祝驻抓爪拽专砖转撰赚篆桩庄装妆撞壮状椎锥追赘坠缀谆准捉拙卓桌琢茁酌啄着灼浊兹咨资姿滋淄孜紫仔籽滓子自渍字鬃棕踪宗综总纵邹走奏揍租足卒族祖诅阻组钻纂嘴醉最罪尊遵昨左佐柞做作坐座"],
["d840","谸",8,"豂豃豄豅豈豊豋豍",7,"豖豗豘豙豛",5,"豣",6,"豬",6,"豴豵豶豷豻",6,"貃貄貆貇"],
["d880","貈貋貍",6,"貕貖貗貙",20,"亍丌兀丐廿卅丕亘丞鬲孬噩丨禺丿匕乇夭爻卮氐囟胤馗毓睾鼗丶亟鼐乜乩亓芈孛啬嘏仄厍厝厣厥厮靥赝匚叵匦匮匾赜卦卣刂刈刎刭刳刿剀剌剞剡剜蒯剽劂劁劐劓冂罔亻仃仉仂仨仡仫仞伛仳伢佤仵伥伧伉伫佞佧攸佚佝"],
["d940","貮",62],
["d980","賭",32,"佟佗伲伽佶佴侑侉侃侏佾佻侪佼侬侔俦俨俪俅俚俣俜俑俟俸倩偌俳倬倏倮倭俾倜倌倥倨偾偃偕偈偎偬偻傥傧傩傺僖儆僭僬僦僮儇儋仝氽佘佥俎龠汆籴兮巽黉馘冁夔勹匍訇匐凫夙兕亠兖亳衮袤亵脔裒禀嬴蠃羸冫冱冽冼"],
["da40","贎",14,"贠赑赒赗赟赥赨赩赪赬赮赯赱赲赸",8,"趂趃趆趇趈趉趌",4,"趒趓趕",9,"趠趡"],
["da80","趢趤",12,"趲趶趷趹趻趽跀跁跂跅跇跈跉跊跍跐跒跓跔凇冖冢冥讠讦讧讪讴讵讷诂诃诋诏诎诒诓诔诖诘诙诜诟诠诤诨诩诮诰诳诶诹诼诿谀谂谄谇谌谏谑谒谔谕谖谙谛谘谝谟谠谡谥谧谪谫谮谯谲谳谵谶卩卺阝阢阡阱阪阽阼陂陉陔陟陧陬陲陴隈隍隗隰邗邛邝邙邬邡邴邳邶邺"],
["db40","跕跘跙跜跠跡跢跥跦跧跩跭跮跰跱跲跴跶跼跾",6,"踆踇踈踋踍踎踐踑踒踓踕",7,"踠踡踤",4,"踫踭踰踲踳踴踶踷踸踻踼踾"],
["db80","踿蹃蹅蹆蹌",4,"蹓",5,"蹚",11,"蹧蹨蹪蹫蹮蹱邸邰郏郅邾郐郄郇郓郦郢郜郗郛郫郯郾鄄鄢鄞鄣鄱鄯鄹酃酆刍奂劢劬劭劾哿勐勖勰叟燮矍廴凵凼鬯厶弁畚巯坌垩垡塾墼壅壑圩圬圪圳圹圮圯坜圻坂坩垅坫垆坼坻坨坭坶坳垭垤垌垲埏垧垴垓垠埕埘埚埙埒垸埴埯埸埤埝"],
["dc40","蹳蹵蹷",4,"蹽蹾躀躂躃躄躆躈",6,"躑躒躓躕",6,"躝躟",11,"躭躮躰躱躳",6,"躻",7],
["dc80","軃",10,"軏",21,"堋堍埽埭堀堞堙塄堠塥塬墁墉墚墀馨鼙懿艹艽艿芏芊芨芄芎芑芗芙芫芸芾芰苈苊苣芘芷芮苋苌苁芩芴芡芪芟苄苎芤苡茉苷苤茏茇苜苴苒苘茌苻苓茑茚茆茔茕苠苕茜荑荛荜茈莒茼茴茱莛荞茯荏荇荃荟荀茗荠茭茺茳荦荥"],
["dd40","軥",62],
["dd80","輤",32,"荨茛荩荬荪荭荮莰荸莳莴莠莪莓莜莅荼莶莩荽莸荻莘莞莨莺莼菁萁菥菘堇萘萋菝菽菖萜萸萑萆菔菟萏萃菸菹菪菅菀萦菰菡葜葑葚葙葳蒇蒈葺蒉葸萼葆葩葶蒌蒎萱葭蓁蓍蓐蓦蒽蓓蓊蒿蒺蓠蒡蒹蒴蒗蓥蓣蔌甍蔸蓰蔹蔟蔺"],
["de40","轅",32,"轪辀辌辒辝辠辡辢辤辥辦辧辪辬辭辮辯農辳辴辵辷辸辺辻込辿迀迃迆"],
["de80","迉",4,"迏迒迖迗迚迠迡迣迧迬迯迱迲迴迵迶迺迻迼迾迿逇逈逌逎逓逕逘蕖蔻蓿蓼蕙蕈蕨蕤蕞蕺瞢蕃蕲蕻薤薨薇薏蕹薮薜薅薹薷薰藓藁藜藿蘧蘅蘩蘖蘼廾弈夼奁耷奕奚奘匏尢尥尬尴扌扪抟抻拊拚拗拮挢拶挹捋捃掭揶捱捺掎掴捭掬掊捩掮掼揲揸揠揿揄揞揎摒揆掾摅摁搋搛搠搌搦搡摞撄摭撖"],
["df40","這逜連逤逥逧",5,"逰",4,"逷逹逺逽逿遀遃遅遆遈",4,"過達違遖遙遚遜",5,"遤遦遧適遪遫遬遯",4,"遶",6,"遾邁"],
["df80","還邅邆邇邉邊邌",4,"邒邔邖邘邚邜邞邟邠邤邥邧邨邩邫邭邲邷邼邽邿郀摺撷撸撙撺擀擐擗擤擢攉攥攮弋忒甙弑卟叱叽叩叨叻吒吖吆呋呒呓呔呖呃吡呗呙吣吲咂咔呷呱呤咚咛咄呶呦咝哐咭哂咴哒咧咦哓哔呲咣哕咻咿哌哙哚哜咩咪咤哝哏哞唛哧唠哽唔哳唢唣唏唑唧唪啧喏喵啉啭啁啕唿啐唼"],
["e040","郂郃郆郈郉郋郌郍郒郔郕郖郘郙郚郞郟郠郣郤郥郩郪郬郮郰郱郲郳郵郶郷郹郺郻郼郿鄀鄁鄃鄅",19,"鄚鄛鄜"],
["e080","鄝鄟鄠鄡鄤",10,"鄰鄲",6,"鄺",8,"酄唷啖啵啶啷唳唰啜喋嗒喃喱喹喈喁喟啾嗖喑啻嗟喽喾喔喙嗪嗷嗉嘟嗑嗫嗬嗔嗦嗝嗄嗯嗥嗲嗳嗌嗍嗨嗵嗤辔嘞嘈嘌嘁嘤嘣嗾嘀嘧嘭噘嘹噗嘬噍噢噙噜噌噔嚆噤噱噫噻噼嚅嚓嚯囔囗囝囡囵囫囹囿圄圊圉圜帏帙帔帑帱帻帼"],
["e140","酅酇酈酑酓酔酕酖酘酙酛酜酟酠酦酧酨酫酭酳酺酻酼醀",4,"醆醈醊醎醏醓",6,"醜",5,"醤",5,"醫醬醰醱醲醳醶醷醸醹醻"],
["e180","醼",10,"釈釋釐釒",9,"針",8,"帷幄幔幛幞幡岌屺岍岐岖岈岘岙岑岚岜岵岢岽岬岫岱岣峁岷峄峒峤峋峥崂崃崧崦崮崤崞崆崛嵘崾崴崽嵬嵛嵯嵝嵫嵋嵊嵩嵴嶂嶙嶝豳嶷巅彳彷徂徇徉後徕徙徜徨徭徵徼衢彡犭犰犴犷犸狃狁狎狍狒狨狯狩狲狴狷猁狳猃狺"],
["e240","釦",62],
["e280","鈥",32,"狻猗猓猡猊猞猝猕猢猹猥猬猸猱獐獍獗獠獬獯獾舛夥飧夤夂饣饧",5,"饴饷饽馀馄馇馊馍馐馑馓馔馕庀庑庋庖庥庠庹庵庾庳赓廒廑廛廨廪膺忄忉忖忏怃忮怄忡忤忾怅怆忪忭忸怙怵怦怛怏怍怩怫怊怿怡恸恹恻恺恂"],
["e340","鉆",45,"鉵",16],
["e380","銆",7,"銏",24,"恪恽悖悚悭悝悃悒悌悛惬悻悱惝惘惆惚悴愠愦愕愣惴愀愎愫慊慵憬憔憧憷懔懵忝隳闩闫闱闳闵闶闼闾阃阄阆阈阊阋阌阍阏阒阕阖阗阙阚丬爿戕氵汔汜汊沣沅沐沔沌汨汩汴汶沆沩泐泔沭泷泸泱泗沲泠泖泺泫泮沱泓泯泾"],
["e440","銨",5,"銯",24,"鋉",31],
["e480","鋩",32,"洹洧洌浃浈洇洄洙洎洫浍洮洵洚浏浒浔洳涑浯涞涠浞涓涔浜浠浼浣渚淇淅淞渎涿淠渑淦淝淙渖涫渌涮渫湮湎湫溲湟溆湓湔渲渥湄滟溱溘滠漭滢溥溧溽溻溷滗溴滏溏滂溟潢潆潇漤漕滹漯漶潋潴漪漉漩澉澍澌潸潲潼潺濑"],
["e540","錊",51,"錿",10],
["e580","鍊",31,"鍫濉澧澹澶濂濡濮濞濠濯瀚瀣瀛瀹瀵灏灞宀宄宕宓宥宸甯骞搴寤寮褰寰蹇謇辶迓迕迥迮迤迩迦迳迨逅逄逋逦逑逍逖逡逵逶逭逯遄遑遒遐遨遘遢遛暹遴遽邂邈邃邋彐彗彖彘尻咫屐屙孱屣屦羼弪弩弭艴弼鬻屮妁妃妍妩妪妣"],
["e640","鍬",34,"鎐",27],
["e680","鎬",29,"鏋鏌鏍妗姊妫妞妤姒妲妯姗妾娅娆姝娈姣姘姹娌娉娲娴娑娣娓婀婧婊婕娼婢婵胬媪媛婷婺媾嫫媲嫒嫔媸嫠嫣嫱嫖嫦嫘嫜嬉嬗嬖嬲嬷孀尕尜孚孥孳孑孓孢驵驷驸驺驿驽骀骁骅骈骊骐骒骓骖骘骛骜骝骟骠骢骣骥骧纟纡纣纥纨纩"],
["e740","鏎",7,"鏗",54],
["e780","鐎",32,"纭纰纾绀绁绂绉绋绌绐绔绗绛绠绡绨绫绮绯绱绲缍绶绺绻绾缁缂缃缇缈缋缌缏缑缒缗缙缜缛缟缡",6,"缪缫缬缭缯",4,"缵幺畿巛甾邕玎玑玮玢玟珏珂珑玷玳珀珉珈珥珙顼琊珩珧珞玺珲琏琪瑛琦琥琨琰琮琬"],
["e840","鐯",14,"鐿",43,"鑬鑭鑮鑯"],
["e880","鑰",20,"钑钖钘铇铏铓铔铚铦铻锜锠琛琚瑁瑜瑗瑕瑙瑷瑭瑾璜璎璀璁璇璋璞璨璩璐璧瓒璺韪韫韬杌杓杞杈杩枥枇杪杳枘枧杵枨枞枭枋杷杼柰栉柘栊柩枰栌柙枵柚枳柝栀柃枸柢栎柁柽栲栳桠桡桎桢桄桤梃栝桕桦桁桧桀栾桊桉栩梵梏桴桷梓桫棂楮棼椟椠棹"],
["e940","锧锳锽镃镈镋镕镚镠镮镴镵長",7,"門",42],
["e980","閫",32,"椤棰椋椁楗棣椐楱椹楠楂楝榄楫榀榘楸椴槌榇榈槎榉楦楣楹榛榧榻榫榭槔榱槁槊槟榕槠榍槿樯槭樗樘橥槲橄樾檠橐橛樵檎橹樽樨橘橼檑檐檩檗檫猷獒殁殂殇殄殒殓殍殚殛殡殪轫轭轱轲轳轵轶轸轷轹轺轼轾辁辂辄辇辋"],
["ea40","闌",27,"闬闿阇阓阘阛阞阠阣",6,"阫阬阭阯阰阷阸阹阺阾陁陃陊陎陏陑陒陓陖陗"],
["ea80","陘陙陚陜陝陞陠陣陥陦陫陭",4,"陳陸",12,"隇隉隊辍辎辏辘辚軎戋戗戛戟戢戡戥戤戬臧瓯瓴瓿甏甑甓攴旮旯旰昊昙杲昃昕昀炅曷昝昴昱昶昵耆晟晔晁晏晖晡晗晷暄暌暧暝暾曛曜曦曩贲贳贶贻贽赀赅赆赈赉赇赍赕赙觇觊觋觌觎觏觐觑牮犟牝牦牯牾牿犄犋犍犏犒挈挲掰"],
["eb40","隌階隑隒隓隕隖隚際隝",9,"隨",7,"隱隲隴隵隷隸隺隻隿雂雃雈雊雋雐雑雓雔雖",9,"雡",6,"雫"],
["eb80","雬雭雮雰雱雲雴雵雸雺電雼雽雿霂霃霅霊霋霌霐霑霒霔霕霗",4,"霝霟霠搿擘耄毪毳毽毵毹氅氇氆氍氕氘氙氚氡氩氤氪氲攵敕敫牍牒牖爰虢刖肟肜肓肼朊肽肱肫肭肴肷胧胨胩胪胛胂胄胙胍胗朐胝胫胱胴胭脍脎胲胼朕脒豚脶脞脬脘脲腈腌腓腴腙腚腱腠腩腼腽腭腧塍媵膈膂膑滕膣膪臌朦臊膻"],
["ec40","霡",8,"霫霬霮霯霱霳",4,"霺霻霼霽霿",18,"靔靕靗靘靚靜靝靟靣靤靦靧靨靪",7],
["ec80","靲靵靷",4,"靽",7,"鞆",4,"鞌鞎鞏鞐鞓鞕鞖鞗鞙",4,"臁膦欤欷欹歃歆歙飑飒飓飕飙飚殳彀毂觳斐齑斓於旆旄旃旌旎旒旖炀炜炖炝炻烀炷炫炱烨烊焐焓焖焯焱煳煜煨煅煲煊煸煺熘熳熵熨熠燠燔燧燹爝爨灬焘煦熹戾戽扃扈扉礻祀祆祉祛祜祓祚祢祗祠祯祧祺禅禊禚禧禳忑忐"],
["ed40","鞞鞟鞡鞢鞤",6,"鞬鞮鞰鞱鞳鞵",46],
["ed80","韤韥韨韮",4,"韴韷",23,"怼恝恚恧恁恙恣悫愆愍慝憩憝懋懑戆肀聿沓泶淼矶矸砀砉砗砘砑斫砭砜砝砹砺砻砟砼砥砬砣砩硎硭硖硗砦硐硇硌硪碛碓碚碇碜碡碣碲碹碥磔磙磉磬磲礅磴礓礤礞礴龛黹黻黼盱眄眍盹眇眈眚眢眙眭眦眵眸睐睑睇睃睚睨"],
["ee40","頏",62],
["ee80","顎",32,"睢睥睿瞍睽瞀瞌瞑瞟瞠瞰瞵瞽町畀畎畋畈畛畲畹疃罘罡罟詈罨罴罱罹羁罾盍盥蠲钅钆钇钋钊钌钍钏钐钔钗钕钚钛钜钣钤钫钪钭钬钯钰钲钴钶",4,"钼钽钿铄铈",6,"铐铑铒铕铖铗铙铘铛铞铟铠铢铤铥铧铨铪"],
["ef40","顯",5,"颋颎颒颕颙颣風",37,"飏飐飔飖飗飛飜飝飠",4],
["ef80","飥飦飩",30,"铩铫铮铯铳铴铵铷铹铼铽铿锃锂锆锇锉锊锍锎锏锒",4,"锘锛锝锞锟锢锪锫锩锬锱锲锴锶锷锸锼锾锿镂锵镄镅镆镉镌镎镏镒镓镔镖镗镘镙镛镞镟镝镡镢镤",8,"镯镱镲镳锺矧矬雉秕秭秣秫稆嵇稃稂稞稔"],
["f040","餈",4,"餎餏餑",28,"餯",26],
["f080","饊",9,"饖",12,"饤饦饳饸饹饻饾馂馃馉稹稷穑黏馥穰皈皎皓皙皤瓞瓠甬鸠鸢鸨",4,"鸲鸱鸶鸸鸷鸹鸺鸾鹁鹂鹄鹆鹇鹈鹉鹋鹌鹎鹑鹕鹗鹚鹛鹜鹞鹣鹦",6,"鹱鹭鹳疒疔疖疠疝疬疣疳疴疸痄疱疰痃痂痖痍痣痨痦痤痫痧瘃痱痼痿瘐瘀瘅瘌瘗瘊瘥瘘瘕瘙"],
["f140","馌馎馚",10,"馦馧馩",47],
["f180","駙",32,"瘛瘼瘢瘠癀瘭瘰瘿瘵癃瘾瘳癍癞癔癜癖癫癯翊竦穸穹窀窆窈窕窦窠窬窨窭窳衤衩衲衽衿袂袢裆袷袼裉裢裎裣裥裱褚裼裨裾裰褡褙褓褛褊褴褫褶襁襦襻疋胥皲皴矜耒耔耖耜耠耢耥耦耧耩耨耱耋耵聃聆聍聒聩聱覃顸颀颃"],
["f240","駺",62],
["f280","騹",32,"颉颌颍颏颔颚颛颞颟颡颢颥颦虍虔虬虮虿虺虼虻蚨蚍蚋蚬蚝蚧蚣蚪蚓蚩蚶蛄蚵蛎蚰蚺蚱蚯蛉蛏蚴蛩蛱蛲蛭蛳蛐蜓蛞蛴蛟蛘蛑蜃蜇蛸蜈蜊蜍蜉蜣蜻蜞蜥蜮蜚蜾蝈蜴蜱蜩蜷蜿螂蜢蝽蝾蝻蝠蝰蝌蝮螋蝓蝣蝼蝤蝙蝥螓螯螨蟒"],
["f340","驚",17,"驲骃骉骍骎骔骕骙骦骩",6,"骲骳骴骵骹骻骽骾骿髃髄髆",4,"髍髎髏髐髒體髕髖髗髙髚髛髜"],
["f380","髝髞髠髢髣髤髥髧髨髩髪髬髮髰",8,"髺髼",6,"鬄鬅鬆蟆螈螅螭螗螃螫蟥螬螵螳蟋蟓螽蟑蟀蟊蟛蟪蟠蟮蠖蠓蟾蠊蠛蠡蠹蠼缶罂罄罅舐竺竽笈笃笄笕笊笫笏筇笸笪笙笮笱笠笥笤笳笾笞筘筚筅筵筌筝筠筮筻筢筲筱箐箦箧箸箬箝箨箅箪箜箢箫箴篑篁篌篝篚篥篦篪簌篾篼簏簖簋"],
["f440","鬇鬉",5,"鬐鬑鬒鬔",10,"鬠鬡鬢鬤",10,"鬰鬱鬳",7,"鬽鬾鬿魀魆魊魋魌魎魐魒魓魕",5],
["f480","魛",32,"簟簪簦簸籁籀臾舁舂舄臬衄舡舢舣舭舯舨舫舸舻舳舴舾艄艉艋艏艚艟艨衾袅袈裘裟襞羝羟羧羯羰羲籼敉粑粝粜粞粢粲粼粽糁糇糌糍糈糅糗糨艮暨羿翎翕翥翡翦翩翮翳糸絷綦綮繇纛麸麴赳趄趔趑趱赧赭豇豉酊酐酎酏酤"],
["f540","魼",62],
["f580","鮻",32,"酢酡酰酩酯酽酾酲酴酹醌醅醐醍醑醢醣醪醭醮醯醵醴醺豕鹾趸跫踅蹙蹩趵趿趼趺跄跖跗跚跞跎跏跛跆跬跷跸跣跹跻跤踉跽踔踝踟踬踮踣踯踺蹀踹踵踽踱蹉蹁蹂蹑蹒蹊蹰蹶蹼蹯蹴躅躏躔躐躜躞豸貂貊貅貘貔斛觖觞觚觜"],
["f640","鯜",62],
["f680","鰛",32,"觥觫觯訾謦靓雩雳雯霆霁霈霏霎霪霭霰霾龀龃龅",5,"龌黾鼋鼍隹隼隽雎雒瞿雠銎銮鋈錾鍪鏊鎏鐾鑫鱿鲂鲅鲆鲇鲈稣鲋鲎鲐鲑鲒鲔鲕鲚鲛鲞",5,"鲥",4,"鲫鲭鲮鲰",7,"鲺鲻鲼鲽鳄鳅鳆鳇鳊鳋"],
["f740","鰼",62],
["f780","鱻鱽鱾鲀鲃鲄鲉鲊鲌鲏鲓鲖鲗鲘鲙鲝鲪鲬鲯鲹鲾",4,"鳈鳉鳑鳒鳚鳛鳠鳡鳌",4,"鳓鳔鳕鳗鳘鳙鳜鳝鳟鳢靼鞅鞑鞒鞔鞯鞫鞣鞲鞴骱骰骷鹘骶骺骼髁髀髅髂髋髌髑魅魃魇魉魈魍魑飨餍餮饕饔髟髡髦髯髫髻髭髹鬈鬏鬓鬟鬣麽麾縻麂麇麈麋麒鏖麝麟黛黜黝黠黟黢黩黧黥黪黯鼢鼬鼯鼹鼷鼽鼾齄"],
["f840","鳣",62],
["f880","鴢",32],
["f940","鵃",62],
["f980","鶂",32],
["fa40","鶣",62],
["fa80","鷢",32],
["fb40","鸃",27,"鸤鸧鸮鸰鸴鸻鸼鹀鹍鹐鹒鹓鹔鹖鹙鹝鹟鹠鹡鹢鹥鹮鹯鹲鹴",9,"麀"],
["fb80","麁麃麄麅麆麉麊麌",5,"麔",8,"麞麠",5,"麧麨麩麪"],
["fc40","麫",8,"麵麶麷麹麺麼麿",4,"黅黆黇黈黊黋黌黐黒黓黕黖黗黙黚點黡黣黤黦黨黫黬黭黮黰",8,"黺黽黿",6],
["fc80","鼆",4,"鼌鼏鼑鼒鼔鼕鼖鼘鼚",5,"鼡鼣",8,"鼭鼮鼰鼱"],
["fd40","鼲",4,"鼸鼺鼼鼿",4,"齅",10,"齒",38],
["fd80","齹",5,"龁龂龍",11,"龜龝龞龡",4,"郎凉秊裏隣"],
["fe40","兀嗀﨎﨏﨑﨓﨔礼﨟蘒﨡﨣﨤﨧﨨﨩"]
]

},{}],99:[function(require,module,exports){
module.exports=[
["0","\u0000",127],
["8141","갂갃갅갆갋",4,"갘갞갟갡갢갣갥",6,"갮갲갳갴"],
["8161","갵갶갷갺갻갽갾갿걁",9,"걌걎",5,"걕"],
["8181","걖걗걙걚걛걝",18,"걲걳걵걶걹걻",4,"겂겇겈겍겎겏겑겒겓겕",6,"겞겢",5,"겫겭겮겱",6,"겺겾겿곀곂곃곅곆곇곉곊곋곍",7,"곖곘",7,"곢곣곥곦곩곫곭곮곲곴곷",4,"곾곿괁괂괃괅괇",4,"괎괐괒괓"],
["8241","괔괕괖괗괙괚괛괝괞괟괡",7,"괪괫괮",5],
["8261","괶괷괹괺괻괽",6,"굆굈굊",5,"굑굒굓굕굖굗"],
["8281","굙",7,"굢굤",7,"굮굯굱굲굷굸굹굺굾궀궃",4,"궊궋궍궎궏궑",10,"궞",5,"궥",17,"궸",7,"귂귃귅귆귇귉",6,"귒귔",7,"귝귞귟귡귢귣귥",18],
["8341","귺귻귽귾긂",5,"긊긌긎",5,"긕",7],
["8361","긝",18,"긲긳긵긶긹긻긼"],
["8381","긽긾긿깂깄깇깈깉깋깏깑깒깓깕깗",4,"깞깢깣깤깦깧깪깫깭깮깯깱",6,"깺깾",5,"꺆",5,"꺍",46,"꺿껁껂껃껅",6,"껎껒",5,"껚껛껝",8],
["8441","껦껧껩껪껬껮",5,"껵껶껷껹껺껻껽",8],
["8461","꼆꼉꼊꼋꼌꼎꼏꼑",18],
["8481","꼤",7,"꼮꼯꼱꼳꼵",6,"꼾꽀꽄꽅꽆꽇꽊",5,"꽑",10,"꽞",5,"꽦",18,"꽺",5,"꾁꾂꾃꾅꾆꾇꾉",6,"꾒꾓꾔꾖",5,"꾝",26,"꾺꾻꾽꾾"],
["8541","꾿꿁",5,"꿊꿌꿏",4,"꿕",6,"꿝",4],
["8561","꿢",5,"꿪",5,"꿲꿳꿵꿶꿷꿹",6,"뀂뀃"],
["8581","뀅",6,"뀍뀎뀏뀑뀒뀓뀕",6,"뀞",9,"뀩",26,"끆끇끉끋끍끏끐끑끒끖끘끚끛끜끞",29,"끾끿낁낂낃낅",6,"낎낐낒",5,"낛낝낞낣낤"],
["8641","낥낦낧낪낰낲낶낷낹낺낻낽",6,"냆냊",5,"냒"],
["8661","냓냕냖냗냙",6,"냡냢냣냤냦",10],
["8681","냱",22,"넊넍넎넏넑넔넕넖넗넚넞",4,"넦넧넩넪넫넭",6,"넶넺",5,"녂녃녅녆녇녉",6,"녒녓녖녗녙녚녛녝녞녟녡",22,"녺녻녽녾녿놁놃",4,"놊놌놎놏놐놑놕놖놗놙놚놛놝"],
["8741","놞",9,"놩",15],
["8761","놹",18,"뇍뇎뇏뇑뇒뇓뇕"],
["8781","뇖",5,"뇞뇠",7,"뇪뇫뇭뇮뇯뇱",7,"뇺뇼뇾",5,"눆눇눉눊눍",6,"눖눘눚",5,"눡",18,"눵",6,"눽",26,"뉙뉚뉛뉝뉞뉟뉡",6,"뉪",4],
["8841","뉯",4,"뉶",5,"뉽",6,"늆늇늈늊",4],
["8861","늏늒늓늕늖늗늛",4,"늢늤늧늨늩늫늭늮늯늱늲늳늵늶늷"],
["8881","늸",15,"닊닋닍닎닏닑닓",4,"닚닜닞닟닠닡닣닧닩닪닰닱닲닶닼닽닾댂댃댅댆댇댉",6,"댒댖",5,"댝",54,"덗덙덚덝덠덡덢덣"],
["8941","덦덨덪덬덭덯덲덳덵덶덷덹",6,"뎂뎆",5,"뎍"],
["8961","뎎뎏뎑뎒뎓뎕",10,"뎢",5,"뎩뎪뎫뎭"],
["8981","뎮",21,"돆돇돉돊돍돏돑돒돓돖돘돚돜돞돟돡돢돣돥돦돧돩",18,"돽",18,"됑",6,"됙됚됛됝됞됟됡",6,"됪됬",7,"됵",15],
["8a41","둅",10,"둒둓둕둖둗둙",6,"둢둤둦"],
["8a61","둧",4,"둭",18,"뒁뒂"],
["8a81","뒃",4,"뒉",19,"뒞",5,"뒥뒦뒧뒩뒪뒫뒭",7,"뒶뒸뒺",5,"듁듂듃듅듆듇듉",6,"듑듒듓듔듖",5,"듞듟듡듢듥듧",4,"듮듰듲",5,"듹",26,"딖딗딙딚딝"],
["8b41","딞",5,"딦딫",4,"딲딳딵딶딷딹",6,"땂땆"],
["8b61","땇땈땉땊땎땏땑땒땓땕",6,"땞땢",8],
["8b81","땫",52,"떢떣떥떦떧떩떬떭떮떯떲떶",4,"떾떿뗁뗂뗃뗅",6,"뗎뗒",5,"뗙",18,"뗭",18],
["8c41","똀",15,"똒똓똕똖똗똙",4],
["8c61","똞",6,"똦",5,"똭",6,"똵",5],
["8c81","똻",12,"뙉",26,"뙥뙦뙧뙩",50,"뚞뚟뚡뚢뚣뚥",5,"뚭뚮뚯뚰뚲",16],
["8d41","뛃",16,"뛕",8],
["8d61","뛞",17,"뛱뛲뛳뛵뛶뛷뛹뛺"],
["8d81","뛻",4,"뜂뜃뜄뜆",33,"뜪뜫뜭뜮뜱",6,"뜺뜼",7,"띅띆띇띉띊띋띍",6,"띖",9,"띡띢띣띥띦띧띩",6,"띲띴띶",5,"띾띿랁랂랃랅",6,"랎랓랔랕랚랛랝랞"],
["8e41","랟랡",6,"랪랮",5,"랶랷랹",8],
["8e61","럂",4,"럈럊",19],
["8e81","럞",13,"럮럯럱럲럳럵",6,"럾렂",4,"렊렋렍렎렏렑",6,"렚렜렞",5,"렦렧렩렪렫렭",6,"렶렺",5,"롁롂롃롅",11,"롒롔",7,"롞롟롡롢롣롥",6,"롮롰롲",5,"롹롺롻롽",7],
["8f41","뢅",7,"뢎",17],
["8f61","뢠",7,"뢩",6,"뢱뢲뢳뢵뢶뢷뢹",4],
["8f81","뢾뢿룂룄룆",5,"룍룎룏룑룒룓룕",7,"룞룠룢",5,"룪룫룭룮룯룱",6,"룺룼룾",5,"뤅",18,"뤙",6,"뤡",26,"뤾뤿륁륂륃륅",6,"륍륎륐륒",5],
["9041","륚륛륝륞륟륡",6,"륪륬륮",5,"륶륷륹륺륻륽"],
["9061","륾",5,"릆릈릋릌릏",15],
["9081","릟",12,"릮릯릱릲릳릵",6,"릾맀맂",5,"맊맋맍맓",4,"맚맜맟맠맢맦맧맩맪맫맭",6,"맶맻",4,"먂",5,"먉",11,"먖",33,"먺먻먽먾먿멁멃멄멅멆"],
["9141","멇멊멌멏멐멑멒멖멗멙멚멛멝",6,"멦멪",5],
["9161","멲멳멵멶멷멹",9,"몆몈몉몊몋몍",5],
["9181","몓",20,"몪몭몮몯몱몳",4,"몺몼몾",5,"뫅뫆뫇뫉",14,"뫚",33,"뫽뫾뫿묁묂묃묅",7,"묎묐묒",5,"묙묚묛묝묞묟묡",6],
["9241","묨묪묬",7,"묷묹묺묿",4,"뭆뭈뭊뭋뭌뭎뭑뭒"],
["9261","뭓뭕뭖뭗뭙",7,"뭢뭤",7,"뭭",4],
["9281","뭲",21,"뮉뮊뮋뮍뮎뮏뮑",18,"뮥뮦뮧뮩뮪뮫뮭",6,"뮵뮶뮸",7,"믁믂믃믅믆믇믉",6,"믑믒믔",35,"믺믻믽믾밁"],
["9341","밃",4,"밊밎밐밒밓밙밚밠밡밢밣밦밨밪밫밬밮밯밲밳밵"],
["9361","밶밷밹",6,"뱂뱆뱇뱈뱊뱋뱎뱏뱑",8],
["9381","뱚뱛뱜뱞",37,"벆벇벉벊벍벏",4,"벖벘벛",4,"벢벣벥벦벩",6,"벲벶",5,"벾벿볁볂볃볅",7,"볎볒볓볔볖볗볙볚볛볝",22,"볷볹볺볻볽"],
["9441","볾",5,"봆봈봊",5,"봑봒봓봕",8],
["9461","봞",5,"봥",6,"봭",12],
["9481","봺",5,"뵁",6,"뵊뵋뵍뵎뵏뵑",6,"뵚",9,"뵥뵦뵧뵩",22,"붂붃붅붆붋",4,"붒붔붖붗붘붛붝",6,"붥",10,"붱",6,"붹",24],
["9541","뷒뷓뷖뷗뷙뷚뷛뷝",11,"뷪",5,"뷱"],
["9561","뷲뷳뷵뷶뷷뷹",6,"븁븂븄븆",5,"븎븏븑븒븓"],
["9581","븕",6,"븞븠",35,"빆빇빉빊빋빍빏",4,"빖빘빜빝빞빟빢빣빥빦빧빩빫",4,"빲빶",4,"빾빿뺁뺂뺃뺅",6,"뺎뺒",5,"뺚",13,"뺩",14],
["9641","뺸",23,"뻒뻓"],
["9661","뻕뻖뻙",6,"뻡뻢뻦",5,"뻭",8],
["9681","뻶",10,"뼂",5,"뼊",13,"뼚뼞",33,"뽂뽃뽅뽆뽇뽉",6,"뽒뽓뽔뽖",44],
["9741","뾃",16,"뾕",8],
["9761","뾞",17,"뾱",7],
["9781","뾹",11,"뿆",5,"뿎뿏뿑뿒뿓뿕",6,"뿝뿞뿠뿢",89,"쀽쀾쀿"],
["9841","쁀",16,"쁒",5,"쁙쁚쁛"],
["9861","쁝쁞쁟쁡",6,"쁪",15],
["9881","쁺",21,"삒삓삕삖삗삙",6,"삢삤삦",5,"삮삱삲삷",4,"삾샂샃샄샆샇샊샋샍샎샏샑",6,"샚샞",5,"샦샧샩샪샫샭",6,"샶샸샺",5,"섁섂섃섅섆섇섉",6,"섑섒섓섔섖",5,"섡섢섥섨섩섪섫섮"],
["9941","섲섳섴섵섷섺섻섽섾섿셁",6,"셊셎",5,"셖셗"],
["9961","셙셚셛셝",6,"셦셪",5,"셱셲셳셵셶셷셹셺셻"],
["9981","셼",8,"솆",5,"솏솑솒솓솕솗",4,"솞솠솢솣솤솦솧솪솫솭솮솯솱",11,"솾",5,"쇅쇆쇇쇉쇊쇋쇍",6,"쇕쇖쇙",6,"쇡쇢쇣쇥쇦쇧쇩",6,"쇲쇴",7,"쇾쇿숁숂숃숅",6,"숎숐숒",5,"숚숛숝숞숡숢숣"],
["9a41","숤숥숦숧숪숬숮숰숳숵",16],
["9a61","쉆쉇쉉",6,"쉒쉓쉕쉖쉗쉙",6,"쉡쉢쉣쉤쉦"],
["9a81","쉧",4,"쉮쉯쉱쉲쉳쉵",6,"쉾슀슂",5,"슊",5,"슑",6,"슙슚슜슞",5,"슦슧슩슪슫슮",5,"슶슸슺",33,"싞싟싡싢싥",5,"싮싰싲싳싴싵싷싺싽싾싿쌁",6,"쌊쌋쌎쌏"],
["9b41","쌐쌑쌒쌖쌗쌙쌚쌛쌝",6,"쌦쌧쌪",8],
["9b61","쌳",17,"썆",7],
["9b81","썎",25,"썪썫썭썮썯썱썳",4,"썺썻썾",5,"쎅쎆쎇쎉쎊쎋쎍",50,"쏁",22,"쏚"],
["9c41","쏛쏝쏞쏡쏣",4,"쏪쏫쏬쏮",5,"쏶쏷쏹",5],
["9c61","쏿",8,"쐉",6,"쐑",9],
["9c81","쐛",8,"쐥",6,"쐭쐮쐯쐱쐲쐳쐵",6,"쐾",9,"쑉",26,"쑦쑧쑩쑪쑫쑭",6,"쑶쑷쑸쑺",5,"쒁",18,"쒕",6,"쒝",12],
["9d41","쒪",13,"쒹쒺쒻쒽",8],
["9d61","쓆",25],
["9d81","쓠",8,"쓪",5,"쓲쓳쓵쓶쓷쓹쓻쓼쓽쓾씂",9,"씍씎씏씑씒씓씕",6,"씝",10,"씪씫씭씮씯씱",6,"씺씼씾",5,"앆앇앋앏앐앑앒앖앚앛앜앟앢앣앥앦앧앩",6,"앲앶",5,"앾앿얁얂얃얅얆얈얉얊얋얎얐얒얓얔"],
["9e41","얖얙얚얛얝얞얟얡",7,"얪",9,"얶"],
["9e61","얷얺얿",4,"엋엍엏엒엓엕엖엗엙",6,"엢엤엦엧"],
["9e81","엨엩엪엫엯엱엲엳엵엸엹엺엻옂옃옄옉옊옋옍옎옏옑",6,"옚옝",6,"옦옧옩옪옫옯옱옲옶옸옺옼옽옾옿왂왃왅왆왇왉",6,"왒왖",5,"왞왟왡",10,"왭왮왰왲",5,"왺왻왽왾왿욁",6,"욊욌욎",5,"욖욗욙욚욛욝",6,"욦"],
["9f41","욨욪",5,"욲욳욵욶욷욻",4,"웂웄웆",5,"웎"],
["9f61","웏웑웒웓웕",6,"웞웟웢",5,"웪웫웭웮웯웱웲"],
["9f81","웳",4,"웺웻웼웾",5,"윆윇윉윊윋윍",6,"윖윘윚",5,"윢윣윥윦윧윩",6,"윲윴윶윸윹윺윻윾윿읁읂읃읅",4,"읋읎읐읙읚읛읝읞읟읡",6,"읩읪읬",7,"읶읷읹읺읻읿잀잁잂잆잋잌잍잏잒잓잕잙잛",4,"잢잧",4,"잮잯잱잲잳잵잶잷"],
["a041","잸잹잺잻잾쟂",5,"쟊쟋쟍쟏쟑",6,"쟙쟚쟛쟜"],
["a061","쟞",5,"쟥쟦쟧쟩쟪쟫쟭",13],
["a081","쟻",4,"젂젃젅젆젇젉젋",4,"젒젔젗",4,"젞젟젡젢젣젥",6,"젮젰젲",5,"젹젺젻젽젾젿졁",6,"졊졋졎",5,"졕",26,"졲졳졵졶졷졹졻",4,"좂좄좈좉좊좎",5,"좕",7,"좞좠좢좣좤"],
["a141","좥좦좧좩",18,"좾좿죀죁"],
["a161","죂죃죅죆죇죉죊죋죍",6,"죖죘죚",5,"죢죣죥"],
["a181","죦",14,"죶",5,"죾죿줁줂줃줇",4,"줎　、。·‥…¨〃­―∥＼∼‘’“”〔〕〈",9,"±×÷≠≤≥∞∴°′″℃Å￠￡￥♂♀∠⊥⌒∂∇≡≒§※☆★○●◎◇◆□■△▲▽▼→←↑↓↔〓≪≫√∽∝∵∫∬∈∋⊆⊇⊂⊃∪∩∧∨￢"],
["a241","줐줒",5,"줙",18],
["a261","줭",6,"줵",18],
["a281","쥈",7,"쥒쥓쥕쥖쥗쥙",6,"쥢쥤",7,"쥭쥮쥯⇒⇔∀∃´～ˇ˘˝˚˙¸˛¡¿ː∮∑∏¤℉‰◁◀▷▶♤♠♡♥♧♣⊙◈▣◐◑▒▤▥▨▧▦▩♨☏☎☜☞¶†‡↕↗↙↖↘♭♩♪♬㉿㈜№㏇™㏂㏘℡€®"],
["a341","쥱쥲쥳쥵",6,"쥽",10,"즊즋즍즎즏"],
["a361","즑",6,"즚즜즞",16],
["a381","즯",16,"짂짃짅짆짉짋",4,"짒짔짗짘짛！",58,"￦］",32,"￣"],
["a441","짞짟짡짣짥짦짨짩짪짫짮짲",5,"짺짻짽짾짿쨁쨂쨃쨄"],
["a461","쨅쨆쨇쨊쨎",5,"쨕쨖쨗쨙",12],
["a481","쨦쨧쨨쨪",28,"ㄱ",93],
["a541","쩇",4,"쩎쩏쩑쩒쩓쩕",6,"쩞쩢",5,"쩩쩪"],
["a561","쩫",17,"쩾",5,"쪅쪆"],
["a581","쪇",16,"쪙",14,"ⅰ",9],
["a5b0","Ⅰ",9],
["a5c1","Α",16,"Σ",6],
["a5e1","α",16,"σ",6],
["a641","쪨",19,"쪾쪿쫁쫂쫃쫅"],
["a661","쫆",5,"쫎쫐쫒쫔쫕쫖쫗쫚",5,"쫡",6],
["a681","쫨쫩쫪쫫쫭",6,"쫵",18,"쬉쬊─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂┒┑┚┙┖┕┎┍┞┟┡┢┦┧┩┪┭┮┱┲┵┶┹┺┽┾╀╁╃",7],
["a741","쬋",4,"쬑쬒쬓쬕쬖쬗쬙",6,"쬢",7],
["a761","쬪",22,"쭂쭃쭄"],
["a781","쭅쭆쭇쭊쭋쭍쭎쭏쭑",6,"쭚쭛쭜쭞",5,"쭥",7,"㎕㎖㎗ℓ㎘㏄㎣㎤㎥㎦㎙",9,"㏊㎍㎎㎏㏏㎈㎉㏈㎧㎨㎰",9,"㎀",4,"㎺",5,"㎐",4,"Ω㏀㏁㎊㎋㎌㏖㏅㎭㎮㎯㏛㎩㎪㎫㎬㏝㏐㏓㏃㏉㏜㏆"],
["a841","쭭",10,"쭺",14],
["a861","쮉",18,"쮝",6],
["a881","쮤",19,"쮹",11,"ÆÐªĦ"],
["a8a6","Ĳ"],
["a8a8","ĿŁØŒºÞŦŊ"],
["a8b1","㉠",27,"ⓐ",25,"①",14,"½⅓⅔¼¾⅛⅜⅝⅞"],
["a941","쯅",14,"쯕",10],
["a961","쯠쯡쯢쯣쯥쯦쯨쯪",18],
["a981","쯽",14,"찎찏찑찒찓찕",6,"찞찟찠찣찤æđðħıĳĸŀłøœßþŧŋŉ㈀",27,"⒜",25,"⑴",14,"¹²³⁴ⁿ₁₂₃₄"],
["aa41","찥찦찪찫찭찯찱",6,"찺찿",4,"챆챇챉챊챋챍챎"],
["aa61","챏",4,"챖챚",5,"챡챢챣챥챧챩",6,"챱챲"],
["aa81","챳챴챶",29,"ぁ",82],
["ab41","첔첕첖첗첚첛첝첞첟첡",6,"첪첮",5,"첶첷첹"],
["ab61","첺첻첽",6,"쳆쳈쳊",5,"쳑쳒쳓쳕",5],
["ab81","쳛",8,"쳥",6,"쳭쳮쳯쳱",12,"ァ",85],
["ac41","쳾쳿촀촂",5,"촊촋촍촎촏촑",6,"촚촜촞촟촠"],
["ac61","촡촢촣촥촦촧촩촪촫촭",11,"촺",4],
["ac81","촿",28,"쵝쵞쵟А",5,"ЁЖ",25],
["acd1","а",5,"ёж",25],
["ad41","쵡쵢쵣쵥",6,"쵮쵰쵲",5,"쵹",7],
["ad61","춁",6,"춉",10,"춖춗춙춚춛춝춞춟"],
["ad81","춠춡춢춣춦춨춪",5,"춱",18,"췅"],
["ae41","췆",5,"췍췎췏췑",16],
["ae61","췢",5,"췩췪췫췭췮췯췱",6,"췺췼췾",4],
["ae81","츃츅츆츇츉츊츋츍",6,"츕츖츗츘츚",5,"츢츣츥츦츧츩츪츫"],
["af41","츬츭츮츯츲츴츶",19],
["af61","칊",13,"칚칛칝칞칢",5,"칪칬"],
["af81","칮",5,"칶칷칹칺칻칽",6,"캆캈캊",5,"캒캓캕캖캗캙"],
["b041","캚",5,"캢캦",5,"캮",12],
["b061","캻",5,"컂",19],
["b081","컖",13,"컦컧컩컪컭",6,"컶컺",5,"가각간갇갈갉갊감",7,"같",4,"갠갤갬갭갯갰갱갸갹갼걀걋걍걔걘걜거걱건걷걸걺검겁것겄겅겆겉겊겋게겐겔겜겝겟겠겡겨격겪견겯결겸겹겻겼경곁계곈곌곕곗고곡곤곧골곪곬곯곰곱곳공곶과곽관괄괆"],
["b141","켂켃켅켆켇켉",6,"켒켔켖",5,"켝켞켟켡켢켣"],
["b161","켥",6,"켮켲",5,"켹",11],
["b181","콅",14,"콖콗콙콚콛콝",6,"콦콨콪콫콬괌괍괏광괘괜괠괩괬괭괴괵괸괼굄굅굇굉교굔굘굡굣구국군굳굴굵굶굻굼굽굿궁궂궈궉권궐궜궝궤궷귀귁귄귈귐귑귓규균귤그극근귿글긁금급긋긍긔기긱긴긷길긺김깁깃깅깆깊까깍깎깐깔깖깜깝깟깠깡깥깨깩깬깰깸"],
["b241","콭콮콯콲콳콵콶콷콹",6,"쾁쾂쾃쾄쾆",5,"쾍"],
["b261","쾎",18,"쾢",5,"쾩"],
["b281","쾪",5,"쾱",18,"쿅",6,"깹깻깼깽꺄꺅꺌꺼꺽꺾껀껄껌껍껏껐껑께껙껜껨껫껭껴껸껼꼇꼈꼍꼐꼬꼭꼰꼲꼴꼼꼽꼿꽁꽂꽃꽈꽉꽐꽜꽝꽤꽥꽹꾀꾄꾈꾐꾑꾕꾜꾸꾹꾼꿀꿇꿈꿉꿋꿍꿎꿔꿜꿨꿩꿰꿱꿴꿸뀀뀁뀄뀌뀐뀔뀜뀝뀨끄끅끈끊끌끎끓끔끕끗끙"],
["b341","쿌",19,"쿢쿣쿥쿦쿧쿩"],
["b361","쿪",5,"쿲쿴쿶",5,"쿽쿾쿿퀁퀂퀃퀅",5],
["b381","퀋",5,"퀒",5,"퀙",19,"끝끼끽낀낄낌낍낏낑나낙낚난낟날낡낢남납낫",4,"낱낳내낵낸낼냄냅냇냈냉냐냑냔냘냠냥너넉넋넌널넒넓넘넙넛넜넝넣네넥넨넬넴넵넷넸넹녀녁년녈념녑녔녕녘녜녠노녹논놀놂놈놉놋농높놓놔놘놜놨뇌뇐뇔뇜뇝"],
["b441","퀮",5,"퀶퀷퀹퀺퀻퀽",6,"큆큈큊",5],
["b461","큑큒큓큕큖큗큙",6,"큡",10,"큮큯"],
["b481","큱큲큳큵",6,"큾큿킀킂",18,"뇟뇨뇩뇬뇰뇹뇻뇽누눅눈눋눌눔눕눗눙눠눴눼뉘뉜뉠뉨뉩뉴뉵뉼늄늅늉느늑는늘늙늚늠늡늣능늦늪늬늰늴니닉닌닐닒님닙닛닝닢다닥닦단닫",4,"닳담답닷",4,"닿대댁댄댈댐댑댓댔댕댜더덕덖던덛덜덞덟덤덥"],
["b541","킕",14,"킦킧킩킪킫킭",5],
["b561","킳킶킸킺",5,"탂탃탅탆탇탊",5,"탒탖",4],
["b581","탛탞탟탡탢탣탥",6,"탮탲",5,"탹",11,"덧덩덫덮데덱덴델뎀뎁뎃뎄뎅뎌뎐뎔뎠뎡뎨뎬도독돈돋돌돎돐돔돕돗동돛돝돠돤돨돼됐되된될됨됩됫됴두둑둔둘둠둡둣둥둬뒀뒈뒝뒤뒨뒬뒵뒷뒹듀듄듈듐듕드득든듣들듦듬듭듯등듸디딕딘딛딜딤딥딧딨딩딪따딱딴딸"],
["b641","턅",7,"턎",17],
["b661","턠",15,"턲턳턵턶턷턹턻턼턽턾"],
["b681","턿텂텆",5,"텎텏텑텒텓텕",6,"텞텠텢",5,"텩텪텫텭땀땁땃땄땅땋때땍땐땔땜땝땟땠땡떠떡떤떨떪떫떰떱떳떴떵떻떼떽뗀뗄뗌뗍뗏뗐뗑뗘뗬또똑똔똘똥똬똴뙈뙤뙨뚜뚝뚠뚤뚫뚬뚱뛔뛰뛴뛸뜀뜁뜅뜨뜩뜬뜯뜰뜸뜹뜻띄띈띌띔띕띠띤띨띰띱띳띵라락란랄람랍랏랐랑랒랖랗"],
["b741","텮",13,"텽",6,"톅톆톇톉톊"],
["b761","톋",20,"톢톣톥톦톧"],
["b781","톩",6,"톲톴톶톷톸톹톻톽톾톿퇁",14,"래랙랜랠램랩랫랬랭랴략랸럇량러럭런럴럼럽럿렀렁렇레렉렌렐렘렙렛렝려력련렬렴렵렷렸령례롄롑롓로록론롤롬롭롯롱롸롼뢍뢨뢰뢴뢸룀룁룃룅료룐룔룝룟룡루룩룬룰룸룹룻룽뤄뤘뤠뤼뤽륀륄륌륏륑류륙륜률륨륩"],
["b841","퇐",7,"퇙",17],
["b861","퇫",8,"퇵퇶퇷퇹",13],
["b881","툈툊",5,"툑",24,"륫륭르륵른를름릅릇릉릊릍릎리릭린릴림립릿링마막만많",4,"맘맙맛망맞맡맣매맥맨맬맴맵맷맸맹맺먀먁먈먕머먹먼멀멂멈멉멋멍멎멓메멕멘멜멤멥멧멨멩며멱면멸몃몄명몇몌모목몫몬몰몲몸몹못몽뫄뫈뫘뫙뫼"],
["b941","툪툫툮툯툱툲툳툵",6,"툾퉀퉂",5,"퉉퉊퉋퉌"],
["b961","퉍",14,"퉝",6,"퉥퉦퉧퉨"],
["b981","퉩",22,"튂튃튅튆튇튉튊튋튌묀묄묍묏묑묘묜묠묩묫무묵묶문묻물묽묾뭄뭅뭇뭉뭍뭏뭐뭔뭘뭡뭣뭬뮈뮌뮐뮤뮨뮬뮴뮷므믄믈믐믓미믹민믿밀밂밈밉밋밌밍및밑바",4,"받",4,"밤밥밧방밭배백밴밸뱀뱁뱃뱄뱅뱉뱌뱍뱐뱝버벅번벋벌벎범법벗"],
["ba41","튍튎튏튒튓튔튖",5,"튝튞튟튡튢튣튥",6,"튭"],
["ba61","튮튯튰튲",5,"튺튻튽튾틁틃",4,"틊틌",5],
["ba81","틒틓틕틖틗틙틚틛틝",6,"틦",9,"틲틳틵틶틷틹틺벙벚베벡벤벧벨벰벱벳벴벵벼벽변별볍볏볐병볕볘볜보복볶본볼봄봅봇봉봐봔봤봬뵀뵈뵉뵌뵐뵘뵙뵤뵨부북분붇불붉붊붐붑붓붕붙붚붜붤붰붸뷔뷕뷘뷜뷩뷰뷴뷸븀븃븅브븍븐블븜븝븟비빅빈빌빎빔빕빗빙빚빛빠빡빤"],
["bb41","틻",4,"팂팄팆",5,"팏팑팒팓팕팗",4,"팞팢팣"],
["bb61","팤팦팧팪팫팭팮팯팱",6,"팺팾",5,"퍆퍇퍈퍉"],
["bb81","퍊",31,"빨빪빰빱빳빴빵빻빼빽뺀뺄뺌뺍뺏뺐뺑뺘뺙뺨뻐뻑뻔뻗뻘뻠뻣뻤뻥뻬뼁뼈뼉뼘뼙뼛뼜뼝뽀뽁뽄뽈뽐뽑뽕뾔뾰뿅뿌뿍뿐뿔뿜뿟뿡쀼쁑쁘쁜쁠쁨쁩삐삑삔삘삠삡삣삥사삭삯산삳살삵삶삼삽삿샀상샅새색샌샐샘샙샛샜생샤"],
["bc41","퍪",17,"퍾퍿펁펂펃펅펆펇"],
["bc61","펈펉펊펋펎펒",5,"펚펛펝펞펟펡",6,"펪펬펮"],
["bc81","펯",4,"펵펶펷펹펺펻펽",6,"폆폇폊",5,"폑",5,"샥샨샬샴샵샷샹섀섄섈섐섕서",4,"섣설섦섧섬섭섯섰성섶세섹센셀셈셉셋셌셍셔셕션셜셤셥셧셨셩셰셴셸솅소속솎손솔솖솜솝솟송솥솨솩솬솰솽쇄쇈쇌쇔쇗쇘쇠쇤쇨쇰쇱쇳쇼쇽숀숄숌숍숏숑수숙순숟술숨숩숫숭"],
["bd41","폗폙",7,"폢폤",7,"폮폯폱폲폳폵폶폷"],
["bd61","폸폹폺폻폾퐀퐂",5,"퐉",13],
["bd81","퐗",5,"퐞",25,"숯숱숲숴쉈쉐쉑쉔쉘쉠쉥쉬쉭쉰쉴쉼쉽쉿슁슈슉슐슘슛슝스슥슨슬슭슴습슷승시식신싣실싫심십싯싱싶싸싹싻싼쌀쌈쌉쌌쌍쌓쌔쌕쌘쌜쌤쌥쌨쌩썅써썩썬썰썲썸썹썼썽쎄쎈쎌쏀쏘쏙쏜쏟쏠쏢쏨쏩쏭쏴쏵쏸쐈쐐쐤쐬쐰"],
["be41","퐸",7,"푁푂푃푅",14],
["be61","푔",7,"푝푞푟푡푢푣푥",7,"푮푰푱푲"],
["be81","푳",4,"푺푻푽푾풁풃",4,"풊풌풎",5,"풕",8,"쐴쐼쐽쑈쑤쑥쑨쑬쑴쑵쑹쒀쒔쒜쒸쒼쓩쓰쓱쓴쓸쓺쓿씀씁씌씐씔씜씨씩씬씰씸씹씻씽아악안앉않알앍앎앓암압앗았앙앝앞애액앤앨앰앱앳앴앵야약얀얄얇얌얍얏양얕얗얘얜얠얩어억언얹얻얼얽얾엄",6,"엌엎"],
["bf41","풞",10,"풪",14],
["bf61","풹",18,"퓍퓎퓏퓑퓒퓓퓕"],
["bf81","퓖",5,"퓝퓞퓠",7,"퓩퓪퓫퓭퓮퓯퓱",6,"퓹퓺퓼에엑엔엘엠엡엣엥여역엮연열엶엷염",5,"옅옆옇예옌옐옘옙옛옜오옥온올옭옮옰옳옴옵옷옹옻와왁완왈왐왑왓왔왕왜왝왠왬왯왱외왹왼욀욈욉욋욍요욕욘욜욤욥욧용우욱운울욹욺움웁웃웅워웍원월웜웝웠웡웨"],
["c041","퓾",5,"픅픆픇픉픊픋픍",6,"픖픘",5],
["c061","픞",25],
["c081","픸픹픺픻픾픿핁핂핃핅",6,"핎핐핒",5,"핚핛핝핞핟핡핢핣웩웬웰웸웹웽위윅윈윌윔윕윗윙유육윤율윰윱윳융윷으윽은을읊음읍읏응",7,"읜읠읨읫이익인일읽읾잃임입잇있잉잊잎자작잔잖잗잘잚잠잡잣잤장잦재잭잰잴잼잽잿쟀쟁쟈쟉쟌쟎쟐쟘쟝쟤쟨쟬저적전절젊"],
["c141","핤핦핧핪핬핮",5,"핶핷핹핺핻핽",6,"햆햊햋"],
["c161","햌햍햎햏햑",19,"햦햧"],
["c181","햨",31,"점접젓정젖제젝젠젤젬젭젯젱져젼졀졈졉졌졍졔조족존졸졺좀좁좃종좆좇좋좌좍좔좝좟좡좨좼좽죄죈죌죔죕죗죙죠죡죤죵주죽준줄줅줆줌줍줏중줘줬줴쥐쥑쥔쥘쥠쥡쥣쥬쥰쥴쥼즈즉즌즐즘즙즛증지직진짇질짊짐집짓"],
["c241","헊헋헍헎헏헑헓",4,"헚헜헞",5,"헦헧헩헪헫헭헮"],
["c261","헯",4,"헶헸헺",5,"혂혃혅혆혇혉",6,"혒"],
["c281","혖",5,"혝혞혟혡혢혣혥",7,"혮",9,"혺혻징짖짙짚짜짝짠짢짤짧짬짭짯짰짱째짹짼쨀쨈쨉쨋쨌쨍쨔쨘쨩쩌쩍쩐쩔쩜쩝쩟쩠쩡쩨쩽쪄쪘쪼쪽쫀쫄쫌쫍쫏쫑쫓쫘쫙쫠쫬쫴쬈쬐쬔쬘쬠쬡쭁쭈쭉쭌쭐쭘쭙쭝쭤쭸쭹쮜쮸쯔쯤쯧쯩찌찍찐찔찜찝찡찢찧차착찬찮찰참찹찻"],
["c341","혽혾혿홁홂홃홄홆홇홊홌홎홏홐홒홓홖홗홙홚홛홝",4],
["c361","홢",4,"홨홪",5,"홲홳홵",11],
["c381","횁횂횄횆",5,"횎횏횑횒횓횕",7,"횞횠횢",5,"횩횪찼창찾채책챈챌챔챕챗챘챙챠챤챦챨챰챵처척천철첨첩첫첬청체첵첸첼쳄쳅쳇쳉쳐쳔쳤쳬쳰촁초촉촌촐촘촙촛총촤촨촬촹최쵠쵤쵬쵭쵯쵱쵸춈추축춘출춤춥춧충춰췄췌췐취췬췰췸췹췻췽츄츈츌츔츙츠측츤츨츰츱츳층"],
["c441","횫횭횮횯횱",7,"횺횼",7,"훆훇훉훊훋"],
["c461","훍훎훏훐훒훓훕훖훘훚",5,"훡훢훣훥훦훧훩",4],
["c481","훮훯훱훲훳훴훶",5,"훾훿휁휂휃휅",11,"휒휓휔치칙친칟칠칡침칩칫칭카칵칸칼캄캅캇캉캐캑캔캘캠캡캣캤캥캬캭컁커컥컨컫컬컴컵컷컸컹케켁켄켈켐켑켓켕켜켠켤켬켭켯켰켱켸코콕콘콜콤콥콧콩콰콱콴콸쾀쾅쾌쾡쾨쾰쿄쿠쿡쿤쿨쿰쿱쿳쿵쿼퀀퀄퀑퀘퀭퀴퀵퀸퀼"],
["c541","휕휖휗휚휛휝휞휟휡",6,"휪휬휮",5,"휶휷휹"],
["c561","휺휻휽",6,"흅흆흈흊",5,"흒흓흕흚",4],
["c581","흟흢흤흦흧흨흪흫흭흮흯흱흲흳흵",6,"흾흿힀힂",5,"힊힋큄큅큇큉큐큔큘큠크큭큰클큼큽킁키킥킨킬킴킵킷킹타탁탄탈탉탐탑탓탔탕태택탠탤탬탭탯탰탱탸턍터턱턴털턺텀텁텃텄텅테텍텐텔템텝텟텡텨텬텼톄톈토톡톤톨톰톱톳통톺톼퇀퇘퇴퇸툇툉툐투툭툰툴툼툽툿퉁퉈퉜"],
["c641","힍힎힏힑",6,"힚힜힞",5],
["c6a1","퉤튀튁튄튈튐튑튕튜튠튤튬튱트특튼튿틀틂틈틉틋틔틘틜틤틥티틱틴틸팀팁팃팅파팍팎판팔팖팜팝팟팠팡팥패팩팬팰팸팹팻팼팽퍄퍅퍼퍽펀펄펌펍펏펐펑페펙펜펠펨펩펫펭펴편펼폄폅폈평폐폘폡폣포폭폰폴폼폽폿퐁"],
["c7a1","퐈퐝푀푄표푠푤푭푯푸푹푼푿풀풂품풉풋풍풔풩퓌퓐퓔퓜퓟퓨퓬퓰퓸퓻퓽프픈플픔픕픗피픽핀필핌핍핏핑하학한할핥함합핫항해핵핸핼햄햅햇했행햐향허헉헌헐헒험헙헛헝헤헥헨헬헴헵헷헹혀혁현혈혐협혓혔형혜혠"],
["c8a1","혤혭호혹혼홀홅홈홉홋홍홑화확환활홧황홰홱홴횃횅회획횐횔횝횟횡효횬횰횹횻후훅훈훌훑훔훗훙훠훤훨훰훵훼훽휀휄휑휘휙휜휠휨휩휫휭휴휵휸휼흄흇흉흐흑흔흖흗흘흙흠흡흣흥흩희흰흴흼흽힁히힉힌힐힘힙힛힝"],
["caa1","伽佳假價加可呵哥嘉嫁家暇架枷柯歌珂痂稼苛茄街袈訶賈跏軻迦駕刻却各恪慤殼珏脚覺角閣侃刊墾奸姦干幹懇揀杆柬桿澗癎看磵稈竿簡肝艮艱諫間乫喝曷渴碣竭葛褐蝎鞨勘坎堪嵌感憾戡敢柑橄減甘疳監瞰紺邯鑑鑒龕"],
["cba1","匣岬甲胛鉀閘剛堈姜岡崗康强彊慷江畺疆糠絳綱羌腔舡薑襁講鋼降鱇介价個凱塏愷愾慨改槪漑疥皆盖箇芥蓋豈鎧開喀客坑更粳羹醵倨去居巨拒据據擧渠炬祛距踞車遽鉅鋸乾件健巾建愆楗腱虔蹇鍵騫乞傑杰桀儉劍劒檢"],
["cca1","瞼鈐黔劫怯迲偈憩揭擊格檄激膈覡隔堅牽犬甄絹繭肩見譴遣鵑抉決潔結缺訣兼慊箝謙鉗鎌京俓倞傾儆勁勍卿坰境庚徑慶憬擎敬景暻更梗涇炅烱璟璥瓊痙硬磬竟競絅經耕耿脛莖警輕逕鏡頃頸驚鯨係啓堺契季屆悸戒桂械"],
["cda1","棨溪界癸磎稽系繫繼計誡谿階鷄古叩告呱固姑孤尻庫拷攷故敲暠枯槁沽痼皐睾稿羔考股膏苦苽菰藁蠱袴誥賈辜錮雇顧高鼓哭斛曲梏穀谷鵠困坤崑昆梱棍滾琨袞鯤汨滑骨供公共功孔工恐恭拱控攻珙空蚣貢鞏串寡戈果瓜"],
["cea1","科菓誇課跨過鍋顆廓槨藿郭串冠官寬慣棺款灌琯瓘管罐菅觀貫關館刮恝括适侊光匡壙廣曠洸炚狂珖筐胱鑛卦掛罫乖傀塊壞怪愧拐槐魁宏紘肱轟交僑咬喬嬌嶠巧攪敎校橋狡皎矯絞翹膠蕎蛟較轎郊餃驕鮫丘久九仇俱具勾"],
["cfa1","區口句咎嘔坵垢寇嶇廐懼拘救枸柩構歐毆毬求溝灸狗玖球瞿矩究絿耉臼舅舊苟衢謳購軀逑邱鉤銶駒驅鳩鷗龜國局菊鞠鞫麴君窘群裙軍郡堀屈掘窟宮弓穹窮芎躬倦券勸卷圈拳捲權淃眷厥獗蕨蹶闕机櫃潰詭軌饋句晷歸貴"],
["d0a1","鬼龜叫圭奎揆槻珪硅窺竅糾葵規赳逵閨勻均畇筠菌鈞龜橘克剋劇戟棘極隙僅劤勤懃斤根槿瑾筋芹菫覲謹近饉契今妗擒昑檎琴禁禽芩衾衿襟金錦伋及急扱汲級給亘兢矜肯企伎其冀嗜器圻基埼夔奇妓寄岐崎己幾忌技旗旣"],
["d1a1","朞期杞棋棄機欺氣汽沂淇玘琦琪璂璣畸畿碁磯祁祇祈祺箕紀綺羈耆耭肌記譏豈起錡錤飢饑騎騏驥麒緊佶吉拮桔金喫儺喇奈娜懦懶拏拿癩",5,"那樂",4,"諾酪駱亂卵暖欄煖爛蘭難鸞捏捺南嵐枏楠湳濫男藍襤拉"],
["d2a1","納臘蠟衲囊娘廊",4,"乃來內奈柰耐冷女年撚秊念恬拈捻寧寗努勞奴弩怒擄櫓爐瑙盧",5,"駑魯",10,"濃籠聾膿農惱牢磊腦賂雷尿壘",7,"嫩訥杻紐勒",5,"能菱陵尼泥匿溺多茶"],
["d3a1","丹亶但單團壇彖斷旦檀段湍短端簞緞蛋袒鄲鍛撻澾獺疸達啖坍憺擔曇淡湛潭澹痰聃膽蕁覃談譚錟沓畓答踏遝唐堂塘幢戇撞棠當糖螳黨代垈坮大對岱帶待戴擡玳臺袋貸隊黛宅德悳倒刀到圖堵塗導屠島嶋度徒悼挑掉搗桃"],
["d4a1","棹櫂淘渡滔濤燾盜睹禱稻萄覩賭跳蹈逃途道都鍍陶韜毒瀆牘犢獨督禿篤纛讀墩惇敦旽暾沌焞燉豚頓乭突仝冬凍動同憧東桐棟洞潼疼瞳童胴董銅兜斗杜枓痘竇荳讀豆逗頭屯臀芚遁遯鈍得嶝橙燈登等藤謄鄧騰喇懶拏癩羅"],
["d5a1","蘿螺裸邏樂洛烙珞絡落諾酪駱丹亂卵欄欒瀾爛蘭鸞剌辣嵐擥攬欖濫籃纜藍襤覽拉臘蠟廊朗浪狼琅瑯螂郞來崍徠萊冷掠略亮倆兩凉梁樑粮粱糧良諒輛量侶儷勵呂廬慮戾旅櫚濾礪藜蠣閭驢驪麗黎力曆歷瀝礫轢靂憐戀攣漣"],
["d6a1","煉璉練聯蓮輦連鍊冽列劣洌烈裂廉斂殮濂簾獵令伶囹寧岺嶺怜玲笭羚翎聆逞鈴零靈領齡例澧禮醴隷勞怒撈擄櫓潞瀘爐盧老蘆虜路輅露魯鷺鹵碌祿綠菉錄鹿麓論壟弄朧瀧瓏籠聾儡瀨牢磊賂賚賴雷了僚寮廖料燎療瞭聊蓼"],
["d7a1","遼鬧龍壘婁屢樓淚漏瘻累縷蔞褸鏤陋劉旒柳榴流溜瀏琉瑠留瘤硫謬類六戮陸侖倫崙淪綸輪律慄栗率隆勒肋凜凌楞稜綾菱陵俚利厘吏唎履悧李梨浬犁狸理璃異痢籬罹羸莉裏裡里釐離鯉吝潾燐璘藺躪隣鱗麟林淋琳臨霖砬"],
["d8a1","立笠粒摩瑪痲碼磨馬魔麻寞幕漠膜莫邈万卍娩巒彎慢挽晩曼滿漫灣瞞萬蔓蠻輓饅鰻唜抹末沫茉襪靺亡妄忘忙望網罔芒茫莽輞邙埋妹媒寐昧枚梅每煤罵買賣邁魅脈貊陌驀麥孟氓猛盲盟萌冪覓免冕勉棉沔眄眠綿緬面麵滅"],
["d9a1","蔑冥名命明暝椧溟皿瞑茗蓂螟酩銘鳴袂侮冒募姆帽慕摸摹暮某模母毛牟牡瑁眸矛耗芼茅謀謨貌木沐牧目睦穆鶩歿沒夢朦蒙卯墓妙廟描昴杳渺猫竗苗錨務巫憮懋戊拇撫无楙武毋無珷畝繆舞茂蕪誣貿霧鵡墨默們刎吻問文"],
["daa1","汶紊紋聞蚊門雯勿沕物味媚尾嵋彌微未梶楣渼湄眉米美薇謎迷靡黴岷悶愍憫敏旻旼民泯玟珉緡閔密蜜謐剝博拍搏撲朴樸泊珀璞箔粕縛膊舶薄迫雹駁伴半反叛拌搬攀斑槃泮潘班畔瘢盤盼磐磻礬絆般蟠返頒飯勃拔撥渤潑"],
["dba1","發跋醱鉢髮魃倣傍坊妨尨幇彷房放方旁昉枋榜滂磅紡肪膀舫芳蒡蚌訪謗邦防龐倍俳北培徘拜排杯湃焙盃背胚裴裵褙賠輩配陪伯佰帛柏栢白百魄幡樊煩燔番磻繁蕃藩飜伐筏罰閥凡帆梵氾汎泛犯範范法琺僻劈壁擘檗璧癖"],
["dca1","碧蘗闢霹便卞弁變辨辯邊別瞥鱉鼈丙倂兵屛幷昞昺柄棅炳甁病秉竝輧餠騈保堡報寶普步洑湺潽珤甫菩補褓譜輔伏僕匐卜宓復服福腹茯蔔複覆輹輻馥鰒本乶俸奉封峯峰捧棒烽熢琫縫蓬蜂逢鋒鳳不付俯傅剖副否咐埠夫婦"],
["dda1","孚孵富府復扶敷斧浮溥父符簿缶腐腑膚艀芙莩訃負賦賻赴趺部釜阜附駙鳧北分吩噴墳奔奮忿憤扮昐汾焚盆粉糞紛芬賁雰不佛弗彿拂崩朋棚硼繃鵬丕備匕匪卑妃婢庇悲憊扉批斐枇榧比毖毗毘沸泌琵痺砒碑秕秘粃緋翡肥"],
["dea1","脾臂菲蜚裨誹譬費鄙非飛鼻嚬嬪彬斌檳殯浜濱瀕牝玭貧賓頻憑氷聘騁乍事些仕伺似使俟僿史司唆嗣四士奢娑寫寺射巳師徙思捨斜斯柶査梭死沙泗渣瀉獅砂社祀祠私篩紗絲肆舍莎蓑蛇裟詐詞謝賜赦辭邪飼駟麝削數朔索"],
["dfa1","傘刪山散汕珊産疝算蒜酸霰乷撒殺煞薩三參杉森渗芟蔘衫揷澁鈒颯上傷像償商喪嘗孀尙峠常床庠廂想桑橡湘爽牀狀相祥箱翔裳觴詳象賞霜塞璽賽嗇塞穡索色牲生甥省笙墅壻嶼序庶徐恕抒捿敍暑曙書栖棲犀瑞筮絮緖署"],
["e0a1","胥舒薯西誓逝鋤黍鼠夕奭席惜昔晳析汐淅潟石碩蓆釋錫仙僊先善嬋宣扇敾旋渲煽琁瑄璇璿癬禪線繕羨腺膳船蘚蟬詵跣選銑鐥饍鮮卨屑楔泄洩渫舌薛褻設說雪齧剡暹殲纖蟾贍閃陝攝涉燮葉城姓宬性惺成星晟猩珹盛省筬"],
["e1a1","聖聲腥誠醒世勢歲洗稅笹細說貰召嘯塑宵小少巢所掃搔昭梳沼消溯瀟炤燒甦疏疎瘙笑篠簫素紹蔬蕭蘇訴逍遡邵銷韶騷俗屬束涑粟續謖贖速孫巽損蓀遜飡率宋悚松淞訟誦送頌刷殺灑碎鎖衰釗修受嗽囚垂壽嫂守岫峀帥愁"],
["e2a1","戍手授搜收數樹殊水洙漱燧狩獸琇璲瘦睡秀穗竪粹綏綬繡羞脩茱蒐蓚藪袖誰讐輸遂邃酬銖銹隋隧隨雖需須首髓鬚叔塾夙孰宿淑潚熟琡璹肅菽巡徇循恂旬栒楯橓殉洵淳珣盾瞬筍純脣舜荀蓴蕣詢諄醇錞順馴戌術述鉥崇崧"],
["e3a1","嵩瑟膝蝨濕拾習褶襲丞乘僧勝升承昇繩蠅陞侍匙嘶始媤尸屎屍市弑恃施是時枾柴猜矢示翅蒔蓍視試詩諡豕豺埴寔式息拭植殖湜熄篒蝕識軾食飾伸侁信呻娠宸愼新晨燼申神紳腎臣莘薪藎蜃訊身辛辰迅失室實悉審尋心沁"],
["e4a1","沈深瀋甚芯諶什十拾雙氏亞俄兒啞娥峨我牙芽莪蛾衙訝阿雅餓鴉鵝堊岳嶽幄惡愕握樂渥鄂鍔顎鰐齷安岸按晏案眼雁鞍顔鮟斡謁軋閼唵岩巖庵暗癌菴闇壓押狎鴨仰央怏昻殃秧鴦厓哀埃崖愛曖涯碍艾隘靄厄扼掖液縊腋額"],
["e5a1","櫻罌鶯鸚也倻冶夜惹揶椰爺耶若野弱掠略約若葯蒻藥躍亮佯兩凉壤孃恙揚攘敭暘梁楊樣洋瀁煬痒瘍禳穰糧羊良襄諒讓釀陽量養圄御於漁瘀禦語馭魚齬億憶抑檍臆偃堰彦焉言諺孼蘖俺儼嚴奄掩淹嶪業円予余勵呂女如廬"],
["e6a1","旅歟汝濾璵礖礪與艅茹輿轝閭餘驪麗黎亦力域役易曆歷疫繹譯轢逆驛嚥堧姸娟宴年延憐戀捐挻撚椽沇沿涎涓淵演漣烟然煙煉燃燕璉硏硯秊筵緣練縯聯衍軟輦蓮連鉛鍊鳶列劣咽悅涅烈熱裂說閱厭廉念捻染殮炎焰琰艶苒"],
["e7a1","簾閻髥鹽曄獵燁葉令囹塋寧嶺嶸影怜映暎楹榮永泳渶潁濚瀛瀯煐營獰玲瑛瑩瓔盈穎纓羚聆英詠迎鈴鍈零霙靈領乂倪例刈叡曳汭濊猊睿穢芮藝蘂禮裔詣譽豫醴銳隸霓預五伍俉傲午吾吳嗚塢墺奧娛寤悟惡懊敖旿晤梧汚澳"],
["e8a1","烏熬獒筽蜈誤鰲鼇屋沃獄玉鈺溫瑥瘟穩縕蘊兀壅擁瓮甕癰翁邕雍饔渦瓦窩窪臥蛙蝸訛婉完宛梡椀浣玩琓琬碗緩翫脘腕莞豌阮頑曰往旺枉汪王倭娃歪矮外嵬巍猥畏了僚僥凹堯夭妖姚寥寮尿嶢拗搖撓擾料曜樂橈燎燿瑤療"],
["e9a1","窈窯繇繞耀腰蓼蟯要謠遙遼邀饒慾欲浴縟褥辱俑傭冗勇埇墉容庸慂榕涌湧溶熔瑢用甬聳茸蓉踊鎔鏞龍于佑偶優又友右宇寓尤愚憂旴牛玗瑀盂祐禑禹紆羽芋藕虞迂遇郵釪隅雨雩勖彧旭昱栯煜稶郁頊云暈橒殞澐熉耘芸蕓"],
["eaa1","運隕雲韻蔚鬱亐熊雄元原員圓園垣媛嫄寃怨愿援沅洹湲源爰猿瑗苑袁轅遠阮院願鴛月越鉞位偉僞危圍委威尉慰暐渭爲瑋緯胃萎葦蔿蝟衛褘謂違韋魏乳侑儒兪劉唯喩孺宥幼幽庾悠惟愈愉揄攸有杻柔柚柳楡楢油洧流游溜"],
["eba1","濡猶猷琉瑜由留癒硫紐維臾萸裕誘諛諭踰蹂遊逾遺酉釉鍮類六堉戮毓肉育陸倫允奫尹崙淪潤玧胤贇輪鈗閏律慄栗率聿戎瀜絨融隆垠恩慇殷誾銀隱乙吟淫蔭陰音飮揖泣邑凝應膺鷹依倚儀宜意懿擬椅毅疑矣義艤薏蟻衣誼"],
["eca1","議醫二以伊利吏夷姨履已弛彛怡易李梨泥爾珥理異痍痢移罹而耳肄苡荑裏裡貽貳邇里離飴餌匿溺瀷益翊翌翼謚人仁刃印吝咽因姻寅引忍湮燐璘絪茵藺蚓認隣靭靷鱗麟一佚佾壹日溢逸鎰馹任壬妊姙恁林淋稔臨荏賃入卄"],
["eda1","立笠粒仍剩孕芿仔刺咨姉姿子字孜恣慈滋炙煮玆瓷疵磁紫者自茨蔗藉諮資雌作勺嚼斫昨灼炸爵綽芍酌雀鵲孱棧殘潺盞岑暫潛箴簪蠶雜丈仗匠場墻壯奬將帳庄張掌暲杖樟檣欌漿牆狀獐璋章粧腸臟臧莊葬蔣薔藏裝贓醬長"],
["eea1","障再哉在宰才材栽梓渽滓災縡裁財載齋齎爭箏諍錚佇低儲咀姐底抵杵楮樗沮渚狙猪疽箸紵苧菹著藷詛貯躇這邸雎齟勣吊嫡寂摘敵滴狄炙的積笛籍績翟荻謫賊赤跡蹟迪迹適鏑佃佺傳全典前剪塡塼奠專展廛悛戰栓殿氈澱"],
["efa1","煎琠田甸畑癲筌箋箭篆纏詮輾轉鈿銓錢鐫電顚顫餞切截折浙癤竊節絶占岾店漸点粘霑鮎點接摺蝶丁井亭停偵呈姃定幀庭廷征情挺政整旌晶晸柾楨檉正汀淀淨渟湞瀞炡玎珽町睛碇禎程穽精綎艇訂諪貞鄭酊釘鉦鋌錠霆靖"],
["f0a1","靜頂鼎制劑啼堤帝弟悌提梯濟祭第臍薺製諸蹄醍除際霽題齊俎兆凋助嘲弔彫措操早晁曺曹朝條棗槽漕潮照燥爪璪眺祖祚租稠窕粗糟組繰肇藻蚤詔調趙躁造遭釣阻雕鳥族簇足鏃存尊卒拙猝倧宗從悰慫棕淙琮種終綜縱腫"],
["f1a1","踪踵鍾鐘佐坐左座挫罪主住侏做姝胄呪周嗾奏宙州廚晝朱柱株注洲湊澍炷珠疇籌紂紬綢舟蛛註誅走躊輳週酎酒鑄駐竹粥俊儁准埈寯峻晙樽浚準濬焌畯竣蠢逡遵雋駿茁中仲衆重卽櫛楫汁葺增憎曾拯烝甑症繒蒸證贈之只"],
["f2a1","咫地址志持指摯支旨智枝枳止池沚漬知砥祉祗紙肢脂至芝芷蜘誌識贄趾遲直稙稷織職唇嗔塵振搢晉晋桭榛殄津溱珍瑨璡畛疹盡眞瞋秦縉縝臻蔯袗診賑軫辰進鎭陣陳震侄叱姪嫉帙桎瓆疾秩窒膣蛭質跌迭斟朕什執潗緝輯"],
["f3a1","鏶集徵懲澄且侘借叉嗟嵯差次此磋箚茶蹉車遮捉搾着窄錯鑿齪撰澯燦璨瓚竄簒纂粲纘讚贊鑽餐饌刹察擦札紮僭參塹慘慙懺斬站讒讖倉倡創唱娼廠彰愴敞昌昶暢槍滄漲猖瘡窓脹艙菖蒼債埰寀寨彩採砦綵菜蔡采釵冊柵策"],
["f4a1","責凄妻悽處倜刺剔尺慽戚拓擲斥滌瘠脊蹠陟隻仟千喘天川擅泉淺玔穿舛薦賤踐遷釧闡阡韆凸哲喆徹撤澈綴輟轍鐵僉尖沾添甛瞻簽籤詹諂堞妾帖捷牒疊睫諜貼輒廳晴淸聽菁請靑鯖切剃替涕滯締諦逮遞體初剿哨憔抄招梢"],
["f5a1","椒楚樵炒焦硝礁礎秒稍肖艸苕草蕉貂超酢醋醮促囑燭矗蜀觸寸忖村邨叢塚寵悤憁摠總聰蔥銃撮催崔最墜抽推椎楸樞湫皺秋芻萩諏趨追鄒酋醜錐錘鎚雛騶鰍丑畜祝竺筑築縮蓄蹙蹴軸逐春椿瑃出朮黜充忠沖蟲衝衷悴膵萃"],
["f6a1","贅取吹嘴娶就炊翠聚脆臭趣醉驟鷲側仄厠惻測層侈値嗤峙幟恥梔治淄熾痔痴癡稚穉緇緻置致蚩輜雉馳齒則勅飭親七柒漆侵寢枕沈浸琛砧針鍼蟄秤稱快他咤唾墮妥惰打拖朶楕舵陀馱駝倬卓啄坼度托拓擢晫柝濁濯琢琸託"],
["f7a1","鐸呑嘆坦彈憚歎灘炭綻誕奪脫探眈耽貪塔搭榻宕帑湯糖蕩兌台太怠態殆汰泰笞胎苔跆邰颱宅擇澤撑攄兎吐土討慟桶洞痛筒統通堆槌腿褪退頹偸套妬投透鬪慝特闖坡婆巴把播擺杷波派爬琶破罷芭跛頗判坂板版瓣販辦鈑"],
["f8a1","阪八叭捌佩唄悖敗沛浿牌狽稗覇貝彭澎烹膨愎便偏扁片篇編翩遍鞭騙貶坪平枰萍評吠嬖幣廢弊斃肺蔽閉陛佈包匍匏咆哺圃布怖抛抱捕暴泡浦疱砲胞脯苞葡蒲袍褒逋鋪飽鮑幅暴曝瀑爆輻俵剽彪慓杓標漂瓢票表豹飇飄驃"],
["f9a1","品稟楓諷豊風馮彼披疲皮被避陂匹弼必泌珌畢疋筆苾馝乏逼下何厦夏廈昰河瑕荷蝦賀遐霞鰕壑學虐謔鶴寒恨悍旱汗漢澣瀚罕翰閑閒限韓割轄函含咸啣喊檻涵緘艦銜陷鹹合哈盒蛤閤闔陜亢伉姮嫦巷恒抗杭桁沆港缸肛航"],
["faa1","行降項亥偕咳垓奚孩害懈楷海瀣蟹解該諧邂駭骸劾核倖幸杏荇行享向嚮珦鄕響餉饗香噓墟虛許憲櫶獻軒歇險驗奕爀赫革俔峴弦懸晛泫炫玄玹現眩睍絃絢縣舷衒見賢鉉顯孑穴血頁嫌俠協夾峽挾浹狹脅脇莢鋏頰亨兄刑型"],
["fba1","形泂滎瀅灐炯熒珩瑩荊螢衡逈邢鎣馨兮彗惠慧暳蕙蹊醯鞋乎互呼壕壺好岵弧戶扈昊晧毫浩淏湖滸澔濠濩灝狐琥瑚瓠皓祜糊縞胡芦葫蒿虎號蝴護豪鎬頀顥惑或酷婚昏混渾琿魂忽惚笏哄弘汞泓洪烘紅虹訌鴻化和嬅樺火畵"],
["fca1","禍禾花華話譁貨靴廓擴攫確碻穫丸喚奐宦幻患換歡晥桓渙煥環紈還驩鰥活滑猾豁闊凰幌徨恍惶愰慌晃晄榥況湟滉潢煌璜皇篁簧荒蝗遑隍黃匯回廻徊恢悔懷晦會檜淮澮灰獪繪膾茴蛔誨賄劃獲宖橫鐄哮嚆孝效斅曉梟涍淆"],
["fda1","爻肴酵驍侯候厚后吼喉嗅帿後朽煦珝逅勛勳塤壎焄熏燻薰訓暈薨喧暄煊萱卉喙毁彙徽揮暉煇諱輝麾休携烋畦虧恤譎鷸兇凶匈洶胸黑昕欣炘痕吃屹紇訖欠欽歆吸恰洽翕興僖凞喜噫囍姬嬉希憙憘戱晞曦熙熹熺犧禧稀羲詰"]
]

},{}],100:[function(require,module,exports){
module.exports=[
["0","\u0000",127],
["a140","　，、。．‧；：？！︰…‥﹐﹑﹒·﹔﹕﹖﹗｜–︱—︳╴︴﹏（）︵︶｛｝︷︸〔〕︹︺【】︻︼《》︽︾〈〉︿﹀「」﹁﹂『』﹃﹄﹙﹚"],
["a1a1","﹛﹜﹝﹞‘’“”〝〞‵′＃＆＊※§〃○●△▲◎☆★◇◆□■▽▼㊣℅¯￣＿ˍ﹉﹊﹍﹎﹋﹌﹟﹠﹡＋－×÷±√＜＞＝≦≧≠∞≒≡﹢",4,"～∩∪⊥∠∟⊿㏒㏑∫∮∵∴♀♂⊕⊙↑↓←→↖↗↙↘∥∣／"],
["a240","＼∕﹨＄￥〒￠￡％＠℃℉﹩﹪﹫㏕㎜㎝㎞㏎㎡㎎㎏㏄°兙兛兞兝兡兣嗧瓩糎▁",7,"▏▎▍▌▋▊▉┼┴┬┤├▔─│▕┌┐└┘╭"],
["a2a1","╮╰╯═╞╪╡◢◣◥◤╱╲╳０",9,"Ⅰ",9,"〡",8,"十卄卅Ａ",25,"ａ",21],
["a340","ｗｘｙｚΑ",16,"Σ",6,"α",16,"σ",6,"ㄅ",10],
["a3a1","ㄐ",25,"˙ˉˊˇˋ"],
["a3e1","€"],
["a440","一乙丁七乃九了二人儿入八几刀刁力匕十卜又三下丈上丫丸凡久么也乞于亡兀刃勺千叉口土士夕大女子孑孓寸小尢尸山川工己已巳巾干廾弋弓才"],
["a4a1","丑丐不中丰丹之尹予云井互五亢仁什仃仆仇仍今介仄元允內六兮公冗凶分切刈勻勾勿化匹午升卅卞厄友及反壬天夫太夭孔少尤尺屯巴幻廿弔引心戈戶手扎支文斗斤方日曰月木欠止歹毋比毛氏水火爪父爻片牙牛犬王丙"],
["a540","世丕且丘主乍乏乎以付仔仕他仗代令仙仞充兄冉冊冬凹出凸刊加功包匆北匝仟半卉卡占卯卮去可古右召叮叩叨叼司叵叫另只史叱台句叭叻四囚外"],
["a5a1","央失奴奶孕它尼巨巧左市布平幼弁弘弗必戊打扔扒扑斥旦朮本未末札正母民氐永汁汀氾犯玄玉瓜瓦甘生用甩田由甲申疋白皮皿目矛矢石示禾穴立丞丟乒乓乩亙交亦亥仿伉伙伊伕伍伐休伏仲件任仰仳份企伋光兇兆先全"],
["a640","共再冰列刑划刎刖劣匈匡匠印危吉吏同吊吐吁吋各向名合吃后吆吒因回囝圳地在圭圬圯圩夙多夷夸妄奸妃好她如妁字存宇守宅安寺尖屹州帆并年"],
["a6a1","式弛忙忖戎戌戍成扣扛托收早旨旬旭曲曳有朽朴朱朵次此死氖汝汗汙江池汐汕污汛汍汎灰牟牝百竹米糸缶羊羽老考而耒耳聿肉肋肌臣自至臼舌舛舟艮色艾虫血行衣西阡串亨位住佇佗佞伴佛何估佐佑伽伺伸佃佔似但佣"],
["a740","作你伯低伶余佝佈佚兌克免兵冶冷別判利刪刨劫助努劬匣即卵吝吭吞吾否呎吧呆呃吳呈呂君吩告吹吻吸吮吵吶吠吼呀吱含吟听囪困囤囫坊坑址坍"],
["a7a1","均坎圾坐坏圻壯夾妝妒妨妞妣妙妖妍妤妓妊妥孝孜孚孛完宋宏尬局屁尿尾岐岑岔岌巫希序庇床廷弄弟彤形彷役忘忌志忍忱快忸忪戒我抄抗抖技扶抉扭把扼找批扳抒扯折扮投抓抑抆改攻攸旱更束李杏材村杜杖杞杉杆杠"],
["a840","杓杗步每求汞沙沁沈沉沅沛汪決沐汰沌汨沖沒汽沃汲汾汴沆汶沍沔沘沂灶灼災灸牢牡牠狄狂玖甬甫男甸皂盯矣私秀禿究系罕肖肓肝肘肛肚育良芒"],
["a8a1","芋芍見角言谷豆豕貝赤走足身車辛辰迂迆迅迄巡邑邢邪邦那酉釆里防阮阱阪阬並乖乳事些亞享京佯依侍佳使佬供例來侃佰併侈佩佻侖佾侏侑佺兔兒兕兩具其典冽函刻券刷刺到刮制剁劾劻卒協卓卑卦卷卸卹取叔受味呵"],
["a940","咖呸咕咀呻呷咄咒咆呼咐呱呶和咚呢周咋命咎固垃坷坪坩坡坦坤坼夜奉奇奈奄奔妾妻委妹妮姑姆姐姍始姓姊妯妳姒姅孟孤季宗定官宜宙宛尚屈居"],
["a9a1","屆岷岡岸岩岫岱岳帘帚帖帕帛帑幸庚店府底庖延弦弧弩往征彿彼忝忠忽念忿怏怔怯怵怖怪怕怡性怩怫怛或戕房戾所承拉拌拄抿拂抹拒招披拓拔拋拈抨抽押拐拙拇拍抵拚抱拘拖拗拆抬拎放斧於旺昔易昌昆昂明昀昏昕昊"],
["aa40","昇服朋杭枋枕東果杳杷枇枝林杯杰板枉松析杵枚枓杼杪杲欣武歧歿氓氛泣注泳沱泌泥河沽沾沼波沫法泓沸泄油況沮泗泅泱沿治泡泛泊沬泯泜泖泠"],
["aaa1","炕炎炒炊炙爬爭爸版牧物狀狎狙狗狐玩玨玟玫玥甽疝疙疚的盂盲直知矽社祀祁秉秈空穹竺糾罔羌羋者肺肥肢肱股肫肩肴肪肯臥臾舍芳芝芙芭芽芟芹花芬芥芯芸芣芰芾芷虎虱初表軋迎返近邵邸邱邶采金長門阜陀阿阻附"],
["ab40","陂隹雨青非亟亭亮信侵侯便俠俑俏保促侶俘俟俊俗侮俐俄係俚俎俞侷兗冒冑冠剎剃削前剌剋則勇勉勃勁匍南卻厚叛咬哀咨哎哉咸咦咳哇哂咽咪品"],
["aba1","哄哈咯咫咱咻咩咧咿囿垂型垠垣垢城垮垓奕契奏奎奐姜姘姿姣姨娃姥姪姚姦威姻孩宣宦室客宥封屎屏屍屋峙峒巷帝帥帟幽庠度建弈弭彥很待徊律徇後徉怒思怠急怎怨恍恰恨恢恆恃恬恫恪恤扁拜挖按拼拭持拮拽指拱拷"],
["ac40","拯括拾拴挑挂政故斫施既春昭映昧是星昨昱昤曷柿染柱柔某柬架枯柵柩柯柄柑枴柚查枸柏柞柳枰柙柢柝柒歪殃殆段毒毗氟泉洋洲洪流津洌洱洞洗"],
["aca1","活洽派洶洛泵洹洧洸洩洮洵洎洫炫為炳炬炯炭炸炮炤爰牲牯牴狩狠狡玷珊玻玲珍珀玳甚甭畏界畎畋疫疤疥疢疣癸皆皇皈盈盆盃盅省盹相眉看盾盼眇矜砂研砌砍祆祉祈祇禹禺科秒秋穿突竿竽籽紂紅紀紉紇約紆缸美羿耄"],
["ad40","耐耍耑耶胖胥胚胃胄背胡胛胎胞胤胝致舢苧范茅苣苛苦茄若茂茉苒苗英茁苜苔苑苞苓苟苯茆虐虹虻虺衍衫要觔計訂訃貞負赴赳趴軍軌述迦迢迪迥"],
["ada1","迭迫迤迨郊郎郁郃酋酊重閂限陋陌降面革韋韭音頁風飛食首香乘亳倌倍倣俯倦倥俸倩倖倆值借倚倒們俺倀倔倨俱倡個候倘俳修倭倪俾倫倉兼冤冥冢凍凌准凋剖剜剔剛剝匪卿原厝叟哨唐唁唷哼哥哲唆哺唔哩哭員唉哮哪"],
["ae40","哦唧唇哽唏圃圄埂埔埋埃堉夏套奘奚娑娘娜娟娛娓姬娠娣娩娥娌娉孫屘宰害家宴宮宵容宸射屑展屐峭峽峻峪峨峰島崁峴差席師庫庭座弱徒徑徐恙"],
["aea1","恣恥恐恕恭恩息悄悟悚悍悔悌悅悖扇拳挈拿捎挾振捕捂捆捏捉挺捐挽挪挫挨捍捌效敉料旁旅時晉晏晃晒晌晅晁書朔朕朗校核案框桓根桂桔栩梳栗桌桑栽柴桐桀格桃株桅栓栘桁殊殉殷氣氧氨氦氤泰浪涕消涇浦浸海浙涓"],
["af40","浬涉浮浚浴浩涌涊浹涅浥涔烊烘烤烙烈烏爹特狼狹狽狸狷玆班琉珮珠珪珞畔畝畜畚留疾病症疲疳疽疼疹痂疸皋皰益盍盎眩真眠眨矩砰砧砸砝破砷"],
["afa1","砥砭砠砟砲祕祐祠祟祖神祝祗祚秤秣秧租秦秩秘窄窈站笆笑粉紡紗紋紊素索純紐紕級紜納紙紛缺罟羔翅翁耆耘耕耙耗耽耿胱脂胰脅胭胴脆胸胳脈能脊胼胯臭臬舀舐航舫舨般芻茫荒荔荊茸荐草茵茴荏茲茹茶茗荀茱茨荃"],
["b040","虔蚊蚪蚓蚤蚩蚌蚣蚜衰衷袁袂衽衹記訐討訌訕訊託訓訖訏訑豈豺豹財貢起躬軒軔軏辱送逆迷退迺迴逃追逅迸邕郡郝郢酒配酌釘針釗釜釙閃院陣陡"],
["b0a1","陛陝除陘陞隻飢馬骨高鬥鬲鬼乾偺偽停假偃偌做偉健偶偎偕偵側偷偏倏偯偭兜冕凰剪副勒務勘動匐匏匙匿區匾參曼商啪啦啄啞啡啃啊唱啖問啕唯啤唸售啜唬啣唳啁啗圈國圉域堅堊堆埠埤基堂堵執培夠奢娶婁婉婦婪婀"],
["b140","娼婢婚婆婊孰寇寅寄寂宿密尉專將屠屜屝崇崆崎崛崖崢崑崩崔崙崤崧崗巢常帶帳帷康庸庶庵庾張強彗彬彩彫得徙從徘御徠徜恿患悉悠您惋悴惦悽"],
["b1a1","情悻悵惜悼惘惕惆惟悸惚惇戚戛扈掠控捲掖探接捷捧掘措捱掩掉掃掛捫推掄授掙採掬排掏掀捻捩捨捺敝敖救教敗啟敏敘敕敔斜斛斬族旋旌旎晝晚晤晨晦晞曹勗望梁梯梢梓梵桿桶梱梧梗械梃棄梭梆梅梔條梨梟梡梂欲殺"],
["b240","毫毬氫涎涼淳淙液淡淌淤添淺清淇淋涯淑涮淞淹涸混淵淅淒渚涵淚淫淘淪深淮淨淆淄涪淬涿淦烹焉焊烽烯爽牽犁猜猛猖猓猙率琅琊球理現琍瓠瓶"],
["b2a1","瓷甜產略畦畢異疏痔痕疵痊痍皎盔盒盛眷眾眼眶眸眺硫硃硎祥票祭移窒窕笠笨笛第符笙笞笮粒粗粕絆絃統紮紹紼絀細紳組累終紲紱缽羞羚翌翎習耜聊聆脯脖脣脫脩脰脤舂舵舷舶船莎莞莘荸莢莖莽莫莒莊莓莉莠荷荻荼"],
["b340","莆莧處彪蛇蛀蚶蛄蚵蛆蛋蚱蚯蛉術袞袈被袒袖袍袋覓規訪訝訣訥許設訟訛訢豉豚販責貫貨貪貧赧赦趾趺軛軟這逍通逗連速逝逐逕逞造透逢逖逛途"],
["b3a1","部郭都酗野釵釦釣釧釭釩閉陪陵陳陸陰陴陶陷陬雀雪雩章竟頂頃魚鳥鹵鹿麥麻傢傍傅備傑傀傖傘傚最凱割剴創剩勞勝勛博厥啻喀喧啼喊喝喘喂喜喪喔喇喋喃喳單喟唾喲喚喻喬喱啾喉喫喙圍堯堪場堤堰報堡堝堠壹壺奠"],
["b440","婷媚婿媒媛媧孳孱寒富寓寐尊尋就嵌嵐崴嵇巽幅帽幀幃幾廊廁廂廄弼彭復循徨惑惡悲悶惠愜愣惺愕惰惻惴慨惱愎惶愉愀愒戟扉掣掌描揀揩揉揆揍"],
["b4a1","插揣提握揖揭揮捶援揪換摒揚揹敞敦敢散斑斐斯普晰晴晶景暑智晾晷曾替期朝棺棕棠棘棗椅棟棵森棧棹棒棲棣棋棍植椒椎棉棚楮棻款欺欽殘殖殼毯氮氯氬港游湔渡渲湧湊渠渥渣減湛湘渤湖湮渭渦湯渴湍渺測湃渝渾滋"],
["b540","溉渙湎湣湄湲湩湟焙焚焦焰無然煮焜牌犄犀猶猥猴猩琺琪琳琢琥琵琶琴琯琛琦琨甥甦畫番痢痛痣痙痘痞痠登發皖皓皴盜睏短硝硬硯稍稈程稅稀窘"],
["b5a1","窗窖童竣等策筆筐筒答筍筋筏筑粟粥絞結絨絕紫絮絲絡給絢絰絳善翔翕耋聒肅腕腔腋腑腎脹腆脾腌腓腴舒舜菩萃菸萍菠菅萋菁華菱菴著萊菰萌菌菽菲菊萸萎萄菜萇菔菟虛蛟蛙蛭蛔蛛蛤蛐蛞街裁裂袱覃視註詠評詞証詁"],
["b640","詔詛詐詆訴診訶詖象貂貯貼貳貽賁費賀貴買貶貿貸越超趁跎距跋跚跑跌跛跆軻軸軼辜逮逵週逸進逶鄂郵鄉郾酣酥量鈔鈕鈣鈉鈞鈍鈐鈇鈑閔閏開閑"],
["b6a1","間閒閎隊階隋陽隅隆隍陲隄雁雅雄集雇雯雲韌項順須飧飪飯飩飲飭馮馭黃黍黑亂傭債傲傳僅傾催傷傻傯僇剿剷剽募勦勤勢勣匯嗟嗨嗓嗦嗎嗜嗇嗑嗣嗤嗯嗚嗡嗅嗆嗥嗉園圓塞塑塘塗塚塔填塌塭塊塢塒塋奧嫁嫉嫌媾媽媼"],
["b740","媳嫂媲嵩嵯幌幹廉廈弒彙徬微愚意慈感想愛惹愁愈慎慌慄慍愾愴愧愍愆愷戡戢搓搾搞搪搭搽搬搏搜搔損搶搖搗搆敬斟新暗暉暇暈暖暄暘暍會榔業"],
["b7a1","楚楷楠楔極椰概楊楨楫楞楓楹榆楝楣楛歇歲毀殿毓毽溢溯滓溶滂源溝滇滅溥溘溼溺溫滑準溜滄滔溪溧溴煎煙煩煤煉照煜煬煦煌煥煞煆煨煖爺牒猷獅猿猾瑯瑚瑕瑟瑞瑁琿瑙瑛瑜當畸瘀痰瘁痲痱痺痿痴痳盞盟睛睫睦睞督"],
["b840","睹睪睬睜睥睨睢矮碎碰碗碘碌碉硼碑碓硿祺祿禁萬禽稜稚稠稔稟稞窟窠筷節筠筮筧粱粳粵經絹綑綁綏絛置罩罪署義羨群聖聘肆肄腱腰腸腥腮腳腫"],
["b8a1","腹腺腦舅艇蒂葷落萱葵葦葫葉葬葛萼萵葡董葩葭葆虞虜號蛹蜓蜈蜇蜀蛾蛻蜂蜃蜆蜊衙裟裔裙補裘裝裡裊裕裒覜解詫該詳試詩詰誇詼詣誠話誅詭詢詮詬詹詻訾詨豢貊貉賊資賈賄貲賃賂賅跡跟跨路跳跺跪跤跦躲較載軾輊"],
["b940","辟農運遊道遂達逼違遐遇遏過遍遑逾遁鄒鄗酬酪酩釉鈷鉗鈸鈽鉀鈾鉛鉋鉤鉑鈴鉉鉍鉅鈹鈿鉚閘隘隔隕雍雋雉雊雷電雹零靖靴靶預頑頓頊頒頌飼飴"],
["b9a1","飽飾馳馱馴髡鳩麂鼎鼓鼠僧僮僥僖僭僚僕像僑僱僎僩兢凳劃劂匱厭嗾嘀嘛嘗嗽嘔嘆嘉嘍嘎嗷嘖嘟嘈嘐嗶團圖塵塾境墓墊塹墅塽壽夥夢夤奪奩嫡嫦嫩嫗嫖嫘嫣孵寞寧寡寥實寨寢寤察對屢嶄嶇幛幣幕幗幔廓廖弊彆彰徹慇"],
["ba40","愿態慷慢慣慟慚慘慵截撇摘摔撤摸摟摺摑摧搴摭摻敲斡旗旖暢暨暝榜榨榕槁榮槓構榛榷榻榫榴槐槍榭槌榦槃榣歉歌氳漳演滾漓滴漩漾漠漬漏漂漢"],
["baa1","滿滯漆漱漸漲漣漕漫漯澈漪滬漁滲滌滷熔熙煽熊熄熒爾犒犖獄獐瑤瑣瑪瑰瑭甄疑瘧瘍瘋瘉瘓盡監瞄睽睿睡磁碟碧碳碩碣禎福禍種稱窪窩竭端管箕箋筵算箝箔箏箸箇箄粹粽精綻綰綜綽綾綠緊綴網綱綺綢綿綵綸維緒緇綬"],
["bb40","罰翠翡翟聞聚肇腐膀膏膈膊腿膂臧臺與舔舞艋蓉蒿蓆蓄蒙蒞蒲蒜蓋蒸蓀蓓蒐蒼蓑蓊蜿蜜蜻蜢蜥蜴蜘蝕蜷蜩裳褂裴裹裸製裨褚裯誦誌語誣認誡誓誤"],
["bba1","說誥誨誘誑誚誧豪貍貌賓賑賒赫趙趕跼輔輒輕輓辣遠遘遜遣遙遞遢遝遛鄙鄘鄞酵酸酷酴鉸銀銅銘銖鉻銓銜銨鉼銑閡閨閩閣閥閤隙障際雌雒需靼鞅韶頗領颯颱餃餅餌餉駁骯骰髦魁魂鳴鳶鳳麼鼻齊億儀僻僵價儂儈儉儅凜"],
["bc40","劇劈劉劍劊勰厲嘮嘻嘹嘲嘿嘴嘩噓噎噗噴嘶嘯嘰墀墟增墳墜墮墩墦奭嬉嫻嬋嫵嬌嬈寮寬審寫層履嶝嶔幢幟幡廢廚廟廝廣廠彈影德徵慶慧慮慝慕憂"],
["bca1","慼慰慫慾憧憐憫憎憬憚憤憔憮戮摩摯摹撞撲撈撐撰撥撓撕撩撒撮播撫撚撬撙撢撳敵敷數暮暫暴暱樣樟槨樁樞標槽模樓樊槳樂樅槭樑歐歎殤毅毆漿潼澄潑潦潔澆潭潛潸潮澎潺潰潤澗潘滕潯潠潟熟熬熱熨牖犛獎獗瑩璋璃"],
["bd40","瑾璀畿瘠瘩瘟瘤瘦瘡瘢皚皺盤瞎瞇瞌瞑瞋磋磅確磊碾磕碼磐稿稼穀稽稷稻窯窮箭箱範箴篆篇篁箠篌糊締練緯緻緘緬緝編緣線緞緩綞緙緲緹罵罷羯"],
["bda1","翩耦膛膜膝膠膚膘蔗蔽蔚蓮蔬蔭蔓蔑蔣蔡蔔蓬蔥蓿蔆螂蝴蝶蝠蝦蝸蝨蝙蝗蝌蝓衛衝褐複褒褓褕褊誼諒談諄誕請諸課諉諂調誰論諍誶誹諛豌豎豬賠賞賦賤賬賭賢賣賜質賡赭趟趣踫踐踝踢踏踩踟踡踞躺輝輛輟輩輦輪輜輞"],
["be40","輥適遮遨遭遷鄰鄭鄧鄱醇醉醋醃鋅銻銷鋪銬鋤鋁銳銼鋒鋇鋰銲閭閱霄霆震霉靠鞍鞋鞏頡頫頜颳養餓餒餘駝駐駟駛駑駕駒駙骷髮髯鬧魅魄魷魯鴆鴉"],
["bea1","鴃麩麾黎墨齒儒儘儔儐儕冀冪凝劑劓勳噙噫噹噩噤噸噪器噥噱噯噬噢噶壁墾壇壅奮嬝嬴學寰導彊憲憑憩憊懍憶憾懊懈戰擅擁擋撻撼據擄擇擂操撿擒擔撾整曆曉暹曄曇暸樽樸樺橙橫橘樹橄橢橡橋橇樵機橈歙歷氅濂澱澡"],
["bf40","濃澤濁澧澳激澹澶澦澠澴熾燉燐燒燈燕熹燎燙燜燃燄獨璜璣璘璟璞瓢甌甍瘴瘸瘺盧盥瞠瞞瞟瞥磨磚磬磧禦積穎穆穌穋窺篙簑築篤篛篡篩篦糕糖縊"],
["bfa1","縑縈縛縣縞縝縉縐罹羲翰翱翮耨膳膩膨臻興艘艙蕊蕙蕈蕨蕩蕃蕉蕭蕪蕞螃螟螞螢融衡褪褲褥褫褡親覦諦諺諫諱謀諜諧諮諾謁謂諷諭諳諶諼豫豭貓賴蹄踱踴蹂踹踵輻輯輸輳辨辦遵遴選遲遼遺鄴醒錠錶鋸錳錯錢鋼錫錄錚"],
["c040","錐錦錡錕錮錙閻隧隨險雕霎霑霖霍霓霏靛靜靦鞘頰頸頻頷頭頹頤餐館餞餛餡餚駭駢駱骸骼髻髭鬨鮑鴕鴣鴦鴨鴒鴛默黔龍龜優償儡儲勵嚎嚀嚐嚅嚇"],
["c0a1","嚏壕壓壑壎嬰嬪嬤孺尷屨嶼嶺嶽嶸幫彌徽應懂懇懦懋戲戴擎擊擘擠擰擦擬擱擢擭斂斃曙曖檀檔檄檢檜櫛檣橾檗檐檠歜殮毚氈濘濱濟濠濛濤濫濯澀濬濡濩濕濮濰燧營燮燦燥燭燬燴燠爵牆獰獲璩環璦璨癆療癌盪瞳瞪瞰瞬"],
["c140","瞧瞭矯磷磺磴磯礁禧禪穗窿簇簍篾篷簌篠糠糜糞糢糟糙糝縮績繆縷縲繃縫總縱繅繁縴縹繈縵縿縯罄翳翼聱聲聰聯聳臆臃膺臂臀膿膽臉膾臨舉艱薪"],
["c1a1","薄蕾薜薑薔薯薛薇薨薊虧蟀蟑螳蟒蟆螫螻螺蟈蟋褻褶襄褸褽覬謎謗謙講謊謠謝謄謐豁谿豳賺賽購賸賻趨蹉蹋蹈蹊轄輾轂轅輿避遽還邁邂邀鄹醣醞醜鍍鎂錨鍵鍊鍥鍋錘鍾鍬鍛鍰鍚鍔闊闋闌闈闆隱隸雖霜霞鞠韓顆颶餵騁"],
["c240","駿鮮鮫鮪鮭鴻鴿麋黏點黜黝黛鼾齋叢嚕嚮壙壘嬸彝懣戳擴擲擾攆擺擻擷斷曜朦檳檬櫃檻檸櫂檮檯歟歸殯瀉瀋濾瀆濺瀑瀏燻燼燾燸獷獵璧璿甕癖癘"],
["c2a1","癒瞽瞿瞻瞼礎禮穡穢穠竄竅簫簧簪簞簣簡糧織繕繞繚繡繒繙罈翹翻職聶臍臏舊藏薩藍藐藉薰薺薹薦蟯蟬蟲蟠覆覲觴謨謹謬謫豐贅蹙蹣蹦蹤蹟蹕軀轉轍邇邃邈醫醬釐鎔鎊鎖鎢鎳鎮鎬鎰鎘鎚鎗闔闖闐闕離雜雙雛雞霤鞣鞦"],
["c340","鞭韹額顏題顎顓颺餾餿餽餮馥騎髁鬃鬆魏魎魍鯊鯉鯽鯈鯀鵑鵝鵠黠鼕鼬儳嚥壞壟壢寵龐廬懲懷懶懵攀攏曠曝櫥櫝櫚櫓瀛瀟瀨瀚瀝瀕瀘爆爍牘犢獸"],
["c3a1","獺璽瓊瓣疇疆癟癡矇礙禱穫穩簾簿簸簽簷籀繫繭繹繩繪羅繳羶羹羸臘藩藝藪藕藤藥藷蟻蠅蠍蟹蟾襠襟襖襞譁譜識證譚譎譏譆譙贈贊蹼蹲躇蹶蹬蹺蹴轔轎辭邊邋醱醮鏡鏑鏟鏃鏈鏜鏝鏖鏢鏍鏘鏤鏗鏨關隴難霪霧靡韜韻類"],
["c440","願顛颼饅饉騖騙鬍鯨鯧鯖鯛鶉鵡鵲鵪鵬麒麗麓麴勸嚨嚷嚶嚴嚼壤孀孃孽寶巉懸懺攘攔攙曦朧櫬瀾瀰瀲爐獻瓏癢癥礦礪礬礫竇競籌籃籍糯糰辮繽繼"],
["c4a1","纂罌耀臚艦藻藹蘑藺蘆蘋蘇蘊蠔蠕襤覺觸議譬警譯譟譫贏贍躉躁躅躂醴釋鐘鐃鏽闡霰飄饒饑馨騫騰騷騵鰓鰍鹹麵黨鼯齟齣齡儷儸囁囀囂夔屬巍懼懾攝攜斕曩櫻欄櫺殲灌爛犧瓖瓔癩矓籐纏續羼蘗蘭蘚蠣蠢蠡蠟襪襬覽譴"],
["c540","護譽贓躊躍躋轟辯醺鐮鐳鐵鐺鐸鐲鐫闢霸霹露響顧顥饗驅驃驀騾髏魔魑鰭鰥鶯鶴鷂鶸麝黯鼙齜齦齧儼儻囈囊囉孿巔巒彎懿攤權歡灑灘玀瓤疊癮癬"],
["c5a1","禳籠籟聾聽臟襲襯觼讀贖贗躑躓轡酈鑄鑑鑒霽霾韃韁顫饕驕驍髒鬚鱉鰱鰾鰻鷓鷗鼴齬齪龔囌巖戀攣攫攪曬欐瓚竊籤籣籥纓纖纔臢蘸蘿蠱變邐邏鑣鑠鑤靨顯饜驚驛驗髓體髑鱔鱗鱖鷥麟黴囑壩攬灞癱癲矗罐羈蠶蠹衢讓讒"],
["c640","讖艷贛釀鑪靂靈靄韆顰驟鬢魘鱟鷹鷺鹼鹽鼇齷齲廳欖灣籬籮蠻觀躡釁鑲鑰顱饞髖鬣黌灤矚讚鑷韉驢驥纜讜躪釅鑽鑾鑼鱷鱸黷豔鑿鸚爨驪鬱鸛鸞籲"],
["c940","乂乜凵匚厂万丌乇亍囗兀屮彳丏冇与丮亓仂仉仈冘勼卬厹圠夃夬尐巿旡殳毌气爿丱丼仨仜仩仡仝仚刌匜卌圢圣夗夯宁宄尒尻屴屳帄庀庂忉戉扐氕"],
["c9a1","氶汃氿氻犮犰玊禸肊阞伎优伬仵伔仱伀价伈伝伂伅伢伓伄仴伒冱刓刉刐劦匢匟卍厊吇囡囟圮圪圴夼妀奼妅奻奾奷奿孖尕尥屼屺屻屾巟幵庄异弚彴忕忔忏扜扞扤扡扦扢扙扠扚扥旯旮朾朹朸朻机朿朼朳氘汆汒汜汏汊汔汋"],
["ca40","汌灱牞犴犵玎甪癿穵网艸艼芀艽艿虍襾邙邗邘邛邔阢阤阠阣佖伻佢佉体佤伾佧佒佟佁佘伭伳伿佡冏冹刜刞刡劭劮匉卣卲厎厏吰吷吪呔呅吙吜吥吘"],
["caa1","吽呏呁吨吤呇囮囧囥坁坅坌坉坋坒夆奀妦妘妠妗妎妢妐妏妧妡宎宒尨尪岍岏岈岋岉岒岊岆岓岕巠帊帎庋庉庌庈庍弅弝彸彶忒忑忐忭忨忮忳忡忤忣忺忯忷忻怀忴戺抃抌抎抏抔抇扱扻扺扰抁抈扷扽扲扴攷旰旴旳旲旵杅杇"],
["cb40","杙杕杌杈杝杍杚杋毐氙氚汸汧汫沄沋沏汱汯汩沚汭沇沕沜汦汳汥汻沎灴灺牣犿犽狃狆狁犺狅玕玗玓玔玒町甹疔疕皁礽耴肕肙肐肒肜芐芏芅芎芑芓"],
["cba1","芊芃芄豸迉辿邟邡邥邞邧邠阰阨阯阭丳侘佼侅佽侀侇佶佴侉侄佷佌侗佪侚佹侁佸侐侜侔侞侒侂侕佫佮冞冼冾刵刲刳剆刱劼匊匋匼厒厔咇呿咁咑咂咈呫呺呾呥呬呴呦咍呯呡呠咘呣呧呤囷囹坯坲坭坫坱坰坶垀坵坻坳坴坢"],
["cc40","坨坽夌奅妵妺姏姎妲姌姁妶妼姃姖妱妽姀姈妴姇孢孥宓宕屄屇岮岤岠岵岯岨岬岟岣岭岢岪岧岝岥岶岰岦帗帔帙弨弢弣弤彔徂彾彽忞忥怭怦怙怲怋"],
["cca1","怴怊怗怳怚怞怬怢怍怐怮怓怑怌怉怜戔戽抭抴拑抾抪抶拊抮抳抯抻抩抰抸攽斨斻昉旼昄昒昈旻昃昋昍昅旽昑昐曶朊枅杬枎枒杶杻枘枆构杴枍枌杺枟枑枙枃杽极杸杹枔欥殀歾毞氝沓泬泫泮泙沶泔沭泧沷泐泂沺泃泆泭泲"],
["cd40","泒泝沴沊沝沀泞泀洰泍泇沰泹泏泩泑炔炘炅炓炆炄炑炖炂炚炃牪狖狋狘狉狜狒狔狚狌狑玤玡玭玦玢玠玬玝瓝瓨甿畀甾疌疘皯盳盱盰盵矸矼矹矻矺"],
["cda1","矷祂礿秅穸穻竻籵糽耵肏肮肣肸肵肭舠芠苀芫芚芘芛芵芧芮芼芞芺芴芨芡芩苂芤苃芶芢虰虯虭虮豖迒迋迓迍迖迕迗邲邴邯邳邰阹阽阼阺陃俍俅俓侲俉俋俁俔俜俙侻侳俛俇俖侺俀侹俬剄剉勀勂匽卼厗厖厙厘咺咡咭咥哏"],
["ce40","哃茍咷咮哖咶哅哆咠呰咼咢咾呲哞咰垵垞垟垤垌垗垝垛垔垘垏垙垥垚垕壴复奓姡姞姮娀姱姝姺姽姼姶姤姲姷姛姩姳姵姠姾姴姭宨屌峐峘峌峗峋峛"],
["cea1","峞峚峉峇峊峖峓峔峏峈峆峎峟峸巹帡帢帣帠帤庰庤庢庛庣庥弇弮彖徆怷怹恔恲恞恅恓恇恉恛恌恀恂恟怤恄恘恦恮扂扃拏挍挋拵挎挃拫拹挏挌拸拶挀挓挔拺挕拻拰敁敃斪斿昶昡昲昵昜昦昢昳昫昺昝昴昹昮朏朐柁柲柈枺"],
["cf40","柜枻柸柘柀枷柅柫柤柟枵柍枳柷柶柮柣柂枹柎柧柰枲柼柆柭柌枮柦柛柺柉柊柃柪柋欨殂殄殶毖毘毠氠氡洨洴洭洟洼洿洒洊泚洳洄洙洺洚洑洀洝浂"],
["cfa1","洁洘洷洃洏浀洇洠洬洈洢洉洐炷炟炾炱炰炡炴炵炩牁牉牊牬牰牳牮狊狤狨狫狟狪狦狣玅珌珂珈珅玹玶玵玴珫玿珇玾珃珆玸珋瓬瓮甮畇畈疧疪癹盄眈眃眄眅眊盷盻盺矧矨砆砑砒砅砐砏砎砉砃砓祊祌祋祅祄秕种秏秖秎窀"],
["d040","穾竑笀笁籺籸籹籿粀粁紃紈紁罘羑羍羾耇耎耏耔耷胘胇胠胑胈胂胐胅胣胙胜胊胕胉胏胗胦胍臿舡芔苙苾苹茇苨茀苕茺苫苖苴苬苡苲苵茌苻苶苰苪"],
["d0a1","苤苠苺苳苭虷虴虼虳衁衎衧衪衩觓訄訇赲迣迡迮迠郱邽邿郕郅邾郇郋郈釔釓陔陏陑陓陊陎倞倅倇倓倢倰倛俵俴倳倷倬俶俷倗倜倠倧倵倯倱倎党冔冓凊凄凅凈凎剡剚剒剞剟剕剢勍匎厞唦哢唗唒哧哳哤唚哿唄唈哫唑唅哱"],
["d140","唊哻哷哸哠唎唃唋圁圂埌堲埕埒垺埆垽垼垸垶垿埇埐垹埁夎奊娙娖娭娮娕娏娗娊娞娳孬宧宭宬尃屖屔峬峿峮峱峷崀峹帩帨庨庮庪庬弳弰彧恝恚恧"],
["d1a1","恁悢悈悀悒悁悝悃悕悛悗悇悜悎戙扆拲挐捖挬捄捅挶捃揤挹捋捊挼挩捁挴捘捔捙挭捇挳捚捑挸捗捀捈敊敆旆旃旄旂晊晟晇晑朒朓栟栚桉栲栳栻桋桏栖栱栜栵栫栭栯桎桄栴栝栒栔栦栨栮桍栺栥栠欬欯欭欱欴歭肂殈毦毤"],
["d240","毨毣毢毧氥浺浣浤浶洍浡涒浘浢浭浯涑涍淯浿涆浞浧浠涗浰浼浟涂涘洯浨涋浾涀涄洖涃浻浽浵涐烜烓烑烝烋缹烢烗烒烞烠烔烍烅烆烇烚烎烡牂牸"],
["d2a1","牷牶猀狺狴狾狶狳狻猁珓珙珥珖玼珧珣珩珜珒珛珔珝珚珗珘珨瓞瓟瓴瓵甡畛畟疰痁疻痄痀疿疶疺皊盉眝眛眐眓眒眣眑眕眙眚眢眧砣砬砢砵砯砨砮砫砡砩砳砪砱祔祛祏祜祓祒祑秫秬秠秮秭秪秜秞秝窆窉窅窋窌窊窇竘笐"],
["d340","笄笓笅笏笈笊笎笉笒粄粑粊粌粈粍粅紞紝紑紎紘紖紓紟紒紏紌罜罡罞罠罝罛羖羒翃翂翀耖耾耹胺胲胹胵脁胻脀舁舯舥茳茭荄茙荑茥荖茿荁茦茜茢"],
["d3a1","荂荎茛茪茈茼荍茖茤茠茷茯茩荇荅荌荓茞茬荋茧荈虓虒蚢蚨蚖蚍蚑蚞蚇蚗蚆蚋蚚蚅蚥蚙蚡蚧蚕蚘蚎蚝蚐蚔衃衄衭衵衶衲袀衱衿衯袃衾衴衼訒豇豗豻貤貣赶赸趵趷趶軑軓迾迵适迿迻逄迼迶郖郠郙郚郣郟郥郘郛郗郜郤酐"],
["d440","酎酏釕釢釚陜陟隼飣髟鬯乿偰偪偡偞偠偓偋偝偲偈偍偁偛偊偢倕偅偟偩偫偣偤偆偀偮偳偗偑凐剫剭剬剮勖勓匭厜啵啶唼啍啐唴唪啑啢唶唵唰啒啅"],
["d4a1","唌唲啥啎唹啈唭唻啀啋圊圇埻堔埢埶埜埴堀埭埽堈埸堋埳埏堇埮埣埲埥埬埡堎埼堐埧堁堌埱埩埰堍堄奜婠婘婕婧婞娸娵婭婐婟婥婬婓婤婗婃婝婒婄婛婈媎娾婍娹婌婰婩婇婑婖婂婜孲孮寁寀屙崞崋崝崚崠崌崨崍崦崥崏"],
["d540","崰崒崣崟崮帾帴庱庴庹庲庳弶弸徛徖徟悊悐悆悾悰悺惓惔惏惤惙惝惈悱惛悷惊悿惃惍惀挲捥掊掂捽掽掞掭掝掗掫掎捯掇掐据掯捵掜捭掮捼掤挻掟"],
["d5a1","捸掅掁掑掍捰敓旍晥晡晛晙晜晢朘桹梇梐梜桭桮梮梫楖桯梣梬梩桵桴梲梏桷梒桼桫桲梪梀桱桾梛梖梋梠梉梤桸桻梑梌梊桽欶欳欷欸殑殏殍殎殌氪淀涫涴涳湴涬淩淢涷淶淔渀淈淠淟淖涾淥淜淝淛淴淊涽淭淰涺淕淂淏淉"],
["d640","淐淲淓淽淗淍淣涻烺焍烷焗烴焌烰焄烳焐烼烿焆焓焀烸烶焋焂焎牾牻牼牿猝猗猇猑猘猊猈狿猏猞玈珶珸珵琄琁珽琇琀珺珼珿琌琋珴琈畤畣痎痒痏"],
["d6a1","痋痌痑痐皏皉盓眹眯眭眱眲眴眳眽眥眻眵硈硒硉硍硊硌砦硅硐祤祧祩祪祣祫祡离秺秸秶秷窏窔窐笵筇笴笥笰笢笤笳笘笪笝笱笫笭笯笲笸笚笣粔粘粖粣紵紽紸紶紺絅紬紩絁絇紾紿絊紻紨罣羕羜羝羛翊翋翍翐翑翇翏翉耟"],
["d740","耞耛聇聃聈脘脥脙脛脭脟脬脞脡脕脧脝脢舑舸舳舺舴舲艴莐莣莨莍荺荳莤荴莏莁莕莙荵莔莩荽莃莌莝莛莪莋荾莥莯莈莗莰荿莦莇莮荶莚虙虖蚿蚷"],
["d7a1","蛂蛁蛅蚺蚰蛈蚹蚳蚸蛌蚴蚻蚼蛃蚽蚾衒袉袕袨袢袪袚袑袡袟袘袧袙袛袗袤袬袌袓袎覂觖觙觕訰訧訬訞谹谻豜豝豽貥赽赻赹趼跂趹趿跁軘軞軝軜軗軠軡逤逋逑逜逌逡郯郪郰郴郲郳郔郫郬郩酖酘酚酓酕釬釴釱釳釸釤釹釪"],
["d840","釫釷釨釮镺閆閈陼陭陫陱陯隿靪頄飥馗傛傕傔傞傋傣傃傌傎傝偨傜傒傂傇兟凔匒匑厤厧喑喨喥喭啷噅喢喓喈喏喵喁喣喒喤啽喌喦啿喕喡喎圌堩堷"],
["d8a1","堙堞堧堣堨埵塈堥堜堛堳堿堶堮堹堸堭堬堻奡媯媔媟婺媢媞婸媦婼媥媬媕媮娷媄媊媗媃媋媩婻婽媌媜媏媓媝寪寍寋寔寑寊寎尌尰崷嵃嵫嵁嵋崿崵嵑嵎嵕崳崺嵒崽崱嵙嵂崹嵉崸崼崲崶嵀嵅幄幁彘徦徥徫惉悹惌惢惎惄愔"],
["d940","惲愊愖愅惵愓惸惼惾惁愃愘愝愐惿愄愋扊掔掱掰揎揥揨揯揃撝揳揊揠揶揕揲揵摡揟掾揝揜揄揘揓揂揇揌揋揈揰揗揙攲敧敪敤敜敨敥斌斝斞斮旐旒"],
["d9a1","晼晬晻暀晱晹晪晲朁椌棓椄棜椪棬棪棱椏棖棷棫棤棶椓椐棳棡椇棌椈楰梴椑棯棆椔棸棐棽棼棨椋椊椗棎棈棝棞棦棴棑椆棔棩椕椥棇欹欻欿欼殔殗殙殕殽毰毲毳氰淼湆湇渟湉溈渼渽湅湢渫渿湁湝湳渜渳湋湀湑渻渃渮湞"],
["da40","湨湜湡渱渨湠湱湫渹渢渰湓湥渧湸湤湷湕湹湒湦渵渶湚焠焞焯烻焮焱焣焥焢焲焟焨焺焛牋牚犈犉犆犅犋猒猋猰猢猱猳猧猲猭猦猣猵猌琮琬琰琫琖"],
["daa1","琚琡琭琱琤琣琝琩琠琲瓻甯畯畬痧痚痡痦痝痟痤痗皕皒盚睆睇睄睍睅睊睎睋睌矞矬硠硤硥硜硭硱硪确硰硩硨硞硢祴祳祲祰稂稊稃稌稄窙竦竤筊笻筄筈筌筎筀筘筅粢粞粨粡絘絯絣絓絖絧絪絏絭絜絫絒絔絩絑絟絎缾缿罥"],
["db40","罦羢羠羡翗聑聏聐胾胔腃腊腒腏腇脽腍脺臦臮臷臸臹舄舼舽舿艵茻菏菹萣菀菨萒菧菤菼菶萐菆菈菫菣莿萁菝菥菘菿菡菋菎菖菵菉萉萏菞萑萆菂菳"],
["dba1","菕菺菇菑菪萓菃菬菮菄菻菗菢萛菛菾蛘蛢蛦蛓蛣蛚蛪蛝蛫蛜蛬蛩蛗蛨蛑衈衖衕袺裗袹袸裀袾袶袼袷袽袲褁裉覕覘覗觝觚觛詎詍訹詙詀詗詘詄詅詒詈詑詊詌詏豟貁貀貺貾貰貹貵趄趀趉跘跓跍跇跖跜跏跕跙跈跗跅軯軷軺"],
["dc40","軹軦軮軥軵軧軨軶軫軱軬軴軩逭逴逯鄆鄬鄄郿郼鄈郹郻鄁鄀鄇鄅鄃酡酤酟酢酠鈁鈊鈥鈃鈚鈦鈏鈌鈀鈒釿釽鈆鈄鈧鈂鈜鈤鈙鈗鈅鈖镻閍閌閐隇陾隈"],
["dca1","隉隃隀雂雈雃雱雰靬靰靮頇颩飫鳦黹亃亄亶傽傿僆傮僄僊傴僈僂傰僁傺傱僋僉傶傸凗剺剸剻剼嗃嗛嗌嗐嗋嗊嗝嗀嗔嗄嗩喿嗒喍嗏嗕嗢嗖嗈嗲嗍嗙嗂圔塓塨塤塏塍塉塯塕塎塝塙塥塛堽塣塱壼嫇嫄嫋媺媸媱媵媰媿嫈媻嫆"],
["dd40","媷嫀嫊媴媶嫍媹媐寖寘寙尟尳嵱嵣嵊嵥嵲嵬嵞嵨嵧嵢巰幏幎幊幍幋廅廌廆廋廇彀徯徭惷慉慊愫慅愶愲愮慆愯慏愩慀戠酨戣戥戤揅揱揫搐搒搉搠搤"],
["dda1","搳摃搟搕搘搹搷搢搣搌搦搰搨摁搵搯搊搚摀搥搧搋揧搛搮搡搎敯斒旓暆暌暕暐暋暊暙暔晸朠楦楟椸楎楢楱椿楅楪椹楂楗楙楺楈楉椵楬椳椽楥棰楸椴楩楀楯楄楶楘楁楴楌椻楋椷楜楏楑椲楒椯楻椼歆歅歃歂歈歁殛嗀毻毼"],
["de40","毹毷毸溛滖滈溏滀溟溓溔溠溱溹滆滒溽滁溞滉溷溰滍溦滏溲溾滃滜滘溙溒溎溍溤溡溿溳滐滊溗溮溣煇煔煒煣煠煁煝煢煲煸煪煡煂煘煃煋煰煟煐煓"],
["dea1","煄煍煚牏犍犌犑犐犎猼獂猻猺獀獊獉瑄瑊瑋瑒瑑瑗瑀瑏瑐瑎瑂瑆瑍瑔瓡瓿瓾瓽甝畹畷榃痯瘏瘃痷痾痼痹痸瘐痻痶痭痵痽皙皵盝睕睟睠睒睖睚睩睧睔睙睭矠碇碚碔碏碄碕碅碆碡碃硹碙碀碖硻祼禂祽祹稑稘稙稒稗稕稢稓"],
["df40","稛稐窣窢窞竫筦筤筭筴筩筲筥筳筱筰筡筸筶筣粲粴粯綈綆綀綍絿綅絺綎絻綃絼綌綔綄絽綒罭罫罧罨罬羦羥羧翛翜耡腤腠腷腜腩腛腢腲朡腞腶腧腯"],
["dfa1","腄腡舝艉艄艀艂艅蓱萿葖葶葹蒏蒍葥葑葀蒆葧萰葍葽葚葙葴葳葝蔇葞萷萺萴葺葃葸萲葅萩菙葋萯葂萭葟葰萹葎葌葒葯蓅蒎萻葇萶萳葨葾葄萫葠葔葮葐蜋蜄蛷蜌蛺蛖蛵蝍蛸蜎蜉蜁蛶蜍蜅裖裋裍裎裞裛裚裌裐覅覛觟觥觤"],
["e040","觡觠觢觜触詶誆詿詡訿詷誂誄詵誃誁詴詺谼豋豊豥豤豦貆貄貅賌赨赩趑趌趎趏趍趓趔趐趒跰跠跬跱跮跐跩跣跢跧跲跫跴輆軿輁輀輅輇輈輂輋遒逿"],
["e0a1","遄遉逽鄐鄍鄏鄑鄖鄔鄋鄎酮酯鉈鉒鈰鈺鉦鈳鉥鉞銃鈮鉊鉆鉭鉬鉏鉠鉧鉯鈶鉡鉰鈱鉔鉣鉐鉲鉎鉓鉌鉖鈲閟閜閞閛隒隓隑隗雎雺雽雸雵靳靷靸靲頏頍頎颬飶飹馯馲馰馵骭骫魛鳪鳭鳧麀黽僦僔僗僨僳僛僪僝僤僓僬僰僯僣僠"],
["e140","凘劀劁勩勫匰厬嘧嘕嘌嘒嗼嘏嘜嘁嘓嘂嗺嘝嘄嗿嗹墉塼墐墘墆墁塿塴墋塺墇墑墎塶墂墈塻墔墏壾奫嫜嫮嫥嫕嫪嫚嫭嫫嫳嫢嫠嫛嫬嫞嫝嫙嫨嫟孷寠"],
["e1a1","寣屣嶂嶀嵽嶆嵺嶁嵷嶊嶉嶈嵾嵼嶍嵹嵿幘幙幓廘廑廗廎廜廕廙廒廔彄彃彯徶愬愨慁慞慱慳慒慓慲慬憀慴慔慺慛慥愻慪慡慖戩戧戫搫摍摛摝摴摶摲摳摽摵摦撦摎撂摞摜摋摓摠摐摿搿摬摫摙摥摷敳斠暡暠暟朅朄朢榱榶槉"],
["e240","榠槎榖榰榬榼榑榙榎榧榍榩榾榯榿槄榽榤槔榹槊榚槏榳榓榪榡榞槙榗榐槂榵榥槆歊歍歋殞殟殠毃毄毾滎滵滱漃漥滸漷滻漮漉潎漙漚漧漘漻漒滭漊"],
["e2a1","漶潳滹滮漭潀漰漼漵滫漇漎潃漅滽滶漹漜滼漺漟漍漞漈漡熇熐熉熀熅熂熏煻熆熁熗牄牓犗犕犓獃獍獑獌瑢瑳瑱瑵瑲瑧瑮甀甂甃畽疐瘖瘈瘌瘕瘑瘊瘔皸瞁睼瞅瞂睮瞀睯睾瞃碲碪碴碭碨硾碫碞碥碠碬碢碤禘禊禋禖禕禔禓"],
["e340","禗禈禒禐稫穊稰稯稨稦窨窫窬竮箈箜箊箑箐箖箍箌箛箎箅箘劄箙箤箂粻粿粼粺綧綷緂綣綪緁緀緅綝緎緄緆緋緌綯綹綖綼綟綦綮綩綡緉罳翢翣翥翞"],
["e3a1","耤聝聜膉膆膃膇膍膌膋舕蒗蒤蒡蒟蒺蓎蓂蒬蒮蒫蒹蒴蓁蓍蒪蒚蒱蓐蒝蒧蒻蒢蒔蓇蓌蒛蒩蒯蒨蓖蒘蒶蓏蒠蓗蓔蓒蓛蒰蒑虡蜳蜣蜨蝫蝀蜮蜞蜡蜙蜛蝃蜬蝁蜾蝆蜠蜲蜪蜭蜼蜒蜺蜱蜵蝂蜦蜧蜸蜤蜚蜰蜑裷裧裱裲裺裾裮裼裶裻"],
["e440","裰裬裫覝覡覟覞觩觫觨誫誙誋誒誏誖谽豨豩賕賏賗趖踉踂跿踍跽踊踃踇踆踅跾踀踄輐輑輎輍鄣鄜鄠鄢鄟鄝鄚鄤鄡鄛酺酲酹酳銥銤鉶銛鉺銠銔銪銍"],
["e4a1","銦銚銫鉹銗鉿銣鋮銎銂銕銢鉽銈銡銊銆銌銙銧鉾銇銩銝銋鈭隞隡雿靘靽靺靾鞃鞀鞂靻鞄鞁靿韎韍頖颭颮餂餀餇馝馜駃馹馻馺駂馽駇骱髣髧鬾鬿魠魡魟鳱鳲鳵麧僿儃儰僸儆儇僶僾儋儌僽儊劋劌勱勯噈噂噌嘵噁噊噉噆噘"],
["e540","噚噀嘳嘽嘬嘾嘸嘪嘺圚墫墝墱墠墣墯墬墥墡壿嫿嫴嫽嫷嫶嬃嫸嬂嫹嬁嬇嬅嬏屧嶙嶗嶟嶒嶢嶓嶕嶠嶜嶡嶚嶞幩幝幠幜緳廛廞廡彉徲憋憃慹憱憰憢憉"],
["e5a1","憛憓憯憭憟憒憪憡憍慦憳戭摮摰撖撠撅撗撜撏撋撊撌撣撟摨撱撘敶敺敹敻斲斳暵暰暩暲暷暪暯樀樆樗槥槸樕槱槤樠槿槬槢樛樝槾樧槲槮樔槷槧橀樈槦槻樍槼槫樉樄樘樥樏槶樦樇槴樖歑殥殣殢殦氁氀毿氂潁漦潾澇濆澒"],
["e640","澍澉澌潢潏澅潚澖潶潬澂潕潲潒潐潗澔澓潝漀潡潫潽潧澐潓澋潩潿澕潣潷潪潻熲熯熛熰熠熚熩熵熝熥熞熤熡熪熜熧熳犘犚獘獒獞獟獠獝獛獡獚獙"],
["e6a1","獢璇璉璊璆璁瑽璅璈瑼瑹甈甇畾瘥瘞瘙瘝瘜瘣瘚瘨瘛皜皝皞皛瞍瞏瞉瞈磍碻磏磌磑磎磔磈磃磄磉禚禡禠禜禢禛歶稹窲窴窳箷篋箾箬篎箯箹篊箵糅糈糌糋緷緛緪緧緗緡縃緺緦緶緱緰緮緟罶羬羰羭翭翫翪翬翦翨聤聧膣膟"],
["e740","膞膕膢膙膗舖艏艓艒艐艎艑蔤蔻蔏蔀蔩蔎蔉蔍蔟蔊蔧蔜蓻蔫蓺蔈蔌蓴蔪蓲蔕蓷蓫蓳蓼蔒蓪蓩蔖蓾蔨蔝蔮蔂蓽蔞蓶蔱蔦蓧蓨蓰蓯蓹蔘蔠蔰蔋蔙蔯虢"],
["e7a1","蝖蝣蝤蝷蟡蝳蝘蝔蝛蝒蝡蝚蝑蝞蝭蝪蝐蝎蝟蝝蝯蝬蝺蝮蝜蝥蝏蝻蝵蝢蝧蝩衚褅褌褔褋褗褘褙褆褖褑褎褉覢覤覣觭觰觬諏諆誸諓諑諔諕誻諗誾諀諅諘諃誺誽諙谾豍貏賥賟賙賨賚賝賧趠趜趡趛踠踣踥踤踮踕踛踖踑踙踦踧"],
["e840","踔踒踘踓踜踗踚輬輤輘輚輠輣輖輗遳遰遯遧遫鄯鄫鄩鄪鄲鄦鄮醅醆醊醁醂醄醀鋐鋃鋄鋀鋙銶鋏鋱鋟鋘鋩鋗鋝鋌鋯鋂鋨鋊鋈鋎鋦鋍鋕鋉鋠鋞鋧鋑鋓"],
["e8a1","銵鋡鋆銴镼閬閫閮閰隤隢雓霅霈霂靚鞊鞎鞈韐韏頞頝頦頩頨頠頛頧颲餈飺餑餔餖餗餕駜駍駏駓駔駎駉駖駘駋駗駌骳髬髫髳髲髱魆魃魧魴魱魦魶魵魰魨魤魬鳼鳺鳽鳿鳷鴇鴀鳹鳻鴈鴅鴄麃黓鼏鼐儜儓儗儚儑凞匴叡噰噠噮"],
["e940","噳噦噣噭噲噞噷圜圛壈墽壉墿墺壂墼壆嬗嬙嬛嬡嬔嬓嬐嬖嬨嬚嬠嬞寯嶬嶱嶩嶧嶵嶰嶮嶪嶨嶲嶭嶯嶴幧幨幦幯廩廧廦廨廥彋徼憝憨憖懅憴懆懁懌憺"],
["e9a1","憿憸憌擗擖擐擏擉撽撉擃擛擳擙攳敿敼斢曈暾曀曊曋曏暽暻暺曌朣樴橦橉橧樲橨樾橝橭橶橛橑樨橚樻樿橁橪橤橐橏橔橯橩橠樼橞橖橕橍橎橆歕歔歖殧殪殫毈毇氄氃氆澭濋澣濇澼濎濈潞濄澽澞濊澨瀄澥澮澺澬澪濏澿澸"],
["ea40","澢濉澫濍澯澲澰燅燂熿熸燖燀燁燋燔燊燇燏熽燘熼燆燚燛犝犞獩獦獧獬獥獫獪瑿璚璠璔璒璕璡甋疀瘯瘭瘱瘽瘳瘼瘵瘲瘰皻盦瞚瞝瞡瞜瞛瞢瞣瞕瞙"],
["eaa1","瞗磝磩磥磪磞磣磛磡磢磭磟磠禤穄穈穇窶窸窵窱窷篞篣篧篝篕篥篚篨篹篔篪篢篜篫篘篟糒糔糗糐糑縒縡縗縌縟縠縓縎縜縕縚縢縋縏縖縍縔縥縤罃罻罼罺羱翯耪耩聬膱膦膮膹膵膫膰膬膴膲膷膧臲艕艖艗蕖蕅蕫蕍蕓蕡蕘"],
["eb40","蕀蕆蕤蕁蕢蕄蕑蕇蕣蔾蕛蕱蕎蕮蕵蕕蕧蕠薌蕦蕝蕔蕥蕬虣虥虤螛螏螗螓螒螈螁螖螘蝹螇螣螅螐螑螝螄螔螜螚螉褞褦褰褭褮褧褱褢褩褣褯褬褟觱諠"],
["eba1","諢諲諴諵諝謔諤諟諰諈諞諡諨諿諯諻貑貒貐賵賮賱賰賳赬赮趥趧踳踾踸蹀蹅踶踼踽蹁踰踿躽輶輮輵輲輹輷輴遶遹遻邆郺鄳鄵鄶醓醐醑醍醏錧錞錈錟錆錏鍺錸錼錛錣錒錁鍆錭錎錍鋋錝鋺錥錓鋹鋷錴錂錤鋿錩錹錵錪錔錌"],
["ec40","錋鋾錉錀鋻錖閼闍閾閹閺閶閿閵閽隩雔霋霒霐鞙鞗鞔韰韸頵頯頲餤餟餧餩馞駮駬駥駤駰駣駪駩駧骹骿骴骻髶髺髹髷鬳鮀鮅鮇魼魾魻鮂鮓鮒鮐魺鮕"],
["eca1","魽鮈鴥鴗鴠鴞鴔鴩鴝鴘鴢鴐鴙鴟麈麆麇麮麭黕黖黺鼒鼽儦儥儢儤儠儩勴嚓嚌嚍嚆嚄嚃噾嚂噿嚁壖壔壏壒嬭嬥嬲嬣嬬嬧嬦嬯嬮孻寱寲嶷幬幪徾徻懃憵憼懧懠懥懤懨懞擯擩擣擫擤擨斁斀斶旚曒檍檖檁檥檉檟檛檡檞檇檓檎"],
["ed40","檕檃檨檤檑橿檦檚檅檌檒歛殭氉濌澩濴濔濣濜濭濧濦濞濲濝濢濨燡燱燨燲燤燰燢獳獮獯璗璲璫璐璪璭璱璥璯甐甑甒甏疄癃癈癉癇皤盩瞵瞫瞲瞷瞶"],
["eda1","瞴瞱瞨矰磳磽礂磻磼磲礅磹磾礄禫禨穜穛穖穘穔穚窾竀竁簅簏篲簀篿篻簎篴簋篳簂簉簃簁篸篽簆篰篱簐簊糨縭縼繂縳顈縸縪繉繀繇縩繌縰縻縶繄縺罅罿罾罽翴翲耬膻臄臌臊臅臇膼臩艛艚艜薃薀薏薧薕薠薋薣蕻薤薚薞"],
["ee40","蕷蕼薉薡蕺蕸蕗薎薖薆薍薙薝薁薢薂薈薅蕹蕶薘薐薟虨螾螪螭蟅螰螬螹螵螼螮蟉蟃蟂蟌螷螯蟄蟊螴螶螿螸螽蟞螲褵褳褼褾襁襒褷襂覭覯覮觲觳謞"],
["eea1","謘謖謑謅謋謢謏謒謕謇謍謈謆謜謓謚豏豰豲豱豯貕貔賹赯蹎蹍蹓蹐蹌蹇轃轀邅遾鄸醚醢醛醙醟醡醝醠鎡鎃鎯鍤鍖鍇鍼鍘鍜鍶鍉鍐鍑鍠鍭鎏鍌鍪鍹鍗鍕鍒鍏鍱鍷鍻鍡鍞鍣鍧鎀鍎鍙闇闀闉闃闅閷隮隰隬霠霟霘霝霙鞚鞡鞜"],
["ef40","鞞鞝韕韔韱顁顄顊顉顅顃餥餫餬餪餳餲餯餭餱餰馘馣馡騂駺駴駷駹駸駶駻駽駾駼騃骾髾髽鬁髼魈鮚鮨鮞鮛鮦鮡鮥鮤鮆鮢鮠鮯鴳鵁鵧鴶鴮鴯鴱鴸鴰"],
["efa1","鵅鵂鵃鴾鴷鵀鴽翵鴭麊麉麍麰黈黚黻黿鼤鼣鼢齔龠儱儭儮嚘嚜嚗嚚嚝嚙奰嬼屩屪巀幭幮懘懟懭懮懱懪懰懫懖懩擿攄擽擸攁攃擼斔旛曚曛曘櫅檹檽櫡櫆檺檶檷櫇檴檭歞毉氋瀇瀌瀍瀁瀅瀔瀎濿瀀濻瀦濼濷瀊爁燿燹爃燽獶"],
["f040","璸瓀璵瓁璾璶璻瓂甔甓癜癤癙癐癓癗癚皦皽盬矂瞺磿礌礓礔礉礐礒礑禭禬穟簜簩簙簠簟簭簝簦簨簢簥簰繜繐繖繣繘繢繟繑繠繗繓羵羳翷翸聵臑臒"],
["f0a1","臐艟艞薴藆藀藃藂薳薵薽藇藄薿藋藎藈藅薱薶藒蘤薸薷薾虩蟧蟦蟢蟛蟫蟪蟥蟟蟳蟤蟔蟜蟓蟭蟘蟣螤蟗蟙蠁蟴蟨蟝襓襋襏襌襆襐襑襉謪謧謣謳謰謵譇謯謼謾謱謥謷謦謶謮謤謻謽謺豂豵貙貘貗賾贄贂贀蹜蹢蹠蹗蹖蹞蹥蹧"],
["f140","蹛蹚蹡蹝蹩蹔轆轇轈轋鄨鄺鄻鄾醨醥醧醯醪鎵鎌鎒鎷鎛鎝鎉鎧鎎鎪鎞鎦鎕鎈鎙鎟鎍鎱鎑鎲鎤鎨鎴鎣鎥闒闓闑隳雗雚巂雟雘雝霣霢霥鞬鞮鞨鞫鞤鞪"],
["f1a1","鞢鞥韗韙韖韘韺顐顑顒颸饁餼餺騏騋騉騍騄騑騊騅騇騆髀髜鬈鬄鬅鬩鬵魊魌魋鯇鯆鯃鮿鯁鮵鮸鯓鮶鯄鮹鮽鵜鵓鵏鵊鵛鵋鵙鵖鵌鵗鵒鵔鵟鵘鵚麎麌黟鼁鼀鼖鼥鼫鼪鼩鼨齌齕儴儵劖勷厴嚫嚭嚦嚧嚪嚬壚壝壛夒嬽嬾嬿巃幰"],
["f240","徿懻攇攐攍攉攌攎斄旞旝曞櫧櫠櫌櫑櫙櫋櫟櫜櫐櫫櫏櫍櫞歠殰氌瀙瀧瀠瀖瀫瀡瀢瀣瀩瀗瀤瀜瀪爌爊爇爂爅犥犦犤犣犡瓋瓅璷瓃甖癠矉矊矄矱礝礛"],
["f2a1","礡礜礗礞禰穧穨簳簼簹簬簻糬糪繶繵繸繰繷繯繺繲繴繨罋罊羃羆羷翽翾聸臗臕艤艡艣藫藱藭藙藡藨藚藗藬藲藸藘藟藣藜藑藰藦藯藞藢蠀蟺蠃蟶蟷蠉蠌蠋蠆蟼蠈蟿蠊蠂襢襚襛襗襡襜襘襝襙覈覷覶觶譐譈譊譀譓譖譔譋譕"],
["f340","譑譂譒譗豃豷豶貚贆贇贉趬趪趭趫蹭蹸蹳蹪蹯蹻軂轒轑轏轐轓辴酀鄿醰醭鏞鏇鏏鏂鏚鏐鏹鏬鏌鏙鎩鏦鏊鏔鏮鏣鏕鏄鏎鏀鏒鏧镽闚闛雡霩霫霬霨霦"],
["f3a1","鞳鞷鞶韝韞韟顜顙顝顗颿颽颻颾饈饇饃馦馧騚騕騥騝騤騛騢騠騧騣騞騜騔髂鬋鬊鬎鬌鬷鯪鯫鯠鯞鯤鯦鯢鯰鯔鯗鯬鯜鯙鯥鯕鯡鯚鵷鶁鶊鶄鶈鵱鶀鵸鶆鶋鶌鵽鵫鵴鵵鵰鵩鶅鵳鵻鶂鵯鵹鵿鶇鵨麔麑黀黼鼭齀齁齍齖齗齘匷嚲"],
["f440","嚵嚳壣孅巆巇廮廯忀忁懹攗攖攕攓旟曨曣曤櫳櫰櫪櫨櫹櫱櫮櫯瀼瀵瀯瀷瀴瀱灂瀸瀿瀺瀹灀瀻瀳灁爓爔犨獽獼璺皫皪皾盭矌矎矏矍矲礥礣礧礨礤礩"],
["f4a1","禲穮穬穭竷籉籈籊籇籅糮繻繾纁纀羺翿聹臛臙舋艨艩蘢藿蘁藾蘛蘀藶蘄蘉蘅蘌藽蠙蠐蠑蠗蠓蠖襣襦覹觷譠譪譝譨譣譥譧譭趮躆躈躄轙轖轗轕轘轚邍酃酁醷醵醲醳鐋鐓鏻鐠鐏鐔鏾鐕鐐鐨鐙鐍鏵鐀鏷鐇鐎鐖鐒鏺鐉鏸鐊鏿"],
["f540","鏼鐌鏶鐑鐆闞闠闟霮霯鞹鞻韽韾顠顢顣顟飁飂饐饎饙饌饋饓騲騴騱騬騪騶騩騮騸騭髇髊髆鬐鬒鬑鰋鰈鯷鰅鰒鯸鱀鰇鰎鰆鰗鰔鰉鶟鶙鶤鶝鶒鶘鶐鶛"],
["f5a1","鶠鶔鶜鶪鶗鶡鶚鶢鶨鶞鶣鶿鶩鶖鶦鶧麙麛麚黥黤黧黦鼰鼮齛齠齞齝齙龑儺儹劘劗囃嚽嚾孈孇巋巏廱懽攛欂櫼欃櫸欀灃灄灊灈灉灅灆爝爚爙獾甗癪矐礭礱礯籔籓糲纊纇纈纋纆纍罍羻耰臝蘘蘪蘦蘟蘣蘜蘙蘧蘮蘡蘠蘩蘞蘥"],
["f640","蠩蠝蠛蠠蠤蠜蠫衊襭襩襮襫觺譹譸譅譺譻贐贔趯躎躌轞轛轝酆酄酅醹鐿鐻鐶鐩鐽鐼鐰鐹鐪鐷鐬鑀鐱闥闤闣霵霺鞿韡顤飉飆飀饘饖騹騽驆驄驂驁騺"],
["f6a1","騿髍鬕鬗鬘鬖鬺魒鰫鰝鰜鰬鰣鰨鰩鰤鰡鶷鶶鶼鷁鷇鷊鷏鶾鷅鷃鶻鶵鷎鶹鶺鶬鷈鶱鶭鷌鶳鷍鶲鹺麜黫黮黭鼛鼘鼚鼱齎齥齤龒亹囆囅囋奱孋孌巕巑廲攡攠攦攢欋欈欉氍灕灖灗灒爞爟犩獿瓘瓕瓙瓗癭皭礵禴穰穱籗籜籙籛籚"],
["f740","糴糱纑罏羇臞艫蘴蘵蘳蘬蘲蘶蠬蠨蠦蠪蠥襱覿覾觻譾讄讂讆讅譿贕躕躔躚躒躐躖躗轠轢酇鑌鑐鑊鑋鑏鑇鑅鑈鑉鑆霿韣顪顩飋饔饛驎驓驔驌驏驈驊"],
["f7a1","驉驒驐髐鬙鬫鬻魖魕鱆鱈鰿鱄鰹鰳鱁鰼鰷鰴鰲鰽鰶鷛鷒鷞鷚鷋鷐鷜鷑鷟鷩鷙鷘鷖鷵鷕鷝麶黰鼵鼳鼲齂齫龕龢儽劙壨壧奲孍巘蠯彏戁戃戄攩攥斖曫欑欒欏毊灛灚爢玂玁玃癰矔籧籦纕艬蘺虀蘹蘼蘱蘻蘾蠰蠲蠮蠳襶襴襳觾"],
["f840","讌讎讋讈豅贙躘轤轣醼鑢鑕鑝鑗鑞韄韅頀驖驙鬞鬟鬠鱒鱘鱐鱊鱍鱋鱕鱙鱌鱎鷻鷷鷯鷣鷫鷸鷤鷶鷡鷮鷦鷲鷰鷢鷬鷴鷳鷨鷭黂黐黲黳鼆鼜鼸鼷鼶齃齏"],
["f8a1","齱齰齮齯囓囍孎屭攭曭曮欓灟灡灝灠爣瓛瓥矕礸禷禶籪纗羉艭虃蠸蠷蠵衋讔讕躞躟躠躝醾醽釂鑫鑨鑩雥靆靃靇韇韥驞髕魙鱣鱧鱦鱢鱞鱠鸂鷾鸇鸃鸆鸅鸀鸁鸉鷿鷽鸄麠鼞齆齴齵齶囔攮斸欘欙欗欚灢爦犪矘矙礹籩籫糶纚"],
["f940","纘纛纙臠臡虆虇虈襹襺襼襻觿讘讙躥躤躣鑮鑭鑯鑱鑳靉顲饟鱨鱮鱭鸋鸍鸐鸏鸒鸑麡黵鼉齇齸齻齺齹圞灦籯蠼趲躦釃鑴鑸鑶鑵驠鱴鱳鱱鱵鸔鸓黶鼊"],
["f9a1","龤灨灥糷虪蠾蠽蠿讞貜躩軉靋顳顴飌饡馫驤驦驧鬤鸕鸗齈戇欞爧虌躨钂钀钁驩驨鬮鸙爩虋讟钃鱹麷癵驫鱺鸝灩灪麤齾齉龘碁銹裏墻恒粧嫺╔╦╗╠╬╣╚╩╝╒╤╕╞╪╡╘╧╛╓╥╖╟╫╢╙╨╜║═╭╮╰╯▓"]
]

},{}],101:[function(require,module,exports){
module.exports=[
["0","\u0000",127],
["8ea1","｡",62],
["a1a1","　、。，．・：；？！゛゜´｀¨＾￣＿ヽヾゝゞ〃仝々〆〇ー―‐／＼～∥｜…‥‘’“”（）〔〕［］｛｝〈",9,"＋－±×÷＝≠＜＞≦≧∞∴♂♀°′″℃￥＄￠￡％＃＆＊＠§☆★○●◎◇"],
["a2a1","◆□■△▲▽▼※〒→←↑↓〓"],
["a2ba","∈∋⊆⊇⊂⊃∪∩"],
["a2ca","∧∨￢⇒⇔∀∃"],
["a2dc","∠⊥⌒∂∇≡≒≪≫√∽∝∵∫∬"],
["a2f2","Å‰♯♭♪†‡¶"],
["a2fe","◯"],
["a3b0","０",9],
["a3c1","Ａ",25],
["a3e1","ａ",25],
["a4a1","ぁ",82],
["a5a1","ァ",85],
["a6a1","Α",16,"Σ",6],
["a6c1","α",16,"σ",6],
["a7a1","А",5,"ЁЖ",25],
["a7d1","а",5,"ёж",25],
["a8a1","─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂"],
["ada1","①",19,"Ⅰ",9],
["adc0","㍉㌔㌢㍍㌘㌧㌃㌶㍑㍗㌍㌦㌣㌫㍊㌻㎜㎝㎞㎎㎏㏄㎡"],
["addf","㍻〝〟№㏍℡㊤",4,"㈱㈲㈹㍾㍽㍼≒≡∫∮∑√⊥∠∟⊿∵∩∪"],
["b0a1","亜唖娃阿哀愛挨姶逢葵茜穐悪握渥旭葦芦鯵梓圧斡扱宛姐虻飴絢綾鮎或粟袷安庵按暗案闇鞍杏以伊位依偉囲夷委威尉惟意慰易椅為畏異移維緯胃萎衣謂違遺医井亥域育郁磯一壱溢逸稲茨芋鰯允印咽員因姻引飲淫胤蔭"],
["b1a1","院陰隠韻吋右宇烏羽迂雨卯鵜窺丑碓臼渦嘘唄欝蔚鰻姥厩浦瓜閏噂云運雲荏餌叡営嬰影映曳栄永泳洩瑛盈穎頴英衛詠鋭液疫益駅悦謁越閲榎厭円園堰奄宴延怨掩援沿演炎焔煙燕猿縁艶苑薗遠鉛鴛塩於汚甥凹央奥往応"],
["b2a1","押旺横欧殴王翁襖鴬鴎黄岡沖荻億屋憶臆桶牡乙俺卸恩温穏音下化仮何伽価佳加可嘉夏嫁家寡科暇果架歌河火珂禍禾稼箇花苛茄荷華菓蝦課嘩貨迦過霞蚊俄峨我牙画臥芽蛾賀雅餓駕介会解回塊壊廻快怪悔恢懐戒拐改"],
["b3a1","魁晦械海灰界皆絵芥蟹開階貝凱劾外咳害崖慨概涯碍蓋街該鎧骸浬馨蛙垣柿蛎鈎劃嚇各廓拡撹格核殻獲確穫覚角赫較郭閣隔革学岳楽額顎掛笠樫橿梶鰍潟割喝恰括活渇滑葛褐轄且鰹叶椛樺鞄株兜竃蒲釜鎌噛鴨栢茅萱"],
["b4a1","粥刈苅瓦乾侃冠寒刊勘勧巻喚堪姦完官寛干幹患感慣憾換敢柑桓棺款歓汗漢澗潅環甘監看竿管簡緩缶翰肝艦莞観諌貫還鑑間閑関陥韓館舘丸含岸巌玩癌眼岩翫贋雁頑顔願企伎危喜器基奇嬉寄岐希幾忌揮机旗既期棋棄"],
["b5a1","機帰毅気汽畿祈季稀紀徽規記貴起軌輝飢騎鬼亀偽儀妓宜戯技擬欺犠疑祇義蟻誼議掬菊鞠吉吃喫桔橘詰砧杵黍却客脚虐逆丘久仇休及吸宮弓急救朽求汲泣灸球究窮笈級糾給旧牛去居巨拒拠挙渠虚許距鋸漁禦魚亨享京"],
["b6a1","供侠僑兇競共凶協匡卿叫喬境峡強彊怯恐恭挟教橋況狂狭矯胸脅興蕎郷鏡響饗驚仰凝尭暁業局曲極玉桐粁僅勤均巾錦斤欣欽琴禁禽筋緊芹菌衿襟謹近金吟銀九倶句区狗玖矩苦躯駆駈駒具愚虞喰空偶寓遇隅串櫛釧屑屈"],
["b7a1","掘窟沓靴轡窪熊隈粂栗繰桑鍬勲君薫訓群軍郡卦袈祁係傾刑兄啓圭珪型契形径恵慶慧憩掲携敬景桂渓畦稽系経継繋罫茎荊蛍計詣警軽頚鶏芸迎鯨劇戟撃激隙桁傑欠決潔穴結血訣月件倹倦健兼券剣喧圏堅嫌建憲懸拳捲"],
["b8a1","検権牽犬献研硯絹県肩見謙賢軒遣鍵険顕験鹸元原厳幻弦減源玄現絃舷言諺限乎個古呼固姑孤己庫弧戸故枯湖狐糊袴股胡菰虎誇跨鈷雇顧鼓五互伍午呉吾娯後御悟梧檎瑚碁語誤護醐乞鯉交佼侯候倖光公功効勾厚口向"],
["b9a1","后喉坑垢好孔孝宏工巧巷幸広庚康弘恒慌抗拘控攻昂晃更杭校梗構江洪浩港溝甲皇硬稿糠紅紘絞綱耕考肯肱腔膏航荒行衡講貢購郊酵鉱砿鋼閤降項香高鴻剛劫号合壕拷濠豪轟麹克刻告国穀酷鵠黒獄漉腰甑忽惚骨狛込"],
["baa1","此頃今困坤墾婚恨懇昏昆根梱混痕紺艮魂些佐叉唆嵯左差査沙瑳砂詐鎖裟坐座挫債催再最哉塞妻宰彩才採栽歳済災采犀砕砦祭斎細菜裁載際剤在材罪財冴坂阪堺榊肴咲崎埼碕鷺作削咋搾昨朔柵窄策索錯桜鮭笹匙冊刷"],
["bba1","察拶撮擦札殺薩雑皐鯖捌錆鮫皿晒三傘参山惨撒散桟燦珊産算纂蚕讃賛酸餐斬暫残仕仔伺使刺司史嗣四士始姉姿子屍市師志思指支孜斯施旨枝止死氏獅祉私糸紙紫肢脂至視詞詩試誌諮資賜雌飼歯事似侍児字寺慈持時"],
["bca1","次滋治爾璽痔磁示而耳自蒔辞汐鹿式識鴫竺軸宍雫七叱執失嫉室悉湿漆疾質実蔀篠偲柴芝屡蕊縞舎写射捨赦斜煮社紗者謝車遮蛇邪借勺尺杓灼爵酌釈錫若寂弱惹主取守手朱殊狩珠種腫趣酒首儒受呪寿授樹綬需囚収周"],
["bda1","宗就州修愁拾洲秀秋終繍習臭舟蒐衆襲讐蹴輯週酋酬集醜什住充十従戎柔汁渋獣縦重銃叔夙宿淑祝縮粛塾熟出術述俊峻春瞬竣舜駿准循旬楯殉淳準潤盾純巡遵醇順処初所暑曙渚庶緒署書薯藷諸助叙女序徐恕鋤除傷償"],
["bea1","勝匠升召哨商唱嘗奨妾娼宵将小少尚庄床廠彰承抄招掌捷昇昌昭晶松梢樟樵沼消渉湘焼焦照症省硝礁祥称章笑粧紹肖菖蒋蕉衝裳訟証詔詳象賞醤鉦鍾鐘障鞘上丈丞乗冗剰城場壌嬢常情擾条杖浄状畳穣蒸譲醸錠嘱埴飾"],
["bfa1","拭植殖燭織職色触食蝕辱尻伸信侵唇娠寝審心慎振新晋森榛浸深申疹真神秦紳臣芯薪親診身辛進針震人仁刃塵壬尋甚尽腎訊迅陣靭笥諏須酢図厨逗吹垂帥推水炊睡粋翠衰遂酔錐錘随瑞髄崇嵩数枢趨雛据杉椙菅頗雀裾"],
["c0a1","澄摺寸世瀬畝是凄制勢姓征性成政整星晴棲栖正清牲生盛精聖声製西誠誓請逝醒青静斉税脆隻席惜戚斥昔析石積籍績脊責赤跡蹟碩切拙接摂折設窃節説雪絶舌蝉仙先千占宣専尖川戦扇撰栓栴泉浅洗染潜煎煽旋穿箭線"],
["c1a1","繊羨腺舛船薦詮賎践選遷銭銑閃鮮前善漸然全禅繕膳糎噌塑岨措曾曽楚狙疏疎礎祖租粗素組蘇訴阻遡鼠僧創双叢倉喪壮奏爽宋層匝惣想捜掃挿掻操早曹巣槍槽漕燥争痩相窓糟総綜聡草荘葬蒼藻装走送遭鎗霜騒像増憎"],
["c2a1","臓蔵贈造促側則即息捉束測足速俗属賊族続卒袖其揃存孫尊損村遜他多太汰詑唾堕妥惰打柁舵楕陀駄騨体堆対耐岱帯待怠態戴替泰滞胎腿苔袋貸退逮隊黛鯛代台大第醍題鷹滝瀧卓啄宅托択拓沢濯琢託鐸濁諾茸凧蛸只"],
["c3a1","叩但達辰奪脱巽竪辿棚谷狸鱈樽誰丹単嘆坦担探旦歎淡湛炭短端箪綻耽胆蛋誕鍛団壇弾断暖檀段男談値知地弛恥智池痴稚置致蜘遅馳築畜竹筑蓄逐秩窒茶嫡着中仲宙忠抽昼柱注虫衷註酎鋳駐樗瀦猪苧著貯丁兆凋喋寵"],
["c4a1","帖帳庁弔張彫徴懲挑暢朝潮牒町眺聴脹腸蝶調諜超跳銚長頂鳥勅捗直朕沈珍賃鎮陳津墜椎槌追鎚痛通塚栂掴槻佃漬柘辻蔦綴鍔椿潰坪壷嬬紬爪吊釣鶴亭低停偵剃貞呈堤定帝底庭廷弟悌抵挺提梯汀碇禎程締艇訂諦蹄逓"],
["c5a1","邸鄭釘鼎泥摘擢敵滴的笛適鏑溺哲徹撤轍迭鉄典填天展店添纏甜貼転顛点伝殿澱田電兎吐堵塗妬屠徒斗杜渡登菟賭途都鍍砥砺努度土奴怒倒党冬凍刀唐塔塘套宕島嶋悼投搭東桃梼棟盗淘湯涛灯燈当痘祷等答筒糖統到"],
["c6a1","董蕩藤討謄豆踏逃透鐙陶頭騰闘働動同堂導憧撞洞瞳童胴萄道銅峠鴇匿得徳涜特督禿篤毒独読栃橡凸突椴届鳶苫寅酉瀞噸屯惇敦沌豚遁頓呑曇鈍奈那内乍凪薙謎灘捺鍋楢馴縄畷南楠軟難汝二尼弐迩匂賑肉虹廿日乳入"],
["c7a1","如尿韮任妊忍認濡禰祢寧葱猫熱年念捻撚燃粘乃廼之埜嚢悩濃納能脳膿農覗蚤巴把播覇杷波派琶破婆罵芭馬俳廃拝排敗杯盃牌背肺輩配倍培媒梅楳煤狽買売賠陪這蝿秤矧萩伯剥博拍柏泊白箔粕舶薄迫曝漠爆縛莫駁麦"],
["c8a1","函箱硲箸肇筈櫨幡肌畑畠八鉢溌発醗髪伐罰抜筏閥鳩噺塙蛤隼伴判半反叛帆搬斑板氾汎版犯班畔繁般藩販範釆煩頒飯挽晩番盤磐蕃蛮匪卑否妃庇彼悲扉批披斐比泌疲皮碑秘緋罷肥被誹費避非飛樋簸備尾微枇毘琵眉美"],
["c9a1","鼻柊稗匹疋髭彦膝菱肘弼必畢筆逼桧姫媛紐百謬俵彪標氷漂瓢票表評豹廟描病秒苗錨鋲蒜蛭鰭品彬斌浜瀕貧賓頻敏瓶不付埠夫婦富冨布府怖扶敷斧普浮父符腐膚芙譜負賦赴阜附侮撫武舞葡蕪部封楓風葺蕗伏副復幅服"],
["caa1","福腹複覆淵弗払沸仏物鮒分吻噴墳憤扮焚奮粉糞紛雰文聞丙併兵塀幣平弊柄並蔽閉陛米頁僻壁癖碧別瞥蔑箆偏変片篇編辺返遍便勉娩弁鞭保舗鋪圃捕歩甫補輔穂募墓慕戊暮母簿菩倣俸包呆報奉宝峰峯崩庖抱捧放方朋"],
["cba1","法泡烹砲縫胞芳萌蓬蜂褒訪豊邦鋒飽鳳鵬乏亡傍剖坊妨帽忘忙房暴望某棒冒紡肪膨謀貌貿鉾防吠頬北僕卜墨撲朴牧睦穆釦勃没殆堀幌奔本翻凡盆摩磨魔麻埋妹昧枚毎哩槙幕膜枕鮪柾鱒桝亦俣又抹末沫迄侭繭麿万慢満"],
["cca1","漫蔓味未魅巳箕岬密蜜湊蓑稔脈妙粍民眠務夢無牟矛霧鵡椋婿娘冥名命明盟迷銘鳴姪牝滅免棉綿緬面麺摸模茂妄孟毛猛盲網耗蒙儲木黙目杢勿餅尤戻籾貰問悶紋門匁也冶夜爺耶野弥矢厄役約薬訳躍靖柳薮鑓愉愈油癒"],
["cda1","諭輸唯佑優勇友宥幽悠憂揖有柚湧涌猶猷由祐裕誘遊邑郵雄融夕予余与誉輿預傭幼妖容庸揚揺擁曜楊様洋溶熔用窯羊耀葉蓉要謡踊遥陽養慾抑欲沃浴翌翼淀羅螺裸来莱頼雷洛絡落酪乱卵嵐欄濫藍蘭覧利吏履李梨理璃"],
["cea1","痢裏裡里離陸律率立葎掠略劉流溜琉留硫粒隆竜龍侶慮旅虜了亮僚両凌寮料梁涼猟療瞭稜糧良諒遼量陵領力緑倫厘林淋燐琳臨輪隣鱗麟瑠塁涙累類令伶例冷励嶺怜玲礼苓鈴隷零霊麗齢暦歴列劣烈裂廉恋憐漣煉簾練聯"],
["cfa1","蓮連錬呂魯櫓炉賂路露労婁廊弄朗楼榔浪漏牢狼篭老聾蝋郎六麓禄肋録論倭和話歪賄脇惑枠鷲亙亘鰐詫藁蕨椀湾碗腕"],
["d0a1","弌丐丕个丱丶丼丿乂乖乘亂亅豫亊舒弍于亞亟亠亢亰亳亶从仍仄仆仂仗仞仭仟价伉佚估佛佝佗佇佶侈侏侘佻佩佰侑佯來侖儘俔俟俎俘俛俑俚俐俤俥倚倨倔倪倥倅伜俶倡倩倬俾俯們倆偃假會偕偐偈做偖偬偸傀傚傅傴傲"],
["d1a1","僉僊傳僂僖僞僥僭僣僮價僵儉儁儂儖儕儔儚儡儺儷儼儻儿兀兒兌兔兢竸兩兪兮冀冂囘册冉冏冑冓冕冖冤冦冢冩冪冫决冱冲冰况冽凅凉凛几處凩凭凰凵凾刄刋刔刎刧刪刮刳刹剏剄剋剌剞剔剪剴剩剳剿剽劍劔劒剱劈劑辨"],
["d2a1","辧劬劭劼劵勁勍勗勞勣勦飭勠勳勵勸勹匆匈甸匍匐匏匕匚匣匯匱匳匸區卆卅丗卉卍凖卞卩卮夘卻卷厂厖厠厦厥厮厰厶參簒雙叟曼燮叮叨叭叺吁吽呀听吭吼吮吶吩吝呎咏呵咎呟呱呷呰咒呻咀呶咄咐咆哇咢咸咥咬哄哈咨"],
["d3a1","咫哂咤咾咼哘哥哦唏唔哽哮哭哺哢唹啀啣啌售啜啅啖啗唸唳啝喙喀咯喊喟啻啾喘喞單啼喃喩喇喨嗚嗅嗟嗄嗜嗤嗔嘔嗷嘖嗾嗽嘛嗹噎噐營嘴嘶嘲嘸噫噤嘯噬噪嚆嚀嚊嚠嚔嚏嚥嚮嚶嚴囂嚼囁囃囀囈囎囑囓囗囮囹圀囿圄圉"],
["d4a1","圈國圍圓團圖嗇圜圦圷圸坎圻址坏坩埀垈坡坿垉垓垠垳垤垪垰埃埆埔埒埓堊埖埣堋堙堝塲堡塢塋塰毀塒堽塹墅墹墟墫墺壞墻墸墮壅壓壑壗壙壘壥壜壤壟壯壺壹壻壼壽夂夊夐夛梦夥夬夭夲夸夾竒奕奐奎奚奘奢奠奧奬奩"],
["d5a1","奸妁妝佞侫妣妲姆姨姜妍姙姚娥娟娑娜娉娚婀婬婉娵娶婢婪媚媼媾嫋嫂媽嫣嫗嫦嫩嫖嫺嫻嬌嬋嬖嬲嫐嬪嬶嬾孃孅孀孑孕孚孛孥孩孰孳孵學斈孺宀它宦宸寃寇寉寔寐寤實寢寞寥寫寰寶寳尅將專對尓尠尢尨尸尹屁屆屎屓"],
["d6a1","屐屏孱屬屮乢屶屹岌岑岔妛岫岻岶岼岷峅岾峇峙峩峽峺峭嶌峪崋崕崗嵜崟崛崑崔崢崚崙崘嵌嵒嵎嵋嵬嵳嵶嶇嶄嶂嶢嶝嶬嶮嶽嶐嶷嶼巉巍巓巒巖巛巫已巵帋帚帙帑帛帶帷幄幃幀幎幗幔幟幢幤幇幵并幺麼广庠廁廂廈廐廏"],
["d7a1","廖廣廝廚廛廢廡廨廩廬廱廳廰廴廸廾弃弉彝彜弋弑弖弩弭弸彁彈彌彎弯彑彖彗彙彡彭彳彷徃徂彿徊很徑徇從徙徘徠徨徭徼忖忻忤忸忱忝悳忿怡恠怙怐怩怎怱怛怕怫怦怏怺恚恁恪恷恟恊恆恍恣恃恤恂恬恫恙悁悍惧悃悚"],
["d8a1","悄悛悖悗悒悧悋惡悸惠惓悴忰悽惆悵惘慍愕愆惶惷愀惴惺愃愡惻惱愍愎慇愾愨愧慊愿愼愬愴愽慂慄慳慷慘慙慚慫慴慯慥慱慟慝慓慵憙憖憇憬憔憚憊憑憫憮懌懊應懷懈懃懆憺懋罹懍懦懣懶懺懴懿懽懼懾戀戈戉戍戌戔戛"],
["d9a1","戞戡截戮戰戲戳扁扎扞扣扛扠扨扼抂抉找抒抓抖拔抃抔拗拑抻拏拿拆擔拈拜拌拊拂拇抛拉挌拮拱挧挂挈拯拵捐挾捍搜捏掖掎掀掫捶掣掏掉掟掵捫捩掾揩揀揆揣揉插揶揄搖搴搆搓搦搶攝搗搨搏摧摯摶摎攪撕撓撥撩撈撼"],
["daa1","據擒擅擇撻擘擂擱擧舉擠擡抬擣擯攬擶擴擲擺攀擽攘攜攅攤攣攫攴攵攷收攸畋效敖敕敍敘敞敝敲數斂斃變斛斟斫斷旃旆旁旄旌旒旛旙无旡旱杲昊昃旻杳昵昶昴昜晏晄晉晁晞晝晤晧晨晟晢晰暃暈暎暉暄暘暝曁暹曉暾暼"],
["dba1","曄暸曖曚曠昿曦曩曰曵曷朏朖朞朦朧霸朮朿朶杁朸朷杆杞杠杙杣杤枉杰枩杼杪枌枋枦枡枅枷柯枴柬枳柩枸柤柞柝柢柮枹柎柆柧檜栞框栩桀桍栲桎梳栫桙档桷桿梟梏梭梔條梛梃檮梹桴梵梠梺椏梍桾椁棊椈棘椢椦棡椌棍"],
["dca1","棔棧棕椶椒椄棗棣椥棹棠棯椨椪椚椣椡棆楹楷楜楸楫楔楾楮椹楴椽楙椰楡楞楝榁楪榲榮槐榿槁槓榾槎寨槊槝榻槃榧樮榑榠榜榕榴槞槨樂樛槿權槹槲槧樅榱樞槭樔槫樊樒櫁樣樓橄樌橲樶橸橇橢橙橦橈樸樢檐檍檠檄檢檣"],
["dda1","檗蘗檻櫃櫂檸檳檬櫞櫑櫟檪櫚櫪櫻欅蘖櫺欒欖鬱欟欸欷盜欹飮歇歃歉歐歙歔歛歟歡歸歹歿殀殄殃殍殘殕殞殤殪殫殯殲殱殳殷殼毆毋毓毟毬毫毳毯麾氈氓气氛氤氣汞汕汢汪沂沍沚沁沛汾汨汳沒沐泄泱泓沽泗泅泝沮沱沾"],
["dea1","沺泛泯泙泪洟衍洶洫洽洸洙洵洳洒洌浣涓浤浚浹浙涎涕濤涅淹渕渊涵淇淦涸淆淬淞淌淨淒淅淺淙淤淕淪淮渭湮渮渙湲湟渾渣湫渫湶湍渟湃渺湎渤滿渝游溂溪溘滉溷滓溽溯滄溲滔滕溏溥滂溟潁漑灌滬滸滾漿滲漱滯漲滌"],
["dfa1","漾漓滷澆潺潸澁澀潯潛濳潭澂潼潘澎澑濂潦澳澣澡澤澹濆澪濟濕濬濔濘濱濮濛瀉瀋濺瀑瀁瀏濾瀛瀚潴瀝瀘瀟瀰瀾瀲灑灣炙炒炯烱炬炸炳炮烟烋烝烙焉烽焜焙煥煕熈煦煢煌煖煬熏燻熄熕熨熬燗熹熾燒燉燔燎燠燬燧燵燼"],
["e0a1","燹燿爍爐爛爨爭爬爰爲爻爼爿牀牆牋牘牴牾犂犁犇犒犖犢犧犹犲狃狆狄狎狒狢狠狡狹狷倏猗猊猜猖猝猴猯猩猥猾獎獏默獗獪獨獰獸獵獻獺珈玳珎玻珀珥珮珞璢琅瑯琥珸琲琺瑕琿瑟瑙瑁瑜瑩瑰瑣瑪瑶瑾璋璞璧瓊瓏瓔珱"],
["e1a1","瓠瓣瓧瓩瓮瓲瓰瓱瓸瓷甄甃甅甌甎甍甕甓甞甦甬甼畄畍畊畉畛畆畚畩畤畧畫畭畸當疆疇畴疊疉疂疔疚疝疥疣痂疳痃疵疽疸疼疱痍痊痒痙痣痞痾痿痼瘁痰痺痲痳瘋瘍瘉瘟瘧瘠瘡瘢瘤瘴瘰瘻癇癈癆癜癘癡癢癨癩癪癧癬癰"],
["e2a1","癲癶癸發皀皃皈皋皎皖皓皙皚皰皴皸皹皺盂盍盖盒盞盡盥盧盪蘯盻眈眇眄眩眤眞眥眦眛眷眸睇睚睨睫睛睥睿睾睹瞎瞋瞑瞠瞞瞰瞶瞹瞿瞼瞽瞻矇矍矗矚矜矣矮矼砌砒礦砠礪硅碎硴碆硼碚碌碣碵碪碯磑磆磋磔碾碼磅磊磬"],
["e3a1","磧磚磽磴礇礒礑礙礬礫祀祠祗祟祚祕祓祺祿禊禝禧齋禪禮禳禹禺秉秕秧秬秡秣稈稍稘稙稠稟禀稱稻稾稷穃穗穉穡穢穩龝穰穹穽窈窗窕窘窖窩竈窰窶竅竄窿邃竇竊竍竏竕竓站竚竝竡竢竦竭竰笂笏笊笆笳笘笙笞笵笨笶筐"],
["e4a1","筺笄筍笋筌筅筵筥筴筧筰筱筬筮箝箘箟箍箜箚箋箒箏筝箙篋篁篌篏箴篆篝篩簑簔篦篥籠簀簇簓篳篷簗簍篶簣簧簪簟簷簫簽籌籃籔籏籀籐籘籟籤籖籥籬籵粃粐粤粭粢粫粡粨粳粲粱粮粹粽糀糅糂糘糒糜糢鬻糯糲糴糶糺紆"],
["e5a1","紂紜紕紊絅絋紮紲紿紵絆絳絖絎絲絨絮絏絣經綉絛綏絽綛綺綮綣綵緇綽綫總綢綯緜綸綟綰緘緝緤緞緻緲緡縅縊縣縡縒縱縟縉縋縢繆繦縻縵縹繃縷縲縺繧繝繖繞繙繚繹繪繩繼繻纃緕繽辮繿纈纉續纒纐纓纔纖纎纛纜缸缺"],
["e6a1","罅罌罍罎罐网罕罔罘罟罠罨罩罧罸羂羆羃羈羇羌羔羞羝羚羣羯羲羹羮羶羸譱翅翆翊翕翔翡翦翩翳翹飜耆耄耋耒耘耙耜耡耨耿耻聊聆聒聘聚聟聢聨聳聲聰聶聹聽聿肄肆肅肛肓肚肭冐肬胛胥胙胝胄胚胖脉胯胱脛脩脣脯腋"],
["e7a1","隋腆脾腓腑胼腱腮腥腦腴膃膈膊膀膂膠膕膤膣腟膓膩膰膵膾膸膽臀臂膺臉臍臑臙臘臈臚臟臠臧臺臻臾舁舂舅與舊舍舐舖舩舫舸舳艀艙艘艝艚艟艤艢艨艪艫舮艱艷艸艾芍芒芫芟芻芬苡苣苟苒苴苳苺莓范苻苹苞茆苜茉苙"],
["e8a1","茵茴茖茲茱荀茹荐荅茯茫茗茘莅莚莪莟莢莖茣莎莇莊荼莵荳荵莠莉莨菴萓菫菎菽萃菘萋菁菷萇菠菲萍萢萠莽萸蔆菻葭萪萼蕚蒄葷葫蒭葮蒂葩葆萬葯葹萵蓊葢蒹蒿蒟蓙蓍蒻蓚蓐蓁蓆蓖蒡蔡蓿蓴蔗蔘蔬蔟蔕蔔蓼蕀蕣蕘蕈"],
["e9a1","蕁蘂蕋蕕薀薤薈薑薊薨蕭薔薛藪薇薜蕷蕾薐藉薺藏薹藐藕藝藥藜藹蘊蘓蘋藾藺蘆蘢蘚蘰蘿虍乕虔號虧虱蚓蚣蚩蚪蚋蚌蚶蚯蛄蛆蚰蛉蠣蚫蛔蛞蛩蛬蛟蛛蛯蜒蜆蜈蜀蜃蛻蜑蜉蜍蛹蜊蜴蜿蜷蜻蜥蜩蜚蝠蝟蝸蝌蝎蝴蝗蝨蝮蝙"],
["eaa1","蝓蝣蝪蠅螢螟螂螯蟋螽蟀蟐雖螫蟄螳蟇蟆螻蟯蟲蟠蠏蠍蟾蟶蟷蠎蟒蠑蠖蠕蠢蠡蠱蠶蠹蠧蠻衄衂衒衙衞衢衫袁衾袞衵衽袵衲袂袗袒袮袙袢袍袤袰袿袱裃裄裔裘裙裝裹褂裼裴裨裲褄褌褊褓襃褞褥褪褫襁襄褻褶褸襌褝襠襞"],
["eba1","襦襤襭襪襯襴襷襾覃覈覊覓覘覡覩覦覬覯覲覺覽覿觀觚觜觝觧觴觸訃訖訐訌訛訝訥訶詁詛詒詆詈詼詭詬詢誅誂誄誨誡誑誥誦誚誣諄諍諂諚諫諳諧諤諱謔諠諢諷諞諛謌謇謚諡謖謐謗謠謳鞫謦謫謾謨譁譌譏譎證譖譛譚譫"],
["eca1","譟譬譯譴譽讀讌讎讒讓讖讙讚谺豁谿豈豌豎豐豕豢豬豸豺貂貉貅貊貍貎貔豼貘戝貭貪貽貲貳貮貶賈賁賤賣賚賽賺賻贄贅贊贇贏贍贐齎贓賍贔贖赧赭赱赳趁趙跂趾趺跏跚跖跌跛跋跪跫跟跣跼踈踉跿踝踞踐踟蹂踵踰踴蹊"],
["eda1","蹇蹉蹌蹐蹈蹙蹤蹠踪蹣蹕蹶蹲蹼躁躇躅躄躋躊躓躑躔躙躪躡躬躰軆躱躾軅軈軋軛軣軼軻軫軾輊輅輕輒輙輓輜輟輛輌輦輳輻輹轅轂輾轌轉轆轎轗轜轢轣轤辜辟辣辭辯辷迚迥迢迪迯邇迴逅迹迺逑逕逡逍逞逖逋逧逶逵逹迸"],
["eea1","遏遐遑遒逎遉逾遖遘遞遨遯遶隨遲邂遽邁邀邊邉邏邨邯邱邵郢郤扈郛鄂鄒鄙鄲鄰酊酖酘酣酥酩酳酲醋醉醂醢醫醯醪醵醴醺釀釁釉釋釐釖釟釡釛釼釵釶鈞釿鈔鈬鈕鈑鉞鉗鉅鉉鉤鉈銕鈿鉋鉐銜銖銓銛鉚鋏銹銷鋩錏鋺鍄錮"],
["efa1","錙錢錚錣錺錵錻鍜鍠鍼鍮鍖鎰鎬鎭鎔鎹鏖鏗鏨鏥鏘鏃鏝鏐鏈鏤鐚鐔鐓鐃鐇鐐鐶鐫鐵鐡鐺鑁鑒鑄鑛鑠鑢鑞鑪鈩鑰鑵鑷鑽鑚鑼鑾钁鑿閂閇閊閔閖閘閙閠閨閧閭閼閻閹閾闊濶闃闍闌闕闔闖關闡闥闢阡阨阮阯陂陌陏陋陷陜陞"],
["f0a1","陝陟陦陲陬隍隘隕隗險隧隱隲隰隴隶隸隹雎雋雉雍襍雜霍雕雹霄霆霈霓霎霑霏霖霙霤霪霰霹霽霾靄靆靈靂靉靜靠靤靦靨勒靫靱靹鞅靼鞁靺鞆鞋鞏鞐鞜鞨鞦鞣鞳鞴韃韆韈韋韜韭齏韲竟韶韵頏頌頸頤頡頷頽顆顏顋顫顯顰"],
["f1a1","顱顴顳颪颯颱颶飄飃飆飩飫餃餉餒餔餘餡餝餞餤餠餬餮餽餾饂饉饅饐饋饑饒饌饕馗馘馥馭馮馼駟駛駝駘駑駭駮駱駲駻駸騁騏騅駢騙騫騷驅驂驀驃騾驕驍驛驗驟驢驥驤驩驫驪骭骰骼髀髏髑髓體髞髟髢髣髦髯髫髮髴髱髷"],
["f2a1","髻鬆鬘鬚鬟鬢鬣鬥鬧鬨鬩鬪鬮鬯鬲魄魃魏魍魎魑魘魴鮓鮃鮑鮖鮗鮟鮠鮨鮴鯀鯊鮹鯆鯏鯑鯒鯣鯢鯤鯔鯡鰺鯲鯱鯰鰕鰔鰉鰓鰌鰆鰈鰒鰊鰄鰮鰛鰥鰤鰡鰰鱇鰲鱆鰾鱚鱠鱧鱶鱸鳧鳬鳰鴉鴈鳫鴃鴆鴪鴦鶯鴣鴟鵄鴕鴒鵁鴿鴾鵆鵈"],
["f3a1","鵝鵞鵤鵑鵐鵙鵲鶉鶇鶫鵯鵺鶚鶤鶩鶲鷄鷁鶻鶸鶺鷆鷏鷂鷙鷓鷸鷦鷭鷯鷽鸚鸛鸞鹵鹹鹽麁麈麋麌麒麕麑麝麥麩麸麪麭靡黌黎黏黐黔黜點黝黠黥黨黯黴黶黷黹黻黼黽鼇鼈皷鼕鼡鼬鼾齊齒齔齣齟齠齡齦齧齬齪齷齲齶龕龜龠"],
["f4a1","堯槇遙瑤凜熙"],
["f9a1","纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德"],
["faa1","忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱"],
["fba1","犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚"],
["fca1","釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑"],
["fcf1","ⅰ",9,"￢￤＇＂"],
["8fa2af","˘ˇ¸˙˝¯˛˚～΄΅"],
["8fa2c2","¡¦¿"],
["8fa2eb","ºª©®™¤№"],
["8fa6e1","ΆΈΉΊΪ"],
["8fa6e7","Ό"],
["8fa6e9","ΎΫ"],
["8fa6ec","Ώ"],
["8fa6f1","άέήίϊΐόςύϋΰώ"],
["8fa7c2","Ђ",10,"ЎЏ"],
["8fa7f2","ђ",10,"ўџ"],
["8fa9a1","ÆĐ"],
["8fa9a4","Ħ"],
["8fa9a6","Ĳ"],
["8fa9a8","ŁĿ"],
["8fa9ab","ŊØŒ"],
["8fa9af","ŦÞ"],
["8fa9c1","æđðħıĳĸłŀŉŋøœßŧþ"],
["8faaa1","ÁÀÄÂĂǍĀĄÅÃĆĈČÇĊĎÉÈËÊĚĖĒĘ"],
["8faaba","ĜĞĢĠĤÍÌÏÎǏİĪĮĨĴĶĹĽĻŃŇŅÑÓÒÖÔǑŐŌÕŔŘŖŚŜŠŞŤŢÚÙÜÛŬǓŰŪŲŮŨǗǛǙǕŴÝŸŶŹŽŻ"],
["8faba1","áàäâăǎāąåãćĉčçċďéèëêěėēęǵĝğ"],
["8fabbd","ġĥíìïîǐ"],
["8fabc5","īįĩĵķĺľļńňņñóòöôǒőōõŕřŗśŝšşťţúùüûŭǔűūųůũǘǜǚǖŵýÿŷźžż"],
["8fb0a1","丂丄丅丌丒丟丣两丨丫丮丯丰丵乀乁乄乇乑乚乜乣乨乩乴乵乹乿亍亖亗亝亯亹仃仐仚仛仠仡仢仨仯仱仳仵份仾仿伀伂伃伈伋伌伒伕伖众伙伮伱你伳伵伷伹伻伾佀佂佈佉佋佌佒佔佖佘佟佣佪佬佮佱佷佸佹佺佽佾侁侂侄"],
["8fb1a1","侅侉侊侌侎侐侒侓侔侗侙侚侞侟侲侷侹侻侼侽侾俀俁俅俆俈俉俋俌俍俏俒俜俠俢俰俲俼俽俿倀倁倄倇倊倌倎倐倓倗倘倛倜倝倞倢倧倮倰倲倳倵偀偁偂偅偆偊偌偎偑偒偓偗偙偟偠偢偣偦偧偪偭偰偱倻傁傃傄傆傊傎傏傐"],
["8fb2a1","傒傓傔傖傛傜傞",4,"傪傯傰傹傺傽僀僃僄僇僌僎僐僓僔僘僜僝僟僢僤僦僨僩僯僱僶僺僾儃儆儇儈儋儌儍儎僲儐儗儙儛儜儝儞儣儧儨儬儭儯儱儳儴儵儸儹兂兊兏兓兕兗兘兟兤兦兾冃冄冋冎冘冝冡冣冭冸冺冼冾冿凂"],
["8fb3a1","凈减凑凒凓凕凘凞凢凥凮凲凳凴凷刁刂刅划刓刕刖刘刢刨刱刲刵刼剅剉剕剗剘剚剜剟剠剡剦剮剷剸剹劀劂劅劊劌劓劕劖劗劘劚劜劤劥劦劧劯劰劶劷劸劺劻劽勀勄勆勈勌勏勑勔勖勛勜勡勥勨勩勪勬勰勱勴勶勷匀匃匊匋"],
["8fb4a1","匌匑匓匘匛匜匞匟匥匧匨匩匫匬匭匰匲匵匼匽匾卂卌卋卙卛卡卣卥卬卭卲卹卾厃厇厈厎厓厔厙厝厡厤厪厫厯厲厴厵厷厸厺厽叀叅叏叒叓叕叚叝叞叠另叧叵吂吓吚吡吧吨吪启吱吴吵呃呄呇呍呏呞呢呤呦呧呩呫呭呮呴呿"],
["8fb5a1","咁咃咅咈咉咍咑咕咖咜咟咡咦咧咩咪咭咮咱咷咹咺咻咿哆哊响哎哠哪哬哯哶哼哾哿唀唁唅唈唉唌唍唎唕唪唫唲唵唶唻唼唽啁啇啉啊啍啐啑啘啚啛啞啠啡啤啦啿喁喂喆喈喎喏喑喒喓喔喗喣喤喭喲喿嗁嗃嗆嗉嗋嗌嗎嗑嗒"],
["8fb6a1","嗓嗗嗘嗛嗞嗢嗩嗶嗿嘅嘈嘊嘍",5,"嘙嘬嘰嘳嘵嘷嘹嘻嘼嘽嘿噀噁噃噄噆噉噋噍噏噔噞噠噡噢噣噦噩噭噯噱噲噵嚄嚅嚈嚋嚌嚕嚙嚚嚝嚞嚟嚦嚧嚨嚩嚫嚬嚭嚱嚳嚷嚾囅囉囊囋囏囐囌囍囙囜囝囟囡囤",4,"囱囫园"],
["8fb7a1","囶囷圁圂圇圊圌圑圕圚圛圝圠圢圣圤圥圩圪圬圮圯圳圴圽圾圿坅坆坌坍坒坢坥坧坨坫坭",4,"坳坴坵坷坹坺坻坼坾垁垃垌垔垗垙垚垜垝垞垟垡垕垧垨垩垬垸垽埇埈埌埏埕埝埞埤埦埧埩埭埰埵埶埸埽埾埿堃堄堈堉埡"],
["8fb8a1","堌堍堛堞堟堠堦堧堭堲堹堿塉塌塍塏塐塕塟塡塤塧塨塸塼塿墀墁墇墈墉墊墌墍墏墐墔墖墝墠墡墢墦墩墱墲壄墼壂壈壍壎壐壒壔壖壚壝壡壢壩壳夅夆夋夌夒夓夔虁夝夡夣夤夨夯夰夳夵夶夿奃奆奒奓奙奛奝奞奟奡奣奫奭"],
["8fb9a1","奯奲奵奶她奻奼妋妌妎妒妕妗妟妤妧妭妮妯妰妳妷妺妼姁姃姄姈姊姍姒姝姞姟姣姤姧姮姯姱姲姴姷娀娄娌娍娎娒娓娞娣娤娧娨娪娭娰婄婅婇婈婌婐婕婞婣婥婧婭婷婺婻婾媋媐媓媖媙媜媞媟媠媢媧媬媱媲媳媵媸媺媻媿"],
["8fbaa1","嫄嫆嫈嫏嫚嫜嫠嫥嫪嫮嫵嫶嫽嬀嬁嬈嬗嬴嬙嬛嬝嬡嬥嬭嬸孁孋孌孒孖孞孨孮孯孼孽孾孿宁宄宆宊宎宐宑宓宔宖宨宩宬宭宯宱宲宷宺宼寀寁寍寏寖",4,"寠寯寱寴寽尌尗尞尟尣尦尩尫尬尮尰尲尵尶屙屚屜屢屣屧屨屩"],
["8fbba1","屭屰屴屵屺屻屼屽岇岈岊岏岒岝岟岠岢岣岦岪岲岴岵岺峉峋峒峝峗峮峱峲峴崁崆崍崒崫崣崤崦崧崱崴崹崽崿嵂嵃嵆嵈嵕嵑嵙嵊嵟嵠嵡嵢嵤嵪嵭嵰嵹嵺嵾嵿嶁嶃嶈嶊嶒嶓嶔嶕嶙嶛嶟嶠嶧嶫嶰嶴嶸嶹巃巇巋巐巎巘巙巠巤"],
["8fbca1","巩巸巹帀帇帍帒帔帕帘帟帠帮帨帲帵帾幋幐幉幑幖幘幛幜幞幨幪",4,"幰庀庋庎庢庤庥庨庪庬庱庳庽庾庿廆廌廋廎廑廒廔廕廜廞廥廫异弆弇弈弎弙弜弝弡弢弣弤弨弫弬弮弰弴弶弻弽弿彀彄彅彇彍彐彔彘彛彠彣彤彧"],
["8fbda1","彯彲彴彵彸彺彽彾徉徍徏徖徜徝徢徧徫徤徬徯徰徱徸忄忇忈忉忋忐",4,"忞忡忢忨忩忪忬忭忮忯忲忳忶忺忼怇怊怍怓怔怗怘怚怟怤怭怳怵恀恇恈恉恌恑恔恖恗恝恡恧恱恾恿悂悆悈悊悎悑悓悕悘悝悞悢悤悥您悰悱悷"],
["8fbea1","悻悾惂惄惈惉惊惋惎惏惔惕惙惛惝惞惢惥惲惵惸惼惽愂愇愊愌愐",4,"愖愗愙愜愞愢愪愫愰愱愵愶愷愹慁慅慆慉慞慠慬慲慸慻慼慿憀憁憃憄憋憍憒憓憗憘憜憝憟憠憥憨憪憭憸憹憼懀懁懂懎懏懕懜懝懞懟懡懢懧懩懥"],
["8fbfa1","懬懭懯戁戃戄戇戓戕戜戠戢戣戧戩戫戹戽扂扃扄扆扌扐扑扒扔扖扚扜扤扭扯扳扺扽抍抎抏抐抦抨抳抶抷抺抾抿拄拎拕拖拚拪拲拴拼拽挃挄挊挋挍挐挓挖挘挩挪挭挵挶挹挼捁捂捃捄捆捊捋捎捒捓捔捘捛捥捦捬捭捱捴捵"],
["8fc0a1","捸捼捽捿掂掄掇掊掐掔掕掙掚掞掤掦掭掮掯掽揁揅揈揎揑揓揔揕揜揠揥揪揬揲揳揵揸揹搉搊搐搒搔搘搞搠搢搤搥搩搪搯搰搵搽搿摋摏摑摒摓摔摚摛摜摝摟摠摡摣摭摳摴摻摽撅撇撏撐撑撘撙撛撝撟撡撣撦撨撬撳撽撾撿"],
["8fc1a1","擄擉擊擋擌擎擐擑擕擗擤擥擩擪擭擰擵擷擻擿攁攄攈攉攊攏攓攔攖攙攛攞攟攢攦攩攮攱攺攼攽敃敇敉敐敒敔敟敠敧敫敺敽斁斅斊斒斕斘斝斠斣斦斮斲斳斴斿旂旈旉旎旐旔旖旘旟旰旲旴旵旹旾旿昀昄昈昉昍昑昒昕昖昝"],
["8fc2a1","昞昡昢昣昤昦昩昪昫昬昮昰昱昳昹昷晀晅晆晊晌晑晎晗晘晙晛晜晠晡曻晪晫晬晾晳晵晿晷晸晹晻暀晼暋暌暍暐暒暙暚暛暜暟暠暤暭暱暲暵暻暿曀曂曃曈曌曎曏曔曛曟曨曫曬曮曺朅朇朎朓朙朜朠朢朳朾杅杇杈杌杔杕杝"],
["8fc3a1","杦杬杮杴杶杻极构枎枏枑枓枖枘枙枛枰枱枲枵枻枼枽柹柀柂柃柅柈柉柒柗柙柜柡柦柰柲柶柷桒栔栙栝栟栨栧栬栭栯栰栱栳栻栿桄桅桊桌桕桗桘桛桫桮",4,"桵桹桺桻桼梂梄梆梈梖梘梚梜梡梣梥梩梪梮梲梻棅棈棌棏"],
["8fc4a1","棐棑棓棖棙棜棝棥棨棪棫棬棭棰棱棵棶棻棼棽椆椉椊椐椑椓椖椗椱椳椵椸椻楂楅楉楎楗楛楣楤楥楦楨楩楬楰楱楲楺楻楿榀榍榒榖榘榡榥榦榨榫榭榯榷榸榺榼槅槈槑槖槗槢槥槮槯槱槳槵槾樀樁樃樏樑樕樚樝樠樤樨樰樲"],
["8fc5a1","樴樷樻樾樿橅橆橉橊橎橐橑橒橕橖橛橤橧橪橱橳橾檁檃檆檇檉檋檑檛檝檞檟檥檫檯檰檱檴檽檾檿櫆櫉櫈櫌櫐櫔櫕櫖櫜櫝櫤櫧櫬櫰櫱櫲櫼櫽欂欃欆欇欉欏欐欑欗欛欞欤欨欫欬欯欵欶欻欿歆歊歍歒歖歘歝歠歧歫歮歰歵歽"],
["8fc6a1","歾殂殅殗殛殟殠殢殣殨殩殬殭殮殰殸殹殽殾毃毄毉毌毖毚毡毣毦毧毮毱毷毹毿氂氄氅氉氍氎氐氒氙氟氦氧氨氬氮氳氵氶氺氻氿汊汋汍汏汒汔汙汛汜汫汭汯汴汶汸汹汻沅沆沇沉沔沕沗沘沜沟沰沲沴泂泆泍泏泐泑泒泔泖"],
["8fc7a1","泚泜泠泧泩泫泬泮泲泴洄洇洊洎洏洑洓洚洦洧洨汧洮洯洱洹洼洿浗浞浟浡浥浧浯浰浼涂涇涑涒涔涖涗涘涪涬涴涷涹涽涿淄淈淊淎淏淖淛淝淟淠淢淥淩淯淰淴淶淼渀渄渞渢渧渲渶渹渻渼湄湅湈湉湋湏湑湒湓湔湗湜湝湞"],
["8fc8a1","湢湣湨湳湻湽溍溓溙溠溧溭溮溱溳溻溿滀滁滃滇滈滊滍滎滏滫滭滮滹滻滽漄漈漊漌漍漖漘漚漛漦漩漪漯漰漳漶漻漼漭潏潑潒潓潗潙潚潝潞潡潢潨潬潽潾澃澇澈澋澌澍澐澒澓澔澖澚澟澠澥澦澧澨澮澯澰澵澶澼濅濇濈濊"],
["8fc9a1","濚濞濨濩濰濵濹濼濽瀀瀅瀆瀇瀍瀗瀠瀣瀯瀴瀷瀹瀼灃灄灈灉灊灋灔灕灝灞灎灤灥灬灮灵灶灾炁炅炆炔",4,"炛炤炫炰炱炴炷烊烑烓烔烕烖烘烜烤烺焃",4,"焋焌焏焞焠焫焭焯焰焱焸煁煅煆煇煊煋煐煒煗煚煜煞煠"],
["8fcaa1","煨煹熀熅熇熌熒熚熛熠熢熯熰熲熳熺熿燀燁燄燋燌燓燖燙燚燜燸燾爀爇爈爉爓爗爚爝爟爤爫爯爴爸爹牁牂牃牅牎牏牐牓牕牖牚牜牞牠牣牨牫牮牯牱牷牸牻牼牿犄犉犍犎犓犛犨犭犮犱犴犾狁狇狉狌狕狖狘狟狥狳狴狺狻"],
["8fcba1","狾猂猄猅猇猋猍猒猓猘猙猞猢猤猧猨猬猱猲猵猺猻猽獃獍獐獒獖獘獝獞獟獠獦獧獩獫獬獮獯獱獷獹獼玀玁玃玅玆玎玐玓玕玗玘玜玞玟玠玢玥玦玪玫玭玵玷玹玼玽玿珅珆珉珋珌珏珒珓珖珙珝珡珣珦珧珩珴珵珷珹珺珻珽"],
["8fcca1","珿琀琁琄琇琊琑琚琛琤琦琨",9,"琹瑀瑃瑄瑆瑇瑋瑍瑑瑒瑗瑝瑢瑦瑧瑨瑫瑭瑮瑱瑲璀璁璅璆璇璉璏璐璑璒璘璙璚璜璟璠璡璣璦璨璩璪璫璮璯璱璲璵璹璻璿瓈瓉瓌瓐瓓瓘瓚瓛瓞瓟瓤瓨瓪瓫瓯瓴瓺瓻瓼瓿甆"],
["8fcda1","甒甖甗甠甡甤甧甩甪甯甶甹甽甾甿畀畃畇畈畎畐畒畗畞畟畡畯畱畹",5,"疁疅疐疒疓疕疙疜疢疤疴疺疿痀痁痄痆痌痎痏痗痜痟痠痡痤痧痬痮痯痱痹瘀瘂瘃瘄瘇瘈瘊瘌瘏瘒瘓瘕瘖瘙瘛瘜瘝瘞瘣瘥瘦瘩瘭瘲瘳瘵瘸瘹"],
["8fcea1","瘺瘼癊癀癁癃癄癅癉癋癕癙癟癤癥癭癮癯癱癴皁皅皌皍皕皛皜皝皟皠皢",6,"皪皭皽盁盅盉盋盌盎盔盙盠盦盨盬盰盱盶盹盼眀眆眊眎眒眔眕眗眙眚眜眢眨眭眮眯眴眵眶眹眽眾睂睅睆睊睍睎睏睒睖睗睜睞睟睠睢"],
["8fcfa1","睤睧睪睬睰睲睳睴睺睽瞀瞄瞌瞍瞔瞕瞖瞚瞟瞢瞧瞪瞮瞯瞱瞵瞾矃矉矑矒矕矙矞矟矠矤矦矪矬矰矱矴矸矻砅砆砉砍砎砑砝砡砢砣砭砮砰砵砷硃硄硇硈硌硎硒硜硞硠硡硣硤硨硪确硺硾碊碏碔碘碡碝碞碟碤碨碬碭碰碱碲碳"],
["8fd0a1","碻碽碿磇磈磉磌磎磒磓磕磖磤磛磟磠磡磦磪磲磳礀磶磷磺磻磿礆礌礐礚礜礞礟礠礥礧礩礭礱礴礵礻礽礿祄祅祆祊祋祏祑祔祘祛祜祧祩祫祲祹祻祼祾禋禌禑禓禔禕禖禘禛禜禡禨禩禫禯禱禴禸离秂秄秇秈秊秏秔秖秚秝秞"],
["8fd1a1","秠秢秥秪秫秭秱秸秼稂稃稇稉稊稌稑稕稛稞稡稧稫稭稯稰稴稵稸稹稺穄穅穇穈穌穕穖穙穜穝穟穠穥穧穪穭穵穸穾窀窂窅窆窊窋窐窑窔窞窠窣窬窳窵窹窻窼竆竉竌竎竑竛竨竩竫竬竱竴竻竽竾笇笔笟笣笧笩笪笫笭笮笯笰"],
["8fd2a1","笱笴笽笿筀筁筇筎筕筠筤筦筩筪筭筯筲筳筷箄箉箎箐箑箖箛箞箠箥箬箯箰箲箵箶箺箻箼箽篂篅篈篊篔篖篗篙篚篛篨篪篲篴篵篸篹篺篼篾簁簂簃簄簆簉簋簌簎簏簙簛簠簥簦簨簬簱簳簴簶簹簺籆籊籕籑籒籓籙",5],
["8fd3a1","籡籣籧籩籭籮籰籲籹籼籽粆粇粏粔粞粠粦粰粶粷粺粻粼粿糄糇糈糉糍糏糓糔糕糗糙糚糝糦糩糫糵紃紇紈紉紏紑紒紓紖紝紞紣紦紪紭紱紼紽紾絀絁絇絈絍絑絓絗絙絚絜絝絥絧絪絰絸絺絻絿綁綂綃綅綆綈綋綌綍綑綖綗綝"],
["8fd4a1","綞綦綧綪綳綶綷綹緂",4,"緌緍緎緗緙縀緢緥緦緪緫緭緱緵緶緹緺縈縐縑縕縗縜縝縠縧縨縬縭縯縳縶縿繄繅繇繎繐繒繘繟繡繢繥繫繮繯繳繸繾纁纆纇纊纍纑纕纘纚纝纞缼缻缽缾缿罃罄罇罏罒罓罛罜罝罡罣罤罥罦罭"],
["8fd5a1","罱罽罾罿羀羋羍羏羐羑羖羗羜羡羢羦羪羭羴羼羿翀翃翈翎翏翛翟翣翥翨翬翮翯翲翺翽翾翿耇耈耊耍耎耏耑耓耔耖耝耞耟耠耤耦耬耮耰耴耵耷耹耺耼耾聀聄聠聤聦聭聱聵肁肈肎肜肞肦肧肫肸肹胈胍胏胒胔胕胗胘胠胭胮"],
["8fd6a1","胰胲胳胶胹胺胾脃脋脖脗脘脜脞脠脤脧脬脰脵脺脼腅腇腊腌腒腗腠腡腧腨腩腭腯腷膁膐膄膅膆膋膎膖膘膛膞膢膮膲膴膻臋臃臅臊臎臏臕臗臛臝臞臡臤臫臬臰臱臲臵臶臸臹臽臿舀舃舏舓舔舙舚舝舡舢舨舲舴舺艃艄艅艆"],
["8fd7a1","艋艎艏艑艖艜艠艣艧艭艴艻艽艿芀芁芃芄芇芉芊芎芑芔芖芘芚芛芠芡芣芤芧芨芩芪芮芰芲芴芷芺芼芾芿苆苐苕苚苠苢苤苨苪苭苯苶苷苽苾茀茁茇茈茊茋荔茛茝茞茟茡茢茬茭茮茰茳茷茺茼茽荂荃荄荇荍荎荑荕荖荗荰荸"],
["8fd8a1","荽荿莀莂莄莆莍莒莔莕莘莙莛莜莝莦莧莩莬莾莿菀菇菉菏菐菑菔菝荓菨菪菶菸菹菼萁萆萊萏萑萕萙莭萯萹葅葇葈葊葍葏葑葒葖葘葙葚葜葠葤葥葧葪葰葳葴葶葸葼葽蒁蒅蒒蒓蒕蒞蒦蒨蒩蒪蒯蒱蒴蒺蒽蒾蓀蓂蓇蓈蓌蓏蓓"],
["8fd9a1","蓜蓧蓪蓯蓰蓱蓲蓷蔲蓺蓻蓽蔂蔃蔇蔌蔎蔐蔜蔞蔢蔣蔤蔥蔧蔪蔫蔯蔳蔴蔶蔿蕆蕏",4,"蕖蕙蕜",6,"蕤蕫蕯蕹蕺蕻蕽蕿薁薅薆薉薋薌薏薓薘薝薟薠薢薥薧薴薶薷薸薼薽薾薿藂藇藊藋藎薭藘藚藟藠藦藨藭藳藶藼"],
["8fdaa1","藿蘀蘄蘅蘍蘎蘐蘑蘒蘘蘙蘛蘞蘡蘧蘩蘶蘸蘺蘼蘽虀虂虆虒虓虖虗虘虙虝虠",4,"虩虬虯虵虶虷虺蚍蚑蚖蚘蚚蚜蚡蚦蚧蚨蚭蚱蚳蚴蚵蚷蚸蚹蚿蛀蛁蛃蛅蛑蛒蛕蛗蛚蛜蛠蛣蛥蛧蚈蛺蛼蛽蜄蜅蜇蜋蜎蜏蜐蜓蜔蜙蜞蜟蜡蜣"],
["8fdba1","蜨蜮蜯蜱蜲蜹蜺蜼蜽蜾蝀蝃蝅蝍蝘蝝蝡蝤蝥蝯蝱蝲蝻螃",6,"螋螌螐螓螕螗螘螙螞螠螣螧螬螭螮螱螵螾螿蟁蟈蟉蟊蟎蟕蟖蟙蟚蟜蟟蟢蟣蟤蟪蟫蟭蟱蟳蟸蟺蟿蠁蠃蠆蠉蠊蠋蠐蠙蠒蠓蠔蠘蠚蠛蠜蠞蠟蠨蠭蠮蠰蠲蠵"],
["8fdca1","蠺蠼衁衃衅衈衉衊衋衎衑衕衖衘衚衜衟衠衤衩衱衹衻袀袘袚袛袜袟袠袨袪袺袽袾裀裊",4,"裑裒裓裛裞裧裯裰裱裵裷褁褆褍褎褏褕褖褘褙褚褜褠褦褧褨褰褱褲褵褹褺褾襀襂襅襆襉襏襒襗襚襛襜襡襢襣襫襮襰襳襵襺"],
["8fdda1","襻襼襽覉覍覐覔覕覛覜覟覠覥覰覴覵覶覷覼觔",4,"觥觩觫觭觱觳觶觹觽觿訄訅訇訏訑訒訔訕訞訠訢訤訦訫訬訯訵訷訽訾詀詃詅詇詉詍詎詓詖詗詘詜詝詡詥詧詵詶詷詹詺詻詾詿誀誃誆誋誏誐誒誖誗誙誟誧誩誮誯誳"],
["8fdea1","誶誷誻誾諃諆諈諉諊諑諓諔諕諗諝諟諬諰諴諵諶諼諿謅謆謋謑謜謞謟謊謭謰謷謼譂",4,"譈譒譓譔譙譍譞譣譭譶譸譹譼譾讁讄讅讋讍讏讔讕讜讞讟谸谹谽谾豅豇豉豋豏豑豓豔豗豘豛豝豙豣豤豦豨豩豭豳豵豶豻豾貆"],
["8fdfa1","貇貋貐貒貓貙貛貜貤貹貺賅賆賉賋賏賖賕賙賝賡賨賬賯賰賲賵賷賸賾賿贁贃贉贒贗贛赥赩赬赮赿趂趄趈趍趐趑趕趞趟趠趦趫趬趯趲趵趷趹趻跀跅跆跇跈跊跎跑跔跕跗跙跤跥跧跬跰趼跱跲跴跽踁踄踅踆踋踑踔踖踠踡踢"],
["8fe0a1","踣踦踧踱踳踶踷踸踹踽蹀蹁蹋蹍蹎蹏蹔蹛蹜蹝蹞蹡蹢蹩蹬蹭蹯蹰蹱蹹蹺蹻躂躃躉躐躒躕躚躛躝躞躢躧躩躭躮躳躵躺躻軀軁軃軄軇軏軑軔軜軨軮軰軱軷軹軺軭輀輂輇輈輏輐輖輗輘輞輠輡輣輥輧輨輬輭輮輴輵輶輷輺轀轁"],
["8fe1a1","轃轇轏轑",4,"轘轝轞轥辝辠辡辤辥辦辵辶辸达迀迁迆迊迋迍运迒迓迕迠迣迤迨迮迱迵迶迻迾适逄逈逌逘逛逨逩逯逪逬逭逳逴逷逿遃遄遌遛遝遢遦遧遬遰遴遹邅邈邋邌邎邐邕邗邘邙邛邠邡邢邥邰邲邳邴邶邽郌邾郃"],
["8fe2a1","郄郅郇郈郕郗郘郙郜郝郟郥郒郶郫郯郰郴郾郿鄀鄄鄅鄆鄈鄍鄐鄔鄖鄗鄘鄚鄜鄞鄠鄥鄢鄣鄧鄩鄮鄯鄱鄴鄶鄷鄹鄺鄼鄽酃酇酈酏酓酗酙酚酛酡酤酧酭酴酹酺酻醁醃醅醆醊醎醑醓醔醕醘醞醡醦醨醬醭醮醰醱醲醳醶醻醼醽醿"],
["8fe3a1","釂釃釅釓釔釗釙釚釞釤釥釩釪釬",5,"釷釹釻釽鈀鈁鈄鈅鈆鈇鈉鈊鈌鈐鈒鈓鈖鈘鈜鈝鈣鈤鈥鈦鈨鈮鈯鈰鈳鈵鈶鈸鈹鈺鈼鈾鉀鉂鉃鉆鉇鉊鉍鉎鉏鉑鉘鉙鉜鉝鉠鉡鉥鉧鉨鉩鉮鉯鉰鉵",4,"鉻鉼鉽鉿銈銉銊銍銎銒銗"],
["8fe4a1","銙銟銠銤銥銧銨銫銯銲銶銸銺銻銼銽銿",4,"鋅鋆鋇鋈鋋鋌鋍鋎鋐鋓鋕鋗鋘鋙鋜鋝鋟鋠鋡鋣鋥鋧鋨鋬鋮鋰鋹鋻鋿錀錂錈錍錑錔錕錜錝錞錟錡錤錥錧錩錪錳錴錶錷鍇鍈鍉鍐鍑鍒鍕鍗鍘鍚鍞鍤鍥鍧鍩鍪鍭鍯鍰鍱鍳鍴鍶"],
["8fe5a1","鍺鍽鍿鎀鎁鎂鎈鎊鎋鎍鎏鎒鎕鎘鎛鎞鎡鎣鎤鎦鎨鎫鎴鎵鎶鎺鎩鏁鏄鏅鏆鏇鏉",4,"鏓鏙鏜鏞鏟鏢鏦鏧鏹鏷鏸鏺鏻鏽鐁鐂鐄鐈鐉鐍鐎鐏鐕鐖鐗鐟鐮鐯鐱鐲鐳鐴鐻鐿鐽鑃鑅鑈鑊鑌鑕鑙鑜鑟鑡鑣鑨鑫鑭鑮鑯鑱鑲钄钃镸镹"],
["8fe6a1","镾閄閈閌閍閎閝閞閟閡閦閩閫閬閴閶閺閽閿闆闈闉闋闐闑闒闓闙闚闝闞闟闠闤闦阝阞阢阤阥阦阬阱阳阷阸阹阺阼阽陁陒陔陖陗陘陡陮陴陻陼陾陿隁隂隃隄隉隑隖隚隝隟隤隥隦隩隮隯隳隺雊雒嶲雘雚雝雞雟雩雯雱雺霂"],
["8fe7a1","霃霅霉霚霛霝霡霢霣霨霱霳靁靃靊靎靏靕靗靘靚靛靣靧靪靮靳靶靷靸靻靽靿鞀鞉鞕鞖鞗鞙鞚鞞鞟鞢鞬鞮鞱鞲鞵鞶鞸鞹鞺鞼鞾鞿韁韄韅韇韉韊韌韍韎韐韑韔韗韘韙韝韞韠韛韡韤韯韱韴韷韸韺頇頊頙頍頎頔頖頜頞頠頣頦"],
["8fe8a1","頫頮頯頰頲頳頵頥頾顄顇顊顑顒顓顖顗顙顚顢顣顥顦顪顬颫颭颮颰颴颷颸颺颻颿飂飅飈飌飡飣飥飦飧飪飳飶餂餇餈餑餕餖餗餚餛餜餟餢餦餧餫餱",4,"餹餺餻餼饀饁饆饇饈饍饎饔饘饙饛饜饞饟饠馛馝馟馦馰馱馲馵"],
["8fe9a1","馹馺馽馿駃駉駓駔駙駚駜駞駧駪駫駬駰駴駵駹駽駾騂騃騄騋騌騐騑騖騞騠騢騣騤騧騭騮騳騵騶騸驇驁驄驊驋驌驎驑驔驖驝骪骬骮骯骲骴骵骶骹骻骾骿髁髃髆髈髎髐髒髕髖髗髛髜髠髤髥髧髩髬髲髳髵髹髺髽髿",4],
["8feaa1","鬄鬅鬈鬉鬋鬌鬍鬎鬐鬒鬖鬙鬛鬜鬠鬦鬫鬭鬳鬴鬵鬷鬹鬺鬽魈魋魌魕魖魗魛魞魡魣魥魦魨魪",4,"魳魵魷魸魹魿鮀鮄鮅鮆鮇鮉鮊鮋鮍鮏鮐鮔鮚鮝鮞鮦鮧鮩鮬鮰鮱鮲鮷鮸鮻鮼鮾鮿鯁鯇鯈鯎鯐鯗鯘鯝鯟鯥鯧鯪鯫鯯鯳鯷鯸"],
["8feba1","鯹鯺鯽鯿鰀鰂鰋鰏鰑鰖鰘鰙鰚鰜鰞鰢鰣鰦",4,"鰱鰵鰶鰷鰽鱁鱃鱄鱅鱉鱊鱎鱏鱐鱓鱔鱖鱘鱛鱝鱞鱟鱣鱩鱪鱜鱫鱨鱮鱰鱲鱵鱷鱻鳦鳲鳷鳹鴋鴂鴑鴗鴘鴜鴝鴞鴯鴰鴲鴳鴴鴺鴼鵅鴽鵂鵃鵇鵊鵓鵔鵟鵣鵢鵥鵩鵪鵫鵰鵶鵷鵻"],
["8feca1","鵼鵾鶃鶄鶆鶊鶍鶎鶒鶓鶕鶖鶗鶘鶡鶪鶬鶮鶱鶵鶹鶼鶿鷃鷇鷉鷊鷔鷕鷖鷗鷚鷞鷟鷠鷥鷧鷩鷫鷮鷰鷳鷴鷾鸊鸂鸇鸎鸐鸑鸒鸕鸖鸙鸜鸝鹺鹻鹼麀麂麃麄麅麇麎麏麖麘麛麞麤麨麬麮麯麰麳麴麵黆黈黋黕黟黤黧黬黭黮黰黱黲黵"],
["8feda1","黸黿鼂鼃鼉鼏鼐鼑鼒鼔鼖鼗鼙鼚鼛鼟鼢鼦鼪鼫鼯鼱鼲鼴鼷鼹鼺鼼鼽鼿齁齃",4,"齓齕齖齗齘齚齝齞齨齩齭",4,"齳齵齺齽龏龐龑龒龔龖龗龞龡龢龣龥"]
]

},{}],102:[function(require,module,exports){
module.exports={"uChars":[128,165,169,178,184,216,226,235,238,244,248,251,253,258,276,284,300,325,329,334,364,463,465,467,469,471,473,475,477,506,594,610,712,716,730,930,938,962,970,1026,1104,1106,8209,8215,8218,8222,8231,8241,8244,8246,8252,8365,8452,8454,8458,8471,8482,8556,8570,8596,8602,8713,8720,8722,8726,8731,8737,8740,8742,8748,8751,8760,8766,8777,8781,8787,8802,8808,8816,8854,8858,8870,8896,8979,9322,9372,9548,9588,9616,9622,9634,9652,9662,9672,9676,9680,9702,9735,9738,9793,9795,11906,11909,11913,11917,11928,11944,11947,11951,11956,11960,11964,11979,12284,12292,12312,12319,12330,12351,12436,12447,12535,12543,12586,12842,12850,12964,13200,13215,13218,13253,13263,13267,13270,13384,13428,13727,13839,13851,14617,14703,14801,14816,14964,15183,15471,15585,16471,16736,17208,17325,17330,17374,17623,17997,18018,18212,18218,18301,18318,18760,18811,18814,18820,18823,18844,18848,18872,19576,19620,19738,19887,40870,59244,59336,59367,59413,59417,59423,59431,59437,59443,59452,59460,59478,59493,63789,63866,63894,63976,63986,64016,64018,64021,64025,64034,64037,64042,65074,65093,65107,65112,65127,65132,65375,65510,65536],"gbChars":[0,36,38,45,50,81,89,95,96,100,103,104,105,109,126,133,148,172,175,179,208,306,307,308,309,310,311,312,313,341,428,443,544,545,558,741,742,749,750,805,819,820,7922,7924,7925,7927,7934,7943,7944,7945,7950,8062,8148,8149,8152,8164,8174,8236,8240,8262,8264,8374,8380,8381,8384,8388,8390,8392,8393,8394,8396,8401,8406,8416,8419,8424,8437,8439,8445,8482,8485,8496,8521,8603,8936,8946,9046,9050,9063,9066,9076,9092,9100,9108,9111,9113,9131,9162,9164,9218,9219,11329,11331,11334,11336,11346,11361,11363,11366,11370,11372,11375,11389,11682,11686,11687,11692,11694,11714,11716,11723,11725,11730,11736,11982,11989,12102,12336,12348,12350,12384,12393,12395,12397,12510,12553,12851,12962,12973,13738,13823,13919,13933,14080,14298,14585,14698,15583,15847,16318,16434,16438,16481,16729,17102,17122,17315,17320,17402,17418,17859,17909,17911,17915,17916,17936,17939,17961,18664,18703,18814,18962,19043,33469,33470,33471,33484,33485,33490,33497,33501,33505,33513,33520,33536,33550,37845,37921,37948,38029,38038,38064,38065,38066,38069,38075,38076,38078,39108,39109,39113,39114,39115,39116,39265,39394,189000]}
},{}],103:[function(require,module,exports){
module.exports=[
["a140","",62],
["a180","",32],
["a240","",62],
["a280","",32],
["a2ab","",5],
["a2e3","€"],
["a2ef",""],
["a2fd",""],
["a340","",62],
["a380","",31,"　"],
["a440","",62],
["a480","",32],
["a4f4","",10],
["a540","",62],
["a580","",32],
["a5f7","",7],
["a640","",62],
["a680","",32],
["a6b9","",7],
["a6d9","",6],
["a6ec",""],
["a6f3",""],
["a6f6","",8],
["a740","",62],
["a780","",32],
["a7c2","",14],
["a7f2","",12],
["a896","",10],
["a8bc",""],
["a8bf","ǹ"],
["a8c1",""],
["a8ea","",20],
["a958",""],
["a95b",""],
["a95d",""],
["a989","〾⿰",11],
["a997","",12],
["a9f0","",14],
["aaa1","",93],
["aba1","",93],
["aca1","",93],
["ada1","",93],
["aea1","",93],
["afa1","",93],
["d7fa","",4],
["f8a1","",93],
["f9a1","",93],
["faa1","",93],
["fba1","",93],
["fca1","",93],
["fda1","",93],
["fe50","⺁⺄㑳㑇⺈⺋㖞㘚㘎⺌⺗㥮㤘㧏㧟㩳㧐㭎㱮㳠⺧⺪䁖䅟⺮䌷⺳⺶⺷䎱䎬⺻䏝䓖䙡䙌"],
["fe80","䜣䜩䝼䞍⻊䥇䥺䥽䦂䦃䦅䦆䦟䦛䦷䦶䲣䲟䲠䲡䱷䲢䴓",6,"䶮",93]
]

},{}],104:[function(require,module,exports){
module.exports=[
["0","\u0000",128],
["a1","｡",62],
["8140","　、。，．・：；？！゛゜´｀¨＾￣＿ヽヾゝゞ〃仝々〆〇ー―‐／＼～∥｜…‥‘’“”（）〔〕［］｛｝〈",9,"＋－±×"],
["8180","÷＝≠＜＞≦≧∞∴♂♀°′″℃￥＄￠￡％＃＆＊＠§☆★○●◎◇◆□■△▲▽▼※〒→←↑↓〓"],
["81b8","∈∋⊆⊇⊂⊃∪∩"],
["81c8","∧∨￢⇒⇔∀∃"],
["81da","∠⊥⌒∂∇≡≒≪≫√∽∝∵∫∬"],
["81f0","Å‰♯♭♪†‡¶"],
["81fc","◯"],
["824f","０",9],
["8260","Ａ",25],
["8281","ａ",25],
["829f","ぁ",82],
["8340","ァ",62],
["8380","ム",22],
["839f","Α",16,"Σ",6],
["83bf","α",16,"σ",6],
["8440","А",5,"ЁЖ",25],
["8470","а",5,"ёж",7],
["8480","о",17],
["849f","─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂"],
["8740","①",19,"Ⅰ",9],
["875f","㍉㌔㌢㍍㌘㌧㌃㌶㍑㍗㌍㌦㌣㌫㍊㌻㎜㎝㎞㎎㎏㏄㎡"],
["877e","㍻"],
["8780","〝〟№㏍℡㊤",4,"㈱㈲㈹㍾㍽㍼≒≡∫∮∑√⊥∠∟⊿∵∩∪"],
["889f","亜唖娃阿哀愛挨姶逢葵茜穐悪握渥旭葦芦鯵梓圧斡扱宛姐虻飴絢綾鮎或粟袷安庵按暗案闇鞍杏以伊位依偉囲夷委威尉惟意慰易椅為畏異移維緯胃萎衣謂違遺医井亥域育郁磯一壱溢逸稲茨芋鰯允印咽員因姻引飲淫胤蔭"],
["8940","院陰隠韻吋右宇烏羽迂雨卯鵜窺丑碓臼渦嘘唄欝蔚鰻姥厩浦瓜閏噂云運雲荏餌叡営嬰影映曳栄永泳洩瑛盈穎頴英衛詠鋭液疫益駅悦謁越閲榎厭円"],
["8980","園堰奄宴延怨掩援沿演炎焔煙燕猿縁艶苑薗遠鉛鴛塩於汚甥凹央奥往応押旺横欧殴王翁襖鴬鴎黄岡沖荻億屋憶臆桶牡乙俺卸恩温穏音下化仮何伽価佳加可嘉夏嫁家寡科暇果架歌河火珂禍禾稼箇花苛茄荷華菓蝦課嘩貨迦過霞蚊俄峨我牙画臥芽蛾賀雅餓駕介会解回塊壊廻快怪悔恢懐戒拐改"],
["8a40","魁晦械海灰界皆絵芥蟹開階貝凱劾外咳害崖慨概涯碍蓋街該鎧骸浬馨蛙垣柿蛎鈎劃嚇各廓拡撹格核殻獲確穫覚角赫較郭閣隔革学岳楽額顎掛笠樫"],
["8a80","橿梶鰍潟割喝恰括活渇滑葛褐轄且鰹叶椛樺鞄株兜竃蒲釜鎌噛鴨栢茅萱粥刈苅瓦乾侃冠寒刊勘勧巻喚堪姦完官寛干幹患感慣憾換敢柑桓棺款歓汗漢澗潅環甘監看竿管簡緩缶翰肝艦莞観諌貫還鑑間閑関陥韓館舘丸含岸巌玩癌眼岩翫贋雁頑顔願企伎危喜器基奇嬉寄岐希幾忌揮机旗既期棋棄"],
["8b40","機帰毅気汽畿祈季稀紀徽規記貴起軌輝飢騎鬼亀偽儀妓宜戯技擬欺犠疑祇義蟻誼議掬菊鞠吉吃喫桔橘詰砧杵黍却客脚虐逆丘久仇休及吸宮弓急救"],
["8b80","朽求汲泣灸球究窮笈級糾給旧牛去居巨拒拠挙渠虚許距鋸漁禦魚亨享京供侠僑兇競共凶協匡卿叫喬境峡強彊怯恐恭挟教橋況狂狭矯胸脅興蕎郷鏡響饗驚仰凝尭暁業局曲極玉桐粁僅勤均巾錦斤欣欽琴禁禽筋緊芹菌衿襟謹近金吟銀九倶句区狗玖矩苦躯駆駈駒具愚虞喰空偶寓遇隅串櫛釧屑屈"],
["8c40","掘窟沓靴轡窪熊隈粂栗繰桑鍬勲君薫訓群軍郡卦袈祁係傾刑兄啓圭珪型契形径恵慶慧憩掲携敬景桂渓畦稽系経継繋罫茎荊蛍計詣警軽頚鶏芸迎鯨"],
["8c80","劇戟撃激隙桁傑欠決潔穴結血訣月件倹倦健兼券剣喧圏堅嫌建憲懸拳捲検権牽犬献研硯絹県肩見謙賢軒遣鍵険顕験鹸元原厳幻弦減源玄現絃舷言諺限乎個古呼固姑孤己庫弧戸故枯湖狐糊袴股胡菰虎誇跨鈷雇顧鼓五互伍午呉吾娯後御悟梧檎瑚碁語誤護醐乞鯉交佼侯候倖光公功効勾厚口向"],
["8d40","后喉坑垢好孔孝宏工巧巷幸広庚康弘恒慌抗拘控攻昂晃更杭校梗構江洪浩港溝甲皇硬稿糠紅紘絞綱耕考肯肱腔膏航荒行衡講貢購郊酵鉱砿鋼閤降"],
["8d80","項香高鴻剛劫号合壕拷濠豪轟麹克刻告国穀酷鵠黒獄漉腰甑忽惚骨狛込此頃今困坤墾婚恨懇昏昆根梱混痕紺艮魂些佐叉唆嵯左差査沙瑳砂詐鎖裟坐座挫債催再最哉塞妻宰彩才採栽歳済災采犀砕砦祭斎細菜裁載際剤在材罪財冴坂阪堺榊肴咲崎埼碕鷺作削咋搾昨朔柵窄策索錯桜鮭笹匙冊刷"],
["8e40","察拶撮擦札殺薩雑皐鯖捌錆鮫皿晒三傘参山惨撒散桟燦珊産算纂蚕讃賛酸餐斬暫残仕仔伺使刺司史嗣四士始姉姿子屍市師志思指支孜斯施旨枝止"],
["8e80","死氏獅祉私糸紙紫肢脂至視詞詩試誌諮資賜雌飼歯事似侍児字寺慈持時次滋治爾璽痔磁示而耳自蒔辞汐鹿式識鴫竺軸宍雫七叱執失嫉室悉湿漆疾質実蔀篠偲柴芝屡蕊縞舎写射捨赦斜煮社紗者謝車遮蛇邪借勺尺杓灼爵酌釈錫若寂弱惹主取守手朱殊狩珠種腫趣酒首儒受呪寿授樹綬需囚収周"],
["8f40","宗就州修愁拾洲秀秋終繍習臭舟蒐衆襲讐蹴輯週酋酬集醜什住充十従戎柔汁渋獣縦重銃叔夙宿淑祝縮粛塾熟出術述俊峻春瞬竣舜駿准循旬楯殉淳"],
["8f80","準潤盾純巡遵醇順処初所暑曙渚庶緒署書薯藷諸助叙女序徐恕鋤除傷償勝匠升召哨商唱嘗奨妾娼宵将小少尚庄床廠彰承抄招掌捷昇昌昭晶松梢樟樵沼消渉湘焼焦照症省硝礁祥称章笑粧紹肖菖蒋蕉衝裳訟証詔詳象賞醤鉦鍾鐘障鞘上丈丞乗冗剰城場壌嬢常情擾条杖浄状畳穣蒸譲醸錠嘱埴飾"],
["9040","拭植殖燭織職色触食蝕辱尻伸信侵唇娠寝審心慎振新晋森榛浸深申疹真神秦紳臣芯薪親診身辛進針震人仁刃塵壬尋甚尽腎訊迅陣靭笥諏須酢図厨"],
["9080","逗吹垂帥推水炊睡粋翠衰遂酔錐錘随瑞髄崇嵩数枢趨雛据杉椙菅頗雀裾澄摺寸世瀬畝是凄制勢姓征性成政整星晴棲栖正清牲生盛精聖声製西誠誓請逝醒青静斉税脆隻席惜戚斥昔析石積籍績脊責赤跡蹟碩切拙接摂折設窃節説雪絶舌蝉仙先千占宣専尖川戦扇撰栓栴泉浅洗染潜煎煽旋穿箭線"],
["9140","繊羨腺舛船薦詮賎践選遷銭銑閃鮮前善漸然全禅繕膳糎噌塑岨措曾曽楚狙疏疎礎祖租粗素組蘇訴阻遡鼠僧創双叢倉喪壮奏爽宋層匝惣想捜掃挿掻"],
["9180","操早曹巣槍槽漕燥争痩相窓糟総綜聡草荘葬蒼藻装走送遭鎗霜騒像増憎臓蔵贈造促側則即息捉束測足速俗属賊族続卒袖其揃存孫尊損村遜他多太汰詑唾堕妥惰打柁舵楕陀駄騨体堆対耐岱帯待怠態戴替泰滞胎腿苔袋貸退逮隊黛鯛代台大第醍題鷹滝瀧卓啄宅托択拓沢濯琢託鐸濁諾茸凧蛸只"],
["9240","叩但達辰奪脱巽竪辿棚谷狸鱈樽誰丹単嘆坦担探旦歎淡湛炭短端箪綻耽胆蛋誕鍛団壇弾断暖檀段男談値知地弛恥智池痴稚置致蜘遅馳築畜竹筑蓄"],
["9280","逐秩窒茶嫡着中仲宙忠抽昼柱注虫衷註酎鋳駐樗瀦猪苧著貯丁兆凋喋寵帖帳庁弔張彫徴懲挑暢朝潮牒町眺聴脹腸蝶調諜超跳銚長頂鳥勅捗直朕沈珍賃鎮陳津墜椎槌追鎚痛通塚栂掴槻佃漬柘辻蔦綴鍔椿潰坪壷嬬紬爪吊釣鶴亭低停偵剃貞呈堤定帝底庭廷弟悌抵挺提梯汀碇禎程締艇訂諦蹄逓"],
["9340","邸鄭釘鼎泥摘擢敵滴的笛適鏑溺哲徹撤轍迭鉄典填天展店添纏甜貼転顛点伝殿澱田電兎吐堵塗妬屠徒斗杜渡登菟賭途都鍍砥砺努度土奴怒倒党冬"],
["9380","凍刀唐塔塘套宕島嶋悼投搭東桃梼棟盗淘湯涛灯燈当痘祷等答筒糖統到董蕩藤討謄豆踏逃透鐙陶頭騰闘働動同堂導憧撞洞瞳童胴萄道銅峠鴇匿得徳涜特督禿篤毒独読栃橡凸突椴届鳶苫寅酉瀞噸屯惇敦沌豚遁頓呑曇鈍奈那内乍凪薙謎灘捺鍋楢馴縄畷南楠軟難汝二尼弐迩匂賑肉虹廿日乳入"],
["9440","如尿韮任妊忍認濡禰祢寧葱猫熱年念捻撚燃粘乃廼之埜嚢悩濃納能脳膿農覗蚤巴把播覇杷波派琶破婆罵芭馬俳廃拝排敗杯盃牌背肺輩配倍培媒梅"],
["9480","楳煤狽買売賠陪這蝿秤矧萩伯剥博拍柏泊白箔粕舶薄迫曝漠爆縛莫駁麦函箱硲箸肇筈櫨幡肌畑畠八鉢溌発醗髪伐罰抜筏閥鳩噺塙蛤隼伴判半反叛帆搬斑板氾汎版犯班畔繁般藩販範釆煩頒飯挽晩番盤磐蕃蛮匪卑否妃庇彼悲扉批披斐比泌疲皮碑秘緋罷肥被誹費避非飛樋簸備尾微枇毘琵眉美"],
["9540","鼻柊稗匹疋髭彦膝菱肘弼必畢筆逼桧姫媛紐百謬俵彪標氷漂瓢票表評豹廟描病秒苗錨鋲蒜蛭鰭品彬斌浜瀕貧賓頻敏瓶不付埠夫婦富冨布府怖扶敷"],
["9580","斧普浮父符腐膚芙譜負賦赴阜附侮撫武舞葡蕪部封楓風葺蕗伏副復幅服福腹複覆淵弗払沸仏物鮒分吻噴墳憤扮焚奮粉糞紛雰文聞丙併兵塀幣平弊柄並蔽閉陛米頁僻壁癖碧別瞥蔑箆偏変片篇編辺返遍便勉娩弁鞭保舗鋪圃捕歩甫補輔穂募墓慕戊暮母簿菩倣俸包呆報奉宝峰峯崩庖抱捧放方朋"],
["9640","法泡烹砲縫胞芳萌蓬蜂褒訪豊邦鋒飽鳳鵬乏亡傍剖坊妨帽忘忙房暴望某棒冒紡肪膨謀貌貿鉾防吠頬北僕卜墨撲朴牧睦穆釦勃没殆堀幌奔本翻凡盆"],
["9680","摩磨魔麻埋妹昧枚毎哩槙幕膜枕鮪柾鱒桝亦俣又抹末沫迄侭繭麿万慢満漫蔓味未魅巳箕岬密蜜湊蓑稔脈妙粍民眠務夢無牟矛霧鵡椋婿娘冥名命明盟迷銘鳴姪牝滅免棉綿緬面麺摸模茂妄孟毛猛盲網耗蒙儲木黙目杢勿餅尤戻籾貰問悶紋門匁也冶夜爺耶野弥矢厄役約薬訳躍靖柳薮鑓愉愈油癒"],
["9740","諭輸唯佑優勇友宥幽悠憂揖有柚湧涌猶猷由祐裕誘遊邑郵雄融夕予余与誉輿預傭幼妖容庸揚揺擁曜楊様洋溶熔用窯羊耀葉蓉要謡踊遥陽養慾抑欲"],
["9780","沃浴翌翼淀羅螺裸来莱頼雷洛絡落酪乱卵嵐欄濫藍蘭覧利吏履李梨理璃痢裏裡里離陸律率立葎掠略劉流溜琉留硫粒隆竜龍侶慮旅虜了亮僚両凌寮料梁涼猟療瞭稜糧良諒遼量陵領力緑倫厘林淋燐琳臨輪隣鱗麟瑠塁涙累類令伶例冷励嶺怜玲礼苓鈴隷零霊麗齢暦歴列劣烈裂廉恋憐漣煉簾練聯"],
["9840","蓮連錬呂魯櫓炉賂路露労婁廊弄朗楼榔浪漏牢狼篭老聾蝋郎六麓禄肋録論倭和話歪賄脇惑枠鷲亙亘鰐詫藁蕨椀湾碗腕"],
["989f","弌丐丕个丱丶丼丿乂乖乘亂亅豫亊舒弍于亞亟亠亢亰亳亶从仍仄仆仂仗仞仭仟价伉佚估佛佝佗佇佶侈侏侘佻佩佰侑佯來侖儘俔俟俎俘俛俑俚俐俤俥倚倨倔倪倥倅伜俶倡倩倬俾俯們倆偃假會偕偐偈做偖偬偸傀傚傅傴傲"],
["9940","僉僊傳僂僖僞僥僭僣僮價僵儉儁儂儖儕儔儚儡儺儷儼儻儿兀兒兌兔兢竸兩兪兮冀冂囘册冉冏冑冓冕冖冤冦冢冩冪冫决冱冲冰况冽凅凉凛几處凩凭"],
["9980","凰凵凾刄刋刔刎刧刪刮刳刹剏剄剋剌剞剔剪剴剩剳剿剽劍劔劒剱劈劑辨辧劬劭劼劵勁勍勗勞勣勦飭勠勳勵勸勹匆匈甸匍匐匏匕匚匣匯匱匳匸區卆卅丗卉卍凖卞卩卮夘卻卷厂厖厠厦厥厮厰厶參簒雙叟曼燮叮叨叭叺吁吽呀听吭吼吮吶吩吝呎咏呵咎呟呱呷呰咒呻咀呶咄咐咆哇咢咸咥咬哄哈咨"],
["9a40","咫哂咤咾咼哘哥哦唏唔哽哮哭哺哢唹啀啣啌售啜啅啖啗唸唳啝喙喀咯喊喟啻啾喘喞單啼喃喩喇喨嗚嗅嗟嗄嗜嗤嗔嘔嗷嘖嗾嗽嘛嗹噎噐營嘴嘶嘲嘸"],
["9a80","噫噤嘯噬噪嚆嚀嚊嚠嚔嚏嚥嚮嚶嚴囂嚼囁囃囀囈囎囑囓囗囮囹圀囿圄圉圈國圍圓團圖嗇圜圦圷圸坎圻址坏坩埀垈坡坿垉垓垠垳垤垪垰埃埆埔埒埓堊埖埣堋堙堝塲堡塢塋塰毀塒堽塹墅墹墟墫墺壞墻墸墮壅壓壑壗壙壘壥壜壤壟壯壺壹壻壼壽夂夊夐夛梦夥夬夭夲夸夾竒奕奐奎奚奘奢奠奧奬奩"],
["9b40","奸妁妝佞侫妣妲姆姨姜妍姙姚娥娟娑娜娉娚婀婬婉娵娶婢婪媚媼媾嫋嫂媽嫣嫗嫦嫩嫖嫺嫻嬌嬋嬖嬲嫐嬪嬶嬾孃孅孀孑孕孚孛孥孩孰孳孵學斈孺宀"],
["9b80","它宦宸寃寇寉寔寐寤實寢寞寥寫寰寶寳尅將專對尓尠尢尨尸尹屁屆屎屓屐屏孱屬屮乢屶屹岌岑岔妛岫岻岶岼岷峅岾峇峙峩峽峺峭嶌峪崋崕崗嵜崟崛崑崔崢崚崙崘嵌嵒嵎嵋嵬嵳嵶嶇嶄嶂嶢嶝嶬嶮嶽嶐嶷嶼巉巍巓巒巖巛巫已巵帋帚帙帑帛帶帷幄幃幀幎幗幔幟幢幤幇幵并幺麼广庠廁廂廈廐廏"],
["9c40","廖廣廝廚廛廢廡廨廩廬廱廳廰廴廸廾弃弉彝彜弋弑弖弩弭弸彁彈彌彎弯彑彖彗彙彡彭彳彷徃徂彿徊很徑徇從徙徘徠徨徭徼忖忻忤忸忱忝悳忿怡恠"],
["9c80","怙怐怩怎怱怛怕怫怦怏怺恚恁恪恷恟恊恆恍恣恃恤恂恬恫恙悁悍惧悃悚悄悛悖悗悒悧悋惡悸惠惓悴忰悽惆悵惘慍愕愆惶惷愀惴惺愃愡惻惱愍愎慇愾愨愧慊愿愼愬愴愽慂慄慳慷慘慙慚慫慴慯慥慱慟慝慓慵憙憖憇憬憔憚憊憑憫憮懌懊應懷懈懃懆憺懋罹懍懦懣懶懺懴懿懽懼懾戀戈戉戍戌戔戛"],
["9d40","戞戡截戮戰戲戳扁扎扞扣扛扠扨扼抂抉找抒抓抖拔抃抔拗拑抻拏拿拆擔拈拜拌拊拂拇抛拉挌拮拱挧挂挈拯拵捐挾捍搜捏掖掎掀掫捶掣掏掉掟掵捫"],
["9d80","捩掾揩揀揆揣揉插揶揄搖搴搆搓搦搶攝搗搨搏摧摯摶摎攪撕撓撥撩撈撼據擒擅擇撻擘擂擱擧舉擠擡抬擣擯攬擶擴擲擺攀擽攘攜攅攤攣攫攴攵攷收攸畋效敖敕敍敘敞敝敲數斂斃變斛斟斫斷旃旆旁旄旌旒旛旙无旡旱杲昊昃旻杳昵昶昴昜晏晄晉晁晞晝晤晧晨晟晢晰暃暈暎暉暄暘暝曁暹曉暾暼"],
["9e40","曄暸曖曚曠昿曦曩曰曵曷朏朖朞朦朧霸朮朿朶杁朸朷杆杞杠杙杣杤枉杰枩杼杪枌枋枦枡枅枷柯枴柬枳柩枸柤柞柝柢柮枹柎柆柧檜栞框栩桀桍栲桎"],
["9e80","梳栫桙档桷桿梟梏梭梔條梛梃檮梹桴梵梠梺椏梍桾椁棊椈棘椢椦棡椌棍棔棧棕椶椒椄棗棣椥棹棠棯椨椪椚椣椡棆楹楷楜楸楫楔楾楮椹楴椽楙椰楡楞楝榁楪榲榮槐榿槁槓榾槎寨槊槝榻槃榧樮榑榠榜榕榴槞槨樂樛槿權槹槲槧樅榱樞槭樔槫樊樒櫁樣樓橄樌橲樶橸橇橢橙橦橈樸樢檐檍檠檄檢檣"],
["9f40","檗蘗檻櫃櫂檸檳檬櫞櫑櫟檪櫚櫪櫻欅蘖櫺欒欖鬱欟欸欷盜欹飮歇歃歉歐歙歔歛歟歡歸歹歿殀殄殃殍殘殕殞殤殪殫殯殲殱殳殷殼毆毋毓毟毬毫毳毯"],
["9f80","麾氈氓气氛氤氣汞汕汢汪沂沍沚沁沛汾汨汳沒沐泄泱泓沽泗泅泝沮沱沾沺泛泯泙泪洟衍洶洫洽洸洙洵洳洒洌浣涓浤浚浹浙涎涕濤涅淹渕渊涵淇淦涸淆淬淞淌淨淒淅淺淙淤淕淪淮渭湮渮渙湲湟渾渣湫渫湶湍渟湃渺湎渤滿渝游溂溪溘滉溷滓溽溯滄溲滔滕溏溥滂溟潁漑灌滬滸滾漿滲漱滯漲滌"],
["e040","漾漓滷澆潺潸澁澀潯潛濳潭澂潼潘澎澑濂潦澳澣澡澤澹濆澪濟濕濬濔濘濱濮濛瀉瀋濺瀑瀁瀏濾瀛瀚潴瀝瀘瀟瀰瀾瀲灑灣炙炒炯烱炬炸炳炮烟烋烝"],
["e080","烙焉烽焜焙煥煕熈煦煢煌煖煬熏燻熄熕熨熬燗熹熾燒燉燔燎燠燬燧燵燼燹燿爍爐爛爨爭爬爰爲爻爼爿牀牆牋牘牴牾犂犁犇犒犖犢犧犹犲狃狆狄狎狒狢狠狡狹狷倏猗猊猜猖猝猴猯猩猥猾獎獏默獗獪獨獰獸獵獻獺珈玳珎玻珀珥珮珞璢琅瑯琥珸琲琺瑕琿瑟瑙瑁瑜瑩瑰瑣瑪瑶瑾璋璞璧瓊瓏瓔珱"],
["e140","瓠瓣瓧瓩瓮瓲瓰瓱瓸瓷甄甃甅甌甎甍甕甓甞甦甬甼畄畍畊畉畛畆畚畩畤畧畫畭畸當疆疇畴疊疉疂疔疚疝疥疣痂疳痃疵疽疸疼疱痍痊痒痙痣痞痾痿"],
["e180","痼瘁痰痺痲痳瘋瘍瘉瘟瘧瘠瘡瘢瘤瘴瘰瘻癇癈癆癜癘癡癢癨癩癪癧癬癰癲癶癸發皀皃皈皋皎皖皓皙皚皰皴皸皹皺盂盍盖盒盞盡盥盧盪蘯盻眈眇眄眩眤眞眥眦眛眷眸睇睚睨睫睛睥睿睾睹瞎瞋瞑瞠瞞瞰瞶瞹瞿瞼瞽瞻矇矍矗矚矜矣矮矼砌砒礦砠礪硅碎硴碆硼碚碌碣碵碪碯磑磆磋磔碾碼磅磊磬"],
["e240","磧磚磽磴礇礒礑礙礬礫祀祠祗祟祚祕祓祺祿禊禝禧齋禪禮禳禹禺秉秕秧秬秡秣稈稍稘稙稠稟禀稱稻稾稷穃穗穉穡穢穩龝穰穹穽窈窗窕窘窖窩竈窰"],
["e280","窶竅竄窿邃竇竊竍竏竕竓站竚竝竡竢竦竭竰笂笏笊笆笳笘笙笞笵笨笶筐筺笄筍笋筌筅筵筥筴筧筰筱筬筮箝箘箟箍箜箚箋箒箏筝箙篋篁篌篏箴篆篝篩簑簔篦篥籠簀簇簓篳篷簗簍篶簣簧簪簟簷簫簽籌籃籔籏籀籐籘籟籤籖籥籬籵粃粐粤粭粢粫粡粨粳粲粱粮粹粽糀糅糂糘糒糜糢鬻糯糲糴糶糺紆"],
["e340","紂紜紕紊絅絋紮紲紿紵絆絳絖絎絲絨絮絏絣經綉絛綏絽綛綺綮綣綵緇綽綫總綢綯緜綸綟綰緘緝緤緞緻緲緡縅縊縣縡縒縱縟縉縋縢繆繦縻縵縹繃縷"],
["e380","縲縺繧繝繖繞繙繚繹繪繩繼繻纃緕繽辮繿纈纉續纒纐纓纔纖纎纛纜缸缺罅罌罍罎罐网罕罔罘罟罠罨罩罧罸羂羆羃羈羇羌羔羞羝羚羣羯羲羹羮羶羸譱翅翆翊翕翔翡翦翩翳翹飜耆耄耋耒耘耙耜耡耨耿耻聊聆聒聘聚聟聢聨聳聲聰聶聹聽聿肄肆肅肛肓肚肭冐肬胛胥胙胝胄胚胖脉胯胱脛脩脣脯腋"],
["e440","隋腆脾腓腑胼腱腮腥腦腴膃膈膊膀膂膠膕膤膣腟膓膩膰膵膾膸膽臀臂膺臉臍臑臙臘臈臚臟臠臧臺臻臾舁舂舅與舊舍舐舖舩舫舸舳艀艙艘艝艚艟艤"],
["e480","艢艨艪艫舮艱艷艸艾芍芒芫芟芻芬苡苣苟苒苴苳苺莓范苻苹苞茆苜茉苙茵茴茖茲茱荀茹荐荅茯茫茗茘莅莚莪莟莢莖茣莎莇莊荼莵荳荵莠莉莨菴萓菫菎菽萃菘萋菁菷萇菠菲萍萢萠莽萸蔆菻葭萪萼蕚蒄葷葫蒭葮蒂葩葆萬葯葹萵蓊葢蒹蒿蒟蓙蓍蒻蓚蓐蓁蓆蓖蒡蔡蓿蓴蔗蔘蔬蔟蔕蔔蓼蕀蕣蕘蕈"],
["e540","蕁蘂蕋蕕薀薤薈薑薊薨蕭薔薛藪薇薜蕷蕾薐藉薺藏薹藐藕藝藥藜藹蘊蘓蘋藾藺蘆蘢蘚蘰蘿虍乕虔號虧虱蚓蚣蚩蚪蚋蚌蚶蚯蛄蛆蚰蛉蠣蚫蛔蛞蛩蛬"],
["e580","蛟蛛蛯蜒蜆蜈蜀蜃蛻蜑蜉蜍蛹蜊蜴蜿蜷蜻蜥蜩蜚蝠蝟蝸蝌蝎蝴蝗蝨蝮蝙蝓蝣蝪蠅螢螟螂螯蟋螽蟀蟐雖螫蟄螳蟇蟆螻蟯蟲蟠蠏蠍蟾蟶蟷蠎蟒蠑蠖蠕蠢蠡蠱蠶蠹蠧蠻衄衂衒衙衞衢衫袁衾袞衵衽袵衲袂袗袒袮袙袢袍袤袰袿袱裃裄裔裘裙裝裹褂裼裴裨裲褄褌褊褓襃褞褥褪褫襁襄褻褶褸襌褝襠襞"],
["e640","襦襤襭襪襯襴襷襾覃覈覊覓覘覡覩覦覬覯覲覺覽覿觀觚觜觝觧觴觸訃訖訐訌訛訝訥訶詁詛詒詆詈詼詭詬詢誅誂誄誨誡誑誥誦誚誣諄諍諂諚諫諳諧"],
["e680","諤諱謔諠諢諷諞諛謌謇謚諡謖謐謗謠謳鞫謦謫謾謨譁譌譏譎證譖譛譚譫譟譬譯譴譽讀讌讎讒讓讖讙讚谺豁谿豈豌豎豐豕豢豬豸豺貂貉貅貊貍貎貔豼貘戝貭貪貽貲貳貮貶賈賁賤賣賚賽賺賻贄贅贊贇贏贍贐齎贓賍贔贖赧赭赱赳趁趙跂趾趺跏跚跖跌跛跋跪跫跟跣跼踈踉跿踝踞踐踟蹂踵踰踴蹊"],
["e740","蹇蹉蹌蹐蹈蹙蹤蹠踪蹣蹕蹶蹲蹼躁躇躅躄躋躊躓躑躔躙躪躡躬躰軆躱躾軅軈軋軛軣軼軻軫軾輊輅輕輒輙輓輜輟輛輌輦輳輻輹轅轂輾轌轉轆轎轗轜"],
["e780","轢轣轤辜辟辣辭辯辷迚迥迢迪迯邇迴逅迹迺逑逕逡逍逞逖逋逧逶逵逹迸遏遐遑遒逎遉逾遖遘遞遨遯遶隨遲邂遽邁邀邊邉邏邨邯邱邵郢郤扈郛鄂鄒鄙鄲鄰酊酖酘酣酥酩酳酲醋醉醂醢醫醯醪醵醴醺釀釁釉釋釐釖釟釡釛釼釵釶鈞釿鈔鈬鈕鈑鉞鉗鉅鉉鉤鉈銕鈿鉋鉐銜銖銓銛鉚鋏銹銷鋩錏鋺鍄錮"],
["e840","錙錢錚錣錺錵錻鍜鍠鍼鍮鍖鎰鎬鎭鎔鎹鏖鏗鏨鏥鏘鏃鏝鏐鏈鏤鐚鐔鐓鐃鐇鐐鐶鐫鐵鐡鐺鑁鑒鑄鑛鑠鑢鑞鑪鈩鑰鑵鑷鑽鑚鑼鑾钁鑿閂閇閊閔閖閘閙"],
["e880","閠閨閧閭閼閻閹閾闊濶闃闍闌闕闔闖關闡闥闢阡阨阮阯陂陌陏陋陷陜陞陝陟陦陲陬隍隘隕隗險隧隱隲隰隴隶隸隹雎雋雉雍襍雜霍雕雹霄霆霈霓霎霑霏霖霙霤霪霰霹霽霾靄靆靈靂靉靜靠靤靦靨勒靫靱靹鞅靼鞁靺鞆鞋鞏鞐鞜鞨鞦鞣鞳鞴韃韆韈韋韜韭齏韲竟韶韵頏頌頸頤頡頷頽顆顏顋顫顯顰"],
["e940","顱顴顳颪颯颱颶飄飃飆飩飫餃餉餒餔餘餡餝餞餤餠餬餮餽餾饂饉饅饐饋饑饒饌饕馗馘馥馭馮馼駟駛駝駘駑駭駮駱駲駻駸騁騏騅駢騙騫騷驅驂驀驃"],
["e980","騾驕驍驛驗驟驢驥驤驩驫驪骭骰骼髀髏髑髓體髞髟髢髣髦髯髫髮髴髱髷髻鬆鬘鬚鬟鬢鬣鬥鬧鬨鬩鬪鬮鬯鬲魄魃魏魍魎魑魘魴鮓鮃鮑鮖鮗鮟鮠鮨鮴鯀鯊鮹鯆鯏鯑鯒鯣鯢鯤鯔鯡鰺鯲鯱鯰鰕鰔鰉鰓鰌鰆鰈鰒鰊鰄鰮鰛鰥鰤鰡鰰鱇鰲鱆鰾鱚鱠鱧鱶鱸鳧鳬鳰鴉鴈鳫鴃鴆鴪鴦鶯鴣鴟鵄鴕鴒鵁鴿鴾鵆鵈"],
["ea40","鵝鵞鵤鵑鵐鵙鵲鶉鶇鶫鵯鵺鶚鶤鶩鶲鷄鷁鶻鶸鶺鷆鷏鷂鷙鷓鷸鷦鷭鷯鷽鸚鸛鸞鹵鹹鹽麁麈麋麌麒麕麑麝麥麩麸麪麭靡黌黎黏黐黔黜點黝黠黥黨黯"],
["ea80","黴黶黷黹黻黼黽鼇鼈皷鼕鼡鼬鼾齊齒齔齣齟齠齡齦齧齬齪齷齲齶龕龜龠堯槇遙瑤凜熙"],
["ed40","纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏"],
["ed80","塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱"],
["ee40","犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙"],
["ee80","蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑"],
["eeef","ⅰ",9,"￢￤＇＂"],
["f040","",62],
["f080","",124],
["f140","",62],
["f180","",124],
["f240","",62],
["f280","",124],
["f340","",62],
["f380","",124],
["f440","",62],
["f480","",124],
["f540","",62],
["f580","",124],
["f640","",62],
["f680","",124],
["f740","",62],
["f780","",124],
["f840","",62],
["f880","",124],
["f940",""],
["fa40","ⅰ",9,"Ⅰ",9,"￢￤＇＂㈱№℡∵纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊"],
["fa80","兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯"],
["fb40","涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神"],
["fb80","祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙"],
["fc40","髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑"]
]

},{}],105:[function(require,module,exports){
(function (Buffer){
"use strict"

// == UTF16-BE codec. ==========================================================

exports.utf16be = Utf16BECodec;
function Utf16BECodec() {
}

Utf16BECodec.prototype.encoder = Utf16BEEncoder;
Utf16BECodec.prototype.decoder = Utf16BEDecoder;
Utf16BECodec.prototype.bomAware = true;


// -- Encoding

function Utf16BEEncoder() {
}

Utf16BEEncoder.prototype.write = function(str) {
    var buf = new Buffer(str, 'ucs2');
    for (var i = 0; i < buf.length; i += 2) {
        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;
    }
    return buf;
}

Utf16BEEncoder.prototype.end = function() {
}


// -- Decoding

function Utf16BEDecoder() {
    this.overflowByte = -1;
}

Utf16BEDecoder.prototype.write = function(buf) {
    if (buf.length == 0)
        return '';

    var buf2 = new Buffer(buf.length + 1),
        i = 0, j = 0;

    if (this.overflowByte !== -1) {
        buf2[0] = buf[0];
        buf2[1] = this.overflowByte;
        i = 1; j = 2;
    }

    for (; i < buf.length-1; i += 2, j+= 2) {
        buf2[j] = buf[i+1];
        buf2[j+1] = buf[i];
    }

    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;

    return buf2.slice(0, j).toString('ucs2');
}

Utf16BEDecoder.prototype.end = function() {
}


// == UTF-16 codec =============================================================
// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.
// Defaults to UTF-16LE, as it's prevalent and default in Node.
// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le
// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});

// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).

exports.utf16 = Utf16Codec;
function Utf16Codec(codecOptions, iconv) {
    this.iconv = iconv;
}

Utf16Codec.prototype.encoder = Utf16Encoder;
Utf16Codec.prototype.decoder = Utf16Decoder;


// -- Encoding (pass-through)

function Utf16Encoder(options, codec) {
    options = options || {};
    if (options.addBOM === undefined)
        options.addBOM = true;
    this.encoder = codec.iconv.getEncoder('utf-16le', options);
}

Utf16Encoder.prototype.write = function(str) {
    return this.encoder.write(str);
}

Utf16Encoder.prototype.end = function() {
    return this.encoder.end();
}


// -- Decoding

function Utf16Decoder(options, codec) {
    this.decoder = null;
    this.initialBytes = [];
    this.initialBytesLen = 0;

    this.options = options || {};
    this.iconv = codec.iconv;
}

Utf16Decoder.prototype.write = function(buf) {
    if (!this.decoder) {
        // Codec is not chosen yet. Accumulate initial bytes.
        this.initialBytes.push(buf);
        this.initialBytesLen += buf.length;
        
        if (this.initialBytesLen < 16) // We need more bytes to use space heuristic (see below)
            return '';

        // We have enough bytes -> detect endianness.
        var buf = Buffer.concat(this.initialBytes),
            encoding = detectEncoding(buf, this.options.defaultEncoding);
        this.decoder = this.iconv.getDecoder(encoding, this.options);
        this.initialBytes.length = this.initialBytesLen = 0;
    }

    return this.decoder.write(buf);
}

Utf16Decoder.prototype.end = function() {
    if (!this.decoder) {
        var buf = Buffer.concat(this.initialBytes),
            encoding = detectEncoding(buf, this.options.defaultEncoding);
        this.decoder = this.iconv.getDecoder(encoding, this.options);

        var res = this.decoder.write(buf),
            trail = this.decoder.end();

        return trail ? (res + trail) : res;
    }
    return this.decoder.end();
}

function detectEncoding(buf, defaultEncoding) {
    var enc = defaultEncoding || 'utf-16le';

    if (buf.length >= 2) {
        // Check BOM.
        if (buf[0] == 0xFE && buf[1] == 0xFF) // UTF-16BE BOM
            enc = 'utf-16be';
        else if (buf[0] == 0xFF && buf[1] == 0xFE) // UTF-16LE BOM
            enc = 'utf-16le';
        else {
            // No BOM found. Try to deduce encoding from initial content.
            // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.
            // So, we count ASCII as if it was LE or BE, and decide from that.
            var asciiCharsLE = 0, asciiCharsBE = 0, // Counts of chars in both positions
                _len = Math.min(buf.length - (buf.length % 2), 64); // Len is always even.

            for (var i = 0; i < _len; i += 2) {
                if (buf[i] === 0 && buf[i+1] !== 0) asciiCharsBE++;
                if (buf[i] !== 0 && buf[i+1] === 0) asciiCharsLE++;
            }

            if (asciiCharsBE > asciiCharsLE)
                enc = 'utf-16be';
            else if (asciiCharsBE < asciiCharsLE)
                enc = 'utf-16le';
        }
    }

    return enc;
}



}).call(this,require("buffer").Buffer)
},{"buffer":17}],106:[function(require,module,exports){
(function (Buffer){
"use strict"

// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152
// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3

exports.utf7 = Utf7Codec;
exports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7
function Utf7Codec(codecOptions, iconv) {
    this.iconv = iconv;
};

Utf7Codec.prototype.encoder = Utf7Encoder;
Utf7Codec.prototype.decoder = Utf7Decoder;
Utf7Codec.prototype.bomAware = true;


// -- Encoding

var nonDirectChars = /[^A-Za-z0-9'\(\),-\.\/:\? \n\r\t]+/g;

function Utf7Encoder(options, codec) {
    this.iconv = codec.iconv;
}

Utf7Encoder.prototype.write = function(str) {
    // Naive implementation.
    // Non-direct chars are encoded as "+<base64>-"; single "+" char is encoded as "+-".
    return new Buffer(str.replace(nonDirectChars, function(chunk) {
        return "+" + (chunk === '+' ? '' : 
            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) 
            + "-";
    }.bind(this)));
}

Utf7Encoder.prototype.end = function() {
}


// -- Decoding

function Utf7Decoder(options, codec) {
    this.iconv = codec.iconv;
    this.inBase64 = false;
    this.base64Accum = '';
}

var base64Regex = /[A-Za-z0-9\/+]/;
var base64Chars = [];
for (var i = 0; i < 256; i++)
    base64Chars[i] = base64Regex.test(String.fromCharCode(i));

var plusChar = '+'.charCodeAt(0), 
    minusChar = '-'.charCodeAt(0),
    andChar = '&'.charCodeAt(0);

Utf7Decoder.prototype.write = function(buf) {
    var res = "", lastI = 0,
        inBase64 = this.inBase64,
        base64Accum = this.base64Accum;

    // The decoder is more involved as we must handle chunks in stream.

    for (var i = 0; i < buf.length; i++) {
        if (!inBase64) { // We're in direct mode.
            // Write direct chars until '+'
            if (buf[i] == plusChar) {
                res += this.iconv.decode(buf.slice(lastI, i), "ascii"); // Write direct chars.
                lastI = i+1;
                inBase64 = true;
            }
        } else { // We decode base64.
            if (!base64Chars[buf[i]]) { // Base64 ended.
                if (i == lastI && buf[i] == minusChar) {// "+-" -> "+"
                    res += "+";
                } else {
                    var b64str = base64Accum + buf.slice(lastI, i).toString();
                    res += this.iconv.decode(new Buffer(b64str, 'base64'), "utf16-be");
                }

                if (buf[i] != minusChar) // Minus is absorbed after base64.
                    i--;

                lastI = i+1;
                inBase64 = false;
                base64Accum = '';
            }
        }
    }

    if (!inBase64) {
        res += this.iconv.decode(buf.slice(lastI), "ascii"); // Write direct chars.
    } else {
        var b64str = base64Accum + buf.slice(lastI).toString();

        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.
        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.
        b64str = b64str.slice(0, canBeDecoded);

        res += this.iconv.decode(new Buffer(b64str, 'base64'), "utf16-be");
    }

    this.inBase64 = inBase64;
    this.base64Accum = base64Accum;

    return res;
}

Utf7Decoder.prototype.end = function() {
    var res = "";
    if (this.inBase64 && this.base64Accum.length > 0)
        res = this.iconv.decode(new Buffer(this.base64Accum, 'base64'), "utf16-be");

    this.inBase64 = false;
    this.base64Accum = '';
    return res;
}


// UTF-7-IMAP codec.
// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)
// Differences:
//  * Base64 part is started by "&" instead of "+"
//  * Direct characters are 0x20-0x7E, except "&" (0x26)
//  * In Base64, "," is used instead of "/"
//  * Base64 must not be used to represent direct characters.
//  * No implicit shift back from Base64 (should always end with '-')
//  * String must end in non-shifted position.
//  * "-&" while in base64 is not allowed.


exports.utf7imap = Utf7IMAPCodec;
function Utf7IMAPCodec(codecOptions, iconv) {
    this.iconv = iconv;
};

Utf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;
Utf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;
Utf7IMAPCodec.prototype.bomAware = true;


// -- Encoding

function Utf7IMAPEncoder(options, codec) {
    this.iconv = codec.iconv;
    this.inBase64 = false;
    this.base64Accum = new Buffer(6);
    this.base64AccumIdx = 0;
}

Utf7IMAPEncoder.prototype.write = function(str) {
    var inBase64 = this.inBase64,
        base64Accum = this.base64Accum,
        base64AccumIdx = this.base64AccumIdx,
        buf = new Buffer(str.length*5 + 10), bufIdx = 0;

    for (var i = 0; i < str.length; i++) {
        var uChar = str.charCodeAt(i);
        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.
            if (inBase64) {
                if (base64AccumIdx > 0) {
                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\//g, ',').replace(/=+$/, ''), bufIdx);
                    base64AccumIdx = 0;
                }

                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.
                inBase64 = false;
            }

            if (!inBase64) {
                buf[bufIdx++] = uChar; // Write direct character

                if (uChar === andChar)  // Ampersand -> '&-'
                    buf[bufIdx++] = minusChar;
            }

        } else { // Non-direct character
            if (!inBase64) {
                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.
                inBase64 = true;
            }
            if (inBase64) {
                base64Accum[base64AccumIdx++] = uChar >> 8;
                base64Accum[base64AccumIdx++] = uChar & 0xFF;

                if (base64AccumIdx == base64Accum.length) {
                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\//g, ','), bufIdx);
                    base64AccumIdx = 0;
                }
            }
        }
    }

    this.inBase64 = inBase64;
    this.base64AccumIdx = base64AccumIdx;

    return buf.slice(0, bufIdx);
}

Utf7IMAPEncoder.prototype.end = function() {
    var buf = new Buffer(10), bufIdx = 0;
    if (this.inBase64) {
        if (this.base64AccumIdx > 0) {
            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\//g, ',').replace(/=+$/, ''), bufIdx);
            this.base64AccumIdx = 0;
        }

        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.
        this.inBase64 = false;
    }

    return buf.slice(0, bufIdx);
}


// -- Decoding

function Utf7IMAPDecoder(options, codec) {
    this.iconv = codec.iconv;
    this.inBase64 = false;
    this.base64Accum = '';
}

var base64IMAPChars = base64Chars.slice();
base64IMAPChars[','.charCodeAt(0)] = true;

Utf7IMAPDecoder.prototype.write = function(buf) {
    var res = "", lastI = 0,
        inBase64 = this.inBase64,
        base64Accum = this.base64Accum;

    // The decoder is more involved as we must handle chunks in stream.
    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).

    for (var i = 0; i < buf.length; i++) {
        if (!inBase64) { // We're in direct mode.
            // Write direct chars until '&'
            if (buf[i] == andChar) {
                res += this.iconv.decode(buf.slice(lastI, i), "ascii"); // Write direct chars.
                lastI = i+1;
                inBase64 = true;
            }
        } else { // We decode base64.
            if (!base64IMAPChars[buf[i]]) { // Base64 ended.
                if (i == lastI && buf[i] == minusChar) { // "&-" -> "&"
                    res += "&";
                } else {
                    var b64str = base64Accum + buf.slice(lastI, i).toString().replace(/,/g, '/');
                    res += this.iconv.decode(new Buffer(b64str, 'base64'), "utf16-be");
                }

                if (buf[i] != minusChar) // Minus may be absorbed after base64.
                    i--;

                lastI = i+1;
                inBase64 = false;
                base64Accum = '';
            }
        }
    }

    if (!inBase64) {
        res += this.iconv.decode(buf.slice(lastI), "ascii"); // Write direct chars.
    } else {
        var b64str = base64Accum + buf.slice(lastI).toString().replace(/,/g, '/');

        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.
        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.
        b64str = b64str.slice(0, canBeDecoded);

        res += this.iconv.decode(new Buffer(b64str, 'base64'), "utf16-be");
    }

    this.inBase64 = inBase64;
    this.base64Accum = base64Accum;

    return res;
}

Utf7IMAPDecoder.prototype.end = function() {
    var res = "";
    if (this.inBase64 && this.base64Accum.length > 0)
        res = this.iconv.decode(new Buffer(this.base64Accum, 'base64'), "utf16-be");

    this.inBase64 = false;
    this.base64Accum = '';
    return res;
}



}).call(this,require("buffer").Buffer)
},{"buffer":17}],107:[function(require,module,exports){
"use strict"

var BOMChar = '\uFEFF';

exports.PrependBOM = PrependBOMWrapper
function PrependBOMWrapper(encoder, options) {
    this.encoder = encoder;
    this.addBOM = true;
}

PrependBOMWrapper.prototype.write = function(str) {
    if (this.addBOM) {
        str = BOMChar + str;
        this.addBOM = false;
    }

    return this.encoder.write(str);
}

PrependBOMWrapper.prototype.end = function() {
    return this.encoder.end();
}


//------------------------------------------------------------------------------

exports.StripBOM = StripBOMWrapper;
function StripBOMWrapper(decoder, options) {
    this.decoder = decoder;
    this.pass = false;
    this.options = options || {};
}

StripBOMWrapper.prototype.write = function(buf) {
    var res = this.decoder.write(buf);
    if (this.pass || !res)
        return res;

    if (res[0] === BOMChar) {
        res = res.slice(1);
        if (typeof this.options.stripBOM === 'function')
            this.options.stripBOM();
    }

    this.pass = true;
    return res;
}

StripBOMWrapper.prototype.end = function() {
    return this.decoder.end();
}


},{}],108:[function(require,module,exports){
(function (process,Buffer){
"use strict"

var bomHandling = require('./bom-handling'),
    iconv = module.exports;

// All codecs and aliases are kept here, keyed by encoding name/alias.
// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.
iconv.encodings = null;

// Characters emitted in case of error.
iconv.defaultCharUnicode = '�';
iconv.defaultCharSingleByte = '?';

// Public API.
iconv.encode = function encode(str, encoding, options) {
    str = "" + (str || ""); // Ensure string.

    var encoder = iconv.getEncoder(encoding, options);

    var res = encoder.write(str);
    var trail = encoder.end();
    
    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;
}

iconv.decode = function decode(buf, encoding, options) {
    if (typeof buf === 'string') {
        if (!iconv.skipDecodeWarning) {
            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');
            iconv.skipDecodeWarning = true;
        }

        buf = new Buffer("" + (buf || ""), "binary"); // Ensure buffer.
    }

    var decoder = iconv.getDecoder(encoding, options);

    var res = decoder.write(buf);
    var trail = decoder.end();

    return trail ? (res + trail) : res;
}

iconv.encodingExists = function encodingExists(enc) {
    try {
        iconv.getCodec(enc);
        return true;
    } catch (e) {
        return false;
    }
}

// Legacy aliases to convert functions
iconv.toEncoding = iconv.encode;
iconv.fromEncoding = iconv.decode;

// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.
iconv._codecDataCache = {};
iconv.getCodec = function getCodec(encoding) {
    if (!iconv.encodings)
        iconv.encodings = require("../encodings"); // Lazy load all encoding definitions.
    
    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.
    var enc = (''+encoding).toLowerCase().replace(/[^0-9a-z]|:\d{4}$/g, "");

    // Traverse iconv.encodings to find actual codec.
    var codecOptions = {};
    while (true) {
        var codec = iconv._codecDataCache[enc];
        if (codec)
            return codec;

        var codecDef = iconv.encodings[enc];

        switch (typeof codecDef) {
            case "string": // Direct alias to other encoding.
                enc = codecDef;
                break;

            case "object": // Alias with options. Can be layered.
                for (var key in codecDef)
                    codecOptions[key] = codecDef[key];

                if (!codecOptions.encodingName)
                    codecOptions.encodingName = enc;
                
                enc = codecDef.type;
                break;

            case "function": // Codec itself.
                if (!codecOptions.encodingName)
                    codecOptions.encodingName = enc;

                // The codec function must load all tables and return object with .encoder and .decoder methods.
                // It'll be called only once (for each different options object).
                codec = new codecDef(codecOptions, iconv);

                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.
                return codec;

            default:
                throw new Error("Encoding not recognized: '" + encoding + "' (searched as: '"+enc+"')");
        }
    }
}

iconv.getEncoder = function getEncoder(encoding, options) {
    var codec = iconv.getCodec(encoding),
        encoder = new codec.encoder(options, codec);

    if (codec.bomAware && options && options.addBOM)
        encoder = new bomHandling.PrependBOM(encoder, options);

    return encoder;
}

iconv.getDecoder = function getDecoder(encoding, options) {
    var codec = iconv.getCodec(encoding),
        decoder = new codec.decoder(options, codec);

    if (codec.bomAware && !(options && options.stripBOM === false))
        decoder = new bomHandling.StripBOM(decoder, options);

    return decoder;
}


// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.
var nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;
if (nodeVer) {

    // Load streaming support in Node v0.10+
    var nodeVerArr = nodeVer.split(".").map(Number);
    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {
        require("./streams")(iconv);
    }

    // Load Node primitive extensions.
    require("./extend-node")(iconv);
}


}).call(this,require('_process'),require("buffer").Buffer)
},{"../encodings":92,"./bom-handling":107,"./extend-node":3,"./streams":3,"_process":25,"buffer":17}],109:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
(function() {
  var ArrayT, NumberT, utils;

  NumberT = require('./Number').Number;

  utils = require('./utils');

  ArrayT = (function() {
    function ArrayT(type, length) {
      this.type = type;
      this.length = length;
    }

    ArrayT.prototype.decode = function(stream, parent) {
      var ctx, i, length, pos, res, _i;
      pos = stream.pos;
      res = [];
      ctx = parent;
      length = utils.resolveLength(this.length, stream, parent);
      if (this.length instanceof NumberT) {
        Object.defineProperties(res, {
          parent: {
            value: parent
          },
          _startOffset: {
            value: pos
          },
          _currentOffset: {
            value: 0,
            writable: true
          },
          _length: {
            value: length
          }
        });
        ctx = res;
      }
      if ((parent != null ? parent._length : void 0) && (length == null)) {
        while (stream.pos < parent._length + parent._startOffset) {
          res.push(this.type.decode(stream, ctx));
        }
      } else {
        for (i = _i = 0; _i < length; i = _i += 1) {
          res.push(this.type.decode(stream, ctx));
        }
      }
      return res;
    };

    ArrayT.prototype.size = function(array, ctx) {
      var item, size, _i, _len;
      if (!array) {
        return this.type.size(null, ctx) * utils.resolveLength(this.length, null, ctx);
      }
      size = 0;
      if (this.length instanceof NumberT) {
        size += this.length.size();
        ctx = {
          parent: ctx
        };
      }
      for (_i = 0, _len = array.length; _i < _len; _i++) {
        item = array[_i];
        size += this.type.size(item, ctx);
      }
      return size;
    };

    ArrayT.prototype.encode = function(stream, array, parent) {
      var ctx, i, item, ptr, _i, _len;
      ctx = parent;
      if (this.length instanceof NumberT) {
        ctx = {
          pointers: [],
          startOffset: stream.pos,
          parent: parent
        };
        ctx.pointerOffset = stream.pos + this.size(array, ctx);
        this.length.encode(stream, array.length);
      }
      for (_i = 0, _len = array.length; _i < _len; _i++) {
        item = array[_i];
        this.type.encode(stream, item, ctx);
      }
      if (this.length instanceof NumberT) {
        i = 0;
        while (i < ctx.pointers.length) {
          ptr = ctx.pointers[i++];
          ptr.type.encode(stream, ptr.val);
        }
      }
    };

    return ArrayT;

  })();

  module.exports = ArrayT;

}).call(this);

},{"./Number":115,"./utils":122}],110:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
(function() {
  var Bitfield;

  Bitfield = (function() {
    function Bitfield(type, flags) {
      this.type = type;
      this.flags = flags != null ? flags : [];
    }

    Bitfield.prototype.decode = function(stream) {
      var flag, i, res, val, _i, _len, _ref;
      val = this.type.decode(stream);
      res = {};
      _ref = this.flags;
      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
        flag = _ref[i];
        if (flag != null) {
          res[flag] = !!(val & (1 << i));
        }
      }
      return res;
    };

    Bitfield.prototype.size = function() {
      return this.type.size();
    };

    Bitfield.prototype.encode = function(stream, keys) {
      var flag, i, val, _i, _len, _ref;
      val = 0;
      _ref = this.flags;
      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
        flag = _ref[i];
        if (flag != null) {
          if (keys[flag]) {
            val |= 1 << i;
          }
        }
      }
      return this.type.encode(stream, val);
    };

    return Bitfield;

  })();

  module.exports = Bitfield;

}).call(this);

},{}],111:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
(function() {
  var BufferT, utils;

  utils = require('./utils');

  BufferT = (function() {
    function BufferT(length) {
      this.length = length;
    }

    BufferT.prototype.decode = function(stream, parent) {
      var length;
      length = utils.resolveLength(this.length, stream, parent);
      return stream.readBuffer(length);
    };

    BufferT.prototype.size = function(val) {
      return val.length;
    };

    BufferT.prototype.encode = function(stream, buf, parent) {
      return stream.writeBuffer(buf);
    };

    return BufferT;

  })();

  module.exports = BufferT;

}).call(this);

},{"./utils":122}],112:[function(require,module,exports){
(function (Buffer){
// Generated by CoffeeScript 1.7.1
(function() {
  var DecodeStream, iconv;

  iconv = require('iconv-lite');

  DecodeStream = (function() {
    var key;

    function DecodeStream(buffer) {
      this.buffer = buffer;
      this.pos = 0;
      this.length = this.buffer.length;
    }

    DecodeStream.TYPES = {
      UInt8: 1,
      UInt16: 2,
      UInt24: 3,
      UInt32: 4,
      Int8: 1,
      Int16: 2,
      Int24: 3,
      Int32: 4,
      Float: 4,
      Double: 8
    };

    for (key in Buffer.prototype) {
      if (key.slice(0, 4) === 'read') {
        (function(key) {
          var bytes;
          bytes = DecodeStream.TYPES[key.replace(/read|[BL]E/g, '')];
          return DecodeStream.prototype[key] = function() {
            var ret;
            ret = this.buffer[key](this.pos);
            this.pos += bytes;
            return ret;
          };
        })(key);
      }
    }

    DecodeStream.prototype.readString = function(length, encoding) {
      var buf, byte, i, _i, _ref;
      if (encoding == null) {
        encoding = 'ascii';
      }
      switch (encoding) {
        case 'utf16le':
        case 'ucs2':
        case 'utf8':
        case 'ascii':
          return this.buffer.toString(encoding, this.pos, this.pos += length);
        case 'utf16be':
          buf = new Buffer(this.readBuffer(length));
          for (i = _i = 0, _ref = buf.length - 1; _i < _ref; i = _i += 2) {
            byte = buf[i];
            buf[i] = buf[i + 1];
            buf[i + 1] = byte;
          }
          return buf.toString('utf16le');
        default:
          buf = this.readBuffer(length);
          return iconv.decode(buf, encoding);
      }
    };

    DecodeStream.prototype.readBuffer = function(length) {
      return this.buffer.slice(this.pos, this.pos += length);
    };

    DecodeStream.prototype.readUInt24BE = function() {
      return (this.readUInt16BE() << 8) + this.readUInt8();
    };

    DecodeStream.prototype.readUInt24LE = function() {
      return this.readUInt16LE() + (this.readUInt8() << 16);
    };

    DecodeStream.prototype.readInt24BE = function() {
      return (this.readInt16BE() << 8) + this.readUInt8();
    };

    DecodeStream.prototype.readInt24LE = function() {
      return this.readUInt16LE() + (this.readInt8() << 16);
    };

    return DecodeStream;

  })();

  module.exports = DecodeStream;

}).call(this);

}).call(this,require("buffer").Buffer)
},{"buffer":17,"iconv-lite":108}],113:[function(require,module,exports){
(function (Buffer){
// Generated by CoffeeScript 1.7.1
(function() {
  var DecodeStream, EncodeStream, iconv, stream,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  stream = require('stream');

  DecodeStream = require('./DecodeStream');

  iconv = require('iconv-lite');

  EncodeStream = (function(_super) {
    var key;

    __extends(EncodeStream, _super);

    function EncodeStream() {
      EncodeStream.__super__.constructor.apply(this, arguments);
      this.pos = 0;
    }

    for (key in Buffer.prototype) {
      if (key.slice(0, 5) === 'write') {
        (function(key) {
          var bytes;
          bytes = DecodeStream.TYPES[key.replace(/write|[BL]E/g, '')];
          return EncodeStream.prototype[key] = function(value) {
            var buffer;
            buffer = new Buffer(+bytes);
            buffer[key](value, 0);
            return this.writeBuffer(buffer);
          };
        })(key);
      }
    }

    EncodeStream.prototype._read = function() {};

    EncodeStream.prototype.writeBuffer = function(buffer) {
      this.push(buffer);
      return this.pos += buffer.length;
    };

    EncodeStream.prototype.writeString = function(string, encoding) {
      var buf, byte, i, _i, _ref;
      if (encoding == null) {
        encoding = 'ascii';
      }
      switch (encoding) {
        case 'utf16le':
        case 'ucs2':
        case 'utf8':
        case 'ascii':
          return this.writeBuffer(new Buffer(string, encoding));
        case 'utf16be':
          buf = new Buffer(string, 'utf16le');
          for (i = _i = 0, _ref = buf.length - 1; _i < _ref; i = _i += 2) {
            byte = buf[i];
            buf[i] = buf[i + 1];
            buf[i + 1] = byte;
          }
          return this.writeBuffer(buf);
        default:
          return this.writeBuffer(iconv.encode(string, encoding));
      }
    };

    EncodeStream.prototype.writeUInt24BE = function(val) {
      var buf;
      buf = new Buffer(3);
      buf[0] = val >>> 16 & 0xff;
      buf[1] = val >>> 8 & 0xff;
      buf[2] = val & 0xff;
      return this.writeBuffer(buf);
    };

    EncodeStream.prototype.writeUInt24LE = function(val) {
      var buf;
      buf = new Buffer(3);
      buf[0] = val & 0xff;
      buf[1] = val >>> 8 & 0xff;
      buf[2] = val >>> 16 & 0xff;
      return this.writeBuffer(buf);
    };

    EncodeStream.prototype.writeInt24BE = function(val) {
      if (val >= 0) {
        return this.writeUInt24BE(val);
      } else {
        return this.writeUInt24BE(val + 0xffffff + 1);
      }
    };

    EncodeStream.prototype.writeInt24LE = function(val) {
      if (val >= 0) {
        return this.writeUInt24LE(val);
      } else {
        return this.writeUInt24LE(val + 0xffffff + 1);
      }
    };

    EncodeStream.prototype.fill = function(val, length) {
      var buf;
      buf = new Buffer(length);
      buf.fill(val);
      return this.writeBuffer(buf);
    };

    EncodeStream.prototype.end = function() {
      return this.push(null);
    };

    return EncodeStream;

  })(stream.Readable);

  module.exports = EncodeStream;

}).call(this);

}).call(this,require("buffer").Buffer)
},{"./DecodeStream":112,"buffer":17,"iconv-lite":108,"stream":37}],114:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
(function() {
  var Enum;

  Enum = (function() {
    function Enum(type, options) {
      this.type = type;
      this.options = options != null ? options : [];
    }

    Enum.prototype.decode = function(stream) {
      var index;
      index = this.type.decode(stream);
      return this.options[index] || index;
    };

    Enum.prototype.size = function() {
      return this.type.size();
    };

    Enum.prototype.encode = function(stream, val) {
      var index;
      index = this.options.indexOf(val);
      if (index === -1) {
        throw new Error("Unknown option in enum: " + val);
      }
      return this.type.encode(stream, index);
    };

    return Enum;

  })();

  module.exports = Enum;

}).call(this);

},{}],115:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
(function() {
  var DecodeStream, Fixed, NumberT,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  DecodeStream = require('./DecodeStream');

  NumberT = (function() {
    function NumberT(type, endian) {
      this.type = type;
      this.endian = endian != null ? endian : 'BE';
      this.fn = this.type;
      if (this.type[this.type.length - 1] !== '8') {
        this.fn += this.endian;
      }
    }

    NumberT.prototype.size = function() {
      return DecodeStream.TYPES[this.type];
    };

    NumberT.prototype.decode = function(stream) {
      return stream['read' + this.fn]();
    };

    NumberT.prototype.encode = function(stream, val) {
      return stream['write' + this.fn](val);
    };

    return NumberT;

  })();

  exports.Number = NumberT;

  exports.uint8 = new NumberT('UInt8');

  exports.uint16 = new NumberT('UInt16');

  exports.uint24 = new NumberT('UInt24');

  exports.uint32 = new NumberT('UInt32');

  exports.int8 = new NumberT('Int8');

  exports.int16 = new NumberT('Int16');

  exports.int24 = new NumberT('Int24');

  exports.int32 = new NumberT('Int32');

  exports.float = new NumberT('Float');

  exports.double = new NumberT('Double');

  Fixed = (function(_super) {
    __extends(Fixed, _super);

    function Fixed(size, endian) {
      Fixed.__super__.constructor.call(this, "Int" + size, endian);
      this._point = 1 << (size >> 1);
    }

    Fixed.prototype.decode = function(stream) {
      return Fixed.__super__.decode.call(this, stream) / this._point;
    };

    Fixed.prototype.encode = function(stream, val) {
      return Fixed.__super__.encode.call(this, stream, val * this._point | 0);
    };

    return Fixed;

  })(NumberT);

  exports.Fixed = Fixed;

  exports.fixed16 = new Fixed(16);

  exports.fixed32 = new Fixed(32);

}).call(this);

},{"./DecodeStream":112}],116:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
(function() {
  var Optional;

  Optional = (function() {
    function Optional(type, condition) {
      this.type = type;
      this.condition = condition != null ? condition : true;
    }

    Optional.prototype.decode = function(stream, parent) {
      var condition;
      condition = this.condition;
      if (typeof condition === 'function') {
        condition = condition.call(parent);
      }
      if (condition) {
        return this.type.decode(stream, parent);
      }
    };

    Optional.prototype.size = function(val, parent) {
      var condition;
      condition = this.condition;
      if (typeof condition === 'function') {
        condition = condition.call(parent);
      }
      if (condition) {
        return this.type.size(val, parent);
      } else {
        return 0;
      }
    };

    Optional.prototype.encode = function(stream, val, parent) {
      var condition;
      condition = this.condition;
      if (typeof condition === 'function') {
        condition = condition.call(parent);
      }
      if (condition) {
        return this.type.encode(stream, val, parent);
      }
    };

    return Optional;

  })();

  module.exports = Optional;

}).call(this);

},{}],117:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
(function() {
  var Pointer, VoidPointer;

  Pointer = (function() {
    function Pointer(offsetType, type, options) {
      var _base, _base1;
      this.offsetType = offsetType;
      this.type = type;
      this.options = options != null ? options : {};
      if (this.type === 'void') {
        this.type = null;
      }
      if ((_base = this.options).type == null) {
        _base.type = 'local';
      }
      if ((_base1 = this.options).allowNull == null) {
        _base1.allowNull = true;
      }
      if (this.options.relativeTo) {
        this.relativeToGetter = new Function('ctx', "return ctx." + this.options.relativeTo);
      }
    }

    Pointer.prototype.decode = function(stream, ctx) {
      var c, offset, pos, ptr, relative, res;
      offset = this.offsetType.decode(stream);
      pos = stream.pos;
      if (offset === 0 && this.options.allowNull) {
        return null;
      }
      relative = (function() {
        switch (this.options.type) {
          case 'local':
            return ctx._startOffset;
          case 'immediate':
            return stream.pos - this.offsetType.size();
          case 'parent':
            return ctx.parent._startOffset;
          default:
            c = ctx;
            while (c.parent) {
              c = c.parent;
            }
            return c._startOffset;
        }
      }).call(this);
      if (this.options.relativeTo) {
        relative += this.relativeToGetter(ctx);
      }
      ptr = offset + relative;
      if (this.type != null) {
        stream.pos = ptr;
        res = this.type.decode(stream, ctx);
        stream.pos = pos;
        return res;
      } else {
        return ptr;
      }
    };

    Pointer.prototype.size = function(val, ctx) {
      var parent, type;
      if (val == null) {
        return this.offsetType.size();
      }
      parent = ctx;
      switch (this.options.type) {
        case 'local':
        case 'immediate':
          break;
        case 'parent':
          ctx = ctx.parent;
          break;
        default:
          while (ctx.parent) {
            ctx = ctx.parent;
          }
      }
      type = this.type;
      if (type == null) {
        if (!(val instanceof VoidPointer)) {
          throw new Error("Must be a VoidPointer");
        }
        type = val.type;
        val = val.value;
      }
      if (ctx != null) {
        ctx.pointerSize += type.size(val, parent);
      }
      return this.offsetType.size();
    };

    Pointer.prototype.encode = function(stream, val, ctx) {
      var parent, relative, type;
      parent = ctx;
      if (val == null) {
        this.offsetType.encode(stream, 0);
        return;
      }
      switch (this.options.type) {
        case 'local':
          relative = ctx.startOffset;
          break;
        case 'immediate':
          relative = stream.pos + this.offsetType.size(val, parent);
          break;
        case 'parent':
          ctx = ctx.parent;
          relative = ctx.startOffset;
          break;
        default:
          relative = 0;
          while (ctx.parent) {
            ctx = ctx.parent;
          }
      }
      if (this.options.relativeTo) {
        relative += this.relativeToGetter(parent.val);
      }
      this.offsetType.encode(stream, ctx.pointerOffset - relative);
      type = this.type;
      if (type == null) {
        if (!(val instanceof VoidPointer)) {
          throw new Error("Must be a VoidPointer");
        }
        type = val.type;
        val = val.value;
      }
      ctx.pointers.push({
        type: type,
        val: val,
        parent: parent
      });
      return ctx.pointerOffset += type.size(val, parent);
    };

    return Pointer;

  })();

  VoidPointer = (function() {
    function VoidPointer(type, value) {
      this.type = type;
      this.value = value;
    }

    return VoidPointer;

  })();

  exports.Pointer = Pointer;

  exports.VoidPointer = VoidPointer;

}).call(this);

},{}],118:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
(function() {
  var Reserved, utils;

  utils = require('./utils');

  Reserved = (function() {
    function Reserved(type, count) {
      this.type = type;
      this.count = count != null ? count : 1;
    }

    Reserved.prototype.decode = function(stream, parent) {
      stream.pos += this.size(null, parent);
      return void 0;
    };

    Reserved.prototype.size = function(data, parent) {
      var count;
      count = utils.resolveLength(this.count, null, parent);
      return this.type.size() * count;
    };

    Reserved.prototype.encode = function(stream, val, parent) {
      return stream.fill(0, this.size(val, parent));
    };

    return Reserved;

  })();

  module.exports = Reserved;

}).call(this);

},{"./utils":122}],119:[function(require,module,exports){
(function (Buffer){
// Generated by CoffeeScript 1.7.1
(function() {
  var NumberT, StringT, utils;

  NumberT = require('./Number').Number;

  utils = require('./utils');

  StringT = (function() {
    function StringT(length, encoding) {
      this.length = length;
      this.encoding = encoding != null ? encoding : 'ascii';
    }

    StringT.prototype.decode = function(stream, parent) {
      var buffer, encoding, length, pos, string;
      length = (function() {
        if (this.length != null) {
          return utils.resolveLength(this.length, stream, parent);
        } else {
          buffer = stream.buffer, length = stream.length, pos = stream.pos;
          while (pos < length && buffer[pos] !== 0x00) {
            ++pos;
          }
          return pos - stream.pos;
        }
      }).call(this);
      encoding = this.encoding;
      if (typeof encoding === 'function') {
        encoding = encoding.call(parent) || 'ascii';
      }
      string = stream.readString(length, encoding);
      if ((this.length == null) && stream.pos < stream.length) {
        stream.pos++;
      }
      return string;
    };

    StringT.prototype.size = function(val, parent) {
      var encoding, size;
      encoding = this.encoding;
      if (typeof encoding === 'function') {
        encoding = encoding.call(parent != null ? parent.val : void 0) || 'ascii';
      }
      if (encoding === 'utf16be') {
        encoding = 'utf16le';
      }
      size = Buffer.byteLength(val, encoding);
      if (this.length instanceof NumberT) {
        size += this.length.size();
      }
      if (this.length == null) {
        size++;
      }
      return size;
    };

    StringT.prototype.encode = function(stream, val, parent) {
      var encoding;
      encoding = this.encoding;
      if (typeof encoding === 'function') {
        encoding = encoding.call(parent != null ? parent.val : void 0) || 'ascii';
      }
      if (this.length instanceof NumberT) {
        this.length.encode(stream, Buffer.byteLength(val, encoding));
      }
      stream.writeString(val, encoding);
      if (this.length == null) {
        return stream.writeUInt8(0x00);
      }
    };

    return StringT;

  })();

  module.exports = StringT;

}).call(this);

}).call(this,require("buffer").Buffer)
},{"./Number":115,"./utils":122,"buffer":17}],120:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
(function() {
  var Struct;

  Struct = (function() {
    function Struct(fields) {
      this.fields = fields != null ? fields : {};
    }

    Struct.prototype.decode = function(stream, parent, length) {
      var res, _ref;
      if (length == null) {
        length = 0;
      }
      res = this._setup(stream, parent, length);
      this._parseFields(stream, res, this.fields);
      if ((_ref = this.process) != null) {
        _ref.call(res, stream);
      }
      return res;
    };

    Struct.prototype._setup = function(stream, parent, length) {
      var res;
      res = {};
      Object.defineProperties(res, {
        parent: {
          value: parent
        },
        _startOffset: {
          value: stream.pos
        },
        _currentOffset: {
          value: 0,
          writable: true
        },
        _length: {
          value: length
        }
      });
      return res;
    };

    Struct.prototype._parseFields = function(stream, res, fields) {
      var key, type, val;
      for (key in fields) {
        type = fields[key];
        if (typeof type === 'function') {
          val = type.call(res);
        } else {
          val = type.decode(stream, res);
        }
        if (val !== void 0) {
          res[key] = val;
        }
        res._currentOffset = stream.pos - res._startOffset;
      }
    };

    Struct.prototype.size = function(val, parent, includePointers) {
      var ctx, key, size, type, _ref;
      if (val == null) {
        val = {};
      }
      if (includePointers == null) {
        includePointers = true;
      }
      ctx = {
        parent: parent,
        val: val,
        pointerSize: 0
      };
      size = 0;
      _ref = this.fields;
      for (key in _ref) {
        type = _ref[key];
        if (type.size != null) {
          size += type.size(val[key] || 0, ctx);
        }
      }
      if (includePointers) {
        size += ctx.pointerSize;
      }
      return size;
    };

    Struct.prototype.encode = function(stream, val, parent) {
      var ctx, i, key, ptr, type, _ref, _ref1;
      if ((_ref = this.preEncode) != null) {
        _ref.call(val, stream);
      }
      ctx = {
        pointers: [],
        startOffset: stream.pos,
        parent: parent,
        val: val,
        pointerSize: 0
      };
      ctx.pointerOffset = stream.pos + this.size(val, ctx, false);
      _ref1 = this.fields;
      for (key in _ref1) {
        type = _ref1[key];
        if (type.encode != null) {
          type.encode(stream, val[key], ctx);
        }
      }
      i = 0;
      while (i < ctx.pointers.length) {
        ptr = ctx.pointers[i++];
        ptr.type.encode(stream, ptr.val, ptr.parent);
      }
    };

    return Struct;

  })();

  module.exports = Struct;

}).call(this);

},{}],121:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
(function() {
  var Struct, VersionedStruct,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Struct = require('./Struct');

  VersionedStruct = (function(_super) {
    __extends(VersionedStruct, _super);

    function VersionedStruct(type, versions) {
      this.type = type;
      this.versions = versions != null ? versions : {};
      if (typeof this.type === 'string') {
        this.versionGetter = new Function('parent', "return parent." + this.type);
        this.versionSetter = new Function('parent', 'version', "return parent." + this.type + " = version");
      }
    }

    VersionedStruct.prototype.decode = function(stream, parent, length) {
      var fields, res, _ref;
      if (length == null) {
        length = 0;
      }
      res = this._setup(stream, parent, length);
      if (typeof this.type === 'string') {
        res.version = this.versionGetter(parent);
      } else {
        res.version = this.type.decode(stream);
      }
      if (this.versions.header) {
        this._parseFields(stream, res, this.versions.header);
      }
      fields = this.versions[res.version];
      if (fields == null) {
        throw new Error("Unknown version " + res.version);
      }
      if (fields instanceof VersionedStruct) {
        return fields.decode(stream, parent);
      }
      this._parseFields(stream, res, fields);
      if ((_ref = this.process) != null) {
        _ref.call(res, stream);
      }
      return res;
    };

    VersionedStruct.prototype.size = function(val, parent, includePointers) {
      var ctx, fields, key, size, type, _ref;
      if (includePointers == null) {
        includePointers = true;
      }
      ctx = {
        parent: parent,
        val: val,
        pointerSize: 0
      };
      size = 0;
      if (typeof this.type !== 'string') {
        size += this.type.size(val.version, ctx);
      }
      if (this.versions.header) {
        _ref = this.versions.header;
        for (key in _ref) {
          type = _ref[key];
          if (type.size != null) {
            size += type.size(val[key] || 0, ctx);
          }
        }
      }
      fields = this.versions[val.version];
      if (fields == null) {
        throw new Error("Unknown version " + val.version);
      }
      for (key in fields) {
        type = fields[key];
        if (type.size != null) {
          size += type.size(val[key] || 0, ctx);
        }
      }
      if (includePointers) {
        size += ctx.pointerSize;
      }
      return size;
    };

    VersionedStruct.prototype.encode = function(stream, val, parent) {
      var ctx, fields, i, key, ptr, type, _ref, _ref1;
      if ((_ref = this.preEncode) != null) {
        _ref.call(val, stream);
      }
      ctx = {
        pointers: [],
        startOffset: stream.pos,
        parent: parent,
        val: val,
        pointerSize: 0
      };
      ctx.pointerOffset = stream.pos + this.size(val, ctx, false);
      if (typeof this.type !== 'string') {
        this.type.encode(stream, val.version);
      }
      if (this.versions.header) {
        _ref1 = this.versions.header;
        for (key in _ref1) {
          type = _ref1[key];
          if (type.encode != null) {
            type.encode(stream, val[key] || 0, ctx);
          }
        }
      }
      fields = this.versions[val.version];
      for (key in fields) {
        type = fields[key];
        if (type.encode != null) {
          type.encode(stream, val[key], ctx);
        }
      }
      i = 0;
      while (i < ctx.pointers.length) {
        ptr = ctx.pointers[i++];
        ptr.type.encode(stream, ptr.val, ptr.parent);
      }
    };

    return VersionedStruct;

  })(Struct);

  module.exports = VersionedStruct;

}).call(this);

},{"./Struct":120}],122:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
(function() {
  var NumberT;

  NumberT = require('./Number').Number;

  exports.resolveLength = function(length, stream, parent) {
    if (typeof length === 'number') {
      return length;
    }
    if (typeof length === 'function') {
      return length.call(parent);
    }
    if (parent && typeof length === 'string') {
      return parent[length];
    }
    if (length instanceof NumberT) {
      return length.decode(stream);
    }
    return null;
  };

}).call(this);

},{"./Number":115}],123:[function(require,module,exports){
(function (Buffer){
/**
 * Convert a typed array to a Buffer without a copy
 *
 * Author:   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * License:  MIT
 *
 * `npm install typedarray-to-buffer`
 */

var isTypedArray = require('is-typedarray').strict

module.exports = function (arr) {
  // If `Buffer` is the browser `buffer` module, and the browser supports typed arrays,
  // then avoid a copy. Otherwise, create a `Buffer` with a copy.
  var constructor = Buffer.TYPED_ARRAY_SUPPORT
    ? Buffer._augment
    : function (arr) { return new Buffer(arr) }

  if (arr instanceof Uint8Array) {
    return constructor(arr)
  } else if (arr instanceof ArrayBuffer) {
    return constructor(new Uint8Array(arr))
  } else if (isTypedArray(arr)) {
    // Use the typed array's underlying ArrayBuffer to back new Buffer. This respects
    // the "view" on the ArrayBuffer, i.e. byteOffset and byteLength. No copy.
    return constructor(new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength))
  } else {
    // Unsupported type, just pass it through to the `Buffer` constructor.
    return new Buffer(arr)
  }
}

}).call(this,require("buffer").Buffer)
},{"buffer":17,"is-typedarray":124}],124:[function(require,module,exports){
module.exports      = isTypedArray
isTypedArray.strict = isStrictTypedArray
isTypedArray.loose  = isLooseTypedArray

var toString = Object.prototype.toString
var names = {
    '[object Int8Array]': true
  , '[object Int16Array]': true
  , '[object Int32Array]': true
  , '[object Uint8Array]': true
  , '[object Uint8ClampedArray]': true
  , '[object Uint16Array]': true
  , '[object Uint32Array]': true
  , '[object Float32Array]': true
  , '[object Float64Array]': true
}

function isTypedArray(arr) {
  return (
       isStrictTypedArray(arr)
    || isLooseTypedArray(arr)
  )
}

function isStrictTypedArray(arr) {
  return (
       arr instanceof Int8Array
    || arr instanceof Int16Array
    || arr instanceof Int32Array
    || arr instanceof Uint8Array
    || arr instanceof Uint8ClampedArray
    || arr instanceof Uint16Array
    || arr instanceof Uint32Array
    || arr instanceof Float32Array
    || arr instanceof Float64Array
  )
}

function isLooseTypedArray(arr) {
  return names[toString.call(arr)]
}

},{}],125:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var CFFFont, CFFIndex, CFFPrivateDict, CFFTop, r, standardStrings;

  r = require('restructure');

  CFFIndex = require('./cff/CFFIndex');

  CFFTop = require('./cff/CFFTop');

  CFFPrivateDict = require('./cff/CFFPrivateDict');

  standardStrings = require('./cff/CFFStandardStrings');

  CFFFont = (function() {
    var get;

    function CFFFont(stream) {
      this.stream = stream;
      this.decode();
    }

    CFFFont.decode = function(stream) {
      return new CFFFont(stream);
    };

    CFFFont.open = function(filename, name) {
      var contents;
      contents = typeof require === "function" ? require('fs').readFileSync(filename) : void 0;
      return new CFFFont(new r.DecodeStream(contents));
    };

    CFFFont.prototype.decode = function() {
      var key, start, top, val;
      start = this.stream.pos;
      top = CFFTop.decode(this.stream);
      for (key in top) {
        val = top[key];
        this[key] = val;
      }
      if (this.topDictIndex.length !== 1) {
        throw new Error("Only a single font is allowed in CFF");
      }
      this.isCIDFont = this.topDict.ROS != null;
      switch (this.topDictIndex[0].Encoding) {
        case 0:
          break;
        case 1:
          break;
        default:
          break;
      }
      return this;
    };

    get = function(key, fn) {
      return Object.defineProperty(CFFFont.prototype, key, {
        get: fn,
        enumerable: true
      });
    };

    CFFFont.prototype.string = function(sid) {
      if (sid <= standardStrings.length) {
        return standardStrings[sid];
      }
      return this.stringIndex[sid - standardStrings.length];
    };

    get('topDict', function() {
      return this.topDictIndex[0];
    });

    get('postscriptName', function() {
      return this.nameIndex[0];
    });

    get('fullName', function() {
      return this.string(this.topDict.FullName);
    });

    get('familyName', function() {
      return this.string(this.topDict.FamilyName);
    });

    CFFFont.prototype.getCharString = function(glyph) {
      this.stream.pos = this.topDict.CharStrings[glyph].offset;
      return this.stream.readBuffer(this.topDict.CharStrings[glyph].length);
    };

    CFFFont.prototype.fdForGlyph = function(gid) {
      var high, low, mid, ranges, _ref;
      if (!this.topDict.FDSelect) {
        return null;
      }
      switch (this.topDict.FDSelect.version) {
        case 0:
          return this.topDict.FDSelect.fds[gid];
        case 3:
          ranges = this.topDict.FDSelect.ranges;
          low = 0;
          high = ranges.length - 1;
          while (low <= high) {
            mid = (low + high) >> 1;
            if (gid < ranges[mid].first) {
              high = mid - 1;
            } else if (gid > ((_ref = ranges[mid + 1]) != null ? _ref.first : void 0)) {
              low = mid + 1;
            } else {
              return ranges[mid].fd;
            }
          }
          break;
        default:
          throw new Error("Unknown FDSelect version: " + this.topDict.FDSelect.version);
      }
    };

    CFFFont.prototype.privateDictForGlyph = function(gid) {
      var fd, _ref;
      if (this.topDict.FDSelect) {
        fd = this.fdForGlyph(gid);
        if (fd != null) {
          return (_ref = this.topDict.FDArray[fd]) != null ? _ref.Private : void 0;
        } else {
          return null;
        }
      }
      return this.topDict.Private;
    };

    return CFFFont;

  })();

  module.exports = CFFFont;

}).call(this);

},{"./cff/CFFIndex":138,"./cff/CFFPrivateDict":141,"./cff/CFFStandardStrings":142,"./cff/CFFTop":143,"fs":1,"restructure":89}],126:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var CmapProcessor;

  CmapProcessor = (function() {
    function CmapProcessor(cmapTable) {
      var cmap, _i, _j, _len, _len1, _ref, _ref1, _ref2;
      this._characterSet = null;
      _ref = cmapTable.tables;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        cmap = _ref[_i];
        if ((cmap.platformID === 0 && ((_ref1 = cmap.encodingID) === 4 || _ref1 === 6)) || (cmap.platformID === 3 && cmap.encodingID === 10)) {
          this.cmap = cmap.table;
          return;
        }
      }
      _ref2 = cmapTable.tables;
      for (_j = 0, _len1 = _ref2.length; _j < _len1; _j++) {
        cmap = _ref2[_j];
        if (cmap.platformID === 0 || (cmap.platformID === 3 && cmap.encodingID === 1)) {
          this.cmap = cmap.table;
          return;
        }
      }
      throw new Error("Could not find a unicode cmap");
    }

    CmapProcessor.prototype.lookup = function(codepoint) {
      var cmap, gid, group, index, max, mid, min, rangeOffset;
      cmap = this.cmap;
      switch (cmap.version) {
        case 0:
          return cmap.codeMap[codepoint] || 0;
        case 4:
          min = 0;
          max = cmap.segCount - 1;
          while (min <= max) {
            mid = (min + max) >> 1;
            if (codepoint < cmap.startCode[mid]) {
              max = mid - 1;
            } else if (codepoint > cmap.endCode[mid]) {
              min = mid + 1;
            } else {
              rangeOffset = cmap.idRangeOffset[mid];
              if (rangeOffset === 0) {
                gid = codepoint + cmap.idDelta[mid];
              } else {
                index = rangeOffset / 2 + (codepoint - cmap.startCode[mid]) - (cmap.segCount - mid);
                gid = cmap.glyphIndexArray[index] || 0;
                if (gid !== 0) {
                  gid += cmap.idDelta[mid];
                }
              }
              return gid & 0xffff;
            }
          }
          return 0;
        case 8:
          throw new Error('TODO: cmap format 8');
          break;
        case 6:
        case 10:
          return cmap.glyphIndices[codepoint - cmap.firstCode] || 0;
        case 12:
        case 13:
          min = 0;
          max = cmap.nGroups - 1;
          while (min <= max) {
            mid = (min + max) >> 1;
            group = cmap.groups[mid];
            if (codepoint < group.startCharCode) {
              max = mid - 1;
            } else if (codepoint > group.endCharCode) {
              min = mid + 1;
            } else {
              if (cmap.version === 12) {
                return group.glyphID + (codepoint - group.startCharCode);
              } else {
                return group.glyphID;
              }
            }
          }
          return 0;
        case 14:
          throw new Error('TODO: cmap format 14');
          break;
        default:
          throw new Error('Unknown cmap format ' + cmap.version);
      }
    };

    CmapProcessor.prototype.getCharacterSet = function() {
      var cmap, group, i, res, start, tail, _i, _j, _k, _l, _len, _len1, _m, _n, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6, _results, _results1, _results2, _results3;
      if (this._characterSet) {
        return this._characterSet;
      }
      cmap = this.cmap;
      switch (cmap.version) {
        case 0:
          this._characterSet = (function() {
            _results = [];
            for (var _i = 0, _ref = cmap.codeMap.length; 0 <= _ref ? _i < _ref : _i > _ref; 0 <= _ref ? _i++ : _i--){ _results.push(_i); }
            return _results;
          }).apply(this);
          break;
        case 4:
          res = [];
          _ref1 = cmap.endCode;
          for (i = _j = 0, _len = _ref1.length; _j < _len; i = ++_j) {
            tail = _ref1[i];
            start = cmap.startCode[i];
            res.push.apply(res, (function() {
              _results1 = [];
              for (var _k = start; start <= tail ? _k <= tail : _k >= tail; start <= tail ? _k++ : _k--){ _results1.push(_k); }
              return _results1;
            }).apply(this));
          }
          this._characterSet = res;
          break;
        case 8:
          throw new Error('TODO: cmap format 8');
          break;
        case 6:
        case 10:
          this._characterSet = (function() {
            _results2 = [];
            for (var _l = _ref2 = cmap.firstCode, _ref3 = cmap.firstCode + cmap.glyphIndices.length; _ref2 <= _ref3 ? _l < _ref3 : _l > _ref3; _ref2 <= _ref3 ? _l++ : _l--){ _results2.push(_l); }
            return _results2;
          }).apply(this);
          break;
        case 12:
        case 13:
          res = [];
          _ref4 = cmap.groups;
          for (_m = 0, _len1 = _ref4.length; _m < _len1; _m++) {
            group = _ref4[_m];
            res.push.apply(res, (function() {
              _results3 = [];
              for (var _n = _ref5 = group.startCharCode, _ref6 = group.endCharCode; _ref5 <= _ref6 ? _n <= _ref6 : _n >= _ref6; _ref5 <= _ref6 ? _n++ : _n--){ _results3.push(_n); }
              return _results3;
            }).apply(this));
          }
          this._characterSet = res;
          break;
        case 14:
          throw new Error('TODO: cmap format 14');
          break;
        default:
          throw new Error('Unknown cmap format ' + cmap.version);
      }
      return this._characterSet;
    };

    return CmapProcessor;

  })();

  module.exports = CmapProcessor;

}).call(this);

},{}],127:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var DFont, TTFFont, r;

  r = require('restructure');

  TTFFont = require('./TTFFont');

  DFont = (function() {
    var DFontData, DFontHeader, DFontMap, DFontName, Ref, Type, TypeList, get;

    DFontName = new r.String(r.uint8);

    DFontData = new r.Struct({
      len: r.uint32,
      buf: new r.Buffer('len')
    });

    Ref = new r.Struct({
      id: r.uint16,
      nameOffset: r.int16,
      attr: r.uint8,
      dataOffset: r.uint24,
      handle: r.uint32
    });

    Type = new r.Struct({
      name: new r.String(4),
      maxTypeIndex: r.uint16,
      refList: new r.Pointer(r.uint16, new r.Array(Ref, function() {
        return this.maxTypeIndex + 1;
      }), {
        type: 'parent'
      })
    });

    TypeList = new r.Struct({
      length: r.uint16,
      types: new r.Array(Type, function() {
        return this.length + 1;
      })
    });

    DFontMap = new r.Struct({
      reserved: new r.Reserved(r.uint8, 24),
      typeList: new r.Pointer(r.uint16, TypeList),
      nameListOffset: new r.Pointer(r.uint16, 'void')
    });

    DFontHeader = new r.Struct({
      dataOffset: r.uint32,
      map: new r.Pointer(r.uint32, DFontMap),
      dataLength: r.uint32,
      mapLength: r.uint32
    });

    DFont.isDFont = function(stream) {
      var e, header, pos, type, _i, _len, _ref;
      pos = stream.pos;
      try {
        header = DFontHeader.decode(stream);
      } catch (_error) {
        e = _error;
        return false;
      } finally {
        stream.pos = pos;
      }
      _ref = header.map.typeList.types;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        type = _ref[_i];
        if (type.name === 'sfnt') {
          return true;
        }
      }
      return false;
    };

    function DFont(stream) {
      var ref, type, _i, _j, _len, _len1, _ref, _ref1;
      this.stream = stream;
      this.header = DFontHeader.decode(this.stream);
      _ref = this.header.map.typeList.types;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        type = _ref[_i];
        _ref1 = type.refList;
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          ref = _ref1[_j];
          if (ref.nameOffset >= 0) {
            this.stream.pos = ref.nameOffset + this.header.map.nameListOffset;
            ref.name = DFontName.decode(this.stream);
          } else {
            ref.name = null;
          }
        }
        if (type.name === 'sfnt') {
          this.sfnt = type;
        }
      }
      return;
    }

    DFont.prototype.getFont = function(name) {
      var font, pos, ref, stream, _i, _len, _ref;
      if (!this.sfnt) {
        return null;
      }
      _ref = this.sfnt.refList;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        ref = _ref[_i];
        pos = this.header.dataOffset + ref.dataOffset + 4;
        stream = new r.DecodeStream(this.stream.buffer.slice(pos));
        font = new TTFFont(stream);
        if (font.postscriptName === name) {
          return font;
        }
      }
      return null;
    };

    get = function(key, fn) {
      return Object.defineProperty(DFont.prototype, key, {
        get: fn,
        enumerable: true
      });
    };

    get('fonts', function() {
      var fonts, pos, ref, stream, _i, _len, _ref;
      fonts = [];
      _ref = this.sfnt.refList;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        ref = _ref[_i];
        pos = this.header.dataOffset + ref.dataOffset + 4;
        stream = new r.DecodeStream(this.stream.buffer.slice(pos));
        fonts.push(new TTFFont(stream));
      }
      return fonts;
    });

    return DFont;

  })();

  module.exports = DFont;

}).call(this);

},{"./TTFFont":129,"restructure":89}],128:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var KernProcessor;

  KernProcessor = (function() {
    function KernProcessor(font) {
      this.font = font;
      this.kern = font.kern;
    }

    KernProcessor.prototype.process = function(glyphs, advances) {
      var glyph, glyphIndex, left, right, _i, _len, _results;
      _results = [];
      for (glyphIndex = _i = 0, _len = glyphs.length; _i < _len; glyphIndex = ++_i) {
        glyph = glyphs[glyphIndex];
        if (glyphIndex + 1 >= glyphs.length) {
          break;
        }
        left = glyphs[glyphIndex].id;
        right = glyphs[glyphIndex + 1].id;
        _results.push(advances[glyphIndex] += this.getKerning(left, right) * this.font.scale);
      }
      return _results;
    };

    KernProcessor.prototype.getKerning = function(left, right) {
      var pair, res, s, table, val, _i, _j, _len, _len1, _ref, _ref1;
      res = 0;
      _ref = this.kern.tables;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        table = _ref[_i];
        if (table.coverage.crossStream) {
          continue;
        }
        switch (table.version) {
          case 0:
            if (!table.coverage.horizontal) {
              continue;
            }
            break;
          case 1:
            if (table.coverage.vertical || table.coverage.variation) {
              continue;
            }
            break;
          default:
            throw new Error("Unsupported kerning table version " + table.version);
        }
        val = 0;
        s = table.subtable;
        switch (table.format) {
          case 0:
            _ref1 = s.pairs;
            for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
              pair = _ref1[_j];
              if (pair.left === left && pair.right === right) {
                val = pair.value;
                break;
              }
            }
            break;
          case 3:
            val = s.kernValue[s.kernIndex[s.leftClass[left] * s.rightClassCount + s.rightClass[right]]];
            break;
          default:
            throw new Error("Unsupported kerning sub-table format " + table.format);
        }
        if (table.coverage.override) {
          res = val;
        } else {
          res += val;
        }
      }
      return res;
    };

    return KernProcessor;

  })();

  module.exports = KernProcessor;

}).call(this);

},{}],129:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var AATFeatureMap, AATMorxProcessor, CFFGlyph, CFFSubset, COLRGlyph, CmapProcessor, Directory, GPOSProcessor, GSUBProcessor, KernProcessor, SBIXGlyph, TTFFont, TTFGlyph, TTFSubset, r, tables,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  r = require('restructure');

  Directory = require('./tables/directory');

  tables = require('./tables');

  CmapProcessor = require('./CmapProcessor');

  GSUBProcessor = require('./opentype/GSUBProcessor');

  GPOSProcessor = require('./opentype/GPOSProcessor');

  AATFeatureMap = require('./aat/AATFeatureMap');

  AATMorxProcessor = require('./aat/AATMorxProcessor');

  KernProcessor = require('./KernProcessor');

  TTFGlyph = require('./glyph/TTFGlyph');

  CFFGlyph = require('./glyph/CFFGlyph');

  SBIXGlyph = require('./glyph/SBIXGlyph');

  COLRGlyph = require('./glyph/COLRGlyph');

  TTFSubset = require('./subset/TTFSubset');

  CFFSubset = require('./subset/CFFSubset');

  TTFFont = (function() {
    var codePointAt, get, getTable;

    function TTFFont(stream) {
      var table, tag, _ref;
      this.stream = stream;
      this._glyphs = {};
      this._decodeDirectory();
      _ref = this.directory.tables;
      for (tag in _ref) {
        table = _ref[tag];
        if (tables[tag]) {
          Object.defineProperty(this, tag, {
            get: getTable.bind(this, table)
          });
        }
      }
      return;
    }

    get = function(key, fn) {
      return Object.defineProperty(TTFFont.prototype, key, {
        get: fn,
        enumerable: true
      });
    };

    getTable = function(table) {
      var key, pos;
      key = '_' + table.tag;
      if (!(key in this)) {
        pos = this.stream.pos;
        this.stream.pos = table.offset;
        this[key] = this._decodeTable(table);
        this.stream.pos = pos;
      }
      return this[key];
    };

    TTFFont.prototype._getTableStream = function(tag) {
      var table;
      table = this.directory.tables[tag];
      if (table) {
        this.stream.pos = table.offset;
        return this.stream;
      }
      return null;
    };

    TTFFont.prototype._decodeDirectory = function() {
      return this.directory = Directory.decode(this.stream, {
        _startOffset: 0
      });
    };

    TTFFont.prototype._decodeTable = function(table) {
      return tables[table.tag].decode(this.stream, this, table.length);
    };

    get('postscriptName', function() {
      var lang, name;
      name = this.name.records.postscriptName;
      lang = Object.keys(name)[0];
      return name[lang];
    });

    get('fullName', function() {
      var _ref;
      return (_ref = this.name.records.fullName) != null ? _ref.English : void 0;
    });

    get('familyName', function() {
      var _ref;
      return (_ref = this.name.records.fontFamily) != null ? _ref.English : void 0;
    });

    get('subfamilyName', function() {
      var _ref;
      return (_ref = this.name.records.fontSubfamily) != null ? _ref.English : void 0;
    });

    get('copyright', function() {
      var _ref;
      return (_ref = this.name.records.copyright) != null ? _ref.English : void 0;
    });

    get('version', function() {
      var _ref;
      return (_ref = this.name.records.version) != null ? _ref.English : void 0;
    });

    get('scale', function() {
      return 1000 / this.head.unitsPerEm;
    });

    get('ascent', function() {
      return this.hhea.ascent * this.scale;
    });

    get('descent', function() {
      return this.hhea.descent * this.scale;
    });

    get('lineGap', function() {
      return this.hhea.lineGap * this.scale;
    });

    get('underlinePosition', function() {
      return this.post.underlinePosition * this.scale;
    });

    get('underlineThickness', function() {
      return this.post.underlineThickness * this.scale;
    });

    get('italicAngle', function() {
      return this.post.italicAngle;
    });

    get('capHeight', function() {
      var _ref;
      return ((_ref = this['OS/2']) != null ? _ref.capHeight : void 0) * this.scale || this.ascent;
    });

    get('xHeight', function() {
      var _ref;
      return ((_ref = this['OS/2']) != null ? _ref.xHeight : void 0) * this.scale || 0;
    });

    get('numGlyphs', function() {
      return this.maxp.numGlyphs;
    });

    get('unitsPerEm', function() {
      return this.head.unitsPerEm;
    });

    get('bbox', function() {
      return [this.head.xMin * this.scale, this.head.yMin * this.scale, this.head.xMax * this.scale, this.head.yMax * this.scale];
    });

    get('characterSet', function() {
      if (this._cmapProcessor == null) {
        this._cmapProcessor = new CmapProcessor(this.cmap);
      }
      return this._cmapProcessor.getCharacterSet();
    });

    TTFFont.prototype.hasGlyphForCodePoint = function(codePoint) {
      if (this._cmapProcessor == null) {
        this._cmapProcessor = new CmapProcessor(this.cmap);
      }
      return !!this._cmapProcessor.lookup(codePoint);
    };

    TTFFont.prototype.glyphForCodePoint = function(codePoint) {
      if (this._cmapProcessor == null) {
        this._cmapProcessor = new CmapProcessor(this.cmap);
      }
      return this.getGlyph(this._cmapProcessor.lookup(codePoint), [codePoint]);
    };

    codePointAt = function(str, idx) {
      var code, next;
      if (idx == null) {
        idx = 0;
      }
      code = str.charCodeAt(idx);
      next = str.charCodeAt(idx + 1);
      if ((0xd800 <= code && code <= 0xdbff) && (0xdc00 <= next && next <= 0xdfff)) {
        return ((code - 0xd800) * 0x400) + (next - 0xdc00) + 0x10000;
      }
      return code;
    };

    TTFFont.prototype.glyphsForString = function(str, userFeatures) {
      var glyphs, i, _i, _ref, _ref1;
      glyphs = [];
      for (i = _i = 0, _ref = str.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        if ((0xdc00 <= (_ref1 = str.charCodeAt(i)) && _ref1 <= 0xdfff)) {
          continue;
        }
        glyphs.push(this.glyphForCodePoint(codePointAt(str, i)));
      }
      if ((userFeatures != null ? userFeatures.length : void 0) === 0) {
        return glyphs;
      }
      if (userFeatures == null) {
        userFeatures = ['ccmp', 'liga', 'rlig', 'clig', 'calt'];
      }
      if (userFeatures.length > 0 && this.GSUB) {
        if (this._GSUBProcessor == null) {
          this._GSUBProcessor = new GSUBProcessor(this, this.GSUB);
        }
        this._GSUBProcessor.applyFeatures(userFeatures, glyphs);
      } else if (this.morx) {
        if (this._morxProcessor == null) {
          this._morxProcessor = new AATMorxProcessor(this);
        }
        this._morxProcessor.process(glyphs, AATFeatureMap.mapOTToAAT(userFeatures));
      }
      return glyphs;
    };

    get('availableFeatures', function() {
      var aatFeatures, features, t;
      features = [];
      t = this.directory.tables;
      if (t.GSUB != null) {
        if (this._GSUBProcessor == null) {
          this._GSUBProcessor = new GSUBProcessor(this, this.GSUB);
        }
        features.push.apply(features, Object.keys(this._GSUBProcessor.features));
      }
      if (t.GPOS != null) {
        if (this._GPOSProcessor == null) {
          this._GPOSProcessor = new GPOSProcessor(this, this.GPOS);
        }
        features.push.apply(features, Object.keys(this._GPOSProcessor.features));
      }
      if (t.morx != null) {
        if (this._morxProcessor == null) {
          this._morxProcessor = new AATMorxProcessor(this);
        }
        aatFeatures = AATFeatureMap.mapAATToOT(this._morxProcessor.getSupportedFeatures());
        features.push.apply(features, aatFeatures);
      }
      if ((t.kern != null) && (!t.GPOS || !('kern' in this.GPOS.features))) {
        features.push('kern');
      }
      return features;
    });

    TTFFont.prototype.widthOfGlyph = function(glyph) {
      if (glyph < this.hmtx.metrics.length) {
        return this.hmtx.metrics[glyph].advanceWidth * this.scale;
      }
      return this.hmtx.metrics[this.hmtx.metrics.length - 1].advanceWidth * this.scale;
    };

    TTFFont.prototype.advancesForGlyphs = function(glyphs, userFeatures) {
      var advances, glyph, x, _i, _len;
      x = 0;
      advances = [];
      for (_i = 0, _len = glyphs.length; _i < _len; _i++) {
        glyph = glyphs[_i];
        advances.push(this.widthOfGlyph(glyph.id));
      }
      if ((userFeatures != null ? userFeatures.length : void 0) === 0) {
        return advances;
      }
      if (userFeatures == null) {
        userFeatures = ['kern'];
      }
      if (this.GPOS != null) {
        if (this._GPOSProcessor == null) {
          this._GPOSProcessor = new GPOSProcessor(this, this.GPOS);
        }
        this._GPOSProcessor.applyFeatures(userFeatures, glyphs, advances);
        if ('kern' in this._GPOSProcessor.features) {
          return advances;
        }
      }
      if (__indexOf.call(userFeatures, 'kern') >= 0 && (this.kern != null)) {
        if (this._kernProcessor == null) {
          this._kernProcessor = new KernProcessor(this);
        }
        this._kernProcessor.process(glyphs, advances);
      }
      return advances;
    };

    TTFFont.prototype.widthOfString = function(string, features) {
      var advance, advances, glyphs, width, _i, _len;
      glyphs = this.glyphsForString('' + string, features);
      advances = this.advancesForGlyphs(glyphs, features);
      width = 0;
      for (_i = 0, _len = advances.length; _i < _len; _i++) {
        advance = advances[_i];
        width += advance;
      }
      return width;
    };

    TTFFont.prototype._getBaseGlyph = function(glyph, characters) {
      if (characters == null) {
        characters = [];
      }
      if (!this._glyphs[glyph]) {
        if (this.directory.tables.glyf != null) {
          this._glyphs[glyph] = new TTFGlyph(glyph, characters, this);
        } else if (this.directory.tables['CFF '] != null) {
          this._glyphs[glyph] = new CFFGlyph(glyph, characters, this);
        }
      }
      return this._glyphs[glyph] || null;
    };

    TTFFont.prototype.getGlyph = function(glyph, characters) {
      if (characters == null) {
        characters = [];
      }
      if (!this._glyphs[glyph]) {
        if (this.directory.tables.sbix != null) {
          this._glyphs[glyph] = new SBIXGlyph(glyph, characters, this);
        } else if ((this.directory.tables.COLR != null) && (this.directory.tables.CPAL != null)) {
          this._glyphs[glyph] = new COLRGlyph(glyph, characters, this);
        } else {
          this._getBaseGlyph(glyph, characters);
        }
      }
      return this._glyphs[glyph] || null;
    };

    TTFFont.prototype.createSubset = function() {
      if (this.directory.tables['CFF '] != null) {
        return new CFFSubset(this);
      }
      return new TTFSubset(this);
    };

    return TTFFont;

  })();

  module.exports = TTFFont;

}).call(this);

},{"./CmapProcessor":126,"./KernProcessor":128,"./aat/AATFeatureMap":133,"./aat/AATMorxProcessor":135,"./glyph/CFFGlyph":144,"./glyph/COLRGlyph":145,"./glyph/SBIXGlyph":148,"./glyph/TTFGlyph":149,"./opentype/GPOSProcessor":151,"./opentype/GSUBProcessor":152,"./subset/CFFSubset":154,"./subset/TTFSubset":156,"./tables":187,"./tables/directory":178,"restructure":89}],130:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var Directory, TTFFont, TrueTypeCollection, r, tables;

  r = require('restructure');

  TTFFont = require('./TTFFont');

  Directory = require('./tables/directory');

  tables = require('./tables');

  TrueTypeCollection = (function() {
    var TTCHeader, get;

    TTCHeader = new r.VersionedStruct(r.uint32, {
      0x00010000: {
        numFonts: r.uint32,
        offsets: new r.Array(r.uint32, 'numFonts')
      },
      0x00020000: {
        numFonts: r.uint32,
        offsets: new r.Array(r.uint32, 'numFonts'),
        dsigTag: r.uint32,
        dsigLength: r.uint32,
        dsigOffset: r.uint32
      }
    });

    function TrueTypeCollection(stream) {
      this.stream = stream;
      if (this.stream.readString(4) !== 'ttcf') {
        throw new Error('Not a TrueType collection');
      }
      this.header = TTCHeader.decode(this.stream);
    }

    TrueTypeCollection.prototype.getFont = function(name) {
      var font, offset, stream, _i, _len, _ref;
      _ref = this.header.offsets;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        offset = _ref[_i];
        stream = new r.DecodeStream(this.stream.buffer);
        stream.pos = offset;
        font = new TTFFont(stream);
        if (font.postscriptName === name) {
          return font;
        }
      }
      return null;
    };

    get = function(key, fn) {
      return Object.defineProperty(TrueTypeCollection.prototype, key, {
        get: fn,
        enumerable: true
      });
    };

    get('fonts', function() {
      var fonts, offset, stream, _i, _len, _ref;
      fonts = [];
      _ref = this.header.offsets;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        offset = _ref[_i];
        stream = new r.DecodeStream(this.stream.buffer);
        stream.pos = offset;
        fonts.push(new TTFFont(stream));
      }
      return fonts;
    });

    return TrueTypeCollection;

  })();

  module.exports = TrueTypeCollection;

}).call(this);

},{"./TTFFont":129,"./tables":187,"./tables/directory":178,"restructure":89}],131:[function(require,module,exports){
(function (Buffer){
// Generated by CoffeeScript 1.8.0
(function() {
  var TTFFont, TTFGlyph, WOFF2Font, WOFF2Glyph, brotli, r,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  r = require('restructure');

  brotli = require('brotli');

  TTFFont = require('./TTFFont');

  TTFGlyph = require('./glyph/TTFGlyph');

  WOFF2Glyph = require('./glyph/WOFF2Glyph');

  WOFF2Font = (function(_super) {
    var GlyfTable, LOWEST_U_CODE, ONE_MORE_BYTE_CODE1, ONE_MORE_BYTE_CODE2, Point, Substream, WOFF2Header, WORD_CODE, decodeTriplet, knownTags, read255UInt16, readBase128, withSign;

    __extends(WOFF2Font, _super);

    function WOFF2Font() {
      return WOFF2Font.__super__.constructor.apply(this, arguments);
    }

    WOFF2Header = new r.Struct({
      tag: new r.String(4),
      flavor: r.uint32,
      length: r.uint32,
      numTables: r.uint16,
      reserved: new r.Reserved(r.uint16),
      totalSfntSize: r.uint32,
      totalCompressedSize: r.uint32,
      majorVersion: r.uint16,
      minorVersion: r.uint16,
      metaOffset: r.uint32,
      metaLength: r.uint32,
      metaOrigLength: r.uint32,
      privOffset: r.uint32,
      privLength: r.uint32
    });

    knownTags = ['cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'OS/2', 'post', 'cvt ', 'fpgm', 'glyf', 'loca', 'prep', 'CFF ', 'VORG', 'EBDT', 'EBLC', 'gasp', 'hdmx', 'kern', 'LTSH', 'PCLT', 'VDMX', 'vhea', 'vmtx', 'BASE', 'GDEF', 'GPOS', 'GSUB', 'EBSC', 'JSTF', 'MATH', 'CBDT', 'CBLC', 'COLR', 'CPAL', 'SVG ', 'sbix', 'acnt', 'avar', 'bdat', 'bloc', 'bsln', 'cvar', 'fdsc', 'feat', 'fmtx', 'fvar', 'gvar', 'hsty', 'just', 'lcar', 'mort', 'morx', 'opbd', 'prop', 'trak', 'Zapf', 'Silf', 'Glat', 'Gloc', 'Feat', 'Sill'];

    readBase128 = function(stream) {
      var code, i, result, _i;
      result = 0;
      for (i = _i = 0; _i < 5; i = ++_i) {
        code = stream.readUInt8();
        if (result & 0xe0000000) {
          throw new Error('Overflow');
        }
        result = (result << 7) | (code & 0x7f);
        if ((code & 0x80) === 0) {
          return result;
        }
      }
      throw new Error('Bad base 128 number');
    };

    WOFF2Font.prototype._decodeDirectory = function() {
      var entry, flags, index, _i, _ref, _ref1;
      this.directory = WOFF2Header.decode(this.stream);
      this.directory.tables = {};
      for (index = _i = 0, _ref = this.directory.numTables; _i < _ref; index = _i += 1) {
        entry = {};
        flags = entry.flags = this.stream.readUInt8();
        if ((flags & 0x3f) === 0x3f) {
          entry.tag = this.stream.readString(4);
        } else {
          entry.tag = knownTags[flags & 0x3f];
          if (!entry.tag) {
            throw new Error('Bad Tag: ' + (flags & 0x3f));
          }
        }
        entry.length = readBase128(this.stream);
        if ((_ref1 = entry.tag) === 'glyf' || _ref1 === 'loca') {
          entry.transformLength = readBase128(this.stream);
        }
        this.directory.tables[entry.tag] = entry;
      }
      return this._dataPos = this.stream.pos;
    };

    WOFF2Font.prototype._decompress = function() {
      var buffer, decompressed, decompressedSize, entry, tag, _ref;
      if (!this._decompressed) {
        this.stream.pos = this._dataPos;
        buffer = this.stream.readBuffer(this.directory.totalCompressedSize);
        decompressedSize = 0;
        _ref = this.directory.tables;
        for (tag in _ref) {
          entry = _ref[tag];
          entry.offset = decompressedSize;
          decompressedSize += entry.transformLength || entry.length;
        }
        decompressed = brotli.decompress(buffer, decompressedSize);
        if (!decompressed) {
          throw new Error('Error decoding compressed data in WOFF2');
        }
        this.stream = new r.DecodeStream(new Buffer(decompressed));
        return this._decompressed = true;
      }
    };

    WOFF2Font.prototype._decodeTable = function(table) {
      this._decompress();
      this.stream.pos = table.offset;
      return WOFF2Font.__super__._decodeTable.apply(this, arguments);
    };

    WOFF2Font.prototype._getBaseGlyph = function(glyph, characters) {
      if (characters == null) {
        characters = [];
      }
      if (!this._glyphs[glyph]) {
        if (this.directory.tables.glyf != null) {
          if (!this._transformedGlyphs) {
            this._transformGlyfTable();
          }
          return this._glyphs[glyph] = new WOFF2Glyph(glyph, characters, this);
        } else {
          return WOFF2Font.__super__._getBaseGlyph.apply(this, arguments);
        }
      }
    };

    Substream = (function() {
      function Substream(length) {
        this.length = length;
        this._buf = new r.Buffer(length);
      }

      Substream.prototype.decode = function(stream, parent) {
        return new r.DecodeStream(this._buf.decode(stream, parent));
      };

      return Substream;

    })();

    GlyfTable = new r.Struct({
      version: r.uint32,
      numGlyphs: r.uint16,
      indexFormat: r.uint16,
      nContourStreamSize: r.uint32,
      nPointsStreamSize: r.uint32,
      flagStreamSize: r.uint32,
      glyphStreamSize: r.uint32,
      compositeStreamSize: r.uint32,
      bboxStreamSize: r.uint32,
      instructionStreamSize: r.uint32,
      nContours: new Substream('nContourStreamSize'),
      nPoints: new Substream('nPointsStreamSize'),
      flags: new Substream('flagStreamSize'),
      glyphs: new Substream('glyphStreamSize'),
      composites: new Substream('compositeStreamSize'),
      bboxes: new Substream('bboxStreamSize'),
      instructions: new Substream('instructionStreamSize')
    });

    WOFF2Font.prototype._transformGlyfTable = function() {
      var glyph, glyphs, haveInstructions, i, index, instructionSize, nContours, nPoints, table, totalPoints, _i, _j, _k, _ref;
      this._decompress();
      this.stream.pos = this.directory.tables.glyf.offset;
      table = GlyfTable.decode(this.stream);
      glyphs = [];
      for (index = _i = 0, _ref = table.numGlyphs; _i < _ref; index = _i += 1) {
        glyph = {};
        nContours = table.nContours.readInt16BE();
        glyph.numberOfContours = nContours;
        if (nContours > 0) {
          nPoints = [];
          totalPoints = 0;
          for (i = _j = 0; _j < nContours; i = _j += 1) {
            r = read255UInt16(table.nPoints);
            nPoints.push(r);
            totalPoints += r;
          }
          glyph.points = decodeTriplet(table.flags, table.glyphs, totalPoints);
          for (i = _k = 0; _k < nContours; i = _k += 1) {
            glyph.points[nPoints[i] - 1].endContour = true;
          }
          instructionSize = read255UInt16(table.glyphs);
        } else if (nContours < 0) {
          haveInstructions = TTFGlyph.prototype._decodeComposite(glyph, table.composites);
          if (haveInstructions) {
            instructionSize = read255UInt16(table.glyphs);
          }
        }
        glyphs.push(glyph);
      }
      return this._transformedGlyphs = glyphs;
    };

    WORD_CODE = 253;

    ONE_MORE_BYTE_CODE2 = 254;

    ONE_MORE_BYTE_CODE1 = 255;

    LOWEST_U_CODE = 253;

    read255UInt16 = function(stream) {
      var code;
      code = stream.readUInt8();
      if (code === WORD_CODE) {
        return stream.readUInt16BE();
      }
      if (code === ONE_MORE_BYTE_CODE1) {
        return stream.readUInt8() + LOWEST_U_CODE;
      }
      if (code === ONE_MORE_BYTE_CODE2) {
        return stream.readUInt8() + LOWEST_U_CODE * 2;
      }
      return code;
    };

    Point = (function() {
      function Point(x, y, onCurve) {
        this.x = x;
        this.y = y;
        this.onCurve = onCurve;
        this.endContour = false;
      }

      return Point;

    })();

    withSign = function(flag, baseval) {
      if (flag & 1) {
        return baseval;
      } else {
        return -baseval;
      }
    };

    decodeTriplet = function(flags, glyphs, nPoints) {
      var b0, b1, b2, dx, dy, flag, i, onCurve, res, x, y, _i;
      x = y = 0;
      res = [];
      for (i = _i = 0; _i < nPoints; i = _i += 1) {
        flag = flags.readUInt8();
        onCurve = !(flag >> 7);
        flag &= 0x7f;
        if (flag < 10) {
          dx = 0;
          dy = withSign(flag, ((flag & 14) << 7) + glyphs.readUInt8());
        } else if (flag < 20) {
          dx = withSign(flag, (((flag - 10) & 14) << 7) + glyphs.readUInt8());
          dy = 0;
        } else if (flag < 84) {
          b0 = flag - 20;
          b1 = glyphs.readUInt8();
          dx = withSign(flag, 1 + (b0 & 0x30) + (b1 >> 4));
          dy = withSign(flag >> 1, 1 + ((b0 & 0x0c) << 2) + (b1 & 0x0f));
        } else if (flag < 120) {
          b0 = flag - 84;
          dx = withSign(flag, 1 + ((b0 / 12) << 8) + glyphs.readUInt8());
          dy = withSign(flag >> 1, 1 + (((b0 % 12) >> 2) << 8) + glyphs.readUInt8());
        } else if (flag < 124) {
          b1 = glyphs.readUInt8();
          b2 = glyphs.readUInt8();
          dx = withSign(flag, (b1 << 4) + (b2 >> 4));
          dy = withSign(flag >> 1, ((b2 & 0x0f) << 8) + glyphs.readUInt8());
        } else {
          dx = withSign(flag, glyphs.readUInt16BE());
          dy = withSign(flag >> 1, glyphs.readUInt16BE());
        }
        x += dx;
        y += dy;
        res.push(new Point(x, y, onCurve));
      }
      return res;
    };

    return WOFF2Font;

  })(TTFFont);

  module.exports = WOFF2Font;

}).call(this);

}).call(this,require("buffer").Buffer)
},{"./TTFFont":129,"./glyph/TTFGlyph":149,"./glyph/WOFF2Glyph":150,"brotli":68,"buffer":17,"restructure":89}],132:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var TTFFont, WOFFDirectory, WOFFFont, pako, r, tables, toBuffer,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  TTFFont = require('./TTFFont');

  WOFFDirectory = require('./tables/WOFFDirectory');

  tables = require('./tables');

  pako = require('pako');

  toBuffer = require('typedarray-to-buffer');

  r = require('restructure');

  WOFFFont = (function(_super) {
    __extends(WOFFFont, _super);

    function WOFFFont() {
      return WOFFFont.__super__.constructor.apply(this, arguments);
    }

    WOFFFont.prototype._decodeDirectory = function() {
      return this.directory = WOFFDirectory.decode(this.stream, {
        _startOffset: 0
      });
    };

    WOFFFont.prototype._getTableStream = function(tag) {
      var buf, table;
      table = this.directory.tables[tag];
      if (table) {
        this.stream.pos = table.offset;
        if (table.compLength < table.origLength) {
          buf = toBuffer(pako.inflate(this.stream.readBuffer(table.compLength)));
          return new r.DecodeStream(buf);
        } else {
          return this.stream;
        }
      }
      return null;
    };

    WOFFFont.prototype._decodeTable = function(table) {
      return tables[table.tag].decode(this._getTableStream(table.tag), this, table.origLength);
    };

    return WOFFFont;

  })(TTFFont);

  module.exports = WOFFFont;

}).call(this);

},{"./TTFFont":129,"./tables":187,"./tables/WOFFDirectory":173,"pako":73,"restructure":89,"typedarray-to-buffer":123}],133:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var AATFeatureMap;

  AATFeatureMap = (function() {
    var AATMapping, OTMapping, aat, feature, features, i, mapFeatureStrings, ot, _i, _name;

    function AATFeatureMap() {}

    features = {
      allTypographicFeatures: {
        code: 0,
        exclusive: false,
        allTypeFeatures: 0
      },
      ligatures: {
        code: 1,
        exclusive: false,
        requiredLigatures: 0,
        commonLigatures: 2,
        rareLigatures: 4,
        rebusPictures: 8,
        diphthongLigatures: 10,
        squaredLigatures: 12,
        abbrevSquaredLigatures: 14,
        symbolLigatures: 16,
        contextualLigatures: 18,
        historicalLigatures: 20
      },
      cursiveConnection: {
        code: 2,
        exclusive: true,
        unconnected: 0,
        partiallyConnected: 1,
        cursive: 2
      },
      letterCase: {
        code: 3,
        exclusive: true
      },
      verticalSubstitution: {
        code: 4,
        exclusive: false,
        substituteVerticalForms: 0
      },
      linguisticRearrangement: {
        code: 5,
        exclusive: false,
        linguisticRearrangement: 0
      },
      numberSpacing: {
        code: 6,
        exclusive: true,
        monospacedNumbers: 0,
        proportionalNumbers: 1,
        thirdWidthNumbers: 2,
        quarterWidthNumbers: 3
      },
      smartSwash: {
        code: 8,
        exclusive: false,
        wordInitialSwashes: 0,
        wordFinalSwashes: 2,
        nonFinalSwashes: 8
      },
      diacritics: {
        code: 9,
        exclusive: true,
        showDiacritics: 0,
        hideDiacritics: 1,
        decomposeDiacritics: 2
      },
      verticalPosition: {
        code: 10,
        exclusive: true,
        normalPosition: 0,
        superiors: 1,
        inferiors: 2,
        ordinals: 3,
        scientificInferiors: 4
      },
      fractions: {
        code: 11,
        exclusive: true,
        noFractions: 0,
        verticalFractions: 1,
        diagonalFractions: 2
      },
      overlappingCharacters: {
        code: 13,
        exclusive: false,
        preventOverlap: 0
      },
      typographicExtras: {
        code: 14,
        exclusive: false,
        slashedZero: 4
      },
      mathematicalExtras: {
        code: 15,
        exclusive: false,
        mathematicalGreek: 10
      },
      ornamentSets: {
        code: 16,
        exclusive: true,
        noOrnaments: 0,
        dingbats: 1,
        piCharacters: 2,
        fleurons: 3,
        decorativeBorders: 4,
        internationalSymbols: 5,
        mathSymbols: 6
      },
      characterAlternatives: {
        code: 17,
        exclusive: true,
        noAlternates: 0
      },
      designComplexity: {
        code: 18,
        exclusive: true,
        designLevel1: 0,
        designLevel2: 1,
        designLevel3: 2,
        designLevel4: 3,
        designLevel5: 4
      },
      styleOptions: {
        code: 19,
        exclusive: true,
        noStyleOptions: 0,
        displayText: 1,
        engravedText: 2,
        illuminatedCaps: 3,
        titlingCaps: 4,
        tallCaps: 5
      },
      characterShape: {
        code: 20,
        exclusive: true,
        traditionalCharacters: 0,
        simplifiedCharacters: 1,
        JIS1978Characters: 2,
        JIS1983Characters: 3,
        JIS1990Characters: 4,
        traditionalAltOne: 5,
        traditionalAltTwo: 6,
        traditionalAltThree: 7,
        traditionalAltFour: 8,
        traditionalAltFive: 9,
        expertCharacters: 10,
        JIS2004Characters: 11,
        hojoCharacters: 12,
        NLCCharacters: 13,
        traditionalNamesCharacters: 14
      },
      numberCase: {
        code: 21,
        exclusive: true,
        lowerCaseNumbers: 0,
        upperCaseNumbers: 1
      },
      textSpacing: {
        code: 22,
        exclusive: true,
        proportionalText: 0,
        monospacedText: 1,
        halfWidthText: 2,
        thirdWidthText: 3,
        quarterWidthText: 4,
        altProportionalText: 5,
        altHalfWidthText: 6
      },
      transliteration: {
        code: 23,
        exclusive: true,
        noTransliteration: 0
      },
      annotation: {
        code: 24,
        exclusive: true,
        noAnnotation: 0,
        boxAnnotation: 1,
        roundedBoxAnnotation: 2,
        circleAnnotation: 3,
        invertedCircleAnnotation: 4,
        parenthesisAnnotation: 5,
        periodAnnotation: 6,
        romanNumeralAnnotation: 7,
        diamondAnnotation: 8,
        invertedBoxAnnotation: 9,
        invertedRoundedBoxAnnotation: 10
      },
      kanaSpacing: {
        code: 25,
        exclusive: true,
        fullWidthKana: 0,
        proportionalKana: 1
      },
      ideographicSpacing: {
        code: 26,
        exclusive: true,
        fullWidthIdeographs: 0,
        proportionalIdeographs: 1,
        halfWidthIdeographs: 2
      },
      unicodeDecomposition: {
        code: 27,
        exclusive: false,
        canonicalComposition: 0,
        compatibilityComposition: 2,
        transcodingComposition: 4
      },
      rubyKana: {
        code: 28,
        exclusive: false,
        rubyKana: 2
      },
      CJKSymbolAlternatives: {
        code: 29,
        exclusive: true,
        noCJKSymbolAlternatives: 0,
        CJKSymbolAltOne: 1,
        CJKSymbolAltTwo: 2,
        CJKSymbolAltThree: 3,
        CJKSymbolAltFour: 4,
        CJKSymbolAltFive: 5
      },
      ideographicAlternatives: {
        code: 30,
        exclusive: true,
        noIdeographicAlternatives: 0,
        ideographicAltOne: 1,
        ideographicAltTwo: 2,
        ideographicAltThree: 3,
        ideographicAltFour: 4,
        ideographicAltFive: 5
      },
      CJKVerticalRomanPlacement: {
        code: 31,
        exclusive: true,
        CJKVerticalRomanCentered: 0,
        CJKVerticalRomanHBaseline: 1
      },
      italicCJKRoman: {
        code: 32,
        exclusive: false,
        CJKItalicRoman: 2
      },
      caseSensitiveLayout: {
        code: 33,
        exclusive: false,
        caseSensitiveLayout: 0,
        caseSensitiveSpacing: 2
      },
      alternateKana: {
        code: 34,
        exclusive: false,
        alternateHorizKana: 0,
        alternateVertKana: 2
      },
      stylisticAlternatives: {
        code: 35,
        exclusive: false,
        noStylisticAlternates: 0,
        stylisticAltOne: 2,
        stylisticAltTwo: 4,
        stylisticAltThree: 6,
        stylisticAltFour: 8,
        stylisticAltFive: 10,
        stylisticAltSix: 12,
        stylisticAltSeven: 14,
        stylisticAltEight: 16,
        stylisticAltNine: 18,
        stylisticAltTen: 20,
        stylisticAltEleven: 22,
        stylisticAltTwelve: 24,
        stylisticAltThirteen: 26,
        stylisticAltFourteen: 28,
        stylisticAltFifteen: 30,
        stylisticAltSixteen: 32,
        stylisticAltSeventeen: 34,
        stylisticAltEighteen: 36,
        stylisticAltNineteen: 38,
        stylisticAltTwenty: 40
      },
      contextualAlternates: {
        code: 36,
        exclusive: false,
        contextualAlternates: 0,
        swashAlternates: 2,
        contextualSwashAlternates: 4
      },
      lowerCase: {
        code: 37,
        exclusive: true,
        defaultLowerCase: 0,
        lowerCaseSmallCaps: 1,
        lowerCasePetiteCaps: 2
      },
      upperCase: {
        code: 38,
        exclusive: true,
        defaultUpperCase: 0,
        upperCaseSmallCaps: 1,
        upperCasePetiteCaps: 2
      },
      languageTag: {
        code: 39,
        exclusive: true
      },
      CJKRomanSpacing: {
        code: 103,
        exclusive: true,
        halfWidthCJKRoman: 0,
        proportionalCJKRoman: 1,
        defaultCJKRoman: 2,
        fullWidthCJKRoman: 3
      }
    };

    feature = function(name, selector) {
      return [features[name].code, features[name][selector]];
    };

    OTMapping = {
      rlig: feature('ligatures', 'requiredLigatures'),
      clig: feature('ligatures', 'contextualLigatures'),
      dlig: feature('ligatures', 'rareLigatures'),
      hlig: feature('ligatures', 'historicalLigatures'),
      liga: feature('ligatures', 'commonLigatures'),
      hist: feature('ligatures', 'historicalLigatures'),
      smcp: feature('lowerCase', 'lowerCaseSmallCaps'),
      pcap: feature('lowerCase', 'lowerCasePetiteCaps'),
      frac: feature('fractions', 'diagonalFractions'),
      dnom: feature('fractions', 'diagonalFractions'),
      numr: feature('fractions', 'diagonalFractions'),
      afrc: feature('fractions', 'verticalFractions'),
      "case": feature('caseSensitiveLayout', 'caseSensitiveLayout'),
      ccmp: feature('unicodeDecomposition', 'canonicalComposition'),
      cpct: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'),
      valt: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'),
      swsh: feature('contextualAlternates', 'swashAlternates'),
      cswh: feature('contextualAlternates', 'contextualSwashAlternates'),
      curs: feature('cursiveConnection', 'cursive'),
      c2pc: feature('upperCase', 'upperCasePetiteCaps'),
      c2sc: feature('upperCase', 'upperCaseSmallCaps'),
      init: feature('smartSwash', 'wordInitialSwashes'),
      fin2: feature('smartSwash', 'wordFinalSwashes'),
      medi: feature('smartSwash', 'nonFinalSwashes'),
      med2: feature('smartSwash', 'nonFinalSwashes'),
      fin3: feature('smartSwash', 'wordFinalSwashes'),
      fina: feature('smartSwash', 'wordFinalSwashes'),
      fwid: feature('kanaSpacing', 'fullWidthKana'),
      pkna: feature('kanaSpacing', 'proportionalKana'),
      half: feature('textSpacing', 'halfWidthText'),
      halt: feature('textSpacing', 'altHalfWidthText'),
      hwid: feature('textSpacing', 'halfWidthText'),
      hkna: feature('alternateKana', 'alternateHorizKana'),
      vkna: feature('alternateKana', 'alternateVertKana'),
      ital: feature('italicCJKRoman', 'CJKItalicRoman'),
      lnum: feature('numberCase', 'upperCaseNumbers'),
      onum: feature('numberCase', 'lowerCaseNumbers'),
      mgrk: feature('mathematicalExtras', 'mathematicalGreek'),
      calt: feature('contextualAlternates', 'contextualAlternates'),
      vrt2: feature('verticalSubstitution', 'substituteVerticalForms'),
      vert: feature('verticalSubstitution', 'substituteVerticalForms'),
      tnum: feature('numberSpacing', 'monospacedNumbers'),
      pnum: feature('numberSpacing', 'proportionalNumbers'),
      sups: feature('verticalPosition', 'superiors'),
      subs: feature('verticalPosition', 'inferiors'),
      ordn: feature('verticalPosition', 'ordinals'),
      pwid: feature('textSpacing', 'proportionalText'),
      hwid: feature('textSpacing', 'halfWidthText'),
      qwid: feature('textSpacing', 'quarterWidthText'),
      twid: feature('textSpacing', 'thirdWidthText'),
      fwid: feature('textSpacing', 'proportionalText'),
      palt: feature('textSpacing', 'altProportionalText'),
      trad: feature('characterShape', 'traditionalCharacters'),
      smpl: feature('characterShape', 'simplifiedCharacters'),
      jp78: feature('characterShape', 'JIS1978Characters'),
      jp83: feature('characterShape', 'JIS1983Characters'),
      jp90: feature('characterShape', 'JIS1990Characters'),
      jp04: feature('characterShape', 'JIS2004Characters'),
      expt: feature('characterShape', 'expertCharacters'),
      hojo: feature('characterShape', 'hojoCharacters'),
      nlck: feature('characterShape', 'NLCCharacters'),
      tnam: feature('characterShape', 'traditionalNamesCharacters'),
      ruby: feature('rubyKana', 'rubyKana'),
      titl: feature('styleOptions', 'titlingCaps'),
      zero: feature('typographicExtras', 'slashedZero'),
      ss01: feature('stylisticAlternatives', 'stylisticAltOne'),
      ss02: feature('stylisticAlternatives', 'stylisticAltTwo'),
      ss03: feature('stylisticAlternatives', 'stylisticAltThree'),
      ss04: feature('stylisticAlternatives', 'stylisticAltFour'),
      ss05: feature('stylisticAlternatives', 'stylisticAltFive'),
      ss06: feature('stylisticAlternatives', 'stylisticAltSix'),
      ss07: feature('stylisticAlternatives', 'stylisticAltSeven'),
      ss08: feature('stylisticAlternatives', 'stylisticAltEight'),
      ss09: feature('stylisticAlternatives', 'stylisticAltNine'),
      ss10: feature('stylisticAlternatives', 'stylisticAltTen'),
      ss11: feature('stylisticAlternatives', 'stylisticAltEleven'),
      ss12: feature('stylisticAlternatives', 'stylisticAltTwelve'),
      ss13: feature('stylisticAlternatives', 'stylisticAltThirteen'),
      ss14: feature('stylisticAlternatives', 'stylisticAltFourteen'),
      ss15: feature('stylisticAlternatives', 'stylisticAltFifteen'),
      ss16: feature('stylisticAlternatives', 'stylisticAltSixteen'),
      ss17: feature('stylisticAlternatives', 'stylisticAltSeventeen'),
      ss18: feature('stylisticAlternatives', 'stylisticAltEighteen'),
      ss19: feature('stylisticAlternatives', 'stylisticAltNineteen'),
      ss20: feature('stylisticAlternatives', 'stylisticAltTwenty')
    };

    for (i = _i = 1; _i <= 99; i = ++_i) {
      OTMapping['cv' + ('00' + i).slice(-2)] = [features.characterAlternatives.code, i];
    }

    AATMapping = {};

    for (ot in OTMapping) {
      aat = OTMapping[ot];
      if (AATMapping[_name = aat[0]] == null) {
        AATMapping[_name] = {};
      }
      AATMapping[aat[0]][aat[1]] = ot;
    }

    AATFeatureMap.mapOTToAAT = function(features) {
      var r, res, _j, _len, _name1;
      res = {};
      for (_j = 0, _len = features.length; _j < _len; _j++) {
        feature = features[_j];
        if (r = OTMapping[feature]) {
          if (res[_name1 = r[0]] == null) {
            res[_name1] = {};
          }
          res[r[0]][r[1]] = true;
        }
      }
      return res;
    };

    mapFeatureStrings = function(f) {
      var setting, settingCode, type, typeCode, _ref, _ref1;
      type = f[0], setting = f[1];
      if (isNaN(type)) {
        typeCode = (_ref = features[type]) != null ? _ref.code : void 0;
      } else {
        typeCode = type;
      }
      if (isNaN(setting)) {
        settingCode = (_ref1 = features[type]) != null ? _ref1[setting] : void 0;
      } else {
        settingCode = setting;
      }
      return [typeCode, settingCode];
    };

    AATFeatureMap.mapAATToOT = function(features) {
      var f, r, res, setting, type, v, _j, _len, _ref, _ref1;
      res = {};
      if (Array.isArray(features)) {
        for (_j = 0, _len = features.length; _j < _len; _j++) {
          feature = features[_j];
          f = mapFeatureStrings(feature);
          if (r = (_ref = AATMapping[f[0]]) != null ? _ref[f[1]] : void 0) {
            res[r] = true;
          }
        }
      } else if (typeof features === 'object') {
        for (type in features) {
          feature = features[type];
          for (setting in feature) {
            v = feature[setting];
            f = mapFeatureStrings([type, setting]);
            if (v && (r = (_ref1 = AATMapping[f[0]]) != null ? _ref1[f[1]] : void 0)) {
              res[r] = true;
            }
          }
        }
      }
      return Object.keys(res);
    };

    return AATFeatureMap;

  })();

  module.exports = AATFeatureMap;

}).call(this);

},{}],134:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var AATLookupTable;

  AATLookupTable = (function() {
    function AATLookupTable(table) {
      this.table = table;
    }

    AATLookupTable.prototype.lookup = function(glyph) {
      var max, mid, min, seg;
      switch (this.table.version) {
        case 0:
          return this.table.values.getItem(glyph);
        case 2:
        case 4:
          min = 0;
          max = this.table.binarySearchHeader.nUnits - 1;
          while (min <= max) {
            mid = (min + max) >> 1;
            seg = this.table.segments[mid];
            if (seg.firstGlyph === 0xffff) {
              return null;
            }
            if (glyph < seg.firstGlyph) {
              max = mid - 1;
            } else if (glyph > seg.lastGlyph) {
              min = mid + 1;
            } else {
              if (this.table.version === 2) {
                return seg.value;
              } else {
                return seg.values[glyph - seg.firstGlyph];
              }
            }
          }
          break;
        case 6:
          min = 0;
          max = this.table.binarySearchHeader.nUnits - 1;
          while (min <= max) {
            mid = (min + max) >> 1;
            seg = this.table.segments[mid];
            if (seg.glyph === 0xffff) {
              return null;
            }
            if (glyph < seg.glyph) {
              max = mid - 1;
            } else if (glyph > seg.glyph) {
              min = mid + 1;
            } else {
              return seg.value;
            }
          }
          break;
        case 8:
          return this.table.values[glyph - this.table.firstGlyph];
        default:
          throw new Error("Unknown lookup table format: " + this.table.version);
      }
      return null;
    };

    return AATLookupTable;

  })();

  module.exports = AATLookupTable;

}).call(this);

},{}],135:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var AATLookupTable, AATMorxProcessor, AATStateMachine,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __slice = [].slice;

  AATStateMachine = require('./AATStateMachine');

  AATLookupTable = require('./AATLookupTable');

  AATMorxProcessor = (function() {
    var CURRENT_INSERT_BEFORE, CURRENT_INSERT_COUNT, CURRENT_IS_KASHIDA_LIKE, HORIZONTAL_AND_VERTICAL, LAST_MASK, MARKED_INSERT_BEFORE, MARKED_INSERT_COUNT, MARKED_IS_KASHIDA_LIKE, MARK_FIRST, MARK_LAST, OFFSET_MASK, PERFORM_ACTION, REVERSE_DIRECTION, SET_COMPONENT, SET_MARK, STORE_MASK, VERB, VERTICAL_ONLY, reorderGlyphs, swap;

    MARK_FIRST = 0x8000;

    MARK_LAST = 0x2000;

    VERB = 0x000F;

    SET_MARK = 0x8000;

    SET_COMPONENT = 0x8000;

    PERFORM_ACTION = 0x2000;

    LAST_MASK = 0x80000000;

    STORE_MASK = 0x40000000;

    OFFSET_MASK = 0x3FFFFFFF;

    VERTICAL_ONLY = 0x800000;

    REVERSE_DIRECTION = 0x400000;

    HORIZONTAL_AND_VERTICAL = 0x200000;

    CURRENT_IS_KASHIDA_LIKE = 0x2000;

    MARKED_IS_KASHIDA_LIKE = 0x1000;

    CURRENT_INSERT_BEFORE = 0x0800;

    MARKED_INSERT_BEFORE = 0x0400;

    CURRENT_INSERT_COUNT = 0x03E0;

    MARKED_INSERT_COUNT = 0x001F;

    function AATMorxProcessor(font) {
      this.font = font;
      this.processGlyphInsertion = __bind(this.processGlyphInsertion, this);
      this.processNoncontextualSubstitutions = __bind(this.processNoncontextualSubstitutions, this);
      this.processLigature = __bind(this.processLigature, this);
      this.processContextualSubstitution = __bind(this.processContextualSubstitution, this);
      this.processIndicRearragement = __bind(this.processIndicRearragement, this);
      this.morx = this.font.morx;
    }

    AATMorxProcessor.prototype.process = function(glyphs, features) {
      var chain, f, feature, flags, index, subtable, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2;
      if (features == null) {
        features = {};
      }
      _ref = this.morx.chains;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        chain = _ref[_i];
        flags = chain.defaultFlags;
        _ref1 = chain.features;
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          feature = _ref1[_j];
          if ((f = features[feature.featureType]) && f[feature.featureSetting]) {
            flags &= feature.disableFlags;
            flags |= feature.enableFlags;
          }
        }
        _ref2 = chain.subtables;
        for (index = _k = 0, _len2 = _ref2.length; _k < _len2; index = ++_k) {
          subtable = _ref2[index];
          if (subtable.subFeatureFlags & flags) {
            this.processSubtable(subtable, glyphs);
          }
        }
      }
      index = glyphs.length - 1;
      while (index >= 0) {
        if (glyphs[index].id === 0xffff) {
          glyphs.splice(index, 1);
        }
        index--;
      }
      return glyphs;
    };

    AATMorxProcessor.prototype.processSubtable = function(subtable, glyphs) {
      var process, reverse, stateMachine;
      this.subtable = subtable;
      this.glyphs = glyphs;
      if (subtable.type === 4) {
        this.processNoncontextualSubstitutions(subtable, glyphs);
        return;
      }
      this.ligatureStack = [];
      this.markedGlyph = null;
      this.firstGlyph = null;
      this.lastGlyph = null;
      this.markedIndex = null;
      stateMachine = new AATStateMachine(subtable.table.stateTable);
      process = (function() {
        switch (subtable.type) {
          case 0:
            return this.processIndicRearragement;
          case 1:
            return this.processContextualSubstitution;
          case 2:
            return this.processLigature;
          case 5:
            return this.processGlyphInsertion;
          default:
            throw new Error("Invalid morx subtable type: " + subtable.type);
        }
      }).call(this);
      reverse = !!(subtable.coverage & REVERSE_DIRECTION);
      return stateMachine.process(glyphs, reverse, process);
    };

    AATMorxProcessor.prototype.processIndicRearragement = function(glyph, entry, index) {
      if (entry.flags & MARK_FIRST) {
        this.firstGlyph = index;
      }
      if (entry.flags & MARK_LAST) {
        this.lastGlyph = index;
      }
      reorderGlyphs(this.glyphs, entry.flags & VERB, this.firstGlyph, this.lastGlyph);
    };

    swap = function(glyphs, rangeA, rangeB, reverseA, reverseB) {
      var end, start;
      if (reverseA == null) {
        reverseA = false;
      }
      if (reverseB == null) {
        reverseB = false;
      }
      end = glyphs.splice(rangeB[0] - (rangeB[1] - 1), rangeB[1]);
      if (reverseB) {
        end.reverse();
      }
      start = glyphs.splice.apply(glyphs, [rangeA[0], rangeA[1]].concat(__slice.call(end)));
      if (reverseA) {
        start.reverse();
      }
      return glyphs.splice.apply(glyphs, [rangeB[0] - (rangeA[1] - 1), 0].concat(__slice.call(start)));
    };

    reorderGlyphs = function(glyphs, verb, firstGlyph, lastGlyph) {
      var length;
      length = lastGlyph - firstGlyph + 1;
      switch (verb) {
        case 0:
          break;
        case 1:
          swap(glyphs, [firstGlyph, 1], [lastGlyph, 0]);
          break;
        case 2:
          swap(glyphs, [firstGlyph, 0], [lastGlyph, 1]);
          break;
        case 3:
          swap(glyphs, [firstGlyph, 1], [lastGlyph, 1]);
          break;
        case 4:
          swap(glyphs, [firstGlyph, 2], [lastGlyph, 0]);
          break;
        case 5:
          swap(glyphs, [firstGlyph, 2], [lastGlyph, 0], true, false);
          break;
        case 6:
          swap(glyphs, [firstGlyph, 0], [lastGlyph, 2]);
          break;
        case 7:
          swap(glyphs, [firstGlyph, 0], [lastGlyph, 2], false, true);
          break;
        case 8:
          swap(glyphs, [firstGlyph, 1], [lastGlyph, 2]);
          break;
        case 9:
          swap(glyphs, [firstGlyph, 1], [lastGlyph, 2], false, true);
          break;
        case 10:
          swap(glyphs, [firstGlyph, 2], [lastGlyph, 1]);
          break;
        case 11:
          swap(glyphs, [firstGlyph, 2], [lastGlyph, 1], true, false);
          break;
        case 12:
          swap(glyphs, [firstGlyph, 2], [lastGlyph, 2]);
          break;
        case 13:
          swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, false);
          break;
        case 14:
          swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], false, true);
          break;
        case 15:
          swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, true);
          break;
        default:
          throw new Error("Unknown verb: " + verb);
      }
      return glyphs;
    };

    AATMorxProcessor.prototype.processContextualSubstitution = function(glyph, entry, index) {
      var lookup, lookupTable, subsitutions;
      subsitutions = this.subtable.table.substitutionTable.items;
      if (entry.markIndex !== 0xffff) {
        lookup = subsitutions.getItem(entry.markIndex);
        lookupTable = new AATLookupTable(lookup);
        glyph = this.glyphs[this.markedGlyph];
        this.glyphs[this.markedGlyph] = this.font.getGlyph(lookupTable.lookup(glyph.id), glyph.codePoints);
      }
      if (entry.currentIndex !== 0xffff) {
        lookup = subsitutions.getItem(entry.currentIndex);
        lookupTable = new AATLookupTable(lookup);
        glyph = this.glyphs[index];
        this.glyphs[index] = this.font.getGlyph(lookupTable.lookup(glyph.id), glyph.codePoints);
      }
      if (entry.flags & SET_MARK) {
        this.markedGlyph = index;
      }
    };

    AATMorxProcessor.prototype.processLigature = function(glyph, entry, index) {
      var action, actionIndex, actions, codePoints, component, componentGlyph, components, last, ligatureEntry, ligatureIndex, ligatureList, offset, store;
      if (entry.flags & SET_COMPONENT) {
        this.ligatureStack.push(index);
      }
      if (entry.flags & PERFORM_ACTION) {
        actions = this.subtable.table.ligatureActions;
        components = this.subtable.table.components;
        ligatureList = this.subtable.table.ligatureList;
        actionIndex = entry.action;
        last = false;
        ligatureIndex = 0;
        codePoints = [];
        while (!last) {
          componentGlyph = this.ligatureStack.pop();
          codePoints.unshift.apply(codePoints, this.glyphs[componentGlyph].codePoints);
          action = actions.getItem(actionIndex++);
          last = !!(action & LAST_MASK);
          store = !!(action & STORE_MASK);
          offset = (action & OFFSET_MASK) << 2 >> 2;
          offset += this.glyphs[componentGlyph].id;
          component = components.getItem(offset);
          ligatureIndex += component;
          if (last || store) {
            ligatureEntry = ligatureList.getItem(ligatureIndex);
            this.glyphs[componentGlyph] = this.font.getGlyph(ligatureEntry, codePoints);
            ligatureIndex = 0;
            codePoints = [];
          } else {
            this.glyphs[componentGlyph] = this.font.getGlyph(0xffff);
          }
        }
      }
    };

    AATMorxProcessor.prototype.processNoncontextualSubstitutions = function(subtable, glyphs, index) {
      var gid, glyph, lookupTable, _i, _len;
      lookupTable = new AATLookupTable(subtable.table.lookupTable);
      for (index = _i = 0, _len = glyphs.length; _i < _len; index = ++_i) {
        glyph = glyphs[index];
        if (!(glyph.id !== 0xffff)) {
          continue;
        }
        gid = lookupTable.lookup(glyph.id);
        if (gid) {
          glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);
        }
      }
    };

    AATMorxProcessor.prototype._insertGlyphs = function(glyphIndex, insertionActionIndex, count, isBefore) {
      var gid, insertions, _ref;
      insertions = (function() {
        var _results;
        _results = [];
        while (count--) {
          gid = this.subtable.table.insertionActions.getItem(insertionActionIndex++);
          _results.push(this.font.getGlyph(gid));
        }
        return _results;
      }).call(this);
      if (!isBefore) {
        glyphIndex++;
      }
      (_ref = this.glyphs).splice.apply(_ref, [glyphIndex, 0].concat(__slice.call(insertions)));
    };

    AATMorxProcessor.prototype.processGlyphInsertion = function(glyph, entry, index) {
      var count, isBefore;
      if (entry.flags & SET_MARK) {
        this.markedIndex = index;
      }
      if (entry.markedInsertIndex !== 0xffff) {
        count = (entry.flags & MARKED_INSERT_COUNT) >>> 5;
        isBefore = !!(entry.flags & MARKED_INSERT_BEFORE);
        this._insertGlyphs(this.markedIndex, entry.markedInsertIndex, count, isBefore);
      }
      if (entry.currentInsertIndex !== 0xffff) {
        count = (entry.flags & CURRENT_INSERT_COUNT) >>> 5;
        isBefore = !!(entry.flags & CURRENT_INSERT_BEFORE);
        this._insertGlyphs(index, entry.currentInsertIndex, count, isBefore);
      }
    };

    AATMorxProcessor.prototype.getSupportedFeatures = function() {
      var chain, feature, features, _i, _j, _len, _len1, _ref, _ref1;
      features = [];
      _ref = this.morx.chains;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        chain = _ref[_i];
        _ref1 = chain.features;
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          feature = _ref1[_j];
          features.push([feature.featureType, feature.featureSetting]);
        }
      }
      return features;
    };

    return AATMorxProcessor;

  })();

  module.exports = AATMorxProcessor;

}).call(this);

},{"./AATLookupTable":134,"./AATStateMachine":136}],136:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var AATLookupTable, AATStateMachine;

  AATLookupTable = require('./AATLookupTable');

  AATStateMachine = (function() {
    var DELETED_GLYPH_CLASS, DONT_ADVANCE, END_OF_LINE_CLASS, END_OF_TEXT_CLASS, OUT_OF_BOUNDS_CLASS, START_OF_LINE_STATE, START_OF_TEXT_STATE;

    function AATStateMachine(stateTable) {
      this.stateTable = stateTable;
      this.lookupTable = new AATLookupTable(this.stateTable.classTable);
    }

    START_OF_TEXT_STATE = 0;

    START_OF_LINE_STATE = 1;

    END_OF_TEXT_CLASS = 0;

    OUT_OF_BOUNDS_CLASS = 1;

    DELETED_GLYPH_CLASS = 2;

    END_OF_LINE_CLASS = 3;

    DONT_ADVANCE = 0x4000;

    AATStateMachine.prototype.process = function(glyphs, reverse, processEntry) {
      var classCode, currentState, dir, entry, entryIndex, glyph, index, row, shouldAdvance;
      currentState = START_OF_TEXT_STATE;
      index = reverse ? glyphs.length - 1 : 0;
      dir = reverse ? -1 : 1;
      while ((dir === 1 && index <= glyphs.length) || (dir === -1 && index >= -1)) {
        glyph = null;
        classCode = OUT_OF_BOUNDS_CLASS;
        shouldAdvance = true;
        if (index === glyphs.length || index === (-1)) {
          classCode = END_OF_TEXT_CLASS;
        } else {
          glyph = glyphs[index];
          if (glyph.id === 0xffff) {
            classCode = DELETED_GLYPH_CLASS;
          } else {
            classCode = this.lookupTable.lookup(glyph.id);
            if (classCode == null) {
              classCode = OUT_OF_BOUNDS_CLASS;
            }
          }
        }
        row = this.stateTable.stateArray.getItem(currentState);
        entryIndex = row[classCode];
        entry = this.stateTable.entryTable.getItem(entryIndex);
        if (classCode !== END_OF_TEXT_CLASS && classCode !== DELETED_GLYPH_CLASS) {
          processEntry(glyph, entry, index);
          shouldAdvance = !(entry.flags & DONT_ADVANCE);
        }
        currentState = entry.newState;
        if (shouldAdvance) {
          index += dir;
        }
      }
      return glyphs;
    };

    return AATStateMachine;

  })();

  module.exports = AATStateMachine;

}).call(this);

},{"./AATLookupTable":134}],137:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var CFFDict, CFFOperand, r, _;

  _ = require('lodash');

  r = require('restructure');

  CFFOperand = require('./CFFOperand');

  CFFDict = (function() {
    var decodeOperands, encodeOperands;

    function CFFDict(ops) {
      var field, key, _i, _len;
      this.ops = ops != null ? ops : [];
      this.fields = {};
      for (_i = 0, _len = ops.length; _i < _len; _i++) {
        field = ops[_i];
        key = Array.isArray(field[0]) ? field[0][0] << 8 | field[0][1] : field[0];
        this.fields[key] = field;
      }
    }

    decodeOperands = function(type, stream, ret, operands) {
      var i, op, _i, _len, _results;
      if (Array.isArray(type)) {
        _results = [];
        for (i = _i = 0, _len = operands.length; _i < _len; i = ++_i) {
          op = operands[i];
          _results.push(decodeOperands(type[i], stream, ret, [op]));
        }
        return _results;
      } else if (type.decode != null) {
        return type.decode(stream, ret, operands);
      } else {
        switch (type) {
          case 'number':
          case 'offset':
          case 'sid':
            return operands[0];
          case 'boolean':
            return !!operands[0];
          default:
            return operands;
        }
      }
    };

    encodeOperands = function(type, stream, ctx, operands) {
      var i, op, _i, _len, _results;
      if (Array.isArray(type)) {
        _results = [];
        for (i = _i = 0, _len = operands.length; _i < _len; i = ++_i) {
          op = operands[i];
          _results.push(encodeOperands(type[i], stream, ctx, op)[0]);
        }
        return _results;
      } else if (type.encode != null) {
        return type.encode(stream, operands, ctx);
      } else if (typeof operands === 'number') {
        return [operands];
      } else if (typeof operands === 'boolean') {
        return [+operands];
      } else if (Array.isArray(operands)) {
        return operands;
      } else {
        return [operands];
      }
    };

    CFFDict.prototype.decode = function(stream, parent) {
      var b, end, field, key, operands, ret, _name, _ref;
      end = stream.pos + parent.length;
      ret = {};
      operands = [];
      Object.defineProperties(ret, {
        parent: {
          value: parent
        },
        _startOffset: {
          value: stream.pos
        }
      });
      while (stream.pos < end) {
        b = stream.readUInt8();
        if (b <= 21) {
          if (b === 12) {
            b = (b << 8) | stream.readUInt8();
          }
          field = this.fields[b];
          if (!field) {
            throw new Error("Unknown operator " + b);
          }
          ret[field[1]] = decodeOperands(field[2], stream, ret, operands);
          operands = [];
        } else {
          operands.push(CFFOperand.decode(stream, b));
        }
      }
      _ref = this.fields;
      for (key in _ref) {
        field = _ref[key];
        if (ret[_name = field[1]] == null) {
          ret[_name] = field[3];
        }
      }
      return ret;
    };

    CFFDict.prototype.size = function(dict, parent, includePointers) {
      var ctx, field, k, key, len, op, operands, val, _i, _len, _ref;
      if (includePointers == null) {
        includePointers = true;
      }
      ctx = {
        parent: parent,
        val: dict,
        pointerSize: 0,
        startOffset: parent.startOffset || 0
      };
      len = 0;
      _ref = this.fields;
      for (k in _ref) {
        field = _ref[k];
        val = dict[field[1]];
        if ((val == null) || _.isEqual(val, field[3])) {
          continue;
        }
        operands = encodeOperands(field[2], null, ctx, val);
        for (_i = 0, _len = operands.length; _i < _len; _i++) {
          op = operands[_i];
          len += CFFOperand.size(op);
        }
        key = Array.isArray(field[0]) ? field[0] : [field[0]];
        len += key.length;
      }
      if (includePointers) {
        len += ctx.pointerSize;
      }
      return len;
    };

    CFFDict.prototype.encode = function(stream, dict, parent) {
      var ctx, field, i, key, op, operands, ptr, val, _i, _j, _k, _len, _len1, _len2, _ref;
      ctx = {
        pointers: [],
        startOffset: stream.pos,
        parent: parent,
        val: dict,
        pointerSize: 0
      };
      ctx.pointerOffset = stream.pos + this.size(dict, ctx, false);
      _ref = this.ops;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        field = _ref[_i];
        val = dict[field[1]];
        if ((val == null) || _.isEqual(val, field[3])) {
          continue;
        }
        operands = encodeOperands(field[2], stream, ctx, val);
        for (_j = 0, _len1 = operands.length; _j < _len1; _j++) {
          op = operands[_j];
          CFFOperand.encode(stream, op);
        }
        key = Array.isArray(field[0]) ? field[0] : [field[0]];
        for (_k = 0, _len2 = key.length; _k < _len2; _k++) {
          op = key[_k];
          stream.writeUInt8(op);
        }
      }
      i = 0;
      while (i < ctx.pointers.length) {
        ptr = ctx.pointers[i++];
        ptr.type.encode(stream, ptr.val, ptr.parent);
      }
    };

    return CFFDict;

  })();

  module.exports = CFFDict;

}).call(this);

},{"./CFFOperand":139,"lodash":72,"restructure":89}],138:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var CFFIndex, r, _;

  r = require('restructure');

  _ = require('lodash');

  CFFIndex = (function() {
    function CFFIndex(type) {
      this.type = type;
    }

    CFFIndex.prototype.decode = function(stream, parent) {
      var count, end, i, offSize, offsetType, pos, ret, start, startPos, _i;
      count = stream.readUInt16BE();
      if (count === 0) {
        return [];
      }
      offSize = stream.readUInt8();
      offsetType = (function() {
        switch (offSize) {
          case 1:
            return r.uint8;
          case 2:
            return r.uint16;
          case 3:
            return r.uint24;
          case 4:
            return r.uint32;
          default:
            throw new Error("Bad offset size in CFFIndex: " + offSize + " " + stream.pos);
        }
      })();
      ret = [];
      startPos = stream.pos + ((count + 1) * offSize) - 1;
      start = offsetType.decode(stream);
      for (i = _i = 0; _i < count; i = _i += 1) {
        end = offsetType.decode(stream);
        if (this.type != null) {
          pos = stream.pos;
          stream.pos = startPos + start;
          parent.length = end - start;
          ret.push(this.type.decode(stream, parent));
          stream.pos = pos;
        } else {
          ret.push({
            offset: startPos + start,
            length: end - start
          });
        }
        start = end;
      }
      stream.pos = startPos + start;
      return ret;
    };

    CFFIndex.prototype.size = function(arr, parent) {
      var item, offset, offsetType, size, type, _i, _len;
      size = 2;
      if (arr.length === 0) {
        return size;
      }
      type = this.type || new r.Buffer;
      offset = 1;
      for (_i = 0, _len = arr.length; _i < _len; _i++) {
        item = arr[_i];
        offset += type.size(item, parent);
      }
      offsetType = (function() {
        if (offset <= 0xff) {
          return r.uint8;
        } else if (offset <= 0xffff) {
          return r.uint16;
        } else if (offset <= 0xffffff) {
          return r.uint24;
        } else if (offset <= 0xffffffff) {
          return r.uint32;
        } else {
          throw new Error("Bad offset in CFFIndex");
        }
      })();
      size += 1 + offsetType.size() * (arr.length + 1);
      size += offset - 1;
      return size;
    };

    CFFIndex.prototype.encode = function(stream, arr, parent) {
      var i, item, offset, offsetType, s, sizes, type, _i, _j, _k, _len, _len1, _len2;
      stream.writeUInt16BE(arr.length);
      if (arr.length === 0) {
        return;
      }
      type = this.type || new r.Buffer;
      sizes = [];
      offset = 1;
      for (_i = 0, _len = arr.length; _i < _len; _i++) {
        item = arr[_i];
        s = type.size(item, parent);
        sizes.push(s);
        offset += s;
      }
      offsetType = (function() {
        if (offset <= 0xff) {
          return r.uint8;
        } else if (offset <= 0xffff) {
          return r.uint16;
        } else if (offset <= 0xffffff) {
          return r.uint24;
        } else if (offset <= 0xffffffff) {
          return r.uint32;
        } else {
          throw new Error("Bad offset in CFFIndex");
        }
      })();
      stream.writeUInt8(offsetType.size());
      offset = 1;
      offsetType.encode(stream, offset);
      for (i = _j = 0, _len1 = arr.length; _j < _len1; i = ++_j) {
        item = arr[i];
        offset += sizes[i];
        offsetType.encode(stream, offset);
      }
      for (_k = 0, _len2 = arr.length; _k < _len2; _k++) {
        item = arr[_k];
        type.encode(stream, item, parent);
      }
    };

    return CFFIndex;

  })();

  module.exports = CFFIndex;

}).call(this);

},{"lodash":72,"restructure":89}],139:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var CFFOperand;

  CFFOperand = (function() {
    var FLOAT_ENCODE_LOOKUP, FLOAT_EOF, FLOAT_LOOKUP;

    function CFFOperand() {}

    FLOAT_EOF = 0xf;

    FLOAT_LOOKUP = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];

    FLOAT_ENCODE_LOOKUP = {
      '.': 10,
      'E': 11,
      'E-': 12,
      '-': 14
    };

    CFFOperand.prototype.decode = function(stream, value) {
      var b, n1, n2, str;
      if ((32 <= value && value <= 246)) {
        return value - 139;
      }
      if ((247 <= value && value <= 250)) {
        return (value - 247) * 256 + stream.readUInt8() + 108;
      }
      if ((251 <= value && value <= 254)) {
        return -(value - 251) * 256 - stream.readUInt8() - 108;
      }
      if (value === 28) {
        return stream.readInt16BE();
      }
      if (value === 29) {
        return stream.readInt32BE();
      }
      if (value === 30) {
        str = '';
        while (true) {
          b = stream.readUInt8();
          n1 = b >> 4;
          if (n1 === FLOAT_EOF) {
            break;
          }
          str += FLOAT_LOOKUP[n1];
          n2 = b & 15;
          if (n2 === FLOAT_EOF) {
            break;
          }
          str += FLOAT_LOOKUP[n2];
        }
        return parseFloat(str);
      }
      return null;
    };

    CFFOperand.prototype.size = function(value) {
      var str;
      if (value.forceLarge) {
        value = 32768;
      }
      if ((value | 0) !== value) {
        str = '' + value;
        return 1 + Math.ceil((str.length + 1) / 2);
      } else if ((-107 <= value && value <= 107)) {
        return 1;
      } else if ((108 <= value && value <= 1131) || (-1131 <= value && value <= -108)) {
        return 2;
      } else if ((-32768 <= value && value <= 32767)) {
        return 3;
      } else {
        return 5;
      }
    };

    CFFOperand.prototype.encode = function(stream, value) {
      var c1, c2, i, n1, n2, str, val, _i, _len;
      val = Number(value);
      if (value.forceLarge) {
        stream.writeUInt8(29);
        return stream.writeInt32BE(val);
      } else if ((val | 0) !== val) {
        stream.writeUInt8(30);
        str = '' + val;
        for (i = _i = 0, _len = str.length; _i < _len; i = _i += 2) {
          c1 = str[i];
          n1 = FLOAT_ENCODE_LOOKUP[c1] || +c1;
          if (i === str.length - 1) {
            n2 = FLOAT_EOF;
          } else {
            c2 = str[i + 1];
            n2 = FLOAT_ENCODE_LOOKUP[c2] || +c2;
          }
          stream.writeUInt8((n1 << 4) | (n2 & 15));
        }
        if (n2 !== FLOAT_EOF) {
          return stream.writeUInt8(FLOAT_EOF << 4);
        }
      } else if ((-107 <= val && val <= 107)) {
        return stream.writeUInt8(val + 139);
      } else if ((108 <= val && val <= 1131)) {
        val -= 108;
        stream.writeUInt8((val >> 8) + 247);
        return stream.writeUInt8(val & 0xff);
      } else if ((-1131 <= val && val <= -108)) {
        val = -val - 108;
        stream.writeUInt8((val >> 8) + 251);
        return stream.writeUInt8(val & 0xff);
      } else if ((-32768 <= val && val <= 32767)) {
        stream.writeUInt8(28);
        return stream.writeInt16BE(val);
      } else {
        stream.writeUInt8(29);
        return stream.writeInt32BE(val);
      }
    };

    return CFFOperand;

  })();

  module.exports = new CFFOperand;

}).call(this);

},{}],140:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var CFFPointer, r,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  r = require('restructure');

  CFFPointer = (function(_super) {
    var Ptr;

    __extends(CFFPointer, _super);

    function CFFPointer(type, options) {
      if (options == null) {
        options = {};
      }
      if (options.type == null) {
        options.type = 'global';
      }
      CFFPointer.__super__.constructor.call(this, null, type, options);
    }

    CFFPointer.prototype.decode = function(stream, parent, operands) {
      this.offsetType = {
        decode: function() {
          return operands[0];
        }
      };
      return CFFPointer.__super__.decode.apply(this, arguments);
    };

    Ptr = (function() {
      function Ptr(val) {
        this.val = val;
        this.forceLarge = true;
      }

      Ptr.prototype.valueOf = function() {
        return this.val;
      };

      return Ptr;

    })();

    CFFPointer.prototype.encode = function(stream, value, ctx) {
      var ptr;
      if (!stream) {
        this.offsetType = {
          size: function() {
            return 0;
          }
        };
        this.size(value, ctx);
        return [new Ptr(0)];
      }
      ptr = null;
      this.offsetType = {
        encode: function(stream, val) {
          return ptr = val;
        }
      };
      CFFPointer.__super__.encode.apply(this, arguments);
      return [new Ptr(ptr)];
    };

    return CFFPointer;

  })(r.Pointer);

  module.exports = CFFPointer;

}).call(this);

},{"restructure":89}],141:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var CFFDict, CFFIndex, CFFPointer;

  CFFDict = require('./CFFDict');

  CFFIndex = require('./CFFIndex');

  CFFPointer = require('./CFFPointer');

  module.exports = new CFFDict([
    [6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'number', 0.039625], [[12, 10], 'BlueShift', 'number', 7], [[12, 11], 'BlueFuzz', 'number', 1], [10, 'StdHW', 'number', null], [11, 'StdVW', 'number', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'boolean', false], [[12, 17], 'LanguageGroup', 'number', 0], [[12, 18], 'ExpansionFactor', 'number', 0.06], [[12, 19], 'initialRandomSeed', 'number', 0], [20, 'defaultWidthX', 'number', 0], [21, 'nominalWidthX', 'number', 0], [
      19, 'Subrs', new CFFPointer(new CFFIndex, {
        type: 'local'
      }), null
    ]
  ]);

}).call(this);

},{"./CFFDict":137,"./CFFIndex":138,"./CFFPointer":140}],142:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  module.exports = [".notdef", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "endash", "dagger", "daggerdbl", "periodcentered", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "questiondown", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "emdash", "AE", "ordfeminine", "Lslash", "Oslash", "OE", "ordmasculine", "ae", "dotlessi", "lslash", "oslash", "oe", "germandbls", "onesuperior", "logicalnot", "mu", "trademark", "Eth", "onehalf", "plusminus", "Thorn", "onequarter", "divide", "brokenbar", "degree", "thorn", "threequarters", "twosuperior", "registered", "minus", "eth", "multiply", "threesuperior", "copyright", "Aacute", "Acircumflex", "Adieresis", "Agrave", "Aring", "Atilde", "Ccedilla", "Eacute", "Ecircumflex", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Ntilde", "Oacute", "Ocircumflex", "Odieresis", "Ograve", "Otilde", "Scaron", "Uacute", "Ucircumflex", "Udieresis", "Ugrave", "Yacute", "Ydieresis", "Zcaron", "aacute", "acircumflex", "adieresis", "agrave", "aring", "atilde", "ccedilla", "eacute", "ecircumflex", "edieresis", "egrave", "iacute", "icircumflex", "idieresis", "igrave", "ntilde", "oacute", "ocircumflex", "odieresis", "ograve", "otilde", "scaron", "uacute", "ucircumflex", "udieresis", "ugrave", "yacute", "ydieresis", "zcaron", "exclamsmall", "Hungarumlautsmall", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "exclamdownsmall", "centoldstyle", "Lslashsmall", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "Dotaccentsmall", "Macronsmall", "figuredash", "hypheninferior", "Ogoneksmall", "Ringsmall", "Cedillasmall", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall", "001.000", "001.001", "001.002", "001.003", "Black", "Bold", "Book", "Light", "Medium", "Regular", "Roman", "Semibold"];

}).call(this);

},{}],143:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var CFFCharset, CFFDict, CFFEncoding, CFFEncodingVersion, CFFHeader, CFFIndex, CFFPointer, CFFPrivateDict, CFFPrivateOp, CFFTop, CFFTopDict, FDSelect, FontDict, Range1, Range2, Range3, r,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  r = require('restructure');

  CFFDict = require('./CFFDict');

  CFFIndex = require('./CFFIndex');

  CFFPointer = require('./CFFPointer');

  CFFPrivateDict = require('./CFFPrivateDict');

  Range1 = new r.Struct({
    first: r.uint16,
    nLeft: r.uint8
  });

  Range2 = new r.Struct({
    first: r.uint16,
    nLeft: r.uint16
  });

  CFFEncodingVersion = (function(_super) {
    __extends(CFFEncodingVersion, _super);

    function CFFEncodingVersion() {
      CFFEncodingVersion.__super__.constructor.call(this, r.uint8);
    }

    CFFEncodingVersion.prototype.decode = function(stream) {
      return r.uint8.decode(stream) & 0x7f;
    };

    return CFFEncodingVersion;

  })(r.Number);

  CFFEncoding = new r.VersionedStruct(new CFFEncodingVersion, {
    0: {
      nCodes: r.uint8,
      codes: new r.Array(r.uint8, 'nCodes')
    },
    1: {
      nRanges: r.uint8,
      ranges: new r.Array(Range1, 'nRanges')
    }
  });

  CFFCharset = new r.VersionedStruct(r.uint8, {
    0: {
      glyphs: new r.Array(r.uint16, 'nGlyphs')
    },
    1: {
      ranges: new r.Array(Range1, 0)
    },
    2: {
      ranges: new r.Array(Range2, 0)
    }
  });

  Range3 = new r.Struct({
    first: r.uint16,
    fd: r.uint8
  });

  FDSelect = new r.VersionedStruct(r.uint8, {
    0: {
      fds: new r.Array(r.uint8, function() {
        return this.parent.CharStrings.length;
      })
    },
    3: {
      nRanges: r.uint16,
      ranges: new r.Array(Range3, 'nRanges'),
      sentinel: r.uint16
    }
  });

  CFFPrivateOp = (function() {
    var ptr;

    function CFFPrivateOp() {}

    ptr = new CFFPointer(CFFPrivateDict);

    CFFPrivateOp.prototype.decode = function(stream, parent, operands) {
      parent.length = operands[0];
      return ptr.decode(stream, parent, [operands[1]]);
    };

    CFFPrivateOp.prototype.size = function(dict, ctx) {
      return [CFFPrivateDict.size(dict, ctx, false), ptr.size(dict, ctx)[0]];
    };

    CFFPrivateOp.prototype.encode = function(stream, dict, ctx) {
      return [CFFPrivateDict.size(dict, ctx, false), ptr.encode(stream, dict, ctx)[0]];
    };

    return CFFPrivateOp;

  })();

  FontDict = new CFFDict([[18, 'Private', new CFFPrivateOp, null], [[12, 38], 'FontName', 'sid', null]]);

  CFFTopDict = new CFFDict([[[12, 30], 'ROS', ['sid', 'sid', 'number'], null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'boolean', false], [[12, 2], 'ItalicAngle', 'number', 0], [[12, 3], 'UnderlinePosition', 'number', -100], [[12, 4], 'UnderlineThickness', 'number', 50], [[12, 5], 'PaintType', 'number', 0], [[12, 6], 'CharstringType', 'number', 2], [[12, 7], 'FontMatrix', 'array', [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'number', null], [5, 'FontBBox', 'array', [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'number', 0], [14, 'XUID', 'array', null], [15, 'charset', new CFFPointer(CFFCharset), 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', new CFFPointer(new CFFIndex), null], [18, 'Private', new CFFPrivateOp, null], [[12, 20], 'SyntheticBase', 'number', null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'number', 0], [[12, 32], 'CIDFontRevision', 'number', 0], [[12, 33], 'CIDFontType', 'number', 0], [[12, 34], 'CIDCount', 'number', 8720], [[12, 35], 'UIDBase', 'number', null], [[12, 37], 'FDSelect', new CFFPointer(FDSelect), null], [[12, 36], 'FDArray', new CFFPointer(new CFFIndex(FontDict)), null], [[12, 38], 'FontName', 'sid', null]]);

  CFFHeader = new r.Struct({
    majorVersion: r.uint8,
    minorVersion: r.uint8,
    hdrSize: r.uint8,
    offSize: r.uint8
  });

  CFFTop = new r.Struct({
    header: CFFHeader,
    nameIndex: new CFFIndex(new r.String('length')),
    topDictIndex: new CFFIndex(CFFTopDict),
    stringIndex: new CFFIndex(new r.String('length')),
    globalSubrIndex: new CFFIndex
  });

  module.exports = CFFTop;

}).call(this);

},{"./CFFDict":137,"./CFFIndex":138,"./CFFPointer":140,"./CFFPrivateDict":141,"restructure":89}],144:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var CFFGlyph, Glyph, Path,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Glyph = require('./Glyph');

  Path = require('./Path');

  CFFGlyph = (function(_super) {
    var bias;

    __extends(CFFGlyph, _super);

    function CFFGlyph() {
      return CFFGlyph.__super__.constructor.apply(this, arguments);
    }

    bias = function(s) {
      if (s.length < 1240) {
        return 107;
      } else if (s.length < 33900) {
        return 1131;
      } else {
        return 32768;
      }
    };

    CFFGlyph.prototype._getPath = function() {
      var cff, end, gsubrs, gsubrsBias, nStems, parse, parseStems, path, pos, privateDict, stack, str, stream, subrs, subrsBias, trans, usedGsubrs, usedSubrs, width, x, y;
      stream = this._font.stream;
      pos = stream.pos;
      cff = this._font['CFF '];
      str = cff.topDict.CharStrings[this.id];
      end = str.offset + str.length;
      stream.pos = str.offset;
      path = new Path;
      stack = [];
      trans = [];
      width = null;
      nStems = 0;
      x = y = 0;
      this._usedGsubrs = usedGsubrs = {};
      this._usedSubrs = usedSubrs = {};
      gsubrs = cff.globalSubrIndex || [];
      gsubrsBias = bias(gsubrs);
      privateDict = cff.privateDictForGlyph(this.id);
      subrs = privateDict.Subrs || [];
      subrsBias = bias(subrs);
      parseStems = function() {
        if (stack.length % 2 !== 0) {
          if (width == null) {
            width = stack.shift() + privateDict.nominalWidthX;
          }
        }
        nStems += stack.length >> 1;
        return stack.length = 0;
      };
      (parse = function() {
        var a, b, b1, c1x, c1y, c2x, c2y, c3x, c3y, c4x, c4y, c5x, c5y, c6x, c6y, e, haveWidth, i, idx, index, j, n, op, p, phase, pts, s1, s2, startx, starty, subr, t, v1, v2, val, _i, _j, _k, _l, _ref;
        while (stream.pos < end) {
          op = stream.readUInt8();
          if (op < 32) {
            switch (op) {
              case 1:
              case 3:
              case 18:
              case 23:
                parseStems();
                break;
              case 4:
                if (stack.length > 1) {
                  if (width == null) {
                    width = stack.shift() + privateDict.nominalWidthX;
                  }
                }
                y += stack.shift();
                path.moveTo(x, -y);
                break;
              case 5:
                while (stack.length >= 2) {
                  x += stack.shift();
                  y += stack.shift();
                  path.lineTo(x, -y);
                }
                break;
              case 6:
              case 7:
                phase = op === 6;
                while (stack.length >= 1) {
                  if (phase) {
                    x += stack.shift();
                  } else {
                    y += stack.shift();
                  }
                  path.lineTo(x, -y);
                  phase = !phase;
                }
                break;
              case 8:
                while (stack.length > 0) {
                  c1x = x + stack.shift();
                  c1y = y + stack.shift();
                  c2x = c1x + stack.shift();
                  c2y = c1y + stack.shift();
                  x = c2x + stack.shift();
                  y = c2y + stack.shift();
                  path.bezierCurveTo(c1x, -c1y, c2x, -c2y, x, -y);
                }
                break;
              case 10:
                index = stack.pop() + subrsBias;
                subr = subrs[index];
                if (subr) {
                  usedSubrs[index] = true;
                  p = stream.pos;
                  e = end;
                  stream.pos = subr.offset;
                  end = subr.offset + subr.length;
                  parse();
                  stream.pos = p;
                  end = e;
                }
                break;
              case 11:
                return;
              case 14:
                if (stack.length > 0) {
                  if (width == null) {
                    width = stack.shift() + privateDict.nominalWidthX;
                  }
                }
                path.closePath();
                break;
              case 19:
              case 20:
                parseStems();
                stream.pos += (nStems + 7) >> 3;
                break;
              case 21:
                if (stack.length > 2) {
                  if (width == null) {
                    width = stack.shift() + privateDict.nominalWidthX;
                  }
                  haveWidth = true;
                }
                x += stack.shift();
                y += stack.shift();
                path.moveTo(x, -y);
                break;
              case 22:
                if (stack.length > 1) {
                  if (width == null) {
                    width = stack.shift() + privateDict.nominalWidthX;
                  }
                }
                x += stack.shift();
                path.moveTo(x, -y);
                break;
              case 24:
                while (stack.length >= 8) {
                  c1x = x + stack.shift();
                  c1y = y + stack.shift();
                  c2x = c1x + stack.shift();
                  c2y = c1y + stack.shift();
                  x = c2x + stack.shift();
                  y = c2y + stack.shift();
                  path.bezierCurveTo(c1x, -c1y, c2x, -c2y, x, -y);
                }
                x += stack.shift();
                y += stack.shift();
                path.lineTo(x, -y);
                break;
              case 25:
                while (stack.length >= 8) {
                  x += stack.shift();
                  y += stack.shift();
                  path.lineTo(x, -y);
                }
                c1x = x + stack.shift();
                c1y = y + stack.shift();
                c2x = c1x + stack.shift();
                c2y = c1y + stack.shift();
                x = c2x + stack.shift();
                y = c2y + stack.shift();
                path.bezierCurveTo(c1x, -c1y, c2x, -c2y, x, -y);
                break;
              case 26:
                if (stack.length % 2) {
                  x += stack.shift();
                }
                while (stack.length >= 4) {
                  c1x = x;
                  c1y = y + stack.shift();
                  c2x = c1x + stack.shift();
                  c2y = c1y + stack.shift();
                  x = c2x;
                  y = c2y + stack.shift();
                  path.bezierCurveTo(c1x, -c1y, c2x, -c2y, x, -y);
                }
                break;
              case 27:
                if (stack.length % 2) {
                  y += stack.shift();
                }
                while (stack.length >= 4) {
                  c1x = x + stack.shift();
                  c1y = y;
                  c2x = c1x + stack.shift();
                  c2y = c1y + stack.shift();
                  x = c2x + stack.shift();
                  y = c2y;
                  path.bezierCurveTo(c1x, -c1y, c2x, -c2y, x, -y);
                }
                break;
              case 28:
                stack.push(stream.readInt16BE());
                break;
              case 29:
                index = stack.pop() + gsubrsBias;
                subr = gsubrs[index];
                if (subr) {
                  usedGsubrs[index] = true;
                  p = stream.pos;
                  e = end;
                  stream.pos = subr.offset;
                  end = subr.offset + subr.length;
                  parse();
                  stream.pos = p;
                  end = e;
                }
                break;
              case 30:
              case 31:
                phase = op === 31;
                while (stack.length >= 4) {
                  if (phase) {
                    c1x = x + stack.shift();
                    c1y = y;
                    c2x = c1x + stack.shift();
                    c2y = c1y + stack.shift();
                    y = c2y + stack.shift();
                    x = c2x + (stack.length === 1 ? stack.shift() : 0);
                  } else {
                    c1x = x;
                    c1y = y + stack.shift();
                    c2x = c1x + stack.shift();
                    c2y = c1y + stack.shift();
                    x = c2x + stack.shift();
                    y = c2y + (stack.length === 1 ? stack.shift() : 0);
                  }
                  path.bezierCurveTo(c1x, -c1y, c2x, -c2y, x, -y);
                  phase = !phase;
                }
                break;
              case 12:
                op = stream.readUInt8();
                switch (op) {
                  case 3:
                    a = stack.pop();
                    b = stack.pop();
                    stack.push(a && b ? 1 : 0);
                    break;
                  case 4:
                    a = stack.pop();
                    b = stack.pop();
                    stack.push(a || b ? 1 : 0);
                    break;
                  case 5:
                    a = stack.pop();
                    stack.push(a ? 0 : 1);
                    break;
                  case 9:
                    a = stack.pop();
                    stack.push(Math.abs(a));
                    break;
                  case 10:
                    a = stack.pop();
                    b = stack.pop();
                    stack.push(a + b);
                    break;
                  case 11:
                    a = stack.pop();
                    b = stack.pop();
                    stack.push(a - b);
                    break;
                  case 12:
                    a = stack.pop();
                    b = stack.pop();
                    stack.push(a / b);
                    break;
                  case 14:
                    a = stack.pop();
                    stack.push(-a);
                    break;
                  case 15:
                    a = stack.pop();
                    b = stack.pop();
                    stack.push(a === b ? 1 : 0);
                    break;
                  case 18:
                    stack.pop();
                    break;
                  case 20:
                    val = stack.pop();
                    idx = stack.pop();
                    trans[idx] = val;
                    break;
                  case 21:
                    idx = stack.pop();
                    stack.push(trans[idx] || 0);
                    break;
                  case 22:
                    s1 = stack.pop();
                    s2 = stack.pop();
                    v1 = stack.pop();
                    v2 = stack.pop();
                    stack.push(v1 <= v2 ? s1 : s2);
                    break;
                  case 23:
                    stack.push(Math.random());
                    break;
                  case 24:
                    a = stack.pop();
                    b = stack.pop();
                    stack.push(a * b);
                    break;
                  case 26:
                    a = stack.pop();
                    stack.push(Math.sqrt(a));
                    break;
                  case 27:
                    a = stack.pop();
                    stack.push(a, a);
                    break;
                  case 28:
                    a = stack.pop();
                    b = stack.pop();
                    stack.push(b, a);
                    break;
                  case 29:
                    idx = stack.pop();
                    if (idx < 0) {
                      idx = 0;
                    } else if (idx > stack.length - 1) {
                      idx = stack.length - 1;
                    }
                    stack.push(stack[idx]);
                    break;
                  case 30:
                    n = stack.pop();
                    j = stack.pop();
                    if (j >= 0) {
                      while (j > 0) {
                        t = stack[n - 1];
                        for (i = _i = _ref = n - 2; _i >= 0; i = _i += -1) {
                          stack[i + 1] = stack[i];
                        }
                        stack[0] = t;
                        j--;
                      }
                    } else {
                      while (j < 0) {
                        t = stack[0];
                        for (i = _j = 0; _j <= n; i = _j += 1) {
                          stack[i] = stack[i + 1];
                        }
                        stack[n - 1] = t;
                        j++;
                      }
                    }
                    break;
                  case 34:
                    c1x = x + stack.shift();
                    c1y = y;
                    c2x = c1x + stack.shift();
                    c2y = c1y + stack.shift();
                    c3x = c2x + stack.shift();
                    c3y = c2y;
                    c4x = c3x + stack.shift();
                    c4y = c3y;
                    c5x = c4x + stack.shift();
                    c5y = c4y;
                    c6x = c5x + stack.shift();
                    c6y = c5y;
                    x = c6x;
                    y = c6y;
                    path.bezierCurveTo(c1x, -c1y, c2x, -c2y, c3x, -c3y);
                    path.bezierCurveTo(c4x, -c4y, c5x, -c5y, c6x, -c6y);
                    break;
                  case 35:
                    pts = [];
                    for (i = _k = 0; _k < 6; i = ++_k) {
                      x += stack.shift();
                      y += stack.shift();
                      pts.push(x, y);
                    }
                    path.bezierCurveTo.apply(path, pts.slice(0, 6));
                    path.bezierCurveTo.apply(path, pts.slice(6));
                    stack.shift();
                    break;
                  case 36:
                    c1x = x + stack.shift();
                    c1y = y + stack.shift();
                    c2x = c1x + stack.shift();
                    c2y = c1y + stack.shift();
                    c3x = c2x + stack.shift();
                    c3y = c2y;
                    c4x = c3x + stack.shift();
                    c4y = c3y;
                    c5x = c4x + stack.shift();
                    c5y = c4y + stack.shift();
                    c6x = c5x + stack.shift();
                    c6y = c5y;
                    x = c6x;
                    y = c6y;
                    path.bezierCurveTo(c1x, -c1y, c2x, -c2y, c3x, -c3y);
                    path.bezierCurveTo(c4x, -c4y, c5x, -c5y, c6x, -c6y);
                    break;
                  case 37:
                    startx = x;
                    starty = y;
                    pts = [];
                    for (i = _l = 0; _l < 5; i = ++_l) {
                      x += stack.shift();
                      y += stack.shift();
                      pts.push(x, y);
                    }
                    if (Math.abs(x - startx) > Math.abs(y - starty)) {
                      x += stack.shift();
                      y = starty;
                    } else {
                      x = startx;
                      y += stack.shift();
                    }
                    pts.push(x, y);
                    path.bezierCurveTo.apply(path, pts.slice(0, 6));
                    path.bezierCurveTo.apply(path, pts.slice(6));
                    break;
                  default:
                    throw new Error('Unknown op: 12 ' + op);
                }
                break;
              default:
                throw new Error('Unknown op: ' + op);
            }
          } else if (op < 247) {
            stack.push(op - 139);
          } else if (op < 251) {
            b1 = stream.readUInt8();
            stack.push((op - 247) * 256 + b1 + 108);
          } else if (op < 255) {
            b1 = stream.readUInt8();
            stack.push(-(op - 251) * 256 - b1 - 108);
          } else {
            stack.push(stream.readInt32BE() / 65536);
          }
        }
      })();
      return path;
    };

    return CFFGlyph;

  })(Glyph);

  module.exports = CFFGlyph;

}).call(this);

},{"./Glyph":146,"./Path":147}],145:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var COLRGlyph, Glyph,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Glyph = require('./Glyph');

  COLRGlyph = (function(_super) {
    var COLRLayer, get;

    __extends(COLRGlyph, _super);

    function COLRGlyph() {
      return COLRGlyph.__super__.constructor.apply(this, arguments);
    }

    COLRLayer = (function() {
      function COLRLayer(glyph, color) {
        this.glyph = glyph;
        this.color = color;
      }

      return COLRLayer;

    })();

    get = function(key, fn) {
      return Object.defineProperty(COLRGlyph.prototype, key, {
        get: fn,
        enumerable: true
      });
    };

    COLRGlyph.prototype._getBBox = function() {
      var b, bbox, layer, _i, _len, _ref;
      bbox = [Infinity, Infinity, -Infinity, -Infinity];
      _ref = this.layers;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        layer = _ref[_i];
        b = layer.glyph.bbox;
        if (b[0] < bbox[0]) {
          bbox[0] = b[0];
        }
        if (b[1] < bbox[1]) {
          bbox[1] = b[1];
        }
        if (b[2] > bbox[2]) {
          bbox[2] = b[2];
        }
        if (b[3] > bbox[3]) {
          bbox[3] = b[3];
        }
      }
      return bbox;
    };

    get('layers', function() {
      var baseLayer, color, colr, cpal, g, high, i, low, mid, rec, _i, _ref, _ref1, _results;
      cpal = this._font.CPAL;
      colr = this._font.COLR;
      low = 0;
      high = colr.baseGlyphRecord.length - 1;
      while (low <= high) {
        mid = (low + high) >> 1;
        rec = colr.baseGlyphRecord[mid];
        if (this.id < rec.gid) {
          high = mid - 1;
        } else if (this.id > rec.gid) {
          low = mid + 1;
        } else {
          baseLayer = rec;
          break;
        }
      }
      if (baseLayer == null) {
        g = this._font._getBaseGlyph(this.id);
        color = {
          red: 0,
          green: 0,
          blue: 0,
          alpha: 255
        };
        return [new COLRLayer(g, color)];
      }
      _results = [];
      for (i = _i = _ref = baseLayer.firstLayerIndex, _ref1 = baseLayer.firstLayerIndex + baseLayer.numLayers; _i < _ref1; i = _i += 1) {
        rec = colr.layerRecords[i];
        color = cpal.colorRecords[rec.paletteIndex];
        g = this._font._getBaseGlyph(rec.gid);
        _results.push(new COLRLayer(g, color));
      }
      return _results;
    });

    COLRGlyph.prototype.render = function(ctx, size) {
      var color, glyph, _i, _len, _ref, _ref1, _results;
      _ref = this.layers;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        _ref1 = _ref[_i], glyph = _ref1.glyph, color = _ref1.color;
        ctx.fillColor([color.red, color.green, color.blue], color.alpha / 255 * 100);
        _results.push(glyph.render(ctx, size));
      }
      return _results;
    };

    return COLRGlyph;

  })(Glyph);

  module.exports = COLRGlyph;

}).call(this);

},{"./Glyph":146}],146:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var Glyph, Path;

  Path = require('./Path');

  Glyph = (function() {
    var get;

    function Glyph(id, codePoints, _font) {
      this.id = id;
      this.codePoints = codePoints;
      this._font = _font;
    }

    get = function(key, fn) {
      return Object.defineProperty(Glyph.prototype, key, {
        get: fn,
        enumerable: true
      });
    };

    Glyph.prototype._getPath = function() {
      return new Path;
    };

    Glyph.prototype._getCBox = function() {
      return this.path.cbox;
    };

    Glyph.prototype._getBBox = function() {
      return this.path.bbox;
    };

    get('cbox', function() {
      return this._cbox != null ? this._cbox : this._cbox = this._getCBox();
    });

    get('bbox', function() {
      return this._bbox != null ? this._bbox : this._bbox = this._getBBox();
    });

    get('path', function() {
      return this._path != null ? this._path : this._path = this._getPath();
    });

    get('advanceWidth', function() {
      return this._font.widthOfGlyph(this.id);
    });

    get('ligatureCaretPositions', function() {});

    Glyph.prototype.render = function(ctx, size) {
      var fn;
      ctx.save();
      ctx.scale(1 / this._font.head.unitsPerEm * size);
      fn = this.path.toFunction();
      fn(ctx);
      ctx.fill();
      return ctx.restore();
    };

    return Glyph;

  })();

  module.exports = Glyph;

}).call(this);

},{"./Path":147}],147:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var Path,
    __slice = [].slice;

  Path = (function() {
    var BBox, SVG_COMMANDS, command, get, _fn, _i, _len, _ref;

    function Path() {
      this.commands = [];
      this._bbox = this._cbox = null;
    }

    _ref = ['moveTo', 'lineTo', 'quadraticCurveTo', 'bezierCurveTo', 'closePath'];
    _fn = function(command) {
      return Path.prototype[command] = function() {
        var args;
        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        this._bbox = this._cbox = null;
        this.commands.push({
          command: command,
          args: args
        });
        return this;
      };
    };
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      command = _ref[_i];
      _fn(command);
    }

    Path.prototype.toFunction = function() {
      var c, cmds, _j, _len1, _ref1;
      cmds = [];
      _ref1 = this.commands;
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        c = _ref1[_j];
        cmds.push("  ctx." + c.command + "(" + (c.args.join(', ')) + ");");
      }
      return new Function('ctx', cmds.join('\n'));
    };

    SVG_COMMANDS = {
      moveTo: 'M',
      lineTo: 'L',
      quadraticCurveTo: 'Q',
      bezierCurveTo: 'C',
      closePath: 'Z'
    };

    Path.prototype.toSVG = function() {
      var c, cmds, _j, _len1, _ref1;
      cmds = [];
      _ref1 = this.commands;
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        c = _ref1[_j];
        cmds.push("" + SVG_COMMANDS[c.command] + (c.args.join(' ')));
      }
      return cmds.join('');
    };

    get = function(key, fn) {
      return Object.defineProperty(Path.prototype, key, {
        get: fn,
        enumerable: true
      });
    };

    BBox = (function() {
      function BBox() {
        this.minX = this.minY = Infinity;
        this.maxX = this.maxY = -Infinity;
      }

      BBox.prototype.addPoint = function(x, y) {
        if (x < this.minX) {
          this.minX = x;
        }
        if (y < this.minY) {
          this.minY = y;
        }
        if (x > this.maxX) {
          this.maxX = x;
        }
        if (y > this.maxY) {
          return this.maxY = y;
        }
      };

      BBox.prototype.toArray = function() {
        return [this.minX, this.minY, this.maxX, this.maxY];
      };

      return BBox;

    })();

    get('cbox', function() {
      var cbox, i, x, _j, _k, _len1, _len2, _ref1, _ref2;
      if (this._cbox) {
        return this._cbox;
      }
      cbox = new BBox;
      _ref1 = this.commands;
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        command = _ref1[_j];
        _ref2 = command.args;
        for (i = _k = 0, _len2 = _ref2.length; _k < _len2; i = _k += 2) {
          x = _ref2[i];
          cbox.addPoint(x, command.args[i + 1]);
        }
      }
      return this._cbox = cbox.toArray();
    });

    get('bbox', function() {
      var a, b, b2ac, bbox, c, cp1x, cp1y, cp2x, cp2y, cx, cy, f, i, p0, p1, p2, p3, p3x, p3y, qp1x, qp1y, t, t1, t2, x, y, _j, _k, _len1, _ref1, _ref2, _ref3, _ref4;
      if (this._bbox) {
        return this._bbox;
      }
      bbox = new BBox;
      cx = cy = 0;
      f = function(t) {
        return Math.pow(1 - t, 3) * p0[i] + 3 * Math.pow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * Math.pow(t, 2) * p2[i] + Math.pow(t, 3) * p3[i];
      };
      _ref1 = this.commands;
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        c = _ref1[_j];
        switch (c.command) {
          case 'moveTo':
          case 'lineTo':
            _ref2 = c.args, x = _ref2[0], y = _ref2[1];
            bbox.addPoint(x, y);
            cx = x;
            cy = y;
            break;
          case 'quadraticCurveTo':
          case 'bezierCurveTo':
            if (c.command === 'quadraticCurveTo') {
              _ref3 = c.args, qp1x = _ref3[0], qp1y = _ref3[1], p3x = _ref3[2], p3y = _ref3[3];
              cp1x = cx + 2 / 3 * (qp1x - cx);
              cp1y = cy + 2 / 3 * (qp1y - cy);
              cp2x = p3x + 2 / 3 * (qp1x - p3x);
              cp2y = p3y + 2 / 3 * (qp1y - p3y);
            } else {
              _ref4 = c.args, cp1x = _ref4[0], cp1y = _ref4[1], cp2x = _ref4[2], cp2y = _ref4[3], p3x = _ref4[4], p3y = _ref4[5];
            }
            bbox.addPoint(p3x, p3y);
            p0 = [cx, cy];
            p1 = [cp1x, cp1y];
            p2 = [cp2x, cp2y];
            p3 = [p3x, p3y];
            for (i = _k = 0; _k <= 1; i = ++_k) {
              b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];
              a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];
              c = 3 * p1[i] - 3 * p0[i];
              if (a === 0) {
                if (b === 0) {
                  continue;
                }
                t = -c / b;
                if (0 < t && t < 1) {
                  if (i === 0) {
                    bbox.addPoint(f(t), bbox.maxY);
                  }
                  if (i === 1) {
                    bbox.addPoint(bbox.maxX, f(t));
                  }
                }
                continue;
              }
              b2ac = Math.pow(b, 2) - 4 * c * a;
              if (b2ac < 0) {
                continue;
              }
              t1 = (-b + Math.sqrt(b2ac)) / (2 * a);
              if (0 < t1 && t1 < 1) {
                if (i === 0) {
                  bbox.addPoint(f(t1), bbox.maxY);
                }
                if (i === 1) {
                  bbox.addPoint(bbox.maxX, f(t1));
                }
              }
              t2 = (-b - Math.sqrt(b2ac)) / (2 * a);
              if (0 < t2 && t2 < 1) {
                if (i === 0) {
                  bbox.addPoint(f(t2), bbox.maxY);
                }
                if (i === 1) {
                  bbox.addPoint(bbox.maxX, f(t2));
                }
              }
            }
            cx = p3x;
            cy = p3y;
        }
      }
      return this._bbox = bbox.toArray();
    });

    return Path;

  })();

  module.exports = Path;

}).call(this);

},{}],148:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var SBIXGlyph, TTFGlyph, r,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  TTFGlyph = require('./TTFGlyph');

  r = require('restructure');

  SBIXGlyph = (function(_super) {
    var SBIXImage;

    __extends(SBIXGlyph, _super);

    function SBIXGlyph() {
      return SBIXGlyph.__super__.constructor.apply(this, arguments);
    }

    SBIXImage = new r.Struct({
      originX: r.uint16,
      originY: r.uint16,
      type: new r.String(4),
      data: new r.Buffer(function() {
        return this.parent.buflen - this._currentOffset;
      })
    });

    SBIXGlyph.prototype.getImageForSize = function(size) {
      var end, offsets, start, table, _i, _len, _ref;
      _ref = this._font.sbix.imageTables;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        table = _ref[_i];
        if (table.ppem >= size) {
          break;
        }
      }
      offsets = table.imageOffsets;
      start = offsets[this.id];
      end = offsets[this.id + 1];
      if (start === end) {
        return null;
      }
      this._font.stream.pos = start;
      return SBIXImage.decode(this._font.stream, {
        buflen: end - start
      });
    };

    SBIXGlyph.prototype.render = function(ctx, size) {
      var img, scale;
      img = this.getImageForSize(size);
      if (img != null) {
        scale = 1 / this._font.head.unitsPerEm * size;
        ctx.image(img.data, {
          height: size,
          x: img.originX,
          y: (this.bbox[1] - img.originY) * scale
        });
      }
      if (this._font.sbix.flags.renderOutlines) {
        return SBIXGlyph.__super__.render.apply(this, arguments);
      }
    };

    return SBIXGlyph;

  })(TTFGlyph);

  module.exports = SBIXGlyph;

}).call(this);

},{"./TTFGlyph":149,"restructure":89}],149:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var Glyph, Path, TTFGlyph, r,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Glyph = require('./Glyph');

  Path = require('./Path');

  r = require('restructure');

  TTFGlyph = (function(_super) {
    var ARG_1_AND_2_ARE_WORDS, Component, GlyfHeader, MORE_COMPONENTS, ON_CURVE, Point, REPEAT, SAME_X, SAME_Y, WE_HAVE_AN_X_AND_Y_SCALE, WE_HAVE_A_SCALE, WE_HAVE_A_TWO_BY_TWO, WE_HAVE_INSTRUCTIONS, X_SHORT_VECTOR, Y_SHORT_VECTOR, parseGlyphCoord;

    __extends(TTFGlyph, _super);

    function TTFGlyph() {
      return TTFGlyph.__super__.constructor.apply(this, arguments);
    }

    GlyfHeader = new r.Struct({
      numberOfContours: r.int16,
      xMin: r.int16,
      yMin: r.int16,
      xMax: r.int16,
      yMax: r.int16
    });

    ON_CURVE = 1 << 0;

    X_SHORT_VECTOR = 1 << 1;

    Y_SHORT_VECTOR = 1 << 2;

    REPEAT = 1 << 3;

    SAME_X = 1 << 4;

    SAME_Y = 1 << 5;

    ARG_1_AND_2_ARE_WORDS = 1 << 0;

    WE_HAVE_A_SCALE = 1 << 3;

    MORE_COMPONENTS = 1 << 5;

    WE_HAVE_AN_X_AND_Y_SCALE = 1 << 6;

    WE_HAVE_A_TWO_BY_TWO = 1 << 7;

    WE_HAVE_INSTRUCTIONS = 1 << 8;

    Point = (function() {
      function Point(onCurve, endContour, x, y) {
        this.onCurve = onCurve;
        this.endContour = endContour;
        this.x = x != null ? x : 0;
        this.y = y != null ? y : 0;
      }

      return Point;

    })();

    Component = (function() {
      function Component(glyphID, dx, dy) {
        this.glyphID = glyphID;
        this.dx = dx;
        this.dy = dy;
        this.pos = 0;
        this.scale = this.xScale = this.yScale = this.scale01 = this.scale10 = null;
      }

      return Component;

    })();

    TTFGlyph.prototype._getCBox = function() {
      var glyph, stream;
      stream = this._font._getTableStream('glyf');
      stream.pos += this._font.loca.offsets[this.id];
      glyph = GlyfHeader.decode(stream);
      return [glyph.xMin, glyph.yMin, glyph.xMax, -glyph.yMax];
    };

    parseGlyphCoord = function(stream, prev, short, same) {
      var val;
      if (short) {
        val = stream.readUInt8();
        if (!same) {
          val = -val;
        }
        val += prev;
      } else {
        if (same) {
          val = prev;
        } else {
          val = prev + stream.readInt16BE();
        }
      }
      return val;
    };

    TTFGlyph.prototype._decode = function() {
      var glyph, startPos, stream;
      stream = this._font._getTableStream('glyf');
      stream.pos += this._font.loca.offsets[this.id];
      startPos = stream.pos;
      glyph = GlyfHeader.decode(stream);
      if (glyph.numberOfContours > 0) {
        this._decodeSimple(glyph, stream);
      } else if (glyph.numberOfContours < 0) {
        this._decodeComposite(glyph, stream, startPos);
      }
      return glyph;
    };

    TTFGlyph.prototype._decodeSimple = function(glyph, stream) {
      var count, endPtsOfContours, flag, flags, i, instructions, j, numCoords, point, px, py, _i, _j, _k, _l, _len, _len1, _len2;
      glyph.points = [];
      endPtsOfContours = new r.Array(r.uint16, glyph.numberOfContours).decode(stream);
      instructions = new r.Array(r.uint8, r.uint16).decode(stream);
      flags = [];
      numCoords = endPtsOfContours[endPtsOfContours.length - 1] + 1;
      while (flags.length < numCoords) {
        flag = stream.readUInt8();
        flags.push(flag);
        if (flag & REPEAT) {
          count = stream.readUInt8();
          for (j = _i = 0; _i < count; j = _i += 1) {
            flags.push(flag);
          }
        }
      }
      for (i = _j = 0, _len = flags.length; _j < _len; i = ++_j) {
        flag = flags[i];
        point = new Point(!!(flag & ON_CURVE), endPtsOfContours.indexOf(i) >= 0, 0, 0);
        glyph.points.push(point);
      }
      px = 0;
      for (i = _k = 0, _len1 = flags.length; _k < _len1; i = ++_k) {
        flag = flags[i];
        glyph.points[i].x = px = parseGlyphCoord(stream, px, flag & X_SHORT_VECTOR, flag & SAME_X);
      }
      py = 0;
      for (i = _l = 0, _len2 = flags.length; _l < _len2; i = ++_l) {
        flag = flags[i];
        glyph.points[i].y = py = parseGlyphCoord(stream, py, flag & Y_SHORT_VECTOR, flag & SAME_Y);
      }
    };

    TTFGlyph.prototype._decodeComposite = function(glyph, stream, offset) {
      var component, dx, dy, flags, gPos, glyphID, haveInstructions;
      if (offset == null) {
        offset = 0;
      }
      glyph.components = [];
      haveInstructions = false;
      flags = MORE_COMPONENTS;
      while (flags & MORE_COMPONENTS) {
        flags = stream.readUInt16BE();
        gPos = stream.pos - offset;
        glyphID = stream.readUInt16BE();
        haveInstructions || (haveInstructions = (flags & WE_HAVE_INSTRUCTIONS) !== 0);
        if (flags & ARG_1_AND_2_ARE_WORDS) {
          dx = stream.readInt16BE();
          dy = stream.readInt16BE();
        } else {
          dx = stream.readInt8();
          dy = stream.readInt8();
        }
        component = new Component(glyphID, dx, dy);
        component.pos = gPos;
        component.scaleX = component.scaleY = 1;
        component.scale01 = component.scale10 = 0;
        if (flags & WE_HAVE_A_SCALE) {
          component.scaleX = component.scaleY = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;
        } else if (flags & WE_HAVE_AN_X_AND_Y_SCALE) {
          component.scaleX = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;
          component.scaleY = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;
        } else if (flags & WE_HAVE_A_TWO_BY_TWO) {
          component.scaleX = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;
          component.scale01 = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;
          component.scale10 = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;
          component.scaleY = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;
        }
        glyph.components.push(component);
      }
      return haveInstructions;
    };

    TTFGlyph.prototype._getContours = function() {
      var component, contours, cur, glyph, point, points, _i, _j, _k, _len, _len1, _len2, _ref, _ref1;
      glyph = this._decode();
      if (glyph.numberOfContours < 0) {
        points = [];
        _ref = glyph.components;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          component = _ref[_i];
          glyph = this._font.getGlyph(component.glyphID)._decode();
          _ref1 = glyph.points;
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            point = _ref1[_j];
            points.push(new Point(point.onCurve, point.endContour, point.x + component.dx, point.y + component.dy));
          }
        }
      } else {
        points = glyph.points;
      }
      contours = [];
      cur = [];
      for (_k = 0, _len2 = points.length; _k < _len2; _k++) {
        point = points[_k];
        cur.push(point);
        if (point.endContour) {
          contours.push(cur);
          cur = [];
        }
      }
      return contours;
    };

    TTFGlyph.prototype._getPath = function() {
      var contour, contours, curvePt, firstPt, j, lastPt, midX, midY, path, prevPt, pt, start, _i, _j, _len, _ref;
      contours = this._getContours();
      path = new Path;
      for (_i = 0, _len = contours.length; _i < _len; _i++) {
        contour = contours[_i];
        firstPt = contour[0];
        lastPt = contour[contour.length - 1];
        start = 0;
        if (firstPt.onCurve) {
          curvePt = null;
          start = 1;
        } else {
          if (lastPt.onCurve) {
            firstPt = lastPt;
          } else {
            firstPt = new Point(false, false, (firstPt.x + lastPt.x) / 2, (firstPt.y + lastPt.y) / 2);
          }
          curvePt = firstPt;
        }
        path.moveTo(firstPt.x, -firstPt.y);
        for (j = _j = start, _ref = contour.length; _j < _ref; j = _j += 1) {
          pt = contour[j];
          prevPt = j === 0 ? firstPt : contour[j - 1];
          if (prevPt.onCurve && pt.onCurve) {
            path.lineTo(pt.x, -pt.y);
          } else if (prevPt.onCurve && !pt.onCurve) {
            curvePt = pt;
          } else if (!prevPt.onCurve && !pt.onCurve) {
            midX = (prevPt.x + pt.x) / 2;
            midY = (prevPt.y + pt.y) / 2;
            path.quadraticCurveTo(prevPt.x, -prevPt.y, midX, -midY);
            curvePt = pt;
          } else if (!prevPt.onCurve && pt.onCurve) {
            path.quadraticCurveTo(curvePt.x, -curvePt.y, pt.x, -pt.y);
            curvePt = null;
          } else {
            throw new Error("Unknown TTF path state");
          }
        }
        if (firstPt !== lastPt) {
          if (curvePt) {
            path.quadraticCurveTo(curvePt.x, -curvePt.y, firstPt.x, -firstPt.y);
          } else {
            path.lineTo(firstPt.x, -firstPt.y);
          }
        }
      }
      path.closePath();
      return path;
    };

    return TTFGlyph;

  })(Glyph);

  module.exports = TTFGlyph;

}).call(this);

},{"./Glyph":146,"./Path":147,"restructure":89}],150:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var TTFGlyph, WOFF2Glyph,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  TTFGlyph = require('./TTFGlyph');

  WOFF2Glyph = (function(_super) {
    __extends(WOFF2Glyph, _super);

    function WOFF2Glyph() {
      return WOFF2Glyph.__super__.constructor.apply(this, arguments);
    }

    WOFF2Glyph.prototype._decode = function() {
      return this._font._transformedGlyphs[this.id];
    };

    WOFF2Glyph.prototype._getCBox = function() {
      return this.path.bbox;
    };

    return WOFF2Glyph;

  })(TTFGlyph);

  module.exports = WOFF2Glyph;

}).call(this);

},{"./TTFGlyph":149}],151:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var GPOSProcessor, OpenTypeProcessor,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  OpenTypeProcessor = require('./OpenTypeProcessor');

  GPOSProcessor = (function(_super) {
    __extends(GPOSProcessor, _super);

    function GPOSProcessor() {
      return GPOSProcessor.__super__.constructor.apply(this, arguments);
    }

    GPOSProcessor.prototype.applyPositionValue = function(sequenceIndex, value) {
      if (value.xAdvance != null) {
        return this.advances[this.glyphIndex + sequenceIndex] += value.xAdvance * this.font.scale;
      }
    };

    GPOSProcessor.prototype.applyLookup = function(lookupType, table) {
      var class1, class2, index, pair, set, _i, _len, _results;
      switch (lookupType) {
        case 1:
          index = this.coverageIndex(table.coverage);
          if (index === -1) {
            return;
          }
          switch (table.version) {
            case 1:
              return this.applyPositionValue(0, table.value);
            case 2:
              return this.applyPositionValue(0, table.values[index]);
          }
          break;
        case 2:
          if (!(this.glyphIndex + 1 < this.glyphs.length)) {
            return;
          }
          index = this.coverageIndex(table.coverage);
          if (index === -1) {
            return;
          }
          switch (table.version) {
            case 1:
              set = table.pairSets[index];
              _results = [];
              for (_i = 0, _len = set.length; _i < _len; _i++) {
                pair = set[_i];
                if (!(pair.secondGlyph === this.glyphs[this.glyphIndex + 1].id)) {
                  continue;
                }
                this.applyPositionValue(0, pair.value1);
                this.applyPositionValue(1, pair.value2);
                break;
              }
              return _results;
              break;
            case 2:
              class1 = this.getClassID(0, table.classDef1);
              class2 = this.getClassID(1, table.classDef2);
              if (class1 === -1 || class2 === -1) {
                return;
              }
              pair = table.classRecords[class1][class2];
              this.applyPositionValue(0, pair.value1);
              return this.applyPositionValue(1, pair.value2);
          }
          break;
        default:
          throw new Error("Unsupported GPOS table!");
      }
    };

    return GPOSProcessor;

  })(OpenTypeProcessor);

  module.exports = GPOSProcessor;

}).call(this);

},{"./OpenTypeProcessor":153}],152:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var GSUBProcessor, OpenTypeProcessor,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __slice = [].slice;

  OpenTypeProcessor = require('./OpenTypeProcessor');

  GSUBProcessor = (function(_super) {
    __extends(GSUBProcessor, _super);

    function GSUBProcessor() {
      return GSUBProcessor.__super__.constructor.apply(this, arguments);
    }

    GSUBProcessor.prototype.applyLookup = function(lookupType, table) {
      var characters, glyph, index, ligature, rule, rules, set, _i, _j, _k, _l, _len, _len1, _len2, _len3, _len4, _len5, _m, _n, _ref, _ref1, _results, _results1, _results2, _results3, _results4;
      switch (lookupType) {
        case 1:
          index = this.coverageIndex(table.coverage);
          if (index === -1) {
            return;
          }
          glyph = this.glyphs[this.glyphIndex];
          switch (table.version) {
            case 1:
              return this.glyphs[this.glyphIndex] = this.font.getGlyph(glyph.id + table.deltaGlyphID, glyph.codePoints);
            case 2:
              return this.glyphs[this.glyphIndex] = this.font.getGlyph(table.substitute[index], glyph.codePoints);
          }
          break;
        case 2:
          index = this.coverageIndex(table.coverage);
          if (index !== -1) {
            return (_ref = this.glyphs).splice.apply(_ref, [this.glyphIndex, 1].concat(__slice.call(table.sequence[index])));
          }
          break;
        case 3:
          index = this.coverageIndex(table.coverage);
          if (index !== -1) {
            return this.glyphs[this.glyphIndex] = this.font.getGlyph(table.alternateSet[USER_INDEX], this.glyphs[this.glyphIndex].codePoints);
          }
          break;
        case 4:
          index = this.coverageIndex(table.coverage);
          if (index === -1) {
            return;
          }
          set = table.ligatureSets[index];
          _results = [];
          for (_i = 0, _len = set.length; _i < _len; _i++) {
            ligature = set[_i];
            if (!(this.sequenceMatches(1, ligature.components))) {
              continue;
            }
            characters = [];
            _ref1 = this.glyphs.slice(this.glyphIndex, this.glyphIndex + ligature.compCount);
            for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
              glyph = _ref1[_j];
              characters.push.apply(characters, glyph.codePoints);
            }
            glyph = this.font.getGlyph(ligature.glyph, characters);
            this.glyphs.splice(this.glyphIndex, ligature.compCount, glyph);
            break;
          }
          return _results;
          break;
        case 5:
          switch (table.version) {
            case 1:
              index = this.coverageIndex(table.coverage);
              if (index === -1) {
                return;
              }
              set = table.subRuleSets[index];
              _results1 = [];
              for (_k = 0, _len2 = set.length; _k < _len2; _k++) {
                rule = set[_k];
                if (!(this.sequenceMatches(1, set.input))) {
                  continue;
                }
                this.applyLookupList(rule.lookupRecords);
                break;
              }
              return _results1;
              break;
            case 2:
              if (this.coverageIndex(table.coverage) === -1) {
                return;
              }
              index = this.getClassID(0, table.classDef);
              if (index === -1) {
                return;
              }
              set = table.subClassSet[index];
              _results2 = [];
              for (_l = 0, _len3 = set.length; _l < _len3; _l++) {
                rule = set[_l];
                if (!(this.classSequenceMatches(1, rule.classes, table.classDef))) {
                  continue;
                }
                this.applyLookupList(rule.lookupRecords);
                break;
              }
              return _results2;
              break;
            case 3:
              if (this.coverageSequenceMatches(0, table.coverages)) {
                return this.applyLookupList(table.substLookupRecord);
              }
          }
          break;
        case 6:
          switch (table.version) {
            case 1:
              index = this.coverageIndex(table.coverage);
              if (index === -1) {
                return;
              }
              set = table.chainSubRuleSets[index];
              _results3 = [];
              for (_m = 0, _len4 = set.length; _m < _len4; _m++) {
                rule = set[_m];
                if (this.sequenceMatches(-table.backtrack.length, table.backtrack) && this.sequenceMatches(1, table.input) && this.sequenceMatches(1 + table.input.length, table.lookahead)) {
                  this.applyLookupList(rule.lookupRecords);
                  break;
                } else {
                  _results3.push(void 0);
                }
              }
              return _results3;
              break;
            case 2:
              if (this.coverageIndex(table.coverage) === -1) {
                return;
              }
              index = getClassID(glyphs[glyphIndex], table.inputClassDef);
              if (index === -1) {
                return;
              }
              rules = table.chainSubClassSet[index];
              _results4 = [];
              for (_n = 0, _len5 = rules.length; _n < _len5; _n++) {
                rule = rules[_n];
                if (this.classSequenceMatches(-rule.backtrack.length, rule.backtrack, table.backtrackClassDef) && this.classSequenceMatches(1, rule.input, table.inputClassDef) && this.classSequenceMatches(1 + rule.input.length, rule.lookahead, table.lookaheadClassDef)) {
                  this.applyLookupList(rule.lookupRecords);
                  break;
                } else {
                  _results4.push(void 0);
                }
              }
              return _results4;
              break;
            case 3:
              if (this.coverageSequenceMatches(-table.backtrackGlyphCount, table.backtrackCoverage) && this.coverageSequenceMatches(0, table.inputCoverage) && this.coverageSequenceMatches(table.inputGlyphCount, table.lookaheadCoverage)) {
                return this.applyLookupList(table.substLookupRecord);
              }
          }
          break;
        case 7:
          return this.applyLookup(table.lookupType, table.extension);
        default:
          throw new Error("GSUB lookupType " + lookupType + " is not supported");
      }
    };

    return GSUBProcessor;

  })(OpenTypeProcessor);

  module.exports = GSUBProcessor;

}).call(this);

},{"./OpenTypeProcessor":153}],153:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var OpenTypeProcessor,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  OpenTypeProcessor = (function() {
    function OpenTypeProcessor(font, table) {
      var featureIndex, record, _i, _len, _ref;
      this.font = font;
      this.table = table;
      this.script = null;
      this.scriptTag = null;
      this.language = null;
      this.languageTag = null;
      this.features = {};
      this.lookups = {};
      this.selectScript();
      this.features = {};
      _ref = this.language.featureIndexes;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        featureIndex = _ref[_i];
        record = this.table.featureList[featureIndex];
        this.features[record.tag] = record.feature;
      }
      this.glyphIndex = 0;
      this.glyphs = [];
      this.advances = [];
    }

    OpenTypeProcessor.prototype.findScript = function(script) {
      var entry, _i, _len, _ref;
      _ref = this.table.scriptList;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        entry = _ref[_i];
        if (entry.tag === script) {
          return entry;
        }
      }
      return null;
    };

    OpenTypeProcessor.prototype.selectScript = function(script, language) {
      var entry, lang, _i, _len, _ref;
      if ((this.script == null) || script !== this.scriptTag) {
        if (script != null) {
          entry = this.findScript(script);
        }
        if (entry == null) {
          entry = this.findScript('DFLT');
        }
        if (entry == null) {
          entry = this.findScript('dflt');
        }
        if (entry == null) {
          entry = this.findScript('latn');
        }
        if (entry == null) {
          return;
        }
        this.scriptTag = entry.tag;
        this.script = entry.script;
      }
      if ((language != null) && language !== this.langugeTag) {
        _ref = this.script.langSysRecords;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          lang = _ref[_i];
          if (!(lang.tag === language)) {
            continue;
          }
          this.language = lang.langSys;
          break;
        }
      }
      return this.language != null ? this.language : this.language = this.script.defaultLangSys;
    };

    OpenTypeProcessor.prototype.lookupsForFeatures = function(userFeatures, exclude) {
      var feature, lookupIndex, lookups, tag, _i, _j, _len, _len1, _ref;
      if (userFeatures == null) {
        userFeatures = [];
      }
      lookups = [];
      for (_i = 0, _len = userFeatures.length; _i < _len; _i++) {
        tag = userFeatures[_i];
        feature = this.features[tag];
        if (!feature) {
          continue;
        }
        _ref = feature.lookupListIndexes;
        for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
          lookupIndex = _ref[_j];
          if (exclude && __indexOf.call(exclude, lookupIndex) >= 0) {
            continue;
          }
          lookups.push(this.table.lookupList[lookupIndex]);
        }
      }
      return lookups;
    };

    OpenTypeProcessor.prototype.applyFeatures = function(userFeatures, glyphs, advances) {
      var lookups;
      lookups = this.lookupsForFeatures(userFeatures);
      return this.applyLookups(lookups, glyphs, advances);
    };

    OpenTypeProcessor.prototype.applyLookups = function(lookups, glyphs, advances) {
      var lookup, table, _i, _j, _len, _len1, _ref;
      this.glyphs = glyphs;
      this.advances = advances;
      this.glyphIndex = 0;
      while (this.glyphIndex < this.glyphs.length) {
        for (_i = 0, _len = lookups.length; _i < _len; _i++) {
          lookup = lookups[_i];
          _ref = lookup.subTables;
          for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
            table = _ref[_j];
            this.applyLookup(lookup.lookupType, table);
          }
        }
        this.glyphIndex++;
      }
    };

    OpenTypeProcessor.prototype.applyLookup = function(lookup, table) {
      throw new Error("applyLookup must be implemented by subclasses");
    };

    OpenTypeProcessor.prototype.applyLookupList = function(lookupRecords) {
      var glyphIndex, lookup, lookupRecord, table, _i, _j, _len, _len1, _ref;
      glyphIndex = this.glyphIndex;
      for (_i = 0, _len = lookupRecords.length; _i < _len; _i++) {
        lookupRecord = lookupRecords[_i];
        this.glyphIndex = glyphIndex + lookupRecord.sequenceIndex;
        lookup = this.table.lookupList[lookupRecord.lookupListIndex];
        _ref = lookup.subTables;
        for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
          table = _ref[_j];
          this.applyLookup(lookup.lookupType, table);
        }
      }
      this.glyphIndex = glyphIndex;
    };

    OpenTypeProcessor.prototype.coverageIndex = function(coverage, glyph) {
      var i, range, _i, _len, _ref;
      if (glyph == null) {
        glyph = this.glyphs[this.glyphIndex].id;
      }
      switch (coverage.version) {
        case 1:
          return coverage.glyphs.indexOf(glyph);
        case 2:
          _ref = coverage.rangeRecords;
          for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
            range = _ref[i];
            if ((range.start <= glyph && glyph <= range.end)) {
              return range.startCoverageIndex + glyph - range.start;
            }
          }
      }
      return -1;
    };

    OpenTypeProcessor.prototype.sequenceMatches = function(sequenceIndex, sequence) {
      var component, glyphIndex, i, _i, _len;
      glyphIndex = this.glyphIndex + sequenceIndex;
      if (glyphIndex < 0 || glyphIndex + sequence.length > this.glyphs.length) {
        return false;
      }
      for (i = _i = 0, _len = sequence.length; _i < _len; i = ++_i) {
        component = sequence[i];
        if (component !== this.glyphs[glyphIndex + i].id) {
          return false;
        }
      }
      return true;
    };

    OpenTypeProcessor.prototype.coverageSequenceMatches = function(sequenceIndex, sequence) {
      var coverage, glyphIndex, i, _i, _len;
      glyphIndex = this.glyphIndex + sequenceIndex;
      if (glyphIndex < 0 || glyphIndex + sequence.length > this.glyphs.length) {
        return false;
      }
      for (i = _i = 0, _len = sequence.length; _i < _len; i = ++_i) {
        coverage = sequence[i];
        if (this.coverageIndex(coverage, this.glyphs[glyphIndex + i].id) === -1) {
          return false;
        }
      }
      return true;
    };

    OpenTypeProcessor.prototype.getClassID = function(sequenceIndex, classDef) {
      var classID, glyph, glyphID, range, _i, _j, _len, _len1, _ref, _ref1;
      glyph = this.glyphs[this.glyphIndex + sequenceIndex].id;
      switch (classDef.version) {
        case 1:
          glyphID = classDef.startGlyph;
          _ref = classDef.classValueArray;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            classID = _ref[_i];
            if (glyph === glyphID++) {
              return classID;
            }
          }
          break;
        case 2:
          _ref1 = classDef.classRangeRecord;
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            range = _ref1[_j];
            if ((range.start <= glyph && glyph <= range.end)) {
              return range["class"];
            }
          }
      }
      return -1;
    };

    OpenTypeProcessor.prototype.classSequenceMatches = function(sequenceIndex, sequence, classDef) {
      var classID, glyphIndex, i, _i, _len;
      glyphIndex = this.glyphIndex + sequenceIndex;
      if (glyphIndex + sequence.length > this.glyphs.length) {
        return false;
      }
      for (i = _i = 0, _len = sequence.length; _i < _len; i = ++_i) {
        classID = sequence[i];
        if (classID !== this.getClassID(i, classDef)) {
          return false;
        }
      }
      return true;
    };

    return OpenTypeProcessor;

  })();

  module.exports = OpenTypeProcessor;

}).call(this);

},{}],154:[function(require,module,exports){
(function (Buffer){
// Generated by CoffeeScript 1.8.0
(function() {
  var CFFPrivateDict, CFFSubset, CFFTop, Subset, standardStrings, _,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  _ = require('lodash');

  Subset = require('./Subset');

  CFFTop = require('../cff/CFFTop');

  CFFPrivateDict = require('../cff/CFFPrivateDict');

  standardStrings = require('../cff/CFFStandardStrings');

  CFFSubset = (function(_super) {
    __extends(CFFSubset, _super);

    function CFFSubset() {
      CFFSubset.__super__.constructor.apply(this, arguments);
      this.cff = this.font['CFF '];
      if (!this.cff) {
        throw new Error('Not a CFF Font');
      }
    }

    CFFSubset.prototype.subsetCharstrings = function() {
      var gid, glyph, gsubrs, path, subr, _i, _len, _ref;
      this.charstrings = [];
      gsubrs = {};
      _ref = this.glyphs;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        gid = _ref[_i];
        this.charstrings.push(this.cff.getCharString(gid));
        glyph = this.font.getGlyph(gid);
        path = glyph.path;
        for (subr in glyph._usedGsubrs) {
          gsubrs[subr] = true;
        }
      }
      return this.gsubrs = this.subsetSubrs(this.cff.globalSubrIndex, gsubrs);
    };

    CFFSubset.prototype.subsetSubrs = function(subrs, used) {
      var i, res, subr, _i, _len;
      res = [];
      for (i = _i = 0, _len = subrs.length; _i < _len; i = ++_i) {
        subr = subrs[i];
        if (used[i]) {
          this.cff.stream.pos = subr.offset;
          res.push(this.cff.stream.readBuffer(subr.length));
        } else {
          res.push(new Buffer([11]));
        }
      }
      return res;
    };

    CFFSubset.prototype.subsetFontdict = function(topDict) {
      var dict, fd, gid, glyph, i, path, subr, used_fds, used_subrs, _i, _j, _len, _len1, _ref, _ref1, _ref2;
      topDict.FDArray = [];
      topDict.FDSelect = {
        version: 0,
        fds: []
      };
      used_fds = {};
      used_subrs = [];
      _ref = this.glyphs;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        gid = _ref[_i];
        fd = this.cff.fdForGlyph(gid);
        if (fd == null) {
          continue;
        }
        if (!used_fds[fd]) {
          topDict.FDArray.push(_.cloneDeep(this.cff.topDict.FDArray[fd]));
          used_subrs.push({});
        }
        used_fds[fd] = true;
        topDict.FDSelect.fds.push(topDict.FDArray.length - 1);
        glyph = this.font.getGlyph(gid);
        path = glyph.path;
        for (subr in glyph._usedSubrs) {
          used_subrs[used_subrs.length - 1][subr] = true;
        }
      }
      _ref1 = topDict.FDArray;
      for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {
        dict = _ref1[i];
        delete dict.FontName;
        if ((_ref2 = dict.Private) != null ? _ref2.Subrs : void 0) {
          dict.Private.Subrs = this.subsetSubrs(dict.Private.Subrs, used_subrs[i]);
        }
      }
    };

    CFFSubset.prototype.createCIDFontdict = function(topDict) {
      var gid, glyph, path, privateDict, subr, used_subrs, _i, _len, _ref;
      used_subrs = {};
      _ref = this.glyphs;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        gid = _ref[_i];
        glyph = this.font.getGlyph(gid);
        path = glyph.path;
        for (subr in glyph._usedSubrs) {
          used_subrs[subr] = true;
        }
      }
      privateDict = _.cloneDeep(this.cff.topDict.Private);
      privateDict.Subrs = this.subsetSubrs(this.cff.topDict.Private.Subrs, used_subrs);
      topDict.FDArray = [
        {
          Private: privateDict
        }
      ];
      return topDict.FDSelect = {
        version: 3,
        nRanges: 1,
        ranges: [
          {
            first: 0,
            fd: 0
          }
        ],
        sentinel: this.charstrings.length
      };
    };

    CFFSubset.prototype.addString = function(string) {
      if (!string) {
        return null;
      }
      if (this.strings == null) {
        this.strings = [];
      }
      this.strings.push(string);
      return standardStrings.length + this.strings.length - 1;
    };

    CFFSubset.prototype.encode = function(stream) {
      var charset, key, top, topDict, _i, _len, _ref;
      this.subsetCharstrings();
      charset = {
        version: this.charstrings.length > 255 ? 2 : 1,
        ranges: [
          {
            first: 1,
            nLeft: this.charstrings.length - 2
          }
        ]
      };
      topDict = _.cloneDeep(this.cff.topDict);
      topDict.Private = null;
      topDict.charset = charset;
      topDict.Encoding = null;
      topDict.CharStrings = this.charstrings;
      _ref = ['version', 'Notice', 'Copyright', 'FullName', 'FamilyName', 'Weight', 'PostScript', 'BaseFontName', 'FontName'];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        key = _ref[_i];
        topDict[key] = this.addString(this.cff.string(topDict[key]));
      }
      topDict.ROS = [this.addString('Adobe'), this.addString('Identity'), 0];
      topDict.CIDCount = this.charstrings.length;
      if (this.cff.isCIDFont) {
        this.subsetFontdict(topDict);
      } else {
        this.createCIDFontdict(topDict);
      }
      top = {
        header: this.cff.header,
        nameIndex: [this.cff.postscriptName],
        topDictIndex: [topDict],
        stringIndex: this.strings,
        globalSubrIndex: this.gsubrs
      };
      return CFFTop.encode(stream, top);
    };

    return CFFSubset;

  })(Subset);

  module.exports = CFFSubset;

}).call(this);

}).call(this,require("buffer").Buffer)
},{"../cff/CFFPrivateDict":141,"../cff/CFFStandardStrings":142,"../cff/CFFTop":143,"./Subset":155,"buffer":17,"lodash":72}],155:[function(require,module,exports){
(function (process){
// Generated by CoffeeScript 1.8.0
(function() {
  var Subset, r;

  r = require('restructure');

  Subset = (function() {
    function Subset(font) {
      this.font = font;
      this.glyphs = [];
      this.mapping = {};
      this.includeGlyph(0);
    }

    Subset.prototype.includeGlyph = function(glyph) {
      if (typeof glyph === 'object') {
        glyph = glyph.id;
      }
      if (this.mapping[glyph] == null) {
        this.glyphs.push(glyph);
        this.mapping[glyph] = this.glyphs.length - 1;
      }
      return this.mapping[glyph];
    };

    Subset.prototype.encodeStream = function() {
      var s;
      s = new r.EncodeStream;
      process.nextTick((function(_this) {
        return function() {
          _this.encode(s);
          return s.end();
        };
      })(this));
      return s;
    };

    return Subset;

  })();

  module.exports = Subset;

}).call(this);

}).call(this,require('_process'))
},{"_process":25,"restructure":89}],156:[function(require,module,exports){
(function (Buffer){
// Generated by CoffeeScript 1.8.0
(function() {
  var Directory, Subset, TTFSubset, Tables, _,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  _ = require('lodash');

  Subset = require('./Subset');

  Directory = require('../tables/Directory');

  Tables = require('../tables');

  TTFSubset = (function(_super) {
    __extends(TTFSubset, _super);

    function TTFSubset() {
      return TTFSubset.__super__.constructor.apply(this, arguments);
    }

    TTFSubset.prototype._addGlyph = function(gid) {
      var buffer, component, curOffset, glyf, nextOffset, stream, _i, _len, _ref;
      glyf = this.font.getGlyph(gid)._decode();
      curOffset = this.font.loca.offsets[gid];
      nextOffset = this.font.loca.offsets[gid + 1];
      stream = this.font._getTableStream('glyf');
      stream.pos += curOffset;
      buffer = stream.readBuffer(nextOffset - curOffset);
      if (glyf.numberOfContours < 0) {
        buffer = new Buffer(buffer);
        _ref = glyf.components;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          component = _ref[_i];
          gid = this.includeGlyph(component.glyphID);
          buffer.writeUInt16BE(gid, component.pos);
        }
      }
      this.glyf.push(buffer);
      this.loca.offsets.push(this.offset);
      if (gid < this.font.hmtx.metrics.length) {
        this.hmtx.metrics.push(this.font.hmtx.metrics[gid]);
      } else {
        this.hmtx.metrics.push({
          advanceWidth: this.font.hmtx.metrics[this.font.hmtx.metrics.length - 1].advanceWidth,
          leftSideBearing: this.font.hmtx.leftSideBearings[gid - this.font.hmtx.metrics.length]
        });
      }
      this.offset += buffer.length;
      return this.glyf.length - 1;
    };

    TTFSubset.prototype.encode = function(stream) {
      var head, hhea, i, maxp;
      this.glyf = [];
      this.offset = 0;
      this.loca = {
        offsets: []
      };
      this.hmtx = {
        metrics: [],
        leftSideBearings: []
      };
      i = 0;
      while (i < this.glyphs.length) {
        this._addGlyph(this.glyphs[i++]);
      }
      maxp = _.cloneDeep(this.font.maxp);
      maxp.numGlyphs = this.glyf.length;
      this.loca.offsets.push(this.offset);
      Tables.loca.preEncode.call(this.loca);
      head = _.cloneDeep(this.font.head);
      head.indexToLocFormat = this.loca.version;
      hhea = _.cloneDeep(this.font.hhea);
      hhea.numberOfMetrics = this.hmtx.metrics.length;
      return Directory.encode(stream, {
        tables: {
          head: head,
          hhea: hhea,
          loca: this.loca,
          maxp: maxp,
          'cvt ': this.font['cvt '],
          prep: this.font.prep,
          glyf: this.glyf,
          hmtx: this.hmtx,
          fpgm: this.font.fpgm
        }
      });
    };

    return TTFSubset;

  })(Subset);

  module.exports = TTFSubset;

}).call(this);

}).call(this,require("buffer").Buffer)
},{"../tables":187,"../tables/Directory":161,"./Subset":155,"buffer":17,"lodash":72}],157:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var Axis, BaseCoord, BaseLangSysRecord, BaseScript, BaseScriptList, BaseScriptRecord, BaseTagList, BaseValues, ClassDef, Coverage, Device, FeatMinMaxRecord, FeatureList, LookupList, MinMax, ScriptList, r, _ref;

  r = require('restructure');

  _ref = require('./opentype'), ScriptList = _ref.ScriptList, FeatureList = _ref.FeatureList, LookupList = _ref.LookupList, Coverage = _ref.Coverage, ClassDef = _ref.ClassDef, Device = _ref.Device;

  BaseCoord = new r.VersionedStruct(r.uint16, {
    1: {
      coordinate: r.int16
    },
    2: {
      coordinate: r.int16,
      referenceGlyph: r.uint16,
      baseCoordPoint: r.uint16
    },
    3: {
      coordinate: r.int16,
      deviceTable: new r.Pointer(r.uint16, Device)
    }
  });

  BaseValues = new r.Struct({
    defaultIndex: r.uint16,
    baseCoordCount: r.uint16,
    baseCoords: new r.Array(new r.Pointer(r.uint16, BaseCoord), 'baseCoordCount')
  });

  FeatMinMaxRecord = new r.Struct({
    tag: new r.String(4),
    minCoord: new r.Pointer(r.uint16, BaseCoord, {
      type: 'parent'
    }),
    maxCoord: new r.Pointer(r.uint16, BaseCoord, {
      type: 'parent'
    })
  });

  MinMax = new r.Struct({
    minCoord: new r.Pointer(r.uint16, BaseCoord),
    maxCoord: new r.Pointer(r.uint16, BaseCoord),
    featMinMaxCount: r.uint16,
    featMinMaxRecords: new r.Array(FeatMinMaxRecord, 'featMinMaxCount')
  });

  BaseLangSysRecord = new r.Struct({
    tag: new r.String(4),
    minMax: new r.Pointer(r.uint16, MinMax, {
      type: 'parent'
    })
  });

  BaseScript = new r.Struct({
    baseValues: new r.Pointer(r.uint16, BaseValues),
    defaultMinMax: new r.Pointer(r.uint16, MinMax),
    baseLangSysCount: r.uint16,
    baseLangSysRecords: new r.Array(BaseLangSysRecord, 'baseLangSysCount')
  });

  BaseScriptRecord = new r.Struct({
    tag: new r.String(4),
    script: new r.Pointer(r.uint16, BaseScript, {
      type: 'parent'
    })
  });

  BaseScriptList = new r.Array(BaseScriptRecord, r.uint16);

  BaseTagList = new r.Array(new r.String(4), r.uint16);

  Axis = new r.Struct({
    baseTagList: new r.Pointer(r.uint16, BaseTagList),
    baseScriptList: new r.Pointer(r.uint16, BaseScriptList)
  });

  module.exports = new r.Struct({
    version: r.uint32,
    horizAxis: new r.Pointer(r.uint16, Axis),
    vertAxis: new r.Pointer(r.uint16, Axis)
  });

}).call(this);

},{"./opentype":195,"restructure":89}],158:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var BaseGlyphRecord, LayerRecord, r;

  r = require('restructure');

  LayerRecord = new r.Struct({
    gid: r.uint16,
    paletteIndex: r.uint16
  });

  BaseGlyphRecord = new r.Struct({
    gid: r.uint16,
    firstLayerIndex: r.uint16,
    numLayers: r.uint16
  });

  module.exports = new r.Struct({
    version: r.uint16,
    numBaseGlyphRecords: r.uint16,
    baseGlyphRecord: new r.Pointer(r.uint32, new r.Array(BaseGlyphRecord, 'numBaseGlyphRecords')),
    layerRecords: new r.Pointer(r.uint32, new r.Array(LayerRecord, 'numLayerRecords')),
    numLayerRecords: r.uint16
  });

}).call(this);

},{"restructure":89}],159:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var ColorRecord, r;

  r = require('restructure');

  ColorRecord = new r.Struct({
    blue: r.uint8,
    green: r.uint8,
    red: r.uint8,
    alpha: r.uint8
  });

  module.exports = new r.Struct({
    version: r.uint16,
    numPaletteEntries: r.uint16,
    numPalettes: r.uint16,
    numColorRecords: r.uint16,
    colorRecords: new r.Pointer(r.uint32, new r.Array(ColorRecord, 'numColorRecords')),
    colorRecordIndices: new r.Array(r.uint16, 'numPalettes')
  });

}).call(this);

},{"restructure":89}],160:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var Signature, SignatureBlock, r;

  r = require('restructure');

  Signature = new r.Struct({
    format: r.uint32,
    length: r.uint32,
    offset: r.uint32
  });

  SignatureBlock = new r.Struct({
    reserved: new r.Reserved(r.uint16, 2),
    cbSignature: r.uint32,
    signature: new r.Buffer('cbSignature')
  });

  module.exports = new r.Struct({
    ulVersion: r.uint32,
    usNumSigs: r.uint16,
    usFlag: r.uint16,
    signatures: new r.Array(Signature, 'usNumSigs'),
    signatureBlocks: new r.Array(SignatureBlock, 'usNumSigs')
  });

}).call(this);

},{"restructure":89}],161:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var Directory, TableEntry, Tables, r;

  r = require('restructure');

  Tables = require('./');

  TableEntry = new r.Struct({
    tag: new r.String(4),
    checkSum: r.uint32,
    offset: new r.Pointer(r.uint32, 'void', {
      type: 'global'
    }),
    length: r.uint32
  });

  Directory = new r.Struct({
    tag: new r.String(4),
    numTables: r.uint16,
    searchRange: r.uint16,
    entrySelector: r.uint16,
    rangeShift: r.uint16,
    tables: new r.Array(TableEntry, 'numTables')
  });

  Directory.process = function() {
    var table, tables, _i, _len, _ref;
    tables = {};
    _ref = this.tables;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      table = _ref[_i];
      tables[table.tag] = table;
    }
    return this.tables = tables;
  };

  Directory.preEncode = function(stream) {
    var table, tables, tag, _ref;
    tables = [];
    _ref = this.tables;
    for (tag in _ref) {
      table = _ref[tag];
      if (table != null) {
        tables.push({
          tag: tag,
          checkSum: 0,
          offset: new r.VoidPointer(Tables[tag], table),
          length: Tables[tag].size(table)
        });
      }
    }
    this.tag = 'true';
    this.numTables = tables.length;
    this.tables = tables;
    this.searchRange = Math.floor(Math.log(this.numTables) / Math.LN2) * 16;
    this.entrySelector = Math.floor(this.searchRange / Math.LN2);
    return this.rangeShift = this.numTables * 16 - this.searchRange;
  };

  module.exports = Directory;

}).call(this);

},{"./":187,"restructure":89}],162:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var BigMetrics, BitAligned, ByteAligned, EBDTComponent, SmallMetrics, r;

  r = require('restructure');

  BigMetrics = new r.Struct({
    height: r.uint8,
    width: r.uint8,
    horiBearingX: r.int8,
    horiBearingY: r.int8,
    horiAdvance: r.uint8,
    vertBearingX: r.int8,
    vertBearingY: r.int8,
    vertAdvance: r.uint8
  });

  exports.BigMetrics = BigMetrics;

  SmallMetrics = new r.Struct({
    height: r.uint8,
    width: r.uint8,
    bearingX: r.int8,
    bearingY: r.int8,
    advance: r.uint8
  });

  exports.SmallMetrics = SmallMetrics;

  EBDTComponent = new r.Struct({
    glyph: r.uint16,
    xOffset: r.int8,
    yOffset: r.int8
  });

  ByteAligned = (function() {
    function ByteAligned() {}

    return ByteAligned;

  })();

  BitAligned = (function() {
    function BitAligned() {}

    return BitAligned;

  })();

  exports.glyph = new r.VersionedStruct('version', {
    1: {
      metrics: SmallMetrics,
      data: ByteAligned
    },
    2: {
      metrics: SmallMetrics,
      data: BitAligned
    },
    5: {
      data: BitAligned
    },
    6: {
      metrics: BigMetrics,
      data: ByteAligned
    },
    7: {
      metrics: BigMetrics,
      data: BitAligned
    },
    8: {
      metrics: SmallMetrics,
      pad: new r.Reserved(r.uint8),
      numComponents: r.uint16,
      components: new r.Array(EBDTComponent, 'numComponents')
    },
    9: {
      metrics: BigMetrics,
      pad: new r.Reserved(r.uint8),
      numComponents: r.uint16,
      components: new r.Array(EBDTComponent, 'numComponents')
    },
    17: {
      metrics: SmallMetrics,
      dataLen: r.uint32,
      data: new r.Buffer('dataLen')
    },
    18: {
      metrics: BigMetrics,
      dataLen: r.uint32,
      data: new r.Buffer('dataLen')
    },
    19: {
      dataLen: r.uint32,
      data: new r.Buffer('dataLen')
    }
  });

}).call(this);

},{"restructure":89}],163:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var BitmapSizeTable, CodeOffsetPair, EBDT, IndexSubtable, IndexSubtableArray, SBitLineMetrics, r;

  r = require('restructure');

  EBDT = require('./EBDT');

  SBitLineMetrics = new r.Struct({
    ascender: r.int8,
    descender: r.int8,
    widthMax: r.uint8,
    caretSlopeNumerator: r.int8,
    caretSlopeDenominator: r.int8,
    caretOffset: r.int8,
    minOriginSB: r.int8,
    minAdvanceSB: r.int8,
    maxBeforeBL: r.int8,
    minAfterBL: r.int8,
    pad: new r.Reserved(r.int8, 2)
  });

  CodeOffsetPair = new r.Struct({
    glyphCode: r.uint16,
    offset: r.uint16
  });

  IndexSubtable = new r.VersionedStruct(r.uint16, {
    header: {
      imageFormat: r.uint16,
      imageDataOffset: r.uint32
    },
    1: {
      offsetArray: new r.Array(r.uint32, function() {
        return this.parent.lastGlyphIndex - this.parent.firstGlyphIndex + 1;
      })
    },
    2: {
      imageSize: r.uint32,
      bigMetrics: EBDT.BigMetrics
    },
    3: {
      offsetArray: new r.Array(r.uint16, function() {
        return this.parent.lastGlyphIndex - this.parent.firstGlyphIndex + 1;
      })
    },
    4: {
      numGlyphs: r.uint32,
      glyphArray: new r.Array(CodeOffsetPair, function() {
        return this.numGlyphs + 1;
      })
    },
    5: {
      imageSize: r.uint32,
      bigMetrics: EBDT.BigMetrics,
      numGlyphs: r.uint32,
      glyphCodeArray: new r.Array(r.uint16, 'numGlyphs')
    }
  });

  IndexSubtableArray = new r.Struct({
    firstGlyphIndex: r.uint16,
    lastGlyphIndex: r.uint16,
    subtable: new r.Pointer(r.uint32, IndexSubtable)
  });

  BitmapSizeTable = new r.Struct({
    indexSubTableArray: new r.Pointer(r.uint32, new r.Array(IndexSubtableArray, 1), {
      type: 'parent'
    }),
    indexTablesSize: r.uint32,
    numberOfIndexSubTables: r.uint32,
    colorRef: r.uint32,
    hori: SBitLineMetrics,
    vert: SBitLineMetrics,
    startGlyphIndex: r.uint16,
    endGlyphIndex: r.uint16,
    ppemX: r.uint8,
    ppemY: r.uint8,
    bitDepth: r.uint8,
    flags: new r.Bitfield(r.uint8, ['horizontal', 'vertical'])
  });

  module.exports = new r.Struct({
    version: r.uint32,
    numSizes: r.uint32,
    sizes: new r.Array(BitmapSizeTable, 'numSizes')
  });

}).call(this);

},{"./EBDT":162,"restructure":89}],164:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var AttachList, AttachPoint, CaretValue, ClassDef, Coverage, Device, FeatureList, LigCaretList, LigGlyph, LookupList, MarkGlyphSetsDef, ScriptList, r, _ref;

  r = require('restructure');

  _ref = require('./opentype'), ScriptList = _ref.ScriptList, FeatureList = _ref.FeatureList, LookupList = _ref.LookupList, Coverage = _ref.Coverage, ClassDef = _ref.ClassDef, Device = _ref.Device;

  AttachPoint = new r.Array(r.uint16, r.uint16);

  AttachList = new r.Struct({
    coverage: new r.Pointer(r.uint16, Coverage),
    glyphCount: r.uint16,
    attachPoints: new r.Array(new r.Pointer(r.uint16, AttachPoint), 'glyphCount')
  });

  CaretValue = new r.VersionedStruct(r.uint16, {
    1: {
      coordinate: r.int16
    },
    2: {
      caretValuePoint: r.uint16
    },
    3: {
      coordinate: r.int16,
      deviceTable: new r.Pointer(r.uint16, Device)
    }
  });

  LigGlyph = new r.Array(new r.Pointer(r.uint16, CaretValue), r.uint16);

  LigCaretList = new r.Struct({
    coverage: new r.Pointer(r.uint16, Coverage),
    ligGlyphCount: r.uint16,
    ligGlyphs: new r.Array(new r.Pointer(r.uint16, LigGlyph), 'ligGlyphCount')
  });

  MarkGlyphSetsDef = new r.Struct({
    markSetTableFormat: r.uint16,
    markSetCount: r.uint16,
    coverage: new r.Array(new r.Pointer(r.uint32, Coverage), 'markSetCount')
  });

  module.exports = new r.VersionedStruct(r.uint32, {
    0x00010000: {
      glyphClassDef: new r.Pointer(r.uint16, ClassDef),
      attachList: new r.Pointer(r.uint16, AttachList),
      ligCaretList: new r.Pointer(r.uint16, LigCaretList),
      markAttachClassDef: new r.Pointer(r.uint16, ClassDef)
    },
    0x00010002: {
      glyphClassDef: new r.Pointer(r.uint16, ClassDef),
      attachList: new r.Pointer(r.uint16, AttachList),
      ligCaretList: new r.Pointer(r.uint16, LigCaretList),
      markAttachClassDef: new r.Pointer(r.uint16, ClassDef),
      markGlyphSetsDef: new r.Pointer(r.uint16, MarkGlyphSetsDef)
    }
  });

}).call(this);

},{"./opentype":195,"restructure":89}],165:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var Anchor, BaseArray, BaseRecord, Class2Record, ClassDef, ComponentRecord, Coverage, Device, EntryExitRecord, FeatureList, GPOSLookup, LigatureArray, LigatureAttach, LookupList, MarkArray, MarkRecord, PairSet, PairValueRecord, ScriptList, ValueFormat, ValueRecord, r, _ref;

  r = require('restructure');

  _ref = require('./opentype'), ScriptList = _ref.ScriptList, FeatureList = _ref.FeatureList, LookupList = _ref.LookupList, Coverage = _ref.Coverage, ClassDef = _ref.ClassDef, Device = _ref.Device;

  ValueFormat = new r.Bitfield(r.uint16, ['xPlacement', 'yPlacement', 'xAdvance', 'yAdvance', 'xPlaDevice', 'yPlaDevice', 'xAdvDevice', 'yAdvDevice']);

  ValueRecord = (function() {
    var types;

    function ValueRecord(key) {
      this.key = key != null ? key : 'valueFormat';
      this.size = void 0;
    }

    types = {
      xPlacement: r.int16,
      yPlacement: r.int16,
      xAdvance: r.int16,
      yAdvance: r.int16,
      xPlaDevice: new r.Pointer(r.uint16, Device),
      yPlaDevice: new r.Pointer(r.uint16, Device),
      xAdvDevice: new r.Pointer(r.uint16, Device),
      yAdvDevice: new r.Pointer(r.uint16, Device)
    };

    ValueRecord.prototype.decode = function(stream, parent) {
      var fields, included, key, struct, type, _ref1;
      struct = parent;
      while (!struct[this.key] && struct.parent) {
        struct = struct.parent;
      }
      if (!struct[this.key]) {
        return;
      }
      fields = {};
      _ref1 = struct[this.key];
      for (key in _ref1) {
        included = _ref1[key];
        if (!(included)) {
          continue;
        }
        type = types[key];
        if (type instanceof r.Pointer) {
          type.relativeTo = function() {
            return struct._startOffset;
          };
        }
        fields[key] = type;
      }
      return new r.Struct(fields).decode(stream, parent);
    };

    return ValueRecord;

  })();

  PairValueRecord = new r.Struct({
    secondGlyph: r.uint16,
    value1: new ValueRecord('valueFormat1'),
    value2: new ValueRecord('valueFormat2')
  });

  PairSet = new r.Array(PairValueRecord, r.uint16);

  Class2Record = new r.Struct({
    value1: new ValueRecord('valueFormat1'),
    value2: new ValueRecord('valueFormat2')
  });

  Anchor = new r.VersionedStruct(r.uint16, {
    1: {
      xCoordinate: r.int16,
      yCoordinate: r.int16
    },
    2: {
      xCoordinate: r.int16,
      yCoordinate: r.int16,
      anchorPoint: r.uint16
    },
    3: {
      xCoordinate: r.int16,
      yCoordinate: r.int16,
      xDeviceTable: new r.Pointer(r.uint16, Device),
      yDeviceTable: new r.Pointer(r.uint16, Device)
    }
  });

  EntryExitRecord = new r.Struct({
    entryAnchor: new r.Pointer(r.uint16, Anchor),
    exitAnchor: new r.Pointer(r.uint16, Anchor)
  });

  MarkRecord = new r.Struct({
    "class": r.uint16,
    markAnchor: new r.Pointer(r.uint16, Anchor, {
      type: 'parent'
    })
  });

  MarkArray = new r.Array(MarkRecord, r.uint16);

  BaseRecord = new r.Array(new r.Pointer(r.uint16, Anchor), function() {
    return this.parent.classCount;
  });

  BaseArray = new r.Array(BaseRecord, r.uint16);

  ComponentRecord = new r.Array(new r.Pointer(r.uint16, Anchor), function() {
    return this.parent.parent.classCount;
  });

  LigatureAttach = new r.Array(ComponentRecord, r.uint16);

  LigatureArray = new r.Array(new r.Pointer(r.uint16, LigatureAttach), r.uint16);

  GPOSLookup = new r.VersionedStruct('lookupType', {
    1: new r.VersionedStruct(r.uint16, {
      1: {
        coverage: new r.Pointer(r.uint16, Coverage),
        valueFormat: ValueFormat,
        value: new ValueRecord
      },
      2: {
        coverage: new r.Pointer(r.uint16, Coverage),
        valueFormat: ValueFormat,
        valueCount: r.uint16,
        values: new r.Array(new ValueRecord, 'valueCou')
      }
    }),
    2: new r.VersionedStruct(r.uint16, {
      1: {
        coverage: new r.Pointer(r.uint16, Coverage),
        valueFormat1: ValueFormat,
        valueFormat2: ValueFormat,
        pairSetCount: r.uint16,
        pairSets: new r.Array(new r.Pointer(r.uint16, PairSet), 'pairSetCount')
      },
      2: {
        coverage: new r.Pointer(r.uint16, Coverage),
        valueFormat1: ValueFormat,
        valueFormat2: ValueFormat,
        classDef1: new r.Pointer(r.uint16, ClassDef),
        classDef2: new r.Pointer(r.uint16, ClassDef),
        class1Count: r.uint16,
        class2Count: r.uint16,
        classRecords: new r.Array(new r.Array(Class2Record, 'class2Count'), 'class1Count')
      }
    }),
    3: {
      format: r.uint16,
      coverage: new r.Pointer(r.uint16, Coverage),
      entryExitCount: r.uint16,
      entryExitRecords: new r.Array(EntryExitRecord, 'entryExitCount')
    },
    4: {
      format: r.uint16,
      markCoverage: new r.Pointer(r.uint16, Coverage),
      baseCoverage: new r.Pointer(r.uint16, Coverage),
      classCount: r.uint16,
      markArray: new r.Pointer(r.uint16, MarkArray),
      baseArray: new r.Pointer(r.uint16, BaseArray)
    },
    5: {
      format: r.uint16,
      markCoverage: new r.Pointer(r.uint16, Coverage),
      ligatureCoverage: new r.Pointer(r.uint16, Coverage),
      classCount: r.uint16,
      markArray: new r.Pointer(r.uint16, MarkArray),
      ligatureArray: new r.Pointer(r.uint16, LigatureArray)
    },
    6: {
      format: r.uint16,
      mark1Coverage: new r.Pointer(r.uint16, Coverage),
      mark2Coverage: new r.Pointer(r.uint16, Coverage),
      classCount: r.uint16,
      mark1Array: new r.Pointer(r.uint16, MarkArray),
      mark2Array: new r.Pointer(r.uint16, BaseArray)
    },
    7: {
      format: r.uint16
    },
    8: {
      format: r.uint16
    },
    9: {
      format: r.uint16
    }
  });

  module.exports = new r.Struct({
    version: r.int32,
    scriptList: new r.Pointer(r.uint16, ScriptList),
    featureList: new r.Pointer(r.uint16, FeatureList),
    lookupList: new r.Pointer(r.uint16, new LookupList(GPOSLookup))
  });

  module.exports.GPOSLookup = GPOSLookup;

}).call(this);

},{"./opentype":195,"restructure":89}],166:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var AlternateSet, ChainSubRule, ChainSubRuleSet, ClassDef, Coverage, Device, FeatureList, GSUBLookup, Ligature, LigatureSet, LookupList, ScriptList, Sequence, SubClassRule, SubClassSet, SubRule, SubRuleSet, SubstLookupRecord, r, _ref;

  r = require('restructure');

  _ref = require('./opentype'), ScriptList = _ref.ScriptList, FeatureList = _ref.FeatureList, LookupList = _ref.LookupList, Coverage = _ref.Coverage, ClassDef = _ref.ClassDef, Device = _ref.Device;

  Sequence = AlternateSet = new r.Array(r.uint16, r.uint16);

  Ligature = new r.Struct({
    glyph: r.uint16,
    compCount: r.uint16,
    components: new r.Array(r.uint16, function() {
      return this.compCount - 1;
    })
  });

  LigatureSet = new r.Array(new r.Pointer(r.uint16, Ligature), r.uint16);

  SubstLookupRecord = new r.Struct({
    sequenceIndex: r.uint16,
    lookupListIndex: r.uint16
  });

  SubRule = new r.Struct({
    glyphCount: r.uint16,
    substCount: r.uint16,
    input: new r.Array(r.uint16, function() {
      return this.glyphCount - 1;
    }),
    lookupRecords: new r.Array(SubstLookupRecord, 'substCount')
  });

  SubRuleSet = new r.Array(new r.Pointer(r.uint16, SubRule), r.uint16);

  SubClassRule = new r.Struct({
    glyphCount: r.uint16,
    substCount: r.uint16,
    classes: new r.Array(r.uint16, function() {
      return this.glyphCount - 1;
    }),
    lookupRecords: new r.Array(SubstLookupRecord, 'substCount')
  });

  SubClassSet = new r.Array(new r.Pointer(r.uint16, SubClassRule), r.uint16);

  ChainSubRule = new r.Struct({
    backtrackGlyphCount: r.uint16,
    backtrack: new r.Array(r.uint16, 'backtrackGlyphCount'),
    inputGlyphCount: r.uint16,
    input: new r.Array(r.uint16, function() {
      return this.inputGlyphCount - 1;
    }),
    lookaheadGlyphCount: r.uint16,
    lookahead: new r.Array(r.uint16, 'lookaheadGlyphCount'),
    substCount: r.uint16,
    lookupRecords: new r.Array(SubstLookupRecord, 'substCount')
  });

  ChainSubRuleSet = new r.Array(new r.Pointer(r.uint16, ChainSubRule), r.uint16);

  GSUBLookup = new r.VersionedStruct('lookupType', {
    1: new r.VersionedStruct(r.uint16, {
      1: {
        coverage: new r.Pointer(r.uint16, Coverage),
        deltaGlyphID: r.int16
      },
      2: {
        coverage: new r.Pointer(r.uint16, Coverage),
        glyphCount: r.uint16,
        substitute: new r.Array(r.uint16, 'glyphCount')
      }
    }),
    2: {
      substFormat: r.uint16,
      coverage: new r.Pointer(r.uint16, Coverage),
      count: r.uint16,
      sequences: new r.Array(new r.Pointer(r.uint16, Sequence), 'count')
    },
    3: {
      substFormat: r.uint16,
      coverage: new r.Pointer(r.uint16, Coverage),
      count: r.uint16,
      alternateSet: new r.Array(new r.Pointer(r.uint16, AlternateSet), 'count')
    },
    4: {
      substFormat: r.uint16,
      coverage: new r.Pointer(r.uint16, Coverage),
      count: r.uint16,
      ligatureSets: new r.Array(new r.Pointer(r.uint16, LigatureSet), 'count')
    },
    5: new r.VersionedStruct(r.uint16, {
      1: {
        coverage: new r.Pointer(r.uint16, Coverage),
        subRuleSetCount: r.uint16,
        subRuleSets: new r.Array(new r.Pointer(r.uint16, SubRuleSet), 'subRuleSetCount')
      },
      2: {
        coverage: new r.Pointer(r.uint16, Coverage),
        classDef: new r.Pointer(r.uint16, ClassDef),
        subClassSetCnt: r.uint16,
        subClassSet: new r.Array(new r.Pointer(r.uint16, SubClassSet), 'subClassSetCnt')
      },
      3: {
        glyphCount: r.uint16,
        substCount: r.uint16,
        coverages: new r.Array(new r.Pointer(r.uint16, Coverage), 'glyphCount'),
        substLookupRecord: new r.Array(SubstLookupRecord, 'substCount')
      }
    }),
    6: new r.VersionedStruct(r.uint16, {
      1: {
        coverage: new r.Pointer(r.uint16, Coverage),
        chainCount: r.uint16,
        chainSubRuleSets: new r.Array(new r.Pointer(r.uint16, ChainSubRuleSet), 'chainCount')
      },
      2: {
        coverage: new r.Pointer(r.uint16, Coverage),
        backtrackClassDef: new r.Pointer(r.uint16, ClassDef),
        inputClassDef: new r.Pointer(r.uint16, ClassDef),
        lookaheadClassDef: new r.Pointer(r.uint16, ClassDef),
        chainCount: r.uint16,
        chainSubClassSet: new r.Array(new r.Pointer(r.uint16, ChainSubRuleSet), 'chainCount')
      },
      3: {
        backtrackGlyphCount: r.uint16,
        backtrackCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'backtrackGlyphCount'),
        inputGlyphCount: r.uint16,
        inputCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'inputGlyphCount'),
        lookaheadGlyphCount: r.uint16,
        lookaheadCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'lookaheadGlyphCount'),
        substCount: r.uint16,
        substLookupRecord: new r.Array(SubstLookupRecord, 'substCount')
      }
    }),
    7: {
      substFormat: r.uint16,
      lookupType: r.uint16,
      extension: new r.Pointer(r.uint32, GSUBLookup)
    },
    8: {
      substFormat: r.uint16,
      coverage: new r.Pointer(r.uint16, Coverage),
      backtrackCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'backtrackGlyphCount'),
      lookaheadGlyphCount: r.uint16,
      lookaheadCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'lookaheadGlyphCount'),
      glyphCount: r.uint16,
      substitutes: new r.Array(r.uint16, 'glyphCount')
    }
  });

  module.exports = new r.Struct({
    version: r.int32,
    scriptList: new r.Pointer(r.uint16, ScriptList),
    featureList: new r.Pointer(r.uint16, FeatureList),
    lookupList: new r.Pointer(r.uint16, new LookupList(GSUBLookup))
  });

}).call(this);

},{"./opentype":195,"restructure":89}],167:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var ClassDef, Coverage, Device, FeatureList, GPOSLookup, JstfGSUBModList, JstfLangSys, JstfLangSysRecord, JstfPriority, JstfScript, JstfScriptRecord, LookupList, ScriptList, r, _ref;

  r = require('restructure');

  _ref = require('./opentype'), ScriptList = _ref.ScriptList, FeatureList = _ref.FeatureList, LookupList = _ref.LookupList, Coverage = _ref.Coverage, ClassDef = _ref.ClassDef, Device = _ref.Device;

  GPOSLookup = require('./GPOS').GPOSLookup;

  JstfGSUBModList = new r.Array(r.uint16, r.uint16);

  JstfPriority = new r.Struct({
    shrinkageEnableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),
    shrinkageDisableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),
    shrinkageEnableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),
    shrinkageDisableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),
    shrinkageJstfMax: new r.Pointer(r.uint16, new LookupList(GPOSLookup)),
    extensionEnableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),
    extensionDisableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),
    extensionEnableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),
    extensionDisableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),
    extensionJstfMax: new r.Pointer(r.uint16, new LookupList(GPOSLookup))
  });

  JstfLangSys = new r.Array(new r.Pointer(r.uint16, JstfPriority), r.uint16);

  JstfLangSysRecord = new r.Struct({
    tag: new r.String(4),
    jstfLangSys: new r.Pointer(r.uint16, JstfLangSys)
  });

  JstfScript = new r.Struct({
    extenderGlyphs: new r.Pointer(r.uint16, new r.Array(r.uint16, r.uint16)),
    defaultLangSys: new r.Pointer(r.uint16, JstfLangSys),
    langSysCount: r.uint16,
    langSysRecords: new r.Array(JstfLangSysRecord, 'langSysCount')
  });

  JstfScriptRecord = new r.Struct({
    tag: new r.String(4),
    script: new r.Pointer(r.uint16, JstfScript, {
      type: 'parent'
    })
  });

  module.exports = new r.Struct({
    version: r.uint32,
    scriptCount: r.uint16,
    scriptList: new r.Array(JstfScriptRecord, 'scriptCount')
  });

}).call(this);

},{"./GPOS":165,"./opentype":195,"restructure":89}],168:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var r;

  r = require('restructure');

  module.exports = new r.Struct({
    version: r.uint16,
    numGlyphs: r.uint16,
    yPels: new r.Array(r.uint8, 'numGlyphs')
  });

}).call(this);

},{"restructure":89}],169:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var os2, r;

  r = require('restructure');

  module.exports = new r.VersionedStruct(r.uint16, {
    header: {
      xAvgCharWidth: r.int16,
      usWeightClass: r.uint16,
      usWidthClass: r.uint16,
      fsType: new r.Bitfield(r.uint16, [null, 'noEmbedding', 'viewOnly', 'editable', null, null, null, null, 'noSubsetting', 'bitmapOnly']),
      ySubscriptXSize: r.int16,
      ySubscriptYSize: r.int16,
      ySubscriptXOffset: r.int16,
      ySubscriptYOffset: r.int16,
      ySuperscriptXSize: r.int16,
      ySuperscriptYSize: r.int16,
      ySuperscriptXOffset: r.int16,
      ySuperscriptYOffset: r.int16,
      yStrikeoutSize: r.int16,
      yStrikeoutPosition: r.int16,
      sFamilyClass: r.int16,
      panose: new r.Array(r.uint8, 10),
      ulCharRange: new r.Array(r.uint32, 4),
      vendorID: new r.String(4),
      fsSelection: new r.Bitfield(r.uint16, ['italic', 'underscore', 'negative', 'outlined', 'strikeout', 'bold', 'regular', 'useTypoMetrics', 'wws', 'oblique']),
      usFirstCharIndex: r.uint16,
      usLastCharIndex: r.uint16
    },
    1: {
      ascent: r.int16,
      descent: r.int16,
      lineGap: r.int16,
      winAscent: r.uint16,
      winDescent: r.uint16,
      codePageRange: new r.Array(r.uint32, 2)
    },
    2: {
      ascent: r.int16,
      descent: r.int16,
      lineGap: r.int16,
      winAscent: r.uint16,
      winDescent: r.uint16,
      codePageRange: new r.Array(r.uint32, 2),
      xHeight: r.int16,
      capHeight: r.int16,
      defaultChar: r.uint16,
      breakChar: r.uint16,
      maxContent: r.uint16
    }
  });

  os2 = module.exports.versions;

  os2[3] = os2[4] = os2[2];

}).call(this);

},{"restructure":89}],170:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var r;

  r = require('restructure');

  module.exports = new r.Struct({
    version: r.uint16,
    fontNumber: r.uint32,
    pitch: r.uint16,
    xHeight: r.uint16,
    style: r.uint16,
    typeFamily: r.uint16,
    capHeight: r.uint16,
    symbolSet: r.uint16,
    typeface: new r.String(16),
    characterComplement: new r.String(8),
    fileName: new r.String(6),
    strokeWeight: new r.String(1),
    widthType: new r.String(1),
    serifStyle: r.uint8,
    reserved: new r.Reserved(r.uint8)
  });

}).call(this);

},{"restructure":89}],171:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var Ratio, VdmxGroup, r, vTable;

  r = require('restructure');

  Ratio = new r.Struct({
    bCharSet: r.uint8,
    xRatio: r.uint8,
    yStartRatio: r.uint8,
    yEndRatio: r.uint8
  });

  vTable = new r.Struct({
    yPelHeight: r.uint16,
    yMax: r.int16,
    yMin: r.int16
  });

  VdmxGroup = new r.Struct({
    recs: r.uint16,
    startsz: r.uint8,
    endsz: r.uint8,
    entries: new r.Array(vTable, 'recs')
  });

  module.exports = new r.Struct({
    version: r.uint16,
    numRecs: r.uint16,
    numRatios: r.uint16,
    ratioRanges: new r.Array(Ratio, 'numRatios'),
    offsets: new r.Array(r.uint16, 'numRatios'),
    groups: new r.Array(VdmxGroup, 'numRecs')
  });

}).call(this);

},{"restructure":89}],172:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var VerticalOrigin, r;

  r = require('restructure');

  VerticalOrigin = new r.Struct({
    glyphIndex: r.uint16,
    vertOriginY: r.int16
  });

  module.exports = new r.Struct({
    majorVersion: r.uint16,
    minorVersion: r.uint16,
    defaultVertOriginY: r.int16,
    numVertOriginYMetrics: r.uint16,
    metrics: new r.Array(VerticalOrigin, 'numVertOriginYMetrics')
  });

}).call(this);

},{"restructure":89}],173:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var WOFFDirectory, WOFFDirectoryEntry, r, tables;

  r = require('restructure');

  tables = require('./');

  WOFFDirectoryEntry = new r.Struct({
    tag: new r.String(4),
    offset: new r.Pointer(r.uint32, 'void', {
      type: 'global'
    }),
    compLength: r.uint32,
    origLength: r.uint32,
    origChecksum: r.uint32
  });

  WOFFDirectory = new r.Struct({
    tag: new r.String(4),
    flavor: r.uint32,
    length: r.uint32,
    numTables: r.uint16,
    reserved: new r.Reserved(r.uint16),
    totalSfntSize: r.uint32,
    majorVersion: r.uint16,
    minorVersion: r.uint16,
    metaOffset: r.uint32,
    metaLength: r.uint32,
    metaOrigLength: r.uint32,
    privOffset: r.uint32,
    privLength: r.uint32,
    tables: new r.Array(WOFFDirectoryEntry, 'numTables')
  });

  WOFFDirectory.process = function() {
    var table, _i, _len, _ref;
    tables = {};
    _ref = this.tables;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      table = _ref[_i];
      tables[table.tag] = table;
    }
    return this.tables = tables;
  };

  module.exports = WOFFDirectory;

}).call(this);

},{"./":187,"restructure":89}],174:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var LookupTable, UnboundedArray, r,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  r = require('restructure');

  UnboundedArray = (function(_super) {
    var UnboundedArrayAccessor;

    __extends(UnboundedArray, _super);

    function UnboundedArray(type) {
      this.type = type;
      this.length = 0;
    }

    UnboundedArrayAccessor = (function() {
      function UnboundedArrayAccessor(type, stream, parent) {
        this.type = type;
        this.stream = stream;
        this.parent = parent;
        this.base = this.stream.pos;
        this._items = [];
      }

      UnboundedArrayAccessor.prototype.getItem = function(index) {
        var pos;
        if (this._items[index] == null) {
          pos = this.stream.pos;
          this.stream.pos = this.base + this.type.size(null, this.parent) * index;
          this._items[index] = this.type.decode(this.stream, this.parent);
          this.stream.pos = pos;
        }
        return this._items[index];
      };

      UnboundedArrayAccessor.prototype.inspect = function() {
        return "[UnboundedArray " + this.type.constructor.name + "]";
      };

      return UnboundedArrayAccessor;

    })();

    UnboundedArray.prototype.decode = function(stream, parent) {
      return new UnboundedArrayAccessor(this.type, stream, parent);
    };

    return UnboundedArray;

  })(r.Array);

  exports.UnboundedArray = UnboundedArray;

  exports.LookupTable = LookupTable = function(ValueType) {
    var BinarySearchHeader, LookupSegmentArray, LookupSegmentSingle, LookupSingle, Shadow;
    if (ValueType == null) {
      ValueType = r.uint16;
    }
    Shadow = (function() {
      function Shadow(type) {
        this.type = type;
      }

      Shadow.prototype.decode = function(stream, ctx) {
        ctx = ctx.parent.parent;
        return this.type.decode(stream, ctx);
      };

      Shadow.prototype.size = function(val, ctx) {
        ctx = ctx.parent.parent;
        return this.type.size(val, ctx);
      };

      Shadow.prototype.encode = function(stream, val, ctx) {
        ctx = ctx.parent.parent;
        return this.type.encode(stream, val, ctx);
      };

      return Shadow;

    })();
    ValueType = new Shadow(ValueType);
    BinarySearchHeader = new r.Struct({
      unitSize: r.uint16,
      nUnits: r.uint16,
      searchRange: r.uint16,
      entrySelector: r.uint16,
      rangeShift: r.uint16
    });
    LookupSegmentSingle = new r.Struct({
      lastGlyph: r.uint16,
      firstGlyph: r.uint16,
      value: ValueType
    });
    LookupSegmentArray = new r.Struct({
      lastGlyph: r.uint16,
      firstGlyph: r.uint16,
      values: new r.Pointer(r.uint16, new r.Array(ValueType, function() {
        return this.lastGlyph - this.firstGlyph + 1;
      }), {
        type: 'parent'
      })
    });
    LookupSingle = new r.Struct({
      glyph: r.uint16,
      value: ValueType
    });
    return new r.VersionedStruct(r.uint16, {
      0: {
        values: new UnboundedArray(ValueType)
      },
      2: {
        binarySearchHeader: BinarySearchHeader,
        segments: new r.Array(LookupSegmentSingle, function() {
          return this.binarySearchHeader.nUnits;
        })
      },
      4: {
        binarySearchHeader: BinarySearchHeader,
        segments: new r.Array(LookupSegmentArray, function() {
          return this.binarySearchHeader.nUnits;
        })
      },
      6: {
        binarySearchHeader: BinarySearchHeader,
        segments: new r.Array(LookupSingle, function() {
          return this.binarySearchHeader.nUnits;
        })
      },
      8: {
        firstGlyph: r.uint16,
        count: r.uint16,
        values: new r.Array(ValueType, 'count')
      }
    });
  };

  exports.StateTable = function(entryData, lookupType) {
    var Entry, StateArray, StateHeader, entry, key, val;
    if (entryData == null) {
      entryData = {};
    }
    if (lookupType == null) {
      lookupType = r.uint16;
    }
    entry = {
      newState: r.uint16,
      flags: r.uint16
    };
    for (key in entryData) {
      val = entryData[key];
      entry[key] = val;
    }
    Entry = new r.Struct(entry);
    StateArray = new UnboundedArray(new r.Array(r.uint16, function() {
      return this.nClasses;
    }));
    StateHeader = new r.Struct({
      nClasses: r.uint32,
      classTable: new r.Pointer(r.uint32, new LookupTable(lookupType)),
      stateArray: new r.Pointer(r.uint32, StateArray),
      entryTable: new r.Pointer(r.uint32, new UnboundedArray(Entry))
    });
    return StateHeader;
  };

  exports.StateTable1 = function(entryData, lookupType) {
    var ClassLookupTable, Entry, StateArray, StateHeader1, entry, key, val;
    if (entryData == null) {
      entryData = {};
    }
    if (lookupType == null) {
      lookupType = r.uint16;
    }
    ClassLookupTable = new r.Struct({
      version: function() {
        return 8;
      },
      firstGlyph: r.uint16,
      values: new r.Array(r.uint8, r.uint16)
    });
    entry = {
      newStateOffset: r.uint16,
      newState: function() {
        return (this.newStateOffset - (this.parent.stateArray.base - this.parent._startOffset)) / this.parent.nClasses;
      },
      flags: r.uint16
    };
    for (key in entryData) {
      val = entryData[key];
      entry[key] = val;
    }
    Entry = new r.Struct(entry);
    StateArray = new UnboundedArray(new r.Array(r.uint8, function() {
      return this.nClasses;
    }));
    StateHeader1 = new r.Struct({
      nClasses: r.uint16,
      classTable: new r.Pointer(r.uint16, ClassLookupTable),
      stateArray: new r.Pointer(r.uint16, StateArray),
      entryTable: new r.Pointer(r.uint16, new UnboundedArray(Entry))
    });
    return StateHeader1;
  };

}).call(this);

},{"restructure":89}],175:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var BslnSubtable, LookupTable, r;

  r = require('restructure');

  LookupTable = require('./aat').LookupTable;

  BslnSubtable = new r.VersionedStruct('format', {
    0: {
      deltas: new r.Array(r.int16, 32)
    },
    1: {
      deltas: new r.Array(r.int16, 32),
      mappingData: new LookupTable(r.uint16)
    },
    2: {
      standardGlyph: r.uint16,
      controlPoints: new r.Array(r.uint16, 32)
    },
    3: {
      standardGlyph: r.uint16,
      controlPoints: new r.Array(r.uint16, 32),
      mappingData: new LookupTable(r.uint16)
    }
  });

  module.exports = new r.Struct({
    version: r.fixed32,
    format: r.uint16,
    defaultBaseline: r.uint16,
    subtable: BslnSubtable
  });

}).call(this);

},{"./aat":174,"restructure":89}],176:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var CmapEntry, CmapGroup, CmapSubtable, DefaultUVS, NonDefaultUVS, SubHeader, UVSMapping, UnicodeValueRange, VarSelectorRecord, r;

  r = require('restructure');

  SubHeader = new r.Struct({
    firstCode: r.uint16,
    entryCount: r.uint16,
    idDelta: r.int16,
    idRangeOffset: r.uint16
  });

  CmapGroup = new r.Struct({
    startCharCode: r.uint32,
    endCharCode: r.uint32,
    glyphID: r.uint32
  });

  UnicodeValueRange = new r.Struct({
    startUnicodeValue: r.uint24,
    additionalCount: r.uint8
  });

  UVSMapping = new r.Struct({
    unicodeValue: r.uint24,
    glyphID: r.uint16
  });

  DefaultUVS = new r.Array(UnicodeValueRange, r.uint32);

  NonDefaultUVS = new r.Array(UVSMapping, r.uint32);

  VarSelectorRecord = new r.Struct({
    varSelector: r.uint24,
    defaultUVS: new r.Pointer(r.uint32, DefaultUVS, {
      type: 'parent'
    }),
    nonDefaultUVS: new r.Pointer(r.uint32, NonDefaultUVS, {
      type: 'parent'
    })
  });

  CmapSubtable = new r.VersionedStruct(r.uint16, {
    0: {
      length: r.uint16,
      language: r.uint16,
      codeMap: new r.Array(r.uint8, 256)
    },
    2: {
      length: r.uint16,
      language: r.uint16,
      subHeaderKeys: new r.Array(r.uint16, 256),
      subHeaderCount: function() {
        return Math.max.apply(Math, this.subHeaderKeys);
      },
      subHeaders: new r.Array(SubHeader, 'subHeaderCount'),
      glyphIndexArray: new r.Array(r.uint16, 'subHeaderCount')
    },
    4: {
      length: r.uint16,
      language: r.uint16,
      segCountX2: r.uint16,
      segCount: function() {
        return this.segCountX2 >> 1;
      },
      searchRange: r.uint16,
      entrySelector: r.uint16,
      rangeShift: r.uint16,
      endCode: new r.Array(r.uint16, 'segCount'),
      reservedPad: new r.Reserved(r.uint16),
      startCode: new r.Array(r.uint16, 'segCount'),
      idDelta: new r.Array(r.uint16, 'segCount'),
      idRangeOffset: new r.Array(r.uint16, 'segCount'),
      glyphIndexArray: new r.Array(r.uint16, function() {
        return (this.length - this._currentOffset) / 2;
      })
    },
    6: {
      length: r.uint16,
      language: r.uint16,
      firstCode: r.uint16,
      entryCount: r.uint16,
      glyphIndices: new r.Array(r.uint16, 'entryCount')
    },
    8: {
      reserved: new r.Reserved(r.uint16),
      length: r.uint32,
      language: r.uint16,
      is32: new r.Array(r.uint8, 8192),
      nGroups: r.uint32,
      groups: new r.Array(CmapGroup, 'nGroups')
    },
    10: {
      reserved: new r.Reserved(r.uint16),
      length: r.uint32,
      language: r.uint32,
      firstCode: r.uint32,
      entryCount: r.uint32,
      glyphIndices: new r.Array(r.uint16, 'numChars')
    },
    12: {
      reserved: new r.Reserved(r.uint16),
      length: r.uint32,
      language: r.uint32,
      nGroups: r.uint32,
      groups: new r.Array(CmapGroup, 'nGroups')
    },
    13: {
      reserved: new r.Reserved(r.uint16),
      length: r.uint32,
      language: r.uint32,
      nGroups: r.uint32,
      groups: new r.Array(CmapGroup, 'nGroups')
    },
    14: {
      length: r.uint32,
      numRecords: r.uint32,
      varSelectors: new r.Array(VarSelectorRecord, 'numRecords')
    }
  });

  CmapEntry = new r.Struct({
    platformID: r.uint16,
    encodingID: r.uint16,
    table: new r.Pointer(r.uint32, CmapSubtable, {
      type: 'parent'
    })
  });

  module.exports = new r.Struct({
    version: r.uint16,
    numSubtables: r.uint16,
    tables: new r.Array(CmapEntry, 'numSubtables')
  });

}).call(this);

},{"restructure":89}],177:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var r;

  r = require('restructure');

  module.exports = new r.Struct({
    controlValues: new r.Array(r.int16)
  });

}).call(this);

},{"restructure":89}],178:[function(require,module,exports){
arguments[4][161][0].apply(exports,arguments)
},{"./":187,"dup":161,"restructure":89}],179:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var FeatureName, Setting, r;

  r = require('restructure');

  Setting = new r.Struct({
    setting: r.uint16,
    nameIndex: r.int16,
    name: function() {
      return this.parent.parent.parent.name.records.fontFeatures.English[this.nameIndex];
    }
  });

  FeatureName = new r.Struct({
    feature: r.uint16,
    nSettings: r.uint16,
    settingTable: new r.Pointer(r.uint32, new r.Array(Setting, 'nSettings'), {
      type: 'parent'
    }),
    featureFlags: new r.Bitfield(r.uint8, [null, null, null, null, null, null, 'hasDefault', 'exclusive']),
    defaultSetting: r.uint8,
    nameIndex: r.int16,
    name: function() {
      return this.parent.parent.name.records.fontFeatures.English[this.nameIndex];
    }
  });

  module.exports = new r.Struct({
    version: r.fixed32,
    featureNameCount: r.uint16,
    reserved1: new r.Reserved(r.uint16),
    reserved2: new r.Reserved(r.uint32),
    featureNames: new r.Array(FeatureName, 'featureNameCount')
  });

}).call(this);

},{"restructure":89}],180:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var r;

  r = require('restructure');

  module.exports = new r.Struct({
    instructions: new r.Array(r.uint8)
  });

}).call(this);

},{"restructure":89}],181:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var GaspRange, r;

  r = require('restructure');

  GaspRange = new r.Struct({
    rangeMaxPPEM: r.uint16,
    rangeGaspBehavior: new r.Bitfield(r.uint16, ['grayscale', 'gridfit', 'symmetricSmoothing', 'symmetricGridfit'])
  });

  module.exports = new r.Struct({
    version: r.uint16,
    numRanges: r.uint16,
    gaspRanges: new r.Array(GaspRange, 'numRanges')
  });

}).call(this);

},{"restructure":89}],182:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var r;

  r = require('restructure');

  module.exports = new r.Array(new r.Buffer);

}).call(this);

},{"restructure":89}],183:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var DeviceRecord, r;

  r = require('restructure');

  DeviceRecord = new r.Struct({
    pixelSize: r.uint8,
    maximumWidth: r.uint8,
    widths: new r.Array(r.uint8, function() {
      return this.parent.parent.maxp.numGlyphs;
    })
  });

  module.exports = new r.Struct({
    version: r.uint16,
    numRecords: r.int16,
    sizeDeviceRecord: r.int32,
    records: new r.Array(DeviceRecord, 'numRecords')
  });

}).call(this);

},{"restructure":89}],184:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var r;

  r = require('restructure');

  module.exports = new r.Struct({
    version: r.int32,
    revision: r.int32,
    checkSumAdjustment: r.uint32,
    magicNumber: r.uint32,
    flags: r.uint16,
    unitsPerEm: r.uint16,
    created: new r.Array(r.int32, 2),
    modified: new r.Array(r.int32, 2),
    xMin: r.int16,
    yMin: r.int16,
    xMax: r.int16,
    yMax: r.int16,
    macStyle: new r.Bitfield(r.uint16, ['bold', 'italic', 'underline', 'outline', 'shadow', 'condensed', 'extended']),
    lowestRecPPEM: r.uint16,
    fontDirectionHint: r.int16,
    indexToLocFormat: r.int16,
    glyphDataFormat: r.int16
  });

}).call(this);

},{"restructure":89}],185:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var r;

  r = require('restructure');

  module.exports = new r.Struct({
    version: r.int32,
    ascent: r.int16,
    descent: r.int16,
    lineGap: r.int16,
    advanceWidthMax: r.uint16,
    minLeftSideBearing: r.int16,
    minRightSideBearing: r.int16,
    xMaxExtent: r.int16,
    caretSlopeRise: r.int16,
    caretSlopeRun: r.int16,
    caretOffset: r.int16,
    reserved: new r.Reserved(r.int16, 4),
    metricDataFormat: r.int16,
    numberOfMetrics: r.uint16
  });

}).call(this);

},{"restructure":89}],186:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var HmtxEntry, r;

  r = require('restructure');

  HmtxEntry = new r.Struct({
    advanceWidth: r.uint16,
    leftSideBearing: r.int16
  });

  module.exports = new r.Struct({
    metrics: new r.Array(HmtxEntry, function() {
      return this.parent.hhea.numberOfMetrics;
    }),
    leftSideBearings: new r.Array(r.int16, function() {
      return this.parent.maxp.numGlyphs - this.parent.hhea.numberOfMetrics;
    })
  });

}).call(this);

},{"restructure":89}],187:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  exports.cmap = require('./cmap');

  exports.head = require('./head');

  exports.hhea = require('./hhea');

  exports.hmtx = require('./hmtx');

  exports.maxp = require('./maxp');

  exports.name = require('./name');

  exports['OS/2'] = require('./OS2');

  exports.post = require('./post');

  exports['cvt '] = require('./cvt');

  exports.fpgm = require('./fpgm');

  exports.loca = require('./loca');

  exports.prep = require('./prep');

  exports.glyf = require('./glyf');

  exports['CFF '] = require('../CFFFont');

  exports.VORG = require('./VORG');

  exports.EBLC = require('./EBLC');

  exports.CBLC = exports.EBLC;

  exports.sbix = require('./sbix');

  exports.COLR = require('./COLR');

  exports.CPAL = require('./CPAL');

  exports.BASE = require('./BASE');

  exports.GDEF = require('./GDEF');

  exports.GPOS = require('./GPOS');

  exports.GSUB = require('./GSUB');

  exports.JSTF = require('./JSTF');

  exports.DSIG = require('./DSIG');

  exports.gasp = require('./gasp');

  exports.hdmx = require('./hdmx');

  exports.kern = require('./kern');

  exports.LTSH = require('./LTSH');

  exports.PCLT = require('./PCLT');

  exports.VDMX = require('./VDMX');

  exports.vhea = require('./vhea');

  exports.vmtx = require('./vmtx');

  exports.bsln = require('./bsln');

  exports.feat = require('./feat');

  exports.just = require('./just');

  exports.morx = require('./morx');

  exports.opbd = require('./opbd');

}).call(this);

},{"../CFFFont":125,"./BASE":157,"./COLR":158,"./CPAL":159,"./DSIG":160,"./EBLC":163,"./GDEF":164,"./GPOS":165,"./GSUB":166,"./JSTF":167,"./LTSH":168,"./OS2":169,"./PCLT":170,"./VDMX":171,"./VORG":172,"./bsln":175,"./cmap":176,"./cvt":177,"./feat":179,"./fpgm":180,"./gasp":181,"./glyf":182,"./hdmx":183,"./head":184,"./hhea":185,"./hmtx":186,"./just":188,"./kern":189,"./loca":190,"./maxp":191,"./morx":192,"./name":193,"./opbd":194,"./post":196,"./prep":197,"./sbix":198,"./vhea":199,"./vmtx":200}],188:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var Action, ActionData, ClassTable, JustificationTable, LookupTable, PostCompensationTable, PostcompensationAction, StateTable1, WidthDeltaCluster, WidthDeltaRecord, r, _ref;

  r = require('restructure');

  _ref = require('./aat'), LookupTable = _ref.LookupTable, StateTable1 = _ref.StateTable1;

  ClassTable = new r.Struct({
    length: r.uint16,
    coverage: r.uint16,
    subFeatureFlags: r.uint32,
    stateTable: new StateTable1
  });

  WidthDeltaRecord = new r.Struct({
    justClass: r.uint32,
    beforeGrowLimit: r.fixed32,
    beforeShrinkLimit: r.fixed32,
    afterGrowLimit: r.fixed32,
    afterShrinkLimit: r.fixed32,
    growFlags: r.uint16,
    shrinkFlags: r.uint16
  });

  WidthDeltaCluster = new r.Array(WidthDeltaRecord, r.uint32);

  ActionData = new r.VersionedStruct('actionType', {
    0: {
      lowerLimit: r.fixed32,
      upperLimit: r.fixed32,
      order: r.uint16,
      glyphs: new r.Array(r.uint16, r.uint16)
    },
    1: {
      addGlyph: r.uint16
    },
    2: {
      substThreshold: r.fixed32,
      addGlyph: r.uint16,
      substGlyph: r.uint16
    },
    3: {},
    4: {
      variationAxis: r.uint32,
      minimumLimit: r.fixed32,
      noStretchValue: r.fixed32,
      maximumLimit: r.fixed32
    },
    5: {
      flags: r.uint16,
      glyph: r.uint16
    }
  });

  Action = new r.Struct({
    actionClass: r.uint16,
    actionType: r.uint16,
    actionLength: r.uint32,
    actionData: ActionData,
    padding: new r.Reserved(r.uint8, function() {
      return this.actionLength - this._currentOffset;
    })
  });

  PostcompensationAction = new r.Array(Action, r.uint32);

  PostCompensationTable = new r.Struct({
    lookupTable: new LookupTable(new r.Pointer(r.uint16, PostcompensationAction))
  });

  JustificationTable = new r.Struct({
    classTable: new r.Pointer(r.uint16, ClassTable, {
      type: 'parent'
    }),
    wdcOffset: r.uint16,
    postCompensationTable: new r.Pointer(r.uint16, PostCompensationTable, {
      type: 'parent'
    }),
    widthDeltaClusters: new LookupTable(new r.Pointer(r.uint16, WidthDeltaCluster, {
      type: 'parent',
      relativeTo: 'wdcOffset'
    }))
  });

  module.exports = new r.Struct({
    version: r.uint32,
    format: r.uint16,
    horizontal: new r.Pointer(r.uint16, JustificationTable),
    vertical: new r.Pointer(r.uint16, JustificationTable)
  });

}).call(this);

},{"./aat":174,"restructure":89}],189:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var KernPair, KernSubtable, KernTable, r;

  r = require('restructure');

  KernPair = new r.Struct({
    left: r.uint16,
    right: r.uint16,
    value: r.int16
  });

  KernSubtable = new r.VersionedStruct('format', {
    0: {
      nPairs: r.uint16,
      searchRange: r.uint16,
      entrySelector: r.uint16,
      rangeShift: r.uint16,
      pairs: new r.Array(KernPair, 'nPairs')
    },
    3: {
      glyphCount: r.uint16,
      kernValueCount: r.uint8,
      leftClassCount: r.uint8,
      rightClassCount: r.uint8,
      flags: r.uint8,
      kernValue: new r.Array(r.int16, 'kernValueCount'),
      leftClass: new r.Array(r.uint8, 'glyphCount'),
      rightClass: new r.Array(r.uint8, 'glyphCount'),
      kernIndex: new r.Array(r.uint8, function() {
        return this.leftClassCount * this.rightClassCount;
      })
    }
  });

  KernTable = new r.VersionedStruct('version', {
    0: {
      subVersion: r.uint16,
      length: r.uint16,
      format: r.uint8,
      coverage: new r.Bitfield(r.uint8, ['horizontal', 'minimum', 'crossStream', 'override']),
      subtable: KernSubtable,
      padding: new r.Reserved(r.uint8, function() {
        return this.length - this._currentOffset;
      })
    },
    1: {
      length: r.uint32,
      coverage: new r.Bitfield(r.uint8, [null, null, null, null, null, 'variation', 'crossStream', 'vertical']),
      format: r.uint8,
      tupleIndex: r.uint16,
      subtable: KernSubtable,
      padding: new r.Reserved(r.uint8, function() {
        return this.length - this._currentOffset;
      })
    }
  });

  module.exports = new r.VersionedStruct(r.uint16, {
    0: {
      nTables: r.uint16,
      tables: new r.Array(KernTable, 'nTables')
    },
    1: {
      reserved: new r.Reserved(r.uint16),
      nTables: r.uint32,
      tables: new r.Array(KernTable, 'nTables')
    }
  });

}).call(this);

},{"restructure":89}],190:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var r;

  r = require('restructure');

  module.exports = new r.VersionedStruct('head.indexToLocFormat', {
    0: {
      offsets: new r.Array(r.uint16)
    },
    1: {
      offsets: new r.Array(r.uint32)
    }
  });

  module.exports.process = function() {
    var i, _i, _ref, _results;
    if (this.version !== 0) {
      return;
    }
    _results = [];
    for (i = _i = 0, _ref = this.offsets.length; _i < _ref; i = _i += 1) {
      _results.push(this.offsets[i] <<= 1);
    }
    return _results;
  };

  module.exports.preEncode = function() {
    var i, _i, _ref, _results;
    if (this.version != null) {
      return;
    }
    this.version = this.offsets[this.offsets.length - 1] > 0xffff ? 1 : 0;
    if (this.version !== 0) {
      return;
    }
    _results = [];
    for (i = _i = 0, _ref = this.offsets.length; _i < _ref; i = _i += 1) {
      _results.push(this.offsets[i] >>>= 1);
    }
    return _results;
  };

}).call(this);

},{"restructure":89}],191:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var r;

  r = require('restructure');

  module.exports = new r.Struct({
    version: r.int32,
    numGlyphs: r.uint16,
    maxPoints: r.uint16,
    maxContours: r.uint16,
    maxComponentPoints: r.uint16,
    maxComponentContours: r.uint16,
    maxZones: r.uint16,
    maxTwilightPoints: r.uint16,
    maxStorage: r.uint16,
    maxFunctionDefs: r.uint16,
    maxInstructionDefs: r.uint16,
    maxStackElements: r.uint16,
    maxSizeOfInstructions: r.uint16,
    maxComponentElements: r.uint16,
    maxComponentDepth: r.uint16
  });

}).call(this);

},{"restructure":89}],192:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var ContextualData, FeatureEntry, InsertionData, LigatureData, LookupTable, MorxChain, StateTable, SubstitutionTable, Subtable, SubtableData, UnboundedArray, r, _ref;

  r = require('restructure');

  _ref = require('./aat'), UnboundedArray = _ref.UnboundedArray, LookupTable = _ref.LookupTable, StateTable = _ref.StateTable;

  LigatureData = {
    action: r.uint16
  };

  ContextualData = {
    markIndex: r.uint16,
    currentIndex: r.uint16
  };

  InsertionData = {
    currentInsertIndex: r.uint16,
    markedInsertIndex: r.uint16
  };

  SubstitutionTable = new r.Struct({
    items: new UnboundedArray(new r.Pointer(r.uint32, new LookupTable))
  });

  SubtableData = new r.VersionedStruct('type', {
    0: {
      stateTable: new StateTable
    },
    1: {
      stateTable: new StateTable(ContextualData),
      substitutionTable: new r.Pointer(r.uint32, SubstitutionTable)
    },
    2: {
      stateTable: new StateTable(LigatureData),
      ligatureActions: new r.Pointer(r.uint32, new UnboundedArray(r.uint32)),
      components: new r.Pointer(r.uint32, new UnboundedArray(r.uint16)),
      ligatureList: new r.Pointer(r.uint32, new UnboundedArray(r.uint16))
    },
    4: {
      lookupTable: new LookupTable
    },
    5: {
      stateTable: new StateTable(InsertionData),
      insertionActions: new r.Pointer(r.uint32, new UnboundedArray(r.uint16))
    }
  });

  Subtable = new r.Struct({
    length: r.uint32,
    coverage: r.uint24,
    type: r.uint8,
    subFeatureFlags: r.uint32,
    table: SubtableData,
    padding: new r.Reserved(r.uint8, function() {
      return this.length - this._currentOffset;
    })
  });

  FeatureEntry = new r.Struct({
    featureType: r.uint16,
    featureSetting: r.uint16,
    enableFlags: r.uint32,
    disableFlags: r.uint32
  });

  MorxChain = new r.Struct({
    defaultFlags: r.uint32,
    chainLength: r.uint32,
    nFeatureEntries: r.uint32,
    nSubtables: r.uint32,
    features: new r.Array(FeatureEntry, 'nFeatureEntries'),
    subtables: new r.Array(Subtable, 'nSubtables')
  });

  module.exports = new r.Struct({
    version: r.uint16,
    unused: new r.Reserved(r.uint16),
    nChains: r.uint32,
    chains: new r.Array(MorxChain, 'nChains')
  });

}).call(this);

},{"./aat":174,"restructure":89}],193:[function(require,module,exports){
(function (Buffer){
// Generated by CoffeeScript 1.8.0
(function() {
  var ENCODINGS, LANGUAGES, LangTagRecord, NAMES, NameRecord, r;

  r = require('restructure');

  NameRecord = new r.Struct({
    platformID: r.uint16,
    encodingID: r.uint16,
    languageID: r.uint16,
    nameID: r.uint16,
    length: r.uint16,
    string: new r.Pointer(r.uint16, new r.String('length', function() {
      return ENCODINGS[this.platformID][this.encodingID];
    }), {
      type: 'parent',
      relativeTo: 'parent.stringOffset',
      allowNull: false
    })
  });

  LangTagRecord = new r.Struct({
    length: r.uint16,
    tag: new r.Pointer(r.uint16, new r.String('length', 'utf16be'), {
      type: 'parent',
      relativeTo: 'stringOffset'
    })
  });

  module.exports = new r.VersionedStruct(r.uint16, {
    0: {
      count: r.uint16,
      stringOffset: r.uint16,
      records: new r.Array(NameRecord, 'count')
    },
    1: {
      count: r.uint16,
      stringOffset: r.uint16,
      records: new r.Array(NameRecord, 'count'),
      langTagCount: r.uint16,
      langTags: new r.Array(LangTagRecord, 'langTagCount')
    }
  });

  NAMES = ['copyright', 'fontFamily', 'fontSubfamily', 'uniqueSubfamily', 'fullName', 'version', 'postscriptName', 'trademark', 'manufacturer', 'designer', 'description', 'vendorURL', 'designerURL', 'license', 'licenseURL', null, 'preferredFamily', 'preferredSubfamily', 'compatibleFull', 'sampleText', 'postscriptCIDFontName', 'wwsFamilyName', 'wwsSubfamilyName'];

  ENCODINGS = [['utf16be', 'utf16be', 'utf16be', 'utf16be', 'utf16be', 'utf16be'], ['macroman', 'shift-jis', 'big5', 'euc-kr', 'iso-8859-6', 'iso-8859-8', 'macgreek', 'maccyrillic', 'symbol', 'Devanagari', 'Gurmukhi', 'Gujarati', 'Oriya', 'Bengali', 'Tamil', 'Telugu', 'Kannada', 'Malayalam', 'Sinhalese', 'Burmese', 'Khmer', 'macthai', 'Laotian', 'Georgian', 'Armenian', 'gb-2312-80', 'Tibetan', 'Mongolian', 'Geez', 'maccyrillic', 'Vietnamese', 'Sindhi'], ['ascii'], ['symbol', 'utf16be', 'shift-jis', 'gb18030', 'big5', 'wansung', 'johab', null, null, null, 'ucs-4']];

  LANGUAGES = [
    [], {
      0: "English",
      59: "Pashto",
      1: "French",
      60: "Kurdish",
      2: "German",
      61: "Kashmiri",
      3: "Italian",
      62: "Sindhi",
      4: "Dutch",
      63: "Tibetan",
      5: "Swedish",
      64: "Nepali",
      6: "Spanish",
      65: "Sanskrit",
      7: "Danish",
      66: "Marathi",
      8: "Portuguese",
      67: "Bengali",
      9: "Norwegian",
      68: "Assamese",
      10: "Hebrew",
      69: "Gujarati",
      11: "Japanese",
      70: "Punjabi",
      12: "Arabic",
      71: "Oriya",
      13: "Finnish",
      72: "Malayalam",
      14: "Greek",
      73: "Kannada",
      15: "Icelandic",
      74: "Tamil",
      16: "Maltese",
      75: "Telugu",
      17: "Turkish",
      76: "Sinhalese",
      18: "Croatian",
      77: "Burmese",
      19: "Chinese (Traditional)",
      78: "Khmer",
      20: "Urdu",
      79: "Lao",
      21: "Hindi",
      80: "Vietnamese",
      22: "Thai",
      81: "Indonesian",
      23: "Korean",
      82: "Tagalong",
      24: "Lithuanian",
      83: "Malay (Roman script)",
      25: "Polish",
      84: "Malay (Arabic script)",
      26: "Hungarian",
      85: "Amharic",
      27: "Estonian",
      86: "Tigrinya",
      28: "Latvian",
      87: "Galla",
      29: "Sami",
      88: "Somali",
      30: "Faroese",
      89: "Swahili",
      31: "Farsi/Persian",
      90: "Kinyarwanda/Ruanda",
      32: "Russian",
      91: "Rundi",
      33: "Chinese (Simplified)",
      92: "Nyanja/Chewa",
      34: "Flemish",
      93: "Malagasy",
      35: "Irish Gaelic",
      94: "Esperanto",
      36: "Albanian",
      128: "Welsh",
      37: "Romanian",
      129: "Basque",
      38: "Czech",
      130: "Catalan",
      39: "Slovak",
      131: "Latin",
      40: "Slovenian",
      132: "Quenchua",
      41: "Yiddish",
      133: "Guarani",
      42: "Serbian",
      134: "Aymara",
      43: "Macedonian",
      135: "Tatar",
      44: "Bulgarian",
      136: "Uighur",
      45: "Ukrainian",
      137: "Dzongkha",
      46: "Byelorussian",
      138: "Javanese (Roman script)",
      47: "Uzbek",
      139: "Sundanese (Roman script)",
      48: "Kazakh",
      140: "Galician",
      49: "Azerbaijani (Cyrillic script)",
      141: "Afrikaans",
      50: "Azerbaijani (Arabic script)",
      142: "Breton",
      51: "Armenian",
      143: "Inuktitut",
      52: "Georgian",
      144: "Scottish Gaelic",
      53: "Moldavian",
      145: "Manx Gaelic",
      54: "Kirghiz",
      146: "Irish Gaelic (with dot above)",
      55: "Tajiki",
      147: "Tongan",
      56: "Turkmen",
      148: "Greek (polytonic)",
      57: "Mongolian (Mongolian script)",
      149: "Greenlandic",
      58: "Mongolian (Cyrillic script)",
      150: "Azerbaijani (Roman script)"
    }, [], {
      0x0436: "Afrikaans",
      0x0453: "Khmer",
      0x041C: "Albanian",
      0x0486: "K'iche",
      0x0484: "Alsatian",
      0x0487: "Kinyarwanda",
      0x045E: "Amharic",
      0x0441: "Kiswahili",
      0x1401: "Arabic",
      0x0457: "Konkani",
      0x3C01: "Arabic",
      0x0412: "Korean",
      0x0C01: "Arabic",
      0x0440: "Kyrgyz",
      0x0801: "Arabic",
      0x0454: "Lao",
      0x2C01: "Arabic",
      0x0426: "Latvian",
      0x3401: "Arabic",
      0x0427: "Lithuanian",
      0x3001: "Arabic",
      0x082E: "Lower Sorbian",
      0x1001: "Arabic",
      0x046E: "Luxembourgish",
      0x1801: "Arabic",
      0x042F: "Macedonian (FYROM)",
      0x2001: "Arabic",
      0x083E: "Malay",
      0x4001: "Arabic",
      0x043E: "Malay",
      0x0401: "Arabic",
      0x044C: "Malayalam",
      0x2801: "Arabic",
      0x043A: "Maltese",
      0x1C01: "Arabic",
      0x0481: "Maori",
      0x3801: "Arabic",
      0x047A: "Mapudungun",
      0x2401: "Arabic",
      0x044E: "Marathi",
      0x042B: "Armenian",
      0x047C: "Mohawk",
      0x044D: "Assamese",
      0x0450: "Mongolian (Cyrillic)",
      0x082C: "Azeri (Cyrillic)",
      0x0850: "Mongolian (Traditional)",
      0x042C: "Azeri (Latin)",
      0x0461: "Nepali",
      0x046D: "Bashkir",
      0x0414: "Norwegian (Bokmal)",
      0x042D: "Basque",
      0x0814: "Norwegian (Nynorsk)",
      0x0423: "Belarusian",
      0x0482: "Occitan",
      0x0845: "Bengali",
      0x0448: "Odia (formerly Oriya)",
      0x0445: "Bengali",
      0x0463: "Pashto",
      0x201A: "Bosnian (Cyrillic)",
      0x0415: "Polish",
      0x141A: "Bosnian (Latin)",
      0x0416: "Portuguese",
      0x047E: "Breton",
      0x0816: "Portuguese",
      0x0402: "Bulgarian",
      0x0446: "Punjabi",
      0x0403: "Catalan",
      0x046B: "Quechua",
      0x0C04: "Chinese",
      0x086B: "Quechua",
      0x1404: "Chinese",
      0x0C6B: "Quechua",
      0x0804: "Chinese",
      0x0418: "Romanian",
      0x1004: "Chinese",
      0x0417: "Romansh",
      0x0404: "Chinese",
      0x0419: "Russian",
      0x0483: "Corsican",
      0x243B: "Sami (Inari)",
      0x041A: "Croatian",
      0x103B: "Sami (Lule)",
      0x101A: "Croatian (Latin)",
      0x143B: "Sami (Lule)",
      0x0405: "Czech",
      0x0C3B: "Sami (Northern)",
      0x0406: "Danish",
      0x043B: "Sami (Northern)",
      0x048C: "Dari",
      0x083B: "Sami (Northern)",
      0x0465: "Divehi",
      0x203B: "Sami (Skolt)",
      0x0813: "Dutch",
      0x183B: "Sami (Southern)",
      0x0413: "Dutch",
      0x1C3B: "Sami (Southern)",
      0x0C09: "English",
      0x044F: "Sanskrit",
      0x2809: "English",
      0x1C1A: "Serbian (Cyrillic)",
      0x1009: "English",
      0x0C1A: "Serbian (Cyrillic)",
      0x2409: "English",
      0x181A: "Serbian (Latin)",
      0x4009: "English",
      0x081A: "Serbian (Latin)",
      0x1809: "English",
      0x046C: "Sesotho sa Leboa",
      0x2009: "English",
      0x0432: "Setswana",
      0x4409: "English",
      0x045B: "Sinhala",
      0x1409: "English",
      0x041B: "Slovak",
      0x3409: "English",
      0x0424: "Slovenian",
      0x4809: "English",
      0x2C0A: "Spanish",
      0x1C09: "English",
      0x400A: "Spanish",
      0x2C09: "English",
      0x340A: "Spanish",
      0x0809: "English",
      0x240A: "Spanish",
      0x0409: "English",
      0x140A: "Spanish",
      0x3009: "English",
      0x1C0A: "Spanish",
      0x0425: "Estonian",
      0x300A: "Spanish",
      0x0438: "Faroese",
      0x440A: "Spanish",
      0x0464: "Filipino",
      0x100A: "Spanish",
      0x040B: "Finnish",
      0x480A: "Spanish",
      0x080C: "French",
      0x080A: "Spanish",
      0x0C0C: "French",
      0x4C0A: "Spanish",
      0x040C: "French",
      0x180A: "Spanish",
      0x140c: "French",
      0x3C0A: "Spanish",
      0x180C: "French",
      0x280A: "Spanish",
      0x100C: "French",
      0x500A: "Spanish",
      0x0462: "Frisian",
      0x0C0A: "Spanish (Modern Sort)",
      0x0456: "Galician",
      0x040A: "Spanish (Traditional Sort)",
      0x0437: "Georgian",
      0x540A: "Spanish",
      0x0C07: "German",
      0x380A: "Spanish",
      0x0407: "German",
      0x200A: "Spanish",
      0x1407: "German",
      0x081D: "Sweden",
      0x1007: "German",
      0x041D: "Swedish",
      0x0807: "German",
      0x045A: "Syriac",
      0x0408: "Greek",
      0x0428: "Tajik (Cyrillic)",
      0x046F: "Greenlandic",
      0x085F: "Tamazight (Latin)",
      0x0447: "Gujarati",
      0x0449: "Tamil",
      0x0468: "Hausa (Latin)",
      0x0444: "Tatar",
      0x040D: "Hebrew",
      0x044A: "Telugu",
      0x0439: "Hindi",
      0x041E: "Thai",
      0x040E: "Hungarian",
      0x0451: "Tibetan",
      0x040F: "Icelandic",
      0x041F: "Turkish",
      0x0470: "Igbo",
      0x0442: "Turkmen",
      0x0421: "Indonesian",
      0x0480: "Uighur",
      0x045D: "Inuktitut",
      0x0422: "Ukrainian",
      0x085D: "Inuktitut (Latin)",
      0x042E: "Upper Sorbian",
      0x083C: "Irish",
      0x0420: "Urdu",
      0x0434: "isiXhosa",
      0x0843: "Uzbek (Cyrillic)",
      0x0435: "isiZulu",
      0x0443: "Uzbek (Latin)",
      0x0410: "Italian",
      0x042A: "Vietnamese",
      0x0810: "Italian",
      0x0452: "Welsh",
      0x0411: "Japanese",
      0x0488: "Wolof",
      0x044B: "Kannada",
      0x0485: "Yakut",
      0x043F: "Kazakh",
      0x0478: "Yi",
      0x046A: "Yoruba"
    }
  ];

  module.exports.process = function(stream) {
    var feature, key, language, record, records, _base, _i, _len, _ref;
    records = {};
    _ref = this.records;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      record = _ref[_i];
      language = LANGUAGES[record.platformID][record.languageID];
      if ((language == null) && (this.langTags != null) && record.languageID >= 0x8000) {
        language = this.langTags[record.languageID - 0x8000].tag;
      }
      if (language == null) {
        language = record.platformID + '-' + record.languageID;
      }
      if (record.nameID >= 256) {
        if (records.fontFeatures == null) {
          records.fontFeatures = {};
        }
        feature = (_base = records.fontFeatures)[language] != null ? _base[language] : _base[language] = {};
        feature[record.nameID] = record.string;
      } else {
        key = NAMES[record.nameID] || record.nameID;
        if (records[key] == null) {
          records[key] = {};
        }
        records[key][language] = record.string;
      }
    }
    return this.records = records;
  };

  module.exports.preEncode = function() {
    var key, records, val, _ref;
    if (Array.isArray(this.records)) {
      return;
    }
    this.version = 0;
    records = [];
    _ref = this.records;
    for (key in _ref) {
      val = _ref[key];
      if (key === 'fontFeatures') {
        continue;
      }
      records.push({
        platformID: 3,
        encodingID: 1,
        languageID: 0x409,
        nameID: NAMES.indexOf(key),
        length: Buffer.byteLength(val.English, 'utf16le'),
        string: val.English
      });
      if (key === 'postscriptName') {
        records.push({
          platformID: 1,
          encodingID: 0,
          languageID: 0,
          nameID: NAMES.indexOf(key),
          length: val.English.length,
          string: val.English
        });
      }
    }
    this.records = records;
    this.count = records.length;
    return this.stringOffset = module.exports.size(this, null, false);
  };

}).call(this);

}).call(this,require("buffer").Buffer)
},{"buffer":17,"restructure":89}],194:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var LookupTable, OpticalBounds, r;

  r = require('restructure');

  LookupTable = require('./aat').LookupTable;

  OpticalBounds = new r.Struct({
    left: r.int16,
    top: r.int16,
    right: r.int16,
    bottom: r.int16
  });

  module.exports = new r.Struct({
    version: r.fixed32,
    format: r.uint16,
    lookupTable: new LookupTable(OpticalBounds)
  });

}).call(this);

},{"./aat":174,"restructure":89}],195:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var ClassRangeRecord, Feature, FeatureRecord, LangSysRecord, LangSysTable, LookupFlags, RangeRecord, Script, ScriptRecord, r;

  r = require('restructure');

  LangSysTable = new r.Struct({
    reserved: new r.Reserved(r.uint16),
    reqFeatureIndex: r.uint16,
    featureCount: r.uint16,
    featureIndexes: new r.Array(r.uint16, 'featureCount')
  });

  LangSysRecord = new r.Struct({
    tag: new r.String(4),
    langSys: new r.Pointer(r.uint16, LangSysTable, {
      type: 'parent'
    })
  });

  Script = new r.Struct({
    defaultLangSys: new r.Pointer(r.uint16, LangSysTable),
    count: r.uint16,
    langSysRecords: new r.Array(LangSysRecord, 'count')
  });

  ScriptRecord = new r.Struct({
    tag: new r.String(4),
    script: new r.Pointer(r.uint16, Script, {
      type: 'parent'
    })
  });

  exports.ScriptList = new r.Array(ScriptRecord, r.uint16);

  Feature = new r.Struct({
    featureParams: r.uint16,
    lookupCount: r.uint16,
    lookupListIndexes: new r.Array(r.uint16, 'lookupCount')
  });

  FeatureRecord = new r.Struct({
    tag: new r.String(4),
    feature: new r.Pointer(r.uint16, Feature, {
      type: 'parent'
    })
  });

  exports.FeatureList = new r.Array(FeatureRecord, r.uint16);

  LookupFlags = new r.Bitfield(r.uint16, ['rightToLeft', 'ignoreBaseGlyphs', 'ignoreLigatures', 'ignoreMarks', 'useMarkFilteringSet', null, 'markAttachmentType']);

  exports.LookupList = function(SubTable) {
    var Lookup;
    Lookup = new r.Struct({
      lookupType: r.uint16,
      flags: LookupFlags,
      subTableCount: r.uint16,
      subTables: new r.Array(new r.Pointer(r.uint16, SubTable), 'subTableCount'),
      markFilteringSet: r.uint16
    });
    return new r.Array(new r.Pointer(r.uint16, Lookup), r.uint16);
  };

  RangeRecord = new r.Struct({
    start: r.uint16,
    end: r.uint16,
    startCoverageIndex: r.uint16
  });

  exports.Coverage = new r.VersionedStruct(r.uint16, {
    1: {
      glyphCount: r.uint16,
      glyphs: new r.Array(r.uint16, 'glyphCount')
    },
    2: {
      rangeCount: r.uint16,
      rangeRecords: new r.Array(RangeRecord, 'rangeCount')
    }
  });

  ClassRangeRecord = new r.Struct({
    start: r.uint16,
    end: r.uint16,
    "class": r.uint16
  });

  exports.ClassDef = new r.VersionedStruct(r.uint16, {
    1: {
      startGlyph: r.uint16,
      glyphCount: r.uint16,
      classValueArray: new r.Array(r.uint16, 'glyphCount')
    },
    2: {
      classRangeCount: r.uint16,
      classRangeRecord: new r.Array(ClassRangeRecord, 'classRangeCount')
    }
  });

  exports.Device = new r.Struct({
    startSize: r.uint16,
    endSize: r.uint16,
    deltaFormat: r.uint16
  });

}).call(this);

},{"restructure":89}],196:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var r;

  r = require('restructure');

  module.exports = new r.VersionedStruct(r.int32, {
    header: {
      italicAngle: r.fixed32,
      underlinePosition: r.int16,
      underlineThickness: r.int16,
      isFixedPitch: r.uint32,
      minMemType42: r.uint32,
      maxMemType42: r.uint32,
      minMemType1: r.uint32,
      maxMemType1: r.uint32
    },
    0x00010000: {},
    0x00020000: {
      numberOfGlyphs: r.uint16,
      glyphNameIndex: new r.Array(r.uint16, 'numberOfGlyphs'),
      names: new r.Array(new r.String(r.uint8))
    },
    0x00025000: {
      numberOfGlyphs: r.uint16,
      offsets: new r.Array(r.uint8, 'numberOfGlyphs')
    },
    0x00030000: {},
    0x00040000: {
      map: new r.Array(r.uint32, function() {
        return this.parent.maxp.numGlyphs;
      })
    }
  });

}).call(this);

},{"restructure":89}],197:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var r;

  r = require('restructure');

  module.exports = new r.Struct({
    controlValueProgram: new r.Array(r.uint8)
  });

}).call(this);

},{"restructure":89}],198:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var ImageTable, r;

  r = require('restructure');

  ImageTable = new r.Struct({
    ppem: r.uint16,
    resolution: r.uint16,
    imageOffsets: new r.Array(new r.Pointer(r.uint32, 'void'), function() {
      return this.parent.parent.maxp.numGlyphs + 1;
    })
  });

  module.exports = new r.Struct({
    version: r.uint16,
    flags: new r.Bitfield(r.uint16, ['renderOutlines']),
    numImgTables: r.uint32,
    imageTables: new r.Array(new r.Pointer(r.uint32, ImageTable), 'numImgTables')
  });

}).call(this);

},{"restructure":89}],199:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var r;

  r = require('restructure');

  module.exports = new r.Struct({
    version: r.uint16,
    ascent: r.int16,
    descent: r.int16,
    lineGap: r.int16,
    advanceHeightMax: r.int16,
    minTopSideBearing: r.int16,
    minBottomSideBearing: r.int16,
    yMaxExtent: r.int16,
    caretSlopeRise: r.int16,
    caretSlopeRun: r.int16,
    caretOffset: r.int16,
    reserved: new r.Reserved(r.int16, 4),
    metricDataFormat: r.int16,
    numberOfMetrics: r.uint16
  });

}).call(this);

},{"restructure":89}],200:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var VmtxEntry, r;

  r = require('restructure');

  VmtxEntry = new r.Struct({
    advanceHeight: r.uint16,
    topSideBearing: r.int16
  });

  module.exports = new r.Struct({
    metrics: new r.Array(VmtxEntry, function() {
      return this.parent.vhea.numberOfMetrics;
    }),
    topSideBearings: new r.Array(r.int16, function() {
      return this.parent.maxp.numGlyphs - this.parent.vhea.numberOfMetrics;
    })
  });

}).call(this);

},{"restructure":89}],201:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
var UnicodeTrie,
  __slice = [].slice;

UnicodeTrie = (function() {
  var DATA_BLOCK_LENGTH, DATA_GRANULARITY, DATA_MASK, INDEX_1_OFFSET, INDEX_2_BLOCK_LENGTH, INDEX_2_BMP_LENGTH, INDEX_2_MASK, INDEX_SHIFT, LSCP_INDEX_2_LENGTH, LSCP_INDEX_2_OFFSET, OMITTED_BMP_INDEX_1_LENGTH, SHIFT_1, SHIFT_1_2, SHIFT_2, UTF8_2B_INDEX_2_LENGTH, UTF8_2B_INDEX_2_OFFSET;

  SHIFT_1 = 6 + 5;

  SHIFT_2 = 5;

  SHIFT_1_2 = SHIFT_1 - SHIFT_2;

  OMITTED_BMP_INDEX_1_LENGTH = 0x10000 >> SHIFT_1;

  INDEX_2_BLOCK_LENGTH = 1 << SHIFT_1_2;

  INDEX_2_MASK = INDEX_2_BLOCK_LENGTH - 1;

  INDEX_SHIFT = 2;

  DATA_BLOCK_LENGTH = 1 << SHIFT_2;

  DATA_MASK = DATA_BLOCK_LENGTH - 1;

  LSCP_INDEX_2_OFFSET = 0x10000 >> SHIFT_2;

  LSCP_INDEX_2_LENGTH = 0x400 >> SHIFT_2;

  INDEX_2_BMP_LENGTH = LSCP_INDEX_2_OFFSET + LSCP_INDEX_2_LENGTH;

  UTF8_2B_INDEX_2_OFFSET = INDEX_2_BMP_LENGTH;

  UTF8_2B_INDEX_2_LENGTH = 0x800 >> 6;

  INDEX_1_OFFSET = UTF8_2B_INDEX_2_OFFSET + UTF8_2B_INDEX_2_LENGTH;

  DATA_GRANULARITY = 1 << INDEX_SHIFT;

  function UnicodeTrie(json) {
    var _ref, _ref1;
    if (json == null) {
      json = {};
    }
    this.data = json.data || [];
    this.highStart = (_ref = json.highStart) != null ? _ref : 0;
    this.errorValue = (_ref1 = json.errorValue) != null ? _ref1 : -1;
  }

  UnicodeTrie.prototype.get = function(codePoint) {
    var index;
    if (codePoint < 0 || codePoint > 0x10ffff) {
      return this.errorValue;
    }
    if (codePoint < 0xd800 || (codePoint > 0xdbff && codePoint <= 0xffff)) {
      index = (this.data[codePoint >> SHIFT_2] << INDEX_SHIFT) + (codePoint & DATA_MASK);
      return this.data[index];
    }
    if (codePoint <= 0xffff) {
      index = (this.data[LSCP_INDEX_2_OFFSET + ((codePoint - 0xd800) >> SHIFT_2)] << INDEX_SHIFT) + (codePoint & DATA_MASK);
      return this.data[index];
    }
    if (codePoint < this.highStart) {
      index = this.data[(INDEX_1_OFFSET - OMITTED_BMP_INDEX_1_LENGTH) + (codePoint >> SHIFT_1)];
      index = this.data[index + ((codePoint >> SHIFT_2) & INDEX_2_MASK)];
      index = (index << INDEX_SHIFT) + (codePoint & DATA_MASK);
      return this.data[index];
    }
    return this.data[this.data.length - DATA_GRANULARITY];
  };

  UnicodeTrie.prototype.toJSON = function() {
    var res;
    res = {
      data: __slice.call(this.data),
      highStart: this.highStart,
      errorValue: this.errorValue
    };
    return res;
  };

  return UnicodeTrie;

})();

module.exports = UnicodeTrie;

},{}],202:[function(require,module,exports){
module.exports={"data":[1961,1969,1977,1985,2025,2033,2041,2049,2057,2065,2073,2081,2089,2097,2105,2113,2121,2129,2137,2145,2153,2161,2169,2177,2185,2193,2201,2209,2217,2225,2233,2241,2249,2257,2265,2273,2281,2289,2297,2305,2313,2321,2329,2337,2345,2353,2361,2369,2377,2385,2393,2401,2409,2417,2425,2433,2441,2449,2457,2465,2473,2481,2489,2497,2505,2513,2521,2529,2529,2537,2009,2545,2553,2561,2569,2577,2585,2593,2601,2609,2617,2625,2633,2641,2649,2657,2665,2673,2681,2689,2697,2705,2713,2721,2729,2737,2745,2753,2761,2769,2777,2785,2793,2801,2809,2817,2825,2833,2841,2849,2857,2865,2873,2881,2889,2009,2897,2905,2913,2009,2921,2929,2937,2945,2953,2961,2969,2009,2977,2977,2985,2993,3001,3009,3009,3009,3017,3017,3017,3025,3025,3033,3041,3041,3049,3049,3049,3049,3049,3049,3049,3049,3049,3049,3057,3065,3073,3073,3073,3081,3089,3097,3097,3097,3097,3097,3097,3097,3097,3097,3097,3097,3097,3097,3097,3097,3097,3097,3097,3097,3105,3113,3113,3121,3129,3137,3145,3153,3161,3161,3169,3177,3185,3193,3193,3193,3193,3201,3209,3209,3217,3225,3233,3241,3241,3241,3249,3257,3265,3273,3273,3281,3289,3297,2009,2009,3305,3313,3321,3329,3337,3345,3353,3361,3369,3377,3385,3393,2009,2009,3401,3409,3417,3417,3417,3417,3417,3417,3425,3425,3433,3433,3433,3433,3433,3433,3433,3433,3433,3433,3433,3433,3433,3433,3433,3441,3449,3457,3465,3473,3481,3489,3497,3505,3513,3521,3529,3537,3545,3553,3561,3569,3577,3585,3593,3601,3609,3617,3625,3625,3633,3641,3649,3649,3649,3649,3649,3657,3665,3665,3673,3681,3681,3681,3681,3689,3697,3697,3705,3713,3721,3729,3737,3745,3753,3761,3769,3777,3785,3793,3801,3809,3817,3825,3833,3841,3849,3857,3865,3873,3881,3881,3881,3881,3881,3881,3881,3881,3881,3881,3881,3881,3889,3897,3905,3913,3921,3921,3921,3921,3921,3921,3921,3921,3921,3921,3929,2009,2009,2009,2009,2009,3937,3937,3937,3937,3937,3937,3937,3945,3953,3953,3953,3961,3969,3969,3977,3985,3993,4001,2009,2009,4009,4009,4009,4009,4009,4009,4009,4009,4009,4009,4009,4009,4017,4025,4033,4041,4049,4057,4065,4073,4081,4081,4081,4081,4081,4081,4081,4089,4097,4097,4105,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4113,4121,4121,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4129,4137,4145,4145,4145,4145,4145,4145,4145,4145,4145,4145,4145,4145,4145,4145,4145,4145,4145,4145,4145,4145,4145,4145,4145,4145,4145,4145,4145,4145,4145,4145,4145,4145,4145,4145,4145,4145,4145,4153,4161,4169,4169,4169,4169,4169,4169,4169,4169,4177,4185,4193,4201,4209,4217,4217,4225,4233,4233,4233,4233,4233,4233,4233,4233,4241,4249,4257,4265,4273,4281,4289,4297,4305,4313,4321,4329,4337,4345,4353,4361,4361,4369,4377,4385,4385,4385,4385,4393,4401,4409,4409,4409,4409,4409,4409,4417,4425,4433,4441,4449,4457,4465,4473,4481,4489,4497,4505,4513,4521,4529,4537,4545,4553,4561,4569,4577,4585,4593,4601,4609,4617,4625,4633,4641,4649,4657,4665,4673,4681,4689,4697,4705,4713,4721,4729,4737,4745,4753,4761,4769,4777,4785,4793,4801,4809,4817,4825,4833,4841,4849,4857,4865,4873,4881,4889,4897,4905,4913,4921,4929,4937,4945,4953,4961,4969,4977,4985,4993,5001,5009,5017,5025,5033,5041,5049,5057,5065,5073,5081,5089,5097,5105,5113,5121,5129,5137,5145,5153,5161,5169,5177,5185,5193,5201,5209,5217,5225,5233,5241,5249,5257,5265,5273,5281,5289,5297,5305,5313,5321,5329,5337,5345,5353,5361,5369,5377,5385,5393,5401,5409,5417,5425,5433,5441,5449,5457,5465,5473,5481,5489,5497,5505,5513,5521,5529,5537,5545,5553,5561,5569,5577,5585,5593,5601,5609,5617,5625,5633,5641,5649,5657,5665,5673,5681,5689,5697,5705,5713,5721,5729,5737,5745,5753,5761,5769,5777,5785,5793,5801,5809,5817,5825,5833,5841,5849,5857,5865,5873,5881,5889,5897,5905,5913,5921,5929,5937,5945,5953,5961,5969,5977,5985,5993,6001,6009,6017,6025,6033,6041,6049,6057,6065,6073,6081,6089,6097,6105,6113,6121,6129,6137,6145,6153,6161,6169,6177,6185,6193,6201,6209,6217,6225,6233,6241,6249,6257,6265,6273,6281,6289,6297,6305,6313,6321,6329,6337,6345,6353,6361,6369,6377,6385,6393,6401,6409,6417,6425,6433,6441,6449,6457,6465,6473,6481,6489,6497,6505,6513,6521,6529,6537,6545,6553,6561,6569,6577,6585,6593,6601,6609,6617,6625,6633,6641,6649,6657,6665,6673,6681,6689,6697,6705,6713,6721,6729,6737,6745,6753,6761,6769,6777,6785,6793,6801,6809,6817,6825,6833,6841,6849,6857,6865,6873,6881,6889,6897,6905,6913,6921,6929,6937,6945,6953,6961,6969,6977,6985,6993,7001,7009,7017,7025,7033,7041,7049,7057,7065,7073,7081,7089,7097,7105,7113,7121,7129,7137,7145,7153,7161,7169,7177,7185,7193,7201,7209,7217,7225,7233,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,7249,7249,7249,7249,7249,7249,7249,7249,7249,7249,7249,7249,7249,7249,7249,7249,7257,7265,7273,7281,7281,7281,7281,7281,7281,7281,7281,7281,7281,7281,7281,7281,7281,7289,7297,7305,7305,7305,7305,7313,7321,7329,7337,7345,7353,7353,7353,7361,7369,7377,7385,7393,7401,7409,7417,7425,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7241,7972,7972,8100,8164,8228,8292,8356,8420,8484,8548,8612,8676,8740,8804,8868,8932,8996,9060,9124,9188,9252,9316,9380,9444,9508,9572,9636,9700,9764,9828,9892,9956,2593,2657,2721,2529,2785,2529,2849,2913,2977,3041,3105,3169,3233,3297,2529,2529,2529,2529,2529,2529,2529,2529,3361,2529,2529,2529,3425,2529,2529,3489,3553,2529,3617,3681,3745,3809,3873,3937,4001,4065,4129,4193,4257,4321,4385,4449,4513,4577,4641,4705,4769,4833,4897,4961,5025,5089,5153,5217,5281,5345,5409,5473,5537,5601,5665,5729,5793,5857,5921,5985,6049,6113,6177,6241,6305,6369,6433,6497,6561,6625,6689,6753,6817,6881,6945,7009,7073,7137,7201,7265,7329,7393,7457,7521,7585,7649,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,2529,7713,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,7433,7433,7433,7433,7433,7433,7433,7441,7449,7457,7457,7457,7457,7457,7457,7465,2009,2009,2009,2009,7473,7473,7473,7473,7473,7473,7473,7473,7481,7489,7497,7505,7505,7505,7505,7505,7513,7521,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,7529,7529,7537,7545,7545,7545,7545,7545,7553,7561,7561,7561,7561,7561,7561,7561,7569,7577,7585,7593,7593,7593,7593,7593,7593,7601,7609,7609,7609,7609,7609,7609,7609,7609,7609,7609,7609,7609,7609,7609,7609,7609,7609,7609,7609,7609,7609,7609,7609,7609,7609,7617,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,7625,7633,7641,7649,7657,7665,7673,7681,7689,7697,7705,2009,7713,7721,7729,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,7737,7745,7753,2009,2009,2009,2009,2009,2009,2009,2009,2009,7761,7761,7761,7761,7761,7761,7761,7761,7761,7761,7761,7761,7761,7761,7761,7761,7761,7761,7761,7761,7761,7761,7761,7761,7761,7761,7761,7761,7761,7761,7761,7761,7761,7761,7761,7769,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,7777,7777,7777,7777,7777,7777,7777,7777,7777,7777,7777,7777,7777,7777,7777,7777,7777,7777,7785,7793,7801,7809,7809,7809,7809,7809,7809,7817,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7825,7833,7841,7849,2009,2009,2009,7857,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,7865,7865,7865,7865,7865,7865,7865,7865,7865,7865,7865,7873,7881,7889,7897,7897,7897,7897,7905,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7913,7921,7929,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,7937,7937,7937,7937,7937,7937,7937,7945,2009,2009,2009,2009,2009,2009,2009,2009,7953,7953,7953,7953,7953,7953,7953,2009,7961,7969,7977,7985,7993,2009,2009,8001,8009,8009,8009,8009,8009,8009,8009,8009,8009,8009,8009,8009,8009,8017,8025,8025,8025,8025,8025,8025,8025,8033,8041,8049,8057,8065,8073,8081,8081,8081,8081,8081,8081,8081,8081,8081,8081,8081,8089,2009,8097,8097,8097,8105,2009,2009,2009,2009,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8113,8121,8129,8137,8137,8137,8137,8137,8137,8137,8137,8137,8137,8137,8137,8137,8137,8145,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,2009,67496,67496,67496,21,21,21,21,21,21,21,21,21,17,34,30,30,33,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,38,6,3,12,9,10,12,3,0,2,12,9,8,16,8,7,11,11,11,11,11,11,11,11,11,11,8,8,12,12,12,6,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,9,2,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,17,1,12,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,21,21,21,21,21,35,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,4,0,10,9,9,9,12,29,29,12,29,3,12,17,12,12,10,9,29,29,18,12,29,29,29,29,29,3,29,29,29,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,29,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,29,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,29,18,29,29,29,18,29,12,12,29,12,12,12,12,12,12,12,29,29,29,29,12,29,12,18,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,4,21,21,21,21,21,21,21,21,21,21,21,21,4,4,4,4,4,4,4,21,21,21,21,21,21,21,21,21,21,21,21,21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,8,39,39,39,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,21,21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,8,17,39,39,39,39,9,39,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,17,21,12,21,21,12,21,21,6,21,39,39,39,39,39,39,39,39,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,10,10,10,8,8,12,12,21,21,21,21,21,21,21,21,21,21,21,6,6,6,6,6,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,11,11,11,11,11,11,11,11,11,11,10,11,11,12,12,12,21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,6,12,21,21,21,21,21,21,21,12,12,21,21,21,21,21,21,12,12,21,21,12,21,21,21,21,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,21,21,21,21,21,21,12,39,39,39,39,39,39,39,39,39,39,39,39,39,39,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,21,21,21,21,12,12,12,12,8,6,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,12,21,21,21,21,21,21,21,21,21,12,21,21,21,12,21,21,21,21,21,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,12,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,12,21,21,21,21,21,21,21,12,12,12,12,12,12,12,12,12,12,21,21,17,17,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,21,21,21,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,39,21,12,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,12,39,39,39,39,39,39,39,39,21,39,39,39,39,12,12,12,12,12,12,21,21,39,39,11,11,11,11,11,11,11,11,11,11,12,12,10,10,12,12,12,12,12,10,12,9,39,39,39,39,39,21,21,21,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,39,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,39,39,39,39,39,39,39,12,12,12,12,12,12,39,39,39,39,39,39,39,11,11,11,11,11,11,11,11,11,11,21,21,12,12,12,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,39,21,12,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,39,39,11,11,11,11,11,11,11,11,11,11,12,9,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,21,21,21,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,39,21,12,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,39,39,39,39,12,12,12,12,12,12,21,21,39,39,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,39,39,39,39,39,39,39,39,39,39,21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,39,39,39,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,39,39,12,39,39,39,39,39,39,21,39,39,39,39,39,39,39,39,39,39,39,39,39,39,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,9,12,39,39,39,39,39,39,21,21,21,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,39,12,12,12,12,12,12,12,12,12,12,21,21,39,39,11,11,11,11,11,11,11,11,11,11,39,39,39,39,39,39,39,39,12,12,12,12,12,12,12,12,39,39,21,21,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,39,21,12,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,39,39,39,39,39,39,39,12,12,12,12,21,21,39,39,11,11,11,11,11,11,11,11,11,11,39,12,12,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,21,21,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,12,39,39,39,39,39,39,39,39,21,39,39,39,39,39,39,39,39,12,12,21,21,39,39,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,39,39,39,10,12,12,12,12,12,12,39,39,21,21,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,39,39,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,12,39,39,39,39,39,39,39,39,39,39,39,39,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,39,39,39,39,9,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,12,11,11,11,11,11,11,11,11,11,11,17,17,39,39,39,39,39,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,39,39,11,11,11,11,11,11,11,11,11,11,39,39,36,36,36,36,12,18,18,18,18,12,18,18,4,18,18,17,4,6,6,6,6,6,4,12,6,12,12,12,21,21,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,17,21,12,21,12,21,0,1,0,1,21,21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,39,39,39,21,21,21,21,21,21,21,21,21,21,21,21,21,21,17,21,21,21,21,21,17,21,21,12,12,12,12,12,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,39,17,17,12,12,12,12,12,12,21,12,12,12,12,12,12,12,12,12,18,18,17,18,12,12,12,12,12,4,4,39,39,39,39,39,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,11,11,11,11,11,11,11,11,11,11,17,17,12,12,12,12,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,11,11,11,11,11,11,11,11,11,11,36,36,36,36,36,36,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,39,21,21,21,12,17,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,39,39,39,39,39,39,39,39,39,39,17,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,17,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,1,39,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,17,17,17,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,39,39,39,39,39,39,39,39,39,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,17,17,39,39,39,39,39,39,39,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,39,39,39,39,39,39,39,39,39,39,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,21,21,39,39,39,39,39,39,39,39,39,39,39,39,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,17,17,5,36,17,12,17,9,36,36,39,39,11,11,11,11,11,11,11,11,11,11,39,39,39,39,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,6,6,17,17,18,12,6,6,12,21,21,21,4,39,11,11,11,11,11,11,11,11,11,11,39,39,39,39,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,39,39,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,39,39,39,39,12,39,39,39,6,6,11,11,11,11,11,11,11,11,11,11,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,39,39,39,39,39,39,11,11,11,11,11,11,11,11,11,11,36,36,36,36,36,36,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,39,39,12,12,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,39,39,21,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,39,39,39,39,39,39,36,36,36,36,36,36,36,36,36,36,36,36,36,36,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,21,21,21,21,21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,12,12,12,12,12,12,12,39,39,39,39,11,11,11,11,11,11,11,11,11,11,17,17,12,17,17,17,17,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,21,21,21,21,12,12,12,12,12,12,12,12,12,39,39,39,21,21,21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,21,21,21,21,21,21,21,21,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,21,21,21,21,21,21,21,21,21,39,39,39,39,39,39,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,39,39,39,17,17,17,17,17,11,11,11,11,11,11,11,11,11,11,39,39,39,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,17,17,12,12,12,12,12,12,12,12,39,39,39,39,39,39,39,39,21,21,21,12,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,12,12,12,12,21,12,12,12,12,21,21,21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,18,12,39,17,17,17,17,17,17,17,4,17,17,17,20,21,21,21,21,17,4,17,17,19,29,29,12,3,3,0,3,3,3,0,3,29,29,12,12,15,15,15,17,30,30,21,21,21,21,21,4,10,10,10,10,10,10,10,10,12,3,3,29,5,5,12,12,12,12,12,12,8,0,1,5,5,5,12,12,12,12,12,12,12,12,12,12,12,12,17,12,17,17,17,17,12,17,17,17,22,12,12,12,12,39,39,39,39,39,21,21,21,21,21,21,12,12,39,39,29,12,12,12,12,12,12,12,12,0,1,29,12,29,29,29,29,12,12,12,12,12,12,12,12,0,1,39,12,12,12,12,12,12,12,12,12,12,12,12,12,39,39,39,9,9,9,9,9,9,9,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,9,9,9,9,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,12,12,12,10,12,29,12,12,12,10,12,12,12,12,12,12,12,12,12,29,12,12,9,12,12,12,12,12,12,12,12,12,12,29,29,12,12,12,12,12,12,12,12,29,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,29,29,12,12,12,12,12,29,12,12,29,12,29,29,29,29,29,29,29,29,29,29,29,29,12,12,12,12,29,29,29,29,29,29,29,29,29,29,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,29,12,29,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,29,12,29,29,12,12,12,29,29,12,12,29,12,12,12,29,12,29,9,9,12,29,12,12,12,12,29,12,12,29,29,29,29,12,12,29,12,29,12,29,29,29,29,29,29,12,29,12,12,12,12,12,29,29,29,29,12,12,12,12,29,29,12,12,12,12,12,12,12,12,12,12,29,12,12,12,29,12,12,12,12,12,29,12,12,12,12,12,12,12,12,12,12,12,12,12,29,29,12,12,29,29,29,29,12,12,29,29,12,12,29,29,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,29,29,12,12,29,29,12,12,12,12,12,12,12,12,12,12,12,12,12,29,12,12,12,29,12,12,12,12,12,12,12,12,12,12,12,29,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,29,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,29,12,12,12,12,12,12,12,14,14,12,12,12,12,12,12,12,12,12,12,12,12,12,0,1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,14,14,14,14,39,39,39,39,39,39,39,39,39,39,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,12,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,12,12,12,12,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,12,12,12,12,12,12,12,12,12,12,12,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,12,12,29,29,29,29,12,12,12,12,12,12,12,12,12,12,29,29,12,29,29,29,29,29,29,29,12,12,12,12,12,12,12,12,29,29,12,12,29,29,12,12,12,12,29,29,12,12,29,29,12,12,12,12,29,29,29,12,12,29,12,12,29,29,29,29,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,29,29,29,29,12,12,12,12,12,12,12,12,12,29,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,14,14,14,14,12,29,29,12,12,29,12,12,12,12,29,29,12,12,12,12,14,14,29,29,14,12,14,14,14,14,14,14,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,14,14,14,12,12,12,12,29,12,29,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,29,29,12,29,29,29,12,29,14,29,29,12,29,29,12,29,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,14,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,29,29,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,14,14,14,14,14,14,14,14,14,14,14,14,29,29,29,29,14,12,14,14,14,29,14,14,29,29,29,14,14,29,29,14,29,29,14,14,14,12,29,12,12,12,12,29,29,14,29,29,29,29,29,29,14,14,14,14,14,29,14,14,14,14,29,29,14,14,14,14,14,14,14,14,12,12,12,14,14,14,14,14,14,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,29,12,12,12,3,3,3,3,12,12,12,6,6,12,12,12,12,0,1,0,1,0,1,0,1,0,1,0,1,0,1,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,1,0,1,0,1,0,1,0,1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,1,0,1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,29,29,29,29,29,39,39,39,39,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,12,12,39,39,39,39,39,6,17,17,17,12,6,17,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,17,39,39,39,39,39,39,39,39,39,39,39,39,39,39,21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,3,3,3,3,3,3,3,3,3,3,3,3,3,3,17,17,17,17,17,17,17,17,12,17,0,17,12,12,3,3,12,12,3,3,0,1,0,1,0,1,0,1,17,17,17,17,6,12,17,17,12,17,17,12,12,12,12,12,19,19,39,39,39,39,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1,1,14,14,5,14,14,0,1,0,1,0,1,0,1,0,1,14,14,0,1,0,1,0,1,0,1,5,0,1,1,14,14,14,14,14,14,14,14,14,14,21,21,21,21,21,21,14,14,14,14,14,14,14,14,14,14,14,5,5,14,14,14,39,32,14,32,14,32,14,32,14,32,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,32,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,32,14,32,14,32,14,14,14,14,14,14,32,14,14,14,14,14,14,32,32,39,39,21,21,5,5,5,5,14,5,32,14,32,14,32,14,32,14,32,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,32,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,32,14,32,14,32,14,14,14,14,14,14,32,14,14,14,14,14,14,32,32,14,14,14,14,5,32,5,5,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,39,39,39,39,39,39,39,39,39,39,39,39,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,29,29,29,29,29,29,29,29,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,5,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,39,39,39,39,39,39,39,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,17,17,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,17,6,17,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,12,21,21,21,21,21,21,21,21,21,21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,39,39,39,39,39,39,21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,12,17,17,17,17,17,39,39,39,39,39,39,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,12,12,12,21,12,12,12,12,21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,10,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,18,18,6,6,39,39,39,39,39,39,39,39,21,21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,39,39,39,39,39,39,39,39,39,17,17,11,11,11,11,11,11,11,11,11,11,39,39,39,39,39,39,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,12,12,12,12,12,12,12,12,12,12,39,39,39,39,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,21,21,21,17,17,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,21,21,21,21,21,21,21,21,39,39,39,39,39,39,39,39,39,39,39,12,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,39,39,39,21,21,21,21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,21,21,21,21,21,21,21,21,21,12,12,12,12,12,12,17,17,17,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,39,39,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,21,21,21,21,21,21,21,21,21,39,39,39,39,39,39,39,39,39,12,12,12,21,12,12,12,12,12,12,12,12,21,21,39,39,11,11,11,11,11,11,11,11,11,11,39,39,12,17,17,17,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,17,17,12,12,12,21,21,39,39,39,39,39,39,39,39,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,21,21,21,17,21,21,39,39,11,11,11,11,11,11,11,11,11,11,39,39,39,39,39,39,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,39,39,39,39,39,39,39,39,39,39,39,39,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,39,39,39,39,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,39,39,39,39,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,39,39,39,39,13,21,13,13,13,13,13,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,1,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,10,12,39,39,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,8,1,1,8,8,6,6,0,1,15,39,39,39,39,39,39,21,21,21,21,21,21,21,39,39,39,39,39,39,39,39,39,14,14,14,14,14,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,14,14,0,1,14,14,14,14,14,14,14,1,14,1,39,5,5,6,6,14,0,1,0,1,0,1,14,14,14,14,14,14,14,14,14,14,9,10,14,39,39,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,39,22,39,6,14,14,9,10,14,14,0,1,14,14,1,14,1,14,14,14,14,14,14,14,14,14,14,14,5,5,14,14,14,6,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,1,14,0,1,1,0,1,1,5,12,32,32,32,32,32,32,32,32,32,32,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,5,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,39,39,10,9,14,14,14,9,9,39,12,12,12,12,12,12,12,39,39,39,39,39,39,39,39,39,39,21,21,21,31,29,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,39,39,39,39,17,17,17,39,39,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,17,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,17,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,39,11,11,11,11,11,11,11,11,11,11,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,17,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,39,39,17,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,39,39,39,21,21,21,21,21,21,21,21,12,12,12,12,12,12,12,12,39,39,39,39,39,39,39,39,17,17,17,17,17,17,17,17,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,39,39,17,17,17,17,17,17,17,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,21,21,21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,17,17,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,21,21,21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,21,21,21,21,21,21,12,12,12,17,17,17,17,39,39,39,39,39,39,39,39,39,39,39,39,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,39,39,39,39,39,39,11,11,11,11,11,11,11,11,11,11,39,39,39,39,39,39,21,21,21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,21,21,21,21,21,21,21,21,21,39,11,11,11,11,11,11,11,11,11,11,17,17,17,17,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,21,21,21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,21,21,21,21,21,21,21,21,21,12,12,12,12,17,17,12,17,39,39,39,39,39,39,39,11,11,11,11,11,11,11,11,11,11,39,39,39,39,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,21,21,21,21,21,21,21,21,39,39,39,39,39,39,39,39,11,11,11,11,11,11,11,11,11,11,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,39,39,39,39,39,39,39,39,39,39,39,39,17,17,17,17,39,39,39,39,39,39,39,39,39,39,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,1,1,1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,1,12,12,12,0,1,0,1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,1,1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,12,12,12,12,12,12,12,12,12,12,12,12,12,14,14,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,12,12,12,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,12,12,21,21,21,21,21,21,21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,39,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,39,39,39,39,39,39,39,39,39,39,39,39,39,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,12,39,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,12,12,39,39,39,39,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,39,39,39,39,39,39,39,39,39,39,39,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,12,12,14,14,14,14,14,12,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,12,14,12,14,12,14,14,14,14,14,14,14,14,14,14,12,14,12,12,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,39,39,39,12,12,12,12,12,12,12,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,12,12,12,12,12,12,12,12,12,12,12,12,12,12,14,14,14,14,14,14,14,14,14,14,14,14,14,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,39,39,39,39,39,39,39,39,39,39,39,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,39,39,39,39,39,39,39,39,39,39,39,39,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,39,39,39,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39],"highStart":919552,"errorValue":0}
},{}],203:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
(function() {
  var AI, AL, B2, BA, BB, BK, CB, CJ, CL, CM, CP, CR, EX, GL, H2, H3, HL, HY, ID, IN, IS, JL, JT, JV, LF, NL, NS, NU, OP, PO, PR, QU, RI, SA, SG, SP, SY, WJ, XX, ZW;

  exports.OP = OP = 0;

  exports.CL = CL = 1;

  exports.CP = CP = 2;

  exports.QU = QU = 3;

  exports.GL = GL = 4;

  exports.NS = NS = 5;

  exports.EX = EX = 6;

  exports.SY = SY = 7;

  exports.IS = IS = 8;

  exports.PR = PR = 9;

  exports.PO = PO = 10;

  exports.NU = NU = 11;

  exports.AL = AL = 12;

  exports.HL = HL = 13;

  exports.ID = ID = 14;

  exports.IN = IN = 15;

  exports.HY = HY = 16;

  exports.BA = BA = 17;

  exports.BB = BB = 18;

  exports.B2 = B2 = 19;

  exports.ZW = ZW = 20;

  exports.CM = CM = 21;

  exports.WJ = WJ = 22;

  exports.H2 = H2 = 23;

  exports.H3 = H3 = 24;

  exports.JL = JL = 25;

  exports.JV = JV = 26;

  exports.JT = JT = 27;

  exports.RI = RI = 28;

  exports.AI = AI = 29;

  exports.BK = BK = 30;

  exports.CB = CB = 31;

  exports.CJ = CJ = 32;

  exports.CR = CR = 33;

  exports.LF = LF = 34;

  exports.NL = NL = 35;

  exports.SA = SA = 36;

  exports.SG = SG = 37;

  exports.SP = SP = 38;

  exports.XX = XX = 39;

}).call(this);

},{}],204:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
(function() {
  var AI, AL, BA, BK, CB, CI_BRK, CJ, CP_BRK, CR, DI_BRK, ID, IN_BRK, LF, LineBreaker, NL, NS, PR_BRK, SA, SG, SP, UnicodeTrie, WJ, XX, characterClasses, classTrie, pairTable, _ref, _ref1;

  UnicodeTrie = require('unicode-trie');

  classTrie = new UnicodeTrie(require('./class_trie.json'));

  _ref = require('./classes'), BK = _ref.BK, CR = _ref.CR, LF = _ref.LF, NL = _ref.NL, CB = _ref.CB, BA = _ref.BA, SP = _ref.SP, WJ = _ref.WJ, SP = _ref.SP, BK = _ref.BK, LF = _ref.LF, NL = _ref.NL, AI = _ref.AI, AL = _ref.AL, SA = _ref.SA, SG = _ref.SG, XX = _ref.XX, CJ = _ref.CJ, ID = _ref.ID, NS = _ref.NS, characterClasses = _ref.characterClasses;

  _ref1 = require('./pairs'), DI_BRK = _ref1.DI_BRK, IN_BRK = _ref1.IN_BRK, CI_BRK = _ref1.CI_BRK, CP_BRK = _ref1.CP_BRK, PR_BRK = _ref1.PR_BRK, pairTable = _ref1.pairTable;

  LineBreaker = (function() {
    var Break, mapClass, mapFirst;

    function LineBreaker(string) {
      this.string = string;
      this.pos = 0;
      this.lastPos = 0;
      this.curClass = null;
      this.nextClass = null;
    }

    LineBreaker.prototype.nextCodePoint = function() {
      var code, next;
      code = this.string.charCodeAt(this.pos++);
      next = this.string.charCodeAt(this.pos);
      if ((0xd800 <= code && code <= 0xdbff) && (0xdc00 <= next && next <= 0xdfff)) {
        this.pos++;
        return ((code - 0xd800) * 0x400) + (next - 0xdc00) + 0x10000;
      }
      return code;
    };

    mapClass = function(c) {
      switch (c) {
        case AI:
          return AL;
        case SA:
        case SG:
        case XX:
          return AL;
        case CJ:
          return NS;
        default:
          return c;
      }
    };

    mapFirst = function(c) {
      switch (c) {
        case LF:
        case NL:
          return BK;
        case CB:
          return BA;
        case SP:
          return WJ;
        default:
          return c;
      }
    };

    LineBreaker.prototype.nextCharClass = function(first) {
      if (first == null) {
        first = false;
      }
      return mapClass(classTrie.get(this.nextCodePoint()));
    };

    Break = (function() {
      function Break(position, required) {
        this.position = position;
        this.required = required != null ? required : false;
      }

      return Break;

    })();

    LineBreaker.prototype.nextBreak = function() {
      var cur, lastClass, shouldBreak;
      if (this.curClass == null) {
        this.curClass = mapFirst(this.nextCharClass());
      }
      while (this.pos < this.string.length) {
        this.lastPos = this.pos;
        lastClass = this.nextClass;
        this.nextClass = this.nextCharClass();
        if (this.curClass === BK || (this.curClass === CR && this.nextClass !== LF)) {
          this.curClass = mapFirst(mapClass(this.nextClass));
          return new Break(this.lastPos, true);
        }
        cur = (function() {
          switch (this.nextClass) {
            case SP:
              return this.curClass;
            case BK:
            case LF:
            case NL:
              return BK;
            case CR:
              return CR;
            case CB:
              return BA;
          }
        }).call(this);
        if (cur != null) {
          this.curClass = cur;
          if (this.nextClass === CB) {
            return new Break(this.lastPos);
          }
          continue;
        }
        shouldBreak = false;
        switch (pairTable[this.curClass][this.nextClass]) {
          case DI_BRK:
            shouldBreak = true;
            break;
          case IN_BRK:
            shouldBreak = lastClass === SP;
            break;
          case CI_BRK:
            shouldBreak = lastClass === SP;
            if (!shouldBreak) {
              continue;
            }
            break;
          case CP_BRK:
            if (lastClass !== SP) {
              continue;
            }
        }
        this.curClass = this.nextClass;
        if (shouldBreak) {
          return new Break(this.lastPos);
        }
      }
      if (this.pos >= this.string.length) {
        if (this.lastPos < this.string.length) {
          this.lastPos = this.string.length;
          return new Break(this.string.length);
        } else {
          return null;
        }
      }
    };

    return LineBreaker;

  })();

  module.exports = LineBreaker;

}).call(this);

},{"./class_trie.json":202,"./classes":203,"./pairs":205,"unicode-trie":201}],205:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
(function() {
  var CI_BRK, CP_BRK, DI_BRK, IN_BRK, PR_BRK;

  exports.DI_BRK = DI_BRK = 0;

  exports.IN_BRK = IN_BRK = 1;

  exports.CI_BRK = CI_BRK = 2;

  exports.CP_BRK = CP_BRK = 3;

  exports.PR_BRK = PR_BRK = 4;

  exports.pairTable = [[PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, CP_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, CI_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, CI_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, DI_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, DI_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, CI_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, PR_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, CI_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK]];

}).call(this);

},{}],206:[function(require,module,exports){
(function (Buffer){
// Generated by CoffeeScript 1.4.0

/*
# MIT LICENSE
# Copyright (c) 2011 Devon Govett
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy of this 
# software and associated documentation files (the "Software"), to deal in the Software 
# without restriction, including without limitation the rights to use, copy, modify, merge, 
# publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons 
# to whom the Software is furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all copies or 
# substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING 
# BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND 
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, 
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/


(function() {
  var PNG, fs, zlib;

  fs = require('fs');

  zlib = require('zlib');

  module.exports = PNG = (function() {

    PNG.decode = function(path, fn) {
      return fs.readFile(path, function(err, file) {
        var png;
        png = new PNG(file);
        return png.decode(function(pixels) {
          return fn(pixels);
        });
      });
    };

    PNG.load = function(path) {
      var file;
      file = fs.readFileSync(path);
      return new PNG(file);
    };

    function PNG(data) {
      var chunkSize, colors, i, index, key, section, short, text, _i, _j, _ref;
      this.data = data;
      this.pos = 8;
      this.palette = [];
      this.imgData = [];
      this.transparency = {};
      this.text = {};
      while (true) {
        chunkSize = this.readUInt32();
        section = ((function() {
          var _i, _results;
          _results = [];
          for (i = _i = 0; _i < 4; i = ++_i) {
            _results.push(String.fromCharCode(this.data[this.pos++]));
          }
          return _results;
        }).call(this)).join('');
        switch (section) {
          case 'IHDR':
            this.width = this.readUInt32();
            this.height = this.readUInt32();
            this.bits = this.data[this.pos++];
            this.colorType = this.data[this.pos++];
            this.compressionMethod = this.data[this.pos++];
            this.filterMethod = this.data[this.pos++];
            this.interlaceMethod = this.data[this.pos++];
            break;
          case 'PLTE':
            this.palette = this.read(chunkSize);
            break;
          case 'IDAT':
            for (i = _i = 0; _i < chunkSize; i = _i += 1) {
              this.imgData.push(this.data[this.pos++]);
            }
            break;
          case 'tRNS':
            this.transparency = {};
            switch (this.colorType) {
              case 3:
                this.transparency.indexed = this.read(chunkSize);
                short = 255 - this.transparency.indexed.length;
                if (short > 0) {
                  for (i = _j = 0; 0 <= short ? _j < short : _j > short; i = 0 <= short ? ++_j : --_j) {
                    this.transparency.indexed.push(255);
                  }
                }
                break;
              case 0:
                this.transparency.grayscale = this.read(chunkSize)[0];
                break;
              case 2:
                this.transparency.rgb = this.read(chunkSize);
            }
            break;
          case 'tEXt':
            text = this.read(chunkSize);
            index = text.indexOf(0);
            key = String.fromCharCode.apply(String, text.slice(0, index));
            this.text[key] = String.fromCharCode.apply(String, text.slice(index + 1));
            break;
          case 'IEND':
            this.colors = (function() {
              switch (this.colorType) {
                case 0:
                case 3:
                case 4:
                  return 1;
                case 2:
                case 6:
                  return 3;
              }
            }).call(this);
            this.hasAlphaChannel = (_ref = this.colorType) === 4 || _ref === 6;
            colors = this.colors + (this.hasAlphaChannel ? 1 : 0);
            this.pixelBitlength = this.bits * colors;
            this.colorSpace = (function() {
              switch (this.colors) {
                case 1:
                  return 'DeviceGray';
                case 3:
                  return 'DeviceRGB';
              }
            }).call(this);
            this.imgData = new Buffer(this.imgData);
            return;
          default:
            this.pos += chunkSize;
        }
        this.pos += 4;
        if (this.pos > this.data.length) {
          throw new Error("Incomplete or corrupt PNG file");
        }
      }
      return;
    }

    PNG.prototype.read = function(bytes) {
      var i, _i, _results;
      _results = [];
      for (i = _i = 0; 0 <= bytes ? _i < bytes : _i > bytes; i = 0 <= bytes ? ++_i : --_i) {
        _results.push(this.data[this.pos++]);
      }
      return _results;
    };

    PNG.prototype.readUInt32 = function() {
      var b1, b2, b3, b4;
      b1 = this.data[this.pos++] << 24;
      b2 = this.data[this.pos++] << 16;
      b3 = this.data[this.pos++] << 8;
      b4 = this.data[this.pos++];
      return b1 | b2 | b3 | b4;
    };

    PNG.prototype.readUInt16 = function() {
      var b1, b2;
      b1 = this.data[this.pos++] << 8;
      b2 = this.data[this.pos++];
      return b1 | b2;
    };

    PNG.prototype.decodePixels = function(fn) {
      var _this = this;
      return zlib.inflate(this.imgData, function(err, data) {
        var byte, c, col, i, left, length, p, pa, paeth, pb, pc, pixelBytes, pixels, pos, row, scanlineLength, upper, upperLeft, _i, _j, _k, _l, _m;
        if (err) {
          throw err;
        }
        pixelBytes = _this.pixelBitlength / 8;
        scanlineLength = pixelBytes * _this.width;
        pixels = new Buffer(scanlineLength * _this.height);
        length = data.length;
        row = 0;
        pos = 0;
        c = 0;
        while (pos < length) {
          switch (data[pos++]) {
            case 0:
              for (i = _i = 0; _i < scanlineLength; i = _i += 1) {
                pixels[c++] = data[pos++];
              }
              break;
            case 1:
              for (i = _j = 0; _j < scanlineLength; i = _j += 1) {
                byte = data[pos++];
                left = i < pixelBytes ? 0 : pixels[c - pixelBytes];
                pixels[c++] = (byte + left) % 256;
              }
              break;
            case 2:
              for (i = _k = 0; _k < scanlineLength; i = _k += 1) {
                byte = data[pos++];
                col = (i - (i % pixelBytes)) / pixelBytes;
                upper = row && pixels[(row - 1) * scanlineLength + col * pixelBytes + (i % pixelBytes)];
                pixels[c++] = (upper + byte) % 256;
              }
              break;
            case 3:
              for (i = _l = 0; _l < scanlineLength; i = _l += 1) {
                byte = data[pos++];
                col = (i - (i % pixelBytes)) / pixelBytes;
                left = i < pixelBytes ? 0 : pixels[c - pixelBytes];
                upper = row && pixels[(row - 1) * scanlineLength + col * pixelBytes + (i % pixelBytes)];
                pixels[c++] = (byte + Math.floor((left + upper) / 2)) % 256;
              }
              break;
            case 4:
              for (i = _m = 0; _m < scanlineLength; i = _m += 1) {
                byte = data[pos++];
                col = (i - (i % pixelBytes)) / pixelBytes;
                left = i < pixelBytes ? 0 : pixels[c - pixelBytes];
                if (row === 0) {
                  upper = upperLeft = 0;
                } else {
                  upper = pixels[(row - 1) * scanlineLength + col * pixelBytes + (i % pixelBytes)];
                  upperLeft = col && pixels[(row - 1) * scanlineLength + (col - 1) * pixelBytes + (i % pixelBytes)];
                }
                p = left + upper - upperLeft;
                pa = Math.abs(p - left);
                pb = Math.abs(p - upper);
                pc = Math.abs(p - upperLeft);
                if (pa <= pb && pa <= pc) {
                  paeth = left;
                } else if (pb <= pc) {
                  paeth = upper;
                } else {
                  paeth = upperLeft;
                }
                pixels[c++] = (byte + paeth) % 256;
              }
              break;
            default:
              throw new Error("Invalid filter algorithm: " + data[pos - 1]);
          }
          row++;
        }
        return fn(pixels);
      });
    };

    PNG.prototype.decodePalette = function() {
      var c, i, length, palette, pos, ret, transparency, _i, _ref, _ref1;
      palette = this.palette;
      transparency = this.transparency.indexed || [];
      ret = new Buffer(transparency.length + palette.length);
      pos = 0;
      length = palette.length;
      c = 0;
      for (i = _i = 0, _ref = palette.length; _i < _ref; i = _i += 3) {
        ret[pos++] = palette[i];
        ret[pos++] = palette[i + 1];
        ret[pos++] = palette[i + 2];
        ret[pos++] = (_ref1 = transparency[c++]) != null ? _ref1 : 255;
      }
      return ret;
    };

    PNG.prototype.copyToImageData = function(imageData, pixels) {
      var alpha, colors, data, i, input, j, k, length, palette, v, _ref;
      colors = this.colors;
      palette = null;
      alpha = this.hasAlphaChannel;
      if (this.palette.length) {
        palette = (_ref = this._decodedPalette) != null ? _ref : this._decodedPalette = this.decodePalette();
        colors = 4;
        alpha = true;
      }
      data = (imageData != null ? imageData.data : void 0) || imageData;
      length = data.length;
      input = palette || pixels;
      i = j = 0;
      if (colors === 1) {
        while (i < length) {
          k = palette ? pixels[i / 4] * 4 : j;
          v = input[k++];
          data[i++] = v;
          data[i++] = v;
          data[i++] = v;
          data[i++] = alpha ? input[k++] : 255;
          j = k;
        }
      } else {
        while (i < length) {
          k = palette ? pixels[i / 4] * 4 : j;
          data[i++] = input[k++];
          data[i++] = input[k++];
          data[i++] = input[k++];
          data[i++] = alpha ? input[k++] : 255;
          j = k;
        }
      }
    };

    PNG.prototype.decode = function(fn) {
      var ret,
        _this = this;
      ret = new Buffer(this.width * this.height * 4);
      return this.decodePixels(function(pixels) {
        _this.copyToImageData(ret, pixels);
        return fn(ret);
      });
    };

    return PNG;

  })();

}).call(this);

}).call(this,require("buffer").Buffer)
},{"buffer":17,"fs":1,"zlib":16}]},{},[42]);
